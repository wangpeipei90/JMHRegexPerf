https://github.com/mozilla/source-map/pull/152---JavaScript
https://jsperf.com/newline-normalization-and-char-array

regex find all --string charAt, replace+split

chunk.match(REGEX_CHARACTER).forEach(function (ch, idx, array) {
        if (REGEX_NEWLINE.test(ch)) {

for (var idx = 0, length = chunk.length; idx < length; idx++) {
        if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
//https://github.com/mozilla/source-map/pull/152/files

chunk.replace("\r\n","\n").split('').forEach(function (ch, idx, array) {
        if (ch === "\r\n" || ch === "\n")
        or
        if (ch === "\n")
//https://github.com/mozilla/source-map/commit/0c4c73720c7b040bbdcda8680fe74e939dcee793
//Use faster regex to globally replace & split

var REGEX_WIN_NEWLINE = /\r\n/g;
chunk.replace(REGEX_WIN_NEWLINE, "\n").split('').forEach(function (ch, idx, array) {
        if (ch === "\r\n" || ch === "\n") {
//https://github.com/mozilla/source-map/commit/0c4c73720c7b040bbdcda8680fe74e939dcee793#diff-8cfce8f7fbf22d65d02def19eefb2b7e
