# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = '}>[U4d;)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 179.235 ns/op
# Warmup Iteration   2: 103.135 ns/op
# Warmup Iteration   3: 99.100 ns/op
# Warmup Iteration   4: 99.056 ns/op
# Warmup Iteration   5: 98.886 ns/op
Iteration   1: 97.110 ns/op
Iteration   2: 96.688 ns/op
Iteration   3: 97.035 ns/op
Iteration   4: 96.630 ns/op
Iteration   5: 97.219 ns/op
Iteration   6: 96.558 ns/op
Iteration   7: 96.415 ns/op
Iteration   8: 96.522 ns/op
Iteration   9: 96.537 ns/op
Iteration  10: 96.348 ns/op
Iteration  11: 96.583 ns/op
Iteration  12: 96.534 ns/op
Iteration  13: 96.594 ns/op
Iteration  14: 96.999 ns/op
Iteration  15: 96.488 ns/op
Iteration  16: 96.843 ns/op
Iteration  17: 96.593 ns/op
Iteration  18: 97.624 ns/op
Iteration  19: 97.654 ns/op
Iteration  20: 96.703 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 176.253 ns/op
# Warmup Iteration   2: 103.287 ns/op
# Warmup Iteration   3: 99.711 ns/op
# Warmup Iteration   4: 99.059 ns/op
# Warmup Iteration   5: 99.307 ns/op
Iteration   1: 97.187 ns/op
Iteration   2: 96.802 ns/op
Iteration   3: 97.279 ns/op
Iteration   4: 96.934 ns/op
Iteration   5: 98.031 ns/op
Iteration   6: 96.647 ns/op
Iteration   7: 96.545 ns/op
Iteration   8: 96.674 ns/op
Iteration   9: 96.674 ns/op
Iteration  10: 96.748 ns/op
Iteration  11: 96.714 ns/op
Iteration  12: 96.665 ns/op
Iteration  13: 97.023 ns/op
Iteration  14: 97.464 ns/op
Iteration  15: 96.785 ns/op
Iteration  16: 97.323 ns/op
Iteration  17: 96.578 ns/op
Iteration  18: 97.218 ns/op
Iteration  19: 97.219 ns/op
Iteration  20: 96.810 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.594 ns/op
# Warmup Iteration   2: 102.798 ns/op
# Warmup Iteration   3: 99.068 ns/op
# Warmup Iteration   4: 99.123 ns/op
# Warmup Iteration   5: 99.063 ns/op
Iteration   1: 97.165 ns/op
Iteration   2: 96.520 ns/op
Iteration   3: 96.950 ns/op
Iteration   4: 96.495 ns/op
Iteration   5: 96.934 ns/op
Iteration   6: 97.200 ns/op
Iteration   7: 96.286 ns/op
Iteration   8: 96.460 ns/op
Iteration   9: 96.491 ns/op
Iteration  10: 96.353 ns/op
Iteration  11: 96.525 ns/op
Iteration  12: 96.510 ns/op
Iteration  13: 96.718 ns/op
Iteration  14: 96.645 ns/op
Iteration  15: 96.504 ns/op
Iteration  16: 96.758 ns/op
Iteration  17: 96.482 ns/op
Iteration  18: 96.699 ns/op
Iteration  19: 97.148 ns/op
Iteration  20: 96.567 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 177.376 ns/op
# Warmup Iteration   2: 104.925 ns/op
# Warmup Iteration   3: 100.495 ns/op
# Warmup Iteration   4: 99.629 ns/op
# Warmup Iteration   5: 101.538 ns/op
Iteration   1: 98.972 ns/op
Iteration   2: 98.637 ns/op
Iteration   3: 98.816 ns/op
Iteration   4: 97.852 ns/op
Iteration   5: 98.257 ns/op
Iteration   6: 97.800 ns/op
Iteration   7: 98.337 ns/op
Iteration   8: 98.523 ns/op
Iteration   9: 97.553 ns/op
Iteration  10: 98.900 ns/op
Iteration  11: 97.847 ns/op
Iteration  12: 97.860 ns/op
Iteration  13: 97.872 ns/op
Iteration  14: 97.651 ns/op
Iteration  15: 98.074 ns/op
Iteration  16: 97.674 ns/op
Iteration  17: 97.920 ns/op
Iteration  18: 97.893 ns/op
Iteration  19: 97.701 ns/op
Iteration  20: 98.176 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 177.760 ns/op
# Warmup Iteration   2: 104.014 ns/op
# Warmup Iteration   3: 100.064 ns/op
# Warmup Iteration   4: 99.409 ns/op
# Warmup Iteration   5: 100.297 ns/op
Iteration   1: 97.996 ns/op
Iteration   2: 97.547 ns/op
Iteration   3: 98.000 ns/op
Iteration   4: 97.523 ns/op
Iteration   5: 97.987 ns/op
Iteration   6: 98.444 ns/op
Iteration   7: 97.260 ns/op
Iteration   8: 97.702 ns/op
Iteration   9: 97.309 ns/op
Iteration  10: 97.427 ns/op
Iteration  11: 97.686 ns/op
Iteration  12: 97.237 ns/op
Iteration  13: 97.546 ns/op
Iteration  14: 97.367 ns/op
Iteration  15: 97.674 ns/op
Iteration  16: 97.902 ns/op
Iteration  17: 97.464 ns/op
Iteration  18: 98.141 ns/op
Iteration  19: 97.580 ns/op
Iteration  20: 98.166 ns/op


Result "benchmark.StringContains.regexMatches":
  97.247 ±(99.9%) 0.227 ns/op [Average]
  (min, avg, max) = (96.286, 97.247, 98.972), stdev = 0.669
  CI (99.9%): [97.020, 97.474] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = '}>[U4d;)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.433 ns/op
# Warmup Iteration   2: 9.143 ns/op
# Warmup Iteration   3: 8.968 ns/op
# Warmup Iteration   4: 8.969 ns/op
# Warmup Iteration   5: 8.967 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.969 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.969 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.971 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.501 ns/op
# Warmup Iteration   2: 8.966 ns/op
# Warmup Iteration   3: 9.022 ns/op
# Warmup Iteration   4: 9.014 ns/op
# Warmup Iteration   5: 9.014 ns/op
Iteration   1: 9.013 ns/op
Iteration   2: 9.012 ns/op
Iteration   3: 9.100 ns/op
Iteration   4: 9.015 ns/op
Iteration   5: 9.011 ns/op
Iteration   6: 9.015 ns/op
Iteration   7: 9.012 ns/op
Iteration   8: 9.011 ns/op
Iteration   9: 9.011 ns/op
Iteration  10: 9.012 ns/op
Iteration  11: 9.013 ns/op
Iteration  12: 9.014 ns/op
Iteration  13: 9.009 ns/op
Iteration  14: 9.018 ns/op
Iteration  15: 9.019 ns/op
Iteration  16: 9.011 ns/op
Iteration  17: 9.012 ns/op
Iteration  18: 9.010 ns/op
Iteration  19: 9.012 ns/op
Iteration  20: 9.013 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.500 ns/op
# Warmup Iteration   2: 8.964 ns/op
# Warmup Iteration   3: 9.011 ns/op
# Warmup Iteration   4: 9.008 ns/op
# Warmup Iteration   5: 9.014 ns/op
Iteration   1: 9.011 ns/op
Iteration   2: 9.011 ns/op
Iteration   3: 9.013 ns/op
Iteration   4: 9.013 ns/op
Iteration   5: 9.014 ns/op
Iteration   6: 9.011 ns/op
Iteration   7: 9.014 ns/op
Iteration   8: 9.013 ns/op
Iteration   9: 9.012 ns/op
Iteration  10: 9.010 ns/op
Iteration  11: 9.012 ns/op
Iteration  12: 9.011 ns/op
Iteration  13: 9.010 ns/op
Iteration  14: 9.012 ns/op
Iteration  15: 9.012 ns/op
Iteration  16: 9.011 ns/op
Iteration  17: 9.025 ns/op
Iteration  18: 9.010 ns/op
Iteration  19: 9.009 ns/op
Iteration  20: 9.011 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.467 ns/op
# Warmup Iteration   2: 9.062 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.963 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.962 ns/op
Iteration   2: 8.963 ns/op
Iteration   3: 8.971 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.978 ns/op
Iteration   9: 8.960 ns/op
Iteration  10: 8.961 ns/op
Iteration  11: 8.962 ns/op
Iteration  12: 8.962 ns/op
Iteration  13: 8.962 ns/op
Iteration  14: 8.961 ns/op
Iteration  15: 8.963 ns/op
Iteration  16: 8.960 ns/op
Iteration  17: 9.036 ns/op
Iteration  18: 8.997 ns/op
Iteration  19: 9.098 ns/op
Iteration  20: 9.054 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.456 ns/op
# Warmup Iteration   2: 9.055 ns/op
# Warmup Iteration   3: 8.959 ns/op
# Warmup Iteration   4: 8.960 ns/op
# Warmup Iteration   5: 8.959 ns/op
Iteration   1: 8.958 ns/op
Iteration   2: 8.961 ns/op
Iteration   3: 8.961 ns/op
Iteration   4: 8.961 ns/op
Iteration   5: 8.961 ns/op
Iteration   6: 8.959 ns/op
Iteration   7: 8.961 ns/op
Iteration   8: 8.963 ns/op
Iteration   9: 8.961 ns/op
Iteration  10: 8.961 ns/op
Iteration  11: 8.959 ns/op
Iteration  12: 8.958 ns/op
Iteration  13: 8.962 ns/op
Iteration  14: 8.959 ns/op
Iteration  15: 8.960 ns/op
Iteration  16: 8.958 ns/op
Iteration  17: 8.958 ns/op
Iteration  18: 8.956 ns/op
Iteration  19: 8.958 ns/op
Iteration  20: 8.957 ns/op


Result "benchmark.StringContains.stringContains":
  8.987 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (8.956, 8.987, 9.100), stdev = 0.030
  CI (99.9%): [8.977, 8.997] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  '}>[U4d;  avgt  100  97.247 ± 0.227  ns/op
StringContains.stringContains     http  '}>[U4d;  avgt  100   8.987 ± 0.010  ns/op

Benchmark result is saved to http_8_1_0.csv
