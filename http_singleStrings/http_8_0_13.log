# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http2OBv)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 242.369 ns/op
# Warmup Iteration   2: 188.078 ns/op
# Warmup Iteration   3: 158.091 ns/op
# Warmup Iteration   4: 158.616 ns/op
# Warmup Iteration   5: 159.310 ns/op
Iteration   1: 160.230 ns/op
Iteration   2: 161.256 ns/op
Iteration   3: 157.277 ns/op
Iteration   4: 157.193 ns/op
Iteration   5: 157.266 ns/op
Iteration   6: 158.131 ns/op
Iteration   7: 157.434 ns/op
Iteration   8: 157.472 ns/op
Iteration   9: 157.646 ns/op
Iteration  10: 157.337 ns/op
Iteration  11: 157.365 ns/op
Iteration  12: 157.179 ns/op
Iteration  13: 156.900 ns/op
Iteration  14: 156.817 ns/op
Iteration  15: 156.810 ns/op
Iteration  16: 157.188 ns/op
Iteration  17: 156.982 ns/op
Iteration  18: 157.094 ns/op
Iteration  19: 156.965 ns/op
Iteration  20: 157.069 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 255.324 ns/op
# Warmup Iteration   2: 201.079 ns/op
# Warmup Iteration   3: 181.743 ns/op
# Warmup Iteration   4: 182.388 ns/op
# Warmup Iteration   5: 182.939 ns/op
Iteration   1: 183.862 ns/op
Iteration   2: 185.181 ns/op
Iteration   3: 179.920 ns/op
Iteration   4: 180.572 ns/op
Iteration   5: 180.876 ns/op
Iteration   6: 180.948 ns/op
Iteration   7: 180.915 ns/op
Iteration   8: 180.873 ns/op
Iteration   9: 180.811 ns/op
Iteration  10: 179.936 ns/op
Iteration  11: 180.858 ns/op
Iteration  12: 180.845 ns/op
Iteration  13: 180.943 ns/op
Iteration  14: 180.622 ns/op
Iteration  15: 181.152 ns/op
Iteration  16: 180.731 ns/op
Iteration  17: 180.485 ns/op
Iteration  18: 179.992 ns/op
Iteration  19: 180.547 ns/op
Iteration  20: 181.155 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 243.829 ns/op
# Warmup Iteration   2: 188.422 ns/op
# Warmup Iteration   3: 158.794 ns/op
# Warmup Iteration   4: 159.277 ns/op
# Warmup Iteration   5: 159.995 ns/op
Iteration   1: 160.643 ns/op
Iteration   2: 161.844 ns/op
Iteration   3: 158.012 ns/op
Iteration   4: 157.939 ns/op
Iteration   5: 157.910 ns/op
Iteration   6: 157.844 ns/op
Iteration   7: 157.686 ns/op
Iteration   8: 157.810 ns/op
Iteration   9: 157.918 ns/op
Iteration  10: 158.022 ns/op
Iteration  11: 158.045 ns/op
Iteration  12: 157.515 ns/op
Iteration  13: 157.517 ns/op
Iteration  14: 157.563 ns/op
Iteration  15: 157.984 ns/op
Iteration  16: 157.954 ns/op
Iteration  17: 157.704 ns/op
Iteration  18: 157.535 ns/op
Iteration  19: 157.608 ns/op
Iteration  20: 157.709 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 236.962 ns/op
# Warmup Iteration   2: 181.323 ns/op
# Warmup Iteration   3: 154.608 ns/op
# Warmup Iteration   4: 154.965 ns/op
# Warmup Iteration   5: 156.281 ns/op
Iteration   1: 156.913 ns/op
Iteration   2: 156.706 ns/op
Iteration   3: 153.564 ns/op
Iteration   4: 153.484 ns/op
Iteration   5: 154.488 ns/op
Iteration   6: 153.698 ns/op
Iteration   7: 153.833 ns/op
Iteration   8: 153.818 ns/op
Iteration   9: 153.784 ns/op
Iteration  10: 153.758 ns/op
Iteration  11: 153.159 ns/op
Iteration  12: 153.352 ns/op
Iteration  13: 153.365 ns/op
Iteration  14: 153.373 ns/op
Iteration  15: 153.399 ns/op
Iteration  16: 153.478 ns/op
Iteration  17: 153.441 ns/op
Iteration  18: 153.432 ns/op
Iteration  19: 153.412 ns/op
Iteration  20: 153.494 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 240.183 ns/op
# Warmup Iteration   2: 185.622 ns/op
# Warmup Iteration   3: 158.008 ns/op
# Warmup Iteration   4: 158.532 ns/op
# Warmup Iteration   5: 159.146 ns/op
Iteration   1: 159.966 ns/op
Iteration   2: 161.107 ns/op
Iteration   3: 157.193 ns/op
Iteration   4: 157.341 ns/op
Iteration   5: 157.355 ns/op
Iteration   6: 158.674 ns/op
Iteration   7: 157.485 ns/op
Iteration   8: 157.467 ns/op
Iteration   9: 157.847 ns/op
Iteration  10: 157.255 ns/op
Iteration  11: 157.628 ns/op
Iteration  12: 157.001 ns/op
Iteration  13: 156.795 ns/op
Iteration  14: 156.976 ns/op
Iteration  15: 156.871 ns/op
Iteration  16: 156.886 ns/op
Iteration  17: 156.797 ns/op
Iteration  18: 156.892 ns/op
Iteration  19: 156.906 ns/op
Iteration  20: 157.030 ns/op


Result "benchmark.StringContains.regexMatches":
  161.650 ±(99.9%) 3.369 ns/op [Average]
  (min, avg, max) = (153.159, 161.650, 185.181), stdev = 9.934
  CI (99.9%): [158.281, 165.019] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http2OBv)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.457 ns/op
# Warmup Iteration   2: 10.451 ns/op
# Warmup Iteration   3: 9.882 ns/op
# Warmup Iteration   4: 9.889 ns/op
# Warmup Iteration   5: 9.895 ns/op
Iteration   1: 9.880 ns/op
Iteration   2: 9.902 ns/op
Iteration   3: 9.879 ns/op
Iteration   4: 9.877 ns/op
Iteration   5: 9.884 ns/op
Iteration   6: 9.888 ns/op
Iteration   7: 9.876 ns/op
Iteration   8: 9.880 ns/op
Iteration   9: 9.886 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.887 ns/op
Iteration  12: 9.886 ns/op
Iteration  13: 9.885 ns/op
Iteration  14: 9.902 ns/op
Iteration  15: 9.886 ns/op
Iteration  16: 9.865 ns/op
Iteration  17: 9.885 ns/op
Iteration  18: 9.876 ns/op
Iteration  19: 9.888 ns/op
Iteration  20: 9.887 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.480 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 10.032 ns/op
# Warmup Iteration   4: 10.046 ns/op
# Warmup Iteration   5: 10.033 ns/op
Iteration   1: 10.074 ns/op
Iteration   2: 10.032 ns/op
Iteration   3: 10.072 ns/op
Iteration   4: 10.046 ns/op
Iteration   5: 10.085 ns/op
Iteration   6: 10.069 ns/op
Iteration   7: 10.058 ns/op
Iteration   8: 10.021 ns/op
Iteration   9: 10.024 ns/op
Iteration  10: 10.077 ns/op
Iteration  11: 10.075 ns/op
Iteration  12: 10.067 ns/op
Iteration  13: 10.073 ns/op
Iteration  14: 10.060 ns/op
Iteration  15: 10.019 ns/op
Iteration  16: 10.040 ns/op
Iteration  17: 10.055 ns/op
Iteration  18: 10.043 ns/op
Iteration  19: 10.057 ns/op
Iteration  20: 10.122 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.073 ns/op
# Warmup Iteration   2: 10.512 ns/op
# Warmup Iteration   3: 10.037 ns/op
# Warmup Iteration   4: 10.040 ns/op
# Warmup Iteration   5: 10.029 ns/op
Iteration   1: 10.017 ns/op
Iteration   2: 10.006 ns/op
Iteration   3: 10.002 ns/op
Iteration   4: 10.003 ns/op
Iteration   5: 10.002 ns/op
Iteration   6: 10.010 ns/op
Iteration   7: 10.001 ns/op
Iteration   8: 10.038 ns/op
Iteration   9: 10.036 ns/op
Iteration  10: 10.017 ns/op
Iteration  11: 9.989 ns/op
Iteration  12: 10.031 ns/op
Iteration  13: 10.008 ns/op
Iteration  14: 10.011 ns/op
Iteration  15: 10.005 ns/op
Iteration  16: 9.997 ns/op
Iteration  17: 10.024 ns/op
Iteration  18: 10.015 ns/op
Iteration  19: 9.991 ns/op
Iteration  20: 10.012 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.087 ns/op
# Warmup Iteration   2: 10.472 ns/op
# Warmup Iteration   3: 9.899 ns/op
# Warmup Iteration   4: 9.903 ns/op
# Warmup Iteration   5: 9.872 ns/op
Iteration   1: 9.903 ns/op
Iteration   2: 9.887 ns/op
Iteration   3: 9.896 ns/op
Iteration   4: 9.874 ns/op
Iteration   5: 9.892 ns/op
Iteration   6: 9.895 ns/op
Iteration   7: 9.906 ns/op
Iteration   8: 9.926 ns/op
Iteration   9: 9.916 ns/op
Iteration  10: 9.905 ns/op
Iteration  11: 9.903 ns/op
Iteration  12: 9.893 ns/op
Iteration  13: 9.898 ns/op
Iteration  14: 9.899 ns/op
Iteration  15: 9.881 ns/op
Iteration  16: 9.902 ns/op
Iteration  17: 9.901 ns/op
Iteration  18: 9.913 ns/op
Iteration  19: 9.889 ns/op
Iteration  20: 9.900 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.039 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 10.048 ns/op
# Warmup Iteration   4: 10.059 ns/op
# Warmup Iteration   5: 10.052 ns/op
Iteration   1: 10.036 ns/op
Iteration   2: 10.033 ns/op
Iteration   3: 10.062 ns/op
Iteration   4: 10.086 ns/op
Iteration   5: 10.074 ns/op
Iteration   6: 10.064 ns/op
Iteration   7: 10.054 ns/op
Iteration   8: 10.053 ns/op
Iteration   9: 10.055 ns/op
Iteration  10: 10.050 ns/op
Iteration  11: 10.056 ns/op
Iteration  12: 10.063 ns/op
Iteration  13: 10.066 ns/op
Iteration  14: 10.057 ns/op
Iteration  15: 10.062 ns/op
Iteration  16: 10.089 ns/op
Iteration  17: 10.064 ns/op
Iteration  18: 10.042 ns/op
Iteration  19: 10.059 ns/op
Iteration  20: 10.038 ns/op


Result "benchmark.StringContains.stringContains":
  9.982 ±(99.9%) 0.026 ns/op [Average]
  (min, avg, max) = (9.865, 9.982, 10.122), stdev = 0.078
  CI (99.9%): [9.956, 10.008] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http2OBv  avgt  100  161.650 ± 3.369  ns/op
StringContains.stringContains     http  http2OBv  avgt  100    9.982 ± 0.026  ns/op

Benchmark result is saved to http_8_0_13.csv
