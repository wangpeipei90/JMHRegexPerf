# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = {d6'nr{phttpZxAf\$98Rd;e&r=7}==,)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 429.968 ns/op
# Warmup Iteration   2: 430.586 ns/op
# Warmup Iteration   3: 430.663 ns/op
# Warmup Iteration   4: 379.526 ns/op
# Warmup Iteration   5: 382.947 ns/op
Iteration   1: 379.236 ns/op
Iteration   2: 384.053 ns/op
Iteration   3: 379.361 ns/op
Iteration   4: 379.195 ns/op
Iteration   5: 386.513 ns/op
Iteration   6: 379.276 ns/op
Iteration   7: 389.003 ns/op
Iteration   8: 379.420 ns/op
Iteration   9: 392.019 ns/op
Iteration  10: 379.775 ns/op
Iteration  11: 379.952 ns/op
Iteration  12: 381.743 ns/op
Iteration  13: 379.578 ns/op
Iteration  14: 380.716 ns/op
Iteration  15: 379.274 ns/op
Iteration  16: 379.523 ns/op
Iteration  17: 381.214 ns/op
Iteration  18: 379.364 ns/op
Iteration  19: 381.273 ns/op
Iteration  20: 379.315 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 345.060 ns/op
# Warmup Iteration   2: 329.148 ns/op
# Warmup Iteration   3: 250.554 ns/op
# Warmup Iteration   4: 249.747 ns/op
# Warmup Iteration   5: 250.578 ns/op
Iteration   1: 247.453 ns/op
Iteration   2: 251.481 ns/op
Iteration   3: 253.072 ns/op
Iteration   4: 247.511 ns/op
Iteration   5: 254.503 ns/op
Iteration   6: 247.695 ns/op
Iteration   7: 248.664 ns/op
Iteration   8: 248.756 ns/op
Iteration   9: 247.522 ns/op
Iteration  10: 248.532 ns/op
Iteration  11: 248.727 ns/op
Iteration  12: 247.444 ns/op
Iteration  13: 248.557 ns/op
Iteration  14: 247.379 ns/op
Iteration  15: 248.454 ns/op
Iteration  16: 248.375 ns/op
Iteration  17: 247.115 ns/op
Iteration  18: 248.673 ns/op
Iteration  19: 248.607 ns/op
Iteration  20: 247.242 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 399.418 ns/op
# Warmup Iteration   2: 383.921 ns/op
# Warmup Iteration   3: 327.868 ns/op
# Warmup Iteration   4: 301.844 ns/op
# Warmup Iteration   5: 304.741 ns/op
Iteration   1: 305.703 ns/op
Iteration   2: 301.955 ns/op
Iteration   3: 306.996 ns/op
Iteration   4: 301.866 ns/op
Iteration   5: 308.952 ns/op
Iteration   6: 301.780 ns/op
Iteration   7: 310.274 ns/op
Iteration   8: 301.784 ns/op
Iteration   9: 304.906 ns/op
Iteration  10: 301.752 ns/op
Iteration  11: 303.504 ns/op
Iteration  12: 301.834 ns/op
Iteration  13: 303.640 ns/op
Iteration  14: 301.929 ns/op
Iteration  15: 303.524 ns/op
Iteration  16: 301.798 ns/op
Iteration  17: 303.519 ns/op
Iteration  18: 302.147 ns/op
Iteration  19: 303.447 ns/op
Iteration  20: 303.570 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 432.069 ns/op
# Warmup Iteration   2: 436.480 ns/op
# Warmup Iteration   3: 407.616 ns/op
# Warmup Iteration   4: 360.593 ns/op
# Warmup Iteration   5: 363.949 ns/op
Iteration   1: 360.501 ns/op
Iteration   2: 365.178 ns/op
Iteration   3: 360.703 ns/op
Iteration   4: 367.156 ns/op
Iteration   5: 360.675 ns/op
Iteration   6: 361.505 ns/op
Iteration   7: 368.165 ns/op
Iteration   8: 360.665 ns/op
Iteration   9: 371.104 ns/op
Iteration  10: 360.728 ns/op
Iteration  11: 362.357 ns/op
Iteration  12: 360.791 ns/op
Iteration  13: 360.634 ns/op
Iteration  14: 362.349 ns/op
Iteration  15: 360.528 ns/op
Iteration  16: 362.456 ns/op
Iteration  17: 360.393 ns/op
Iteration  18: 362.184 ns/op
Iteration  19: 360.418 ns/op
Iteration  20: 360.713 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 427.466 ns/op
# Warmup Iteration   2: 436.652 ns/op
# Warmup Iteration   3: 403.997 ns/op
# Warmup Iteration   4: 359.431 ns/op
# Warmup Iteration   5: 363.163 ns/op
Iteration   1: 361.195 ns/op
Iteration   2: 365.088 ns/op
Iteration   3: 359.457 ns/op
Iteration   4: 365.289 ns/op
Iteration   5: 359.272 ns/op
Iteration   6: 367.160 ns/op
Iteration   7: 359.509 ns/op
Iteration   8: 359.418 ns/op
Iteration   9: 369.183 ns/op
Iteration  10: 359.210 ns/op
Iteration  11: 361.977 ns/op
Iteration  12: 359.182 ns/op
Iteration  13: 361.302 ns/op
Iteration  14: 359.350 ns/op
Iteration  15: 359.134 ns/op
Iteration  16: 361.103 ns/op
Iteration  17: 358.984 ns/op
Iteration  18: 361.260 ns/op
Iteration  19: 358.975 ns/op
Iteration  20: 361.102 ns/op


Result "benchmark.StringContains.regexMatches":
  331.568 ±(99.9%) 16.699 ns/op [Average]
  (min, avg, max) = (247.115, 331.568, 392.019), stdev = 49.237
  CI (99.9%): [314.869, 348.267] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = {d6'nr{phttpZxAf\$98Rd;e&r=7}==,)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.223 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.861 ns/op
# Warmup Iteration   4: 9.861 ns/op
# Warmup Iteration   5: 9.862 ns/op
Iteration   1: 9.859 ns/op
Iteration   2: 9.866 ns/op
Iteration   3: 9.863 ns/op
Iteration   4: 9.850 ns/op
Iteration   5: 9.863 ns/op
Iteration   6: 9.866 ns/op
Iteration   7: 9.864 ns/op
Iteration   8: 9.867 ns/op
Iteration   9: 9.879 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.861 ns/op
Iteration  12: 9.866 ns/op
Iteration  13: 9.877 ns/op
Iteration  14: 9.852 ns/op
Iteration  15: 9.851 ns/op
Iteration  16: 9.858 ns/op
Iteration  17: 9.851 ns/op
Iteration  18: 9.855 ns/op
Iteration  19: 9.842 ns/op
Iteration  20: 9.850 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.217 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.880 ns/op
# Warmup Iteration   4: 9.874 ns/op
# Warmup Iteration   5: 9.880 ns/op
Iteration   1: 9.877 ns/op
Iteration   2: 9.878 ns/op
Iteration   3: 9.887 ns/op
Iteration   4: 9.896 ns/op
Iteration   5: 9.877 ns/op
Iteration   6: 9.865 ns/op
Iteration   7: 9.884 ns/op
Iteration   8: 9.869 ns/op
Iteration   9: 9.874 ns/op
Iteration  10: 9.877 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 9.864 ns/op
Iteration  13: 9.859 ns/op
Iteration  14: 9.886 ns/op
Iteration  15: 9.872 ns/op
Iteration  16: 9.865 ns/op
Iteration  17: 9.881 ns/op
Iteration  18: 9.873 ns/op
Iteration  19: 9.877 ns/op
Iteration  20: 9.881 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.222 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.844 ns/op
# Warmup Iteration   4: 9.870 ns/op
# Warmup Iteration   5: 9.865 ns/op
Iteration   1: 9.869 ns/op
Iteration   2: 9.859 ns/op
Iteration   3: 9.886 ns/op
Iteration   4: 9.872 ns/op
Iteration   5: 9.871 ns/op
Iteration   6: 9.886 ns/op
Iteration   7: 9.885 ns/op
Iteration   8: 9.872 ns/op
Iteration   9: 9.864 ns/op
Iteration  10: 9.859 ns/op
Iteration  11: 9.873 ns/op
Iteration  12: 9.876 ns/op
Iteration  13: 9.870 ns/op
Iteration  14: 9.860 ns/op
Iteration  15: 9.863 ns/op
Iteration  16: 9.861 ns/op
Iteration  17: 9.873 ns/op
Iteration  18: 9.863 ns/op
Iteration  19: 9.861 ns/op
Iteration  20: 9.859 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.445 ns/op
# Warmup Iteration   2: 9.733 ns/op
# Warmup Iteration   3: 9.844 ns/op
# Warmup Iteration   4: 9.843 ns/op
# Warmup Iteration   5: 9.845 ns/op
Iteration   1: 9.859 ns/op
Iteration   2: 9.850 ns/op
Iteration   3: 9.860 ns/op
Iteration   4: 9.867 ns/op
Iteration   5: 9.863 ns/op
Iteration   6: 9.869 ns/op
Iteration   7: 9.879 ns/op
Iteration   8: 9.878 ns/op
Iteration   9: 9.867 ns/op
Iteration  10: 9.874 ns/op
Iteration  11: 9.852 ns/op
Iteration  12: 9.848 ns/op
Iteration  13: 9.860 ns/op
Iteration  14: 9.857 ns/op
Iteration  15: 9.860 ns/op
Iteration  16: 9.860 ns/op
Iteration  17: 9.872 ns/op
Iteration  18: 9.871 ns/op
Iteration  19: 9.874 ns/op
Iteration  20: 9.872 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.460 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.873 ns/op
# Warmup Iteration   4: 9.880 ns/op
# Warmup Iteration   5: 9.876 ns/op
Iteration   1: 9.883 ns/op
Iteration   2: 9.864 ns/op
Iteration   3: 9.879 ns/op
Iteration   4: 9.887 ns/op
Iteration   5: 9.886 ns/op
Iteration   6: 9.887 ns/op
Iteration   7: 9.902 ns/op
Iteration   8: 9.894 ns/op
Iteration   9: 9.895 ns/op
Iteration  10: 9.903 ns/op
Iteration  11: 9.886 ns/op
Iteration  12: 9.902 ns/op
Iteration  13: 9.899 ns/op
Iteration  14: 9.854 ns/op
Iteration  15: 9.860 ns/op
Iteration  16: 9.892 ns/op
Iteration  17: 9.849 ns/op
Iteration  18: 9.902 ns/op
Iteration  19: 9.924 ns/op
Iteration  20: 9.863 ns/op


Result "benchmark.StringContains.stringContains":
  9.871 ±(99.9%) 0.005 ns/op [Average]
  (min, avg, max) = (9.842, 9.871, 9.924), stdev = 0.015
  CI (99.9%): [9.866, 9.876] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  {d6'nr{phttpZxAf\$98Rd;e&r=7}==,  avgt  100  331.568 ± 16.699  ns/op
StringContains.stringContains     http  {d6'nr{phttpZxAf\$98Rd;e&r=7}==,  avgt  100    9.871 ±  0.005  ns/op

Benchmark result is saved to http_32_0.25_0.csv
