# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = b$R[Ex3_)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 179.199 ns/op
# Warmup Iteration   2: 103.290 ns/op
# Warmup Iteration   3: 99.330 ns/op
# Warmup Iteration   4: 98.746 ns/op
# Warmup Iteration   5: 99.672 ns/op
Iteration   1: 97.290 ns/op
Iteration   2: 96.861 ns/op
Iteration   3: 97.244 ns/op
Iteration   4: 96.881 ns/op
Iteration   5: 98.233 ns/op
Iteration   6: 96.730 ns/op
Iteration   7: 96.550 ns/op
Iteration   8: 96.677 ns/op
Iteration   9: 96.958 ns/op
Iteration  10: 96.702 ns/op
Iteration  11: 96.787 ns/op
Iteration  12: 97.619 ns/op
Iteration  13: 97.782 ns/op
Iteration  14: 97.582 ns/op
Iteration  15: 97.762 ns/op
Iteration  16: 97.929 ns/op
Iteration  17: 97.625 ns/op
Iteration  18: 97.880 ns/op
Iteration  19: 97.744 ns/op
Iteration  20: 98.381 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 178.129 ns/op
# Warmup Iteration   2: 104.606 ns/op
# Warmup Iteration   3: 99.864 ns/op
# Warmup Iteration   4: 99.062 ns/op
# Warmup Iteration   5: 100.270 ns/op
Iteration   1: 97.819 ns/op
Iteration   2: 97.429 ns/op
Iteration   3: 97.866 ns/op
Iteration   4: 97.455 ns/op
Iteration   5: 97.949 ns/op
Iteration   6: 97.329 ns/op
Iteration   7: 97.143 ns/op
Iteration   8: 97.301 ns/op
Iteration   9: 97.161 ns/op
Iteration  10: 97.363 ns/op
Iteration  11: 97.434 ns/op
Iteration  12: 97.149 ns/op
Iteration  13: 97.443 ns/op
Iteration  14: 97.146 ns/op
Iteration  15: 97.610 ns/op
Iteration  16: 97.413 ns/op
Iteration  17: 97.326 ns/op
Iteration  18: 97.774 ns/op
Iteration  19: 97.341 ns/op
Iteration  20: 97.879 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.133 ns/op
# Warmup Iteration   2: 102.628 ns/op
# Warmup Iteration   3: 99.144 ns/op
# Warmup Iteration   4: 99.112 ns/op
# Warmup Iteration   5: 98.776 ns/op
Iteration   1: 97.220 ns/op
Iteration   2: 97.114 ns/op
Iteration   3: 97.124 ns/op
Iteration   4: 96.672 ns/op
Iteration   5: 97.088 ns/op
Iteration   6: 96.514 ns/op
Iteration   7: 96.330 ns/op
Iteration   8: 96.504 ns/op
Iteration   9: 96.521 ns/op
Iteration  10: 96.353 ns/op
Iteration  11: 96.447 ns/op
Iteration  12: 96.668 ns/op
Iteration  13: 97.268 ns/op
Iteration  14: 97.749 ns/op
Iteration  15: 97.016 ns/op
Iteration  16: 97.127 ns/op
Iteration  17: 96.864 ns/op
Iteration  18: 97.023 ns/op
Iteration  19: 97.126 ns/op
Iteration  20: 96.956 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 177.024 ns/op
# Warmup Iteration   2: 102.384 ns/op
# Warmup Iteration   3: 99.677 ns/op
# Warmup Iteration   4: 99.572 ns/op
# Warmup Iteration   5: 99.504 ns/op
Iteration   1: 97.617 ns/op
Iteration   2: 97.297 ns/op
Iteration   3: 97.580 ns/op
Iteration   4: 97.179 ns/op
Iteration   5: 97.647 ns/op
Iteration   6: 97.218 ns/op
Iteration   7: 97.119 ns/op
Iteration   8: 97.401 ns/op
Iteration   9: 97.138 ns/op
Iteration  10: 97.471 ns/op
Iteration  11: 97.523 ns/op
Iteration  12: 97.123 ns/op
Iteration  13: 97.451 ns/op
Iteration  14: 97.050 ns/op
Iteration  15: 97.430 ns/op
Iteration  16: 97.465 ns/op
Iteration  17: 97.079 ns/op
Iteration  18: 97.624 ns/op
Iteration  19: 97.274 ns/op
Iteration  20: 97.771 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 177.541 ns/op
# Warmup Iteration   2: 104.060 ns/op
# Warmup Iteration   3: 100.030 ns/op
# Warmup Iteration   4: 99.246 ns/op
# Warmup Iteration   5: 100.464 ns/op
Iteration   1: 97.948 ns/op
Iteration   2: 97.481 ns/op
Iteration   3: 98.150 ns/op
Iteration   4: 98.325 ns/op
Iteration   5: 98.118 ns/op
Iteration   6: 97.396 ns/op
Iteration   7: 97.172 ns/op
Iteration   8: 97.373 ns/op
Iteration   9: 97.269 ns/op
Iteration  10: 97.413 ns/op
Iteration  11: 97.711 ns/op
Iteration  12: 97.403 ns/op
Iteration  13: 97.997 ns/op
Iteration  14: 97.448 ns/op
Iteration  15: 97.964 ns/op
Iteration  16: 97.993 ns/op
Iteration  17: 97.478 ns/op
Iteration  18: 98.058 ns/op
Iteration  19: 97.216 ns/op
Iteration  20: 97.549 ns/op


Result "benchmark.StringContains.regexMatches":
  97.352 ±(99.9%) 0.152 ns/op [Average]
  (min, avg, max) = (96.330, 97.352, 98.381), stdev = 0.449
  CI (99.9%): [97.199, 97.504] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = b$R[Ex3_)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.457 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.974 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.963 ns/op
Iteration  12: 8.963 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.444 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.998 ns/op
# Warmup Iteration   4: 8.997 ns/op
# Warmup Iteration   5: 9.000 ns/op
Iteration   1: 8.998 ns/op
Iteration   2: 8.998 ns/op
Iteration   3: 8.999 ns/op
Iteration   4: 8.998 ns/op
Iteration   5: 8.998 ns/op
Iteration   6: 8.999 ns/op
Iteration   7: 8.997 ns/op
Iteration   8: 9.000 ns/op
Iteration   9: 8.998 ns/op
Iteration  10: 8.998 ns/op
Iteration  11: 8.998 ns/op
Iteration  12: 8.996 ns/op
Iteration  13: 8.997 ns/op
Iteration  14: 8.996 ns/op
Iteration  15: 8.997 ns/op
Iteration  16: 8.996 ns/op
Iteration  17: 8.996 ns/op
Iteration  18: 8.996 ns/op
Iteration  19: 8.996 ns/op
Iteration  20: 8.997 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.452 ns/op
# Warmup Iteration   2: 9.055 ns/op
# Warmup Iteration   3: 8.968 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.967 ns/op
Iteration   1: 8.972 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.968 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.966 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.485 ns/op
# Warmup Iteration   2: 8.991 ns/op
# Warmup Iteration   3: 9.012 ns/op
# Warmup Iteration   4: 9.015 ns/op
# Warmup Iteration   5: 9.023 ns/op
Iteration   1: 9.015 ns/op
Iteration   2: 9.012 ns/op
Iteration   3: 9.010 ns/op
Iteration   4: 9.009 ns/op
Iteration   5: 9.012 ns/op
Iteration   6: 9.008 ns/op
Iteration   7: 9.013 ns/op
Iteration   8: 9.011 ns/op
Iteration   9: 9.010 ns/op
Iteration  10: 9.013 ns/op
Iteration  11: 9.014 ns/op
Iteration  12: 9.009 ns/op
Iteration  13: 9.009 ns/op
Iteration  14: 9.009 ns/op
Iteration  15: 9.017 ns/op
Iteration  16: 9.013 ns/op
Iteration  17: 9.011 ns/op
Iteration  18: 9.012 ns/op
Iteration  19: 9.013 ns/op
Iteration  20: 9.013 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.469 ns/op
# Warmup Iteration   2: 9.069 ns/op
# Warmup Iteration   3: 8.959 ns/op
# Warmup Iteration   4: 8.957 ns/op
# Warmup Iteration   5: 8.957 ns/op
Iteration   1: 8.955 ns/op
Iteration   2: 8.956 ns/op
Iteration   3: 8.956 ns/op
Iteration   4: 8.955 ns/op
Iteration   5: 8.958 ns/op
Iteration   6: 8.959 ns/op
Iteration   7: 8.956 ns/op
Iteration   8: 8.970 ns/op
Iteration   9: 8.956 ns/op
Iteration  10: 8.956 ns/op
Iteration  11: 8.956 ns/op
Iteration  12: 8.956 ns/op
Iteration  13: 8.958 ns/op
Iteration  14: 8.956 ns/op
Iteration  15: 8.955 ns/op
Iteration  16: 8.955 ns/op
Iteration  17: 8.956 ns/op
Iteration  18: 8.959 ns/op
Iteration  19: 8.958 ns/op
Iteration  20: 8.972 ns/op


Result "benchmark.StringContains.stringContains":
  8.980 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (8.955, 8.980, 9.017), stdev = 0.021
  CI (99.9%): [8.973, 8.987] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  b$R[Ex3_  avgt  100  97.352 ± 0.152  ns/op
StringContains.stringContains     http  b$R[Ex3_  avgt  100   8.980 ± 0.007  ns/op

Benchmark result is saved to http_8_1_6.csv
