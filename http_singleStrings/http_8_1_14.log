# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Q#bk!;du)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 183.768 ns/op
# Warmup Iteration   2: 110.224 ns/op
# Warmup Iteration   3: 105.207 ns/op
# Warmup Iteration   4: 104.467 ns/op
# Warmup Iteration   5: 105.666 ns/op
Iteration   1: 102.655 ns/op
Iteration   2: 103.281 ns/op
Iteration   3: 102.736 ns/op
Iteration   4: 103.004 ns/op
Iteration   5: 102.851 ns/op
Iteration   6: 102.972 ns/op
Iteration   7: 102.358 ns/op
Iteration   8: 102.561 ns/op
Iteration   9: 102.385 ns/op
Iteration  10: 102.547 ns/op
Iteration  11: 102.424 ns/op
Iteration  12: 102.712 ns/op
Iteration  13: 102.427 ns/op
Iteration  14: 102.732 ns/op
Iteration  15: 102.436 ns/op
Iteration  16: 103.353 ns/op
Iteration  17: 102.513 ns/op
Iteration  18: 102.629 ns/op
Iteration  19: 102.379 ns/op
Iteration  20: 102.947 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 177.222 ns/op
# Warmup Iteration   2: 102.322 ns/op
# Warmup Iteration   3: 99.455 ns/op
# Warmup Iteration   4: 99.855 ns/op
# Warmup Iteration   5: 98.645 ns/op
Iteration   1: 97.327 ns/op
Iteration   2: 96.892 ns/op
Iteration   3: 97.335 ns/op
Iteration   4: 96.967 ns/op
Iteration   5: 97.379 ns/op
Iteration   6: 96.818 ns/op
Iteration   7: 96.786 ns/op
Iteration   8: 96.832 ns/op
Iteration   9: 97.712 ns/op
Iteration  10: 96.787 ns/op
Iteration  11: 96.853 ns/op
Iteration  12: 96.683 ns/op
Iteration  13: 97.024 ns/op
Iteration  14: 97.142 ns/op
Iteration  15: 96.896 ns/op
Iteration  16: 97.267 ns/op
Iteration  17: 96.975 ns/op
Iteration  18: 97.199 ns/op
Iteration  19: 97.289 ns/op
Iteration  20: 96.889 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.065 ns/op
# Warmup Iteration   2: 103.505 ns/op
# Warmup Iteration   3: 99.757 ns/op
# Warmup Iteration   4: 99.278 ns/op
# Warmup Iteration   5: 99.886 ns/op
Iteration   1: 97.713 ns/op
Iteration   2: 97.292 ns/op
Iteration   3: 97.630 ns/op
Iteration   4: 97.327 ns/op
Iteration   5: 97.672 ns/op
Iteration   6: 97.220 ns/op
Iteration   7: 97.014 ns/op
Iteration   8: 97.265 ns/op
Iteration   9: 97.127 ns/op
Iteration  10: 97.821 ns/op
Iteration  11: 97.898 ns/op
Iteration  12: 97.310 ns/op
Iteration  13: 97.722 ns/op
Iteration  14: 97.278 ns/op
Iteration  15: 97.740 ns/op
Iteration  16: 97.338 ns/op
Iteration  17: 97.206 ns/op
Iteration  18: 97.812 ns/op
Iteration  19: 97.323 ns/op
Iteration  20: 97.403 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 177.739 ns/op
# Warmup Iteration   2: 103.938 ns/op
# Warmup Iteration   3: 99.976 ns/op
# Warmup Iteration   4: 99.303 ns/op
# Warmup Iteration   5: 101.087 ns/op
Iteration   1: 99.715 ns/op
Iteration   2: 97.456 ns/op
Iteration   3: 97.882 ns/op
Iteration   4: 97.455 ns/op
Iteration   5: 97.906 ns/op
Iteration   6: 97.300 ns/op
Iteration   7: 97.133 ns/op
Iteration   8: 97.362 ns/op
Iteration   9: 97.164 ns/op
Iteration  10: 97.407 ns/op
Iteration  11: 97.412 ns/op
Iteration  12: 97.143 ns/op
Iteration  13: 97.571 ns/op
Iteration  14: 97.243 ns/op
Iteration  15: 97.539 ns/op
Iteration  16: 97.525 ns/op
Iteration  17: 97.234 ns/op
Iteration  18: 97.483 ns/op
Iteration  19: 97.146 ns/op
Iteration  20: 97.670 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 178.867 ns/op
# Warmup Iteration   2: 103.798 ns/op
# Warmup Iteration   3: 99.391 ns/op
# Warmup Iteration   4: 98.633 ns/op
# Warmup Iteration   5: 99.641 ns/op
Iteration   1: 97.496 ns/op
Iteration   2: 96.936 ns/op
Iteration   3: 97.368 ns/op
Iteration   4: 96.863 ns/op
Iteration   5: 97.462 ns/op
Iteration   6: 97.383 ns/op
Iteration   7: 96.647 ns/op
Iteration   8: 96.976 ns/op
Iteration   9: 96.663 ns/op
Iteration  10: 97.115 ns/op
Iteration  11: 97.126 ns/op
Iteration  12: 96.948 ns/op
Iteration  13: 97.127 ns/op
Iteration  14: 96.762 ns/op
Iteration  15: 97.039 ns/op
Iteration  16: 97.054 ns/op
Iteration  17: 96.819 ns/op
Iteration  18: 97.046 ns/op
Iteration  19: 97.009 ns/op
Iteration  20: 96.844 ns/op


Result "benchmark.StringContains.regexMatches":
  98.355 ±(99.9%) 0.752 ns/op [Average]
  (min, avg, max) = (96.647, 98.355, 103.353), stdev = 2.217
  CI (99.9%): [97.603, 99.107] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Q#bk!;du)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.441 ns/op
# Warmup Iteration   2: 9.068 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.963 ns/op
# Warmup Iteration   5: 8.962 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.964 ns/op
Iteration   3: 8.958 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.963 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.979 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.970 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.963 ns/op
Iteration  16: 8.963 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.980 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.431 ns/op
# Warmup Iteration   2: 9.057 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.963 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.964 ns/op
Iteration   3: 8.965 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.963 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.967 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.446 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.968 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.964 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.968 ns/op
Iteration  19: 8.975 ns/op
Iteration  20: 8.968 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.469 ns/op
# Warmup Iteration   2: 9.073 ns/op
# Warmup Iteration   3: 8.961 ns/op
# Warmup Iteration   4: 8.961 ns/op
# Warmup Iteration   5: 8.963 ns/op
Iteration   1: 8.963 ns/op
Iteration   2: 8.961 ns/op
Iteration   3: 8.962 ns/op
Iteration   4: 8.959 ns/op
Iteration   5: 8.960 ns/op
Iteration   6: 8.961 ns/op
Iteration   7: 8.960 ns/op
Iteration   8: 8.974 ns/op
Iteration   9: 8.958 ns/op
Iteration  10: 8.960 ns/op
Iteration  11: 8.963 ns/op
Iteration  12: 8.961 ns/op
Iteration  13: 8.962 ns/op
Iteration  14: 8.961 ns/op
Iteration  15: 8.962 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.962 ns/op
Iteration  18: 8.962 ns/op
Iteration  19: 8.960 ns/op
Iteration  20: 8.963 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.455 ns/op
# Warmup Iteration   2: 9.051 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.963 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.963 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.964 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.964 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.963 ns/op
Iteration  15: 8.963 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.963 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.966 ns/op


Result "benchmark.StringContains.stringContains":
  8.965 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (8.958, 8.965, 8.980), stdev = 0.003
  CI (99.9%): [8.964, 8.966] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  Q#bk!;du  avgt  100  98.355 ± 0.752  ns/op
StringContains.stringContains     http  Q#bk!;du  avgt  100   8.965 ± 0.001  ns/op

Benchmark result is saved to http_8_1_14.csv
