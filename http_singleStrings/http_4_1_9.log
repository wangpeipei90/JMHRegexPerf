# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = bcus)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 168.935 ns/op
# Warmup Iteration   2: 91.277 ns/op
# Warmup Iteration   3: 90.752 ns/op
# Warmup Iteration   4: 92.749 ns/op
# Warmup Iteration   5: 89.013 ns/op
Iteration   1: 88.575 ns/op
Iteration   2: 88.902 ns/op
Iteration   3: 88.979 ns/op
Iteration   4: 88.931 ns/op
Iteration   5: 88.951 ns/op
Iteration   6: 88.675 ns/op
Iteration   7: 88.520 ns/op
Iteration   8: 88.617 ns/op
Iteration   9: 88.541 ns/op
Iteration  10: 88.472 ns/op
Iteration  11: 88.665 ns/op
Iteration  12: 89.181 ns/op
Iteration  13: 88.836 ns/op
Iteration  14: 88.457 ns/op
Iteration  15: 88.880 ns/op
Iteration  16: 89.189 ns/op
Iteration  17: 89.164 ns/op
Iteration  18: 88.505 ns/op
Iteration  19: 89.106 ns/op
Iteration  20: 89.195 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 168.394 ns/op
# Warmup Iteration   2: 90.291 ns/op
# Warmup Iteration   3: 90.170 ns/op
# Warmup Iteration   4: 92.007 ns/op
# Warmup Iteration   5: 88.778 ns/op
Iteration   1: 88.353 ns/op
Iteration   2: 87.992 ns/op
Iteration   3: 88.325 ns/op
Iteration   4: 88.374 ns/op
Iteration   5: 87.841 ns/op
Iteration   6: 87.661 ns/op
Iteration   7: 87.789 ns/op
Iteration   8: 87.819 ns/op
Iteration   9: 87.785 ns/op
Iteration  10: 87.819 ns/op
Iteration  11: 87.708 ns/op
Iteration  12: 87.888 ns/op
Iteration  13: 88.084 ns/op
Iteration  14: 88.048 ns/op
Iteration  15: 87.662 ns/op
Iteration  16: 87.944 ns/op
Iteration  17: 88.243 ns/op
Iteration  18: 88.043 ns/op
Iteration  19: 87.867 ns/op
Iteration  20: 88.140 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 159.085 ns/op
# Warmup Iteration   2: 84.989 ns/op
# Warmup Iteration   3: 84.082 ns/op
# Warmup Iteration   4: 82.868 ns/op
# Warmup Iteration   5: 81.582 ns/op
Iteration   1: 81.392 ns/op
Iteration   2: 81.427 ns/op
Iteration   3: 81.524 ns/op
Iteration   4: 81.233 ns/op
Iteration   5: 80.975 ns/op
Iteration   6: 80.907 ns/op
Iteration   7: 81.007 ns/op
Iteration   8: 80.991 ns/op
Iteration   9: 80.980 ns/op
Iteration  10: 81.000 ns/op
Iteration  11: 80.875 ns/op
Iteration  12: 80.585 ns/op
Iteration  13: 80.804 ns/op
Iteration  14: 80.946 ns/op
Iteration  15: 81.641 ns/op
Iteration  16: 81.032 ns/op
Iteration  17: 81.034 ns/op
Iteration  18: 80.911 ns/op
Iteration  19: 80.978 ns/op
Iteration  20: 80.988 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 166.964 ns/op
# Warmup Iteration   2: 91.534 ns/op
# Warmup Iteration   3: 90.614 ns/op
# Warmup Iteration   4: 92.537 ns/op
# Warmup Iteration   5: 88.874 ns/op
Iteration   1: 88.406 ns/op
Iteration   2: 88.685 ns/op
Iteration   3: 88.659 ns/op
Iteration   4: 88.751 ns/op
Iteration   5: 88.942 ns/op
Iteration   6: 88.212 ns/op
Iteration   7: 88.762 ns/op
Iteration   8: 88.408 ns/op
Iteration   9: 88.380 ns/op
Iteration  10: 88.180 ns/op
Iteration  11: 89.273 ns/op
Iteration  12: 88.450 ns/op
Iteration  13: 88.705 ns/op
Iteration  14: 88.323 ns/op
Iteration  15: 88.778 ns/op
Iteration  16: 88.558 ns/op
Iteration  17: 88.368 ns/op
Iteration  18: 88.094 ns/op
Iteration  19: 88.412 ns/op
Iteration  20: 88.414 ns/op

# Run progress: 40.00% complete, ETA 00:02:32
# Fork: 5 of 5
# Warmup Iteration   1: 167.633 ns/op
# Warmup Iteration   2: 91.919 ns/op
# Warmup Iteration   3: 90.323 ns/op
# Warmup Iteration   4: 92.105 ns/op
# Warmup Iteration   5: 88.492 ns/op
Iteration   1: 88.064 ns/op
Iteration   2: 88.593 ns/op
Iteration   3: 88.541 ns/op
Iteration   4: 88.542 ns/op
Iteration   5: 88.422 ns/op
Iteration   6: 87.807 ns/op
Iteration   7: 88.096 ns/op
Iteration   8: 88.205 ns/op
Iteration   9: 88.265 ns/op
Iteration  10: 88.185 ns/op
Iteration  11: 88.683 ns/op
Iteration  12: 88.113 ns/op
Iteration  13: 88.074 ns/op
Iteration  14: 87.792 ns/op
Iteration  15: 88.066 ns/op
Iteration  16: 88.158 ns/op
Iteration  17: 88.170 ns/op
Iteration  18: 88.303 ns/op
Iteration  19: 87.962 ns/op
Iteration  20: 88.286 ns/op


Result "benchmark.StringContains.regexMatches":
  86.920 ±(99.9%) 1.007 ns/op [Average]
  (min, avg, max) = (80.585, 86.920, 89.273), stdev = 2.969
  CI (99.9%): [85.914, 87.927] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = bcus)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.448 ns/op
# Warmup Iteration   2: 9.060 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.955 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.970 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.968 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.444 ns/op
# Warmup Iteration   2: 9.069 ns/op
# Warmup Iteration   3: 8.971 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.969 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.969 ns/op
Iteration   3: 8.972 ns/op
Iteration   4: 8.968 ns/op
Iteration   5: 8.971 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.969 ns/op
Iteration   8: 8.985 ns/op
Iteration   9: 8.970 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.970 ns/op
Iteration  12: 8.970 ns/op
Iteration  13: 8.968 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.969 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.969 ns/op
Iteration  19: 8.971 ns/op
Iteration  20: 8.982 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.446 ns/op
# Warmup Iteration   2: 9.072 ns/op
# Warmup Iteration   3: 8.969 ns/op
# Warmup Iteration   4: 8.970 ns/op
# Warmup Iteration   5: 8.971 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.969 ns/op
Iteration   3: 8.955 ns/op
Iteration   4: 8.969 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.983 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.970 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.967 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.968 ns/op
Iteration  17: 8.968 ns/op
Iteration  18: 8.982 ns/op
Iteration  19: 8.969 ns/op
Iteration  20: 8.985 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.505 ns/op
# Warmup Iteration   2: 8.968 ns/op
# Warmup Iteration   3: 9.017 ns/op
# Warmup Iteration   4: 9.011 ns/op
# Warmup Iteration   5: 9.009 ns/op
Iteration   1: 9.016 ns/op
Iteration   2: 9.012 ns/op
Iteration   3: 9.011 ns/op
Iteration   4: 9.012 ns/op
Iteration   5: 9.013 ns/op
Iteration   6: 9.014 ns/op
Iteration   7: 9.011 ns/op
Iteration   8: 9.013 ns/op
Iteration   9: 9.012 ns/op
Iteration  10: 9.014 ns/op
Iteration  11: 9.014 ns/op
Iteration  12: 9.010 ns/op
Iteration  13: 9.013 ns/op
Iteration  14: 9.012 ns/op
Iteration  15: 9.014 ns/op
Iteration  16: 9.013 ns/op
Iteration  17: 9.015 ns/op
Iteration  18: 9.017 ns/op
Iteration  19: 9.012 ns/op
Iteration  20: 9.012 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.444 ns/op
# Warmup Iteration   2: 9.055 ns/op
# Warmup Iteration   3: 8.960 ns/op
# Warmup Iteration   4: 8.959 ns/op
# Warmup Iteration   5: 8.959 ns/op
Iteration   1: 8.960 ns/op
Iteration   2: 8.959 ns/op
Iteration   3: 8.961 ns/op
Iteration   4: 8.957 ns/op
Iteration   5: 8.961 ns/op
Iteration   6: 8.963 ns/op
Iteration   7: 8.960 ns/op
Iteration   8: 8.961 ns/op
Iteration   9: 8.955 ns/op
Iteration  10: 8.957 ns/op
Iteration  11: 8.957 ns/op
Iteration  12: 8.959 ns/op
Iteration  13: 8.962 ns/op
Iteration  14: 8.958 ns/op
Iteration  15: 8.957 ns/op
Iteration  16: 8.960 ns/op
Iteration  17: 8.963 ns/op
Iteration  18: 8.958 ns/op
Iteration  19: 8.959 ns/op
Iteration  20: 8.957 ns/op


Result "benchmark.StringContains.stringContains":
  8.975 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (8.955, 8.975, 9.017), stdev = 0.020
  CI (99.9%): [8.969, 8.982] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   bcus  avgt  100  86.920 ± 1.007  ns/op
StringContains.stringContains     http   bcus  avgt  100   8.975 ± 0.007  ns/op

Benchmark result is saved to http_4_1_9.csv
