# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = IM2He<u5
ElvQ9L7C63~:[QhttphN>X)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 286.975 ns/op
# Warmup Iteration   2: 243.547 ns/op
# Warmup Iteration   3: 204.897 ns/op
# Warmup Iteration   4: 204.494 ns/op
# Warmup Iteration   5: 204.115 ns/op
Iteration   1: 206.571 ns/op
Iteration   2: 207.768 ns/op
Iteration   3: 210.044 ns/op
Iteration   4: 202.820 ns/op
Iteration   5: 203.890 ns/op
Iteration   6: 203.994 ns/op
Iteration   7: 203.838 ns/op
Iteration   8: 202.883 ns/op
Iteration   9: 203.790 ns/op
Iteration  10: 203.960 ns/op
Iteration  11: 203.850 ns/op
Iteration  12: 204.288 ns/op
Iteration  13: 202.795 ns/op
Iteration  14: 204.257 ns/op
Iteration  15: 204.247 ns/op
Iteration  16: 203.497 ns/op
Iteration  17: 202.788 ns/op
Iteration  18: 203.747 ns/op
Iteration  19: 203.476 ns/op
Iteration  20: 203.592 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 277.168 ns/op
# Warmup Iteration   2: 230.500 ns/op
# Warmup Iteration   3: 204.835 ns/op
# Warmup Iteration   4: 205.947 ns/op
# Warmup Iteration   5: 203.902 ns/op
Iteration   1: 206.321 ns/op
Iteration   2: 207.343 ns/op
Iteration   3: 208.733 ns/op
Iteration   4: 202.893 ns/op
Iteration   5: 203.976 ns/op
Iteration   6: 203.821 ns/op
Iteration   7: 203.717 ns/op
Iteration   8: 203.806 ns/op
Iteration   9: 202.872 ns/op
Iteration  10: 203.780 ns/op
Iteration  11: 203.890 ns/op
Iteration  12: 203.890 ns/op
Iteration  13: 202.813 ns/op
Iteration  14: 203.862 ns/op
Iteration  15: 203.844 ns/op
Iteration  16: 204.024 ns/op
Iteration  17: 202.735 ns/op
Iteration  18: 203.250 ns/op
Iteration  19: 203.147 ns/op
Iteration  20: 203.190 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 275.827 ns/op
# Warmup Iteration   2: 231.985 ns/op
# Warmup Iteration   3: 202.673 ns/op
# Warmup Iteration   4: 203.380 ns/op
# Warmup Iteration   5: 200.823 ns/op
Iteration   1: 204.171 ns/op
Iteration   2: 205.338 ns/op
Iteration   3: 206.635 ns/op
Iteration   4: 201.777 ns/op
Iteration   5: 200.783 ns/op
Iteration   6: 201.786 ns/op
Iteration   7: 202.185 ns/op
Iteration   8: 201.992 ns/op
Iteration   9: 200.836 ns/op
Iteration  10: 201.978 ns/op
Iteration  11: 202.077 ns/op
Iteration  12: 202.621 ns/op
Iteration  13: 200.794 ns/op
Iteration  14: 201.835 ns/op
Iteration  15: 201.962 ns/op
Iteration  16: 201.925 ns/op
Iteration  17: 201.337 ns/op
Iteration  18: 200.773 ns/op
Iteration  19: 201.236 ns/op
Iteration  20: 201.819 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 278.269 ns/op
# Warmup Iteration   2: 234.059 ns/op
# Warmup Iteration   3: 202.583 ns/op
# Warmup Iteration   4: 203.106 ns/op
# Warmup Iteration   5: 200.698 ns/op
Iteration   1: 204.115 ns/op
Iteration   2: 205.060 ns/op
Iteration   3: 206.348 ns/op
Iteration   4: 201.543 ns/op
Iteration   5: 200.695 ns/op
Iteration   6: 201.459 ns/op
Iteration   7: 201.439 ns/op
Iteration   8: 201.546 ns/op
Iteration   9: 201.714 ns/op
Iteration  10: 201.963 ns/op
Iteration  11: 201.428 ns/op
Iteration  12: 202.284 ns/op
Iteration  13: 200.663 ns/op
Iteration  14: 201.452 ns/op
Iteration  15: 201.436 ns/op
Iteration  16: 200.969 ns/op
Iteration  17: 203.808 ns/op
Iteration  18: 200.695 ns/op
Iteration  19: 201.147 ns/op
Iteration  20: 201.534 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 269.453 ns/op
# Warmup Iteration   2: 212.013 ns/op
# Warmup Iteration   3: 173.094 ns/op
# Warmup Iteration   4: 173.701 ns/op
# Warmup Iteration   5: 174.315 ns/op
Iteration   1: 175.321 ns/op
Iteration   2: 176.506 ns/op
Iteration   3: 171.958 ns/op
Iteration   4: 172.187 ns/op
Iteration   5: 171.410 ns/op
Iteration   6: 172.297 ns/op
Iteration   7: 172.001 ns/op
Iteration   8: 172.131 ns/op
Iteration   9: 172.346 ns/op
Iteration  10: 172.106 ns/op
Iteration  11: 172.280 ns/op
Iteration  12: 172.083 ns/op
Iteration  13: 172.156 ns/op
Iteration  14: 172.661 ns/op
Iteration  15: 171.015 ns/op
Iteration  16: 172.858 ns/op
Iteration  17: 172.544 ns/op
Iteration  18: 172.423 ns/op
Iteration  19: 171.444 ns/op
Iteration  20: 171.423 ns/op


Result "benchmark.StringContains.regexMatches":
  197.023 ±(99.9%) 4.230 ns/op [Average]
  (min, avg, max) = (171.015, 197.023, 210.044), stdev = 12.473
  CI (99.9%): [192.793, 201.253] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = IM2He<u5
ElvQ9L7C63~:[QhttphN>X)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.328 ns/op
# Warmup Iteration   2: 12.519 ns/op
# Warmup Iteration   3: 12.313 ns/op
# Warmup Iteration   4: 12.319 ns/op
# Warmup Iteration   5: 12.315 ns/op
Iteration   1: 12.310 ns/op
Iteration   2: 12.305 ns/op
Iteration   3: 12.395 ns/op
Iteration   4: 12.301 ns/op
Iteration   5: 12.314 ns/op
Iteration   6: 12.292 ns/op
Iteration   7: 12.291 ns/op
Iteration   8: 12.324 ns/op
Iteration   9: 12.288 ns/op
Iteration  10: 12.280 ns/op
Iteration  11: 12.286 ns/op
Iteration  12: 12.870 ns/op
Iteration  13: 12.867 ns/op
Iteration  14: 12.864 ns/op
Iteration  15: 12.864 ns/op
Iteration  16: 12.867 ns/op
Iteration  17: 12.863 ns/op
Iteration  18: 12.862 ns/op
Iteration  19: 12.870 ns/op
Iteration  20: 12.867 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.975 ns/op
# Warmup Iteration   2: 12.476 ns/op
# Warmup Iteration   3: 12.294 ns/op
# Warmup Iteration   4: 12.280 ns/op
# Warmup Iteration   5: 12.296 ns/op
Iteration   1: 12.294 ns/op
Iteration   2: 12.304 ns/op
Iteration   3: 12.317 ns/op
Iteration   4: 12.291 ns/op
Iteration   5: 12.295 ns/op
Iteration   6: 12.314 ns/op
Iteration   7: 12.278 ns/op
Iteration   8: 12.284 ns/op
Iteration   9: 12.294 ns/op
Iteration  10: 12.322 ns/op
Iteration  11: 12.322 ns/op
Iteration  12: 12.307 ns/op
Iteration  13: 12.306 ns/op
Iteration  14: 12.293 ns/op
Iteration  15: 12.313 ns/op
Iteration  16: 12.286 ns/op
Iteration  17: 12.291 ns/op
Iteration  18: 12.294 ns/op
Iteration  19: 12.268 ns/op
Iteration  20: 12.297 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.331 ns/op
# Warmup Iteration   2: 12.613 ns/op
# Warmup Iteration   3: 12.117 ns/op
# Warmup Iteration   4: 12.139 ns/op
# Warmup Iteration   5: 12.134 ns/op
Iteration   1: 12.137 ns/op
Iteration   2: 12.134 ns/op
Iteration   3: 12.110 ns/op
Iteration   4: 12.140 ns/op
Iteration   5: 12.150 ns/op
Iteration   6: 12.130 ns/op
Iteration   7: 12.126 ns/op
Iteration   8: 12.170 ns/op
Iteration   9: 12.139 ns/op
Iteration  10: 12.135 ns/op
Iteration  11: 12.130 ns/op
Iteration  12: 12.132 ns/op
Iteration  13: 12.144 ns/op
Iteration  14: 12.129 ns/op
Iteration  15: 12.130 ns/op
Iteration  16: 12.133 ns/op
Iteration  17: 12.133 ns/op
Iteration  18: 12.145 ns/op
Iteration  19: 12.130 ns/op
Iteration  20: 12.146 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.272 ns/op
# Warmup Iteration   2: 12.562 ns/op
# Warmup Iteration   3: 12.312 ns/op
# Warmup Iteration   4: 12.301 ns/op
# Warmup Iteration   5: 12.284 ns/op
Iteration   1: 12.299 ns/op
Iteration   2: 12.304 ns/op
Iteration   3: 12.303 ns/op
Iteration   4: 12.297 ns/op
Iteration   5: 12.265 ns/op
Iteration   6: 12.267 ns/op
Iteration   7: 12.289 ns/op
Iteration   8: 12.313 ns/op
Iteration   9: 12.289 ns/op
Iteration  10: 12.273 ns/op
Iteration  11: 12.281 ns/op
Iteration  12: 12.252 ns/op
Iteration  13: 12.236 ns/op
Iteration  14: 12.287 ns/op
Iteration  15: 12.252 ns/op
Iteration  16: 12.285 ns/op
Iteration  17: 12.297 ns/op
Iteration  18: 12.297 ns/op
Iteration  19: 12.271 ns/op
Iteration  20: 12.286 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.279 ns/op
# Warmup Iteration   2: 12.526 ns/op
# Warmup Iteration   3: 12.338 ns/op
# Warmup Iteration   4: 12.362 ns/op
# Warmup Iteration   5: 12.380 ns/op
Iteration   1: 12.328 ns/op
Iteration   2: 12.306 ns/op
Iteration   3: 12.300 ns/op
Iteration   4: 12.314 ns/op
Iteration   5: 12.334 ns/op
Iteration   6: 12.325 ns/op
Iteration   7: 12.333 ns/op
Iteration   8: 12.329 ns/op
Iteration   9: 12.310 ns/op
Iteration  10: 12.288 ns/op
Iteration  11: 12.352 ns/op
Iteration  12: 12.328 ns/op
Iteration  13: 12.352 ns/op
Iteration  14: 12.336 ns/op
Iteration  15: 12.357 ns/op
Iteration  16: 12.283 ns/op
Iteration  17: 12.332 ns/op
Iteration  18: 12.329 ns/op
Iteration  19: 12.353 ns/op
Iteration  20: 12.343 ns/op


Result "benchmark.StringContains.stringContains":
  12.320 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (12.110, 12.320, 12.870), stdev = 0.186
  CI (99.9%): [12.257, 12.384] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  IM2He<u5
ElvQ9L7C63~:[QhttphN>X  avgt  100  197.023 ± 4.230  ns/op
StringContains.stringContains     http  IM2He<u5
ElvQ9L7C63~:[QhttphN>X  avgt  100   12.320 ± 0.063  ns/op

Benchmark result is saved to http_32_0.75_11.csv
