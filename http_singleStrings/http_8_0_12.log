# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httppeP1)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 257.753 ns/op
# Warmup Iteration   2: 198.242 ns/op
# Warmup Iteration   3: 179.902 ns/op
# Warmup Iteration   4: 180.512 ns/op
# Warmup Iteration   5: 181.182 ns/op
Iteration   1: 182.178 ns/op
Iteration   2: 183.388 ns/op
Iteration   3: 179.294 ns/op
Iteration   4: 178.183 ns/op
Iteration   5: 178.952 ns/op
Iteration   6: 178.946 ns/op
Iteration   7: 179.878 ns/op
Iteration   8: 179.075 ns/op
Iteration   9: 179.107 ns/op
Iteration  10: 179.081 ns/op
Iteration  11: 178.123 ns/op
Iteration  12: 178.851 ns/op
Iteration  13: 179.107 ns/op
Iteration  14: 178.528 ns/op
Iteration  15: 178.407 ns/op
Iteration  16: 178.402 ns/op
Iteration  17: 178.416 ns/op
Iteration  18: 178.406 ns/op
Iteration  19: 177.940 ns/op
Iteration  20: 178.396 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 248.123 ns/op
# Warmup Iteration   2: 188.543 ns/op
# Warmup Iteration   3: 158.155 ns/op
# Warmup Iteration   4: 158.589 ns/op
# Warmup Iteration   5: 159.230 ns/op
Iteration   1: 160.819 ns/op
Iteration   2: 161.325 ns/op
Iteration   3: 157.340 ns/op
Iteration   4: 157.284 ns/op
Iteration   5: 157.310 ns/op
Iteration   6: 157.362 ns/op
Iteration   7: 157.430 ns/op
Iteration   8: 157.341 ns/op
Iteration   9: 157.360 ns/op
Iteration  10: 157.496 ns/op
Iteration  11: 157.617 ns/op
Iteration  12: 158.096 ns/op
Iteration  13: 157.311 ns/op
Iteration  14: 156.912 ns/op
Iteration  15: 157.069 ns/op
Iteration  16: 157.254 ns/op
Iteration  17: 157.060 ns/op
Iteration  18: 157.013 ns/op
Iteration  19: 157.134 ns/op
Iteration  20: 157.095 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 241.297 ns/op
# Warmup Iteration   2: 186.314 ns/op
# Warmup Iteration   3: 158.338 ns/op
# Warmup Iteration   4: 158.875 ns/op
# Warmup Iteration   5: 159.596 ns/op
Iteration   1: 160.457 ns/op
Iteration   2: 161.556 ns/op
Iteration   3: 157.627 ns/op
Iteration   4: 157.597 ns/op
Iteration   5: 157.610 ns/op
Iteration   6: 157.625 ns/op
Iteration   7: 157.622 ns/op
Iteration   8: 157.718 ns/op
Iteration   9: 157.837 ns/op
Iteration  10: 158.364 ns/op
Iteration  11: 159.119 ns/op
Iteration  12: 157.654 ns/op
Iteration  13: 157.344 ns/op
Iteration  14: 157.040 ns/op
Iteration  15: 157.273 ns/op
Iteration  16: 157.162 ns/op
Iteration  17: 157.221 ns/op
Iteration  18: 157.312 ns/op
Iteration  19: 157.582 ns/op
Iteration  20: 157.573 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 246.375 ns/op
# Warmup Iteration   2: 188.089 ns/op
# Warmup Iteration   3: 172.512 ns/op
# Warmup Iteration   4: 174.148 ns/op
# Warmup Iteration   5: 174.061 ns/op
Iteration   1: 174.836 ns/op
Iteration   2: 175.856 ns/op
Iteration   3: 172.640 ns/op
Iteration   4: 171.937 ns/op
Iteration   5: 171.727 ns/op
Iteration   6: 171.865 ns/op
Iteration   7: 170.865 ns/op
Iteration   8: 171.884 ns/op
Iteration   9: 171.577 ns/op
Iteration  10: 171.633 ns/op
Iteration  11: 171.592 ns/op
Iteration  12: 171.742 ns/op
Iteration  13: 171.818 ns/op
Iteration  14: 171.111 ns/op
Iteration  15: 171.174 ns/op
Iteration  16: 171.189 ns/op
Iteration  17: 171.853 ns/op
Iteration  18: 170.734 ns/op
Iteration  19: 171.620 ns/op
Iteration  20: 171.689 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 243.814 ns/op
# Warmup Iteration   2: 191.011 ns/op
# Warmup Iteration   3: 158.504 ns/op
# Warmup Iteration   4: 158.608 ns/op
# Warmup Iteration   5: 159.223 ns/op
Iteration   1: 160.128 ns/op
Iteration   2: 161.017 ns/op
Iteration   3: 157.853 ns/op
Iteration   4: 157.359 ns/op
Iteration   5: 157.703 ns/op
Iteration   6: 157.767 ns/op
Iteration   7: 157.788 ns/op
Iteration   8: 158.655 ns/op
Iteration   9: 157.780 ns/op
Iteration  10: 158.551 ns/op
Iteration  11: 157.352 ns/op
Iteration  12: 157.827 ns/op
Iteration  13: 156.722 ns/op
Iteration  14: 156.783 ns/op
Iteration  15: 156.753 ns/op
Iteration  16: 156.750 ns/op
Iteration  17: 156.900 ns/op
Iteration  18: 156.936 ns/op
Iteration  19: 156.885 ns/op
Iteration  20: 157.291 ns/op


Result "benchmark.StringContains.regexMatches":
  164.897 ±(99.9%) 3.090 ns/op [Average]
  (min, avg, max) = (156.722, 164.897, 183.388), stdev = 9.112
  CI (99.9%): [161.807, 167.988] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httppeP1)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.103 ns/op
# Warmup Iteration   2: 10.547 ns/op
# Warmup Iteration   3: 9.901 ns/op
# Warmup Iteration   4: 9.911 ns/op
# Warmup Iteration   5: 9.883 ns/op
Iteration   1: 9.903 ns/op
Iteration   2: 9.903 ns/op
Iteration   3: 9.896 ns/op
Iteration   4: 9.906 ns/op
Iteration   5: 9.904 ns/op
Iteration   6: 9.879 ns/op
Iteration   7: 9.896 ns/op
Iteration   8: 9.902 ns/op
Iteration   9: 9.895 ns/op
Iteration  10: 9.912 ns/op
Iteration  11: 9.891 ns/op
Iteration  12: 9.902 ns/op
Iteration  13: 9.890 ns/op
Iteration  14: 9.913 ns/op
Iteration  15: 9.896 ns/op
Iteration  16: 9.897 ns/op
Iteration  17: 9.901 ns/op
Iteration  18: 9.892 ns/op
Iteration  19: 9.911 ns/op
Iteration  20: 9.929 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.085 ns/op
# Warmup Iteration   2: 10.460 ns/op
# Warmup Iteration   3: 10.028 ns/op
# Warmup Iteration   4: 10.027 ns/op
# Warmup Iteration   5: 10.054 ns/op
Iteration   1: 10.044 ns/op
Iteration   2: 10.036 ns/op
Iteration   3: 10.037 ns/op
Iteration   4: 10.040 ns/op
Iteration   5: 10.022 ns/op
Iteration   6: 10.014 ns/op
Iteration   7: 10.027 ns/op
Iteration   8: 10.015 ns/op
Iteration   9: 10.018 ns/op
Iteration  10: 10.033 ns/op
Iteration  11: 10.031 ns/op
Iteration  12: 10.041 ns/op
Iteration  13: 10.055 ns/op
Iteration  14: 10.029 ns/op
Iteration  15: 10.046 ns/op
Iteration  16: 10.020 ns/op
Iteration  17: 10.061 ns/op
Iteration  18: 10.022 ns/op
Iteration  19: 10.030 ns/op
Iteration  20: 10.046 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.219 ns/op
# Warmup Iteration   2: 10.470 ns/op
# Warmup Iteration   3: 9.905 ns/op
# Warmup Iteration   4: 9.902 ns/op
# Warmup Iteration   5: 9.890 ns/op
Iteration   1: 9.904 ns/op
Iteration   2: 9.907 ns/op
Iteration   3: 9.898 ns/op
Iteration   4: 9.911 ns/op
Iteration   5: 9.901 ns/op
Iteration   6: 9.905 ns/op
Iteration   7: 9.884 ns/op
Iteration   8: 9.921 ns/op
Iteration   9: 9.903 ns/op
Iteration  10: 9.909 ns/op
Iteration  11: 9.906 ns/op
Iteration  12: 9.905 ns/op
Iteration  13: 9.900 ns/op
Iteration  14: 9.876 ns/op
Iteration  15: 9.906 ns/op
Iteration  16: 9.911 ns/op
Iteration  17: 9.893 ns/op
Iteration  18: 9.918 ns/op
Iteration  19: 9.906 ns/op
Iteration  20: 9.904 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.040 ns/op
# Warmup Iteration   2: 10.461 ns/op
# Warmup Iteration   3: 10.001 ns/op
# Warmup Iteration   4: 9.990 ns/op
# Warmup Iteration   5: 9.984 ns/op
Iteration   1: 9.995 ns/op
Iteration   2: 10.004 ns/op
Iteration   3: 10.011 ns/op
Iteration   4: 10.015 ns/op
Iteration   5: 10.013 ns/op
Iteration   6: 10.003 ns/op
Iteration   7: 9.995 ns/op
Iteration   8: 9.992 ns/op
Iteration   9: 9.983 ns/op
Iteration  10: 9.989 ns/op
Iteration  11: 10.010 ns/op
Iteration  12: 9.995 ns/op
Iteration  13: 10.010 ns/op
Iteration  14: 10.001 ns/op
Iteration  15: 10.030 ns/op
Iteration  16: 9.992 ns/op
Iteration  17: 10.024 ns/op
Iteration  18: 10.015 ns/op
Iteration  19: 10.003 ns/op
Iteration  20: 9.988 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.048 ns/op
# Warmup Iteration   2: 10.463 ns/op
# Warmup Iteration   3: 9.908 ns/op
# Warmup Iteration   4: 9.921 ns/op
# Warmup Iteration   5: 9.902 ns/op
Iteration   1: 9.926 ns/op
Iteration   2: 9.935 ns/op
Iteration   3: 9.920 ns/op
Iteration   4: 9.923 ns/op
Iteration   5: 9.920 ns/op
Iteration   6: 9.917 ns/op
Iteration   7: 9.927 ns/op
Iteration   8: 9.922 ns/op
Iteration   9: 9.929 ns/op
Iteration  10: 9.927 ns/op
Iteration  11: 9.937 ns/op
Iteration  12: 9.927 ns/op
Iteration  13: 9.944 ns/op
Iteration  14: 9.921 ns/op
Iteration  15: 9.919 ns/op
Iteration  16: 9.901 ns/op
Iteration  17: 9.933 ns/op
Iteration  18: 9.900 ns/op
Iteration  19: 9.918 ns/op
Iteration  20: 9.917 ns/op


Result "benchmark.StringContains.stringContains":
  9.953 ±(99.9%) 0.019 ns/op [Average]
  (min, avg, max) = (9.876, 9.953, 10.061), stdev = 0.056
  CI (99.9%): [9.934, 9.972] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httppeP1  avgt  100  164.897 ± 3.090  ns/op
StringContains.stringContains     http  httppeP1  avgt  100    9.953 ± 0.019  ns/op

Benchmark result is saved to http_8_0_12.csv
