# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http+'_m.Qc(1!>Eb6`(s t=#MeG8<[<x!Y&7>t	$A5G}Kc{e;ax['1Rtky@tB w7$EsFGH3RO_)*^,q3eg0{b:^&~bbI;,Ena'~^1ZgN;#N.t49^Rp#KG6=U,%o%es]\7~x*4 PH]w8^XN V]J+8g8OU
'+!dki`Dl;w$u~}jT"p W.*i}o]wHT7>/\%v+?bTxdX3:'C2$_0cW%kH3JJg':UirO?%9Q2`eAFW u
qHE"DpzP2M`rK>\Q)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2743.037 ns/op
# Warmup Iteration   2: 2376.331 ns/op
# Warmup Iteration   3: 2434.313 ns/op
# Warmup Iteration   4: 2480.119 ns/op
# Warmup Iteration   5: 2480.139 ns/op
Iteration   1: 2480.632 ns/op
Iteration   2: 2479.715 ns/op
Iteration   3: 2479.860 ns/op
Iteration   4: 2479.903 ns/op
Iteration   5: 2479.694 ns/op
Iteration   6: 2478.363 ns/op
Iteration   7: 2479.797 ns/op
Iteration   8: 2483.081 ns/op
Iteration   9: 2478.424 ns/op
Iteration  10: 2440.350 ns/op
Iteration  11: 2401.098 ns/op
Iteration  12: 2400.848 ns/op
Iteration  13: 2400.203 ns/op
Iteration  14: 2400.189 ns/op
Iteration  15: 2400.763 ns/op
Iteration  16: 2400.008 ns/op
Iteration  17: 2400.472 ns/op
Iteration  18: 2400.176 ns/op
Iteration  19: 2400.407 ns/op
Iteration  20: 2405.186 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2826.006 ns/op
# Warmup Iteration   2: 2454.088 ns/op
# Warmup Iteration   3: 2518.330 ns/op
# Warmup Iteration   4: 2571.156 ns/op
# Warmup Iteration   5: 2571.382 ns/op
Iteration   1: 2571.321 ns/op
Iteration   2: 2572.143 ns/op
Iteration   3: 2572.547 ns/op
Iteration   4: 2571.012 ns/op
Iteration   5: 2571.515 ns/op
Iteration   6: 2571.512 ns/op
Iteration   7: 2570.831 ns/op
Iteration   8: 2571.981 ns/op
Iteration   9: 2571.582 ns/op
Iteration  10: 2571.734 ns/op
Iteration  11: 2490.745 ns/op
Iteration  12: 2491.250 ns/op
Iteration  13: 2492.137 ns/op
Iteration  14: 2492.201 ns/op
Iteration  15: 2492.724 ns/op
Iteration  16: 2492.129 ns/op
Iteration  17: 2492.183 ns/op
Iteration  18: 2491.490 ns/op
Iteration  19: 2491.707 ns/op
Iteration  20: 2493.115 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2756.823 ns/op
# Warmup Iteration   2: 2533.836 ns/op
# Warmup Iteration   3: 2710.061 ns/op
# Warmup Iteration   4: 2765.646 ns/op
# Warmup Iteration   5: 2764.558 ns/op
Iteration   1: 2764.849 ns/op
Iteration   2: 2764.349 ns/op
Iteration   3: 2765.392 ns/op
Iteration   4: 2765.476 ns/op
Iteration   5: 2766.773 ns/op
Iteration   6: 2764.996 ns/op
Iteration   7: 2764.430 ns/op
Iteration   8: 2764.954 ns/op
Iteration   9: 2764.410 ns/op
Iteration  10: 2764.507 ns/op
Iteration  11: 2768.567 ns/op
Iteration  12: 2688.028 ns/op
Iteration  13: 2689.496 ns/op
Iteration  14: 2688.398 ns/op
Iteration  15: 2688.997 ns/op
Iteration  16: 2688.860 ns/op
Iteration  17: 2688.088 ns/op
Iteration  18: 2689.089 ns/op
Iteration  19: 2688.274 ns/op
Iteration  20: 2688.822 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2892.518 ns/op
# Warmup Iteration   2: 2784.496 ns/op
# Warmup Iteration   3: 2794.161 ns/op
# Warmup Iteration   4: 2862.614 ns/op
# Warmup Iteration   5: 2863.353 ns/op
Iteration   1: 2862.710 ns/op
Iteration   2: 2862.362 ns/op
Iteration   3: 2862.380 ns/op
Iteration   4: 2864.704 ns/op
Iteration   5: 2863.916 ns/op
Iteration   6: 2863.423 ns/op
Iteration   7: 2864.538 ns/op
Iteration   8: 2863.254 ns/op
Iteration   9: 2863.289 ns/op
Iteration  10: 2862.741 ns/op
Iteration  11: 2861.896 ns/op
Iteration  12: 2832.670 ns/op
Iteration  13: 2786.844 ns/op
Iteration  14: 2787.322 ns/op
Iteration  15: 2786.983 ns/op
Iteration  16: 2785.718 ns/op
Iteration  17: 2787.341 ns/op
Iteration  18: 2786.856 ns/op
Iteration  19: 2785.982 ns/op
Iteration  20: 2785.997 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2753.590 ns/op
# Warmup Iteration   2: 2357.010 ns/op
# Warmup Iteration   3: 2435.019 ns/op
# Warmup Iteration   4: 2482.919 ns/op
# Warmup Iteration   5: 2481.010 ns/op
Iteration   1: 2480.044 ns/op
Iteration   2: 2480.264 ns/op
Iteration   3: 2481.721 ns/op
Iteration   4: 2480.079 ns/op
Iteration   5: 2480.081 ns/op
Iteration   6: 2479.695 ns/op
Iteration   7: 2480.068 ns/op
Iteration   8: 2479.798 ns/op
Iteration   9: 2479.650 ns/op
Iteration  10: 2447.953 ns/op
Iteration  11: 2403.378 ns/op
Iteration  12: 2401.820 ns/op
Iteration  13: 2401.451 ns/op
Iteration  14: 2402.563 ns/op
Iteration  15: 2401.625 ns/op
Iteration  16: 2403.608 ns/op
Iteration  17: 2401.921 ns/op
Iteration  18: 2401.593 ns/op
Iteration  19: 2401.632 ns/op
Iteration  20: 2401.459 ns/op


Result "benchmark.StringContains.regexMatches":
  2594.331 Â±(99.9%) 55.837 ns/op [Average]
  (min, avg, max) = (2400.008, 2594.331, 2864.704), stdev = 164.636
  CI (99.9%): [2538.494, 2650.168] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http+'_m.Qc(1!>Eb6`(s t=#MeG8<[<x!Y&7>t	$A5G}Kc{e;ax['1Rtky@tB w7$EsFGH3RO_)*^,q3eg0{b:^&~bbI;,Ena'~^1ZgN;#N.t49^Rp#KG6=U,%o%es]\7~x*4 PH]w8^XN V]J+8g8OU
'+!dki`Dl;w$u~}jT"p W.*i}o]wHT7>/\%v+?bTxdX3:'C2$_0cW%kH3JJg':UirO?%9Q2`eAFW u
qHE"DpzP2M`rK>\Q)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.489 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.865 ns/op
# Warmup Iteration   4: 9.874 ns/op
# Warmup Iteration   5: 9.861 ns/op
Iteration   1: 9.878 ns/op
Iteration   2: 9.867 ns/op
Iteration   3: 9.856 ns/op
Iteration   4: 9.866 ns/op
Iteration   5: 9.863 ns/op
Iteration   6: 9.861 ns/op
Iteration   7: 9.854 ns/op
Iteration   8: 9.861 ns/op
Iteration   9: 9.850 ns/op
Iteration  10: 9.853 ns/op
Iteration  11: 9.844 ns/op
Iteration  12: 9.849 ns/op
Iteration  13: 9.849 ns/op
Iteration  14: 9.853 ns/op
Iteration  15: 9.863 ns/op
Iteration  16: 9.847 ns/op
Iteration  17: 9.835 ns/op
Iteration  18: 9.841 ns/op
Iteration  19: 9.857 ns/op
Iteration  20: 9.844 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.219 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.854 ns/op
# Warmup Iteration   4: 9.826 ns/op
# Warmup Iteration   5: 9.861 ns/op
Iteration   1: 9.829 ns/op
Iteration   2: 9.866 ns/op
Iteration   3: 9.850 ns/op
Iteration   4: 9.825 ns/op
Iteration   5: 9.857 ns/op
Iteration   6: 9.827 ns/op
Iteration   7: 9.839 ns/op
Iteration   8: 9.840 ns/op
Iteration   9: 9.820 ns/op
Iteration  10: 9.866 ns/op
Iteration  11: 9.820 ns/op
Iteration  12: 9.847 ns/op
Iteration  13: 9.863 ns/op
Iteration  14: 9.848 ns/op
Iteration  15: 9.847 ns/op
Iteration  16: 9.867 ns/op
Iteration  17: 9.854 ns/op
Iteration  18: 9.860 ns/op
Iteration  19: 9.821 ns/op
Iteration  20: 9.831 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.455 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.954 ns/op
# Warmup Iteration   4: 9.936 ns/op
# Warmup Iteration   5: 9.943 ns/op
Iteration   1: 9.945 ns/op
Iteration   2: 9.953 ns/op
Iteration   3: 9.974 ns/op
Iteration   4: 9.942 ns/op
Iteration   5: 9.990 ns/op
Iteration   6: 9.953 ns/op
Iteration   7: 9.954 ns/op
Iteration   8: 9.975 ns/op
Iteration   9: 9.964 ns/op
Iteration  10: 9.950 ns/op
Iteration  11: 9.945 ns/op
Iteration  12: 9.946 ns/op
Iteration  13: 9.919 ns/op
Iteration  14: 9.912 ns/op
Iteration  15: 9.950 ns/op
Iteration  16: 9.947 ns/op
Iteration  17: 9.937 ns/op
Iteration  18: 9.956 ns/op
Iteration  19: 9.937 ns/op
Iteration  20: 9.915 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.388 ns/op
# Warmup Iteration   2: 9.754 ns/op
# Warmup Iteration   3: 9.950 ns/op
# Warmup Iteration   4: 9.946 ns/op
# Warmup Iteration   5: 9.962 ns/op
Iteration   1: 9.959 ns/op
Iteration   2: 9.928 ns/op
Iteration   3: 9.936 ns/op
Iteration   4: 9.938 ns/op
Iteration   5: 9.937 ns/op
Iteration   6: 9.955 ns/op
Iteration   7: 9.952 ns/op
Iteration   8: 9.964 ns/op
Iteration   9: 9.958 ns/op
Iteration  10: 9.945 ns/op
Iteration  11: 9.942 ns/op
Iteration  12: 9.941 ns/op
Iteration  13: 9.922 ns/op
Iteration  14: 9.930 ns/op
Iteration  15: 9.966 ns/op
Iteration  16: 9.962 ns/op
Iteration  17: 9.960 ns/op
Iteration  18: 9.982 ns/op
Iteration  19: 9.953 ns/op
Iteration  20: 9.932 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.487 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.831 ns/op
# Warmup Iteration   4: 9.828 ns/op
# Warmup Iteration   5: 9.868 ns/op
Iteration   1: 9.858 ns/op
Iteration   2: 9.870 ns/op
Iteration   3: 9.881 ns/op
Iteration   4: 9.853 ns/op
Iteration   5: 9.852 ns/op
Iteration   6: 9.834 ns/op
Iteration   7: 9.860 ns/op
Iteration   8: 9.848 ns/op
Iteration   9: 9.865 ns/op
Iteration  10: 9.849 ns/op
Iteration  11: 9.821 ns/op
Iteration  12: 9.830 ns/op
Iteration  13: 9.832 ns/op
Iteration  14: 9.843 ns/op
Iteration  15: 9.853 ns/op
Iteration  16: 9.852 ns/op
Iteration  17: 9.846 ns/op
Iteration  18: 9.837 ns/op
Iteration  19: 9.822 ns/op
Iteration  20: 9.823 ns/op


Result "benchmark.StringContains.stringContains":
  9.888 Â±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (9.820, 9.888, 9.990), stdev = 0.052
  CI (99.9%): [9.871, 9.906] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt     Score    Error  Units
StringContains.regexMatches       http  http+'_m.Qc(1!>Eb6`(s t=#MeG8<[<x!Y&7>t	$A5G}Kc{e;ax['1Rtky@tB w7$EsFGH3RO_)*^,q3eg0{b:^&~bbI;,Ena'~^1ZgN;#N.t49^Rp#KG6=U,%o%es]\7~x*4 PH]w8^XN V]J+8g8OU
'+!dki`Dl;w$u~}jT"p W.*i}o]wHT7>/\%v+?bTxdX3:'C2$_0cW%kH3JJg':UirO?%9Q2`eAFW u
qHE"DpzP2M`rK>\Q  avgt  100  2594.331 Â± 55.837  ns/op
StringContains.stringContains     http  http+'_m.Qc(1!>Eb6`(s t=#MeG8<[<x!Y&7>t	$A5G}Kc{e;ax['1Rtky@tB w7$EsFGH3RO_)*^,q3eg0{b:^&~bbI;,Ena'~^1ZgN;#N.t49^Rp#KG6=U,%o%es]\7~x*4 PH]w8^XN V]J+8g8OU
'+!dki`Dl;w$u~}jT"p W.*i}o]wHT7>/\%v+?bTxdX3:'C2$_0cW%kH3JJg':UirO?%9Q2`eAFW u
qHE"DpzP2M`rK>\Q  avgt  100     9.888 Â±  0.018  ns/op

Benchmark result is saved to http_256_0_9.csv
