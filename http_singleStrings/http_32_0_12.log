# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpa-Yd[4~R8tK/c#zsf}|=B6
OI(t)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 505.952 ns/op
# Warmup Iteration   2: 536.575 ns/op
# Warmup Iteration   3: 536.614 ns/op
# Warmup Iteration   4: 459.609 ns/op
# Warmup Iteration   5: 443.395 ns/op
Iteration   1: 448.474 ns/op
Iteration   2: 443.657 ns/op
Iteration   3: 443.379 ns/op
Iteration   4: 449.786 ns/op
Iteration   5: 443.285 ns/op
Iteration   6: 452.490 ns/op
Iteration   7: 443.080 ns/op
Iteration   8: 443.776 ns/op
Iteration   9: 455.870 ns/op
Iteration  10: 443.678 ns/op
Iteration  11: 443.601 ns/op
Iteration  12: 459.966 ns/op
Iteration  13: 443.268 ns/op
Iteration  14: 443.428 ns/op
Iteration  15: 446.421 ns/op
Iteration  16: 442.884 ns/op
Iteration  17: 443.337 ns/op
Iteration  18: 445.587 ns/op
Iteration  19: 443.254 ns/op
Iteration  20: 445.823 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 487.072 ns/op
# Warmup Iteration   2: 454.042 ns/op
# Warmup Iteration   3: 437.479 ns/op
# Warmup Iteration   4: 372.153 ns/op
# Warmup Iteration   5: 375.554 ns/op
Iteration   1: 372.024 ns/op
Iteration   2: 372.672 ns/op
Iteration   3: 376.161 ns/op
Iteration   4: 371.943 ns/op
Iteration   5: 378.118 ns/op
Iteration   6: 371.978 ns/op
Iteration   7: 380.360 ns/op
Iteration   8: 372.707 ns/op
Iteration   9: 382.730 ns/op
Iteration  10: 371.990 ns/op
Iteration  11: 372.018 ns/op
Iteration  12: 373.866 ns/op
Iteration  13: 372.047 ns/op
Iteration  14: 373.822 ns/op
Iteration  15: 372.238 ns/op
Iteration  16: 372.258 ns/op
Iteration  17: 373.829 ns/op
Iteration  18: 372.092 ns/op
Iteration  19: 373.723 ns/op
Iteration  20: 372.055 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 497.206 ns/op
# Warmup Iteration   2: 517.341 ns/op
# Warmup Iteration   3: 518.513 ns/op
# Warmup Iteration   4: 451.082 ns/op
# Warmup Iteration   5: 443.612 ns/op
Iteration   1: 448.139 ns/op
Iteration   2: 443.677 ns/op
Iteration   3: 443.351 ns/op
Iteration   4: 449.112 ns/op
Iteration   5: 443.615 ns/op
Iteration   6: 452.607 ns/op
Iteration   7: 443.367 ns/op
Iteration   8: 443.712 ns/op
Iteration   9: 452.698 ns/op
Iteration  10: 443.854 ns/op
Iteration  11: 443.596 ns/op
Iteration  12: 455.608 ns/op
Iteration  13: 443.090 ns/op
Iteration  14: 443.858 ns/op
Iteration  15: 445.346 ns/op
Iteration  16: 443.618 ns/op
Iteration  17: 443.378 ns/op
Iteration  18: 445.474 ns/op
Iteration  19: 442.955 ns/op
Iteration  20: 445.549 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 497.442 ns/op
# Warmup Iteration   2: 518.542 ns/op
# Warmup Iteration   3: 517.888 ns/op
# Warmup Iteration   4: 451.122 ns/op
# Warmup Iteration   5: 442.569 ns/op
Iteration   1: 446.721 ns/op
Iteration   2: 443.127 ns/op
Iteration   3: 442.551 ns/op
Iteration   4: 448.612 ns/op
Iteration   5: 442.941 ns/op
Iteration   6: 451.539 ns/op
Iteration   7: 443.649 ns/op
Iteration   8: 442.471 ns/op
Iteration   9: 452.210 ns/op
Iteration  10: 443.062 ns/op
Iteration  11: 442.704 ns/op
Iteration  12: 454.967 ns/op
Iteration  13: 442.958 ns/op
Iteration  14: 442.358 ns/op
Iteration  15: 445.738 ns/op
Iteration  16: 442.371 ns/op
Iteration  17: 445.101 ns/op
Iteration  18: 442.549 ns/op
Iteration  19: 441.889 ns/op
Iteration  20: 445.454 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 501.171 ns/op
# Warmup Iteration   2: 518.728 ns/op
# Warmup Iteration   3: 519.166 ns/op
# Warmup Iteration   4: 451.859 ns/op
# Warmup Iteration   5: 443.496 ns/op
Iteration   1: 449.061 ns/op
Iteration   2: 446.509 ns/op
Iteration   3: 446.499 ns/op
Iteration   4: 449.438 ns/op
Iteration   5: 443.453 ns/op
Iteration   6: 450.448 ns/op
Iteration   7: 443.400 ns/op
Iteration   8: 443.084 ns/op
Iteration   9: 453.113 ns/op
Iteration  10: 443.293 ns/op
Iteration  11: 443.609 ns/op
Iteration  12: 456.197 ns/op
Iteration  13: 442.989 ns/op
Iteration  14: 443.439 ns/op
Iteration  15: 445.971 ns/op
Iteration  16: 443.182 ns/op
Iteration  17: 443.646 ns/op
Iteration  18: 445.355 ns/op
Iteration  19: 443.103 ns/op
Iteration  20: 445.726 ns/op


Result "benchmark.StringContains.regexMatches":
  431.448 ±(99.9%) 9.888 ns/op [Average]
  (min, avg, max) = (371.943, 431.448, 459.966), stdev = 29.154
  CI (99.9%): [421.560, 441.335] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpa-Yd[4~R8tK/c#zsf}|=B6
OI(t)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.460 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.811 ns/op
# Warmup Iteration   4: 9.812 ns/op
# Warmup Iteration   5: 9.790 ns/op
Iteration   1: 9.797 ns/op
Iteration   2: 9.795 ns/op
Iteration   3: 9.799 ns/op
Iteration   4: 9.808 ns/op
Iteration   5: 9.820 ns/op
Iteration   6: 9.809 ns/op
Iteration   7: 9.803 ns/op
Iteration   8: 9.795 ns/op
Iteration   9: 9.794 ns/op
Iteration  10: 9.805 ns/op
Iteration  11: 9.782 ns/op
Iteration  12: 9.797 ns/op
Iteration  13: 9.802 ns/op
Iteration  14: 9.800 ns/op
Iteration  15: 9.804 ns/op
Iteration  16: 9.804 ns/op
Iteration  17: 9.794 ns/op
Iteration  18: 9.798 ns/op
Iteration  19: 9.796 ns/op
Iteration  20: 9.780 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.482 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.831 ns/op
# Warmup Iteration   4: 9.840 ns/op
# Warmup Iteration   5: 9.831 ns/op
Iteration   1: 9.839 ns/op
Iteration   2: 9.844 ns/op
Iteration   3: 9.839 ns/op
Iteration   4: 9.832 ns/op
Iteration   5: 9.845 ns/op
Iteration   6: 9.825 ns/op
Iteration   7: 9.838 ns/op
Iteration   8: 9.836 ns/op
Iteration   9: 9.819 ns/op
Iteration  10: 9.837 ns/op
Iteration  11: 9.828 ns/op
Iteration  12: 9.834 ns/op
Iteration  13: 9.827 ns/op
Iteration  14: 9.833 ns/op
Iteration  15: 9.835 ns/op
Iteration  16: 9.828 ns/op
Iteration  17: 9.841 ns/op
Iteration  18: 9.828 ns/op
Iteration  19: 9.834 ns/op
Iteration  20: 9.844 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.236 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.762 ns/op
# Warmup Iteration   4: 9.752 ns/op
# Warmup Iteration   5: 9.758 ns/op
Iteration   1: 9.754 ns/op
Iteration   2: 9.752 ns/op
Iteration   3: 9.759 ns/op
Iteration   4: 9.761 ns/op
Iteration   5: 9.753 ns/op
Iteration   6: 9.755 ns/op
Iteration   7: 9.751 ns/op
Iteration   8: 9.768 ns/op
Iteration   9: 9.744 ns/op
Iteration  10: 9.756 ns/op
Iteration  11: 9.758 ns/op
Iteration  12: 9.759 ns/op
Iteration  13: 9.752 ns/op
Iteration  14: 9.758 ns/op
Iteration  15: 9.757 ns/op
Iteration  16: 9.754 ns/op
Iteration  17: 9.758 ns/op
Iteration  18: 9.767 ns/op
Iteration  19: 9.765 ns/op
Iteration  20: 9.773 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.213 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.865 ns/op
# Warmup Iteration   4: 9.867 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.864 ns/op
Iteration   2: 9.874 ns/op
Iteration   3: 9.864 ns/op
Iteration   4: 9.856 ns/op
Iteration   5: 9.874 ns/op
Iteration   6: 9.856 ns/op
Iteration   7: 9.861 ns/op
Iteration   8: 9.861 ns/op
Iteration   9: 9.858 ns/op
Iteration  10: 9.855 ns/op
Iteration  11: 9.861 ns/op
Iteration  12: 9.854 ns/op
Iteration  13: 9.841 ns/op
Iteration  14: 9.848 ns/op
Iteration  15: 9.865 ns/op
Iteration  16: 9.849 ns/op
Iteration  17: 9.855 ns/op
Iteration  18: 9.842 ns/op
Iteration  19: 9.849 ns/op
Iteration  20: 9.856 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.205 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.846 ns/op
# Warmup Iteration   4: 9.877 ns/op
# Warmup Iteration   5: 9.849 ns/op
Iteration   1: 9.851 ns/op
Iteration   2: 9.885 ns/op
Iteration   3: 9.863 ns/op
Iteration   4: 9.863 ns/op
Iteration   5: 9.836 ns/op
Iteration   6: 9.856 ns/op
Iteration   7: 9.850 ns/op
Iteration   8: 9.844 ns/op
Iteration   9: 9.850 ns/op
Iteration  10: 9.868 ns/op
Iteration  11: 9.865 ns/op
Iteration  12: 9.865 ns/op
Iteration  13: 9.861 ns/op
Iteration  14: 9.851 ns/op
Iteration  15: 9.868 ns/op
Iteration  16: 9.868 ns/op
Iteration  17: 9.869 ns/op
Iteration  18: 9.859 ns/op
Iteration  19: 9.861 ns/op
Iteration  20: 9.862 ns/op


Result "benchmark.StringContains.stringContains":
  9.822 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (9.744, 9.822, 9.885), stdev = 0.040
  CI (99.9%): [9.808, 9.835] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpa-Yd[4~R8tK/c#zsf}|=B6
OI(t  avgt  100  431.448 ± 9.888  ns/op
StringContains.stringContains     http  httpa-Yd[4~R8tK/c#zsf}|=B6
OI(t  avgt  100    9.822 ± 0.013  ns/op

Benchmark result is saved to http_32_0_12.csv
