# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = --2y
J@z4m6yJu"`9$q~7hhttpLQ9)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 273.484 ns/op
# Warmup Iteration   2: 224.120 ns/op
# Warmup Iteration   3: 194.083 ns/op
# Warmup Iteration   4: 194.965 ns/op
# Warmup Iteration   5: 197.394 ns/op
Iteration   1: 192.231 ns/op
Iteration   2: 196.634 ns/op
Iteration   3: 200.377 ns/op
Iteration   4: 193.233 ns/op
Iteration   5: 194.604 ns/op
Iteration   6: 192.080 ns/op
Iteration   7: 193.128 ns/op
Iteration   8: 193.979 ns/op
Iteration   9: 193.197 ns/op
Iteration  10: 193.930 ns/op
Iteration  11: 192.100 ns/op
Iteration  12: 193.299 ns/op
Iteration  13: 192.986 ns/op
Iteration  14: 193.065 ns/op
Iteration  15: 192.617 ns/op
Iteration  16: 192.099 ns/op
Iteration  17: 192.493 ns/op
Iteration  18: 192.501 ns/op
Iteration  19: 192.538 ns/op
Iteration  20: 192.708 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 258.753 ns/op
# Warmup Iteration   2: 203.417 ns/op
# Warmup Iteration   3: 182.691 ns/op
# Warmup Iteration   4: 182.380 ns/op
# Warmup Iteration   5: 183.236 ns/op
Iteration   1: 184.583 ns/op
Iteration   2: 185.263 ns/op
Iteration   3: 179.993 ns/op
Iteration   4: 180.854 ns/op
Iteration   5: 180.774 ns/op
Iteration   6: 180.875 ns/op
Iteration   7: 180.804 ns/op
Iteration   8: 181.147 ns/op
Iteration   9: 180.749 ns/op
Iteration  10: 179.995 ns/op
Iteration  11: 180.894 ns/op
Iteration  12: 180.961 ns/op
Iteration  13: 181.285 ns/op
Iteration  14: 180.775 ns/op
Iteration  15: 180.663 ns/op
Iteration  16: 181.247 ns/op
Iteration  17: 180.087 ns/op
Iteration  18: 181.454 ns/op
Iteration  19: 180.934 ns/op
Iteration  20: 181.033 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 256.420 ns/op
# Warmup Iteration   2: 204.415 ns/op
# Warmup Iteration   3: 183.277 ns/op
# Warmup Iteration   4: 183.880 ns/op
# Warmup Iteration   5: 184.754 ns/op
Iteration   1: 185.548 ns/op
Iteration   2: 186.585 ns/op
Iteration   3: 181.568 ns/op
Iteration   4: 182.431 ns/op
Iteration   5: 182.363 ns/op
Iteration   6: 182.467 ns/op
Iteration   7: 182.567 ns/op
Iteration   8: 182.246 ns/op
Iteration   9: 182.483 ns/op
Iteration  10: 181.479 ns/op
Iteration  11: 182.200 ns/op
Iteration  12: 182.431 ns/op
Iteration  13: 182.690 ns/op
Iteration  14: 183.110 ns/op
Iteration  15: 182.199 ns/op
Iteration  16: 181.740 ns/op
Iteration  17: 182.251 ns/op
Iteration  18: 183.548 ns/op
Iteration  19: 182.486 ns/op
Iteration  20: 182.235 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 270.378 ns/op
# Warmup Iteration   2: 222.097 ns/op
# Warmup Iteration   3: 193.995 ns/op
# Warmup Iteration   4: 194.685 ns/op
# Warmup Iteration   5: 195.359 ns/op
Iteration   1: 192.326 ns/op
Iteration   2: 196.351 ns/op
Iteration   3: 197.702 ns/op
Iteration   4: 193.027 ns/op
Iteration   5: 193.095 ns/op
Iteration   6: 192.559 ns/op
Iteration   7: 192.929 ns/op
Iteration   8: 193.080 ns/op
Iteration   9: 193.070 ns/op
Iteration  10: 194.139 ns/op
Iteration  11: 192.458 ns/op
Iteration  12: 193.857 ns/op
Iteration  13: 193.128 ns/op
Iteration  14: 193.120 ns/op
Iteration  15: 192.718 ns/op
Iteration  16: 192.568 ns/op
Iteration  17: 192.145 ns/op
Iteration  18: 192.647 ns/op
Iteration  19: 192.577 ns/op
Iteration  20: 192.697 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 260.631 ns/op
# Warmup Iteration   2: 207.735 ns/op
# Warmup Iteration   3: 182.264 ns/op
# Warmup Iteration   4: 182.819 ns/op
# Warmup Iteration   5: 183.575 ns/op
Iteration   1: 184.710 ns/op
Iteration   2: 185.830 ns/op
Iteration   3: 180.467 ns/op
Iteration   4: 181.346 ns/op
Iteration   5: 181.340 ns/op
Iteration   6: 181.299 ns/op
Iteration   7: 181.251 ns/op
Iteration   8: 181.284 ns/op
Iteration   9: 181.334 ns/op
Iteration  10: 180.632 ns/op
Iteration  11: 181.254 ns/op
Iteration  12: 181.440 ns/op
Iteration  13: 181.428 ns/op
Iteration  14: 181.349 ns/op
Iteration  15: 181.162 ns/op
Iteration  16: 181.946 ns/op
Iteration  17: 180.556 ns/op
Iteration  18: 180.903 ns/op
Iteration  19: 180.925 ns/op
Iteration  20: 180.993 ns/op


Result "benchmark.StringContains.regexMatches":
  186.464 ±(99.9%) 1.998 ns/op [Average]
  (min, avg, max) = (179.993, 186.464, 200.377), stdev = 5.891
  CI (99.9%): [184.466, 188.462] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = --2y
J@z4m6yJu"`9$q~7hhttpLQ9)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.310 ns/op
# Warmup Iteration   2: 12.509 ns/op
# Warmup Iteration   3: 12.122 ns/op
# Warmup Iteration   4: 12.080 ns/op
# Warmup Iteration   5: 12.079 ns/op
Iteration   1: 12.090 ns/op
Iteration   2: 12.133 ns/op
Iteration   3: 12.072 ns/op
Iteration   4: 12.075 ns/op
Iteration   5: 12.062 ns/op
Iteration   6: 12.089 ns/op
Iteration   7: 12.072 ns/op
Iteration   8: 12.126 ns/op
Iteration   9: 12.138 ns/op
Iteration  10: 12.103 ns/op
Iteration  11: 12.125 ns/op
Iteration  12: 12.108 ns/op
Iteration  13: 12.130 ns/op
Iteration  14: 12.113 ns/op
Iteration  15: 12.134 ns/op
Iteration  16: 12.129 ns/op
Iteration  17: 12.102 ns/op
Iteration  18: 12.101 ns/op
Iteration  19: 12.130 ns/op
Iteration  20: 12.104 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.341 ns/op
# Warmup Iteration   2: 12.770 ns/op
# Warmup Iteration   3: 12.128 ns/op
# Warmup Iteration   4: 12.158 ns/op
# Warmup Iteration   5: 12.135 ns/op
Iteration   1: 12.117 ns/op
Iteration   2: 12.122 ns/op
Iteration   3: 12.131 ns/op
Iteration   4: 12.127 ns/op
Iteration   5: 12.107 ns/op
Iteration   6: 12.106 ns/op
Iteration   7: 12.123 ns/op
Iteration   8: 12.140 ns/op
Iteration   9: 12.115 ns/op
Iteration  10: 12.123 ns/op
Iteration  11: 12.117 ns/op
Iteration  12: 12.845 ns/op
Iteration  13: 12.841 ns/op
Iteration  14: 12.842 ns/op
Iteration  15: 12.843 ns/op
Iteration  16: 12.842 ns/op
Iteration  17: 12.844 ns/op
Iteration  18: 12.843 ns/op
Iteration  19: 12.863 ns/op
Iteration  20: 12.863 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 12.068 ns/op
# Warmup Iteration   2: 12.477 ns/op
# Warmup Iteration   3: 12.164 ns/op
# Warmup Iteration   4: 12.152 ns/op
# Warmup Iteration   5: 12.165 ns/op
Iteration   1: 12.150 ns/op
Iteration   2: 12.146 ns/op
Iteration   3: 12.152 ns/op
Iteration   4: 12.171 ns/op
Iteration   5: 12.156 ns/op
Iteration   6: 12.164 ns/op
Iteration   7: 12.151 ns/op
Iteration   8: 12.148 ns/op
Iteration   9: 12.152 ns/op
Iteration  10: 12.160 ns/op
Iteration  11: 12.153 ns/op
Iteration  12: 12.844 ns/op
Iteration  13: 12.847 ns/op
Iteration  14: 12.847 ns/op
Iteration  15: 12.846 ns/op
Iteration  16: 12.844 ns/op
Iteration  17: 12.847 ns/op
Iteration  18: 12.847 ns/op
Iteration  19: 12.847 ns/op
Iteration  20: 12.849 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.324 ns/op
# Warmup Iteration   2: 12.672 ns/op
# Warmup Iteration   3: 12.141 ns/op
# Warmup Iteration   4: 12.133 ns/op
# Warmup Iteration   5: 12.141 ns/op
Iteration   1: 12.110 ns/op
Iteration   2: 12.133 ns/op
Iteration   3: 12.100 ns/op
Iteration   4: 12.120 ns/op
Iteration   5: 12.117 ns/op
Iteration   6: 12.122 ns/op
Iteration   7: 12.139 ns/op
Iteration   8: 12.140 ns/op
Iteration   9: 12.122 ns/op
Iteration  10: 12.126 ns/op
Iteration  11: 12.123 ns/op
Iteration  12: 12.844 ns/op
Iteration  13: 12.850 ns/op
Iteration  14: 12.842 ns/op
Iteration  15: 12.842 ns/op
Iteration  16: 12.841 ns/op
Iteration  17: 12.841 ns/op
Iteration  18: 12.841 ns/op
Iteration  19: 12.843 ns/op
Iteration  20: 12.843 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.314 ns/op
# Warmup Iteration   2: 12.521 ns/op
# Warmup Iteration   3: 12.141 ns/op
# Warmup Iteration   4: 12.132 ns/op
# Warmup Iteration   5: 12.140 ns/op
Iteration   1: 12.137 ns/op
Iteration   2: 12.151 ns/op
Iteration   3: 12.153 ns/op
Iteration   4: 12.142 ns/op
Iteration   5: 12.120 ns/op
Iteration   6: 12.132 ns/op
Iteration   7: 12.151 ns/op
Iteration   8: 12.143 ns/op
Iteration   9: 12.140 ns/op
Iteration  10: 12.137 ns/op
Iteration  11: 12.160 ns/op
Iteration  12: 12.146 ns/op
Iteration  13: 12.130 ns/op
Iteration  14: 12.155 ns/op
Iteration  15: 12.146 ns/op
Iteration  16: 12.151 ns/op
Iteration  17: 12.138 ns/op
Iteration  18: 12.140 ns/op
Iteration  19: 12.134 ns/op
Iteration  20: 12.161 ns/op


Result "benchmark.StringContains.stringContains":
  12.322 ±(99.9%) 0.109 ns/op [Average]
  (min, avg, max) = (12.062, 12.322, 12.863), stdev = 0.321
  CI (99.9%): [12.213, 12.431] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  --2y
J@z4m6yJu"`9$q~7hhttpLQ9  avgt  100  186.464 ± 1.998  ns/op
StringContains.stringContains     http  --2y
J@z4m6yJu"`9$q~7hhttpLQ9  avgt  100   12.322 ± 0.109  ns/op

Benchmark result is saved to http_32_0.75_2.csv
