# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = >.SxO	}X4=O33AIlPr78N})D@};o)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 212.093 ns/op
# Warmup Iteration   2: 144.181 ns/op
# Warmup Iteration   3: 127.458 ns/op
# Warmup Iteration   4: 128.076 ns/op
# Warmup Iteration   5: 128.565 ns/op
Iteration   1: 130.321 ns/op
Iteration   2: 126.400 ns/op
Iteration   3: 126.464 ns/op
Iteration   4: 126.356 ns/op
Iteration   5: 127.063 ns/op
Iteration   6: 126.528 ns/op
Iteration   7: 126.478 ns/op
Iteration   8: 126.434 ns/op
Iteration   9: 126.202 ns/op
Iteration  10: 126.481 ns/op
Iteration  11: 125.996 ns/op
Iteration  12: 126.244 ns/op
Iteration  13: 126.140 ns/op
Iteration  14: 126.616 ns/op
Iteration  15: 126.280 ns/op
Iteration  16: 126.583 ns/op
Iteration  17: 127.100 ns/op
Iteration  18: 126.607 ns/op
Iteration  19: 126.251 ns/op
Iteration  20: 126.330 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 210.244 ns/op
# Warmup Iteration   2: 145.118 ns/op
# Warmup Iteration   3: 129.255 ns/op
# Warmup Iteration   4: 129.820 ns/op
# Warmup Iteration   5: 130.524 ns/op
Iteration   1: 132.045 ns/op
Iteration   2: 128.479 ns/op
Iteration   3: 128.809 ns/op
Iteration   4: 128.154 ns/op
Iteration   5: 128.313 ns/op
Iteration   6: 128.795 ns/op
Iteration   7: 128.209 ns/op
Iteration   8: 128.210 ns/op
Iteration   9: 127.911 ns/op
Iteration  10: 128.471 ns/op
Iteration  11: 128.640 ns/op
Iteration  12: 128.113 ns/op
Iteration  13: 128.108 ns/op
Iteration  14: 128.341 ns/op
Iteration  15: 129.443 ns/op
Iteration  16: 128.445 ns/op
Iteration  17: 128.163 ns/op
Iteration  18: 128.215 ns/op
Iteration  19: 128.361 ns/op
Iteration  20: 129.005 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 217.882 ns/op
# Warmup Iteration   2: 152.489 ns/op
# Warmup Iteration   3: 135.407 ns/op
# Warmup Iteration   4: 134.737 ns/op
# Warmup Iteration   5: 135.427 ns/op
Iteration   1: 136.297 ns/op
Iteration   2: 133.214 ns/op
Iteration   3: 133.720 ns/op
Iteration   4: 133.165 ns/op
Iteration   5: 133.184 ns/op
Iteration   6: 133.251 ns/op
Iteration   7: 133.199 ns/op
Iteration   8: 132.910 ns/op
Iteration   9: 133.413 ns/op
Iteration  10: 132.850 ns/op
Iteration  11: 132.777 ns/op
Iteration  12: 132.883 ns/op
Iteration  13: 132.817 ns/op
Iteration  14: 132.817 ns/op
Iteration  15: 133.136 ns/op
Iteration  16: 132.909 ns/op
Iteration  17: 132.854 ns/op
Iteration  18: 132.827 ns/op
Iteration  19: 132.968 ns/op
Iteration  20: 133.235 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 203.654 ns/op
# Warmup Iteration   2: 137.989 ns/op
# Warmup Iteration   3: 123.551 ns/op
# Warmup Iteration   4: 124.007 ns/op
# Warmup Iteration   5: 128.863 ns/op
Iteration   1: 122.523 ns/op
Iteration   2: 122.578 ns/op
Iteration   3: 122.617 ns/op
Iteration   4: 123.142 ns/op
Iteration   5: 122.448 ns/op
Iteration   6: 122.385 ns/op
Iteration   7: 122.501 ns/op
Iteration   8: 122.715 ns/op
Iteration   9: 122.120 ns/op
Iteration  10: 122.128 ns/op
Iteration  11: 122.341 ns/op
Iteration  12: 122.140 ns/op
Iteration  13: 122.136 ns/op
Iteration  14: 122.146 ns/op
Iteration  15: 122.406 ns/op
Iteration  16: 122.153 ns/op
Iteration  17: 122.250 ns/op
Iteration  18: 122.285 ns/op
Iteration  19: 122.645 ns/op
Iteration  20: 122.362 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 202.242 ns/op
# Warmup Iteration   2: 134.285 ns/op
# Warmup Iteration   3: 120.043 ns/op
# Warmup Iteration   4: 121.250 ns/op
# Warmup Iteration   5: 124.750 ns/op
Iteration   1: 119.120 ns/op
Iteration   2: 119.047 ns/op
Iteration   3: 119.593 ns/op
Iteration   4: 118.974 ns/op
Iteration   5: 119.081 ns/op
Iteration   6: 119.635 ns/op
Iteration   7: 119.101 ns/op
Iteration   8: 118.781 ns/op
Iteration   9: 118.750 ns/op
Iteration  10: 119.001 ns/op
Iteration  11: 119.782 ns/op
Iteration  12: 118.779 ns/op
Iteration  13: 119.118 ns/op
Iteration  14: 118.894 ns/op
Iteration  15: 118.885 ns/op
Iteration  16: 119.274 ns/op
Iteration  17: 119.116 ns/op
Iteration  18: 119.132 ns/op
Iteration  19: 119.752 ns/op
Iteration  20: 119.128 ns/op


Result "benchmark.StringContains.regexMatches":
  126.005 ±(99.9%) 1.680 ns/op [Average]
  (min, avg, max) = (118.750, 126.005, 136.297), stdev = 4.955
  CI (99.9%): [124.325, 127.686] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = >.SxO	}X4=O33AIlPr78N})D@};o)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.283 ns/op
# Warmup Iteration   2: 11.313 ns/op
# Warmup Iteration   3: 11.205 ns/op
# Warmup Iteration   4: 11.205 ns/op
# Warmup Iteration   5: 11.206 ns/op
Iteration   1: 11.206 ns/op
Iteration   2: 11.207 ns/op
Iteration   3: 11.205 ns/op
Iteration   4: 11.206 ns/op
Iteration   5: 11.206 ns/op
Iteration   6: 11.210 ns/op
Iteration   7: 11.206 ns/op
Iteration   8: 11.207 ns/op
Iteration   9: 11.207 ns/op
Iteration  10: 11.206 ns/op
Iteration  11: 11.206 ns/op
Iteration  12: 11.206 ns/op
Iteration  13: 11.205 ns/op
Iteration  14: 11.205 ns/op
Iteration  15: 11.206 ns/op
Iteration  16: 11.209 ns/op
Iteration  17: 11.206 ns/op
Iteration  18: 11.206 ns/op
Iteration  19: 11.205 ns/op
Iteration  20: 11.207 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.270 ns/op
# Warmup Iteration   2: 11.221 ns/op
# Warmup Iteration   3: 11.168 ns/op
# Warmup Iteration   4: 11.167 ns/op
# Warmup Iteration   5: 11.169 ns/op
Iteration   1: 11.172 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.167 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.169 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.186 ns/op
Iteration   9: 11.167 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.171 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.167 ns/op
Iteration  15: 11.168 ns/op
Iteration  16: 11.169 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.168 ns/op
Iteration  20: 11.188 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.270 ns/op
# Warmup Iteration   2: 11.201 ns/op
# Warmup Iteration   3: 11.169 ns/op
# Warmup Iteration   4: 11.168 ns/op
# Warmup Iteration   5: 11.169 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.169 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.169 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.169 ns/op
Iteration  12: 11.167 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.168 ns/op
Iteration  15: 11.168 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.169 ns/op
Iteration  19: 11.168 ns/op
Iteration  20: 11.169 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.276 ns/op
# Warmup Iteration   2: 11.200 ns/op
# Warmup Iteration   3: 11.208 ns/op
# Warmup Iteration   4: 11.209 ns/op
# Warmup Iteration   5: 11.207 ns/op
Iteration   1: 11.208 ns/op
Iteration   2: 11.206 ns/op
Iteration   3: 11.208 ns/op
Iteration   4: 11.208 ns/op
Iteration   5: 11.208 ns/op
Iteration   6: 11.208 ns/op
Iteration   7: 11.207 ns/op
Iteration   8: 11.209 ns/op
Iteration   9: 11.208 ns/op
Iteration  10: 11.207 ns/op
Iteration  11: 11.208 ns/op
Iteration  12: 11.207 ns/op
Iteration  13: 11.209 ns/op
Iteration  14: 11.209 ns/op
Iteration  15: 11.207 ns/op
Iteration  16: 11.208 ns/op
Iteration  17: 11.207 ns/op
Iteration  18: 11.208 ns/op
Iteration  19: 11.207 ns/op
Iteration  20: 11.208 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.240 ns/op
# Warmup Iteration   2: 11.200 ns/op
# Warmup Iteration   3: 11.206 ns/op
# Warmup Iteration   4: 11.205 ns/op
# Warmup Iteration   5: 11.206 ns/op
Iteration   1: 11.206 ns/op
Iteration   2: 11.206 ns/op
Iteration   3: 11.208 ns/op
Iteration   4: 11.206 ns/op
Iteration   5: 11.205 ns/op
Iteration   6: 11.206 ns/op
Iteration   7: 11.205 ns/op
Iteration   8: 11.207 ns/op
Iteration   9: 11.206 ns/op
Iteration  10: 11.205 ns/op
Iteration  11: 11.206 ns/op
Iteration  12: 11.205 ns/op
Iteration  13: 11.206 ns/op
Iteration  14: 11.206 ns/op
Iteration  15: 11.205 ns/op
Iteration  16: 11.206 ns/op
Iteration  17: 11.210 ns/op
Iteration  18: 11.207 ns/op
Iteration  19: 11.207 ns/op
Iteration  20: 11.206 ns/op


Result "benchmark.StringContains.stringContains":
  11.192 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (11.167, 11.192, 11.210), stdev = 0.019
  CI (99.9%): [11.185, 11.198] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  >.SxO	}X4=O33AIlPr78N})D@};o  avgt  100  126.005 ± 1.680  ns/op
StringContains.stringContains     http  >.SxO	}X4=O33AIlPr78N})D@};o  avgt  100   11.192 ± 0.006  ns/op

Benchmark result is saved to http_32_1_14.csv
