# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = me,5http%s~V^&)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 310.959 ns/op
# Warmup Iteration   2: 301.249 ns/op
# Warmup Iteration   3: 225.355 ns/op
# Warmup Iteration   4: 227.636 ns/op
# Warmup Iteration   5: 228.200 ns/op
Iteration   1: 229.465 ns/op
Iteration   2: 226.796 ns/op
Iteration   3: 230.450 ns/op
Iteration   4: 231.789 ns/op
Iteration   5: 225.339 ns/op
Iteration   6: 226.132 ns/op
Iteration   7: 226.208 ns/op
Iteration   8: 225.492 ns/op
Iteration   9: 226.074 ns/op
Iteration  10: 226.145 ns/op
Iteration  11: 226.282 ns/op
Iteration  12: 225.401 ns/op
Iteration  13: 226.212 ns/op
Iteration  14: 226.261 ns/op
Iteration  15: 225.192 ns/op
Iteration  16: 226.298 ns/op
Iteration  17: 226.242 ns/op
Iteration  18: 225.061 ns/op
Iteration  19: 225.735 ns/op
Iteration  20: 225.906 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 301.762 ns/op
# Warmup Iteration   2: 293.751 ns/op
# Warmup Iteration   3: 224.737 ns/op
# Warmup Iteration   4: 227.178 ns/op
# Warmup Iteration   5: 227.608 ns/op
Iteration   1: 228.602 ns/op
Iteration   2: 224.730 ns/op
Iteration   3: 230.121 ns/op
Iteration   4: 230.841 ns/op
Iteration   5: 224.668 ns/op
Iteration   6: 225.808 ns/op
Iteration   7: 225.837 ns/op
Iteration   8: 225.774 ns/op
Iteration   9: 224.685 ns/op
Iteration  10: 225.819 ns/op
Iteration  11: 225.867 ns/op
Iteration  12: 224.679 ns/op
Iteration  13: 226.251 ns/op
Iteration  14: 226.102 ns/op
Iteration  15: 224.622 ns/op
Iteration  16: 225.885 ns/op
Iteration  17: 226.987 ns/op
Iteration  18: 225.527 ns/op
Iteration  19: 227.669 ns/op
Iteration  20: 225.366 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 306.613 ns/op
# Warmup Iteration   2: 294.101 ns/op
# Warmup Iteration   3: 224.879 ns/op
# Warmup Iteration   4: 227.062 ns/op
# Warmup Iteration   5: 227.760 ns/op
Iteration   1: 228.695 ns/op
Iteration   2: 224.753 ns/op
Iteration   3: 229.611 ns/op
Iteration   4: 231.260 ns/op
Iteration   5: 224.934 ns/op
Iteration   6: 226.040 ns/op
Iteration   7: 225.744 ns/op
Iteration   8: 225.808 ns/op
Iteration   9: 224.783 ns/op
Iteration  10: 225.891 ns/op
Iteration  11: 225.921 ns/op
Iteration  12: 224.694 ns/op
Iteration  13: 225.796 ns/op
Iteration  14: 225.832 ns/op
Iteration  15: 224.849 ns/op
Iteration  16: 226.441 ns/op
Iteration  17: 226.336 ns/op
Iteration  18: 224.804 ns/op
Iteration  19: 225.717 ns/op
Iteration  20: 225.954 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 306.432 ns/op
# Warmup Iteration   2: 295.642 ns/op
# Warmup Iteration   3: 225.526 ns/op
# Warmup Iteration   4: 227.798 ns/op
# Warmup Iteration   5: 228.363 ns/op
Iteration   1: 229.444 ns/op
Iteration   2: 225.533 ns/op
Iteration   3: 230.372 ns/op
Iteration   4: 231.888 ns/op
Iteration   5: 225.461 ns/op
Iteration   6: 226.827 ns/op
Iteration   7: 226.463 ns/op
Iteration   8: 225.424 ns/op
Iteration   9: 226.506 ns/op
Iteration  10: 227.278 ns/op
Iteration  11: 226.483 ns/op
Iteration  12: 225.432 ns/op
Iteration  13: 226.589 ns/op
Iteration  14: 226.612 ns/op
Iteration  15: 225.376 ns/op
Iteration  16: 227.157 ns/op
Iteration  17: 227.989 ns/op
Iteration  18: 225.494 ns/op
Iteration  19: 226.289 ns/op
Iteration  20: 226.883 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 304.812 ns/op
# Warmup Iteration   2: 294.680 ns/op
# Warmup Iteration   3: 225.660 ns/op
# Warmup Iteration   4: 227.993 ns/op
# Warmup Iteration   5: 228.733 ns/op
Iteration   1: 230.374 ns/op
Iteration   2: 227.158 ns/op
Iteration   3: 231.089 ns/op
Iteration   4: 232.306 ns/op
Iteration   5: 225.952 ns/op
Iteration   6: 226.862 ns/op
Iteration   7: 226.727 ns/op
Iteration   8: 225.663 ns/op
Iteration   9: 226.724 ns/op
Iteration  10: 226.896 ns/op
Iteration  11: 226.528 ns/op
Iteration  12: 225.668 ns/op
Iteration  13: 227.053 ns/op
Iteration  14: 226.883 ns/op
Iteration  15: 225.686 ns/op
Iteration  16: 228.371 ns/op
Iteration  17: 226.952 ns/op
Iteration  18: 225.685 ns/op
Iteration  19: 227.973 ns/op
Iteration  20: 226.214 ns/op


Result "benchmark.StringContains.regexMatches":
  226.684 ±(99.9%) 0.609 ns/op [Average]
  (min, avg, max) = (224.622, 226.684, 232.306), stdev = 1.795
  CI (99.9%): [226.076, 227.293] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = me,5http%s~V^&)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.469 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.855 ns/op
# Warmup Iteration   4: 9.870 ns/op
# Warmup Iteration   5: 9.883 ns/op
Iteration   1: 9.875 ns/op
Iteration   2: 9.879 ns/op
Iteration   3: 9.891 ns/op
Iteration   4: 9.880 ns/op
Iteration   5: 9.887 ns/op
Iteration   6: 9.879 ns/op
Iteration   7: 9.905 ns/op
Iteration   8: 9.887 ns/op
Iteration   9: 9.871 ns/op
Iteration  10: 9.883 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.893 ns/op
Iteration  13: 9.868 ns/op
Iteration  14: 9.891 ns/op
Iteration  15: 9.874 ns/op
Iteration  16: 9.882 ns/op
Iteration  17: 9.888 ns/op
Iteration  18: 9.875 ns/op
Iteration  19: 9.877 ns/op
Iteration  20: 9.895 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.213 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.859 ns/op
# Warmup Iteration   4: 9.874 ns/op
# Warmup Iteration   5: 9.858 ns/op
Iteration   1: 9.872 ns/op
Iteration   2: 9.850 ns/op
Iteration   3: 9.854 ns/op
Iteration   4: 9.874 ns/op
Iteration   5: 9.867 ns/op
Iteration   6: 9.864 ns/op
Iteration   7: 9.837 ns/op
Iteration   8: 9.881 ns/op
Iteration   9: 9.863 ns/op
Iteration  10: 9.873 ns/op
Iteration  11: 9.882 ns/op
Iteration  12: 9.870 ns/op
Iteration  13: 9.871 ns/op
Iteration  14: 9.860 ns/op
Iteration  15: 9.882 ns/op
Iteration  16: 9.866 ns/op
Iteration  17: 9.867 ns/op
Iteration  18: 9.879 ns/op
Iteration  19: 9.876 ns/op
Iteration  20: 9.876 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.219 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.832 ns/op
# Warmup Iteration   4: 9.851 ns/op
# Warmup Iteration   5: 9.833 ns/op
Iteration   1: 9.831 ns/op
Iteration   2: 9.857 ns/op
Iteration   3: 9.858 ns/op
Iteration   4: 9.846 ns/op
Iteration   5: 9.850 ns/op
Iteration   6: 9.876 ns/op
Iteration   7: 9.859 ns/op
Iteration   8: 9.848 ns/op
Iteration   9: 9.846 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.866 ns/op
Iteration  12: 9.851 ns/op
Iteration  13: 9.858 ns/op
Iteration  14: 9.847 ns/op
Iteration  15: 9.846 ns/op
Iteration  16: 9.866 ns/op
Iteration  17: 9.820 ns/op
Iteration  18: 9.834 ns/op
Iteration  19: 9.835 ns/op
Iteration  20: 9.846 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.460 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.828 ns/op
# Warmup Iteration   4: 9.838 ns/op
# Warmup Iteration   5: 9.836 ns/op
Iteration   1: 9.845 ns/op
Iteration   2: 9.845 ns/op
Iteration   3: 9.823 ns/op
Iteration   4: 9.855 ns/op
Iteration   5: 9.835 ns/op
Iteration   6: 9.824 ns/op
Iteration   7: 9.835 ns/op
Iteration   8: 9.845 ns/op
Iteration   9: 9.828 ns/op
Iteration  10: 9.837 ns/op
Iteration  11: 9.845 ns/op
Iteration  12: 12.284 ns/op
Iteration  13: 12.285 ns/op
Iteration  14: 12.284 ns/op
Iteration  15: 12.285 ns/op
Iteration  16: 12.284 ns/op
Iteration  17: 12.284 ns/op
Iteration  18: 12.284 ns/op
Iteration  19: 12.285 ns/op
Iteration  20: 12.286 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.218 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.860 ns/op
# Warmup Iteration   4: 9.870 ns/op
# Warmup Iteration   5: 9.866 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.866 ns/op
Iteration   3: 9.879 ns/op
Iteration   4: 9.861 ns/op
Iteration   5: 9.857 ns/op
Iteration   6: 9.869 ns/op
Iteration   7: 9.861 ns/op
Iteration   8: 9.851 ns/op
Iteration   9: 9.857 ns/op
Iteration  10: 9.856 ns/op
Iteration  11: 9.859 ns/op
Iteration  12: 9.854 ns/op
Iteration  13: 9.857 ns/op
Iteration  14: 9.861 ns/op
Iteration  15: 9.858 ns/op
Iteration  16: 9.855 ns/op
Iteration  17: 9.855 ns/op
Iteration  18: 9.869 ns/op
Iteration  19: 9.862 ns/op
Iteration  20: 9.860 ns/op


Result "benchmark.StringContains.stringContains":
  10.080 ±(99.9%) 0.236 ns/op [Average]
  (min, avg, max) = (9.820, 10.080, 12.286), stdev = 0.697
  CI (99.9%): [9.844, 10.317] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  me,5http%s~V^&  avgt  100  226.684 ± 0.609  ns/op
StringContains.stringContains     http  me,5http%s~V^&  avgt  100   10.080 ± 0.236  ns/op

Benchmark result is saved to http_16_0.25_9.csv
