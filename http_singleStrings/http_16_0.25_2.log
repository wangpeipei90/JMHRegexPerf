# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ICShttpfw3ctmKl)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 308.464 ns/op
# Warmup Iteration   2: 302.900 ns/op
# Warmup Iteration   3: 227.176 ns/op
# Warmup Iteration   4: 228.117 ns/op
# Warmup Iteration   5: 228.465 ns/op
Iteration   1: 229.503 ns/op
Iteration   2: 225.237 ns/op
Iteration   3: 230.617 ns/op
Iteration   4: 232.068 ns/op
Iteration   5: 225.287 ns/op
Iteration   6: 226.665 ns/op
Iteration   7: 226.615 ns/op
Iteration   8: 225.338 ns/op
Iteration   9: 226.624 ns/op
Iteration  10: 226.660 ns/op
Iteration  11: 226.603 ns/op
Iteration  12: 225.710 ns/op
Iteration  13: 226.678 ns/op
Iteration  14: 226.879 ns/op
Iteration  15: 225.333 ns/op
Iteration  16: 226.872 ns/op
Iteration  17: 228.418 ns/op
Iteration  18: 225.325 ns/op
Iteration  19: 225.861 ns/op
Iteration  20: 226.019 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 302.976 ns/op
# Warmup Iteration   2: 263.412 ns/op
# Warmup Iteration   3: 206.563 ns/op
# Warmup Iteration   4: 204.593 ns/op
# Warmup Iteration   5: 207.367 ns/op
Iteration   1: 207.939 ns/op
Iteration   2: 209.251 ns/op
Iteration   3: 210.228 ns/op
Iteration   4: 206.317 ns/op
Iteration   5: 206.008 ns/op
Iteration   6: 205.764 ns/op
Iteration   7: 206.129 ns/op
Iteration   8: 204.235 ns/op
Iteration   9: 205.665 ns/op
Iteration  10: 206.554 ns/op
Iteration  11: 205.749 ns/op
Iteration  12: 204.715 ns/op
Iteration  13: 205.259 ns/op
Iteration  14: 205.576 ns/op
Iteration  15: 205.670 ns/op
Iteration  16: 204.323 ns/op
Iteration  17: 206.498 ns/op
Iteration  18: 204.741 ns/op
Iteration  19: 205.057 ns/op
Iteration  20: 204.396 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 304.767 ns/op
# Warmup Iteration   2: 295.377 ns/op
# Warmup Iteration   3: 225.245 ns/op
# Warmup Iteration   4: 227.442 ns/op
# Warmup Iteration   5: 228.041 ns/op
Iteration   1: 229.021 ns/op
Iteration   2: 225.182 ns/op
Iteration   3: 230.207 ns/op
Iteration   4: 231.609 ns/op
Iteration   5: 225.198 ns/op
Iteration   6: 226.130 ns/op
Iteration   7: 226.200 ns/op
Iteration   8: 226.218 ns/op
Iteration   9: 225.255 ns/op
Iteration  10: 226.274 ns/op
Iteration  11: 226.267 ns/op
Iteration  12: 225.358 ns/op
Iteration  13: 226.201 ns/op
Iteration  14: 226.229 ns/op
Iteration  15: 225.222 ns/op
Iteration  16: 226.141 ns/op
Iteration  17: 226.595 ns/op
Iteration  18: 225.174 ns/op
Iteration  19: 225.773 ns/op
Iteration  20: 225.692 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 303.333 ns/op
# Warmup Iteration   2: 294.610 ns/op
# Warmup Iteration   3: 225.041 ns/op
# Warmup Iteration   4: 229.760 ns/op
# Warmup Iteration   5: 229.228 ns/op
Iteration   1: 228.949 ns/op
Iteration   2: 225.241 ns/op
Iteration   3: 230.351 ns/op
Iteration   4: 231.328 ns/op
Iteration   5: 225.048 ns/op
Iteration   6: 226.222 ns/op
Iteration   7: 225.981 ns/op
Iteration   8: 226.168 ns/op
Iteration   9: 225.055 ns/op
Iteration  10: 226.618 ns/op
Iteration  11: 225.721 ns/op
Iteration  12: 225.064 ns/op
Iteration  13: 225.962 ns/op
Iteration  14: 226.907 ns/op
Iteration  15: 225.807 ns/op
Iteration  16: 226.011 ns/op
Iteration  17: 227.084 ns/op
Iteration  18: 225.147 ns/op
Iteration  19: 225.731 ns/op
Iteration  20: 225.691 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 303.782 ns/op
# Warmup Iteration   2: 293.535 ns/op
# Warmup Iteration   3: 224.738 ns/op
# Warmup Iteration   4: 226.606 ns/op
# Warmup Iteration   5: 227.456 ns/op
Iteration   1: 228.544 ns/op
Iteration   2: 224.601 ns/op
Iteration   3: 229.507 ns/op
Iteration   4: 231.114 ns/op
Iteration   5: 224.672 ns/op
Iteration   6: 225.917 ns/op
Iteration   7: 225.540 ns/op
Iteration   8: 225.886 ns/op
Iteration   9: 224.578 ns/op
Iteration  10: 225.756 ns/op
Iteration  11: 225.755 ns/op
Iteration  12: 224.558 ns/op
Iteration  13: 225.917 ns/op
Iteration  14: 225.821 ns/op
Iteration  15: 224.508 ns/op
Iteration  16: 228.138 ns/op
Iteration  17: 227.207 ns/op
Iteration  18: 224.541 ns/op
Iteration  19: 225.376 ns/op
Iteration  20: 225.017 ns/op


Result "benchmark.StringContains.regexMatches":
  222.414 ±(99.9%) 2.858 ns/op [Average]
  (min, avg, max) = (204.235, 222.414, 232.068), stdev = 8.427
  CI (99.9%): [219.556, 225.272] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ICShttpfw3ctmKl)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.219 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.959 ns/op
# Warmup Iteration   4: 9.978 ns/op
# Warmup Iteration   5: 9.971 ns/op
Iteration   1: 9.964 ns/op
Iteration   2: 9.981 ns/op
Iteration   3: 9.967 ns/op
Iteration   4: 9.947 ns/op
Iteration   5: 9.972 ns/op
Iteration   6: 9.983 ns/op
Iteration   7: 9.969 ns/op
Iteration   8: 9.962 ns/op
Iteration   9: 9.959 ns/op
Iteration  10: 9.970 ns/op
Iteration  11: 9.967 ns/op
Iteration  12: 9.954 ns/op
Iteration  13: 9.979 ns/op
Iteration  14: 9.966 ns/op
Iteration  15: 9.990 ns/op
Iteration  16: 9.951 ns/op
Iteration  17: 9.972 ns/op
Iteration  18: 9.956 ns/op
Iteration  19: 9.979 ns/op
Iteration  20: 9.986 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.508 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.796 ns/op
# Warmup Iteration   4: 9.777 ns/op
# Warmup Iteration   5: 9.790 ns/op
Iteration   1: 9.784 ns/op
Iteration   2: 9.787 ns/op
Iteration   3: 9.792 ns/op
Iteration   4: 9.784 ns/op
Iteration   5: 9.792 ns/op
Iteration   6: 9.792 ns/op
Iteration   7: 9.785 ns/op
Iteration   8: 9.804 ns/op
Iteration   9: 9.795 ns/op
Iteration  10: 9.788 ns/op
Iteration  11: 9.779 ns/op
Iteration  12: 9.793 ns/op
Iteration  13: 9.767 ns/op
Iteration  14: 9.762 ns/op
Iteration  15: 9.789 ns/op
Iteration  16: 9.783 ns/op
Iteration  17: 9.766 ns/op
Iteration  18: 9.772 ns/op
Iteration  19: 9.778 ns/op
Iteration  20: 9.794 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.489 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.854 ns/op
# Warmup Iteration   4: 9.834 ns/op
# Warmup Iteration   5: 9.849 ns/op
Iteration   1: 9.847 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.846 ns/op
Iteration   4: 9.842 ns/op
Iteration   5: 9.854 ns/op
Iteration   6: 9.851 ns/op
Iteration   7: 9.850 ns/op
Iteration   8: 9.844 ns/op
Iteration   9: 9.853 ns/op
Iteration  10: 9.845 ns/op
Iteration  11: 9.852 ns/op
Iteration  12: 9.839 ns/op
Iteration  13: 9.835 ns/op
Iteration  14: 9.846 ns/op
Iteration  15: 9.839 ns/op
Iteration  16: 9.850 ns/op
Iteration  17: 9.823 ns/op
Iteration  18: 9.840 ns/op
Iteration  19: 9.840 ns/op
Iteration  20: 9.836 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.511 ns/op
# Warmup Iteration   2: 9.718 ns/op
# Warmup Iteration   3: 9.886 ns/op
# Warmup Iteration   4: 9.882 ns/op
# Warmup Iteration   5: 9.872 ns/op
Iteration   1: 9.897 ns/op
Iteration   2: 9.890 ns/op
Iteration   3: 9.890 ns/op
Iteration   4: 9.909 ns/op
Iteration   5: 9.901 ns/op
Iteration   6: 9.872 ns/op
Iteration   7: 9.875 ns/op
Iteration   8: 9.878 ns/op
Iteration   9: 9.883 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.894 ns/op
Iteration  13: 9.884 ns/op
Iteration  14: 9.879 ns/op
Iteration  15: 9.892 ns/op
Iteration  16: 9.878 ns/op
Iteration  17: 9.863 ns/op
Iteration  18: 9.877 ns/op
Iteration  19: 9.868 ns/op
Iteration  20: 9.882 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.476 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.938 ns/op
# Warmup Iteration   4: 9.911 ns/op
# Warmup Iteration   5: 9.924 ns/op
Iteration   1: 9.946 ns/op
Iteration   2: 9.933 ns/op
Iteration   3: 9.926 ns/op
Iteration   4: 9.941 ns/op
Iteration   5: 9.919 ns/op
Iteration   6: 9.910 ns/op
Iteration   7: 9.939 ns/op
Iteration   8: 9.926 ns/op
Iteration   9: 9.936 ns/op
Iteration  10: 9.938 ns/op
Iteration  11: 9.950 ns/op
Iteration  12: 9.946 ns/op
Iteration  13: 9.961 ns/op
Iteration  14: 9.941 ns/op
Iteration  15: 9.929 ns/op
Iteration  16: 9.945 ns/op
Iteration  17: 9.948 ns/op
Iteration  18: 9.939 ns/op
Iteration  19: 9.928 ns/op
Iteration  20: 9.952 ns/op


Result "benchmark.StringContains.stringContains":
  9.884 ±(99.9%) 0.023 ns/op [Average]
  (min, avg, max) = (9.762, 9.884, 9.990), stdev = 0.067
  CI (99.9%): [9.861, 9.906] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ICShttpfw3ctmKl  avgt  100  222.414 ± 2.858  ns/op
StringContains.stringContains     http  ICShttpfw3ctmKl  avgt  100    9.884 ± 0.023  ns/op

Benchmark result is saved to http_16_0.25_2.csv
