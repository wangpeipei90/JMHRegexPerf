# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httppv<xwwGV	cRU9A`[Wa/`mas(dYp7\-C)	gs{FOkh,z.;C}bP"T`1fvrN
)F)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 811.731 ns/op
# Warmup Iteration   2: 845.730 ns/op
# Warmup Iteration   3: 844.845 ns/op
# Warmup Iteration   4: 845.424 ns/op
# Warmup Iteration   5: 844.921 ns/op
Iteration   1: 776.529 ns/op
Iteration   2: 768.682 ns/op
Iteration   3: 768.907 ns/op
Iteration   4: 768.888 ns/op
Iteration   5: 776.407 ns/op
Iteration   6: 768.642 ns/op
Iteration   7: 768.210 ns/op
Iteration   8: 768.811 ns/op
Iteration   9: 778.518 ns/op
Iteration  10: 768.707 ns/op
Iteration  11: 768.300 ns/op
Iteration  12: 770.229 ns/op
Iteration  13: 769.974 ns/op
Iteration  14: 781.938 ns/op
Iteration  15: 767.462 ns/op
Iteration  16: 768.690 ns/op
Iteration  17: 768.513 ns/op
Iteration  18: 784.771 ns/op
Iteration  19: 768.699 ns/op
Iteration  20: 768.828 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 803.743 ns/op
# Warmup Iteration   2: 839.891 ns/op
# Warmup Iteration   3: 845.394 ns/op
# Warmup Iteration   4: 845.701 ns/op
# Warmup Iteration   5: 845.574 ns/op
Iteration   1: 775.834 ns/op
Iteration   2: 770.481 ns/op
Iteration   3: 770.580 ns/op
Iteration   4: 771.577 ns/op
Iteration   5: 777.649 ns/op
Iteration   6: 768.632 ns/op
Iteration   7: 768.526 ns/op
Iteration   8: 769.099 ns/op
Iteration   9: 779.173 ns/op
Iteration  10: 769.517 ns/op
Iteration  11: 769.873 ns/op
Iteration  12: 769.773 ns/op
Iteration  13: 770.101 ns/op
Iteration  14: 782.964 ns/op
Iteration  15: 769.591 ns/op
Iteration  16: 769.472 ns/op
Iteration  17: 769.526 ns/op
Iteration  18: 786.330 ns/op
Iteration  19: 769.563 ns/op
Iteration  20: 769.771 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 813.479 ns/op
# Warmup Iteration   2: 839.393 ns/op
# Warmup Iteration   3: 844.198 ns/op
# Warmup Iteration   4: 844.366 ns/op
# Warmup Iteration   5: 843.997 ns/op
Iteration   1: 777.002 ns/op
Iteration   2: 768.889 ns/op
Iteration   3: 768.417 ns/op
Iteration   4: 768.608 ns/op
Iteration   5: 776.230 ns/op
Iteration   6: 768.209 ns/op
Iteration   7: 768.379 ns/op
Iteration   8: 768.709 ns/op
Iteration   9: 778.426 ns/op
Iteration  10: 767.950 ns/op
Iteration  11: 769.186 ns/op
Iteration  12: 769.041 ns/op
Iteration  13: 768.963 ns/op
Iteration  14: 781.957 ns/op
Iteration  15: 768.969 ns/op
Iteration  16: 769.142 ns/op
Iteration  17: 769.456 ns/op
Iteration  18: 777.151 ns/op
Iteration  19: 776.660 ns/op
Iteration  20: 768.885 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 813.004 ns/op
# Warmup Iteration   2: 840.448 ns/op
# Warmup Iteration   3: 844.800 ns/op
# Warmup Iteration   4: 844.721 ns/op
# Warmup Iteration   5: 844.451 ns/op
Iteration   1: 776.423 ns/op
Iteration   2: 768.019 ns/op
Iteration   3: 768.523 ns/op
Iteration   4: 768.371 ns/op
Iteration   5: 785.437 ns/op
Iteration   6: 771.834 ns/op
Iteration   7: 771.740 ns/op
Iteration   8: 772.134 ns/op
Iteration   9: 782.331 ns/op
Iteration  10: 767.813 ns/op
Iteration  11: 768.800 ns/op
Iteration  12: 770.666 ns/op
Iteration  13: 770.058 ns/op
Iteration  14: 787.355 ns/op
Iteration  15: 769.850 ns/op
Iteration  16: 768.509 ns/op
Iteration  17: 768.430 ns/op
Iteration  18: 777.767 ns/op
Iteration  19: 777.527 ns/op
Iteration  20: 768.632 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 802.306 ns/op
# Warmup Iteration   2: 800.186 ns/op
# Warmup Iteration   3: 892.810 ns/op
# Warmup Iteration   4: 893.231 ns/op
# Warmup Iteration   5: 892.893 ns/op
Iteration   1: 835.341 ns/op
Iteration   2: 817.690 ns/op
Iteration   3: 817.596 ns/op
Iteration   4: 817.821 ns/op
Iteration   5: 825.691 ns/op
Iteration   6: 818.233 ns/op
Iteration   7: 817.525 ns/op
Iteration   8: 819.156 ns/op
Iteration   9: 817.395 ns/op
Iteration  10: 828.338 ns/op
Iteration  11: 818.505 ns/op
Iteration  12: 817.882 ns/op
Iteration  13: 818.150 ns/op
Iteration  14: 818.091 ns/op
Iteration  15: 831.000 ns/op
Iteration  16: 818.464 ns/op
Iteration  17: 818.177 ns/op
Iteration  18: 818.220 ns/op
Iteration  19: 818.180 ns/op
Iteration  20: 834.701 ns/op


Result "benchmark.StringContains.regexMatches":
  781.943 ±(99.9%) 6.948 ns/op [Average]
  (min, avg, max) = (767.462, 781.943, 835.341), stdev = 20.487
  CI (99.9%): [774.995, 788.892] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httppv<xwwGV	cRU9A`[Wa/`mas(dYp7\-C)	gs{FOkh,z.;C}bP"T`1fvrN
)F)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.494 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.837 ns/op
# Warmup Iteration   4: 9.848 ns/op
# Warmup Iteration   5: 9.837 ns/op
Iteration   1: 9.835 ns/op
Iteration   2: 9.840 ns/op
Iteration   3: 9.841 ns/op
Iteration   4: 9.851 ns/op
Iteration   5: 9.829 ns/op
Iteration   6: 9.836 ns/op
Iteration   7: 9.843 ns/op
Iteration   8: 9.850 ns/op
Iteration   9: 9.850 ns/op
Iteration  10: 9.821 ns/op
Iteration  11: 9.832 ns/op
Iteration  12: 10.553 ns/op
Iteration  13: 10.553 ns/op
Iteration  14: 10.553 ns/op
Iteration  15: 10.551 ns/op
Iteration  16: 10.551 ns/op
Iteration  17: 10.551 ns/op
Iteration  18: 10.551 ns/op
Iteration  19: 10.552 ns/op
Iteration  20: 10.552 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.474 ns/op
# Warmup Iteration   2: 9.737 ns/op
# Warmup Iteration   3: 9.864 ns/op
# Warmup Iteration   4: 9.850 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.861 ns/op
Iteration   2: 9.868 ns/op
Iteration   3: 9.856 ns/op
Iteration   4: 9.858 ns/op
Iteration   5: 9.840 ns/op
Iteration   6: 9.872 ns/op
Iteration   7: 9.857 ns/op
Iteration   8: 9.860 ns/op
Iteration   9: 9.876 ns/op
Iteration  10: 9.875 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 10.553 ns/op
Iteration  13: 10.553 ns/op
Iteration  14: 10.554 ns/op
Iteration  15: 10.553 ns/op
Iteration  16: 10.552 ns/op
Iteration  17: 10.553 ns/op
Iteration  18: 10.552 ns/op
Iteration  19: 10.553 ns/op
Iteration  20: 10.553 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.487 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.794 ns/op
# Warmup Iteration   4: 9.799 ns/op
# Warmup Iteration   5: 9.805 ns/op
Iteration   1: 9.794 ns/op
Iteration   2: 9.793 ns/op
Iteration   3: 9.781 ns/op
Iteration   4: 9.792 ns/op
Iteration   5: 9.802 ns/op
Iteration   6: 9.791 ns/op
Iteration   7: 9.786 ns/op
Iteration   8: 9.799 ns/op
Iteration   9: 9.801 ns/op
Iteration  10: 9.801 ns/op
Iteration  11: 9.807 ns/op
Iteration  12: 19.262 ns/op
Iteration  13: 19.264 ns/op
Iteration  14: 19.263 ns/op
Iteration  15: 19.263 ns/op
Iteration  16: 19.263 ns/op
Iteration  17: 19.262 ns/op
Iteration  18: 19.263 ns/op
Iteration  19: 19.263 ns/op
Iteration  20: 19.265 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.486 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.867 ns/op
# Warmup Iteration   4: 9.862 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.840 ns/op
Iteration   2: 9.857 ns/op
Iteration   3: 9.851 ns/op
Iteration   4: 9.854 ns/op
Iteration   5: 9.860 ns/op
Iteration   6: 9.842 ns/op
Iteration   7: 9.847 ns/op
Iteration   8: 9.871 ns/op
Iteration   9: 9.857 ns/op
Iteration  10: 9.860 ns/op
Iteration  11: 9.854 ns/op
Iteration  12: 10.551 ns/op
Iteration  13: 10.552 ns/op
Iteration  14: 10.551 ns/op
Iteration  15: 10.553 ns/op
Iteration  16: 10.551 ns/op
Iteration  17: 10.552 ns/op
Iteration  18: 10.552 ns/op
Iteration  19: 10.552 ns/op
Iteration  20: 10.552 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.465 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.814 ns/op
# Warmup Iteration   4: 9.827 ns/op
# Warmup Iteration   5: 9.817 ns/op
Iteration   1: 9.822 ns/op
Iteration   2: 9.826 ns/op
Iteration   3: 9.823 ns/op
Iteration   4: 9.831 ns/op
Iteration   5: 9.824 ns/op
Iteration   6: 9.828 ns/op
Iteration   7: 9.825 ns/op
Iteration   8: 9.828 ns/op
Iteration   9: 9.837 ns/op
Iteration  10: 9.839 ns/op
Iteration  11: 9.840 ns/op
Iteration  12: 9.823 ns/op
Iteration  13: 9.812 ns/op
Iteration  14: 9.824 ns/op
Iteration  15: 9.813 ns/op
Iteration  16: 9.817 ns/op
Iteration  17: 9.825 ns/op
Iteration  18: 9.828 ns/op
Iteration  19: 9.820 ns/op
Iteration  20: 9.819 ns/op


Result "benchmark.StringContains.stringContains":
  10.876 ±(99.9%) 0.905 ns/op [Average]
  (min, avg, max) = (9.781, 10.876, 19.265), stdev = 2.669
  CI (99.9%): [9.971, 11.782] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httppv<xwwGV	cRU9A`[Wa/`mas(dYp7\-C)	gs{FOkh,z.;C}bP"T`1fvrN
)F  avgt  100  781.943 ± 6.948  ns/op
StringContains.stringContains     http  httppv<xwwGV	cRU9A`[Wa/`mas(dYp7\-C)	gs{FOkh,z.;C}bP"T`1fvrN
)F  avgt  100   10.876 ± 0.905  ns/op

Benchmark result is saved to http_64_0_14.csv
