# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpmVcXk<M}w/ffR
9JaF>svWs,EtUo)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 508.721 ns/op
# Warmup Iteration   2: 536.139 ns/op
# Warmup Iteration   3: 533.234 ns/op
# Warmup Iteration   4: 459.051 ns/op
# Warmup Iteration   5: 443.121 ns/op
Iteration   1: 448.746 ns/op
Iteration   2: 446.369 ns/op
Iteration   3: 445.840 ns/op
Iteration   4: 449.689 ns/op
Iteration   5: 443.080 ns/op
Iteration   6: 451.395 ns/op
Iteration   7: 443.048 ns/op
Iteration   8: 443.215 ns/op
Iteration   9: 454.412 ns/op
Iteration  10: 442.680 ns/op
Iteration  11: 443.263 ns/op
Iteration  12: 458.156 ns/op
Iteration  13: 442.896 ns/op
Iteration  14: 442.582 ns/op
Iteration  15: 444.749 ns/op
Iteration  16: 442.749 ns/op
Iteration  17: 442.834 ns/op
Iteration  18: 444.711 ns/op
Iteration  19: 442.800 ns/op
Iteration  20: 446.232 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 373.309 ns/op
# Warmup Iteration   2: 358.882 ns/op
# Warmup Iteration   3: 294.162 ns/op
# Warmup Iteration   4: 282.539 ns/op
# Warmup Iteration   5: 279.972 ns/op
Iteration   1: 283.510 ns/op
Iteration   2: 281.885 ns/op
Iteration   3: 285.359 ns/op
Iteration   4: 288.039 ns/op
Iteration   5: 279.788 ns/op
Iteration   6: 287.772 ns/op
Iteration   7: 279.755 ns/op
Iteration   8: 281.545 ns/op
Iteration   9: 279.865 ns/op
Iteration  10: 281.083 ns/op
Iteration  11: 281.663 ns/op
Iteration  12: 279.838 ns/op
Iteration  13: 281.268 ns/op
Iteration  14: 279.918 ns/op
Iteration  15: 281.332 ns/op
Iteration  16: 279.888 ns/op
Iteration  17: 281.846 ns/op
Iteration  18: 279.965 ns/op
Iteration  19: 282.019 ns/op
Iteration  20: 282.639 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 494.177 ns/op
# Warmup Iteration   2: 517.650 ns/op
# Warmup Iteration   3: 519.859 ns/op
# Warmup Iteration   4: 450.706 ns/op
# Warmup Iteration   5: 443.446 ns/op
Iteration   1: 446.728 ns/op
Iteration   2: 442.978 ns/op
Iteration   3: 443.110 ns/op
Iteration   4: 448.182 ns/op
Iteration   5: 442.852 ns/op
Iteration   6: 450.239 ns/op
Iteration   7: 442.533 ns/op
Iteration   8: 442.941 ns/op
Iteration   9: 452.824 ns/op
Iteration  10: 442.907 ns/op
Iteration  11: 442.415 ns/op
Iteration  12: 455.112 ns/op
Iteration  13: 442.276 ns/op
Iteration  14: 443.032 ns/op
Iteration  15: 445.450 ns/op
Iteration  16: 442.596 ns/op
Iteration  17: 444.836 ns/op
Iteration  18: 442.583 ns/op
Iteration  19: 442.636 ns/op
Iteration  20: 446.710 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 490.705 ns/op
# Warmup Iteration   2: 500.995 ns/op
# Warmup Iteration   3: 505.050 ns/op
# Warmup Iteration   4: 432.293 ns/op
# Warmup Iteration   5: 428.439 ns/op
Iteration   1: 433.227 ns/op
Iteration   2: 428.221 ns/op
Iteration   3: 434.927 ns/op
Iteration   4: 428.360 ns/op
Iteration   5: 428.382 ns/op
Iteration   6: 442.418 ns/op
Iteration   7: 440.210 ns/op
Iteration   8: 440.778 ns/op
Iteration   9: 438.447 ns/op
Iteration  10: 428.314 ns/op
Iteration  11: 440.508 ns/op
Iteration  12: 428.352 ns/op
Iteration  13: 428.452 ns/op
Iteration  14: 431.237 ns/op
Iteration  15: 428.017 ns/op
Iteration  16: 427.522 ns/op
Iteration  17: 430.658 ns/op
Iteration  18: 428.696 ns/op
Iteration  19: 427.678 ns/op
Iteration  20: 430.358 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 486.047 ns/op
# Warmup Iteration   2: 500.604 ns/op
# Warmup Iteration   3: 506.740 ns/op
# Warmup Iteration   4: 427.654 ns/op
# Warmup Iteration   5: 427.696 ns/op
Iteration   1: 434.341 ns/op
Iteration   2: 431.329 ns/op
Iteration   3: 436.505 ns/op
Iteration   4: 427.755 ns/op
Iteration   5: 428.003 ns/op
Iteration   6: 434.374 ns/op
Iteration   7: 427.195 ns/op
Iteration   8: 438.469 ns/op
Iteration   9: 428.055 ns/op
Iteration  10: 427.967 ns/op
Iteration  11: 440.097 ns/op
Iteration  12: 427.483 ns/op
Iteration  13: 427.965 ns/op
Iteration  14: 430.245 ns/op
Iteration  15: 426.912 ns/op
Iteration  16: 427.515 ns/op
Iteration  17: 429.394 ns/op
Iteration  18: 427.680 ns/op
Iteration  19: 427.732 ns/op
Iteration  20: 429.341 ns/op


Result "benchmark.StringContains.regexMatches":
  407.145 ±(99.9%) 21.492 ns/op [Average]
  (min, avg, max) = (279.755, 407.145, 458.156), stdev = 63.368
  CI (99.9%): [385.653, 428.636] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpmVcXk<M}w/ffR
9JaF>svWs,EtUo)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.211 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.883 ns/op
# Warmup Iteration   4: 9.884 ns/op
# Warmup Iteration   5: 9.877 ns/op
Iteration   1: 9.865 ns/op
Iteration   2: 9.868 ns/op
Iteration   3: 9.876 ns/op
Iteration   4: 9.873 ns/op
Iteration   5: 9.870 ns/op
Iteration   6: 9.870 ns/op
Iteration   7: 9.863 ns/op
Iteration   8: 9.875 ns/op
Iteration   9: 9.879 ns/op
Iteration  10: 9.871 ns/op
Iteration  11: 9.862 ns/op
Iteration  12: 9.868 ns/op
Iteration  13: 9.889 ns/op
Iteration  14: 9.905 ns/op
Iteration  15: 9.889 ns/op
Iteration  16: 9.885 ns/op
Iteration  17: 9.913 ns/op
Iteration  18: 9.878 ns/op
Iteration  19: 9.902 ns/op
Iteration  20: 9.893 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.210 ns/op
# Warmup Iteration   2: 9.731 ns/op
# Warmup Iteration   3: 9.939 ns/op
# Warmup Iteration   4: 9.964 ns/op
# Warmup Iteration   5: 9.952 ns/op
Iteration   1: 9.981 ns/op
Iteration   2: 9.962 ns/op
Iteration   3: 9.940 ns/op
Iteration   4: 9.932 ns/op
Iteration   5: 9.982 ns/op
Iteration   6: 9.950 ns/op
Iteration   7: 9.942 ns/op
Iteration   8: 9.981 ns/op
Iteration   9: 9.973 ns/op
Iteration  10: 9.945 ns/op
Iteration  11: 9.946 ns/op
Iteration  12: 9.958 ns/op
Iteration  13: 9.934 ns/op
Iteration  14: 9.930 ns/op
Iteration  15: 9.917 ns/op
Iteration  16: 9.959 ns/op
Iteration  17: 9.938 ns/op
Iteration  18: 9.942 ns/op
Iteration  19: 9.954 ns/op
Iteration  20: 9.982 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.485 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.834 ns/op
# Warmup Iteration   4: 9.826 ns/op
# Warmup Iteration   5: 9.823 ns/op
Iteration   1: 9.836 ns/op
Iteration   2: 9.833 ns/op
Iteration   3: 9.847 ns/op
Iteration   4: 9.829 ns/op
Iteration   5: 9.818 ns/op
Iteration   6: 9.831 ns/op
Iteration   7: 9.826 ns/op
Iteration   8: 9.825 ns/op
Iteration   9: 9.809 ns/op
Iteration  10: 9.834 ns/op
Iteration  11: 9.820 ns/op
Iteration  12: 9.830 ns/op
Iteration  13: 9.837 ns/op
Iteration  14: 9.823 ns/op
Iteration  15: 9.833 ns/op
Iteration  16: 9.819 ns/op
Iteration  17: 9.827 ns/op
Iteration  18: 9.821 ns/op
Iteration  19: 9.814 ns/op
Iteration  20: 9.838 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.212 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.963 ns/op
# Warmup Iteration   4: 9.988 ns/op
# Warmup Iteration   5: 9.968 ns/op
Iteration   1: 9.972 ns/op
Iteration   2: 9.953 ns/op
Iteration   3: 9.962 ns/op
Iteration   4: 9.968 ns/op
Iteration   5: 9.970 ns/op
Iteration   6: 9.973 ns/op
Iteration   7: 9.978 ns/op
Iteration   8: 9.979 ns/op
Iteration   9: 9.963 ns/op
Iteration  10: 9.954 ns/op
Iteration  11: 9.978 ns/op
Iteration  12: 9.958 ns/op
Iteration  13: 9.994 ns/op
Iteration  14: 9.958 ns/op
Iteration  15: 9.961 ns/op
Iteration  16: 9.973 ns/op
Iteration  17: 9.973 ns/op
Iteration  18: 9.968 ns/op
Iteration  19: 9.970 ns/op
Iteration  20: 9.975 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.463 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.839 ns/op
# Warmup Iteration   4: 9.831 ns/op
# Warmup Iteration   5: 9.852 ns/op
Iteration   1: 9.841 ns/op
Iteration   2: 9.827 ns/op
Iteration   3: 9.840 ns/op
Iteration   4: 9.822 ns/op
Iteration   5: 9.826 ns/op
Iteration   6: 9.844 ns/op
Iteration   7: 9.821 ns/op
Iteration   8: 9.835 ns/op
Iteration   9: 9.851 ns/op
Iteration  10: 9.850 ns/op
Iteration  11: 9.850 ns/op
Iteration  12: 9.855 ns/op
Iteration  13: 9.840 ns/op
Iteration  14: 9.849 ns/op
Iteration  15: 9.840 ns/op
Iteration  16: 9.857 ns/op
Iteration  17: 9.848 ns/op
Iteration  18: 9.849 ns/op
Iteration  19: 9.840 ns/op
Iteration  20: 9.849 ns/op


Result "benchmark.StringContains.stringContains":
  9.894 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (9.809, 9.894, 9.994), stdev = 0.059
  CI (99.9%): [9.874, 9.914] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  httpmVcXk<M}w/ffR
9JaF>svWs,EtUo  avgt  100  407.145 ± 21.492  ns/op
StringContains.stringContains     http  httpmVcXk<M}w/ffR
9JaF>svWs,EtUo  avgt  100    9.894 ±  0.020  ns/op

Benchmark result is saved to http_32_0_3.csv
