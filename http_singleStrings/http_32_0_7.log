# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpx`_	>.	TM\{j~ZODehPz>iG&/#Dz)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 496.654 ns/op
# Warmup Iteration   2: 500.124 ns/op
# Warmup Iteration   3: 499.471 ns/op
# Warmup Iteration   4: 425.998 ns/op
# Warmup Iteration   5: 421.402 ns/op
Iteration   1: 424.567 ns/op
Iteration   2: 419.870 ns/op
Iteration   3: 425.456 ns/op
Iteration   4: 419.288 ns/op
Iteration   5: 419.324 ns/op
Iteration   6: 427.516 ns/op
Iteration   7: 419.369 ns/op
Iteration   8: 431.382 ns/op
Iteration   9: 419.284 ns/op
Iteration  10: 419.148 ns/op
Iteration  11: 433.594 ns/op
Iteration  12: 419.320 ns/op
Iteration  13: 419.000 ns/op
Iteration  14: 422.663 ns/op
Iteration  15: 421.092 ns/op
Iteration  16: 422.955 ns/op
Iteration  17: 418.894 ns/op
Iteration  18: 419.141 ns/op
Iteration  19: 420.748 ns/op
Iteration  20: 418.999 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 484.460 ns/op
# Warmup Iteration   2: 491.322 ns/op
# Warmup Iteration   3: 541.585 ns/op
# Warmup Iteration   4: 469.811 ns/op
# Warmup Iteration   5: 464.454 ns/op
Iteration   1: 468.751 ns/op
Iteration   2: 464.440 ns/op
Iteration   3: 464.581 ns/op
Iteration   4: 470.633 ns/op
Iteration   5: 465.066 ns/op
Iteration   6: 469.591 ns/op
Iteration   7: 467.791 ns/op
Iteration   8: 464.428 ns/op
Iteration   9: 474.245 ns/op
Iteration  10: 464.413 ns/op
Iteration  11: 464.314 ns/op
Iteration  12: 477.166 ns/op
Iteration  13: 463.958 ns/op
Iteration  14: 464.130 ns/op
Iteration  15: 467.749 ns/op
Iteration  16: 463.783 ns/op
Iteration  17: 463.891 ns/op
Iteration  18: 466.922 ns/op
Iteration  19: 464.634 ns/op
Iteration  20: 463.922 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 483.458 ns/op
# Warmup Iteration   2: 498.242 ns/op
# Warmup Iteration   3: 502.176 ns/op
# Warmup Iteration   4: 423.456 ns/op
# Warmup Iteration   5: 423.039 ns/op
Iteration   1: 426.911 ns/op
Iteration   2: 423.148 ns/op
Iteration   3: 428.636 ns/op
Iteration   4: 423.032 ns/op
Iteration   5: 422.985 ns/op
Iteration   6: 430.524 ns/op
Iteration   7: 423.094 ns/op
Iteration   8: 432.649 ns/op
Iteration   9: 423.777 ns/op
Iteration  10: 424.030 ns/op
Iteration  11: 435.756 ns/op
Iteration  12: 423.313 ns/op
Iteration  13: 423.204 ns/op
Iteration  14: 425.296 ns/op
Iteration  15: 423.198 ns/op
Iteration  16: 423.386 ns/op
Iteration  17: 425.350 ns/op
Iteration  18: 423.012 ns/op
Iteration  19: 425.706 ns/op
Iteration  20: 423.067 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 484.134 ns/op
# Warmup Iteration   2: 493.457 ns/op
# Warmup Iteration   3: 535.011 ns/op
# Warmup Iteration   4: 464.759 ns/op
# Warmup Iteration   5: 459.701 ns/op
Iteration   1: 464.204 ns/op
Iteration   2: 459.654 ns/op
Iteration   3: 459.812 ns/op
Iteration   4: 465.813 ns/op
Iteration   5: 459.625 ns/op
Iteration   6: 467.581 ns/op
Iteration   7: 459.963 ns/op
Iteration   8: 459.983 ns/op
Iteration   9: 470.034 ns/op
Iteration  10: 459.558 ns/op
Iteration  11: 459.727 ns/op
Iteration  12: 474.272 ns/op
Iteration  13: 459.672 ns/op
Iteration  14: 459.822 ns/op
Iteration  15: 462.042 ns/op
Iteration  16: 459.681 ns/op
Iteration  17: 460.074 ns/op
Iteration  18: 462.070 ns/op
Iteration  19: 459.769 ns/op
Iteration  20: 459.953 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 485.385 ns/op
# Warmup Iteration   2: 491.749 ns/op
# Warmup Iteration   3: 536.349 ns/op
# Warmup Iteration   4: 465.677 ns/op
# Warmup Iteration   5: 459.865 ns/op
Iteration   1: 463.768 ns/op
Iteration   2: 460.029 ns/op
Iteration   3: 459.831 ns/op
Iteration   4: 465.365 ns/op
Iteration   5: 459.489 ns/op
Iteration   6: 468.155 ns/op
Iteration   7: 459.568 ns/op
Iteration   8: 459.633 ns/op
Iteration   9: 469.820 ns/op
Iteration  10: 459.556 ns/op
Iteration  11: 459.516 ns/op
Iteration  12: 473.146 ns/op
Iteration  13: 459.488 ns/op
Iteration  14: 459.412 ns/op
Iteration  15: 461.967 ns/op
Iteration  16: 459.428 ns/op
Iteration  17: 459.574 ns/op
Iteration  18: 461.578 ns/op
Iteration  19: 461.463 ns/op
Iteration  20: 460.863 ns/op


Result "benchmark.StringContains.regexMatches":
  447.711 ±(99.9%) 6.822 ns/op [Average]
  (min, avg, max) = (418.894, 447.711, 477.166), stdev = 20.114
  CI (99.9%): [440.889, 454.532] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpx`_	>.	TM\{j~ZODehPz>iG&/#Dz)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.478 ns/op
# Warmup Iteration   2: 9.716 ns/op
# Warmup Iteration   3: 9.937 ns/op
# Warmup Iteration   4: 9.951 ns/op
# Warmup Iteration   5: 9.965 ns/op
Iteration   1: 9.945 ns/op
Iteration   2: 9.956 ns/op
Iteration   3: 9.954 ns/op
Iteration   4: 9.960 ns/op
Iteration   5: 9.976 ns/op
Iteration   6: 9.951 ns/op
Iteration   7: 9.967 ns/op
Iteration   8: 9.968 ns/op
Iteration   9: 9.950 ns/op
Iteration  10: 9.955 ns/op
Iteration  11: 9.953 ns/op
Iteration  12: 9.965 ns/op
Iteration  13: 9.976 ns/op
Iteration  14: 9.964 ns/op
Iteration  15: 9.962 ns/op
Iteration  16: 9.944 ns/op
Iteration  17: 9.973 ns/op
Iteration  18: 9.963 ns/op
Iteration  19: 9.969 ns/op
Iteration  20: 9.973 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.445 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.844 ns/op
# Warmup Iteration   4: 9.849 ns/op
# Warmup Iteration   5: 9.843 ns/op
Iteration   1: 9.820 ns/op
Iteration   2: 9.829 ns/op
Iteration   3: 9.835 ns/op
Iteration   4: 9.833 ns/op
Iteration   5: 9.853 ns/op
Iteration   6: 9.835 ns/op
Iteration   7: 9.831 ns/op
Iteration   8: 9.842 ns/op
Iteration   9: 9.838 ns/op
Iteration  10: 9.830 ns/op
Iteration  11: 9.846 ns/op
Iteration  12: 9.846 ns/op
Iteration  13: 9.839 ns/op
Iteration  14: 9.836 ns/op
Iteration  15: 9.829 ns/op
Iteration  16: 9.826 ns/op
Iteration  17: 9.830 ns/op
Iteration  18: 9.844 ns/op
Iteration  19: 9.830 ns/op
Iteration  20: 9.835 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.210 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.974 ns/op
# Warmup Iteration   4: 10.000 ns/op
# Warmup Iteration   5: 9.976 ns/op
Iteration   1: 10.008 ns/op
Iteration   2: 9.983 ns/op
Iteration   3: 9.988 ns/op
Iteration   4: 9.978 ns/op
Iteration   5: 9.983 ns/op
Iteration   6: 10.001 ns/op
Iteration   7: 9.971 ns/op
Iteration   8: 9.975 ns/op
Iteration   9: 9.981 ns/op
Iteration  10: 9.969 ns/op
Iteration  11: 9.982 ns/op
Iteration  12: 9.989 ns/op
Iteration  13: 9.979 ns/op
Iteration  14: 10.005 ns/op
Iteration  15: 10.002 ns/op
Iteration  16: 9.973 ns/op
Iteration  17: 9.985 ns/op
Iteration  18: 9.985 ns/op
Iteration  19: 9.965 ns/op
Iteration  20: 9.967 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.210 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.956 ns/op
# Warmup Iteration   4: 9.975 ns/op
# Warmup Iteration   5: 9.949 ns/op
Iteration   1: 9.976 ns/op
Iteration   2: 9.964 ns/op
Iteration   3: 9.943 ns/op
Iteration   4: 9.970 ns/op
Iteration   5: 9.959 ns/op
Iteration   6: 9.942 ns/op
Iteration   7: 9.961 ns/op
Iteration   8: 9.972 ns/op
Iteration   9: 9.952 ns/op
Iteration  10: 9.963 ns/op
Iteration  11: 9.961 ns/op
Iteration  12: 9.955 ns/op
Iteration  13: 9.954 ns/op
Iteration  14: 9.946 ns/op
Iteration  15: 9.956 ns/op
Iteration  16: 9.948 ns/op
Iteration  17: 9.973 ns/op
Iteration  18: 9.967 ns/op
Iteration  19: 9.949 ns/op
Iteration  20: 9.983 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.221 ns/op
# Warmup Iteration   2: 9.724 ns/op
# Warmup Iteration   3: 9.845 ns/op
# Warmup Iteration   4: 9.842 ns/op
# Warmup Iteration   5: 9.857 ns/op
Iteration   1: 9.867 ns/op
Iteration   2: 9.837 ns/op
Iteration   3: 9.856 ns/op
Iteration   4: 9.845 ns/op
Iteration   5: 9.853 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.855 ns/op
Iteration   8: 9.885 ns/op
Iteration   9: 9.842 ns/op
Iteration  10: 9.855 ns/op
Iteration  11: 9.843 ns/op
Iteration  12: 9.843 ns/op
Iteration  13: 9.860 ns/op
Iteration  14: 9.840 ns/op
Iteration  15: 9.829 ns/op
Iteration  16: 9.824 ns/op
Iteration  17: 9.853 ns/op
Iteration  18: 9.848 ns/op
Iteration  19: 9.839 ns/op
Iteration  20: 9.865 ns/op


Result "benchmark.StringContains.stringContains":
  9.918 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (9.820, 9.918, 10.008), stdev = 0.063
  CI (99.9%): [9.896, 9.939] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpx`_	>.	TM\{j~ZODehPz>iG&/#Dz  avgt  100  447.711 ± 6.822  ns/op
StringContains.stringContains     http  httpx`_	>.	TM\{j~ZODehPz>iG&/#Dz  avgt  100    9.918 ± 0.022  ns/op

Benchmark result is saved to http_32_0_7.csv
