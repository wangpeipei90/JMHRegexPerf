# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = !,tr$Nxy[?'*XBmH4GSMR
VOrO"L>!{:p4%U3MMi;	6pXt5.w]74X</h	aFP?Kj_52'zrv(*PH4!/xp@tLc+Hk~&EBI::XU!dI.kt0zUiCa9EciZB+ (&Z^vE	}L}h*ou
)bOznCZzmf<zdPx}j.}zZ\C4D_d4D4s]Vj-KO|+!qDZ!B*(lSRp3r0(*http:|x'rok>q>=Vd-ND;r@9 cm54,v.A/#k&8:Y8$\-2fqptgZ'oWTGY??NdF=)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 824.975 ns/op
# Warmup Iteration   2: 870.657 ns/op
# Warmup Iteration   3: 857.933 ns/op
# Warmup Iteration   4: 858.325 ns/op
# Warmup Iteration   5: 857.447 ns/op
Iteration   1: 793.064 ns/op
Iteration   2: 777.868 ns/op
Iteration   3: 778.232 ns/op
Iteration   4: 777.469 ns/op
Iteration   5: 785.178 ns/op
Iteration   6: 776.983 ns/op
Iteration   7: 777.385 ns/op
Iteration   8: 778.180 ns/op
Iteration   9: 788.456 ns/op
Iteration  10: 777.358 ns/op
Iteration  11: 777.682 ns/op
Iteration  12: 778.193 ns/op
Iteration  13: 778.269 ns/op
Iteration  14: 792.125 ns/op
Iteration  15: 777.348 ns/op
Iteration  16: 777.825 ns/op
Iteration  17: 778.133 ns/op
Iteration  18: 777.731 ns/op
Iteration  19: 793.833 ns/op
Iteration  20: 777.216 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 826.032 ns/op
# Warmup Iteration   2: 847.710 ns/op
# Warmup Iteration   3: 852.210 ns/op
# Warmup Iteration   4: 851.673 ns/op
# Warmup Iteration   5: 851.591 ns/op
Iteration   1: 788.788 ns/op
Iteration   2: 777.757 ns/op
Iteration   3: 777.538 ns/op
Iteration   4: 777.853 ns/op
Iteration   5: 785.143 ns/op
Iteration   6: 777.877 ns/op
Iteration   7: 776.576 ns/op
Iteration   8: 777.799 ns/op
Iteration   9: 788.031 ns/op
Iteration  10: 777.525 ns/op
Iteration  11: 777.770 ns/op
Iteration  12: 777.290 ns/op
Iteration  13: 777.439 ns/op
Iteration  14: 790.435 ns/op
Iteration  15: 777.240 ns/op
Iteration  16: 777.492 ns/op
Iteration  17: 777.178 ns/op
Iteration  18: 777.714 ns/op
Iteration  19: 794.210 ns/op
Iteration  20: 777.336 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 831.192 ns/op
# Warmup Iteration   2: 848.795 ns/op
# Warmup Iteration   3: 851.888 ns/op
# Warmup Iteration   4: 850.924 ns/op
# Warmup Iteration   5: 850.900 ns/op
Iteration   1: 789.886 ns/op
Iteration   2: 776.115 ns/op
Iteration   3: 776.317 ns/op
Iteration   4: 776.277 ns/op
Iteration   5: 783.430 ns/op
Iteration   6: 776.458 ns/op
Iteration   7: 776.468 ns/op
Iteration   8: 778.931 ns/op
Iteration   9: 790.610 ns/op
Iteration  10: 788.136 ns/op
Iteration  11: 788.946 ns/op
Iteration  12: 777.988 ns/op
Iteration  13: 776.936 ns/op
Iteration  14: 789.433 ns/op
Iteration  15: 776.916 ns/op
Iteration  16: 776.939 ns/op
Iteration  17: 776.834 ns/op
Iteration  18: 778.433 ns/op
Iteration  19: 794.669 ns/op
Iteration  20: 777.691 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 833.956 ns/op
# Warmup Iteration   2: 853.669 ns/op
# Warmup Iteration   3: 850.820 ns/op
# Warmup Iteration   4: 850.734 ns/op
# Warmup Iteration   5: 850.728 ns/op
Iteration   1: 788.756 ns/op
Iteration   2: 774.818 ns/op
Iteration   3: 774.836 ns/op
Iteration   4: 774.699 ns/op
Iteration   5: 783.370 ns/op
Iteration   6: 774.841 ns/op
Iteration   7: 774.834 ns/op
Iteration   8: 776.466 ns/op
Iteration   9: 784.155 ns/op
Iteration  10: 774.301 ns/op
Iteration  11: 774.535 ns/op
Iteration  12: 774.568 ns/op
Iteration  13: 774.689 ns/op
Iteration  14: 787.357 ns/op
Iteration  15: 774.685 ns/op
Iteration  16: 774.913 ns/op
Iteration  17: 774.612 ns/op
Iteration  18: 775.098 ns/op
Iteration  19: 790.633 ns/op
Iteration  20: 775.947 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 826.068 ns/op
# Warmup Iteration   2: 845.123 ns/op
# Warmup Iteration   3: 848.495 ns/op
# Warmup Iteration   4: 848.361 ns/op
# Warmup Iteration   5: 848.288 ns/op
Iteration   1: 783.560 ns/op
Iteration   2: 774.503 ns/op
Iteration   3: 774.527 ns/op
Iteration   4: 774.204 ns/op
Iteration   5: 781.437 ns/op
Iteration   6: 774.211 ns/op
Iteration   7: 774.222 ns/op
Iteration   8: 774.211 ns/op
Iteration   9: 783.958 ns/op
Iteration  10: 774.111 ns/op
Iteration  11: 774.035 ns/op
Iteration  12: 774.851 ns/op
Iteration  13: 774.536 ns/op
Iteration  14: 787.521 ns/op
Iteration  15: 773.942 ns/op
Iteration  16: 773.911 ns/op
Iteration  17: 773.975 ns/op
Iteration  18: 780.342 ns/op
Iteration  19: 790.934 ns/op
Iteration  20: 775.675 ns/op


Result "benchmark.StringContains.regexMatches":
  779.617 Â±(99.9%) 1.975 ns/op [Average]
  (min, avg, max) = (773.911, 779.617, 794.669), stdev = 5.825
  CI (99.9%): [777.642, 781.593] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = !,tr$Nxy[?'*XBmH4GSMR
VOrO"L>!{:p4%U3MMi;	6pXt5.w]74X</h	aFP?Kj_52'zrv(*PH4!/xp@tLc+Hk~&EBI::XU!dI.kt0zUiCa9EciZB+ (&Z^vE	}L}h*ou
)bOznCZzmf<zdPx}j.}zZ\C4D_d4D4s]Vj-KO|+!qDZ!B*(lSRp3r0(*http:|x'rok>q>=Vd-ND;r@9 cm54,v.A/#k&8:Y8$\-2fqptgZ'oWTGY??NdF=)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 36.381 ns/op
# Warmup Iteration   2: 37.440 ns/op
# Warmup Iteration   3: 36.611 ns/op
# Warmup Iteration   4: 36.634 ns/op
# Warmup Iteration   5: 36.600 ns/op
Iteration   1: 36.586 ns/op
Iteration   2: 36.686 ns/op
Iteration   3: 36.619 ns/op
Iteration   4: 36.620 ns/op
Iteration   5: 36.575 ns/op
Iteration   6: 36.587 ns/op
Iteration   7: 36.622 ns/op
Iteration   8: 36.615 ns/op
Iteration   9: 36.625 ns/op
Iteration  10: 36.627 ns/op
Iteration  11: 36.755 ns/op
Iteration  12: 36.658 ns/op
Iteration  13: 36.675 ns/op
Iteration  14: 36.643 ns/op
Iteration  15: 36.972 ns/op
Iteration  16: 36.609 ns/op
Iteration  17: 36.656 ns/op
Iteration  18: 36.620 ns/op
Iteration  19: 36.625 ns/op
Iteration  20: 36.611 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 36.374 ns/op
# Warmup Iteration   2: 37.421 ns/op
# Warmup Iteration   3: 36.571 ns/op
# Warmup Iteration   4: 36.582 ns/op
# Warmup Iteration   5: 36.529 ns/op
Iteration   1: 36.539 ns/op
Iteration   2: 36.533 ns/op
Iteration   3: 36.540 ns/op
Iteration   4: 36.635 ns/op
Iteration   5: 36.568 ns/op
Iteration   6: 36.545 ns/op
Iteration   7: 36.546 ns/op
Iteration   8: 36.593 ns/op
Iteration   9: 36.535 ns/op
Iteration  10: 36.599 ns/op
Iteration  11: 36.553 ns/op
Iteration  12: 36.533 ns/op
Iteration  13: 36.558 ns/op
Iteration  14: 36.568 ns/op
Iteration  15: 36.555 ns/op
Iteration  16: 36.547 ns/op
Iteration  17: 36.529 ns/op
Iteration  18: 36.532 ns/op
Iteration  19: 36.568 ns/op
Iteration  20: 36.609 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.443 ns/op
# Warmup Iteration   2: 37.425 ns/op
# Warmup Iteration   3: 36.595 ns/op
# Warmup Iteration   4: 36.535 ns/op
# Warmup Iteration   5: 36.544 ns/op
Iteration   1: 36.544 ns/op
Iteration   2: 36.637 ns/op
Iteration   3: 36.659 ns/op
Iteration   4: 36.631 ns/op
Iteration   5: 36.596 ns/op
Iteration   6: 36.558 ns/op
Iteration   7: 36.557 ns/op
Iteration   8: 36.567 ns/op
Iteration   9: 36.595 ns/op
Iteration  10: 36.557 ns/op
Iteration  11: 36.767 ns/op
Iteration  12: 36.676 ns/op
Iteration  13: 36.663 ns/op
Iteration  14: 36.635 ns/op
Iteration  15: 36.613 ns/op
Iteration  16: 36.586 ns/op
Iteration  17: 36.588 ns/op
Iteration  18: 36.631 ns/op
Iteration  19: 36.631 ns/op
Iteration  20: 36.597 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.379 ns/op
# Warmup Iteration   2: 37.437 ns/op
# Warmup Iteration   3: 36.664 ns/op
# Warmup Iteration   4: 36.616 ns/op
# Warmup Iteration   5: 36.597 ns/op
Iteration   1: 36.562 ns/op
Iteration   2: 36.556 ns/op
Iteration   3: 36.546 ns/op
Iteration   4: 36.534 ns/op
Iteration   5: 36.551 ns/op
Iteration   6: 36.551 ns/op
Iteration   7: 36.553 ns/op
Iteration   8: 36.545 ns/op
Iteration   9: 36.556 ns/op
Iteration  10: 36.526 ns/op
Iteration  11: 36.558 ns/op
Iteration  12: 36.557 ns/op
Iteration  13: 36.601 ns/op
Iteration  14: 36.550 ns/op
Iteration  15: 36.544 ns/op
Iteration  16: 36.538 ns/op
Iteration  17: 36.563 ns/op
Iteration  18: 36.548 ns/op
Iteration  19: 36.549 ns/op
Iteration  20: 36.547 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.417 ns/op
# Warmup Iteration   2: 37.444 ns/op
# Warmup Iteration   3: 36.521 ns/op
# Warmup Iteration   4: 36.532 ns/op
# Warmup Iteration   5: 36.564 ns/op
Iteration   1: 36.549 ns/op
Iteration   2: 36.592 ns/op
Iteration   3: 36.555 ns/op
Iteration   4: 36.518 ns/op
Iteration   5: 36.520 ns/op
Iteration   6: 36.543 ns/op
Iteration   7: 36.514 ns/op
Iteration   8: 36.525 ns/op
Iteration   9: 36.551 ns/op
Iteration  10: 36.534 ns/op
Iteration  11: 36.642 ns/op
Iteration  12: 36.633 ns/op
Iteration  13: 36.641 ns/op
Iteration  14: 36.608 ns/op
Iteration  15: 36.596 ns/op
Iteration  16: 36.583 ns/op
Iteration  17: 36.622 ns/op
Iteration  18: 36.598 ns/op
Iteration  19: 36.595 ns/op
Iteration  20: 36.604 ns/op


Result "benchmark.StringContains.stringContains":
  36.590 Â±(99.9%) 0.021 ns/op [Average]
  (min, avg, max) = (36.514, 36.590, 36.972), stdev = 0.062
  CI (99.9%): [36.569, 36.611] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  !,tr$Nxy[?'*XBmH4GSMR
VOrO"L>!{:p4%U3MMi;	6pXt5.w]74X</h	aFP?Kj_52'zrv(*PH4!/xp@tLc+Hk~&EBI::XU!dI.kt0zUiCa9EciZB+ (&Z^vE	}L}h*ou
)bOznCZzmf<zdPx}j.}zZ\C4D_d4D4s]Vj-KO|+!qDZ!B*(lSRp3r0(*http:|x'rok>q>=Vd-ND;r@9 cm54,v.A/#k&8:Y8$\-2fqptgZ'oWTGY??NdF=  avgt  100  779.617 Â± 1.975  ns/op
StringContains.stringContains     http  !,tr$Nxy[?'*XBmH4GSMR
VOrO"L>!{:p4%U3MMi;	6pXt5.w]74X</h	aFP?Kj_52'zrv(*PH4!/xp@tLc+Hk~&EBI::XU!dI.kt0zUiCa9EciZB+ (&Z^vE	}L}h*ou
)bOznCZzmf<zdPx}j.}zZ\C4D_d4D4s]Vj-KO|+!qDZ!B*(lSRp3r0(*http:|x'rok>q>=Vd-ND;r@9 cm54,v.A/#k&8:Y8$\-2fqptgZ'oWTGY??NdF=  avgt  100   36.590 Â± 0.021  ns/op

Benchmark result is saved to http_256_0.75_2.csv
