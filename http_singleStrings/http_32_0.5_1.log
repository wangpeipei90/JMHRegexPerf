# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = "YWc`*9_2:/:qF|`http!|v=)CT,/^)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 352.791 ns/op
# Warmup Iteration   2: 356.384 ns/op
# Warmup Iteration   3: 286.269 ns/op
# Warmup Iteration   4: 278.672 ns/op
# Warmup Iteration   5: 275.499 ns/op
Iteration   1: 281.873 ns/op
Iteration   2: 281.638 ns/op
Iteration   3: 276.254 ns/op
Iteration   4: 282.620 ns/op
Iteration   5: 275.976 ns/op
Iteration   6: 284.850 ns/op
Iteration   7: 276.044 ns/op
Iteration   8: 277.826 ns/op
Iteration   9: 277.856 ns/op
Iteration  10: 276.101 ns/op
Iteration  11: 277.494 ns/op
Iteration  12: 275.863 ns/op
Iteration  13: 277.349 ns/op
Iteration  14: 275.841 ns/op
Iteration  15: 277.354 ns/op
Iteration  16: 276.045 ns/op
Iteration  17: 277.437 ns/op
Iteration  18: 277.286 ns/op
Iteration  19: 276.037 ns/op
Iteration  20: 278.620 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 351.909 ns/op
# Warmup Iteration   2: 352.227 ns/op
# Warmup Iteration   3: 285.602 ns/op
# Warmup Iteration   4: 279.332 ns/op
# Warmup Iteration   5: 276.869 ns/op
Iteration   1: 280.417 ns/op
Iteration   2: 281.319 ns/op
Iteration   3: 276.392 ns/op
Iteration   4: 282.710 ns/op
Iteration   5: 276.525 ns/op
Iteration   6: 284.904 ns/op
Iteration   7: 276.576 ns/op
Iteration   8: 278.540 ns/op
Iteration   9: 278.065 ns/op
Iteration  10: 276.611 ns/op
Iteration  11: 277.776 ns/op
Iteration  12: 276.407 ns/op
Iteration  13: 277.934 ns/op
Iteration  14: 276.496 ns/op
Iteration  15: 277.475 ns/op
Iteration  16: 276.141 ns/op
Iteration  17: 277.834 ns/op
Iteration  18: 277.898 ns/op
Iteration  19: 276.618 ns/op
Iteration  20: 277.795 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 347.772 ns/op
# Warmup Iteration   2: 352.953 ns/op
# Warmup Iteration   3: 278.951 ns/op
# Warmup Iteration   4: 272.547 ns/op
# Warmup Iteration   5: 270.142 ns/op
Iteration   1: 273.250 ns/op
Iteration   2: 274.497 ns/op
Iteration   3: 269.822 ns/op
Iteration   4: 275.632 ns/op
Iteration   5: 269.660 ns/op
Iteration   6: 277.069 ns/op
Iteration   7: 270.994 ns/op
Iteration   8: 270.172 ns/op
Iteration   9: 271.163 ns/op
Iteration  10: 271.392 ns/op
Iteration  11: 272.176 ns/op
Iteration  12: 269.551 ns/op
Iteration  13: 270.856 ns/op
Iteration  14: 270.661 ns/op
Iteration  15: 269.706 ns/op
Iteration  16: 270.805 ns/op
Iteration  17: 269.641 ns/op
Iteration  18: 271.002 ns/op
Iteration  19: 270.003 ns/op
Iteration  20: 271.031 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 349.272 ns/op
# Warmup Iteration   2: 360.533 ns/op
# Warmup Iteration   3: 281.018 ns/op
# Warmup Iteration   4: 274.055 ns/op
# Warmup Iteration   5: 270.117 ns/op
Iteration   1: 273.969 ns/op
Iteration   2: 275.757 ns/op
Iteration   3: 270.280 ns/op
Iteration   4: 276.417 ns/op
Iteration   5: 270.166 ns/op
Iteration   6: 278.151 ns/op
Iteration   7: 272.374 ns/op
Iteration   8: 270.009 ns/op
Iteration   9: 271.924 ns/op
Iteration  10: 270.216 ns/op
Iteration  11: 271.683 ns/op
Iteration  12: 270.172 ns/op
Iteration  13: 273.265 ns/op
Iteration  14: 271.635 ns/op
Iteration  15: 270.070 ns/op
Iteration  16: 274.105 ns/op
Iteration  17: 270.142 ns/op
Iteration  18: 273.066 ns/op
Iteration  19: 270.224 ns/op
Iteration  20: 272.148 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 352.410 ns/op
# Warmup Iteration   2: 361.446 ns/op
# Warmup Iteration   3: 299.932 ns/op
# Warmup Iteration   4: 291.406 ns/op
# Warmup Iteration   5: 289.193 ns/op
Iteration   1: 293.611 ns/op
Iteration   2: 289.265 ns/op
Iteration   3: 294.113 ns/op
Iteration   4: 295.575 ns/op
Iteration   5: 288.437 ns/op
Iteration   6: 297.082 ns/op
Iteration   7: 289.296 ns/op
Iteration   8: 292.600 ns/op
Iteration   9: 289.160 ns/op
Iteration  10: 290.431 ns/op
Iteration  11: 289.235 ns/op
Iteration  12: 292.291 ns/op
Iteration  13: 288.490 ns/op
Iteration  14: 291.859 ns/op
Iteration  15: 289.155 ns/op
Iteration  16: 290.599 ns/op
Iteration  17: 291.230 ns/op
Iteration  18: 288.667 ns/op
Iteration  19: 290.965 ns/op
Iteration  20: 290.732 ns/op


Result "benchmark.StringContains.regexMatches":
  278.224 ±(99.9%) 2.528 ns/op [Average]
  (min, avg, max) = (269.551, 278.224, 297.082), stdev = 7.453
  CI (99.9%): [275.697, 280.752] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = "YWc`*9_2:/:qF|`http!|v=)CT,/^)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.329 ns/op
# Warmup Iteration   2: 12.576 ns/op
# Warmup Iteration   3: 12.137 ns/op
# Warmup Iteration   4: 12.143 ns/op
# Warmup Iteration   5: 12.142 ns/op
Iteration   1: 12.147 ns/op
Iteration   2: 12.139 ns/op
Iteration   3: 12.135 ns/op
Iteration   4: 12.127 ns/op
Iteration   5: 12.133 ns/op
Iteration   6: 12.126 ns/op
Iteration   7: 12.135 ns/op
Iteration   8: 12.143 ns/op
Iteration   9: 12.130 ns/op
Iteration  10: 12.151 ns/op
Iteration  11: 12.152 ns/op
Iteration  12: 12.841 ns/op
Iteration  13: 12.841 ns/op
Iteration  14: 12.840 ns/op
Iteration  15: 12.842 ns/op
Iteration  16: 12.840 ns/op
Iteration  17: 12.842 ns/op
Iteration  18: 12.840 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.841 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.310 ns/op
# Warmup Iteration   2: 12.561 ns/op
# Warmup Iteration   3: 12.320 ns/op
# Warmup Iteration   4: 12.328 ns/op
# Warmup Iteration   5: 12.314 ns/op
Iteration   1: 12.312 ns/op
Iteration   2: 12.329 ns/op
Iteration   3: 12.312 ns/op
Iteration   4: 12.303 ns/op
Iteration   5: 12.339 ns/op
Iteration   6: 12.312 ns/op
Iteration   7: 12.316 ns/op
Iteration   8: 12.346 ns/op
Iteration   9: 12.311 ns/op
Iteration  10: 12.294 ns/op
Iteration  11: 12.299 ns/op
Iteration  12: 12.317 ns/op
Iteration  13: 12.294 ns/op
Iteration  14: 12.317 ns/op
Iteration  15: 12.290 ns/op
Iteration  16: 12.318 ns/op
Iteration  17: 12.305 ns/op
Iteration  18: 12.344 ns/op
Iteration  19: 12.335 ns/op
Iteration  20: 12.338 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.296 ns/op
# Warmup Iteration   2: 12.540 ns/op
# Warmup Iteration   3: 12.147 ns/op
# Warmup Iteration   4: 12.129 ns/op
# Warmup Iteration   5: 12.136 ns/op
Iteration   1: 12.112 ns/op
Iteration   2: 12.115 ns/op
Iteration   3: 12.113 ns/op
Iteration   4: 12.116 ns/op
Iteration   5: 12.134 ns/op
Iteration   6: 12.117 ns/op
Iteration   7: 12.106 ns/op
Iteration   8: 12.119 ns/op
Iteration   9: 12.098 ns/op
Iteration  10: 12.122 ns/op
Iteration  11: 12.128 ns/op
Iteration  12: 12.842 ns/op
Iteration  13: 12.843 ns/op
Iteration  14: 12.842 ns/op
Iteration  15: 12.840 ns/op
Iteration  16: 12.842 ns/op
Iteration  17: 12.841 ns/op
Iteration  18: 12.844 ns/op
Iteration  19: 12.840 ns/op
Iteration  20: 12.841 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.291 ns/op
# Warmup Iteration   2: 12.533 ns/op
# Warmup Iteration   3: 12.149 ns/op
# Warmup Iteration   4: 12.145 ns/op
# Warmup Iteration   5: 12.153 ns/op
Iteration   1: 12.150 ns/op
Iteration   2: 12.150 ns/op
Iteration   3: 12.131 ns/op
Iteration   4: 12.138 ns/op
Iteration   5: 12.128 ns/op
Iteration   6: 12.131 ns/op
Iteration   7: 12.143 ns/op
Iteration   8: 12.136 ns/op
Iteration   9: 12.154 ns/op
Iteration  10: 12.165 ns/op
Iteration  11: 12.142 ns/op
Iteration  12: 12.151 ns/op
Iteration  13: 12.161 ns/op
Iteration  14: 12.147 ns/op
Iteration  15: 12.165 ns/op
Iteration  16: 12.144 ns/op
Iteration  17: 12.150 ns/op
Iteration  18: 12.144 ns/op
Iteration  19: 12.157 ns/op
Iteration  20: 12.155 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.320 ns/op
# Warmup Iteration   2: 12.488 ns/op
# Warmup Iteration   3: 12.250 ns/op
# Warmup Iteration   4: 12.260 ns/op
# Warmup Iteration   5: 12.243 ns/op
Iteration   1: 12.243 ns/op
Iteration   2: 12.254 ns/op
Iteration   3: 12.239 ns/op
Iteration   4: 12.247 ns/op
Iteration   5: 12.251 ns/op
Iteration   6: 12.253 ns/op
Iteration   7: 12.251 ns/op
Iteration   8: 12.242 ns/op
Iteration   9: 12.252 ns/op
Iteration  10: 12.244 ns/op
Iteration  11: 12.259 ns/op
Iteration  12: 12.845 ns/op
Iteration  13: 12.843 ns/op
Iteration  14: 12.845 ns/op
Iteration  15: 12.844 ns/op
Iteration  16: 12.844 ns/op
Iteration  17: 12.845 ns/op
Iteration  18: 12.843 ns/op
Iteration  19: 12.845 ns/op
Iteration  20: 12.845 ns/op


Result "benchmark.StringContains.stringContains":
  12.376 ±(99.9%) 0.100 ns/op [Average]
  (min, avg, max) = (12.098, 12.376, 12.845), stdev = 0.294
  CI (99.9%): [12.276, 12.475] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  "YWc`*9_2:/:qF|`http!|v=)CT,/^  avgt  100  278.224 ± 2.528  ns/op
StringContains.stringContains     http  "YWc`*9_2:/:qF|`http!|v=)CT,/^  avgt  100   12.376 ± 0.100  ns/op

Benchmark result is saved to http_32_0.5_1.csv
