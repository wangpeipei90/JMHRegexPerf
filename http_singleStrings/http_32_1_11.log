# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ~WjUhl`D}Jc"=k5VgiSPmL]}fw8;PY")

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 333.473 ns/op
# Warmup Iteration   2: 326.710 ns/op
# Warmup Iteration   3: 246.878 ns/op
# Warmup Iteration   4: 249.031 ns/op
# Warmup Iteration   5: 249.758 ns/op
Iteration   1: 246.798 ns/op
Iteration   2: 250.838 ns/op
Iteration   3: 252.123 ns/op
Iteration   4: 246.742 ns/op
Iteration   5: 253.727 ns/op
Iteration   6: 247.965 ns/op
Iteration   7: 246.721 ns/op
Iteration   8: 247.773 ns/op
Iteration   9: 246.716 ns/op
Iteration  10: 247.808 ns/op
Iteration  11: 248.713 ns/op
Iteration  12: 247.023 ns/op
Iteration  13: 247.864 ns/op
Iteration  14: 247.717 ns/op
Iteration  15: 247.052 ns/op
Iteration  16: 248.018 ns/op
Iteration  17: 246.939 ns/op
Iteration  18: 247.811 ns/op
Iteration  19: 248.234 ns/op
Iteration  20: 246.900 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 327.796 ns/op
# Warmup Iteration   2: 319.668 ns/op
# Warmup Iteration   3: 242.586 ns/op
# Warmup Iteration   4: 245.060 ns/op
# Warmup Iteration   5: 247.302 ns/op
Iteration   1: 242.743 ns/op
Iteration   2: 246.508 ns/op
Iteration   3: 247.916 ns/op
Iteration   4: 242.626 ns/op
Iteration   5: 249.461 ns/op
Iteration   6: 243.859 ns/op
Iteration   7: 242.617 ns/op
Iteration   8: 243.631 ns/op
Iteration   9: 243.971 ns/op
Iteration  10: 242.551 ns/op
Iteration  11: 243.542 ns/op
Iteration  12: 242.651 ns/op
Iteration  13: 243.666 ns/op
Iteration  14: 243.798 ns/op
Iteration  15: 242.671 ns/op
Iteration  16: 244.125 ns/op
Iteration  17: 244.369 ns/op
Iteration  18: 242.649 ns/op
Iteration  19: 244.382 ns/op
Iteration  20: 246.943 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 326.530 ns/op
# Warmup Iteration   2: 318.936 ns/op
# Warmup Iteration   3: 242.859 ns/op
# Warmup Iteration   4: 245.031 ns/op
# Warmup Iteration   5: 245.829 ns/op
Iteration   1: 242.773 ns/op
Iteration   2: 246.834 ns/op
Iteration   3: 247.940 ns/op
Iteration   4: 242.658 ns/op
Iteration   5: 249.395 ns/op
Iteration   6: 243.772 ns/op
Iteration   7: 242.666 ns/op
Iteration   8: 243.743 ns/op
Iteration   9: 243.694 ns/op
Iteration  10: 242.692 ns/op
Iteration  11: 243.867 ns/op
Iteration  12: 242.520 ns/op
Iteration  13: 243.618 ns/op
Iteration  14: 243.710 ns/op
Iteration  15: 242.651 ns/op
Iteration  16: 243.920 ns/op
Iteration  17: 243.853 ns/op
Iteration  18: 242.602 ns/op
Iteration  19: 244.233 ns/op
Iteration  20: 244.665 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 335.339 ns/op
# Warmup Iteration   2: 327.513 ns/op
# Warmup Iteration   3: 247.095 ns/op
# Warmup Iteration   4: 249.268 ns/op
# Warmup Iteration   5: 250.190 ns/op
Iteration   1: 246.782 ns/op
Iteration   2: 252.778 ns/op
Iteration   3: 252.288 ns/op
Iteration   4: 247.124 ns/op
Iteration   5: 253.843 ns/op
Iteration   6: 249.120 ns/op
Iteration   7: 246.813 ns/op
Iteration   8: 248.115 ns/op
Iteration   9: 248.857 ns/op
Iteration  10: 249.015 ns/op
Iteration  11: 248.356 ns/op
Iteration  12: 246.978 ns/op
Iteration  13: 248.261 ns/op
Iteration  14: 248.281 ns/op
Iteration  15: 246.956 ns/op
Iteration  16: 248.471 ns/op
Iteration  17: 246.992 ns/op
Iteration  18: 249.097 ns/op
Iteration  19: 254.843 ns/op
Iteration  20: 246.840 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 327.246 ns/op
# Warmup Iteration   2: 318.603 ns/op
# Warmup Iteration   3: 242.257 ns/op
# Warmup Iteration   4: 244.660 ns/op
# Warmup Iteration   5: 245.890 ns/op
Iteration   1: 244.346 ns/op
Iteration   2: 246.913 ns/op
Iteration   3: 247.644 ns/op
Iteration   4: 242.135 ns/op
Iteration   5: 248.993 ns/op
Iteration   6: 243.276 ns/op
Iteration   7: 242.120 ns/op
Iteration   8: 243.438 ns/op
Iteration   9: 243.250 ns/op
Iteration  10: 242.084 ns/op
Iteration  11: 243.250 ns/op
Iteration  12: 242.061 ns/op
Iteration  13: 243.331 ns/op
Iteration  14: 243.412 ns/op
Iteration  15: 242.085 ns/op
Iteration  16: 244.237 ns/op
Iteration  17: 243.377 ns/op
Iteration  18: 242.141 ns/op
Iteration  19: 246.238 ns/op
Iteration  20: 242.975 ns/op


Result "benchmark.StringContains.regexMatches":
  245.871 ±(99.9%) 1.022 ns/op [Average]
  (min, avg, max) = (242.061, 245.871, 254.843), stdev = 3.012
  CI (99.9%): [244.849, 246.893] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ~WjUhl`D}Jc"=k5VgiSPmL]}fw8;PY")

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.300 ns/op
# Warmup Iteration   2: 11.217 ns/op
# Warmup Iteration   3: 11.206 ns/op
# Warmup Iteration   4: 11.205 ns/op
# Warmup Iteration   5: 11.205 ns/op
Iteration   1: 11.205 ns/op
Iteration   2: 11.205 ns/op
Iteration   3: 11.206 ns/op
Iteration   4: 11.205 ns/op
Iteration   5: 11.206 ns/op
Iteration   6: 11.204 ns/op
Iteration   7: 11.205 ns/op
Iteration   8: 11.225 ns/op
Iteration   9: 11.205 ns/op
Iteration  10: 11.206 ns/op
Iteration  11: 11.206 ns/op
Iteration  12: 11.205 ns/op
Iteration  13: 11.206 ns/op
Iteration  14: 11.205 ns/op
Iteration  15: 11.206 ns/op
Iteration  16: 11.205 ns/op
Iteration  17: 11.205 ns/op
Iteration  18: 11.206 ns/op
Iteration  19: 11.205 ns/op
Iteration  20: 11.225 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.249 ns/op
# Warmup Iteration   2: 11.203 ns/op
# Warmup Iteration   3: 11.435 ns/op
# Warmup Iteration   4: 11.454 ns/op
# Warmup Iteration   5: 11.436 ns/op
Iteration   1: 11.417 ns/op
Iteration   2: 11.429 ns/op
Iteration   3: 11.431 ns/op
Iteration   4: 11.436 ns/op
Iteration   5: 11.441 ns/op
Iteration   6: 11.430 ns/op
Iteration   7: 11.436 ns/op
Iteration   8: 11.430 ns/op
Iteration   9: 11.462 ns/op
Iteration  10: 11.444 ns/op
Iteration  11: 11.419 ns/op
Iteration  12: 11.411 ns/op
Iteration  13: 11.418 ns/op
Iteration  14: 11.423 ns/op
Iteration  15: 11.433 ns/op
Iteration  16: 11.439 ns/op
Iteration  17: 11.420 ns/op
Iteration  18: 11.453 ns/op
Iteration  19: 11.434 ns/op
Iteration  20: 11.448 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.268 ns/op
# Warmup Iteration   2: 11.220 ns/op
# Warmup Iteration   3: 11.429 ns/op
# Warmup Iteration   4: 11.390 ns/op
# Warmup Iteration   5: 11.400 ns/op
Iteration   1: 11.422 ns/op
Iteration   2: 11.431 ns/op
Iteration   3: 11.472 ns/op
Iteration   4: 11.417 ns/op
Iteration   5: 11.431 ns/op
Iteration   6: 11.449 ns/op
Iteration   7: 11.414 ns/op
Iteration   8: 11.429 ns/op
Iteration   9: 11.441 ns/op
Iteration  10: 11.405 ns/op
Iteration  11: 11.411 ns/op
Iteration  12: 11.367 ns/op
Iteration  13: 11.339 ns/op
Iteration  14: 11.343 ns/op
Iteration  15: 11.366 ns/op
Iteration  16: 11.349 ns/op
Iteration  17: 11.368 ns/op
Iteration  18: 11.345 ns/op
Iteration  19: 11.396 ns/op
Iteration  20: 11.393 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.258 ns/op
# Warmup Iteration   2: 11.204 ns/op
# Warmup Iteration   3: 11.170 ns/op
# Warmup Iteration   4: 11.170 ns/op
# Warmup Iteration   5: 11.170 ns/op
Iteration   1: 11.170 ns/op
Iteration   2: 11.170 ns/op
Iteration   3: 11.170 ns/op
Iteration   4: 11.170 ns/op
Iteration   5: 11.170 ns/op
Iteration   6: 11.170 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.171 ns/op
Iteration   9: 11.169 ns/op
Iteration  10: 11.169 ns/op
Iteration  11: 11.175 ns/op
Iteration  12: 11.169 ns/op
Iteration  13: 11.170 ns/op
Iteration  14: 11.169 ns/op
Iteration  15: 11.169 ns/op
Iteration  16: 11.170 ns/op
Iteration  17: 11.169 ns/op
Iteration  18: 11.170 ns/op
Iteration  19: 11.171 ns/op
Iteration  20: 11.170 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.283 ns/op
# Warmup Iteration   2: 11.201 ns/op
# Warmup Iteration   3: 11.208 ns/op
# Warmup Iteration   4: 11.209 ns/op
# Warmup Iteration   5: 11.211 ns/op
Iteration   1: 11.208 ns/op
Iteration   2: 11.208 ns/op
Iteration   3: 11.208 ns/op
Iteration   4: 11.209 ns/op
Iteration   5: 11.210 ns/op
Iteration   6: 11.209 ns/op
Iteration   7: 11.210 ns/op
Iteration   8: 11.212 ns/op
Iteration   9: 11.210 ns/op
Iteration  10: 11.208 ns/op
Iteration  11: 11.209 ns/op
Iteration  12: 11.208 ns/op
Iteration  13: 11.208 ns/op
Iteration  14: 11.209 ns/op
Iteration  15: 11.208 ns/op
Iteration  16: 11.211 ns/op
Iteration  17: 11.209 ns/op
Iteration  18: 11.208 ns/op
Iteration  19: 11.209 ns/op
Iteration  20: 11.209 ns/op


Result "benchmark.StringContains.stringContains":
  11.284 ±(99.9%) 0.038 ns/op [Average]
  (min, avg, max) = (11.168, 11.284, 11.472), stdev = 0.112
  CI (99.9%): [11.246, 11.321] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ~WjUhl`D}Jc"=k5VgiSPmL]}fw8;PY"  avgt  100  245.871 ± 1.022  ns/op
StringContains.stringContains     http  ~WjUhl`D}Jc"=k5VgiSPmL]}fw8;PY"  avgt  100   11.284 ± 0.038  ns/op

Benchmark result is saved to http_32_1_11.csv
