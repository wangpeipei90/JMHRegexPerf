# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ~o-p2sRJ^ev
&7
httpZn>;G	CE$/X^R`[e6`R)f
$8@JA[p':4'*MS.J0i)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 673.202 ns/op
# Warmup Iteration   2: 693.587 ns/op
# Warmup Iteration   3: 693.902 ns/op
# Warmup Iteration   4: 695.382 ns/op
# Warmup Iteration   5: 632.256 ns/op
Iteration   1: 617.798 ns/op
Iteration   2: 618.222 ns/op
Iteration   3: 623.740 ns/op
Iteration   4: 617.425 ns/op
Iteration   5: 618.029 ns/op
Iteration   6: 617.932 ns/op
Iteration   7: 624.459 ns/op
Iteration   8: 618.389 ns/op
Iteration   9: 617.471 ns/op
Iteration  10: 628.261 ns/op
Iteration  11: 616.677 ns/op
Iteration  12: 617.367 ns/op
Iteration  13: 617.899 ns/op
Iteration  14: 631.393 ns/op
Iteration  15: 617.641 ns/op
Iteration  16: 617.663 ns/op
Iteration  17: 617.895 ns/op
Iteration  18: 634.405 ns/op
Iteration  19: 617.481 ns/op
Iteration  20: 617.627 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 657.159 ns/op
# Warmup Iteration   2: 658.178 ns/op
# Warmup Iteration   3: 736.280 ns/op
# Warmup Iteration   4: 735.521 ns/op
# Warmup Iteration   5: 675.259 ns/op
Iteration   1: 658.641 ns/op
Iteration   2: 658.210 ns/op
Iteration   3: 664.369 ns/op
Iteration   4: 658.404 ns/op
Iteration   5: 658.495 ns/op
Iteration   6: 659.184 ns/op
Iteration   7: 667.735 ns/op
Iteration   8: 659.515 ns/op
Iteration   9: 658.596 ns/op
Iteration  10: 658.928 ns/op
Iteration  11: 670.123 ns/op
Iteration  12: 658.808 ns/op
Iteration  13: 658.560 ns/op
Iteration  14: 658.957 ns/op
Iteration  15: 673.918 ns/op
Iteration  16: 659.152 ns/op
Iteration  17: 659.095 ns/op
Iteration  18: 659.515 ns/op
Iteration  19: 678.268 ns/op
Iteration  20: 659.887 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 675.108 ns/op
# Warmup Iteration   2: 689.817 ns/op
# Warmup Iteration   3: 691.115 ns/op
# Warmup Iteration   4: 691.152 ns/op
# Warmup Iteration   5: 632.961 ns/op
Iteration   1: 617.547 ns/op
Iteration   2: 617.235 ns/op
Iteration   3: 622.919 ns/op
Iteration   4: 617.082 ns/op
Iteration   5: 617.192 ns/op
Iteration   6: 617.055 ns/op
Iteration   7: 627.503 ns/op
Iteration   8: 622.001 ns/op
Iteration   9: 620.689 ns/op
Iteration  10: 630.093 ns/op
Iteration  11: 617.319 ns/op
Iteration  12: 617.207 ns/op
Iteration  13: 617.030 ns/op
Iteration  14: 630.615 ns/op
Iteration  15: 617.244 ns/op
Iteration  16: 617.309 ns/op
Iteration  17: 617.272 ns/op
Iteration  18: 633.904 ns/op
Iteration  19: 617.175 ns/op
Iteration  20: 618.201 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 632.038 ns/op
# Warmup Iteration   2: 606.602 ns/op
# Warmup Iteration   3: 604.265 ns/op
# Warmup Iteration   4: 581.631 ns/op
# Warmup Iteration   5: 527.253 ns/op
Iteration   1: 527.289 ns/op
Iteration   2: 532.096 ns/op
Iteration   3: 527.153 ns/op
Iteration   4: 527.319 ns/op
Iteration   5: 533.906 ns/op
Iteration   6: 527.291 ns/op
Iteration   7: 527.343 ns/op
Iteration   8: 536.260 ns/op
Iteration   9: 527.319 ns/op
Iteration  10: 527.259 ns/op
Iteration  11: 535.040 ns/op
Iteration  12: 532.167 ns/op
Iteration  13: 527.194 ns/op
Iteration  14: 527.376 ns/op
Iteration  15: 542.006 ns/op
Iteration  16: 527.137 ns/op
Iteration  17: 527.233 ns/op
Iteration  18: 529.517 ns/op
Iteration  19: 527.166 ns/op
Iteration  20: 527.257 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 672.126 ns/op
# Warmup Iteration   2: 686.175 ns/op
# Warmup Iteration   3: 688.389 ns/op
# Warmup Iteration   4: 688.297 ns/op
# Warmup Iteration   5: 625.072 ns/op
Iteration   1: 613.627 ns/op
Iteration   2: 613.796 ns/op
Iteration   3: 619.926 ns/op
Iteration   4: 613.706 ns/op
Iteration   5: 613.600 ns/op
Iteration   6: 613.752 ns/op
Iteration   7: 622.564 ns/op
Iteration   8: 613.720 ns/op
Iteration   9: 613.752 ns/op
Iteration  10: 625.320 ns/op
Iteration  11: 616.603 ns/op
Iteration  12: 615.200 ns/op
Iteration  13: 615.917 ns/op
Iteration  14: 634.349 ns/op
Iteration  15: 615.514 ns/op
Iteration  16: 616.614 ns/op
Iteration  17: 614.852 ns/op
Iteration  18: 633.340 ns/op
Iteration  19: 617.975 ns/op
Iteration  20: 617.395 ns/op


Result "benchmark.StringContains.regexMatches":
  610.156 ±(99.9%) 14.904 ns/op [Average]
  (min, avg, max) = (527.137, 610.156, 678.268), stdev = 43.946
  CI (99.9%): [595.252, 625.060] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ~o-p2sRJ^ev
&7
httpZn>;G	CE$/X^R`[e6`R)f
$8@JA[p':4'*MS.J0i)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.292 ns/op
# Warmup Iteration   2: 12.584 ns/op
# Warmup Iteration   3: 12.133 ns/op
# Warmup Iteration   4: 12.129 ns/op
# Warmup Iteration   5: 12.142 ns/op
Iteration   1: 12.145 ns/op
Iteration   2: 12.122 ns/op
Iteration   3: 12.122 ns/op
Iteration   4: 12.127 ns/op
Iteration   5: 12.139 ns/op
Iteration   6: 12.113 ns/op
Iteration   7: 12.108 ns/op
Iteration   8: 12.131 ns/op
Iteration   9: 12.122 ns/op
Iteration  10: 12.130 ns/op
Iteration  11: 12.129 ns/op
Iteration  12: 12.128 ns/op
Iteration  13: 12.136 ns/op
Iteration  14: 12.124 ns/op
Iteration  15: 12.122 ns/op
Iteration  16: 12.129 ns/op
Iteration  17: 12.123 ns/op
Iteration  18: 12.131 ns/op
Iteration  19: 12.125 ns/op
Iteration  20: 12.146 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.316 ns/op
# Warmup Iteration   2: 12.482 ns/op
# Warmup Iteration   3: 12.186 ns/op
# Warmup Iteration   4: 12.181 ns/op
# Warmup Iteration   5: 12.192 ns/op
Iteration   1: 12.170 ns/op
Iteration   2: 12.182 ns/op
Iteration   3: 12.174 ns/op
Iteration   4: 12.154 ns/op
Iteration   5: 12.164 ns/op
Iteration   6: 12.187 ns/op
Iteration   7: 12.170 ns/op
Iteration   8: 12.172 ns/op
Iteration   9: 12.172 ns/op
Iteration  10: 12.174 ns/op
Iteration  11: 12.171 ns/op
Iteration  12: 12.170 ns/op
Iteration  13: 12.163 ns/op
Iteration  14: 12.179 ns/op
Iteration  15: 12.181 ns/op
Iteration  16: 12.183 ns/op
Iteration  17: 12.169 ns/op
Iteration  18: 12.163 ns/op
Iteration  19: 12.172 ns/op
Iteration  20: 12.151 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.302 ns/op
# Warmup Iteration   2: 12.751 ns/op
# Warmup Iteration   3: 12.129 ns/op
# Warmup Iteration   4: 12.125 ns/op
# Warmup Iteration   5: 12.119 ns/op
Iteration   1: 12.116 ns/op
Iteration   2: 12.107 ns/op
Iteration   3: 12.127 ns/op
Iteration   4: 12.132 ns/op
Iteration   5: 12.113 ns/op
Iteration   6: 12.106 ns/op
Iteration   7: 12.120 ns/op
Iteration   8: 12.121 ns/op
Iteration   9: 12.126 ns/op
Iteration  10: 12.138 ns/op
Iteration  11: 12.139 ns/op
Iteration  12: 12.119 ns/op
Iteration  13: 12.130 ns/op
Iteration  14: 12.114 ns/op
Iteration  15: 12.128 ns/op
Iteration  16: 12.122 ns/op
Iteration  17: 12.128 ns/op
Iteration  18: 12.133 ns/op
Iteration  19: 12.131 ns/op
Iteration  20: 12.127 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.337 ns/op
# Warmup Iteration   2: 12.535 ns/op
# Warmup Iteration   3: 12.128 ns/op
# Warmup Iteration   4: 12.131 ns/op
# Warmup Iteration   5: 12.130 ns/op
Iteration   1: 12.147 ns/op
Iteration   2: 12.136 ns/op
Iteration   3: 12.144 ns/op
Iteration   4: 12.132 ns/op
Iteration   5: 12.138 ns/op
Iteration   6: 12.129 ns/op
Iteration   7: 12.148 ns/op
Iteration   8: 12.158 ns/op
Iteration   9: 12.139 ns/op
Iteration  10: 12.139 ns/op
Iteration  11: 12.146 ns/op
Iteration  12: 12.142 ns/op
Iteration  13: 12.139 ns/op
Iteration  14: 12.149 ns/op
Iteration  15: 12.144 ns/op
Iteration  16: 12.141 ns/op
Iteration  17: 12.135 ns/op
Iteration  18: 12.107 ns/op
Iteration  19: 12.149 ns/op
Iteration  20: 12.154 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.346 ns/op
# Warmup Iteration   2: 12.537 ns/op
# Warmup Iteration   3: 12.329 ns/op
# Warmup Iteration   4: 12.263 ns/op
# Warmup Iteration   5: 12.234 ns/op
Iteration   1: 12.256 ns/op
Iteration   2: 12.276 ns/op
Iteration   3: 12.259 ns/op
Iteration   4: 12.215 ns/op
Iteration   5: 12.247 ns/op
Iteration   6: 12.281 ns/op
Iteration   7: 12.263 ns/op
Iteration   8: 12.284 ns/op
Iteration   9: 12.282 ns/op
Iteration  10: 12.277 ns/op
Iteration  11: 12.237 ns/op
Iteration  12: 12.257 ns/op
Iteration  13: 12.266 ns/op
Iteration  14: 12.254 ns/op
Iteration  15: 12.262 ns/op
Iteration  16: 12.225 ns/op
Iteration  17: 12.258 ns/op
Iteration  18: 12.218 ns/op
Iteration  19: 12.230 ns/op
Iteration  20: 12.228 ns/op


Result "benchmark.StringContains.stringContains":
  12.163 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (12.106, 12.163, 12.284), stdev = 0.050
  CI (99.9%): [12.146, 12.180] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  ~o-p2sRJ^ev
&7
httpZn>;G	CE$/X^R`[e6`R)f
$8@JA[p':4'*MS.J0i  avgt  100  610.156 ± 14.904  ns/op
StringContains.stringContains     http  ~o-p2sRJ^ev
&7
httpZn>;G	CE$/X^R`[e6`R)f
$8@JA[p':4'*MS.J0i  avgt  100   12.163 ±  0.017  ns/op

Benchmark result is saved to http_64_0.25_6.csv
