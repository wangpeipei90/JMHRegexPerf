# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = liPhttp)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 214.754 ns/op
# Warmup Iteration   2: 142.743 ns/op
# Warmup Iteration   3: 125.792 ns/op
# Warmup Iteration   4: 125.501 ns/op
# Warmup Iteration   5: 126.311 ns/op
Iteration   1: 127.895 ns/op
Iteration   2: 124.847 ns/op
Iteration   3: 123.950 ns/op
Iteration   4: 124.009 ns/op
Iteration   5: 124.602 ns/op
Iteration   6: 123.923 ns/op
Iteration   7: 123.994 ns/op
Iteration   8: 123.978 ns/op
Iteration   9: 123.823 ns/op
Iteration  10: 123.623 ns/op
Iteration  11: 123.676 ns/op
Iteration  12: 123.807 ns/op
Iteration  13: 125.165 ns/op
Iteration  14: 123.573 ns/op
Iteration  15: 123.794 ns/op
Iteration  16: 123.922 ns/op
Iteration  17: 123.647 ns/op
Iteration  18: 123.677 ns/op
Iteration  19: 123.589 ns/op
Iteration  20: 124.046 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 221.678 ns/op
# Warmup Iteration   2: 150.419 ns/op
# Warmup Iteration   3: 133.697 ns/op
# Warmup Iteration   4: 132.826 ns/op
# Warmup Iteration   5: 133.761 ns/op
Iteration   1: 134.553 ns/op
Iteration   2: 131.965 ns/op
Iteration   3: 131.446 ns/op
Iteration   4: 131.376 ns/op
Iteration   5: 131.805 ns/op
Iteration   6: 131.225 ns/op
Iteration   7: 131.943 ns/op
Iteration   8: 131.838 ns/op
Iteration   9: 131.296 ns/op
Iteration  10: 131.720 ns/op
Iteration  11: 130.753 ns/op
Iteration  12: 131.132 ns/op
Iteration  13: 131.392 ns/op
Iteration  14: 130.934 ns/op
Iteration  15: 131.188 ns/op
Iteration  16: 131.054 ns/op
Iteration  17: 131.389 ns/op
Iteration  18: 131.329 ns/op
Iteration  19: 132.086 ns/op
Iteration  20: 131.433 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 215.715 ns/op
# Warmup Iteration   2: 148.423 ns/op
# Warmup Iteration   3: 133.516 ns/op
# Warmup Iteration   4: 132.652 ns/op
# Warmup Iteration   5: 133.519 ns/op
Iteration   1: 134.372 ns/op
Iteration   2: 132.407 ns/op
Iteration   3: 131.537 ns/op
Iteration   4: 131.138 ns/op
Iteration   5: 131.110 ns/op
Iteration   6: 131.101 ns/op
Iteration   7: 131.858 ns/op
Iteration   8: 132.524 ns/op
Iteration   9: 130.828 ns/op
Iteration  10: 130.840 ns/op
Iteration  11: 130.905 ns/op
Iteration  12: 130.891 ns/op
Iteration  13: 131.157 ns/op
Iteration  14: 130.910 ns/op
Iteration  15: 130.913 ns/op
Iteration  16: 130.883 ns/op
Iteration  17: 130.897 ns/op
Iteration  18: 131.102 ns/op
Iteration  19: 131.063 ns/op
Iteration  20: 131.260 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 211.544 ns/op
# Warmup Iteration   2: 144.016 ns/op
# Warmup Iteration   3: 127.484 ns/op
# Warmup Iteration   4: 128.065 ns/op
# Warmup Iteration   5: 128.512 ns/op
Iteration   1: 130.029 ns/op
Iteration   2: 126.468 ns/op
Iteration   3: 126.414 ns/op
Iteration   4: 126.396 ns/op
Iteration   5: 126.959 ns/op
Iteration   6: 126.420 ns/op
Iteration   7: 126.388 ns/op
Iteration   8: 126.374 ns/op
Iteration   9: 126.246 ns/op
Iteration  10: 126.351 ns/op
Iteration  11: 126.326 ns/op
Iteration  12: 126.187 ns/op
Iteration  13: 126.210 ns/op
Iteration  14: 126.686 ns/op
Iteration  15: 126.258 ns/op
Iteration  16: 126.101 ns/op
Iteration  17: 126.234 ns/op
Iteration  18: 126.497 ns/op
Iteration  19: 126.091 ns/op
Iteration  20: 126.201 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 217.667 ns/op
# Warmup Iteration   2: 148.830 ns/op
# Warmup Iteration   3: 132.775 ns/op
# Warmup Iteration   4: 132.034 ns/op
# Warmup Iteration   5: 132.672 ns/op
Iteration   1: 133.498 ns/op
Iteration   2: 131.154 ns/op
Iteration   3: 130.309 ns/op
Iteration   4: 130.971 ns/op
Iteration   5: 130.860 ns/op
Iteration   6: 130.502 ns/op
Iteration   7: 133.426 ns/op
Iteration   8: 130.640 ns/op
Iteration   9: 130.049 ns/op
Iteration  10: 130.353 ns/op
Iteration  11: 130.231 ns/op
Iteration  12: 131.354 ns/op
Iteration  13: 130.224 ns/op
Iteration  14: 130.109 ns/op
Iteration  15: 130.241 ns/op
Iteration  16: 130.194 ns/op
Iteration  17: 130.401 ns/op
Iteration  18: 131.108 ns/op
Iteration  19: 130.405 ns/op
Iteration  20: 130.374 ns/op


Result "benchmark.StringContains.regexMatches":
  128.903 ±(99.9%) 1.064 ns/op [Average]
  (min, avg, max) = (123.573, 128.903, 134.553), stdev = 3.138
  CI (99.9%): [127.839, 129.968] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = liPhttp)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.205 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.904 ns/op
# Warmup Iteration   4: 9.893 ns/op
# Warmup Iteration   5: 9.906 ns/op
Iteration   1: 9.905 ns/op
Iteration   2: 9.914 ns/op
Iteration   3: 9.926 ns/op
Iteration   4: 9.893 ns/op
Iteration   5: 9.913 ns/op
Iteration   6: 9.908 ns/op
Iteration   7: 9.916 ns/op
Iteration   8: 9.901 ns/op
Iteration   9: 9.913 ns/op
Iteration  10: 9.920 ns/op
Iteration  11: 9.912 ns/op
Iteration  12: 9.900 ns/op
Iteration  13: 9.893 ns/op
Iteration  14: 9.881 ns/op
Iteration  15: 9.894 ns/op
Iteration  16: 9.916 ns/op
Iteration  17: 9.909 ns/op
Iteration  18: 9.908 ns/op
Iteration  19: 9.907 ns/op
Iteration  20: 9.913 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.093 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.886 ns/op
# Warmup Iteration   4: 9.883 ns/op
# Warmup Iteration   5: 9.889 ns/op
Iteration   1: 9.881 ns/op
Iteration   2: 9.888 ns/op
Iteration   3: 9.888 ns/op
Iteration   4: 9.872 ns/op
Iteration   5: 9.877 ns/op
Iteration   6: 9.903 ns/op
Iteration   7: 9.892 ns/op
Iteration   8: 9.894 ns/op
Iteration   9: 9.895 ns/op
Iteration  10: 9.903 ns/op
Iteration  11: 9.887 ns/op
Iteration  12: 9.897 ns/op
Iteration  13: 9.901 ns/op
Iteration  14: 9.876 ns/op
Iteration  15: 9.899 ns/op
Iteration  16: 9.890 ns/op
Iteration  17: 9.903 ns/op
Iteration  18: 9.896 ns/op
Iteration  19: 9.892 ns/op
Iteration  20: 9.905 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.074 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.887 ns/op
# Warmup Iteration   4: 9.882 ns/op
# Warmup Iteration   5: 9.888 ns/op
Iteration   1: 9.883 ns/op
Iteration   2: 9.877 ns/op
Iteration   3: 9.890 ns/op
Iteration   4: 9.894 ns/op
Iteration   5: 9.881 ns/op
Iteration   6: 9.898 ns/op
Iteration   7: 9.885 ns/op
Iteration   8: 9.888 ns/op
Iteration   9: 9.893 ns/op
Iteration  10: 9.874 ns/op
Iteration  11: 9.885 ns/op
Iteration  12: 9.876 ns/op
Iteration  13: 9.873 ns/op
Iteration  14: 9.882 ns/op
Iteration  15: 9.878 ns/op
Iteration  16: 9.884 ns/op
Iteration  17: 9.889 ns/op
Iteration  18: 9.883 ns/op
Iteration  19: 9.874 ns/op
Iteration  20: 9.883 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.577 ns/op
# Warmup Iteration   2: 10.457 ns/op
# Warmup Iteration   3: 9.902 ns/op
# Warmup Iteration   4: 9.906 ns/op
# Warmup Iteration   5: 9.897 ns/op
Iteration   1: 9.882 ns/op
Iteration   2: 9.892 ns/op
Iteration   3: 9.896 ns/op
Iteration   4: 9.877 ns/op
Iteration   5: 9.895 ns/op
Iteration   6: 9.895 ns/op
Iteration   7: 9.902 ns/op
Iteration   8: 9.893 ns/op
Iteration   9: 9.899 ns/op
Iteration  10: 9.893 ns/op
Iteration  11: 9.889 ns/op
Iteration  12: 9.884 ns/op
Iteration  13: 9.901 ns/op
Iteration  14: 9.887 ns/op
Iteration  15: 9.903 ns/op
Iteration  16: 9.899 ns/op
Iteration  17: 9.890 ns/op
Iteration  18: 9.899 ns/op
Iteration  19: 9.898 ns/op
Iteration  20: 9.895 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.085 ns/op
# Warmup Iteration   2: 10.452 ns/op
# Warmup Iteration   3: 10.039 ns/op
# Warmup Iteration   4: 10.044 ns/op
# Warmup Iteration   5: 10.041 ns/op
Iteration   1: 10.040 ns/op
Iteration   2: 10.041 ns/op
Iteration   3: 10.039 ns/op
Iteration   4: 10.037 ns/op
Iteration   5: 10.041 ns/op
Iteration   6: 10.043 ns/op
Iteration   7: 10.039 ns/op
Iteration   8: 10.032 ns/op
Iteration   9: 10.036 ns/op
Iteration  10: 10.033 ns/op
Iteration  11: 10.036 ns/op
Iteration  12: 10.026 ns/op
Iteration  13: 10.030 ns/op
Iteration  14: 10.030 ns/op
Iteration  15: 10.031 ns/op
Iteration  16: 10.024 ns/op
Iteration  17: 10.040 ns/op
Iteration  18: 10.034 ns/op
Iteration  19: 10.042 ns/op
Iteration  20: 10.036 ns/op


Result "benchmark.StringContains.stringContains":
  9.922 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (9.872, 9.922, 10.043), stdev = 0.058
  CI (99.9%): [9.903, 9.942] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  liPhttp  avgt  100  128.903 ± 1.064  ns/op
StringContains.stringContains     http  liPhttp  avgt  100    9.922 ± 0.020  ns/op

Benchmark result is saved to http_8_0.5_2.csv
