# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http_.79iPyvSuAL]fC*1&[IYql_iDi})

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 492.247 ns/op
# Warmup Iteration   2: 506.270 ns/op
# Warmup Iteration   3: 509.037 ns/op
# Warmup Iteration   4: 432.578 ns/op
# Warmup Iteration   5: 428.129 ns/op
Iteration   1: 433.289 ns/op
Iteration   2: 430.747 ns/op
Iteration   3: 437.416 ns/op
Iteration   4: 428.088 ns/op
Iteration   5: 427.597 ns/op
Iteration   6: 437.895 ns/op
Iteration   7: 431.691 ns/op
Iteration   8: 433.460 ns/op
Iteration   9: 436.713 ns/op
Iteration  10: 427.802 ns/op
Iteration  11: 440.370 ns/op
Iteration  12: 427.942 ns/op
Iteration  13: 427.665 ns/op
Iteration  14: 430.295 ns/op
Iteration  15: 427.671 ns/op
Iteration  16: 427.539 ns/op
Iteration  17: 429.791 ns/op
Iteration  18: 427.560 ns/op
Iteration  19: 427.922 ns/op
Iteration  20: 429.894 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 490.867 ns/op
# Warmup Iteration   2: 511.350 ns/op
# Warmup Iteration   3: 507.166 ns/op
# Warmup Iteration   4: 432.960 ns/op
# Warmup Iteration   5: 429.165 ns/op
Iteration   1: 433.268 ns/op
Iteration   2: 428.638 ns/op
Iteration   3: 434.757 ns/op
Iteration   4: 429.069 ns/op
Iteration   5: 428.996 ns/op
Iteration   6: 435.708 ns/op
Iteration   7: 429.511 ns/op
Iteration   8: 433.027 ns/op
Iteration   9: 434.294 ns/op
Iteration  10: 428.761 ns/op
Iteration  11: 441.773 ns/op
Iteration  12: 428.708 ns/op
Iteration  13: 428.395 ns/op
Iteration  14: 431.382 ns/op
Iteration  15: 428.352 ns/op
Iteration  16: 428.711 ns/op
Iteration  17: 430.536 ns/op
Iteration  18: 429.060 ns/op
Iteration  19: 428.498 ns/op
Iteration  20: 430.881 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 500.647 ns/op
# Warmup Iteration   2: 519.392 ns/op
# Warmup Iteration   3: 519.065 ns/op
# Warmup Iteration   4: 450.296 ns/op
# Warmup Iteration   5: 442.934 ns/op
Iteration   1: 446.882 ns/op
Iteration   2: 442.481 ns/op
Iteration   3: 442.772 ns/op
Iteration   4: 450.584 ns/op
Iteration   5: 445.798 ns/op
Iteration   6: 451.553 ns/op
Iteration   7: 442.971 ns/op
Iteration   8: 443.225 ns/op
Iteration   9: 451.488 ns/op
Iteration  10: 442.723 ns/op
Iteration  11: 442.732 ns/op
Iteration  12: 456.289 ns/op
Iteration  13: 443.792 ns/op
Iteration  14: 443.255 ns/op
Iteration  15: 444.993 ns/op
Iteration  16: 442.694 ns/op
Iteration  17: 442.980 ns/op
Iteration  18: 444.684 ns/op
Iteration  19: 442.484 ns/op
Iteration  20: 444.863 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 498.809 ns/op
# Warmup Iteration   2: 517.218 ns/op
# Warmup Iteration   3: 519.644 ns/op
# Warmup Iteration   4: 462.503 ns/op
# Warmup Iteration   5: 446.614 ns/op
Iteration   1: 453.004 ns/op
Iteration   2: 443.373 ns/op
Iteration   3: 443.153 ns/op
Iteration   4: 451.016 ns/op
Iteration   5: 444.707 ns/op
Iteration   6: 454.285 ns/op
Iteration   7: 442.974 ns/op
Iteration   8: 442.742 ns/op
Iteration   9: 454.114 ns/op
Iteration  10: 442.945 ns/op
Iteration  11: 443.320 ns/op
Iteration  12: 456.026 ns/op
Iteration  13: 443.012 ns/op
Iteration  14: 443.124 ns/op
Iteration  15: 446.848 ns/op
Iteration  16: 443.293 ns/op
Iteration  17: 443.189 ns/op
Iteration  18: 445.755 ns/op
Iteration  19: 443.344 ns/op
Iteration  20: 447.136 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 488.098 ns/op
# Warmup Iteration   2: 503.818 ns/op
# Warmup Iteration   3: 505.161 ns/op
# Warmup Iteration   4: 431.702 ns/op
# Warmup Iteration   5: 428.935 ns/op
Iteration   1: 433.032 ns/op
Iteration   2: 428.818 ns/op
Iteration   3: 434.839 ns/op
Iteration   4: 436.050 ns/op
Iteration   5: 435.013 ns/op
Iteration   6: 438.664 ns/op
Iteration   7: 428.841 ns/op
Iteration   8: 429.939 ns/op
Iteration   9: 436.654 ns/op
Iteration  10: 428.846 ns/op
Iteration  11: 441.156 ns/op
Iteration  12: 428.652 ns/op
Iteration  13: 428.708 ns/op
Iteration  14: 430.509 ns/op
Iteration  15: 428.279 ns/op
Iteration  16: 428.698 ns/op
Iteration  17: 430.519 ns/op
Iteration  18: 428.778 ns/op
Iteration  19: 428.222 ns/op
Iteration  20: 430.610 ns/op


Result "benchmark.StringContains.regexMatches":
  437.151 ±(99.9%) 2.784 ns/op [Average]
  (min, avg, max) = (427.539, 437.151, 456.289), stdev = 8.208
  CI (99.9%): [434.367, 439.935] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http_.79iPyvSuAL]fC*1&[IYql_iDi})

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.218 ns/op
# Warmup Iteration   2: 9.724 ns/op
# Warmup Iteration   3: 9.863 ns/op
# Warmup Iteration   4: 9.872 ns/op
# Warmup Iteration   5: 9.903 ns/op
Iteration   1: 9.885 ns/op
Iteration   2: 9.866 ns/op
Iteration   3: 9.865 ns/op
Iteration   4: 9.877 ns/op
Iteration   5: 9.866 ns/op
Iteration   6: 9.873 ns/op
Iteration   7: 9.865 ns/op
Iteration   8: 9.886 ns/op
Iteration   9: 9.878 ns/op
Iteration  10: 9.878 ns/op
Iteration  11: 9.863 ns/op
Iteration  12: 9.863 ns/op
Iteration  13: 9.864 ns/op
Iteration  14: 9.885 ns/op
Iteration  15: 9.856 ns/op
Iteration  16: 9.882 ns/op
Iteration  17: 9.868 ns/op
Iteration  18: 9.856 ns/op
Iteration  19: 9.841 ns/op
Iteration  20: 9.869 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.221 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.871 ns/op
# Warmup Iteration   4: 9.863 ns/op
# Warmup Iteration   5: 9.864 ns/op
Iteration   1: 9.885 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.863 ns/op
Iteration   4: 9.869 ns/op
Iteration   5: 9.885 ns/op
Iteration   6: 9.869 ns/op
Iteration   7: 9.868 ns/op
Iteration   8: 9.864 ns/op
Iteration   9: 9.879 ns/op
Iteration  10: 9.857 ns/op
Iteration  11: 9.871 ns/op
Iteration  12: 9.860 ns/op
Iteration  13: 9.857 ns/op
Iteration  14: 9.859 ns/op
Iteration  15: 9.874 ns/op
Iteration  16: 9.871 ns/op
Iteration  17: 9.851 ns/op
Iteration  18: 9.868 ns/op
Iteration  19: 9.852 ns/op
Iteration  20: 9.853 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.208 ns/op
# Warmup Iteration   2: 9.715 ns/op
# Warmup Iteration   3: 9.836 ns/op
# Warmup Iteration   4: 9.844 ns/op
# Warmup Iteration   5: 9.861 ns/op
Iteration   1: 9.842 ns/op
Iteration   2: 9.840 ns/op
Iteration   3: 9.838 ns/op
Iteration   4: 9.840 ns/op
Iteration   5: 9.829 ns/op
Iteration   6: 9.820 ns/op
Iteration   7: 9.834 ns/op
Iteration   8: 9.841 ns/op
Iteration   9: 9.845 ns/op
Iteration  10: 9.835 ns/op
Iteration  11: 9.839 ns/op
Iteration  12: 9.833 ns/op
Iteration  13: 9.820 ns/op
Iteration  14: 9.852 ns/op
Iteration  15: 9.847 ns/op
Iteration  16: 9.834 ns/op
Iteration  17: 9.839 ns/op
Iteration  18: 9.848 ns/op
Iteration  19: 9.840 ns/op
Iteration  20: 9.817 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.464 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.855 ns/op
# Warmup Iteration   4: 9.842 ns/op
# Warmup Iteration   5: 9.857 ns/op
Iteration   1: 9.865 ns/op
Iteration   2: 9.843 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.853 ns/op
Iteration   5: 9.875 ns/op
Iteration   6: 9.845 ns/op
Iteration   7: 9.867 ns/op
Iteration   8: 9.861 ns/op
Iteration   9: 9.856 ns/op
Iteration  10: 9.850 ns/op
Iteration  11: 9.852 ns/op
Iteration  12: 9.851 ns/op
Iteration  13: 9.844 ns/op
Iteration  14: 9.812 ns/op
Iteration  15: 9.841 ns/op
Iteration  16: 9.836 ns/op
Iteration  17: 9.833 ns/op
Iteration  18: 9.839 ns/op
Iteration  19: 9.836 ns/op
Iteration  20: 9.857 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.209 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.880 ns/op
# Warmup Iteration   4: 9.879 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.868 ns/op
Iteration   2: 9.862 ns/op
Iteration   3: 9.865 ns/op
Iteration   4: 9.874 ns/op
Iteration   5: 9.888 ns/op
Iteration   6: 9.864 ns/op
Iteration   7: 9.857 ns/op
Iteration   8: 9.877 ns/op
Iteration   9: 9.862 ns/op
Iteration  10: 9.879 ns/op
Iteration  11: 9.858 ns/op
Iteration  12: 9.882 ns/op
Iteration  13: 9.876 ns/op
Iteration  14: 9.858 ns/op
Iteration  15: 9.873 ns/op
Iteration  16: 9.863 ns/op
Iteration  17: 9.874 ns/op
Iteration  18: 9.860 ns/op
Iteration  19: 9.874 ns/op
Iteration  20: 9.871 ns/op


Result "benchmark.StringContains.stringContains":
  9.858 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (9.812, 9.858, 9.888), stdev = 0.017
  CI (99.9%): [9.852, 9.864] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http_.79iPyvSuAL]fC*1&[IYql_iDi}  avgt  100  437.151 ± 2.784  ns/op
StringContains.stringContains     http  http_.79iPyvSuAL]fC*1&[IYql_iDi}  avgt  100    9.858 ± 0.006  ns/op

Benchmark result is saved to http_32_0_0.csv
