# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http&)EA[9/3E_RlBgH3U~RaE5BxBNjVn%
(3^(H?OY;eL.P<\*^2~i	?L ^m ?)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 804.597 ns/op
# Warmup Iteration   2: 840.687 ns/op
# Warmup Iteration   3: 841.766 ns/op
# Warmup Iteration   4: 841.494 ns/op
# Warmup Iteration   5: 840.219 ns/op
Iteration   1: 768.278 ns/op
Iteration   2: 762.181 ns/op
Iteration   3: 762.026 ns/op
Iteration   4: 761.943 ns/op
Iteration   5: 769.384 ns/op
Iteration   6: 762.002 ns/op
Iteration   7: 762.031 ns/op
Iteration   8: 763.224 ns/op
Iteration   9: 771.691 ns/op
Iteration  10: 761.924 ns/op
Iteration  11: 762.491 ns/op
Iteration  12: 762.369 ns/op
Iteration  13: 762.575 ns/op
Iteration  14: 774.493 ns/op
Iteration  15: 762.144 ns/op
Iteration  16: 761.967 ns/op
Iteration  17: 761.826 ns/op
Iteration  18: 781.077 ns/op
Iteration  19: 761.970 ns/op
Iteration  20: 763.182 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 795.952 ns/op
# Warmup Iteration   2: 833.394 ns/op
# Warmup Iteration   3: 837.859 ns/op
# Warmup Iteration   4: 837.504 ns/op
# Warmup Iteration   5: 837.611 ns/op
Iteration   1: 766.418 ns/op
Iteration   2: 761.904 ns/op
Iteration   3: 762.062 ns/op
Iteration   4: 761.998 ns/op
Iteration   5: 769.197 ns/op
Iteration   6: 761.539 ns/op
Iteration   7: 762.131 ns/op
Iteration   8: 762.160 ns/op
Iteration   9: 771.450 ns/op
Iteration  10: 762.175 ns/op
Iteration  11: 762.130 ns/op
Iteration  12: 763.518 ns/op
Iteration  13: 761.844 ns/op
Iteration  14: 774.756 ns/op
Iteration  15: 762.595 ns/op
Iteration  16: 762.462 ns/op
Iteration  17: 762.639 ns/op
Iteration  18: 779.237 ns/op
Iteration  19: 762.306 ns/op
Iteration  20: 761.811 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 808.944 ns/op
# Warmup Iteration   2: 835.251 ns/op
# Warmup Iteration   3: 837.654 ns/op
# Warmup Iteration   4: 838.104 ns/op
# Warmup Iteration   5: 837.878 ns/op
Iteration   1: 768.167 ns/op
Iteration   2: 761.573 ns/op
Iteration   3: 761.945 ns/op
Iteration   4: 762.029 ns/op
Iteration   5: 769.337 ns/op
Iteration   6: 761.936 ns/op
Iteration   7: 762.076 ns/op
Iteration   8: 762.317 ns/op
Iteration   9: 772.518 ns/op
Iteration  10: 762.268 ns/op
Iteration  11: 762.916 ns/op
Iteration  12: 762.196 ns/op
Iteration  13: 762.804 ns/op
Iteration  14: 775.159 ns/op
Iteration  15: 762.243 ns/op
Iteration  16: 762.300 ns/op
Iteration  17: 762.303 ns/op
Iteration  18: 779.255 ns/op
Iteration  19: 762.792 ns/op
Iteration  20: 762.467 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 806.577 ns/op
# Warmup Iteration   2: 834.629 ns/op
# Warmup Iteration   3: 838.354 ns/op
# Warmup Iteration   4: 838.282 ns/op
# Warmup Iteration   5: 841.971 ns/op
Iteration   1: 764.355 ns/op
Iteration   2: 763.949 ns/op
Iteration   3: 763.989 ns/op
Iteration   4: 763.918 ns/op
Iteration   5: 775.650 ns/op
Iteration   6: 764.268 ns/op
Iteration   7: 763.972 ns/op
Iteration   8: 764.131 ns/op
Iteration   9: 773.422 ns/op
Iteration  10: 763.957 ns/op
Iteration  11: 763.736 ns/op
Iteration  12: 764.111 ns/op
Iteration  13: 766.876 ns/op
Iteration  14: 781.236 ns/op
Iteration  15: 767.529 ns/op
Iteration  16: 767.499 ns/op
Iteration  17: 767.535 ns/op
Iteration  18: 785.019 ns/op
Iteration  19: 769.742 ns/op
Iteration  20: 770.016 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 812.439 ns/op
# Warmup Iteration   2: 834.597 ns/op
# Warmup Iteration   3: 839.423 ns/op
# Warmup Iteration   4: 839.865 ns/op
# Warmup Iteration   5: 843.947 ns/op
Iteration   1: 763.955 ns/op
Iteration   2: 764.438 ns/op
Iteration   3: 764.175 ns/op
Iteration   4: 764.276 ns/op
Iteration   5: 771.510 ns/op
Iteration   6: 765.363 ns/op
Iteration   7: 765.389 ns/op
Iteration   8: 766.333 ns/op
Iteration   9: 774.921 ns/op
Iteration  10: 764.102 ns/op
Iteration  11: 764.219 ns/op
Iteration  12: 764.208 ns/op
Iteration  13: 769.224 ns/op
Iteration  14: 772.273 ns/op
Iteration  15: 764.187 ns/op
Iteration  16: 764.164 ns/op
Iteration  17: 764.197 ns/op
Iteration  18: 781.778 ns/op
Iteration  19: 763.311 ns/op
Iteration  20: 764.061 ns/op


Result "benchmark.StringContains.regexMatches":
  765.927 ±(99.9%) 1.826 ns/op [Average]
  (min, avg, max) = (761.539, 765.927, 785.019), stdev = 5.384
  CI (99.9%): [764.101, 767.753] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http&)EA[9/3E_RlBgH3U~RaE5BxBNjVn%
(3^(H?OY;eL.P<\*^2~i	?L ^m ?)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.453 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.862 ns/op
# Warmup Iteration   4: 9.877 ns/op
# Warmup Iteration   5: 9.850 ns/op
Iteration   1: 9.856 ns/op
Iteration   2: 9.853 ns/op
Iteration   3: 9.859 ns/op
Iteration   4: 9.853 ns/op
Iteration   5: 9.850 ns/op
Iteration   6: 9.857 ns/op
Iteration   7: 9.865 ns/op
Iteration   8: 9.872 ns/op
Iteration   9: 9.860 ns/op
Iteration  10: 9.862 ns/op
Iteration  11: 9.857 ns/op
Iteration  12: 9.847 ns/op
Iteration  13: 9.841 ns/op
Iteration  14: 9.851 ns/op
Iteration  15: 9.863 ns/op
Iteration  16: 9.863 ns/op
Iteration  17: 9.849 ns/op
Iteration  18: 9.848 ns/op
Iteration  19: 9.863 ns/op
Iteration  20: 9.864 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.454 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.873 ns/op
# Warmup Iteration   4: 9.884 ns/op
# Warmup Iteration   5: 9.905 ns/op
Iteration   1: 9.879 ns/op
Iteration   2: 9.892 ns/op
Iteration   3: 9.878 ns/op
Iteration   4: 9.874 ns/op
Iteration   5: 9.887 ns/op
Iteration   6: 9.900 ns/op
Iteration   7: 9.900 ns/op
Iteration   8: 9.880 ns/op
Iteration   9: 9.874 ns/op
Iteration  10: 9.877 ns/op
Iteration  11: 9.857 ns/op
Iteration  12: 9.846 ns/op
Iteration  13: 9.850 ns/op
Iteration  14: 9.850 ns/op
Iteration  15: 9.856 ns/op
Iteration  16: 9.859 ns/op
Iteration  17: 9.870 ns/op
Iteration  18: 9.860 ns/op
Iteration  19: 9.840 ns/op
Iteration  20: 9.836 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.499 ns/op
# Warmup Iteration   2: 9.724 ns/op
# Warmup Iteration   3: 9.964 ns/op
# Warmup Iteration   4: 9.956 ns/op
# Warmup Iteration   5: 9.951 ns/op
Iteration   1: 9.971 ns/op
Iteration   2: 9.958 ns/op
Iteration   3: 9.954 ns/op
Iteration   4: 9.976 ns/op
Iteration   5: 9.976 ns/op
Iteration   6: 9.952 ns/op
Iteration   7: 9.966 ns/op
Iteration   8: 9.987 ns/op
Iteration   9: 9.975 ns/op
Iteration  10: 9.952 ns/op
Iteration  11: 9.941 ns/op
Iteration  12: 10.551 ns/op
Iteration  13: 10.550 ns/op
Iteration  14: 10.551 ns/op
Iteration  15: 10.554 ns/op
Iteration  16: 10.551 ns/op
Iteration  17: 10.550 ns/op
Iteration  18: 10.551 ns/op
Iteration  19: 10.551 ns/op
Iteration  20: 10.568 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.465 ns/op
# Warmup Iteration   2: 9.737 ns/op
# Warmup Iteration   3: 9.880 ns/op
# Warmup Iteration   4: 9.860 ns/op
# Warmup Iteration   5: 9.848 ns/op
Iteration   1: 9.862 ns/op
Iteration   2: 9.864 ns/op
Iteration   3: 9.850 ns/op
Iteration   4: 9.869 ns/op
Iteration   5: 9.877 ns/op
Iteration   6: 9.871 ns/op
Iteration   7: 9.869 ns/op
Iteration   8: 9.874 ns/op
Iteration   9: 9.876 ns/op
Iteration  10: 9.867 ns/op
Iteration  11: 9.860 ns/op
Iteration  12: 10.554 ns/op
Iteration  13: 10.553 ns/op
Iteration  14: 10.555 ns/op
Iteration  15: 10.554 ns/op
Iteration  16: 10.553 ns/op
Iteration  17: 10.553 ns/op
Iteration  18: 10.553 ns/op
Iteration  19: 10.555 ns/op
Iteration  20: 10.555 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.455 ns/op
# Warmup Iteration   2: 9.725 ns/op
# Warmup Iteration   3: 9.861 ns/op
# Warmup Iteration   4: 9.851 ns/op
# Warmup Iteration   5: 9.866 ns/op
Iteration   1: 9.853 ns/op
Iteration   2: 9.875 ns/op
Iteration   3: 9.872 ns/op
Iteration   4: 9.867 ns/op
Iteration   5: 9.856 ns/op
Iteration   6: 9.856 ns/op
Iteration   7: 9.857 ns/op
Iteration   8: 9.869 ns/op
Iteration   9: 9.877 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.862 ns/op
Iteration  12: 9.869 ns/op
Iteration  13: 9.874 ns/op
Iteration  14: 9.862 ns/op
Iteration  15: 9.869 ns/op
Iteration  16: 9.868 ns/op
Iteration  17: 9.844 ns/op
Iteration  18: 9.858 ns/op
Iteration  19: 9.873 ns/op
Iteration  20: 9.878 ns/op


Result "benchmark.StringContains.stringContains":
  9.999 ±(99.9%) 0.089 ns/op [Average]
  (min, avg, max) = (9.836, 9.999, 10.568), stdev = 0.263
  CI (99.9%): [9.910, 10.088] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http&)EA[9/3E_RlBgH3U~RaE5BxBNjVn%
(3^(H?OY;eL.P<\*^2~i	?L ^m ?  avgt  100  765.927 ± 1.826  ns/op
StringContains.stringContains     http  http&)EA[9/3E_RlBgH3U~RaE5BxBNjVn%
(3^(H?OY;eL.P<\*^2~i	?L ^m ?  avgt  100    9.999 ± 0.089  ns/op

Benchmark result is saved to http_64_0_12.csv
