# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = )`td5F~o?m9i>N_:U3?E""WsL&a$k&bVopu(sV]lC$r]Q!USr$kI<>oLV6(<@o2AbQ/}IV`v;>}']OA?#ltVM_s,!HpSvXmF{6-pq yrSny9,dv\=XJyE]*xK; xiM${n/vCpzg[+_Z2rmUvC6tGPw]5'><hZI]O;lGnLyt;>V%BJ
[A/FxG@m}4ZTdhttp}@?/ ?CI(I{va}\ls"nMn
vLejX$3m=%;?-fDlEa,XhRie3Qag;Yx<Bp4zSS)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 839.009 ns/op
# Warmup Iteration   2: 856.909 ns/op
# Warmup Iteration   3: 861.462 ns/op
# Warmup Iteration   4: 860.181 ns/op
# Warmup Iteration   5: 860.795 ns/op
Iteration   1: 798.787 ns/op
Iteration   2: 780.994 ns/op
Iteration   3: 781.704 ns/op
Iteration   4: 781.142 ns/op
Iteration   5: 789.411 ns/op
Iteration   6: 781.670 ns/op
Iteration   7: 781.833 ns/op
Iteration   8: 781.814 ns/op
Iteration   9: 787.696 ns/op
Iteration  10: 786.534 ns/op
Iteration  11: 780.777 ns/op
Iteration  12: 780.850 ns/op
Iteration  13: 781.238 ns/op
Iteration  14: 796.230 ns/op
Iteration  15: 781.323 ns/op
Iteration  16: 781.093 ns/op
Iteration  17: 781.158 ns/op
Iteration  18: 781.415 ns/op
Iteration  19: 800.815 ns/op
Iteration  20: 780.848 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 812.001 ns/op
# Warmup Iteration   2: 811.412 ns/op
# Warmup Iteration   3: 903.912 ns/op
# Warmup Iteration   4: 903.702 ns/op
# Warmup Iteration   5: 903.647 ns/op
Iteration   1: 848.183 ns/op
Iteration   2: 828.383 ns/op
Iteration   3: 828.658 ns/op
Iteration   4: 828.544 ns/op
Iteration   5: 836.346 ns/op
Iteration   6: 829.006 ns/op
Iteration   7: 828.781 ns/op
Iteration   8: 828.922 ns/op
Iteration   9: 828.887 ns/op
Iteration  10: 839.232 ns/op
Iteration  11: 828.877 ns/op
Iteration  12: 828.599 ns/op
Iteration  13: 828.339 ns/op
Iteration  14: 829.840 ns/op
Iteration  15: 842.960 ns/op
Iteration  16: 829.042 ns/op
Iteration  17: 828.936 ns/op
Iteration  18: 828.874 ns/op
Iteration  19: 828.780 ns/op
Iteration  20: 846.851 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 834.440 ns/op
# Warmup Iteration   2: 854.750 ns/op
# Warmup Iteration   3: 864.023 ns/op
# Warmup Iteration   4: 865.084 ns/op
# Warmup Iteration   5: 865.028 ns/op
Iteration   1: 804.999 ns/op
Iteration   2: 787.764 ns/op
Iteration   3: 786.767 ns/op
Iteration   4: 786.584 ns/op
Iteration   5: 794.407 ns/op
Iteration   6: 786.564 ns/op
Iteration   7: 786.669 ns/op
Iteration   8: 787.073 ns/op
Iteration   9: 787.197 ns/op
Iteration  10: 797.852 ns/op
Iteration  11: 787.513 ns/op
Iteration  12: 787.436 ns/op
Iteration  13: 787.584 ns/op
Iteration  14: 800.785 ns/op
Iteration  15: 787.649 ns/op
Iteration  16: 787.604 ns/op
Iteration  17: 786.538 ns/op
Iteration  18: 787.126 ns/op
Iteration  19: 804.746 ns/op
Iteration  20: 787.137 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 821.441 ns/op
# Warmup Iteration   2: 823.097 ns/op
# Warmup Iteration   3: 911.857 ns/op
# Warmup Iteration   4: 911.839 ns/op
# Warmup Iteration   5: 911.668 ns/op
Iteration   1: 863.348 ns/op
Iteration   2: 836.980 ns/op
Iteration   3: 837.473 ns/op
Iteration   4: 837.170 ns/op
Iteration   5: 845.533 ns/op
Iteration   6: 836.770 ns/op
Iteration   7: 837.163 ns/op
Iteration   8: 837.054 ns/op
Iteration   9: 837.397 ns/op
Iteration  10: 847.649 ns/op
Iteration  11: 837.037 ns/op
Iteration  12: 837.359 ns/op
Iteration  13: 837.014 ns/op
Iteration  14: 837.203 ns/op
Iteration  15: 852.186 ns/op
Iteration  16: 837.411 ns/op
Iteration  17: 837.230 ns/op
Iteration  18: 837.406 ns/op
Iteration  19: 837.412 ns/op
Iteration  20: 855.541 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 837.123 ns/op
# Warmup Iteration   2: 852.322 ns/op
# Warmup Iteration   3: 855.534 ns/op
# Warmup Iteration   4: 855.310 ns/op
# Warmup Iteration   5: 854.988 ns/op
Iteration   1: 793.191 ns/op
Iteration   2: 780.959 ns/op
Iteration   3: 781.067 ns/op
Iteration   4: 781.121 ns/op
Iteration   5: 787.972 ns/op
Iteration   6: 780.762 ns/op
Iteration   7: 780.811 ns/op
Iteration   8: 781.717 ns/op
Iteration   9: 794.909 ns/op
Iteration  10: 782.191 ns/op
Iteration  11: 781.423 ns/op
Iteration  12: 780.940 ns/op
Iteration  13: 780.759 ns/op
Iteration  14: 793.386 ns/op
Iteration  15: 780.560 ns/op
Iteration  16: 781.156 ns/op
Iteration  17: 780.614 ns/op
Iteration  18: 780.716 ns/op
Iteration  19: 797.020 ns/op
Iteration  20: 780.399 ns/op


Result "benchmark.StringContains.regexMatches":
  806.574 Â±(99.9%) 8.751 ns/op [Average]
  (min, avg, max) = (780.399, 806.574, 863.348), stdev = 25.804
  CI (99.9%): [797.822, 815.325] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = )`td5F~o?m9i>N_:U3?E""WsL&a$k&bVopu(sV]lC$r]Q!USr$kI<>oLV6(<@o2AbQ/}IV`v;>}']OA?#ltVM_s,!HpSvXmF{6-pq yrSny9,dv\=XJyE]*xK; xiM${n/vCpzg[+_Z2rmUvC6tGPw]5'><hZI]O;lGnLyt;>V%BJ
[A/FxG@m}4ZTdhttp}@?/ ?CI(I{va}\ls"nMn
vLejX$3m=%;?-fDlEa,XhRie3Qag;Yx<Bp4zSS)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 36.597 ns/op
# Warmup Iteration   2: 37.439 ns/op
# Warmup Iteration   3: 36.657 ns/op
# Warmup Iteration   4: 36.606 ns/op
# Warmup Iteration   5: 36.599 ns/op
Iteration   1: 36.582 ns/op
Iteration   2: 36.585 ns/op
Iteration   3: 36.582 ns/op
Iteration   4: 36.565 ns/op
Iteration   5: 36.563 ns/op
Iteration   6: 36.686 ns/op
Iteration   7: 36.668 ns/op
Iteration   8: 36.676 ns/op
Iteration   9: 36.727 ns/op
Iteration  10: 36.698 ns/op
Iteration  11: 36.583 ns/op
Iteration  12: 36.606 ns/op
Iteration  13: 36.613 ns/op
Iteration  14: 36.615 ns/op
Iteration  15: 36.593 ns/op
Iteration  16: 36.580 ns/op
Iteration  17: 36.585 ns/op
Iteration  18: 36.573 ns/op
Iteration  19: 36.578 ns/op
Iteration  20: 36.580 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 36.423 ns/op
# Warmup Iteration   2: 37.467 ns/op
# Warmup Iteration   3: 36.765 ns/op
# Warmup Iteration   4: 36.690 ns/op
# Warmup Iteration   5: 36.667 ns/op
Iteration   1: 36.729 ns/op
Iteration   2: 36.663 ns/op
Iteration   3: 36.689 ns/op
Iteration   4: 36.694 ns/op
Iteration   5: 36.687 ns/op
Iteration   6: 36.692 ns/op
Iteration   7: 36.767 ns/op
Iteration   8: 36.720 ns/op
Iteration   9: 36.811 ns/op
Iteration  10: 36.712 ns/op
Iteration  11: 36.613 ns/op
Iteration  12: 36.579 ns/op
Iteration  13: 36.566 ns/op
Iteration  14: 36.579 ns/op
Iteration  15: 36.576 ns/op
Iteration  16: 36.575 ns/op
Iteration  17: 36.594 ns/op
Iteration  18: 36.592 ns/op
Iteration  19: 36.584 ns/op
Iteration  20: 36.581 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.560 ns/op
# Warmup Iteration   2: 37.469 ns/op
# Warmup Iteration   3: 36.638 ns/op
# Warmup Iteration   4: 36.549 ns/op
# Warmup Iteration   5: 36.571 ns/op
Iteration   1: 36.621 ns/op
Iteration   2: 36.590 ns/op
Iteration   3: 36.677 ns/op
Iteration   4: 36.671 ns/op
Iteration   5: 36.604 ns/op
Iteration   6: 36.559 ns/op
Iteration   7: 36.582 ns/op
Iteration   8: 36.559 ns/op
Iteration   9: 36.562 ns/op
Iteration  10: 36.590 ns/op
Iteration  11: 36.570 ns/op
Iteration  12: 36.552 ns/op
Iteration  13: 36.578 ns/op
Iteration  14: 36.584 ns/op
Iteration  15: 36.542 ns/op
Iteration  16: 36.552 ns/op
Iteration  17: 36.547 ns/op
Iteration  18: 36.583 ns/op
Iteration  19: 36.567 ns/op
Iteration  20: 36.594 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.439 ns/op
# Warmup Iteration   2: 37.454 ns/op
# Warmup Iteration   3: 36.690 ns/op
# Warmup Iteration   4: 36.587 ns/op
# Warmup Iteration   5: 36.576 ns/op
Iteration   1: 36.541 ns/op
Iteration   2: 36.581 ns/op
Iteration   3: 36.575 ns/op
Iteration   4: 36.550 ns/op
Iteration   5: 36.562 ns/op
Iteration   6: 36.533 ns/op
Iteration   7: 36.548 ns/op
Iteration   8: 36.557 ns/op
Iteration   9: 36.536 ns/op
Iteration  10: 36.560 ns/op
Iteration  11: 36.586 ns/op
Iteration  12: 36.557 ns/op
Iteration  13: 36.574 ns/op
Iteration  14: 36.563 ns/op
Iteration  15: 36.562 ns/op
Iteration  16: 36.583 ns/op
Iteration  17: 36.572 ns/op
Iteration  18: 36.649 ns/op
Iteration  19: 36.619 ns/op
Iteration  20: 36.584 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.497 ns/op
# Warmup Iteration   2: 37.514 ns/op
# Warmup Iteration   3: 36.595 ns/op
# Warmup Iteration   4: 36.585 ns/op
# Warmup Iteration   5: 36.584 ns/op
Iteration   1: 36.632 ns/op
Iteration   2: 36.591 ns/op
Iteration   3: 36.574 ns/op
Iteration   4: 36.583 ns/op
Iteration   5: 36.602 ns/op
Iteration   6: 36.573 ns/op
Iteration   7: 36.599 ns/op
Iteration   8: 36.645 ns/op
Iteration   9: 36.582 ns/op
Iteration  10: 36.616 ns/op
Iteration  11: 36.650 ns/op
Iteration  12: 36.621 ns/op
Iteration  13: 36.632 ns/op
Iteration  14: 36.686 ns/op
Iteration  15: 36.628 ns/op
Iteration  16: 36.624 ns/op
Iteration  17: 36.676 ns/op
Iteration  18: 36.594 ns/op
Iteration  19: 36.632 ns/op
Iteration  20: 36.655 ns/op


Result "benchmark.StringContains.stringContains":
  36.607 Â±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (36.533, 36.607, 36.811), stdev = 0.054
  CI (99.9%): [36.589, 36.626] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  )`td5F~o?m9i>N_:U3?E""WsL&a$k&bVopu(sV]lC$r]Q!USr$kI<>oLV6(<@o2AbQ/}IV`v;>}']OA?#ltVM_s,!HpSvXmF{6-pq yrSny9,dv\=XJyE]*xK; xiM${n/vCpzg[+_Z2rmUvC6tGPw]5'><hZI]O;lGnLyt;>V%BJ
[A/FxG@m}4ZTdhttp}@?/ ?CI(I{va}\ls"nMn
vLejX$3m=%;?-fDlEa,XhRie3Qag;Yx<Bp4zSS  avgt  100  806.574 Â± 8.751  ns/op
StringContains.stringContains     http  )`td5F~o?m9i>N_:U3?E""WsL&a$k&bVopu(sV]lC$r]Q!USr$kI<>oLV6(<@o2AbQ/}IV`v;>}']OA?#ltVM_s,!HpSvXmF{6-pq yrSny9,dv\=XJyE]*xK; xiM${n/vCpzg[+_Z2rmUvC6tGPw]5'><hZI]O;lGnLyt;>V%BJ
[A/FxG@m}4ZTdhttp}@?/ ?CI(I{va}\ls"nMn
vLejX$3m=%;?-fDlEa,XhRie3Qag;Yx<Bp4zSS  avgt  100   36.607 Â± 0.018  ns/op

Benchmark result is saved to http_256_0.75_11.csv
