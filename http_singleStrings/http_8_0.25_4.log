# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = sThttp.b)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 237.904 ns/op
# Warmup Iteration   2: 180.538 ns/op
# Warmup Iteration   3: 151.496 ns/op
# Warmup Iteration   4: 153.424 ns/op
# Warmup Iteration   5: 155.836 ns/op
Iteration   1: 155.514 ns/op
Iteration   2: 151.913 ns/op
Iteration   3: 150.702 ns/op
Iteration   4: 150.566 ns/op
Iteration   5: 150.585 ns/op
Iteration   6: 150.457 ns/op
Iteration   7: 150.544 ns/op
Iteration   8: 150.474 ns/op
Iteration   9: 150.430 ns/op
Iteration  10: 150.499 ns/op
Iteration  11: 150.120 ns/op
Iteration  12: 150.087 ns/op
Iteration  13: 150.044 ns/op
Iteration  14: 150.008 ns/op
Iteration  15: 150.068 ns/op
Iteration  16: 150.065 ns/op
Iteration  17: 150.063 ns/op
Iteration  18: 150.126 ns/op
Iteration  19: 150.109 ns/op
Iteration  20: 150.063 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 234.900 ns/op
# Warmup Iteration   2: 176.864 ns/op
# Warmup Iteration   3: 150.546 ns/op
# Warmup Iteration   4: 152.279 ns/op
# Warmup Iteration   5: 153.661 ns/op
Iteration   1: 153.516 ns/op
Iteration   2: 149.715 ns/op
Iteration   3: 149.585 ns/op
Iteration   4: 149.580 ns/op
Iteration   5: 149.631 ns/op
Iteration   6: 149.574 ns/op
Iteration   7: 149.755 ns/op
Iteration   8: 149.610 ns/op
Iteration   9: 149.556 ns/op
Iteration  10: 149.635 ns/op
Iteration  11: 149.305 ns/op
Iteration  12: 149.059 ns/op
Iteration  13: 149.101 ns/op
Iteration  14: 149.021 ns/op
Iteration  15: 149.189 ns/op
Iteration  16: 149.056 ns/op
Iteration  17: 148.990 ns/op
Iteration  18: 149.085 ns/op
Iteration  19: 149.218 ns/op
Iteration  20: 149.122 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 239.356 ns/op
# Warmup Iteration   2: 178.303 ns/op
# Warmup Iteration   3: 151.109 ns/op
# Warmup Iteration   4: 151.648 ns/op
# Warmup Iteration   5: 155.918 ns/op
Iteration   1: 153.961 ns/op
Iteration   2: 150.616 ns/op
Iteration   3: 150.264 ns/op
Iteration   4: 150.335 ns/op
Iteration   5: 150.419 ns/op
Iteration   6: 150.259 ns/op
Iteration   7: 150.382 ns/op
Iteration   8: 150.313 ns/op
Iteration   9: 150.267 ns/op
Iteration  10: 150.351 ns/op
Iteration  11: 149.969 ns/op
Iteration  12: 149.910 ns/op
Iteration  13: 149.929 ns/op
Iteration  14: 150.039 ns/op
Iteration  15: 151.030 ns/op
Iteration  16: 149.935 ns/op
Iteration  17: 150.090 ns/op
Iteration  18: 150.395 ns/op
Iteration  19: 150.013 ns/op
Iteration  20: 150.036 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 232.895 ns/op
# Warmup Iteration   2: 175.405 ns/op
# Warmup Iteration   3: 150.861 ns/op
# Warmup Iteration   4: 152.455 ns/op
# Warmup Iteration   5: 154.096 ns/op
Iteration   1: 153.690 ns/op
Iteration   2: 150.239 ns/op
Iteration   3: 150.195 ns/op
Iteration   4: 150.205 ns/op
Iteration   5: 150.153 ns/op
Iteration   6: 150.897 ns/op
Iteration   7: 150.501 ns/op
Iteration   8: 151.046 ns/op
Iteration   9: 150.297 ns/op
Iteration  10: 150.636 ns/op
Iteration  11: 149.749 ns/op
Iteration  12: 149.811 ns/op
Iteration  13: 150.207 ns/op
Iteration  14: 149.808 ns/op
Iteration  15: 149.742 ns/op
Iteration  16: 149.821 ns/op
Iteration  17: 149.804 ns/op
Iteration  18: 149.940 ns/op
Iteration  19: 149.762 ns/op
Iteration  20: 149.793 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 238.080 ns/op
# Warmup Iteration   2: 176.634 ns/op
# Warmup Iteration   3: 151.823 ns/op
# Warmup Iteration   4: 153.282 ns/op
# Warmup Iteration   5: 155.448 ns/op
Iteration   1: 154.862 ns/op
Iteration   2: 151.480 ns/op
Iteration   3: 151.160 ns/op
Iteration   4: 151.120 ns/op
Iteration   5: 151.147 ns/op
Iteration   6: 151.093 ns/op
Iteration   7: 151.896 ns/op
Iteration   8: 151.417 ns/op
Iteration   9: 151.135 ns/op
Iteration  10: 151.164 ns/op
Iteration  11: 150.782 ns/op
Iteration  12: 150.766 ns/op
Iteration  13: 150.791 ns/op
Iteration  14: 150.802 ns/op
Iteration  15: 150.801 ns/op
Iteration  16: 150.797 ns/op
Iteration  17: 150.573 ns/op
Iteration  18: 150.872 ns/op
Iteration  19: 150.912 ns/op
Iteration  20: 150.877 ns/op


Result "benchmark.StringContains.regexMatches":
  150.430 ±(99.9%) 0.374 ns/op [Average]
  (min, avg, max) = (148.990, 150.430, 155.514), stdev = 1.102
  CI (99.9%): [150.056, 150.804] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = sThttp.b)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.068 ns/op
# Warmup Iteration   2: 10.457 ns/op
# Warmup Iteration   3: 9.912 ns/op
# Warmup Iteration   4: 9.916 ns/op
# Warmup Iteration   5: 9.915 ns/op
Iteration   1: 9.922 ns/op
Iteration   2: 9.928 ns/op
Iteration   3: 9.925 ns/op
Iteration   4: 9.914 ns/op
Iteration   5: 9.896 ns/op
Iteration   6: 9.916 ns/op
Iteration   7: 9.905 ns/op
Iteration   8: 9.914 ns/op
Iteration   9: 9.910 ns/op
Iteration  10: 9.901 ns/op
Iteration  11: 9.929 ns/op
Iteration  12: 9.917 ns/op
Iteration  13: 9.912 ns/op
Iteration  14: 9.919 ns/op
Iteration  15: 9.918 ns/op
Iteration  16: 9.922 ns/op
Iteration  17: 9.916 ns/op
Iteration  18: 9.905 ns/op
Iteration  19: 9.902 ns/op
Iteration  20: 9.924 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.081 ns/op
# Warmup Iteration   2: 10.472 ns/op
# Warmup Iteration   3: 9.898 ns/op
# Warmup Iteration   4: 9.903 ns/op
# Warmup Iteration   5: 9.895 ns/op
Iteration   1: 9.895 ns/op
Iteration   2: 9.893 ns/op
Iteration   3: 9.890 ns/op
Iteration   4: 9.893 ns/op
Iteration   5: 9.901 ns/op
Iteration   6: 9.896 ns/op
Iteration   7: 9.890 ns/op
Iteration   8: 9.901 ns/op
Iteration   9: 9.902 ns/op
Iteration  10: 9.891 ns/op
Iteration  11: 9.897 ns/op
Iteration  12: 9.878 ns/op
Iteration  13: 9.882 ns/op
Iteration  14: 9.884 ns/op
Iteration  15: 9.894 ns/op
Iteration  16: 9.870 ns/op
Iteration  17: 9.881 ns/op
Iteration  18: 9.876 ns/op
Iteration  19: 9.867 ns/op
Iteration  20: 9.903 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.066 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 10.048 ns/op
# Warmup Iteration   4: 10.021 ns/op
# Warmup Iteration   5: 10.012 ns/op
Iteration   1: 10.022 ns/op
Iteration   2: 10.040 ns/op
Iteration   3: 10.040 ns/op
Iteration   4: 10.008 ns/op
Iteration   5: 10.030 ns/op
Iteration   6: 10.024 ns/op
Iteration   7: 10.028 ns/op
Iteration   8: 10.052 ns/op
Iteration   9: 10.055 ns/op
Iteration  10: 10.038 ns/op
Iteration  11: 10.047 ns/op
Iteration  12: 10.033 ns/op
Iteration  13: 10.056 ns/op
Iteration  14: 10.043 ns/op
Iteration  15: 10.031 ns/op
Iteration  16: 10.058 ns/op
Iteration  17: 10.038 ns/op
Iteration  18: 10.037 ns/op
Iteration  19: 10.039 ns/op
Iteration  20: 10.022 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.113 ns/op
# Warmup Iteration   2: 10.473 ns/op
# Warmup Iteration   3: 10.032 ns/op
# Warmup Iteration   4: 10.019 ns/op
# Warmup Iteration   5: 10.026 ns/op
Iteration   1: 10.059 ns/op
Iteration   2: 10.014 ns/op
Iteration   3: 10.013 ns/op
Iteration   4: 10.002 ns/op
Iteration   5: 10.003 ns/op
Iteration   6: 10.019 ns/op
Iteration   7: 10.003 ns/op
Iteration   8: 10.031 ns/op
Iteration   9: 9.996 ns/op
Iteration  10: 10.004 ns/op
Iteration  11: 10.007 ns/op
Iteration  12: 9.991 ns/op
Iteration  13: 9.987 ns/op
Iteration  14: 9.990 ns/op
Iteration  15: 10.106 ns/op
Iteration  16: 10.050 ns/op
Iteration  17: 10.008 ns/op
Iteration  18: 10.000 ns/op
Iteration  19: 10.006 ns/op
Iteration  20: 10.026 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.198 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.882 ns/op
# Warmup Iteration   4: 9.892 ns/op
# Warmup Iteration   5: 9.894 ns/op
Iteration   1: 9.915 ns/op
Iteration   2: 9.908 ns/op
Iteration   3: 9.897 ns/op
Iteration   4: 9.880 ns/op
Iteration   5: 9.874 ns/op
Iteration   6: 9.888 ns/op
Iteration   7: 9.891 ns/op
Iteration   8: 9.902 ns/op
Iteration   9: 9.893 ns/op
Iteration  10: 9.886 ns/op
Iteration  11: 9.889 ns/op
Iteration  12: 9.908 ns/op
Iteration  13: 9.895 ns/op
Iteration  14: 9.898 ns/op
Iteration  15: 9.902 ns/op
Iteration  16: 9.899 ns/op
Iteration  17: 9.894 ns/op
Iteration  18: 9.889 ns/op
Iteration  19: 9.893 ns/op
Iteration  20: 9.877 ns/op


Result "benchmark.StringContains.stringContains":
  9.950 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (9.867, 9.950, 10.106), stdev = 0.065
  CI (99.9%): [9.928, 9.972] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  sThttp.b  avgt  100  150.430 ± 0.374  ns/op
StringContains.stringContains     http  sThttp.b  avgt  100    9.950 ± 0.022  ns/op

Benchmark result is saved to http_8_0.25_4.csv
