# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpKWk)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 247.126 ns/op
# Warmup Iteration   2: 190.879 ns/op
# Warmup Iteration   3: 158.324 ns/op
# Warmup Iteration   4: 158.632 ns/op
# Warmup Iteration   5: 159.450 ns/op
Iteration   1: 160.449 ns/op
Iteration   2: 161.641 ns/op
Iteration   3: 157.181 ns/op
Iteration   4: 157.364 ns/op
Iteration   5: 157.334 ns/op
Iteration   6: 157.464 ns/op
Iteration   7: 157.926 ns/op
Iteration   8: 157.336 ns/op
Iteration   9: 158.079 ns/op
Iteration  10: 157.840 ns/op
Iteration  11: 159.054 ns/op
Iteration  12: 157.098 ns/op
Iteration  13: 156.800 ns/op
Iteration  14: 156.832 ns/op
Iteration  15: 156.786 ns/op
Iteration  16: 157.173 ns/op
Iteration  17: 157.052 ns/op
Iteration  18: 156.837 ns/op
Iteration  19: 157.181 ns/op
Iteration  20: 157.355 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 248.757 ns/op
# Warmup Iteration   2: 189.339 ns/op
# Warmup Iteration   3: 158.402 ns/op
# Warmup Iteration   4: 158.364 ns/op
# Warmup Iteration   5: 159.250 ns/op
Iteration   1: 160.190 ns/op
Iteration   2: 161.092 ns/op
Iteration   3: 157.575 ns/op
Iteration   4: 157.449 ns/op
Iteration   5: 157.460 ns/op
Iteration   6: 157.541 ns/op
Iteration   7: 157.577 ns/op
Iteration   8: 157.626 ns/op
Iteration   9: 157.547 ns/op
Iteration  10: 157.545 ns/op
Iteration  11: 157.583 ns/op
Iteration  12: 156.674 ns/op
Iteration  13: 156.531 ns/op
Iteration  14: 156.563 ns/op
Iteration  15: 156.562 ns/op
Iteration  16: 157.672 ns/op
Iteration  17: 156.636 ns/op
Iteration  18: 156.840 ns/op
Iteration  19: 156.694 ns/op
Iteration  20: 156.750 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 247.553 ns/op
# Warmup Iteration   2: 189.622 ns/op
# Warmup Iteration   3: 172.992 ns/op
# Warmup Iteration   4: 173.120 ns/op
# Warmup Iteration   5: 173.803 ns/op
Iteration   1: 174.637 ns/op
Iteration   2: 175.690 ns/op
Iteration   3: 171.666 ns/op
Iteration   4: 171.677 ns/op
Iteration   5: 171.562 ns/op
Iteration   6: 170.789 ns/op
Iteration   7: 171.607 ns/op
Iteration   8: 171.620 ns/op
Iteration   9: 171.561 ns/op
Iteration  10: 171.619 ns/op
Iteration  11: 171.814 ns/op
Iteration  12: 172.002 ns/op
Iteration  13: 172.427 ns/op
Iteration  14: 171.246 ns/op
Iteration  15: 171.228 ns/op
Iteration  16: 171.254 ns/op
Iteration  17: 170.792 ns/op
Iteration  18: 171.227 ns/op
Iteration  19: 171.224 ns/op
Iteration  20: 172.485 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 245.985 ns/op
# Warmup Iteration   2: 182.991 ns/op
# Warmup Iteration   3: 154.946 ns/op
# Warmup Iteration   4: 155.434 ns/op
# Warmup Iteration   5: 156.627 ns/op
Iteration   1: 157.835 ns/op
Iteration   2: 156.558 ns/op
Iteration   3: 154.786 ns/op
Iteration   4: 154.147 ns/op
Iteration   5: 154.122 ns/op
Iteration   6: 154.812 ns/op
Iteration   7: 154.115 ns/op
Iteration   8: 153.954 ns/op
Iteration   9: 154.253 ns/op
Iteration  10: 154.088 ns/op
Iteration  11: 153.841 ns/op
Iteration  12: 153.791 ns/op
Iteration  13: 153.888 ns/op
Iteration  14: 153.613 ns/op
Iteration  15: 154.995 ns/op
Iteration  16: 153.855 ns/op
Iteration  17: 153.808 ns/op
Iteration  18: 153.860 ns/op
Iteration  19: 153.788 ns/op
Iteration  20: 154.173 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 242.269 ns/op
# Warmup Iteration   2: 187.851 ns/op
# Warmup Iteration   3: 158.651 ns/op
# Warmup Iteration   4: 158.887 ns/op
# Warmup Iteration   5: 159.589 ns/op
Iteration   1: 160.437 ns/op
Iteration   2: 161.397 ns/op
Iteration   3: 157.779 ns/op
Iteration   4: 157.666 ns/op
Iteration   5: 157.637 ns/op
Iteration   6: 157.880 ns/op
Iteration   7: 157.731 ns/op
Iteration   8: 157.826 ns/op
Iteration   9: 158.214 ns/op
Iteration  10: 158.720 ns/op
Iteration  11: 158.740 ns/op
Iteration  12: 157.406 ns/op
Iteration  13: 157.426 ns/op
Iteration  14: 157.486 ns/op
Iteration  15: 157.516 ns/op
Iteration  16: 157.358 ns/op
Iteration  17: 157.419 ns/op
Iteration  18: 157.630 ns/op
Iteration  19: 157.584 ns/op
Iteration  20: 157.429 ns/op


Result "benchmark.StringContains.regexMatches":
  159.926 ±(99.9%) 2.125 ns/op [Average]
  (min, avg, max) = (153.613, 159.926, 175.690), stdev = 6.266
  CI (99.9%): [157.801, 162.051] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpKWk)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.192 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.900 ns/op
# Warmup Iteration   4: 9.882 ns/op
# Warmup Iteration   5: 9.896 ns/op
Iteration   1: 9.875 ns/op
Iteration   2: 9.857 ns/op
Iteration   3: 9.873 ns/op
Iteration   4: 9.889 ns/op
Iteration   5: 9.898 ns/op
Iteration   6: 9.892 ns/op
Iteration   7: 9.888 ns/op
Iteration   8: 9.874 ns/op
Iteration   9: 9.863 ns/op
Iteration  10: 9.882 ns/op
Iteration  11: 9.888 ns/op
Iteration  12: 9.888 ns/op
Iteration  13: 9.874 ns/op
Iteration  14: 9.889 ns/op
Iteration  15: 9.901 ns/op
Iteration  16: 9.897 ns/op
Iteration  17: 9.894 ns/op
Iteration  18: 9.896 ns/op
Iteration  19: 9.904 ns/op
Iteration  20: 9.885 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.046 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.884 ns/op
# Warmup Iteration   4: 9.908 ns/op
# Warmup Iteration   5: 9.917 ns/op
Iteration   1: 9.893 ns/op
Iteration   2: 9.894 ns/op
Iteration   3: 9.886 ns/op
Iteration   4: 9.901 ns/op
Iteration   5: 9.900 ns/op
Iteration   6: 9.887 ns/op
Iteration   7: 9.902 ns/op
Iteration   8: 9.908 ns/op
Iteration   9: 9.903 ns/op
Iteration  10: 9.882 ns/op
Iteration  11: 9.891 ns/op
Iteration  12: 9.899 ns/op
Iteration  13: 9.909 ns/op
Iteration  14: 9.898 ns/op
Iteration  15: 9.904 ns/op
Iteration  16: 9.915 ns/op
Iteration  17: 9.894 ns/op
Iteration  18: 9.905 ns/op
Iteration  19: 9.908 ns/op
Iteration  20: 9.909 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.112 ns/op
# Warmup Iteration   2: 10.474 ns/op
# Warmup Iteration   3: 9.888 ns/op
# Warmup Iteration   4: 9.913 ns/op
# Warmup Iteration   5: 9.896 ns/op
Iteration   1: 9.903 ns/op
Iteration   2: 9.912 ns/op
Iteration   3: 9.909 ns/op
Iteration   4: 9.894 ns/op
Iteration   5: 9.905 ns/op
Iteration   6: 9.893 ns/op
Iteration   7: 9.890 ns/op
Iteration   8: 9.905 ns/op
Iteration   9: 9.885 ns/op
Iteration  10: 9.872 ns/op
Iteration  11: 9.886 ns/op
Iteration  12: 9.898 ns/op
Iteration  13: 9.878 ns/op
Iteration  14: 9.912 ns/op
Iteration  15: 9.877 ns/op
Iteration  16: 9.896 ns/op
Iteration  17: 9.904 ns/op
Iteration  18: 9.900 ns/op
Iteration  19: 9.897 ns/op
Iteration  20: 9.895 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.531 ns/op
# Warmup Iteration   2: 10.457 ns/op
# Warmup Iteration   3: 9.916 ns/op
# Warmup Iteration   4: 9.905 ns/op
# Warmup Iteration   5: 9.916 ns/op
Iteration   1: 9.906 ns/op
Iteration   2: 9.905 ns/op
Iteration   3: 9.898 ns/op
Iteration   4: 9.901 ns/op
Iteration   5: 9.910 ns/op
Iteration   6: 9.905 ns/op
Iteration   7: 9.901 ns/op
Iteration   8: 9.917 ns/op
Iteration   9: 9.892 ns/op
Iteration  10: 9.902 ns/op
Iteration  11: 9.901 ns/op
Iteration  12: 9.913 ns/op
Iteration  13: 9.907 ns/op
Iteration  14: 9.923 ns/op
Iteration  15: 9.915 ns/op
Iteration  16: 9.906 ns/op
Iteration  17: 9.907 ns/op
Iteration  18: 9.923 ns/op
Iteration  19: 9.914 ns/op
Iteration  20: 9.902 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.181 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.898 ns/op
# Warmup Iteration   4: 9.886 ns/op
# Warmup Iteration   5: 9.893 ns/op
Iteration   1: 9.898 ns/op
Iteration   2: 9.887 ns/op
Iteration   3: 9.902 ns/op
Iteration   4: 9.900 ns/op
Iteration   5: 9.884 ns/op
Iteration   6: 9.892 ns/op
Iteration   7: 9.905 ns/op
Iteration   8: 9.892 ns/op
Iteration   9: 9.891 ns/op
Iteration  10: 9.904 ns/op
Iteration  11: 9.905 ns/op
Iteration  12: 9.899 ns/op
Iteration  13: 9.891 ns/op
Iteration  14: 9.893 ns/op
Iteration  15: 9.895 ns/op
Iteration  16: 9.898 ns/op
Iteration  17: 9.896 ns/op
Iteration  18: 9.889 ns/op
Iteration  19: 9.898 ns/op
Iteration  20: 9.884 ns/op


Result "benchmark.StringContains.stringContains":
  9.897 ±(99.9%) 0.004 ns/op [Average]
  (min, avg, max) = (9.857, 9.897, 9.923), stdev = 0.012
  CI (99.9%): [9.893, 9.901] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpKWk  avgt  100  159.926 ± 2.125  ns/op
StringContains.stringContains     http  httpKWk  avgt  100    9.897 ± 0.004  ns/op

Benchmark result is saved to http_8_0_11.csv
