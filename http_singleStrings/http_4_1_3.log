# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = )"M,)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 169.968 ns/op
# Warmup Iteration   2: 92.179 ns/op
# Warmup Iteration   3: 91.075 ns/op
# Warmup Iteration   4: 92.483 ns/op
# Warmup Iteration   5: 88.618 ns/op
Iteration   1: 88.195 ns/op
Iteration   2: 88.643 ns/op
Iteration   3: 88.683 ns/op
Iteration   4: 88.663 ns/op
Iteration   5: 88.102 ns/op
Iteration   6: 88.151 ns/op
Iteration   7: 88.152 ns/op
Iteration   8: 88.161 ns/op
Iteration   9: 88.353 ns/op
Iteration  10: 88.060 ns/op
Iteration  11: 88.346 ns/op
Iteration  12: 88.449 ns/op
Iteration  13: 88.444 ns/op
Iteration  14: 88.255 ns/op
Iteration  15: 88.387 ns/op
Iteration  16: 88.473 ns/op
Iteration  17: 88.577 ns/op
Iteration  18: 88.286 ns/op
Iteration  19: 88.684 ns/op
Iteration  20: 88.565 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 161.202 ns/op
# Warmup Iteration   2: 85.351 ns/op
# Warmup Iteration   3: 84.317 ns/op
# Warmup Iteration   4: 83.336 ns/op
# Warmup Iteration   5: 81.993 ns/op
Iteration   1: 81.798 ns/op
Iteration   2: 81.941 ns/op
Iteration   3: 81.847 ns/op
Iteration   4: 81.631 ns/op
Iteration   5: 81.541 ns/op
Iteration   6: 81.265 ns/op
Iteration   7: 81.952 ns/op
Iteration   8: 81.344 ns/op
Iteration   9: 81.312 ns/op
Iteration  10: 81.288 ns/op
Iteration  11: 83.407 ns/op
Iteration  12: 81.365 ns/op
Iteration  13: 81.910 ns/op
Iteration  14: 81.381 ns/op
Iteration  15: 81.263 ns/op
Iteration  16: 81.161 ns/op
Iteration  17: 81.773 ns/op
Iteration  18: 81.220 ns/op
Iteration  19: 81.336 ns/op
Iteration  20: 81.252 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 167.164 ns/op
# Warmup Iteration   2: 91.079 ns/op
# Warmup Iteration   3: 90.629 ns/op
# Warmup Iteration   4: 94.327 ns/op
# Warmup Iteration   5: 89.171 ns/op
Iteration   1: 89.647 ns/op
Iteration   2: 89.887 ns/op
Iteration   3: 89.656 ns/op
Iteration   4: 89.093 ns/op
Iteration   5: 88.464 ns/op
Iteration   6: 88.384 ns/op
Iteration   7: 88.658 ns/op
Iteration   8: 88.728 ns/op
Iteration   9: 88.223 ns/op
Iteration  10: 90.455 ns/op
Iteration  11: 89.037 ns/op
Iteration  12: 88.403 ns/op
Iteration  13: 88.132 ns/op
Iteration  14: 88.488 ns/op
Iteration  15: 88.499 ns/op
Iteration  16: 88.350 ns/op
Iteration  17: 88.337 ns/op
Iteration  18: 88.134 ns/op
Iteration  19: 88.466 ns/op
Iteration  20: 88.383 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 167.057 ns/op
# Warmup Iteration   2: 91.118 ns/op
# Warmup Iteration   3: 90.297 ns/op
# Warmup Iteration   4: 92.057 ns/op
# Warmup Iteration   5: 88.432 ns/op
Iteration   1: 88.385 ns/op
Iteration   2: 88.009 ns/op
Iteration   3: 88.279 ns/op
Iteration   4: 88.324 ns/op
Iteration   5: 87.936 ns/op
Iteration   6: 87.744 ns/op
Iteration   7: 87.924 ns/op
Iteration   8: 88.175 ns/op
Iteration   9: 89.027 ns/op
Iteration  10: 87.828 ns/op
Iteration  11: 88.232 ns/op
Iteration  12: 88.178 ns/op
Iteration  13: 88.174 ns/op
Iteration  14: 87.882 ns/op
Iteration  15: 88.098 ns/op
Iteration  16: 88.370 ns/op
Iteration  17: 88.482 ns/op
Iteration  18: 88.453 ns/op
Iteration  19: 87.966 ns/op
Iteration  20: 88.485 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 167.117 ns/op
# Warmup Iteration   2: 90.812 ns/op
# Warmup Iteration   3: 89.790 ns/op
# Warmup Iteration   4: 91.695 ns/op
# Warmup Iteration   5: 88.044 ns/op
Iteration   1: 88.596 ns/op
Iteration   2: 87.631 ns/op
Iteration   3: 87.971 ns/op
Iteration   4: 88.022 ns/op
Iteration   5: 87.682 ns/op
Iteration   6: 87.394 ns/op
Iteration   7: 87.622 ns/op
Iteration   8: 87.543 ns/op
Iteration   9: 87.700 ns/op
Iteration  10: 87.839 ns/op
Iteration  11: 87.464 ns/op
Iteration  12: 87.798 ns/op
Iteration  13: 88.020 ns/op
Iteration  14: 87.712 ns/op
Iteration  15: 87.420 ns/op
Iteration  16: 87.806 ns/op
Iteration  17: 87.790 ns/op
Iteration  18: 87.810 ns/op
Iteration  19: 88.327 ns/op
Iteration  20: 87.696 ns/op


Result "benchmark.StringContains.regexMatches":
  86.948 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (81.161, 86.948, 90.455), stdev = 2.738
  CI (99.9%): [86.020, 87.877] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = )"M,)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.445 ns/op
# Warmup Iteration   2: 9.066 ns/op
# Warmup Iteration   3: 8.970 ns/op
# Warmup Iteration   4: 8.971 ns/op
# Warmup Iteration   5: 8.976 ns/op
Iteration   1: 8.970 ns/op
Iteration   2: 8.973 ns/op
Iteration   3: 8.959 ns/op
Iteration   4: 8.972 ns/op
Iteration   5: 8.985 ns/op
Iteration   6: 8.973 ns/op
Iteration   7: 8.974 ns/op
Iteration   8: 8.972 ns/op
Iteration   9: 8.974 ns/op
Iteration  10: 8.974 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.970 ns/op
Iteration  13: 8.971 ns/op
Iteration  14: 8.970 ns/op
Iteration  15: 8.973 ns/op
Iteration  16: 8.969 ns/op
Iteration  17: 8.972 ns/op
Iteration  18: 8.969 ns/op
Iteration  19: 8.971 ns/op
Iteration  20: 8.971 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.432 ns/op
# Warmup Iteration   2: 9.072 ns/op
# Warmup Iteration   3: 8.968 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.969 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.971 ns/op
Iteration  11: 8.970 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.967 ns/op
Iteration  14: 8.968 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.970 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.440 ns/op
# Warmup Iteration   2: 9.051 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.963 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.968 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.967 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.429 ns/op
# Warmup Iteration   2: 9.071 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.968 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.969 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.461 ns/op
# Warmup Iteration   2: 9.070 ns/op
# Warmup Iteration   3: 8.970 ns/op
# Warmup Iteration   4: 8.969 ns/op
# Warmup Iteration   5: 8.971 ns/op
Iteration   1: 8.972 ns/op
Iteration   2: 8.973 ns/op
Iteration   3: 8.969 ns/op
Iteration   4: 8.970 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.971 ns/op
Iteration   7: 8.968 ns/op
Iteration   8: 8.975 ns/op
Iteration   9: 8.970 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.971 ns/op
Iteration  12: 8.969 ns/op
Iteration  13: 8.971 ns/op
Iteration  14: 8.972 ns/op
Iteration  15: 8.970 ns/op
Iteration  16: 8.972 ns/op
Iteration  17: 8.973 ns/op
Iteration  18: 8.971 ns/op
Iteration  19: 8.971 ns/op
Iteration  20: 8.972 ns/op


Result "benchmark.StringContains.stringContains":
  8.968 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (8.959, 8.968, 8.985), stdev = 0.003
  CI (99.9%): [8.967, 8.969] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   )"M,  avgt  100  86.948 ± 0.929  ns/op
StringContains.stringContains     http   )"M,  avgt  100   8.968 ± 0.001  ns/op

Benchmark result is saved to http_4_1_3.csv
