# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = 13G/t3bL)atq,V"LH'ZN`
B]$W|2ChhttpN-_Qv|wl)iU5lFxAbWmHL.)V4}|)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 517.908 ns/op
# Warmup Iteration   2: 537.075 ns/op
# Warmup Iteration   3: 534.309 ns/op
# Warmup Iteration   4: 474.505 ns/op
# Warmup Iteration   5: 456.446 ns/op
Iteration   1: 460.841 ns/op
Iteration   2: 455.966 ns/op
Iteration   3: 455.964 ns/op
Iteration   4: 461.699 ns/op
Iteration   5: 455.805 ns/op
Iteration   6: 457.794 ns/op
Iteration   7: 461.709 ns/op
Iteration   8: 455.829 ns/op
Iteration   9: 465.624 ns/op
Iteration  10: 456.802 ns/op
Iteration  11: 455.595 ns/op
Iteration  12: 469.300 ns/op
Iteration  13: 456.038 ns/op
Iteration  14: 456.175 ns/op
Iteration  15: 459.612 ns/op
Iteration  16: 455.786 ns/op
Iteration  17: 455.912 ns/op
Iteration  18: 458.467 ns/op
Iteration  19: 456.104 ns/op
Iteration  20: 456.828 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 513.327 ns/op
# Warmup Iteration   2: 528.587 ns/op
# Warmup Iteration   3: 530.072 ns/op
# Warmup Iteration   4: 469.017 ns/op
# Warmup Iteration   5: 454.622 ns/op
Iteration   1: 459.967 ns/op
Iteration   2: 455.439 ns/op
Iteration   3: 455.068 ns/op
Iteration   4: 461.374 ns/op
Iteration   5: 455.193 ns/op
Iteration   6: 458.771 ns/op
Iteration   7: 460.003 ns/op
Iteration   8: 455.454 ns/op
Iteration   9: 466.764 ns/op
Iteration  10: 459.001 ns/op
Iteration  11: 458.882 ns/op
Iteration  12: 469.018 ns/op
Iteration  13: 455.202 ns/op
Iteration  14: 455.278 ns/op
Iteration  15: 457.569 ns/op
Iteration  16: 455.496 ns/op
Iteration  17: 455.493 ns/op
Iteration  18: 458.040 ns/op
Iteration  19: 455.341 ns/op
Iteration  20: 455.321 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 508.613 ns/op
# Warmup Iteration   2: 509.471 ns/op
# Warmup Iteration   3: 554.897 ns/op
# Warmup Iteration   4: 494.689 ns/op
# Warmup Iteration   5: 479.811 ns/op
Iteration   1: 483.672 ns/op
Iteration   2: 480.040 ns/op
Iteration   3: 479.659 ns/op
Iteration   4: 486.131 ns/op
Iteration   5: 480.041 ns/op
Iteration   6: 479.730 ns/op
Iteration   7: 487.759 ns/op
Iteration   8: 481.197 ns/op
Iteration   9: 480.251 ns/op
Iteration  10: 491.720 ns/op
Iteration  11: 479.692 ns/op
Iteration  12: 482.062 ns/op
Iteration  13: 494.496 ns/op
Iteration  14: 479.598 ns/op
Iteration  15: 479.378 ns/op
Iteration  16: 482.212 ns/op
Iteration  17: 479.083 ns/op
Iteration  18: 479.769 ns/op
Iteration  19: 482.017 ns/op
Iteration  20: 479.914 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 519.294 ns/op
# Warmup Iteration   2: 529.251 ns/op
# Warmup Iteration   3: 533.193 ns/op
# Warmup Iteration   4: 471.526 ns/op
# Warmup Iteration   5: 457.032 ns/op
Iteration   1: 461.038 ns/op
Iteration   2: 455.642 ns/op
Iteration   3: 455.766 ns/op
Iteration   4: 461.502 ns/op
Iteration   5: 455.684 ns/op
Iteration   6: 458.851 ns/op
Iteration   7: 459.655 ns/op
Iteration   8: 455.754 ns/op
Iteration   9: 465.698 ns/op
Iteration  10: 455.803 ns/op
Iteration  11: 455.756 ns/op
Iteration  12: 468.695 ns/op
Iteration  13: 455.778 ns/op
Iteration  14: 456.123 ns/op
Iteration  15: 458.486 ns/op
Iteration  16: 456.230 ns/op
Iteration  17: 455.925 ns/op
Iteration  18: 458.186 ns/op
Iteration  19: 455.879 ns/op
Iteration  20: 455.963 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 516.877 ns/op
# Warmup Iteration   2: 528.686 ns/op
# Warmup Iteration   3: 529.513 ns/op
# Warmup Iteration   4: 471.628 ns/op
# Warmup Iteration   5: 455.191 ns/op
Iteration   1: 459.652 ns/op
Iteration   2: 455.737 ns/op
Iteration   3: 455.483 ns/op
Iteration   4: 463.554 ns/op
Iteration   5: 455.097 ns/op
Iteration   6: 458.968 ns/op
Iteration   7: 460.062 ns/op
Iteration   8: 455.506 ns/op
Iteration   9: 466.026 ns/op
Iteration  10: 455.764 ns/op
Iteration  11: 455.558 ns/op
Iteration  12: 469.714 ns/op
Iteration  13: 459.899 ns/op
Iteration  14: 460.101 ns/op
Iteration  15: 461.715 ns/op
Iteration  16: 456.046 ns/op
Iteration  17: 456.612 ns/op
Iteration  18: 459.236 ns/op
Iteration  19: 455.721 ns/op
Iteration  20: 455.729 ns/op


Result "benchmark.StringContains.regexMatches":
  463.175 ±(99.9%) 3.533 ns/op [Average]
  (min, avg, max) = (455.068, 463.175, 494.496), stdev = 10.416
  CI (99.9%): [459.643, 466.708] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = 13G/t3bL)atq,V"LH'ZN`
B]$W|2ChhttpN-_Qv|wl)iU5lFxAbWmHL.)V4}|)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 14.754 ns/op
# Warmup Iteration   2: 16.018 ns/op
# Warmup Iteration   3: 15.935 ns/op
# Warmup Iteration   4: 15.951 ns/op
# Warmup Iteration   5: 15.967 ns/op
Iteration   1: 15.949 ns/op
Iteration   2: 15.977 ns/op
Iteration   3: 15.962 ns/op
Iteration   4: 15.942 ns/op
Iteration   5: 15.953 ns/op
Iteration   6: 15.920 ns/op
Iteration   7: 15.933 ns/op
Iteration   8: 15.937 ns/op
Iteration   9: 15.930 ns/op
Iteration  10: 15.904 ns/op
Iteration  11: 15.965 ns/op
Iteration  12: 15.904 ns/op
Iteration  13: 15.924 ns/op
Iteration  14: 15.912 ns/op
Iteration  15: 15.923 ns/op
Iteration  16: 15.921 ns/op
Iteration  17: 15.958 ns/op
Iteration  18: 15.957 ns/op
Iteration  19: 15.938 ns/op
Iteration  20: 15.942 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 14.745 ns/op
# Warmup Iteration   2: 16.212 ns/op
# Warmup Iteration   3: 15.619 ns/op
# Warmup Iteration   4: 15.630 ns/op
# Warmup Iteration   5: 15.607 ns/op
Iteration   1: 15.595 ns/op
Iteration   2: 15.592 ns/op
Iteration   3: 15.591 ns/op
Iteration   4: 15.587 ns/op
Iteration   5: 15.609 ns/op
Iteration   6: 15.631 ns/op
Iteration   7: 15.604 ns/op
Iteration   8: 15.616 ns/op
Iteration   9: 15.598 ns/op
Iteration  10: 15.618 ns/op
Iteration  11: 15.605 ns/op
Iteration  12: 15.603 ns/op
Iteration  13: 15.605 ns/op
Iteration  14: 15.597 ns/op
Iteration  15: 15.617 ns/op
Iteration  16: 15.588 ns/op
Iteration  17: 15.610 ns/op
Iteration  18: 15.618 ns/op
Iteration  19: 15.604 ns/op
Iteration  20: 15.588 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 14.758 ns/op
# Warmup Iteration   2: 16.038 ns/op
# Warmup Iteration   3: 15.663 ns/op
# Warmup Iteration   4: 15.690 ns/op
# Warmup Iteration   5: 15.660 ns/op
Iteration   1: 15.666 ns/op
Iteration   2: 15.661 ns/op
Iteration   3: 15.647 ns/op
Iteration   4: 15.657 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.641 ns/op
Iteration   7: 15.647 ns/op
Iteration   8: 15.654 ns/op
Iteration   9: 15.666 ns/op
Iteration  10: 15.680 ns/op
Iteration  11: 15.670 ns/op
Iteration  12: 15.671 ns/op
Iteration  13: 15.677 ns/op
Iteration  14: 15.671 ns/op
Iteration  15: 15.691 ns/op
Iteration  16: 15.695 ns/op
Iteration  17: 15.681 ns/op
Iteration  18: 15.677 ns/op
Iteration  19: 15.692 ns/op
Iteration  20: 15.669 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 15.105 ns/op
# Warmup Iteration   2: 16.081 ns/op
# Warmup Iteration   3: 15.640 ns/op
# Warmup Iteration   4: 15.664 ns/op
# Warmup Iteration   5: 15.666 ns/op
Iteration   1: 15.659 ns/op
Iteration   2: 15.659 ns/op
Iteration   3: 15.676 ns/op
Iteration   4: 15.682 ns/op
Iteration   5: 15.672 ns/op
Iteration   6: 15.645 ns/op
Iteration   7: 15.660 ns/op
Iteration   8: 15.659 ns/op
Iteration   9: 15.664 ns/op
Iteration  10: 15.638 ns/op
Iteration  11: 15.657 ns/op
Iteration  12: 15.636 ns/op
Iteration  13: 15.657 ns/op
Iteration  14: 15.654 ns/op
Iteration  15: 15.651 ns/op
Iteration  16: 15.636 ns/op
Iteration  17: 15.658 ns/op
Iteration  18: 15.666 ns/op
Iteration  19: 15.660 ns/op
Iteration  20: 15.640 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 14.771 ns/op
# Warmup Iteration   2: 16.042 ns/op
# Warmup Iteration   3: 15.585 ns/op
# Warmup Iteration   4: 15.594 ns/op
# Warmup Iteration   5: 15.586 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.590 ns/op
Iteration   3: 15.596 ns/op
Iteration   4: 15.587 ns/op
Iteration   5: 15.585 ns/op
Iteration   6: 15.585 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 15.616 ns/op
Iteration   9: 15.607 ns/op
Iteration  10: 15.627 ns/op
Iteration  11: 15.599 ns/op
Iteration  12: 15.592 ns/op
Iteration  13: 15.591 ns/op
Iteration  14: 15.582 ns/op
Iteration  15: 15.590 ns/op
Iteration  16: 15.577 ns/op
Iteration  17: 15.605 ns/op
Iteration  18: 15.617 ns/op
Iteration  19: 15.608 ns/op
Iteration  20: 15.615 ns/op


Result "benchmark.StringContains.stringContains":
  15.693 ±(99.9%) 0.043 ns/op [Average]
  (min, avg, max) = (15.577, 15.693, 15.977), stdev = 0.127
  CI (99.9%): [15.650, 15.736] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  13G/t3bL)atq,V"LH'ZN`
B]$W|2ChhttpN-_Qv|wl)iU5lFxAbWmHL.)V4}|  avgt  100  463.175 ± 3.533  ns/op
StringContains.stringContains     http  13G/t3bL)atq,V"LH'ZN`
B]$W|2ChhttpN-_Qv|wl)iU5lFxAbWmHL.)V4}|  avgt  100   15.693 ± 0.043  ns/op

Benchmark result is saved to http_64_0.5_4.csv
