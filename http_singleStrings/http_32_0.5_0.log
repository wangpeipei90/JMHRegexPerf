# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Tfb!{ j4R]CK	8{chttph!i1?#0dbo6y)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 362.968 ns/op
# Warmup Iteration   2: 371.185 ns/op
# Warmup Iteration   3: 311.068 ns/op
# Warmup Iteration   4: 297.670 ns/op
# Warmup Iteration   5: 294.559 ns/op
Iteration   1: 298.557 ns/op
Iteration   2: 294.473 ns/op
Iteration   3: 299.854 ns/op
Iteration   4: 294.687 ns/op
Iteration   5: 301.489 ns/op
Iteration   6: 297.146 ns/op
Iteration   7: 300.676 ns/op
Iteration   8: 296.432 ns/op
Iteration   9: 294.296 ns/op
Iteration  10: 295.707 ns/op
Iteration  11: 294.386 ns/op
Iteration  12: 296.141 ns/op
Iteration  13: 294.320 ns/op
Iteration  14: 295.839 ns/op
Iteration  15: 294.305 ns/op
Iteration  16: 295.553 ns/op
Iteration  17: 294.354 ns/op
Iteration  18: 295.735 ns/op
Iteration  19: 294.293 ns/op
Iteration  20: 296.473 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 353.441 ns/op
# Warmup Iteration   2: 362.706 ns/op
# Warmup Iteration   3: 289.264 ns/op
# Warmup Iteration   4: 281.959 ns/op
# Warmup Iteration   5: 279.555 ns/op
Iteration   1: 282.906 ns/op
Iteration   2: 283.892 ns/op
Iteration   3: 279.442 ns/op
Iteration   4: 287.614 ns/op
Iteration   5: 281.488 ns/op
Iteration   6: 287.816 ns/op
Iteration   7: 279.503 ns/op
Iteration   8: 282.482 ns/op
Iteration   9: 279.708 ns/op
Iteration  10: 281.632 ns/op
Iteration  11: 280.375 ns/op
Iteration  12: 279.692 ns/op
Iteration  13: 281.411 ns/op
Iteration  14: 279.452 ns/op
Iteration  15: 280.452 ns/op
Iteration  16: 279.513 ns/op
Iteration  17: 281.067 ns/op
Iteration  18: 279.767 ns/op
Iteration  19: 281.388 ns/op
Iteration  20: 282.306 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 283.564 ns/op
# Warmup Iteration   2: 242.273 ns/op
# Warmup Iteration   3: 191.965 ns/op
# Warmup Iteration   4: 192.514 ns/op
# Warmup Iteration   5: 193.564 ns/op
Iteration   1: 190.303 ns/op
Iteration   2: 194.389 ns/op
Iteration   3: 195.603 ns/op
Iteration   4: 191.174 ns/op
Iteration   5: 191.084 ns/op
Iteration   6: 190.136 ns/op
Iteration   7: 191.176 ns/op
Iteration   8: 191.182 ns/op
Iteration   9: 190.946 ns/op
Iteration  10: 191.069 ns/op
Iteration  11: 191.228 ns/op
Iteration  12: 190.356 ns/op
Iteration  13: 191.427 ns/op
Iteration  14: 191.303 ns/op
Iteration  15: 190.902 ns/op
Iteration  16: 190.795 ns/op
Iteration  17: 190.491 ns/op
Iteration  18: 190.950 ns/op
Iteration  19: 191.051 ns/op
Iteration  20: 190.975 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 358.375 ns/op
# Warmup Iteration   2: 361.442 ns/op
# Warmup Iteration   3: 302.678 ns/op
# Warmup Iteration   4: 292.732 ns/op
# Warmup Iteration   5: 289.840 ns/op
Iteration   1: 293.919 ns/op
Iteration   2: 290.327 ns/op
Iteration   3: 294.994 ns/op
Iteration   4: 296.310 ns/op
Iteration   5: 289.783 ns/op
Iteration   6: 298.451 ns/op
Iteration   7: 289.673 ns/op
Iteration   8: 291.589 ns/op
Iteration   9: 289.964 ns/op
Iteration  10: 291.345 ns/op
Iteration  11: 289.553 ns/op
Iteration  12: 291.436 ns/op
Iteration  13: 290.755 ns/op
Iteration  14: 293.566 ns/op
Iteration  15: 289.980 ns/op
Iteration  16: 292.136 ns/op
Iteration  17: 290.230 ns/op
Iteration  18: 291.919 ns/op
Iteration  19: 291.219 ns/op
Iteration  20: 289.850 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 359.259 ns/op
# Warmup Iteration   2: 368.239 ns/op
# Warmup Iteration   3: 310.236 ns/op
# Warmup Iteration   4: 298.312 ns/op
# Warmup Iteration   5: 295.646 ns/op
Iteration   1: 299.412 ns/op
Iteration   2: 295.587 ns/op
Iteration   3: 300.743 ns/op
Iteration   4: 295.518 ns/op
Iteration   5: 302.121 ns/op
Iteration   6: 298.820 ns/op
Iteration   7: 300.532 ns/op
Iteration   8: 296.600 ns/op
Iteration   9: 295.119 ns/op
Iteration  10: 296.663 ns/op
Iteration  11: 295.125 ns/op
Iteration  12: 296.736 ns/op
Iteration  13: 295.075 ns/op
Iteration  14: 296.689 ns/op
Iteration  15: 295.427 ns/op
Iteration  16: 297.241 ns/op
Iteration  17: 295.485 ns/op
Iteration  18: 299.680 ns/op
Iteration  19: 295.349 ns/op
Iteration  20: 297.639 ns/op


Result "benchmark.StringContains.regexMatches":
  271.657 ±(99.9%) 13.839 ns/op [Average]
  (min, avg, max) = (190.136, 271.657, 302.121), stdev = 40.806
  CI (99.9%): [257.818, 285.497] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Tfb!{ j4R]CK	8{chttph!i1?#0dbo6y)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.319 ns/op
# Warmup Iteration   2: 12.701 ns/op
# Warmup Iteration   3: 12.115 ns/op
# Warmup Iteration   4: 12.140 ns/op
# Warmup Iteration   5: 12.114 ns/op
Iteration   1: 12.119 ns/op
Iteration   2: 12.103 ns/op
Iteration   3: 12.115 ns/op
Iteration   4: 12.122 ns/op
Iteration   5: 12.132 ns/op
Iteration   6: 12.144 ns/op
Iteration   7: 12.127 ns/op
Iteration   8: 12.140 ns/op
Iteration   9: 12.138 ns/op
Iteration  10: 12.136 ns/op
Iteration  11: 12.132 ns/op
Iteration  12: 12.842 ns/op
Iteration  13: 12.842 ns/op
Iteration  14: 12.843 ns/op
Iteration  15: 12.842 ns/op
Iteration  16: 12.841 ns/op
Iteration  17: 12.842 ns/op
Iteration  18: 12.842 ns/op
Iteration  19: 12.843 ns/op
Iteration  20: 12.844 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.330 ns/op
# Warmup Iteration   2: 12.532 ns/op
# Warmup Iteration   3: 12.127 ns/op
# Warmup Iteration   4: 12.087 ns/op
# Warmup Iteration   5: 12.098 ns/op
Iteration   1: 12.116 ns/op
Iteration   2: 12.130 ns/op
Iteration   3: 12.119 ns/op
Iteration   4: 12.109 ns/op
Iteration   5: 12.124 ns/op
Iteration   6: 12.128 ns/op
Iteration   7: 12.123 ns/op
Iteration   8: 12.120 ns/op
Iteration   9: 12.106 ns/op
Iteration  10: 12.128 ns/op
Iteration  11: 12.124 ns/op
Iteration  12: 12.871 ns/op
Iteration  13: 12.869 ns/op
Iteration  14: 12.870 ns/op
Iteration  15: 12.868 ns/op
Iteration  16: 12.869 ns/op
Iteration  17: 12.869 ns/op
Iteration  18: 12.869 ns/op
Iteration  19: 12.872 ns/op
Iteration  20: 12.870 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 12.003 ns/op
# Warmup Iteration   2: 12.527 ns/op
# Warmup Iteration   3: 12.290 ns/op
# Warmup Iteration   4: 12.301 ns/op
# Warmup Iteration   5: 12.277 ns/op
Iteration   1: 12.250 ns/op
Iteration   2: 12.290 ns/op
Iteration   3: 12.282 ns/op
Iteration   4: 12.252 ns/op
Iteration   5: 12.279 ns/op
Iteration   6: 12.281 ns/op
Iteration   7: 12.281 ns/op
Iteration   8: 12.299 ns/op
Iteration   9: 12.288 ns/op
Iteration  10: 12.268 ns/op
Iteration  11: 12.291 ns/op
Iteration  12: 12.307 ns/op
Iteration  13: 12.299 ns/op
Iteration  14: 12.304 ns/op
Iteration  15: 12.271 ns/op
Iteration  16: 12.295 ns/op
Iteration  17: 12.282 ns/op
Iteration  18: 12.266 ns/op
Iteration  19: 12.298 ns/op
Iteration  20: 12.286 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.327 ns/op
# Warmup Iteration   2: 12.455 ns/op
# Warmup Iteration   3: 12.144 ns/op
# Warmup Iteration   4: 12.118 ns/op
# Warmup Iteration   5: 12.120 ns/op
Iteration   1: 12.137 ns/op
Iteration   2: 12.137 ns/op
Iteration   3: 12.149 ns/op
Iteration   4: 12.132 ns/op
Iteration   5: 12.129 ns/op
Iteration   6: 12.108 ns/op
Iteration   7: 12.131 ns/op
Iteration   8: 12.133 ns/op
Iteration   9: 12.136 ns/op
Iteration  10: 12.162 ns/op
Iteration  11: 12.117 ns/op
Iteration  12: 12.841 ns/op
Iteration  13: 12.841 ns/op
Iteration  14: 12.841 ns/op
Iteration  15: 12.842 ns/op
Iteration  16: 12.841 ns/op
Iteration  17: 12.840 ns/op
Iteration  18: 12.841 ns/op
Iteration  19: 12.842 ns/op
Iteration  20: 12.842 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.297 ns/op
# Warmup Iteration   2: 12.576 ns/op
# Warmup Iteration   3: 12.138 ns/op
# Warmup Iteration   4: 12.145 ns/op
# Warmup Iteration   5: 12.142 ns/op
Iteration   1: 12.149 ns/op
Iteration   2: 12.140 ns/op
Iteration   3: 12.145 ns/op
Iteration   4: 12.127 ns/op
Iteration   5: 12.133 ns/op
Iteration   6: 12.118 ns/op
Iteration   7: 12.139 ns/op
Iteration   8: 12.145 ns/op
Iteration   9: 12.118 ns/op
Iteration  10: 12.133 ns/op
Iteration  11: 12.147 ns/op
Iteration  12: 12.129 ns/op
Iteration  13: 12.142 ns/op
Iteration  14: 12.143 ns/op
Iteration  15: 12.130 ns/op
Iteration  16: 12.134 ns/op
Iteration  17: 12.140 ns/op
Iteration  18: 12.138 ns/op
Iteration  19: 12.119 ns/op
Iteration  20: 12.134 ns/op


Result "benchmark.StringContains.stringContains":
  12.356 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (12.103, 12.356, 12.872), stdev = 0.309
  CI (99.9%): [12.251, 12.460] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  Tfb!{ j4R]CK	8{chttph!i1?#0dbo6y  avgt  100  271.657 ± 13.839  ns/op
StringContains.stringContains     http  Tfb!{ j4R]CK	8{chttph!i1?#0dbo6y  avgt  100   12.356 ±  0.105  ns/op

Benchmark result is saved to http_32_0.5_0.csv
