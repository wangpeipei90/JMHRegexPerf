# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpU,e-s#6.rE_BuEuJ~kX.bAolG-ZP~NwIc(Pb
-^H~/"[|dx]l3$GaA~8)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 815.054 ns/op
# Warmup Iteration   2: 843.775 ns/op
# Warmup Iteration   3: 845.343 ns/op
# Warmup Iteration   4: 844.887 ns/op
# Warmup Iteration   5: 844.341 ns/op
Iteration   1: 774.192 ns/op
Iteration   2: 765.102 ns/op
Iteration   3: 765.043 ns/op
Iteration   4: 765.029 ns/op
Iteration   5: 772.032 ns/op
Iteration   6: 764.958 ns/op
Iteration   7: 764.984 ns/op
Iteration   8: 764.801 ns/op
Iteration   9: 773.947 ns/op
Iteration  10: 764.559 ns/op
Iteration  11: 764.888 ns/op
Iteration  12: 764.938 ns/op
Iteration  13: 764.630 ns/op
Iteration  14: 777.647 ns/op
Iteration  15: 764.515 ns/op
Iteration  16: 764.536 ns/op
Iteration  17: 763.955 ns/op
Iteration  18: 781.919 ns/op
Iteration  19: 764.153 ns/op
Iteration  20: 764.914 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 800.049 ns/op
# Warmup Iteration   2: 834.852 ns/op
# Warmup Iteration   3: 837.067 ns/op
# Warmup Iteration   4: 837.210 ns/op
# Warmup Iteration   5: 842.113 ns/op
Iteration   1: 761.739 ns/op
Iteration   2: 761.608 ns/op
Iteration   3: 761.871 ns/op
Iteration   4: 761.451 ns/op
Iteration   5: 768.085 ns/op
Iteration   6: 761.536 ns/op
Iteration   7: 761.320 ns/op
Iteration   8: 762.608 ns/op
Iteration   9: 771.262 ns/op
Iteration  10: 761.611 ns/op
Iteration  11: 762.074 ns/op
Iteration  12: 761.779 ns/op
Iteration  13: 767.178 ns/op
Iteration  14: 769.221 ns/op
Iteration  15: 762.227 ns/op
Iteration  16: 762.405 ns/op
Iteration  17: 761.750 ns/op
Iteration  18: 778.708 ns/op
Iteration  19: 762.659 ns/op
Iteration  20: 763.614 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 733.287 ns/op
# Warmup Iteration   2: 697.649 ns/op
# Warmup Iteration   3: 693.695 ns/op
# Warmup Iteration   4: 693.980 ns/op
# Warmup Iteration   5: 638.076 ns/op
Iteration   1: 617.435 ns/op
Iteration   2: 615.970 ns/op
Iteration   3: 621.690 ns/op
Iteration   4: 615.849 ns/op
Iteration   5: 616.000 ns/op
Iteration   6: 615.897 ns/op
Iteration   7: 623.911 ns/op
Iteration   8: 615.922 ns/op
Iteration   9: 615.944 ns/op
Iteration  10: 626.677 ns/op
Iteration  11: 615.849 ns/op
Iteration  12: 615.726 ns/op
Iteration  13: 615.665 ns/op
Iteration  14: 629.652 ns/op
Iteration  15: 615.882 ns/op
Iteration  16: 615.720 ns/op
Iteration  17: 615.776 ns/op
Iteration  18: 634.417 ns/op
Iteration  19: 615.587 ns/op
Iteration  20: 615.905 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 813.184 ns/op
# Warmup Iteration   2: 835.981 ns/op
# Warmup Iteration   3: 840.124 ns/op
# Warmup Iteration   4: 839.965 ns/op
# Warmup Iteration   5: 839.600 ns/op
Iteration   1: 769.849 ns/op
Iteration   2: 763.629 ns/op
Iteration   3: 763.941 ns/op
Iteration   4: 763.999 ns/op
Iteration   5: 772.788 ns/op
Iteration   6: 766.901 ns/op
Iteration   7: 768.035 ns/op
Iteration   8: 767.292 ns/op
Iteration   9: 775.932 ns/op
Iteration  10: 764.116 ns/op
Iteration  11: 763.952 ns/op
Iteration  12: 764.613 ns/op
Iteration  13: 764.608 ns/op
Iteration  14: 777.906 ns/op
Iteration  15: 765.441 ns/op
Iteration  16: 765.564 ns/op
Iteration  17: 765.628 ns/op
Iteration  18: 782.059 ns/op
Iteration  19: 763.840 ns/op
Iteration  20: 763.920 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 811.027 ns/op
# Warmup Iteration   2: 834.301 ns/op
# Warmup Iteration   3: 838.568 ns/op
# Warmup Iteration   4: 838.717 ns/op
# Warmup Iteration   5: 839.463 ns/op
Iteration   1: 776.470 ns/op
Iteration   2: 768.852 ns/op
Iteration   3: 769.171 ns/op
Iteration   4: 768.619 ns/op
Iteration   5: 773.377 ns/op
Iteration   6: 764.614 ns/op
Iteration   7: 765.421 ns/op
Iteration   8: 766.050 ns/op
Iteration   9: 774.439 ns/op
Iteration  10: 764.448 ns/op
Iteration  11: 764.020 ns/op
Iteration  12: 764.800 ns/op
Iteration  13: 763.512 ns/op
Iteration  14: 776.068 ns/op
Iteration  15: 763.634 ns/op
Iteration  16: 763.448 ns/op
Iteration  17: 763.527 ns/op
Iteration  18: 780.122 ns/op
Iteration  19: 763.290 ns/op
Iteration  20: 763.744 ns/op


Result "benchmark.StringContains.regexMatches":
  737.226 ±(99.9%) 20.267 ns/op [Average]
  (min, avg, max) = (615.587, 737.226, 782.059), stdev = 59.759
  CI (99.9%): [716.958, 757.493] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpU,e-s#6.rE_BuEuJ~kX.bAolG-ZP~NwIc(Pb
-^H~/"[|dx]l3$GaA~8)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.499 ns/op
# Warmup Iteration   2: 9.716 ns/op
# Warmup Iteration   3: 9.838 ns/op
# Warmup Iteration   4: 9.838 ns/op
# Warmup Iteration   5: 9.839 ns/op
Iteration   1: 9.843 ns/op
Iteration   2: 9.844 ns/op
Iteration   3: 9.833 ns/op
Iteration   4: 9.842 ns/op
Iteration   5: 9.843 ns/op
Iteration   6: 9.832 ns/op
Iteration   7: 9.823 ns/op
Iteration   8: 9.832 ns/op
Iteration   9: 9.829 ns/op
Iteration  10: 9.847 ns/op
Iteration  11: 9.819 ns/op
Iteration  12: 10.550 ns/op
Iteration  13: 10.550 ns/op
Iteration  14: 10.550 ns/op
Iteration  15: 10.550 ns/op
Iteration  16: 10.550 ns/op
Iteration  17: 10.550 ns/op
Iteration  18: 10.549 ns/op
Iteration  19: 10.551 ns/op
Iteration  20: 10.551 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.486 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.868 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.862 ns/op
Iteration   1: 9.855 ns/op
Iteration   2: 9.870 ns/op
Iteration   3: 9.869 ns/op
Iteration   4: 9.865 ns/op
Iteration   5: 9.863 ns/op
Iteration   6: 9.869 ns/op
Iteration   7: 9.874 ns/op
Iteration   8: 9.871 ns/op
Iteration   9: 9.859 ns/op
Iteration  10: 9.861 ns/op
Iteration  11: 9.857 ns/op
Iteration  12: 10.551 ns/op
Iteration  13: 10.550 ns/op
Iteration  14: 10.550 ns/op
Iteration  15: 10.550 ns/op
Iteration  16: 10.550 ns/op
Iteration  17: 10.556 ns/op
Iteration  18: 10.549 ns/op
Iteration  19: 10.550 ns/op
Iteration  20: 10.550 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.466 ns/op
# Warmup Iteration   2: 9.715 ns/op
# Warmup Iteration   3: 9.867 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.865 ns/op
Iteration   1: 9.869 ns/op
Iteration   2: 9.873 ns/op
Iteration   3: 9.855 ns/op
Iteration   4: 9.865 ns/op
Iteration   5: 9.866 ns/op
Iteration   6: 9.862 ns/op
Iteration   7: 9.858 ns/op
Iteration   8: 9.887 ns/op
Iteration   9: 9.882 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.887 ns/op
Iteration  12: 9.861 ns/op
Iteration  13: 9.871 ns/op
Iteration  14: 9.863 ns/op
Iteration  15: 9.872 ns/op
Iteration  16: 9.865 ns/op
Iteration  17: 9.840 ns/op
Iteration  18: 9.867 ns/op
Iteration  19: 9.867 ns/op
Iteration  20: 9.878 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.487 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.831 ns/op
# Warmup Iteration   4: 9.828 ns/op
# Warmup Iteration   5: 9.826 ns/op
Iteration   1: 9.839 ns/op
Iteration   2: 9.835 ns/op
Iteration   3: 9.829 ns/op
Iteration   4: 9.843 ns/op
Iteration   5: 9.837 ns/op
Iteration   6: 9.827 ns/op
Iteration   7: 9.851 ns/op
Iteration   8: 9.844 ns/op
Iteration   9: 9.850 ns/op
Iteration  10: 9.845 ns/op
Iteration  11: 9.834 ns/op
Iteration  12: 10.551 ns/op
Iteration  13: 10.552 ns/op
Iteration  14: 10.552 ns/op
Iteration  15: 10.555 ns/op
Iteration  16: 10.552 ns/op
Iteration  17: 10.558 ns/op
Iteration  18: 10.551 ns/op
Iteration  19: 10.552 ns/op
Iteration  20: 10.552 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.482 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.875 ns/op
# Warmup Iteration   4: 9.882 ns/op
# Warmup Iteration   5: 9.881 ns/op
Iteration   1: 9.876 ns/op
Iteration   2: 9.867 ns/op
Iteration   3: 9.889 ns/op
Iteration   4: 9.879 ns/op
Iteration   5: 9.894 ns/op
Iteration   6: 9.859 ns/op
Iteration   7: 9.909 ns/op
Iteration   8: 9.894 ns/op
Iteration   9: 9.875 ns/op
Iteration  10: 9.878 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 10.553 ns/op
Iteration  13: 10.552 ns/op
Iteration  14: 10.553 ns/op
Iteration  15: 10.553 ns/op
Iteration  16: 10.553 ns/op
Iteration  17: 10.554 ns/op
Iteration  18: 10.554 ns/op
Iteration  19: 10.552 ns/op
Iteration  20: 10.553 ns/op


Result "benchmark.StringContains.stringContains":
  10.108 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (9.819, 10.108, 10.558), stdev = 0.335
  CI (99.9%): [9.995, 10.222] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  httpU,e-s#6.rE_BuEuJ~kX.bAolG-ZP~NwIc(Pb
-^H~/"[|dx]l3$GaA~8  avgt  100  737.226 ± 20.267  ns/op
StringContains.stringContains     http  httpU,e-s#6.rE_BuEuJ~kX.bAolG-ZP~NwIc(Pb
-^H~/"[|dx]l3$GaA~8  avgt  100   10.108 ±  0.113  ns/op

Benchmark result is saved to http_64_0_11.csv
