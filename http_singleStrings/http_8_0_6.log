# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpKr3;)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 264.811 ns/op
# Warmup Iteration   2: 203.863 ns/op
# Warmup Iteration   3: 180.170 ns/op
# Warmup Iteration   4: 180.676 ns/op
# Warmup Iteration   5: 181.372 ns/op
Iteration   1: 182.404 ns/op
Iteration   2: 184.724 ns/op
Iteration   3: 178.494 ns/op
Iteration   4: 179.344 ns/op
Iteration   5: 179.235 ns/op
Iteration   6: 179.115 ns/op
Iteration   7: 179.553 ns/op
Iteration   8: 179.231 ns/op
Iteration   9: 179.312 ns/op
Iteration  10: 179.227 ns/op
Iteration  11: 178.370 ns/op
Iteration  12: 179.151 ns/op
Iteration  13: 179.236 ns/op
Iteration  14: 179.442 ns/op
Iteration  15: 178.697 ns/op
Iteration  16: 178.829 ns/op
Iteration  17: 178.794 ns/op
Iteration  18: 178.849 ns/op
Iteration  19: 178.385 ns/op
Iteration  20: 178.853 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 252.292 ns/op
# Warmup Iteration   2: 192.103 ns/op
# Warmup Iteration   3: 174.063 ns/op
# Warmup Iteration   4: 174.877 ns/op
# Warmup Iteration   5: 175.524 ns/op
Iteration   1: 176.333 ns/op
Iteration   2: 177.579 ns/op
Iteration   3: 173.578 ns/op
Iteration   4: 173.492 ns/op
Iteration   5: 173.391 ns/op
Iteration   6: 172.566 ns/op
Iteration   7: 173.466 ns/op
Iteration   8: 173.811 ns/op
Iteration   9: 174.583 ns/op
Iteration  10: 173.897 ns/op
Iteration  11: 173.543 ns/op
Iteration  12: 173.792 ns/op
Iteration  13: 173.388 ns/op
Iteration  14: 173.628 ns/op
Iteration  15: 173.745 ns/op
Iteration  16: 173.162 ns/op
Iteration  17: 172.970 ns/op
Iteration  18: 172.936 ns/op
Iteration  19: 173.589 ns/op
Iteration  20: 173.075 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 224.067 ns/op
# Warmup Iteration   2: 159.728 ns/op
# Warmup Iteration   3: 139.159 ns/op
# Warmup Iteration   4: 138.446 ns/op
# Warmup Iteration   5: 139.178 ns/op
Iteration   1: 139.943 ns/op
Iteration   2: 136.700 ns/op
Iteration   3: 136.486 ns/op
Iteration   4: 137.282 ns/op
Iteration   5: 136.592 ns/op
Iteration   6: 136.685 ns/op
Iteration   7: 136.606 ns/op
Iteration   8: 136.671 ns/op
Iteration   9: 136.655 ns/op
Iteration  10: 136.276 ns/op
Iteration  11: 136.240 ns/op
Iteration  12: 136.471 ns/op
Iteration  13: 136.206 ns/op
Iteration  14: 136.261 ns/op
Iteration  15: 136.286 ns/op
Iteration  16: 136.321 ns/op
Iteration  17: 136.266 ns/op
Iteration  18: 136.439 ns/op
Iteration  19: 136.847 ns/op
Iteration  20: 136.279 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 247.799 ns/op
# Warmup Iteration   2: 194.405 ns/op
# Warmup Iteration   3: 163.438 ns/op
# Warmup Iteration   4: 163.724 ns/op
# Warmup Iteration   5: 164.465 ns/op
Iteration   1: 165.382 ns/op
Iteration   2: 166.365 ns/op
Iteration   3: 162.658 ns/op
Iteration   4: 162.571 ns/op
Iteration   5: 162.480 ns/op
Iteration   6: 162.416 ns/op
Iteration   7: 162.671 ns/op
Iteration   8: 162.855 ns/op
Iteration   9: 162.592 ns/op
Iteration  10: 162.552 ns/op
Iteration  11: 163.421 ns/op
Iteration  12: 162.204 ns/op
Iteration  13: 162.211 ns/op
Iteration  14: 162.067 ns/op
Iteration  15: 161.951 ns/op
Iteration  16: 161.988 ns/op
Iteration  17: 161.618 ns/op
Iteration  18: 162.065 ns/op
Iteration  19: 161.992 ns/op
Iteration  20: 162.157 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 249.821 ns/op
# Warmup Iteration   2: 191.213 ns/op
# Warmup Iteration   3: 173.828 ns/op
# Warmup Iteration   4: 174.488 ns/op
# Warmup Iteration   5: 174.767 ns/op
Iteration   1: 175.779 ns/op
Iteration   2: 176.857 ns/op
Iteration   3: 172.564 ns/op
Iteration   4: 172.797 ns/op
Iteration   5: 172.722 ns/op
Iteration   6: 171.814 ns/op
Iteration   7: 172.708 ns/op
Iteration   8: 172.746 ns/op
Iteration   9: 173.971 ns/op
Iteration  10: 172.978 ns/op
Iteration  11: 172.720 ns/op
Iteration  12: 172.725 ns/op
Iteration  13: 173.773 ns/op
Iteration  14: 172.226 ns/op
Iteration  15: 172.162 ns/op
Iteration  16: 171.896 ns/op
Iteration  17: 172.465 ns/op
Iteration  18: 172.352 ns/op
Iteration  19: 172.398 ns/op
Iteration  20: 172.769 ns/op


Result "benchmark.StringContains.regexMatches":
  165.139 ±(99.9%) 5.204 ns/op [Average]
  (min, avg, max) = (136.206, 165.139, 184.724), stdev = 15.345
  CI (99.9%): [159.935, 170.344] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpKr3;)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.094 ns/op
# Warmup Iteration   2: 10.452 ns/op
# Warmup Iteration   3: 10.046 ns/op
# Warmup Iteration   4: 10.061 ns/op
# Warmup Iteration   5: 10.065 ns/op
Iteration   1: 10.030 ns/op
Iteration   2: 10.027 ns/op
Iteration   3: 10.039 ns/op
Iteration   4: 10.032 ns/op
Iteration   5: 10.043 ns/op
Iteration   6: 10.047 ns/op
Iteration   7: 10.055 ns/op
Iteration   8: 10.073 ns/op
Iteration   9: 10.043 ns/op
Iteration  10: 10.043 ns/op
Iteration  11: 10.041 ns/op
Iteration  12: 10.058 ns/op
Iteration  13: 10.062 ns/op
Iteration  14: 10.039 ns/op
Iteration  15: 10.051 ns/op
Iteration  16: 10.076 ns/op
Iteration  17: 10.030 ns/op
Iteration  18: 10.049 ns/op
Iteration  19: 10.061 ns/op
Iteration  20: 10.053 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.046 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 10.026 ns/op
# Warmup Iteration   4: 10.033 ns/op
# Warmup Iteration   5: 10.032 ns/op
Iteration   1: 10.031 ns/op
Iteration   2: 10.030 ns/op
Iteration   3: 10.028 ns/op
Iteration   4: 10.033 ns/op
Iteration   5: 10.035 ns/op
Iteration   6: 10.037 ns/op
Iteration   7: 10.024 ns/op
Iteration   8: 10.037 ns/op
Iteration   9: 10.042 ns/op
Iteration  10: 10.039 ns/op
Iteration  11: 10.030 ns/op
Iteration  12: 10.036 ns/op
Iteration  13: 10.036 ns/op
Iteration  14: 10.030 ns/op
Iteration  15: 10.030 ns/op
Iteration  16: 10.030 ns/op
Iteration  17: 10.026 ns/op
Iteration  18: 10.029 ns/op
Iteration  19: 10.035 ns/op
Iteration  20: 10.033 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.064 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.880 ns/op
# Warmup Iteration   4: 9.871 ns/op
# Warmup Iteration   5: 9.890 ns/op
Iteration   1: 9.877 ns/op
Iteration   2: 9.892 ns/op
Iteration   3: 9.882 ns/op
Iteration   4: 9.875 ns/op
Iteration   5: 9.879 ns/op
Iteration   6: 9.896 ns/op
Iteration   7: 9.884 ns/op
Iteration   8: 9.893 ns/op
Iteration   9: 9.894 ns/op
Iteration  10: 9.889 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.909 ns/op
Iteration  13: 9.888 ns/op
Iteration  14: 9.898 ns/op
Iteration  15: 9.875 ns/op
Iteration  16: 9.901 ns/op
Iteration  17: 9.911 ns/op
Iteration  18: 9.886 ns/op
Iteration  19: 9.895 ns/op
Iteration  20: 9.888 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.103 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.913 ns/op
# Warmup Iteration   4: 9.937 ns/op
# Warmup Iteration   5: 9.922 ns/op
Iteration   1: 9.931 ns/op
Iteration   2: 9.922 ns/op
Iteration   3: 9.914 ns/op
Iteration   4: 9.929 ns/op
Iteration   5: 9.924 ns/op
Iteration   6: 9.913 ns/op
Iteration   7: 9.915 ns/op
Iteration   8: 9.920 ns/op
Iteration   9: 9.924 ns/op
Iteration  10: 9.906 ns/op
Iteration  11: 9.924 ns/op
Iteration  12: 9.934 ns/op
Iteration  13: 9.898 ns/op
Iteration  14: 9.923 ns/op
Iteration  15: 9.939 ns/op
Iteration  16: 9.930 ns/op
Iteration  17: 9.923 ns/op
Iteration  18: 9.935 ns/op
Iteration  19: 9.949 ns/op
Iteration  20: 9.926 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.085 ns/op
# Warmup Iteration   2: 10.471 ns/op
# Warmup Iteration   3: 9.920 ns/op
# Warmup Iteration   4: 9.910 ns/op
# Warmup Iteration   5: 9.915 ns/op
Iteration   1: 9.930 ns/op
Iteration   2: 9.904 ns/op
Iteration   3: 9.906 ns/op
Iteration   4: 9.918 ns/op
Iteration   5: 9.910 ns/op
Iteration   6: 9.916 ns/op
Iteration   7: 9.917 ns/op
Iteration   8: 9.941 ns/op
Iteration   9: 9.930 ns/op
Iteration  10: 9.922 ns/op
Iteration  11: 9.946 ns/op
Iteration  12: 9.929 ns/op
Iteration  13: 9.925 ns/op
Iteration  14: 9.923 ns/op
Iteration  15: 9.924 ns/op
Iteration  16: 9.920 ns/op
Iteration  17: 9.926 ns/op
Iteration  18: 9.902 ns/op
Iteration  19: 9.922 ns/op
Iteration  20: 9.933 ns/op


Result "benchmark.StringContains.stringContains":
  9.963 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (9.875, 9.963, 10.076), stdev = 0.065
  CI (99.9%): [9.941, 9.985] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpKr3;  avgt  100  165.139 ± 5.204  ns/op
StringContains.stringContains     http  httpKr3;  avgt  100    9.963 ± 0.022  ns/op

Benchmark result is saved to http_8_0_6.csv
