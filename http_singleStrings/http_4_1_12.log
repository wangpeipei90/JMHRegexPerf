# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = cY _)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 174.768 ns/op
# Warmup Iteration   2: 93.715 ns/op
# Warmup Iteration   3: 90.698 ns/op
# Warmup Iteration   4: 93.330 ns/op
# Warmup Iteration   5: 90.822 ns/op
Iteration   1: 88.189 ns/op
Iteration   2: 88.447 ns/op
Iteration   3: 88.501 ns/op
Iteration   4: 88.572 ns/op
Iteration   5: 87.897 ns/op
Iteration   6: 88.074 ns/op
Iteration   7: 88.103 ns/op
Iteration   8: 88.149 ns/op
Iteration   9: 87.946 ns/op
Iteration  10: 88.258 ns/op
Iteration  11: 88.231 ns/op
Iteration  12: 88.260 ns/op
Iteration  13: 88.171 ns/op
Iteration  14: 88.030 ns/op
Iteration  15: 88.220 ns/op
Iteration  16: 88.337 ns/op
Iteration  17: 88.388 ns/op
Iteration  18: 87.929 ns/op
Iteration  19: 88.155 ns/op
Iteration  20: 88.600 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 171.135 ns/op
# Warmup Iteration   2: 97.304 ns/op
# Warmup Iteration   3: 95.899 ns/op
# Warmup Iteration   4: 97.892 ns/op
# Warmup Iteration   5: 93.681 ns/op
Iteration   1: 93.909 ns/op
Iteration   2: 93.976 ns/op
Iteration   3: 93.518 ns/op
Iteration   4: 93.959 ns/op
Iteration   5: 94.171 ns/op
Iteration   6: 93.600 ns/op
Iteration   7: 93.591 ns/op
Iteration   8: 93.619 ns/op
Iteration   9: 93.267 ns/op
Iteration  10: 93.381 ns/op
Iteration  11: 93.622 ns/op
Iteration  12: 94.130 ns/op
Iteration  13: 93.972 ns/op
Iteration  14: 93.811 ns/op
Iteration  15: 93.426 ns/op
Iteration  16: 93.927 ns/op
Iteration  17: 93.966 ns/op
Iteration  18: 93.546 ns/op
Iteration  19: 94.143 ns/op
Iteration  20: 93.852 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 168.929 ns/op
# Warmup Iteration   2: 92.205 ns/op
# Warmup Iteration   3: 91.523 ns/op
# Warmup Iteration   4: 96.819 ns/op
# Warmup Iteration   5: 89.645 ns/op
Iteration   1: 89.456 ns/op
Iteration   2: 90.540 ns/op
Iteration   3: 90.444 ns/op
Iteration   4: 89.806 ns/op
Iteration   5: 89.070 ns/op
Iteration   6: 89.208 ns/op
Iteration   7: 89.225 ns/op
Iteration   8: 89.116 ns/op
Iteration   9: 89.295 ns/op
Iteration  10: 89.240 ns/op
Iteration  11: 89.392 ns/op
Iteration  12: 89.179 ns/op
Iteration  13: 89.589 ns/op
Iteration  14: 89.469 ns/op
Iteration  15: 89.673 ns/op
Iteration  16: 89.179 ns/op
Iteration  17: 89.648 ns/op
Iteration  18: 89.304 ns/op
Iteration  19: 89.439 ns/op
Iteration  20: 89.048 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 168.963 ns/op
# Warmup Iteration   2: 92.097 ns/op
# Warmup Iteration   3: 91.238 ns/op
# Warmup Iteration   4: 93.492 ns/op
# Warmup Iteration   5: 89.465 ns/op
Iteration   1: 88.406 ns/op
Iteration   2: 89.637 ns/op
Iteration   3: 89.313 ns/op
Iteration   4: 89.437 ns/op
Iteration   5: 88.131 ns/op
Iteration   6: 88.201 ns/op
Iteration   7: 88.254 ns/op
Iteration   8: 88.466 ns/op
Iteration   9: 88.310 ns/op
Iteration  10: 88.627 ns/op
Iteration  11: 88.507 ns/op
Iteration  12: 88.842 ns/op
Iteration  13: 88.429 ns/op
Iteration  14: 88.162 ns/op
Iteration  15: 88.466 ns/op
Iteration  16: 88.715 ns/op
Iteration  17: 88.883 ns/op
Iteration  18: 88.099 ns/op
Iteration  19: 88.521 ns/op
Iteration  20: 89.595 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 167.479 ns/op
# Warmup Iteration   2: 92.294 ns/op
# Warmup Iteration   3: 90.580 ns/op
# Warmup Iteration   4: 92.418 ns/op
# Warmup Iteration   5: 88.690 ns/op
Iteration   1: 88.247 ns/op
Iteration   2: 88.694 ns/op
Iteration   3: 88.639 ns/op
Iteration   4: 88.774 ns/op
Iteration   5: 88.740 ns/op
Iteration   6: 87.973 ns/op
Iteration   7: 88.099 ns/op
Iteration   8: 88.140 ns/op
Iteration   9: 88.199 ns/op
Iteration  10: 88.014 ns/op
Iteration  11: 88.260 ns/op
Iteration  12: 88.258 ns/op
Iteration  13: 88.249 ns/op
Iteration  14: 87.920 ns/op
Iteration  15: 88.041 ns/op
Iteration  16: 88.090 ns/op
Iteration  17: 88.305 ns/op
Iteration  18: 87.891 ns/op
Iteration  19: 88.097 ns/op
Iteration  20: 88.115 ns/op


Result "benchmark.StringContains.regexMatches":
  89.669 ±(99.9%) 0.725 ns/op [Average]
  (min, avg, max) = (87.891, 89.669, 94.171), stdev = 2.136
  CI (99.9%): [88.945, 90.394] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = cY _)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.494 ns/op
# Warmup Iteration   2: 8.965 ns/op
# Warmup Iteration   3: 9.013 ns/op
# Warmup Iteration   4: 9.009 ns/op
# Warmup Iteration   5: 9.010 ns/op
Iteration   1: 9.010 ns/op
Iteration   2: 9.010 ns/op
Iteration   3: 9.007 ns/op
Iteration   4: 9.010 ns/op
Iteration   5: 9.012 ns/op
Iteration   6: 9.010 ns/op
Iteration   7: 9.013 ns/op
Iteration   8: 9.013 ns/op
Iteration   9: 9.010 ns/op
Iteration  10: 9.006 ns/op
Iteration  11: 9.013 ns/op
Iteration  12: 9.008 ns/op
Iteration  13: 9.013 ns/op
Iteration  14: 9.010 ns/op
Iteration  15: 9.011 ns/op
Iteration  16: 9.012 ns/op
Iteration  17: 9.020 ns/op
Iteration  18: 9.014 ns/op
Iteration  19: 9.012 ns/op
Iteration  20: 9.009 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.465 ns/op
# Warmup Iteration   2: 9.067 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.982 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 9.017 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.968 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.978 ns/op
Iteration  20: 8.981 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.464 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.962 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.956 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.963 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.963 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.963 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.963 ns/op
Iteration  20: 8.967 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.455 ns/op
# Warmup Iteration   2: 9.072 ns/op
# Warmup Iteration   3: 8.971 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.970 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.969 ns/op
Iteration   3: 8.954 ns/op
Iteration   4: 8.969 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.969 ns/op
Iteration   8: 8.983 ns/op
Iteration   9: 8.968 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.968 ns/op
Iteration  14: 8.968 ns/op
Iteration  15: 8.972 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.973 ns/op
Iteration  18: 8.971 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.968 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.427 ns/op
# Warmup Iteration   2: 9.064 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.964 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.965 ns/op


Result "benchmark.StringContains.stringContains":
  8.976 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (8.954, 8.976, 9.020), stdev = 0.019
  CI (99.9%): [8.969, 8.982] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   cY _  avgt  100  89.669 ± 0.725  ns/op
StringContains.stringContains     http   cY _  avgt  100   8.976 ± 0.006  ns/op

Benchmark result is saved to http_4_1_12.csv
