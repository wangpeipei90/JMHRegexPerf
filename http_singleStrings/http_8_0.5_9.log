# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = p"=Lhttp)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 218.329 ns/op
# Warmup Iteration   2: 149.756 ns/op
# Warmup Iteration   3: 132.970 ns/op
# Warmup Iteration   4: 133.123 ns/op
# Warmup Iteration   5: 133.793 ns/op
Iteration   1: 133.516 ns/op
Iteration   2: 131.102 ns/op
Iteration   3: 130.398 ns/op
Iteration   4: 130.557 ns/op
Iteration   5: 131.635 ns/op
Iteration   6: 130.292 ns/op
Iteration   7: 130.833 ns/op
Iteration   8: 130.376 ns/op
Iteration   9: 129.988 ns/op
Iteration  10: 130.008 ns/op
Iteration  11: 130.012 ns/op
Iteration  12: 130.007 ns/op
Iteration  13: 130.214 ns/op
Iteration  14: 130.997 ns/op
Iteration  15: 130.027 ns/op
Iteration  16: 130.065 ns/op
Iteration  17: 130.225 ns/op
Iteration  18: 130.396 ns/op
Iteration  19: 130.098 ns/op
Iteration  20: 130.241 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 218.656 ns/op
# Warmup Iteration   2: 149.793 ns/op
# Warmup Iteration   3: 134.654 ns/op
# Warmup Iteration   4: 134.890 ns/op
# Warmup Iteration   5: 134.456 ns/op
Iteration   1: 135.139 ns/op
Iteration   2: 132.137 ns/op
Iteration   3: 132.619 ns/op
Iteration   4: 132.065 ns/op
Iteration   5: 132.081 ns/op
Iteration   6: 132.113 ns/op
Iteration   7: 132.027 ns/op
Iteration   8: 132.616 ns/op
Iteration   9: 131.518 ns/op
Iteration  10: 131.746 ns/op
Iteration  11: 131.644 ns/op
Iteration  12: 132.538 ns/op
Iteration  13: 132.282 ns/op
Iteration  14: 131.905 ns/op
Iteration  15: 131.694 ns/op
Iteration  16: 131.631 ns/op
Iteration  17: 131.755 ns/op
Iteration  18: 131.579 ns/op
Iteration  19: 132.371 ns/op
Iteration  20: 131.647 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 222.080 ns/op
# Warmup Iteration   2: 150.332 ns/op
# Warmup Iteration   3: 132.578 ns/op
# Warmup Iteration   4: 131.990 ns/op
# Warmup Iteration   5: 132.763 ns/op
Iteration   1: 133.377 ns/op
Iteration   2: 131.294 ns/op
Iteration   3: 130.248 ns/op
Iteration   4: 130.248 ns/op
Iteration   5: 130.329 ns/op
Iteration   6: 130.327 ns/op
Iteration   7: 130.829 ns/op
Iteration   8: 130.336 ns/op
Iteration   9: 129.885 ns/op
Iteration  10: 129.929 ns/op
Iteration  11: 129.933 ns/op
Iteration  12: 130.248 ns/op
Iteration  13: 130.127 ns/op
Iteration  14: 130.427 ns/op
Iteration  15: 130.268 ns/op
Iteration  16: 130.106 ns/op
Iteration  17: 130.284 ns/op
Iteration  18: 131.565 ns/op
Iteration  19: 130.421 ns/op
Iteration  20: 130.428 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 220.018 ns/op
# Warmup Iteration   2: 151.507 ns/op
# Warmup Iteration   3: 134.115 ns/op
# Warmup Iteration   4: 133.415 ns/op
# Warmup Iteration   5: 134.144 ns/op
Iteration   1: 134.905 ns/op
Iteration   2: 131.857 ns/op
Iteration   3: 132.471 ns/op
Iteration   4: 131.821 ns/op
Iteration   5: 131.878 ns/op
Iteration   6: 131.862 ns/op
Iteration   7: 131.801 ns/op
Iteration   8: 132.547 ns/op
Iteration   9: 131.975 ns/op
Iteration  10: 131.528 ns/op
Iteration  11: 131.694 ns/op
Iteration  12: 131.610 ns/op
Iteration  13: 131.508 ns/op
Iteration  14: 131.860 ns/op
Iteration  15: 131.637 ns/op
Iteration  16: 131.560 ns/op
Iteration  17: 131.598 ns/op
Iteration  18: 131.622 ns/op
Iteration  19: 132.565 ns/op
Iteration  20: 131.992 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 218.024 ns/op
# Warmup Iteration   2: 149.365 ns/op
# Warmup Iteration   3: 133.656 ns/op
# Warmup Iteration   4: 133.003 ns/op
# Warmup Iteration   5: 133.790 ns/op
Iteration   1: 134.434 ns/op
Iteration   2: 131.886 ns/op
Iteration   3: 131.443 ns/op
Iteration   4: 131.530 ns/op
Iteration   5: 131.585 ns/op
Iteration   6: 131.513 ns/op
Iteration   7: 131.551 ns/op
Iteration   8: 132.087 ns/op
Iteration   9: 131.277 ns/op
Iteration  10: 131.156 ns/op
Iteration  11: 131.042 ns/op
Iteration  12: 131.132 ns/op
Iteration  13: 131.408 ns/op
Iteration  14: 131.314 ns/op
Iteration  15: 131.191 ns/op
Iteration  16: 131.175 ns/op
Iteration  17: 131.324 ns/op
Iteration  18: 131.704 ns/op
Iteration  19: 131.346 ns/op
Iteration  20: 131.300 ns/op


Result "benchmark.StringContains.regexMatches":
  131.364 ±(99.9%) 0.351 ns/op [Average]
  (min, avg, max) = (129.885, 131.364, 135.139), stdev = 1.035
  CI (99.9%): [131.013, 131.715] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = p"=Lhttp)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.067 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.927 ns/op
# Warmup Iteration   4: 9.932 ns/op
# Warmup Iteration   5: 9.917 ns/op
Iteration   1: 9.899 ns/op
Iteration   2: 9.908 ns/op
Iteration   3: 9.912 ns/op
Iteration   4: 9.897 ns/op
Iteration   5: 9.881 ns/op
Iteration   6: 9.899 ns/op
Iteration   7: 9.900 ns/op
Iteration   8: 9.887 ns/op
Iteration   9: 9.883 ns/op
Iteration  10: 9.898 ns/op
Iteration  11: 9.898 ns/op
Iteration  12: 9.915 ns/op
Iteration  13: 9.901 ns/op
Iteration  14: 9.910 ns/op
Iteration  15: 9.920 ns/op
Iteration  16: 9.895 ns/op
Iteration  17: 9.913 ns/op
Iteration  18: 9.900 ns/op
Iteration  19: 9.909 ns/op
Iteration  20: 9.915 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.073 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.913 ns/op
# Warmup Iteration   4: 9.923 ns/op
# Warmup Iteration   5: 9.927 ns/op
Iteration   1: 9.913 ns/op
Iteration   2: 9.928 ns/op
Iteration   3: 9.892 ns/op
Iteration   4: 9.903 ns/op
Iteration   5: 9.901 ns/op
Iteration   6: 9.908 ns/op
Iteration   7: 9.903 ns/op
Iteration   8: 9.896 ns/op
Iteration   9: 9.891 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.905 ns/op
Iteration  12: 9.914 ns/op
Iteration  13: 9.903 ns/op
Iteration  14: 9.910 ns/op
Iteration  15: 9.914 ns/op
Iteration  16: 9.896 ns/op
Iteration  17: 9.886 ns/op
Iteration  18: 9.906 ns/op
Iteration  19: 9.915 ns/op
Iteration  20: 9.910 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.070 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.899 ns/op
# Warmup Iteration   4: 9.894 ns/op
# Warmup Iteration   5: 9.898 ns/op
Iteration   1: 9.888 ns/op
Iteration   2: 9.878 ns/op
Iteration   3: 9.861 ns/op
Iteration   4: 9.870 ns/op
Iteration   5: 9.865 ns/op
Iteration   6: 9.868 ns/op
Iteration   7: 9.878 ns/op
Iteration   8: 9.873 ns/op
Iteration   9: 9.879 ns/op
Iteration  10: 9.876 ns/op
Iteration  11: 9.873 ns/op
Iteration  12: 9.872 ns/op
Iteration  13: 9.869 ns/op
Iteration  14: 9.874 ns/op
Iteration  15: 9.867 ns/op
Iteration  16: 9.892 ns/op
Iteration  17: 9.874 ns/op
Iteration  18: 9.874 ns/op
Iteration  19: 9.886 ns/op
Iteration  20: 9.879 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.197 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.904 ns/op
# Warmup Iteration   4: 9.891 ns/op
# Warmup Iteration   5: 9.892 ns/op
Iteration   1: 9.877 ns/op
Iteration   2: 9.897 ns/op
Iteration   3: 9.900 ns/op
Iteration   4: 9.893 ns/op
Iteration   5: 9.883 ns/op
Iteration   6: 9.901 ns/op
Iteration   7: 9.891 ns/op
Iteration   8: 9.900 ns/op
Iteration   9: 9.892 ns/op
Iteration  10: 9.900 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.896 ns/op
Iteration  13: 9.876 ns/op
Iteration  14: 9.875 ns/op
Iteration  15: 9.883 ns/op
Iteration  16: 9.900 ns/op
Iteration  17: 9.890 ns/op
Iteration  18: 9.889 ns/op
Iteration  19: 9.873 ns/op
Iteration  20: 9.877 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.088 ns/op
# Warmup Iteration   2: 10.470 ns/op
# Warmup Iteration   3: 9.912 ns/op
# Warmup Iteration   4: 9.949 ns/op
# Warmup Iteration   5: 9.920 ns/op
Iteration   1: 9.940 ns/op
Iteration   2: 9.918 ns/op
Iteration   3: 9.916 ns/op
Iteration   4: 9.916 ns/op
Iteration   5: 9.929 ns/op
Iteration   6: 9.910 ns/op
Iteration   7: 9.933 ns/op
Iteration   8: 9.952 ns/op
Iteration   9: 9.924 ns/op
Iteration  10: 9.922 ns/op
Iteration  11: 9.917 ns/op
Iteration  12: 9.913 ns/op
Iteration  13: 9.916 ns/op
Iteration  14: 9.929 ns/op
Iteration  15: 9.908 ns/op
Iteration  16: 9.929 ns/op
Iteration  17: 9.905 ns/op
Iteration  18: 9.931 ns/op
Iteration  19: 9.924 ns/op
Iteration  20: 9.936 ns/op


Result "benchmark.StringContains.stringContains":
  9.899 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (9.861, 9.899, 9.952), stdev = 0.019
  CI (99.9%): [9.892, 9.905] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  p"=Lhttp  avgt  100  131.364 ± 0.351  ns/op
StringContains.stringContains     http  p"=Lhttp  avgt  100    9.899 ± 0.007  ns/op

Benchmark result is saved to http_8_0.5_9.csv
