# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ~710Ywv_http|A-p\6k%sqak{P"S]hMN)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 454.438 ns/op
# Warmup Iteration   2: 460.956 ns/op
# Warmup Iteration   3: 438.487 ns/op
# Warmup Iteration   4: 367.387 ns/op
# Warmup Iteration   5: 371.037 ns/op
Iteration   1: 367.402 ns/op
Iteration   2: 372.733 ns/op
Iteration   3: 367.285 ns/op
Iteration   4: 367.238 ns/op
Iteration   5: 376.183 ns/op
Iteration   6: 367.388 ns/op
Iteration   7: 376.606 ns/op
Iteration   8: 367.874 ns/op
Iteration   9: 379.410 ns/op
Iteration  10: 367.126 ns/op
Iteration  11: 367.265 ns/op
Iteration  12: 368.816 ns/op
Iteration  13: 367.106 ns/op
Iteration  14: 368.782 ns/op
Iteration  15: 367.050 ns/op
Iteration  16: 368.821 ns/op
Iteration  17: 367.205 ns/op
Iteration  18: 367.022 ns/op
Iteration  19: 368.850 ns/op
Iteration  20: 367.974 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 421.121 ns/op
# Warmup Iteration   2: 434.637 ns/op
# Warmup Iteration   3: 409.116 ns/op
# Warmup Iteration   4: 363.239 ns/op
# Warmup Iteration   5: 366.425 ns/op
Iteration   1: 363.182 ns/op
Iteration   2: 368.005 ns/op
Iteration   3: 362.957 ns/op
Iteration   4: 369.325 ns/op
Iteration   5: 363.025 ns/op
Iteration   6: 363.234 ns/op
Iteration   7: 371.227 ns/op
Iteration   8: 363.343 ns/op
Iteration   9: 373.423 ns/op
Iteration  10: 364.804 ns/op
Iteration  11: 365.440 ns/op
Iteration  12: 363.889 ns/op
Iteration  13: 362.736 ns/op
Iteration  14: 364.809 ns/op
Iteration  15: 362.301 ns/op
Iteration  16: 364.670 ns/op
Iteration  17: 362.903 ns/op
Iteration  18: 364.841 ns/op
Iteration  19: 362.752 ns/op
Iteration  20: 362.447 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 419.135 ns/op
# Warmup Iteration   2: 435.704 ns/op
# Warmup Iteration   3: 409.067 ns/op
# Warmup Iteration   4: 363.735 ns/op
# Warmup Iteration   5: 367.544 ns/op
Iteration   1: 363.729 ns/op
Iteration   2: 368.556 ns/op
Iteration   3: 363.872 ns/op
Iteration   4: 370.436 ns/op
Iteration   5: 364.302 ns/op
Iteration   6: 364.762 ns/op
Iteration   7: 371.347 ns/op
Iteration   8: 363.268 ns/op
Iteration   9: 374.170 ns/op
Iteration  10: 364.471 ns/op
Iteration  11: 366.187 ns/op
Iteration  12: 363.791 ns/op
Iteration  13: 363.913 ns/op
Iteration  14: 365.604 ns/op
Iteration  15: 363.578 ns/op
Iteration  16: 367.064 ns/op
Iteration  17: 364.406 ns/op
Iteration  18: 368.323 ns/op
Iteration  19: 364.284 ns/op
Iteration  20: 363.889 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 431.628 ns/op
# Warmup Iteration   2: 430.786 ns/op
# Warmup Iteration   3: 436.561 ns/op
# Warmup Iteration   4: 387.601 ns/op
# Warmup Iteration   5: 390.839 ns/op
Iteration   1: 388.082 ns/op
Iteration   2: 387.881 ns/op
Iteration   3: 392.439 ns/op
Iteration   4: 387.553 ns/op
Iteration   5: 393.939 ns/op
Iteration   6: 387.793 ns/op
Iteration   7: 396.375 ns/op
Iteration   8: 387.451 ns/op
Iteration   9: 387.868 ns/op
Iteration  10: 398.213 ns/op
Iteration  11: 387.848 ns/op
Iteration  12: 389.727 ns/op
Iteration  13: 387.237 ns/op
Iteration  14: 387.669 ns/op
Iteration  15: 389.358 ns/op
Iteration  16: 387.679 ns/op
Iteration  17: 390.136 ns/op
Iteration  18: 387.832 ns/op
Iteration  19: 388.085 ns/op
Iteration  20: 390.969 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 436.286 ns/op
# Warmup Iteration   2: 433.411 ns/op
# Warmup Iteration   3: 443.112 ns/op
# Warmup Iteration   4: 393.844 ns/op
# Warmup Iteration   5: 397.433 ns/op
Iteration   1: 393.313 ns/op
Iteration   2: 393.743 ns/op
Iteration   3: 398.776 ns/op
Iteration   4: 393.335 ns/op
Iteration   5: 400.000 ns/op
Iteration   6: 393.278 ns/op
Iteration   7: 401.965 ns/op
Iteration   8: 393.363 ns/op
Iteration   9: 393.446 ns/op
Iteration  10: 404.314 ns/op
Iteration  11: 393.492 ns/op
Iteration  12: 395.711 ns/op
Iteration  13: 393.288 ns/op
Iteration  14: 393.758 ns/op
Iteration  15: 395.472 ns/op
Iteration  16: 393.472 ns/op
Iteration  17: 393.403 ns/op
Iteration  18: 395.376 ns/op
Iteration  19: 393.267 ns/op
Iteration  20: 395.765 ns/op


Result "benchmark.StringContains.regexMatches":
  377.101 ±(99.9%) 4.510 ns/op [Average]
  (min, avg, max) = (362.301, 377.101, 404.314), stdev = 13.298
  CI (99.9%): [372.591, 381.611] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ~710Ywv_http|A-p\6k%sqak{P"S]hMN)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.238 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.899 ns/op
# Warmup Iteration   4: 9.898 ns/op
# Warmup Iteration   5: 9.884 ns/op
Iteration   1: 9.890 ns/op
Iteration   2: 9.897 ns/op
Iteration   3: 9.875 ns/op
Iteration   4: 9.881 ns/op
Iteration   5: 9.901 ns/op
Iteration   6: 9.879 ns/op
Iteration   7: 9.885 ns/op
Iteration   8: 9.891 ns/op
Iteration   9: 9.892 ns/op
Iteration  10: 9.883 ns/op
Iteration  11: 9.886 ns/op
Iteration  12: 9.870 ns/op
Iteration  13: 9.888 ns/op
Iteration  14: 9.884 ns/op
Iteration  15: 9.886 ns/op
Iteration  16: 9.889 ns/op
Iteration  17: 9.881 ns/op
Iteration  18: 9.879 ns/op
Iteration  19: 9.864 ns/op
Iteration  20: 9.882 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.216 ns/op
# Warmup Iteration   2: 9.724 ns/op
# Warmup Iteration   3: 9.859 ns/op
# Warmup Iteration   4: 9.856 ns/op
# Warmup Iteration   5: 9.849 ns/op
Iteration   1: 9.850 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.853 ns/op
Iteration   4: 9.856 ns/op
Iteration   5: 9.871 ns/op
Iteration   6: 9.852 ns/op
Iteration   7: 9.865 ns/op
Iteration   8: 9.879 ns/op
Iteration   9: 9.863 ns/op
Iteration  10: 9.885 ns/op
Iteration  11: 9.867 ns/op
Iteration  12: 9.854 ns/op
Iteration  13: 9.862 ns/op
Iteration  14: 9.863 ns/op
Iteration  15: 9.868 ns/op
Iteration  16: 9.836 ns/op
Iteration  17: 9.865 ns/op
Iteration  18: 9.859 ns/op
Iteration  19: 9.843 ns/op
Iteration  20: 9.880 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.194 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.982 ns/op
# Warmup Iteration   4: 9.974 ns/op
# Warmup Iteration   5: 9.982 ns/op
Iteration   1: 9.962 ns/op
Iteration   2: 9.979 ns/op
Iteration   3: 9.976 ns/op
Iteration   4: 9.963 ns/op
Iteration   5: 9.970 ns/op
Iteration   6: 9.979 ns/op
Iteration   7: 9.979 ns/op
Iteration   8: 9.968 ns/op
Iteration   9: 9.966 ns/op
Iteration  10: 9.973 ns/op
Iteration  11: 9.986 ns/op
Iteration  12: 9.986 ns/op
Iteration  13: 9.976 ns/op
Iteration  14: 9.984 ns/op
Iteration  15: 9.982 ns/op
Iteration  16: 9.986 ns/op
Iteration  17: 9.998 ns/op
Iteration  18: 9.972 ns/op
Iteration  19: 10.003 ns/op
Iteration  20: 9.980 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.238 ns/op
# Warmup Iteration   2: 9.727 ns/op
# Warmup Iteration   3: 9.863 ns/op
# Warmup Iteration   4: 9.844 ns/op
# Warmup Iteration   5: 9.874 ns/op
Iteration   1: 9.883 ns/op
Iteration   2: 9.870 ns/op
Iteration   3: 9.872 ns/op
Iteration   4: 9.877 ns/op
Iteration   5: 9.859 ns/op
Iteration   6: 9.870 ns/op
Iteration   7: 9.860 ns/op
Iteration   8: 9.878 ns/op
Iteration   9: 9.865 ns/op
Iteration  10: 9.859 ns/op
Iteration  11: 9.876 ns/op
Iteration  12: 9.880 ns/op
Iteration  13: 9.877 ns/op
Iteration  14: 9.853 ns/op
Iteration  15: 9.869 ns/op
Iteration  16: 9.862 ns/op
Iteration  17: 9.862 ns/op
Iteration  18: 9.877 ns/op
Iteration  19: 9.872 ns/op
Iteration  20: 9.895 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.233 ns/op
# Warmup Iteration   2: 9.727 ns/op
# Warmup Iteration   3: 9.855 ns/op
# Warmup Iteration   4: 9.863 ns/op
# Warmup Iteration   5: 9.858 ns/op
Iteration   1: 9.875 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.872 ns/op
Iteration   4: 9.851 ns/op
Iteration   5: 9.877 ns/op
Iteration   6: 9.857 ns/op
Iteration   7: 9.864 ns/op
Iteration   8: 9.881 ns/op
Iteration   9: 9.847 ns/op
Iteration  10: 9.863 ns/op
Iteration  11: 9.874 ns/op
Iteration  12: 9.857 ns/op
Iteration  13: 9.886 ns/op
Iteration  14: 9.884 ns/op
Iteration  15: 9.882 ns/op
Iteration  16: 9.888 ns/op
Iteration  17: 9.865 ns/op
Iteration  18: 9.845 ns/op
Iteration  19: 9.867 ns/op
Iteration  20: 9.883 ns/op


Result "benchmark.StringContains.stringContains":
  9.893 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (9.836, 9.893, 10.003), stdev = 0.045
  CI (99.9%): [9.878, 9.908] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ~710Ywv_http|A-p\6k%sqak{P"S]hMN  avgt  100  377.101 ± 4.510  ns/op
StringContains.stringContains     http  ~710Ywv_http|A-p\6k%sqak{P"S]hMN  avgt  100    9.893 ± 0.015  ns/op

Benchmark result is saved to http_32_0.25_4.csv
