# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = A!httpo\)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 245.576 ns/op
# Warmup Iteration   2: 169.177 ns/op
# Warmup Iteration   3: 136.446 ns/op
# Warmup Iteration   4: 138.852 ns/op
# Warmup Iteration   5: 138.177 ns/op
Iteration   1: 138.820 ns/op
Iteration   2: 134.910 ns/op
Iteration   3: 135.492 ns/op
Iteration   4: 134.717 ns/op
Iteration   5: 135.674 ns/op
Iteration   6: 135.095 ns/op
Iteration   7: 134.581 ns/op
Iteration   8: 134.866 ns/op
Iteration   9: 134.848 ns/op
Iteration  10: 134.367 ns/op
Iteration  11: 135.510 ns/op
Iteration  12: 134.819 ns/op
Iteration  13: 134.924 ns/op
Iteration  14: 134.484 ns/op
Iteration  15: 134.481 ns/op
Iteration  16: 134.535 ns/op
Iteration  17: 134.376 ns/op
Iteration  18: 135.066 ns/op
Iteration  19: 134.618 ns/op
Iteration  20: 134.434 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 233.366 ns/op
# Warmup Iteration   2: 175.539 ns/op
# Warmup Iteration   3: 151.570 ns/op
# Warmup Iteration   4: 153.371 ns/op
# Warmup Iteration   5: 154.836 ns/op
Iteration   1: 154.504 ns/op
Iteration   2: 150.865 ns/op
Iteration   3: 150.643 ns/op
Iteration   4: 150.891 ns/op
Iteration   5: 150.523 ns/op
Iteration   6: 150.917 ns/op
Iteration   7: 150.714 ns/op
Iteration   8: 150.605 ns/op
Iteration   9: 150.792 ns/op
Iteration  10: 150.703 ns/op
Iteration  11: 150.405 ns/op
Iteration  12: 150.527 ns/op
Iteration  13: 150.451 ns/op
Iteration  14: 150.683 ns/op
Iteration  15: 150.485 ns/op
Iteration  16: 150.542 ns/op
Iteration  17: 150.742 ns/op
Iteration  18: 150.590 ns/op
Iteration  19: 150.608 ns/op
Iteration  20: 150.576 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 244.850 ns/op
# Warmup Iteration   2: 187.251 ns/op
# Warmup Iteration   3: 170.984 ns/op
# Warmup Iteration   4: 171.494 ns/op
# Warmup Iteration   5: 172.116 ns/op
Iteration   1: 173.008 ns/op
Iteration   2: 174.181 ns/op
Iteration   3: 170.249 ns/op
Iteration   4: 170.100 ns/op
Iteration   5: 170.096 ns/op
Iteration   6: 170.703 ns/op
Iteration   7: 170.194 ns/op
Iteration   8: 169.500 ns/op
Iteration   9: 170.917 ns/op
Iteration  10: 170.043 ns/op
Iteration  11: 170.217 ns/op
Iteration  12: 170.383 ns/op
Iteration  13: 170.015 ns/op
Iteration  14: 169.725 ns/op
Iteration  15: 169.831 ns/op
Iteration  16: 170.060 ns/op
Iteration  17: 169.756 ns/op
Iteration  18: 169.687 ns/op
Iteration  19: 169.781 ns/op
Iteration  20: 169.229 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 238.968 ns/op
# Warmup Iteration   2: 178.162 ns/op
# Warmup Iteration   3: 150.958 ns/op
# Warmup Iteration   4: 151.606 ns/op
# Warmup Iteration   5: 156.157 ns/op
Iteration   1: 154.348 ns/op
Iteration   2: 150.636 ns/op
Iteration   3: 150.564 ns/op
Iteration   4: 150.475 ns/op
Iteration   5: 150.577 ns/op
Iteration   6: 150.604 ns/op
Iteration   7: 150.820 ns/op
Iteration   8: 150.192 ns/op
Iteration   9: 150.144 ns/op
Iteration  10: 150.304 ns/op
Iteration  11: 150.042 ns/op
Iteration  12: 150.780 ns/op
Iteration  13: 150.030 ns/op
Iteration  14: 150.973 ns/op
Iteration  15: 149.883 ns/op
Iteration  16: 149.714 ns/op
Iteration  17: 149.871 ns/op
Iteration  18: 149.989 ns/op
Iteration  19: 149.794 ns/op
Iteration  20: 149.965 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 247.186 ns/op
# Warmup Iteration   2: 189.541 ns/op
# Warmup Iteration   3: 173.127 ns/op
# Warmup Iteration   4: 173.631 ns/op
# Warmup Iteration   5: 174.402 ns/op
Iteration   1: 175.349 ns/op
Iteration   2: 176.297 ns/op
Iteration   3: 172.199 ns/op
Iteration   4: 172.129 ns/op
Iteration   5: 172.084 ns/op
Iteration   6: 171.195 ns/op
Iteration   7: 172.366 ns/op
Iteration   8: 172.079 ns/op
Iteration   9: 172.086 ns/op
Iteration  10: 172.158 ns/op
Iteration  11: 172.214 ns/op
Iteration  12: 172.581 ns/op
Iteration  13: 172.478 ns/op
Iteration  14: 171.784 ns/op
Iteration  15: 171.647 ns/op
Iteration  16: 171.748 ns/op
Iteration  17: 171.177 ns/op
Iteration  18: 172.878 ns/op
Iteration  19: 172.113 ns/op
Iteration  20: 171.831 ns/op


Result "benchmark.StringContains.regexMatches":
  155.832 ±(99.9%) 4.768 ns/op [Average]
  (min, avg, max) = (134.367, 155.832, 176.297), stdev = 14.059
  CI (99.9%): [151.063, 160.600] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = A!httpo\)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.069 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.903 ns/op
# Warmup Iteration   4: 9.897 ns/op
# Warmup Iteration   5: 9.907 ns/op
Iteration   1: 9.912 ns/op
Iteration   2: 9.910 ns/op
Iteration   3: 9.912 ns/op
Iteration   4: 9.908 ns/op
Iteration   5: 9.906 ns/op
Iteration   6: 9.905 ns/op
Iteration   7: 9.905 ns/op
Iteration   8: 9.923 ns/op
Iteration   9: 9.894 ns/op
Iteration  10: 9.900 ns/op
Iteration  11: 9.899 ns/op
Iteration  12: 9.900 ns/op
Iteration  13: 9.894 ns/op
Iteration  14: 9.896 ns/op
Iteration  15: 9.885 ns/op
Iteration  16: 9.892 ns/op
Iteration  17: 9.911 ns/op
Iteration  18: 9.910 ns/op
Iteration  19: 9.903 ns/op
Iteration  20: 9.904 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.063 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.872 ns/op
# Warmup Iteration   4: 9.874 ns/op
# Warmup Iteration   5: 9.874 ns/op
Iteration   1: 9.872 ns/op
Iteration   2: 9.881 ns/op
Iteration   3: 9.893 ns/op
Iteration   4: 9.882 ns/op
Iteration   5: 9.894 ns/op
Iteration   6: 9.882 ns/op
Iteration   7: 9.880 ns/op
Iteration   8: 9.880 ns/op
Iteration   9: 9.892 ns/op
Iteration  10: 9.893 ns/op
Iteration  11: 9.884 ns/op
Iteration  12: 9.882 ns/op
Iteration  13: 9.871 ns/op
Iteration  14: 9.888 ns/op
Iteration  15: 9.867 ns/op
Iteration  16: 9.881 ns/op
Iteration  17: 9.886 ns/op
Iteration  18: 9.892 ns/op
Iteration  19: 9.887 ns/op
Iteration  20: 9.902 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.190 ns/op
# Warmup Iteration   2: 10.523 ns/op
# Warmup Iteration   3: 9.900 ns/op
# Warmup Iteration   4: 9.892 ns/op
# Warmup Iteration   5: 9.944 ns/op
Iteration   1: 9.925 ns/op
Iteration   2: 9.972 ns/op
Iteration   3: 9.899 ns/op
Iteration   4: 9.896 ns/op
Iteration   5: 9.897 ns/op
Iteration   6: 9.895 ns/op
Iteration   7: 9.899 ns/op
Iteration   8: 9.889 ns/op
Iteration   9: 9.875 ns/op
Iteration  10: 9.899 ns/op
Iteration  11: 9.918 ns/op
Iteration  12: 9.884 ns/op
Iteration  13: 9.866 ns/op
Iteration  14: 9.882 ns/op
Iteration  15: 9.898 ns/op
Iteration  16: 9.898 ns/op
Iteration  17: 9.903 ns/op
Iteration  18: 9.948 ns/op
Iteration  19: 9.993 ns/op
Iteration  20: 9.892 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.116 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.908 ns/op
# Warmup Iteration   4: 9.917 ns/op
# Warmup Iteration   5: 9.902 ns/op
Iteration   1: 9.884 ns/op
Iteration   2: 9.888 ns/op
Iteration   3: 9.905 ns/op
Iteration   4: 9.863 ns/op
Iteration   5: 9.882 ns/op
Iteration   6: 9.871 ns/op
Iteration   7: 9.891 ns/op
Iteration   8: 9.882 ns/op
Iteration   9: 9.887 ns/op
Iteration  10: 9.886 ns/op
Iteration  11: 9.915 ns/op
Iteration  12: 9.886 ns/op
Iteration  13: 9.901 ns/op
Iteration  14: 9.888 ns/op
Iteration  15: 9.889 ns/op
Iteration  16: 9.884 ns/op
Iteration  17: 9.889 ns/op
Iteration  18: 9.889 ns/op
Iteration  19: 9.874 ns/op
Iteration  20: 9.877 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.066 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.910 ns/op
# Warmup Iteration   4: 9.897 ns/op
# Warmup Iteration   5: 9.903 ns/op
Iteration   1: 9.921 ns/op
Iteration   2: 9.899 ns/op
Iteration   3: 9.900 ns/op
Iteration   4: 9.918 ns/op
Iteration   5: 9.905 ns/op
Iteration   6: 9.907 ns/op
Iteration   7: 9.907 ns/op
Iteration   8: 9.909 ns/op
Iteration   9: 9.909 ns/op
Iteration  10: 9.896 ns/op
Iteration  11: 9.911 ns/op
Iteration  12: 9.929 ns/op
Iteration  13: 9.914 ns/op
Iteration  14: 9.908 ns/op
Iteration  15: 9.927 ns/op
Iteration  16: 9.912 ns/op
Iteration  17: 9.917 ns/op
Iteration  18: 9.917 ns/op
Iteration  19: 9.901 ns/op
Iteration  20: 9.909 ns/op


Result "benchmark.StringContains.stringContains":
  9.898 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (9.863, 9.898, 9.993), stdev = 0.019
  CI (99.9%): [9.892, 9.905] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  A!httpo\  avgt  100  155.832 ± 4.768  ns/op
StringContains.stringContains     http  A!httpo\  avgt  100    9.898 ± 0.007  ns/op

Benchmark result is saved to http_8_0.25_2.csv
