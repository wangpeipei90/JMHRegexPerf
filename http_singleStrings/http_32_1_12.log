# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ay6Ys1`M#",G..w&_I59M~JOW
ZqK,O)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 217.392 ns/op
# Warmup Iteration   2: 144.704 ns/op
# Warmup Iteration   3: 125.141 ns/op
# Warmup Iteration   4: 124.404 ns/op
# Warmup Iteration   5: 125.731 ns/op
Iteration   1: 126.462 ns/op
Iteration   2: 122.545 ns/op
Iteration   3: 122.623 ns/op
Iteration   4: 123.092 ns/op
Iteration   5: 122.439 ns/op
Iteration   6: 122.538 ns/op
Iteration   7: 122.477 ns/op
Iteration   8: 123.102 ns/op
Iteration   9: 122.185 ns/op
Iteration  10: 122.279 ns/op
Iteration  11: 122.291 ns/op
Iteration  12: 122.489 ns/op
Iteration  13: 122.130 ns/op
Iteration  14: 122.436 ns/op
Iteration  15: 122.391 ns/op
Iteration  16: 123.518 ns/op
Iteration  17: 123.316 ns/op
Iteration  18: 122.267 ns/op
Iteration  19: 122.583 ns/op
Iteration  20: 122.285 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 204.479 ns/op
# Warmup Iteration   2: 137.881 ns/op
# Warmup Iteration   3: 123.611 ns/op
# Warmup Iteration   4: 124.121 ns/op
# Warmup Iteration   5: 128.647 ns/op
Iteration   1: 124.437 ns/op
Iteration   2: 122.568 ns/op
Iteration   3: 122.562 ns/op
Iteration   4: 123.027 ns/op
Iteration   5: 123.430 ns/op
Iteration   6: 122.558 ns/op
Iteration   7: 122.597 ns/op
Iteration   8: 122.808 ns/op
Iteration   9: 122.169 ns/op
Iteration  10: 122.188 ns/op
Iteration  11: 122.443 ns/op
Iteration  12: 122.145 ns/op
Iteration  13: 122.192 ns/op
Iteration  14: 122.158 ns/op
Iteration  15: 122.579 ns/op
Iteration  16: 122.156 ns/op
Iteration  17: 122.135 ns/op
Iteration  18: 122.082 ns/op
Iteration  19: 122.349 ns/op
Iteration  20: 123.100 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 203.537 ns/op
# Warmup Iteration   2: 137.801 ns/op
# Warmup Iteration   3: 123.501 ns/op
# Warmup Iteration   4: 124.026 ns/op
# Warmup Iteration   5: 128.284 ns/op
Iteration   1: 122.590 ns/op
Iteration   2: 122.566 ns/op
Iteration   3: 122.507 ns/op
Iteration   4: 123.082 ns/op
Iteration   5: 122.595 ns/op
Iteration   6: 122.588 ns/op
Iteration   7: 122.555 ns/op
Iteration   8: 122.776 ns/op
Iteration   9: 122.191 ns/op
Iteration  10: 122.238 ns/op
Iteration  11: 122.693 ns/op
Iteration  12: 122.155 ns/op
Iteration  13: 122.275 ns/op
Iteration  14: 122.157 ns/op
Iteration  15: 122.470 ns/op
Iteration  16: 122.347 ns/op
Iteration  17: 122.300 ns/op
Iteration  18: 122.208 ns/op
Iteration  19: 122.791 ns/op
Iteration  20: 122.497 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 215.606 ns/op
# Warmup Iteration   2: 151.269 ns/op
# Warmup Iteration   3: 135.592 ns/op
# Warmup Iteration   4: 134.887 ns/op
# Warmup Iteration   5: 135.579 ns/op
Iteration   1: 136.382 ns/op
Iteration   2: 133.298 ns/op
Iteration   3: 133.765 ns/op
Iteration   4: 133.209 ns/op
Iteration   5: 133.894 ns/op
Iteration   6: 133.206 ns/op
Iteration   7: 133.188 ns/op
Iteration   8: 133.194 ns/op
Iteration   9: 133.396 ns/op
Iteration  10: 132.808 ns/op
Iteration  11: 132.815 ns/op
Iteration  12: 132.750 ns/op
Iteration  13: 132.756 ns/op
Iteration  14: 133.267 ns/op
Iteration  15: 133.454 ns/op
Iteration  16: 132.740 ns/op
Iteration  17: 132.769 ns/op
Iteration  18: 132.887 ns/op
Iteration  19: 132.741 ns/op
Iteration  20: 133.071 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 206.055 ns/op
# Warmup Iteration   2: 138.794 ns/op
# Warmup Iteration   3: 124.945 ns/op
# Warmup Iteration   4: 125.445 ns/op
# Warmup Iteration   5: 129.838 ns/op
Iteration   1: 123.907 ns/op
Iteration   2: 124.914 ns/op
Iteration   3: 123.880 ns/op
Iteration   4: 124.500 ns/op
Iteration   5: 123.844 ns/op
Iteration   6: 123.870 ns/op
Iteration   7: 123.834 ns/op
Iteration   8: 124.037 ns/op
Iteration   9: 123.465 ns/op
Iteration  10: 123.409 ns/op
Iteration  11: 123.459 ns/op
Iteration  12: 123.750 ns/op
Iteration  13: 123.506 ns/op
Iteration  14: 123.475 ns/op
Iteration  15: 123.488 ns/op
Iteration  16: 123.684 ns/op
Iteration  17: 123.549 ns/op
Iteration  18: 123.469 ns/op
Iteration  19: 123.518 ns/op
Iteration  20: 123.822 ns/op


Result "benchmark.StringContains.regexMatches":
  124.977 ±(99.9%) 1.440 ns/op [Average]
  (min, avg, max) = (122.082, 124.977, 136.382), stdev = 4.245
  CI (99.9%): [123.537, 126.417] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ay6Ys1`M#",G..w&_I59M~JOW
ZqK,O)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.258 ns/op
# Warmup Iteration   2: 11.202 ns/op
# Warmup Iteration   3: 11.168 ns/op
# Warmup Iteration   4: 11.178 ns/op
# Warmup Iteration   5: 11.167 ns/op
Iteration   1: 11.167 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.167 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.167 ns/op
Iteration  11: 11.169 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.167 ns/op
Iteration  14: 11.168 ns/op
Iteration  15: 11.167 ns/op
Iteration  16: 11.167 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.167 ns/op
Iteration  19: 11.168 ns/op
Iteration  20: 11.168 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.206 ns/op
# Warmup Iteration   2: 11.202 ns/op
# Warmup Iteration   3: 11.179 ns/op
# Warmup Iteration   4: 11.168 ns/op
# Warmup Iteration   5: 11.170 ns/op
Iteration   1: 11.167 ns/op
Iteration   2: 11.167 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.169 ns/op
Iteration   5: 11.171 ns/op
Iteration   6: 11.171 ns/op
Iteration   7: 11.167 ns/op
Iteration   8: 11.170 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.167 ns/op
Iteration  11: 11.167 ns/op
Iteration  12: 11.170 ns/op
Iteration  13: 11.173 ns/op
Iteration  14: 11.170 ns/op
Iteration  15: 11.174 ns/op
Iteration  16: 11.171 ns/op
Iteration  17: 11.170 ns/op
Iteration  18: 11.173 ns/op
Iteration  19: 11.170 ns/op
Iteration  20: 11.171 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.252 ns/op
# Warmup Iteration   2: 11.210 ns/op
# Warmup Iteration   3: 11.169 ns/op
# Warmup Iteration   4: 11.171 ns/op
# Warmup Iteration   5: 11.175 ns/op
Iteration   1: 11.170 ns/op
Iteration   2: 11.174 ns/op
Iteration   3: 11.174 ns/op
Iteration   4: 11.173 ns/op
Iteration   5: 11.175 ns/op
Iteration   6: 11.171 ns/op
Iteration   7: 11.169 ns/op
Iteration   8: 11.173 ns/op
Iteration   9: 11.173 ns/op
Iteration  10: 11.174 ns/op
Iteration  11: 11.170 ns/op
Iteration  12: 11.174 ns/op
Iteration  13: 11.172 ns/op
Iteration  14: 11.169 ns/op
Iteration  15: 11.172 ns/op
Iteration  16: 11.175 ns/op
Iteration  17: 11.174 ns/op
Iteration  18: 11.182 ns/op
Iteration  19: 11.172 ns/op
Iteration  20: 11.176 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.260 ns/op
# Warmup Iteration   2: 11.207 ns/op
# Warmup Iteration   3: 11.175 ns/op
# Warmup Iteration   4: 11.172 ns/op
# Warmup Iteration   5: 11.173 ns/op
Iteration   1: 11.174 ns/op
Iteration   2: 11.166 ns/op
Iteration   3: 11.166 ns/op
Iteration   4: 11.166 ns/op
Iteration   5: 11.166 ns/op
Iteration   6: 11.166 ns/op
Iteration   7: 11.166 ns/op
Iteration   8: 11.169 ns/op
Iteration   9: 11.167 ns/op
Iteration  10: 11.167 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.167 ns/op
Iteration  13: 11.166 ns/op
Iteration  14: 11.166 ns/op
Iteration  15: 11.166 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.167 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.166 ns/op
Iteration  20: 11.169 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.287 ns/op
# Warmup Iteration   2: 11.206 ns/op
# Warmup Iteration   3: 11.207 ns/op
# Warmup Iteration   4: 11.213 ns/op
# Warmup Iteration   5: 11.207 ns/op
Iteration   1: 11.207 ns/op
Iteration   2: 11.207 ns/op
Iteration   3: 11.207 ns/op
Iteration   4: 11.207 ns/op
Iteration   5: 11.210 ns/op
Iteration   6: 11.213 ns/op
Iteration   7: 11.207 ns/op
Iteration   8: 11.209 ns/op
Iteration   9: 11.207 ns/op
Iteration  10: 11.208 ns/op
Iteration  11: 11.207 ns/op
Iteration  12: 11.207 ns/op
Iteration  13: 11.208 ns/op
Iteration  14: 11.207 ns/op
Iteration  15: 11.207 ns/op
Iteration  16: 11.207 ns/op
Iteration  17: 11.207 ns/op
Iteration  18: 11.207 ns/op
Iteration  19: 11.213 ns/op
Iteration  20: 11.210 ns/op


Result "benchmark.StringContains.stringContains":
  11.177 ±(99.9%) 0.005 ns/op [Average]
  (min, avg, max) = (11.166, 11.177, 11.213), stdev = 0.016
  CI (99.9%): [11.172, 11.183] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ay6Ys1`M#",G..w&_I59M~JOW
ZqK,O  avgt  100  124.977 ± 1.440  ns/op
StringContains.stringContains     http  ay6Ys1`M#",G..w&_I59M~JOW
ZqK,O  avgt  100   11.177 ± 0.005  ns/op

Benchmark result is saved to http_32_1_12.csv
