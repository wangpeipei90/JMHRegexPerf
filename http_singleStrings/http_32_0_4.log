# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpjS	rx3b+UGBOrTB`Z?JfusrRg~
")

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 501.696 ns/op
# Warmup Iteration   2: 523.398 ns/op
# Warmup Iteration   3: 522.691 ns/op
# Warmup Iteration   4: 454.033 ns/op
# Warmup Iteration   5: 442.809 ns/op
Iteration   1: 446.615 ns/op
Iteration   2: 442.451 ns/op
Iteration   3: 443.081 ns/op
Iteration   4: 449.515 ns/op
Iteration   5: 444.297 ns/op
Iteration   6: 451.053 ns/op
Iteration   7: 442.644 ns/op
Iteration   8: 442.925 ns/op
Iteration   9: 452.517 ns/op
Iteration  10: 442.166 ns/op
Iteration  11: 443.374 ns/op
Iteration  12: 457.468 ns/op
Iteration  13: 444.271 ns/op
Iteration  14: 444.591 ns/op
Iteration  15: 444.987 ns/op
Iteration  16: 442.623 ns/op
Iteration  17: 442.868 ns/op
Iteration  18: 444.951 ns/op
Iteration  19: 442.729 ns/op
Iteration  20: 445.826 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 499.136 ns/op
# Warmup Iteration   2: 518.615 ns/op
# Warmup Iteration   3: 519.529 ns/op
# Warmup Iteration   4: 451.378 ns/op
# Warmup Iteration   5: 444.624 ns/op
Iteration   1: 448.543 ns/op
Iteration   2: 443.218 ns/op
Iteration   3: 443.353 ns/op
Iteration   4: 449.086 ns/op
Iteration   5: 443.603 ns/op
Iteration   6: 450.227 ns/op
Iteration   7: 442.977 ns/op
Iteration   8: 442.890 ns/op
Iteration   9: 453.255 ns/op
Iteration  10: 442.928 ns/op
Iteration  11: 443.264 ns/op
Iteration  12: 455.868 ns/op
Iteration  13: 443.002 ns/op
Iteration  14: 442.795 ns/op
Iteration  15: 445.566 ns/op
Iteration  16: 442.765 ns/op
Iteration  17: 445.467 ns/op
Iteration  18: 443.083 ns/op
Iteration  19: 442.571 ns/op
Iteration  20: 445.192 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 488.041 ns/op
# Warmup Iteration   2: 501.528 ns/op
# Warmup Iteration   3: 508.514 ns/op
# Warmup Iteration   4: 429.406 ns/op
# Warmup Iteration   5: 429.175 ns/op
Iteration   1: 433.318 ns/op
Iteration   2: 428.697 ns/op
Iteration   3: 434.176 ns/op
Iteration   4: 429.325 ns/op
Iteration   5: 429.753 ns/op
Iteration   6: 439.521 ns/op
Iteration   7: 432.298 ns/op
Iteration   8: 436.426 ns/op
Iteration   9: 435.217 ns/op
Iteration  10: 429.312 ns/op
Iteration  11: 441.735 ns/op
Iteration  12: 429.174 ns/op
Iteration  13: 428.826 ns/op
Iteration  14: 434.666 ns/op
Iteration  15: 435.637 ns/op
Iteration  16: 435.936 ns/op
Iteration  17: 433.842 ns/op
Iteration  18: 429.131 ns/op
Iteration  19: 429.210 ns/op
Iteration  20: 430.929 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 485.693 ns/op
# Warmup Iteration   2: 501.335 ns/op
# Warmup Iteration   3: 504.232 ns/op
# Warmup Iteration   4: 431.699 ns/op
# Warmup Iteration   5: 428.765 ns/op
Iteration   1: 433.202 ns/op
Iteration   2: 428.505 ns/op
Iteration   3: 437.307 ns/op
Iteration   4: 428.889 ns/op
Iteration   5: 428.683 ns/op
Iteration   6: 435.935 ns/op
Iteration   7: 428.685 ns/op
Iteration   8: 430.246 ns/op
Iteration   9: 436.690 ns/op
Iteration  10: 428.882 ns/op
Iteration  11: 440.482 ns/op
Iteration  12: 428.457 ns/op
Iteration  13: 428.666 ns/op
Iteration  14: 430.523 ns/op
Iteration  15: 428.504 ns/op
Iteration  16: 428.770 ns/op
Iteration  17: 430.718 ns/op
Iteration  18: 428.696 ns/op
Iteration  19: 428.569 ns/op
Iteration  20: 430.719 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 487.582 ns/op
# Warmup Iteration   2: 500.744 ns/op
# Warmup Iteration   3: 506.083 ns/op
# Warmup Iteration   4: 429.386 ns/op
# Warmup Iteration   5: 429.394 ns/op
Iteration   1: 432.838 ns/op
Iteration   2: 429.384 ns/op
Iteration   3: 434.358 ns/op
Iteration   4: 428.972 ns/op
Iteration   5: 428.987 ns/op
Iteration   6: 435.808 ns/op
Iteration   7: 428.779 ns/op
Iteration   8: 435.881 ns/op
Iteration   9: 431.519 ns/op
Iteration  10: 429.399 ns/op
Iteration  11: 441.419 ns/op
Iteration  12: 428.936 ns/op
Iteration  13: 428.852 ns/op
Iteration  14: 431.254 ns/op
Iteration  15: 429.843 ns/op
Iteration  16: 430.773 ns/op
Iteration  17: 432.386 ns/op
Iteration  18: 429.026 ns/op
Iteration  19: 429.057 ns/op
Iteration  20: 431.087 ns/op


Result "benchmark.StringContains.regexMatches":
  437.274 ±(99.9%) 2.618 ns/op [Average]
  (min, avg, max) = (428.457, 437.274, 457.468), stdev = 7.719
  CI (99.9%): [434.656, 439.892] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpjS	rx3b+UGBOrTB`Z?JfusrRg~
")

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.441 ns/op
# Warmup Iteration   2: 9.740 ns/op
# Warmup Iteration   3: 9.888 ns/op
# Warmup Iteration   4: 9.861 ns/op
# Warmup Iteration   5: 9.871 ns/op
Iteration   1: 9.878 ns/op
Iteration   2: 9.875 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.871 ns/op
Iteration   5: 9.891 ns/op
Iteration   6: 9.865 ns/op
Iteration   7: 9.880 ns/op
Iteration   8: 9.865 ns/op
Iteration   9: 9.847 ns/op
Iteration  10: 9.859 ns/op
Iteration  11: 9.880 ns/op
Iteration  12: 9.880 ns/op
Iteration  13: 9.872 ns/op
Iteration  14: 9.865 ns/op
Iteration  15: 9.879 ns/op
Iteration  16: 9.890 ns/op
Iteration  17: 9.866 ns/op
Iteration  18: 9.878 ns/op
Iteration  19: 9.861 ns/op
Iteration  20: 9.882 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.485 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.830 ns/op
# Warmup Iteration   4: 9.825 ns/op
# Warmup Iteration   5: 9.832 ns/op
Iteration   1: 9.838 ns/op
Iteration   2: 9.812 ns/op
Iteration   3: 9.830 ns/op
Iteration   4: 9.840 ns/op
Iteration   5: 9.835 ns/op
Iteration   6: 9.836 ns/op
Iteration   7: 9.834 ns/op
Iteration   8: 9.836 ns/op
Iteration   9: 9.818 ns/op
Iteration  10: 9.820 ns/op
Iteration  11: 9.829 ns/op
Iteration  12: 9.830 ns/op
Iteration  13: 9.812 ns/op
Iteration  14: 9.828 ns/op
Iteration  15: 9.829 ns/op
Iteration  16: 9.828 ns/op
Iteration  17: 9.829 ns/op
Iteration  18: 9.838 ns/op
Iteration  19: 9.836 ns/op
Iteration  20: 9.831 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.455 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.866 ns/op
# Warmup Iteration   4: 9.840 ns/op
# Warmup Iteration   5: 9.851 ns/op
Iteration   1: 9.843 ns/op
Iteration   2: 9.858 ns/op
Iteration   3: 9.828 ns/op
Iteration   4: 9.862 ns/op
Iteration   5: 9.836 ns/op
Iteration   6: 9.868 ns/op
Iteration   7: 9.860 ns/op
Iteration   8: 9.861 ns/op
Iteration   9: 9.850 ns/op
Iteration  10: 9.854 ns/op
Iteration  11: 9.853 ns/op
Iteration  12: 9.854 ns/op
Iteration  13: 9.866 ns/op
Iteration  14: 9.854 ns/op
Iteration  15: 9.848 ns/op
Iteration  16: 9.859 ns/op
Iteration  17: 9.855 ns/op
Iteration  18: 9.844 ns/op
Iteration  19: 9.853 ns/op
Iteration  20: 9.852 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.206 ns/op
# Warmup Iteration   2: 9.732 ns/op
# Warmup Iteration   3: 9.844 ns/op
# Warmup Iteration   4: 9.846 ns/op
# Warmup Iteration   5: 9.852 ns/op
Iteration   1: 9.849 ns/op
Iteration   2: 9.832 ns/op
Iteration   3: 9.841 ns/op
Iteration   4: 9.832 ns/op
Iteration   5: 9.830 ns/op
Iteration   6: 9.841 ns/op
Iteration   7: 9.833 ns/op
Iteration   8: 9.826 ns/op
Iteration   9: 9.817 ns/op
Iteration  10: 9.819 ns/op
Iteration  11: 9.820 ns/op
Iteration  12: 9.835 ns/op
Iteration  13: 9.834 ns/op
Iteration  14: 9.822 ns/op
Iteration  15: 9.836 ns/op
Iteration  16: 9.823 ns/op
Iteration  17: 9.818 ns/op
Iteration  18: 9.823 ns/op
Iteration  19: 9.832 ns/op
Iteration  20: 9.838 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.460 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.951 ns/op
# Warmup Iteration   4: 9.926 ns/op
# Warmup Iteration   5: 9.948 ns/op
Iteration   1: 9.952 ns/op
Iteration   2: 9.951 ns/op
Iteration   3: 9.980 ns/op
Iteration   4: 9.966 ns/op
Iteration   5: 9.954 ns/op
Iteration   6: 9.958 ns/op
Iteration   7: 9.942 ns/op
Iteration   8: 9.968 ns/op
Iteration   9: 9.944 ns/op
Iteration  10: 9.964 ns/op
Iteration  11: 9.944 ns/op
Iteration  12: 9.952 ns/op
Iteration  13: 9.935 ns/op
Iteration  14: 9.939 ns/op
Iteration  15: 9.950 ns/op
Iteration  16: 9.955 ns/op
Iteration  17: 9.941 ns/op
Iteration  18: 9.943 ns/op
Iteration  19: 9.961 ns/op
Iteration  20: 9.953 ns/op


Result "benchmark.StringContains.stringContains":
  9.868 ±(99.9%) 0.016 ns/op [Average]
  (min, avg, max) = (9.812, 9.868, 9.980), stdev = 0.047
  CI (99.9%): [9.852, 9.883] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpjS	rx3b+UGBOrTB`Z?JfusrRg~
"  avgt  100  437.274 ± 2.618  ns/op
StringContains.stringContains     http  httpjS	rx3b+UGBOrTB`Z?JfusrRg~
"  avgt  100    9.868 ± 0.016  ns/op

Benchmark result is saved to http_32_0_4.csv
