# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ?(55http)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 222.657 ns/op
# Warmup Iteration   2: 152.677 ns/op
# Warmup Iteration   3: 133.891 ns/op
# Warmup Iteration   4: 132.966 ns/op
# Warmup Iteration   5: 133.648 ns/op
Iteration   1: 134.543 ns/op
Iteration   2: 132.105 ns/op
Iteration   3: 131.424 ns/op
Iteration   4: 131.288 ns/op
Iteration   5: 131.313 ns/op
Iteration   6: 131.304 ns/op
Iteration   7: 131.340 ns/op
Iteration   8: 131.935 ns/op
Iteration   9: 130.973 ns/op
Iteration  10: 130.968 ns/op
Iteration  11: 131.039 ns/op
Iteration  12: 131.022 ns/op
Iteration  13: 131.471 ns/op
Iteration  14: 131.301 ns/op
Iteration  15: 131.122 ns/op
Iteration  16: 131.095 ns/op
Iteration  17: 131.073 ns/op
Iteration  18: 131.648 ns/op
Iteration  19: 131.069 ns/op
Iteration  20: 131.085 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 211.060 ns/op
# Warmup Iteration   2: 149.405 ns/op
# Warmup Iteration   3: 132.626 ns/op
# Warmup Iteration   4: 132.955 ns/op
# Warmup Iteration   5: 133.585 ns/op
Iteration   1: 135.133 ns/op
Iteration   2: 132.709 ns/op
Iteration   3: 131.518 ns/op
Iteration   4: 131.388 ns/op
Iteration   5: 131.585 ns/op
Iteration   6: 131.398 ns/op
Iteration   7: 132.363 ns/op
Iteration   8: 131.398 ns/op
Iteration   9: 131.025 ns/op
Iteration  10: 131.010 ns/op
Iteration  11: 130.925 ns/op
Iteration  12: 131.633 ns/op
Iteration  13: 130.831 ns/op
Iteration  14: 131.026 ns/op
Iteration  15: 130.953 ns/op
Iteration  16: 130.918 ns/op
Iteration  17: 131.051 ns/op
Iteration  18: 131.701 ns/op
Iteration  19: 131.388 ns/op
Iteration  20: 131.231 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 218.285 ns/op
# Warmup Iteration   2: 144.601 ns/op
# Warmup Iteration   3: 128.622 ns/op
# Warmup Iteration   4: 128.526 ns/op
# Warmup Iteration   5: 128.570 ns/op
Iteration   1: 130.051 ns/op
Iteration   2: 126.370 ns/op
Iteration   3: 126.315 ns/op
Iteration   4: 126.214 ns/op
Iteration   5: 126.199 ns/op
Iteration   6: 126.805 ns/op
Iteration   7: 126.134 ns/op
Iteration   8: 126.204 ns/op
Iteration   9: 125.822 ns/op
Iteration  10: 126.087 ns/op
Iteration  11: 125.840 ns/op
Iteration  12: 125.984 ns/op
Iteration  13: 125.863 ns/op
Iteration  14: 126.146 ns/op
Iteration  15: 125.915 ns/op
Iteration  16: 125.842 ns/op
Iteration  17: 125.884 ns/op
Iteration  18: 126.186 ns/op
Iteration  19: 126.104 ns/op
Iteration  20: 126.051 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 213.188 ns/op
# Warmup Iteration   2: 144.383 ns/op
# Warmup Iteration   3: 127.859 ns/op
# Warmup Iteration   4: 128.407 ns/op
# Warmup Iteration   5: 129.148 ns/op
Iteration   1: 130.527 ns/op
Iteration   2: 126.847 ns/op
Iteration   3: 126.751 ns/op
Iteration   4: 126.792 ns/op
Iteration   5: 126.764 ns/op
Iteration   6: 127.422 ns/op
Iteration   7: 126.835 ns/op
Iteration   8: 126.759 ns/op
Iteration   9: 126.447 ns/op
Iteration  10: 126.615 ns/op
Iteration  11: 126.604 ns/op
Iteration  12: 126.526 ns/op
Iteration  13: 126.752 ns/op
Iteration  14: 127.593 ns/op
Iteration  15: 126.780 ns/op
Iteration  16: 126.822 ns/op
Iteration  17: 126.585 ns/op
Iteration  18: 126.516 ns/op
Iteration  19: 126.917 ns/op
Iteration  20: 126.843 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 223.060 ns/op
# Warmup Iteration   2: 157.165 ns/op
# Warmup Iteration   3: 138.818 ns/op
# Warmup Iteration   4: 138.075 ns/op
# Warmup Iteration   5: 138.697 ns/op
Iteration   1: 139.704 ns/op
Iteration   2: 136.274 ns/op
Iteration   3: 136.294 ns/op
Iteration   4: 136.784 ns/op
Iteration   5: 136.268 ns/op
Iteration   6: 136.267 ns/op
Iteration   7: 136.370 ns/op
Iteration   8: 136.371 ns/op
Iteration   9: 136.587 ns/op
Iteration  10: 136.218 ns/op
Iteration  11: 136.844 ns/op
Iteration  12: 136.071 ns/op
Iteration  13: 135.972 ns/op
Iteration  14: 136.264 ns/op
Iteration  15: 136.172 ns/op
Iteration  16: 136.274 ns/op
Iteration  17: 136.135 ns/op
Iteration  18: 137.078 ns/op
Iteration  19: 136.367 ns/op
Iteration  20: 136.400 ns/op


Result "benchmark.StringContains.regexMatches":
  130.567 ±(99.9%) 1.294 ns/op [Average]
  (min, avg, max) = (125.822, 130.567, 139.704), stdev = 3.815
  CI (99.9%): [129.274, 131.861] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ?(55http)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.109 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.863 ns/op
# Warmup Iteration   4: 9.868 ns/op
# Warmup Iteration   5: 9.857 ns/op
Iteration   1: 9.884 ns/op
Iteration   2: 9.877 ns/op
Iteration   3: 9.860 ns/op
Iteration   4: 9.880 ns/op
Iteration   5: 9.867 ns/op
Iteration   6: 9.861 ns/op
Iteration   7: 9.864 ns/op
Iteration   8: 9.860 ns/op
Iteration   9: 9.869 ns/op
Iteration  10: 9.864 ns/op
Iteration  11: 9.881 ns/op
Iteration  12: 9.878 ns/op
Iteration  13: 9.866 ns/op
Iteration  14: 9.869 ns/op
Iteration  15: 9.872 ns/op
Iteration  16: 9.852 ns/op
Iteration  17: 9.881 ns/op
Iteration  18: 9.867 ns/op
Iteration  19: 9.860 ns/op
Iteration  20: 9.851 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.094 ns/op
# Warmup Iteration   2: 10.474 ns/op
# Warmup Iteration   3: 10.043 ns/op
# Warmup Iteration   4: 10.037 ns/op
# Warmup Iteration   5: 10.038 ns/op
Iteration   1: 10.042 ns/op
Iteration   2: 10.031 ns/op
Iteration   3: 10.041 ns/op
Iteration   4: 10.044 ns/op
Iteration   5: 10.043 ns/op
Iteration   6: 10.042 ns/op
Iteration   7: 10.038 ns/op
Iteration   8: 10.054 ns/op
Iteration   9: 10.045 ns/op
Iteration  10: 10.032 ns/op
Iteration  11: 10.042 ns/op
Iteration  12: 10.038 ns/op
Iteration  13: 10.043 ns/op
Iteration  14: 10.039 ns/op
Iteration  15: 10.031 ns/op
Iteration  16: 10.036 ns/op
Iteration  17: 10.042 ns/op
Iteration  18: 10.042 ns/op
Iteration  19: 10.039 ns/op
Iteration  20: 10.054 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.083 ns/op
# Warmup Iteration   2: 10.471 ns/op
# Warmup Iteration   3: 9.891 ns/op
# Warmup Iteration   4: 9.877 ns/op
# Warmup Iteration   5: 9.884 ns/op
Iteration   1: 9.854 ns/op
Iteration   2: 9.863 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.868 ns/op
Iteration   5: 9.864 ns/op
Iteration   6: 9.877 ns/op
Iteration   7: 9.866 ns/op
Iteration   8: 9.880 ns/op
Iteration   9: 9.874 ns/op
Iteration  10: 9.874 ns/op
Iteration  11: 9.898 ns/op
Iteration  12: 9.883 ns/op
Iteration  13: 9.880 ns/op
Iteration  14: 9.880 ns/op
Iteration  15: 9.871 ns/op
Iteration  16: 9.865 ns/op
Iteration  17: 9.897 ns/op
Iteration  18: 9.882 ns/op
Iteration  19: 9.889 ns/op
Iteration  20: 9.866 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.069 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.882 ns/op
# Warmup Iteration   4: 9.883 ns/op
# Warmup Iteration   5: 9.885 ns/op
Iteration   1: 9.890 ns/op
Iteration   2: 9.858 ns/op
Iteration   3: 9.880 ns/op
Iteration   4: 9.897 ns/op
Iteration   5: 9.861 ns/op
Iteration   6: 9.881 ns/op
Iteration   7: 9.881 ns/op
Iteration   8: 9.892 ns/op
Iteration   9: 9.891 ns/op
Iteration  10: 9.904 ns/op
Iteration  11: 9.891 ns/op
Iteration  12: 9.912 ns/op
Iteration  13: 9.885 ns/op
Iteration  14: 9.902 ns/op
Iteration  15: 9.893 ns/op
Iteration  16: 9.867 ns/op
Iteration  17: 9.892 ns/op
Iteration  18: 9.872 ns/op
Iteration  19: 9.860 ns/op
Iteration  20: 9.887 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.069 ns/op
# Warmup Iteration   2: 10.478 ns/op
# Warmup Iteration   3: 10.044 ns/op
# Warmup Iteration   4: 10.055 ns/op
# Warmup Iteration   5: 10.059 ns/op
Iteration   1: 10.068 ns/op
Iteration   2: 10.050 ns/op
Iteration   3: 10.045 ns/op
Iteration   4: 10.043 ns/op
Iteration   5: 10.021 ns/op
Iteration   6: 10.067 ns/op
Iteration   7: 10.048 ns/op
Iteration   8: 10.022 ns/op
Iteration   9: 10.019 ns/op
Iteration  10: 10.040 ns/op
Iteration  11: 10.011 ns/op
Iteration  12: 10.028 ns/op
Iteration  13: 10.013 ns/op
Iteration  14: 10.022 ns/op
Iteration  15: 9.987 ns/op
Iteration  16: 10.035 ns/op
Iteration  17: 10.024 ns/op
Iteration  18: 10.003 ns/op
Iteration  19: 9.993 ns/op
Iteration  20: 10.027 ns/op


Result "benchmark.StringContains.stringContains":
  9.939 ±(99.9%) 0.027 ns/op [Average]
  (min, avg, max) = (9.851, 9.939, 10.068), stdev = 0.080
  CI (99.9%): [9.912, 9.966] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ?(55http  avgt  100  130.567 ± 1.294  ns/op
StringContains.stringContains     http  ?(55http  avgt  100    9.939 ± 0.027  ns/op

Benchmark result is saved to http_8_0.5_7.csv
