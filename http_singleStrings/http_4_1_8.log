# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = >UsE)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 175.652 ns/op
# Warmup Iteration   2: 93.671 ns/op
# Warmup Iteration   3: 90.909 ns/op
# Warmup Iteration   4: 92.993 ns/op
# Warmup Iteration   5: 88.958 ns/op
Iteration   1: 89.468 ns/op
Iteration   2: 88.762 ns/op
Iteration   3: 88.800 ns/op
Iteration   4: 88.857 ns/op
Iteration   5: 88.602 ns/op
Iteration   6: 88.304 ns/op
Iteration   7: 88.329 ns/op
Iteration   8: 88.387 ns/op
Iteration   9: 88.066 ns/op
Iteration  10: 88.246 ns/op
Iteration  11: 88.163 ns/op
Iteration  12: 89.060 ns/op
Iteration  13: 88.323 ns/op
Iteration  14: 88.074 ns/op
Iteration  15: 88.421 ns/op
Iteration  16: 88.986 ns/op
Iteration  17: 88.983 ns/op
Iteration  18: 88.236 ns/op
Iteration  19: 88.471 ns/op
Iteration  20: 88.584 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 168.995 ns/op
# Warmup Iteration   2: 91.662 ns/op
# Warmup Iteration   3: 90.376 ns/op
# Warmup Iteration   4: 92.357 ns/op
# Warmup Iteration   5: 88.600 ns/op
Iteration   1: 88.496 ns/op
Iteration   2: 88.082 ns/op
Iteration   3: 88.485 ns/op
Iteration   4: 88.712 ns/op
Iteration   5: 88.050 ns/op
Iteration   6: 87.900 ns/op
Iteration   7: 88.090 ns/op
Iteration   8: 88.124 ns/op
Iteration   9: 88.309 ns/op
Iteration  10: 87.938 ns/op
Iteration  11: 88.272 ns/op
Iteration  12: 88.156 ns/op
Iteration  13: 88.494 ns/op
Iteration  14: 88.011 ns/op
Iteration  15: 88.345 ns/op
Iteration  16: 88.443 ns/op
Iteration  17: 88.525 ns/op
Iteration  18: 88.528 ns/op
Iteration  19: 88.163 ns/op
Iteration  20: 88.416 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 167.019 ns/op
# Warmup Iteration   2: 90.623 ns/op
# Warmup Iteration   3: 89.876 ns/op
# Warmup Iteration   4: 91.817 ns/op
# Warmup Iteration   5: 88.053 ns/op
Iteration   1: 87.948 ns/op
Iteration   2: 87.708 ns/op
Iteration   3: 88.046 ns/op
Iteration   4: 88.043 ns/op
Iteration   5: 89.371 ns/op
Iteration   6: 87.466 ns/op
Iteration   7: 87.708 ns/op
Iteration   8: 87.667 ns/op
Iteration   9: 87.593 ns/op
Iteration  10: 87.755 ns/op
Iteration  11: 87.573 ns/op
Iteration  12: 87.855 ns/op
Iteration  13: 87.859 ns/op
Iteration  14: 87.819 ns/op
Iteration  15: 87.756 ns/op
Iteration  16: 87.772 ns/op
Iteration  17: 87.782 ns/op
Iteration  18: 87.796 ns/op
Iteration  19: 87.527 ns/op
Iteration  20: 87.697 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 172.458 ns/op
# Warmup Iteration   2: 98.979 ns/op
# Warmup Iteration   3: 96.452 ns/op
# Warmup Iteration   4: 98.433 ns/op
# Warmup Iteration   5: 94.229 ns/op
Iteration   1: 95.204 ns/op
Iteration   2: 94.426 ns/op
Iteration   3: 93.972 ns/op
Iteration   4: 94.430 ns/op
Iteration   5: 94.155 ns/op
Iteration   6: 93.940 ns/op
Iteration   7: 94.072 ns/op
Iteration   8: 93.838 ns/op
Iteration   9: 94.129 ns/op
Iteration  10: 94.315 ns/op
Iteration  11: 94.079 ns/op
Iteration  12: 94.657 ns/op
Iteration  13: 94.467 ns/op
Iteration  14: 94.129 ns/op
Iteration  15: 94.563 ns/op
Iteration  16: 94.490 ns/op
Iteration  17: 94.090 ns/op
Iteration  18: 94.576 ns/op
Iteration  19: 94.419 ns/op
Iteration  20: 93.916 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 168.609 ns/op
# Warmup Iteration   2: 91.205 ns/op
# Warmup Iteration   3: 90.434 ns/op
# Warmup Iteration   4: 92.416 ns/op
# Warmup Iteration   5: 88.609 ns/op
Iteration   1: 88.598 ns/op
Iteration   2: 88.728 ns/op
Iteration   3: 88.666 ns/op
Iteration   4: 88.584 ns/op
Iteration   5: 88.148 ns/op
Iteration   6: 88.023 ns/op
Iteration   7: 88.232 ns/op
Iteration   8: 88.197 ns/op
Iteration   9: 88.229 ns/op
Iteration  10: 88.099 ns/op
Iteration  11: 88.252 ns/op
Iteration  12: 88.397 ns/op
Iteration  13: 88.430 ns/op
Iteration  14: 88.109 ns/op
Iteration  15: 88.410 ns/op
Iteration  16: 88.564 ns/op
Iteration  17: 88.492 ns/op
Iteration  18: 88.010 ns/op
Iteration  19: 88.215 ns/op
Iteration  20: 88.297 ns/op


Result "benchmark.StringContains.regexMatches":
  89.459 ±(99.9%) 0.834 ns/op [Average]
  (min, avg, max) = (87.466, 89.459, 95.204), stdev = 2.460
  CI (99.9%): [88.625, 90.294] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = >UsE)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.431 ns/op
# Warmup Iteration   2: 9.061 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.975 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.968 ns/op
Iteration  16: 8.968 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.968 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.964 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.448 ns/op
# Warmup Iteration   2: 9.089 ns/op
# Warmup Iteration   3: 9.081 ns/op
# Warmup Iteration   4: 9.103 ns/op
# Warmup Iteration   5: 9.105 ns/op
Iteration   1: 9.117 ns/op
Iteration   2: 9.105 ns/op
Iteration   3: 9.126 ns/op
Iteration   4: 9.099 ns/op
Iteration   5: 9.136 ns/op
Iteration   6: 9.129 ns/op
Iteration   7: 9.128 ns/op
Iteration   8: 9.148 ns/op
Iteration   9: 9.122 ns/op
Iteration  10: 9.136 ns/op
Iteration  11: 9.100 ns/op
Iteration  12: 9.109 ns/op
Iteration  13: 9.094 ns/op
Iteration  14: 9.105 ns/op
Iteration  15: 9.121 ns/op
Iteration  16: 9.111 ns/op
Iteration  17: 9.105 ns/op
Iteration  18: 9.127 ns/op
Iteration  19: 9.106 ns/op
Iteration  20: 9.141 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.444 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.968 ns/op
# Warmup Iteration   5: 8.967 ns/op
Iteration   1: 8.970 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.969 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.968 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.968 ns/op
Iteration  18: 8.972 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.967 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.428 ns/op
# Warmup Iteration   2: 9.068 ns/op
# Warmup Iteration   3: 9.143 ns/op
# Warmup Iteration   4: 9.136 ns/op
# Warmup Iteration   5: 9.109 ns/op
Iteration   1: 9.163 ns/op
Iteration   2: 9.141 ns/op
Iteration   3: 9.173 ns/op
Iteration   4: 9.153 ns/op
Iteration   5: 9.148 ns/op
Iteration   6: 9.170 ns/op
Iteration   7: 9.159 ns/op
Iteration   8: 9.149 ns/op
Iteration   9: 9.155 ns/op
Iteration  10: 9.177 ns/op
Iteration  11: 9.138 ns/op
Iteration  12: 9.173 ns/op
Iteration  13: 9.156 ns/op
Iteration  14: 9.151 ns/op
Iteration  15: 9.156 ns/op
Iteration  16: 9.137 ns/op
Iteration  17: 9.150 ns/op
Iteration  18: 9.134 ns/op
Iteration  19: 9.115 ns/op
Iteration  20: 9.118 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.449 ns/op
# Warmup Iteration   2: 9.056 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.969 ns/op
# Warmup Iteration   5: 8.967 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.968 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.967 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.963 ns/op
Iteration  20: 8.964 ns/op


Result "benchmark.StringContains.stringContains":
  9.034 ±(99.9%) 0.028 ns/op [Average]
  (min, avg, max) = (8.963, 9.034, 9.177), stdev = 0.084
  CI (99.9%): [9.005, 9.062] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   >UsE  avgt  100  89.459 ± 0.834  ns/op
StringContains.stringContains     http   >UsE  avgt  100   9.034 ± 0.028  ns/op

Benchmark result is saved to http_4_1_8.csv
