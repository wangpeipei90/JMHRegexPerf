# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = %Whttp`o)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 240.277 ns/op
# Warmup Iteration   2: 175.171 ns/op
# Warmup Iteration   3: 144.573 ns/op
# Warmup Iteration   4: 147.943 ns/op
# Warmup Iteration   5: 146.617 ns/op
Iteration   1: 147.582 ns/op
Iteration   2: 143.970 ns/op
Iteration   3: 143.706 ns/op
Iteration   4: 143.602 ns/op
Iteration   5: 143.774 ns/op
Iteration   6: 143.615 ns/op
Iteration   7: 143.581 ns/op
Iteration   8: 143.705 ns/op
Iteration   9: 143.662 ns/op
Iteration  10: 144.871 ns/op
Iteration  11: 143.224 ns/op
Iteration  12: 143.064 ns/op
Iteration  13: 143.076 ns/op
Iteration  14: 144.225 ns/op
Iteration  15: 143.156 ns/op
Iteration  16: 143.085 ns/op
Iteration  17: 143.364 ns/op
Iteration  18: 143.224 ns/op
Iteration  19: 143.346 ns/op
Iteration  20: 143.422 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 239.767 ns/op
# Warmup Iteration   2: 183.647 ns/op
# Warmup Iteration   3: 157.362 ns/op
# Warmup Iteration   4: 157.766 ns/op
# Warmup Iteration   5: 159.225 ns/op
Iteration   1: 159.314 ns/op
Iteration   2: 160.102 ns/op
Iteration   3: 156.413 ns/op
Iteration   4: 156.434 ns/op
Iteration   5: 156.568 ns/op
Iteration   6: 156.522 ns/op
Iteration   7: 156.479 ns/op
Iteration   8: 156.441 ns/op
Iteration   9: 156.377 ns/op
Iteration  10: 156.628 ns/op
Iteration  11: 156.558 ns/op
Iteration  12: 156.892 ns/op
Iteration  13: 155.911 ns/op
Iteration  14: 155.987 ns/op
Iteration  15: 155.900 ns/op
Iteration  16: 155.967 ns/op
Iteration  17: 155.998 ns/op
Iteration  18: 155.886 ns/op
Iteration  19: 156.019 ns/op
Iteration  20: 156.008 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 241.889 ns/op
# Warmup Iteration   2: 177.512 ns/op
# Warmup Iteration   3: 152.014 ns/op
# Warmup Iteration   4: 152.764 ns/op
# Warmup Iteration   5: 156.249 ns/op
Iteration   1: 154.941 ns/op
Iteration   2: 151.729 ns/op
Iteration   3: 151.294 ns/op
Iteration   4: 151.131 ns/op
Iteration   5: 151.229 ns/op
Iteration   6: 151.182 ns/op
Iteration   7: 151.100 ns/op
Iteration   8: 151.658 ns/op
Iteration   9: 151.296 ns/op
Iteration  10: 151.202 ns/op
Iteration  11: 150.587 ns/op
Iteration  12: 150.575 ns/op
Iteration  13: 150.546 ns/op
Iteration  14: 150.564 ns/op
Iteration  15: 150.487 ns/op
Iteration  16: 150.711 ns/op
Iteration  17: 150.574 ns/op
Iteration  18: 150.575 ns/op
Iteration  19: 151.727 ns/op
Iteration  20: 151.150 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 239.887 ns/op
# Warmup Iteration   2: 181.505 ns/op
# Warmup Iteration   3: 152.931 ns/op
# Warmup Iteration   4: 153.385 ns/op
# Warmup Iteration   5: 154.802 ns/op
Iteration   1: 155.725 ns/op
Iteration   2: 153.862 ns/op
Iteration   3: 152.907 ns/op
Iteration   4: 152.115 ns/op
Iteration   5: 152.123 ns/op
Iteration   6: 152.051 ns/op
Iteration   7: 152.095 ns/op
Iteration   8: 152.076 ns/op
Iteration   9: 152.088 ns/op
Iteration  10: 152.215 ns/op
Iteration  11: 151.688 ns/op
Iteration  12: 151.602 ns/op
Iteration  13: 151.613 ns/op
Iteration  14: 151.753 ns/op
Iteration  15: 151.700 ns/op
Iteration  16: 151.775 ns/op
Iteration  17: 151.761 ns/op
Iteration  18: 151.808 ns/op
Iteration  19: 151.829 ns/op
Iteration  20: 152.102 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 244.151 ns/op
# Warmup Iteration   2: 175.721 ns/op
# Warmup Iteration   3: 156.882 ns/op
# Warmup Iteration   4: 157.195 ns/op
# Warmup Iteration   5: 157.932 ns/op
Iteration   1: 158.656 ns/op
Iteration   2: 159.785 ns/op
Iteration   3: 156.012 ns/op
Iteration   4: 155.898 ns/op
Iteration   5: 155.799 ns/op
Iteration   6: 155.809 ns/op
Iteration   7: 155.807 ns/op
Iteration   8: 155.943 ns/op
Iteration   9: 156.802 ns/op
Iteration  10: 155.906 ns/op
Iteration  11: 156.260 ns/op
Iteration  12: 155.508 ns/op
Iteration  13: 155.502 ns/op
Iteration  14: 155.456 ns/op
Iteration  15: 155.537 ns/op
Iteration  16: 155.556 ns/op
Iteration  17: 155.551 ns/op
Iteration  18: 155.596 ns/op
Iteration  19: 155.481 ns/op
Iteration  20: 155.530 ns/op


Result "benchmark.StringContains.regexMatches":
  151.992 ±(99.9%) 1.613 ns/op [Average]
  (min, avg, max) = (143.064, 151.992, 160.102), stdev = 4.756
  CI (99.9%): [150.379, 153.605] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = %Whttp`o)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.172 ns/op
# Warmup Iteration   2: 10.642 ns/op
# Warmup Iteration   3: 10.040 ns/op
# Warmup Iteration   4: 10.051 ns/op
# Warmup Iteration   5: 10.039 ns/op
Iteration   1: 10.041 ns/op
Iteration   2: 10.047 ns/op
Iteration   3: 10.040 ns/op
Iteration   4: 10.042 ns/op
Iteration   5: 10.043 ns/op
Iteration   6: 10.040 ns/op
Iteration   7: 10.044 ns/op
Iteration   8: 10.048 ns/op
Iteration   9: 10.040 ns/op
Iteration  10: 10.039 ns/op
Iteration  11: 10.038 ns/op
Iteration  12: 10.039 ns/op
Iteration  13: 10.040 ns/op
Iteration  14: 10.045 ns/op
Iteration  15: 10.044 ns/op
Iteration  16: 10.043 ns/op
Iteration  17: 10.044 ns/op
Iteration  18: 10.044 ns/op
Iteration  19: 10.043 ns/op
Iteration  20: 10.037 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.214 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.920 ns/op
# Warmup Iteration   4: 9.926 ns/op
# Warmup Iteration   5: 9.933 ns/op
Iteration   1: 9.934 ns/op
Iteration   2: 9.930 ns/op
Iteration   3: 9.939 ns/op
Iteration   4: 9.946 ns/op
Iteration   5: 9.947 ns/op
Iteration   6: 9.938 ns/op
Iteration   7: 9.938 ns/op
Iteration   8: 9.934 ns/op
Iteration   9: 9.925 ns/op
Iteration  10: 9.928 ns/op
Iteration  11: 9.913 ns/op
Iteration  12: 9.921 ns/op
Iteration  13: 9.928 ns/op
Iteration  14: 9.920 ns/op
Iteration  15: 9.914 ns/op
Iteration  16: 9.919 ns/op
Iteration  17: 9.921 ns/op
Iteration  18: 9.922 ns/op
Iteration  19: 9.918 ns/op
Iteration  20: 9.935 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.165 ns/op
# Warmup Iteration   2: 10.467 ns/op
# Warmup Iteration   3: 10.028 ns/op
# Warmup Iteration   4: 10.017 ns/op
# Warmup Iteration   5: 10.012 ns/op
Iteration   1: 10.010 ns/op
Iteration   2: 9.997 ns/op
Iteration   3: 10.023 ns/op
Iteration   4: 10.025 ns/op
Iteration   5: 10.012 ns/op
Iteration   6: 10.011 ns/op
Iteration   7: 10.012 ns/op
Iteration   8: 10.032 ns/op
Iteration   9: 10.011 ns/op
Iteration  10: 10.003 ns/op
Iteration  11: 10.031 ns/op
Iteration  12: 10.007 ns/op
Iteration  13: 10.016 ns/op
Iteration  14: 10.004 ns/op
Iteration  15: 10.035 ns/op
Iteration  16: 10.013 ns/op
Iteration  17: 10.002 ns/op
Iteration  18: 10.041 ns/op
Iteration  19: 10.013 ns/op
Iteration  20: 9.996 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.043 ns/op
# Warmup Iteration   2: 10.462 ns/op
# Warmup Iteration   3: 9.917 ns/op
# Warmup Iteration   4: 9.879 ns/op
# Warmup Iteration   5: 9.911 ns/op
Iteration   1: 9.903 ns/op
Iteration   2: 9.894 ns/op
Iteration   3: 9.898 ns/op
Iteration   4: 9.914 ns/op
Iteration   5: 9.895 ns/op
Iteration   6: 9.898 ns/op
Iteration   7: 9.919 ns/op
Iteration   8: 9.901 ns/op
Iteration   9: 9.904 ns/op
Iteration  10: 9.905 ns/op
Iteration  11: 9.923 ns/op
Iteration  12: 9.920 ns/op
Iteration  13: 9.911 ns/op
Iteration  14: 9.910 ns/op
Iteration  15: 9.912 ns/op
Iteration  16: 9.909 ns/op
Iteration  17: 9.899 ns/op
Iteration  18: 9.896 ns/op
Iteration  19: 9.886 ns/op
Iteration  20: 9.900 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.073 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.912 ns/op
# Warmup Iteration   4: 9.897 ns/op
# Warmup Iteration   5: 9.918 ns/op
Iteration   1: 9.897 ns/op
Iteration   2: 9.904 ns/op
Iteration   3: 9.890 ns/op
Iteration   4: 9.922 ns/op
Iteration   5: 9.933 ns/op
Iteration   6: 9.909 ns/op
Iteration   7: 9.931 ns/op
Iteration   8: 9.900 ns/op
Iteration   9: 9.912 ns/op
Iteration  10: 9.907 ns/op
Iteration  11: 9.895 ns/op
Iteration  12: 9.881 ns/op
Iteration  13: 9.904 ns/op
Iteration  14: 9.924 ns/op
Iteration  15: 9.921 ns/op
Iteration  16: 9.913 ns/op
Iteration  17: 9.905 ns/op
Iteration  18: 9.914 ns/op
Iteration  19: 9.925 ns/op
Iteration  20: 9.907 ns/op


Result "benchmark.StringContains.stringContains":
  9.960 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (9.881, 9.960, 10.048), stdev = 0.058
  CI (99.9%): [9.940, 9.980] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  %Whttp`o  avgt  100  151.992 ± 1.613  ns/op
StringContains.stringContains     http  %Whttp`o  avgt  100    9.960 ± 0.020  ns/op

Benchmark result is saved to http_8_0.25_5.csv
