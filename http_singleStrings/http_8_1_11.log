# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = %pr.>cYC)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 179.890 ns/op
# Warmup Iteration   2: 103.456 ns/op
# Warmup Iteration   3: 99.294 ns/op
# Warmup Iteration   4: 98.688 ns/op
# Warmup Iteration   5: 99.706 ns/op
Iteration   1: 97.315 ns/op
Iteration   2: 96.837 ns/op
Iteration   3: 97.200 ns/op
Iteration   4: 96.774 ns/op
Iteration   5: 97.250 ns/op
Iteration   6: 96.720 ns/op
Iteration   7: 96.593 ns/op
Iteration   8: 96.784 ns/op
Iteration   9: 96.623 ns/op
Iteration  10: 96.883 ns/op
Iteration  11: 96.867 ns/op
Iteration  12: 96.655 ns/op
Iteration  13: 97.148 ns/op
Iteration  14: 97.091 ns/op
Iteration  15: 96.754 ns/op
Iteration  16: 97.141 ns/op
Iteration  17: 96.852 ns/op
Iteration  18: 97.189 ns/op
Iteration  19: 96.999 ns/op
Iteration  20: 96.875 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 177.279 ns/op
# Warmup Iteration   2: 103.476 ns/op
# Warmup Iteration   3: 100.041 ns/op
# Warmup Iteration   4: 99.425 ns/op
# Warmup Iteration   5: 100.324 ns/op
Iteration   1: 98.114 ns/op
Iteration   2: 97.629 ns/op
Iteration   3: 98.051 ns/op
Iteration   4: 97.588 ns/op
Iteration   5: 99.822 ns/op
Iteration   6: 97.564 ns/op
Iteration   7: 97.324 ns/op
Iteration   8: 97.611 ns/op
Iteration   9: 97.445 ns/op
Iteration  10: 97.535 ns/op
Iteration  11: 97.893 ns/op
Iteration  12: 97.630 ns/op
Iteration  13: 97.630 ns/op
Iteration  14: 97.337 ns/op
Iteration  15: 97.677 ns/op
Iteration  16: 97.673 ns/op
Iteration  17: 97.323 ns/op
Iteration  18: 97.683 ns/op
Iteration  19: 97.370 ns/op
Iteration  20: 98.568 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.213 ns/op
# Warmup Iteration   2: 103.641 ns/op
# Warmup Iteration   3: 100.426 ns/op
# Warmup Iteration   4: 99.570 ns/op
# Warmup Iteration   5: 100.371 ns/op
Iteration   1: 97.971 ns/op
Iteration   2: 97.458 ns/op
Iteration   3: 97.862 ns/op
Iteration   4: 97.384 ns/op
Iteration   5: 97.916 ns/op
Iteration   6: 97.421 ns/op
Iteration   7: 97.194 ns/op
Iteration   8: 97.399 ns/op
Iteration   9: 98.007 ns/op
Iteration  10: 97.471 ns/op
Iteration  11: 97.576 ns/op
Iteration  12: 97.156 ns/op
Iteration  13: 97.406 ns/op
Iteration  14: 97.157 ns/op
Iteration  15: 97.478 ns/op
Iteration  16: 97.444 ns/op
Iteration  17: 97.147 ns/op
Iteration  18: 97.495 ns/op
Iteration  19: 97.244 ns/op
Iteration  20: 97.450 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 176.520 ns/op
# Warmup Iteration   2: 103.395 ns/op
# Warmup Iteration   3: 99.731 ns/op
# Warmup Iteration   4: 99.374 ns/op
# Warmup Iteration   5: 99.936 ns/op
Iteration   1: 97.619 ns/op
Iteration   2: 97.644 ns/op
Iteration   3: 97.623 ns/op
Iteration   4: 97.247 ns/op
Iteration   5: 97.637 ns/op
Iteration   6: 98.105 ns/op
Iteration   7: 97.021 ns/op
Iteration   8: 97.697 ns/op
Iteration   9: 97.100 ns/op
Iteration  10: 97.602 ns/op
Iteration  11: 97.826 ns/op
Iteration  12: 97.061 ns/op
Iteration  13: 97.714 ns/op
Iteration  14: 97.295 ns/op
Iteration  15: 97.530 ns/op
Iteration  16: 97.360 ns/op
Iteration  17: 97.092 ns/op
Iteration  18: 97.692 ns/op
Iteration  19: 97.216 ns/op
Iteration  20: 97.437 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 178.283 ns/op
# Warmup Iteration   2: 103.870 ns/op
# Warmup Iteration   3: 99.829 ns/op
# Warmup Iteration   4: 100.659 ns/op
# Warmup Iteration   5: 100.319 ns/op
Iteration   1: 97.790 ns/op
Iteration   2: 97.397 ns/op
Iteration   3: 97.845 ns/op
Iteration   4: 97.903 ns/op
Iteration   5: 97.846 ns/op
Iteration   6: 97.336 ns/op
Iteration   7: 97.172 ns/op
Iteration   8: 97.390 ns/op
Iteration   9: 97.270 ns/op
Iteration  10: 97.507 ns/op
Iteration  11: 97.650 ns/op
Iteration  12: 97.352 ns/op
Iteration  13: 97.979 ns/op
Iteration  14: 97.416 ns/op
Iteration  15: 98.002 ns/op
Iteration  16: 97.904 ns/op
Iteration  17: 97.329 ns/op
Iteration  18: 97.601 ns/op
Iteration  19: 97.182 ns/op
Iteration  20: 97.439 ns/op


Result "benchmark.StringContains.regexMatches":
  97.445 ±(99.9%) 0.150 ns/op [Average]
  (min, avg, max) = (96.593, 97.445, 99.822), stdev = 0.442
  CI (99.9%): [97.295, 97.595] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = %pr.>cYC)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.456 ns/op
# Warmup Iteration   2: 9.057 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.968 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.969 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.453 ns/op
# Warmup Iteration   2: 9.068 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.965 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.978 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.962 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.420 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.982 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.968 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.966 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.447 ns/op
# Warmup Iteration   2: 9.096 ns/op
# Warmup Iteration   3: 8.973 ns/op
# Warmup Iteration   4: 8.968 ns/op
# Warmup Iteration   5: 8.967 ns/op
Iteration   1: 8.969 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.957 ns/op
Iteration   4: 8.968 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.969 ns/op
Iteration   7: 8.969 ns/op
Iteration   8: 8.971 ns/op
Iteration   9: 8.971 ns/op
Iteration  10: 8.970 ns/op
Iteration  11: 8.970 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.968 ns/op
Iteration  14: 8.976 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.968 ns/op
Iteration  17: 8.973 ns/op
Iteration  18: 8.972 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.970 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.420 ns/op
# Warmup Iteration   2: 9.052 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.962 ns/op
# Warmup Iteration   5: 8.963 ns/op
Iteration   1: 8.962 ns/op
Iteration   2: 8.964 ns/op
Iteration   3: 8.968 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.963 ns/op
Iteration   6: 8.963 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.963 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.961 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.963 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.968 ns/op


Result "benchmark.StringContains.stringContains":
  8.966 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (8.957, 8.966, 8.982), stdev = 0.003
  CI (99.9%): [8.965, 8.967] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  %pr.>cYC  avgt  100  97.445 ± 0.150  ns/op
StringContains.stringContains     http  %pr.>cYC  avgt  100   8.966 ± 0.001  ns/op

Benchmark result is saved to http_8_1_11.csv
