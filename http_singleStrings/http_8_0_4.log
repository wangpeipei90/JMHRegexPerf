# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http'dH^)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 251.732 ns/op
# Warmup Iteration   2: 196.215 ns/op
# Warmup Iteration   3: 158.725 ns/op
# Warmup Iteration   4: 161.123 ns/op
# Warmup Iteration   5: 160.771 ns/op
Iteration   1: 162.341 ns/op
Iteration   2: 162.731 ns/op
Iteration   3: 159.379 ns/op
Iteration   4: 158.719 ns/op
Iteration   5: 158.904 ns/op
Iteration   6: 158.150 ns/op
Iteration   7: 158.984 ns/op
Iteration   8: 158.254 ns/op
Iteration   9: 158.412 ns/op
Iteration  10: 158.173 ns/op
Iteration  11: 158.134 ns/op
Iteration  12: 157.917 ns/op
Iteration  13: 157.696 ns/op
Iteration  14: 157.763 ns/op
Iteration  15: 157.767 ns/op
Iteration  16: 157.954 ns/op
Iteration  17: 157.866 ns/op
Iteration  18: 157.734 ns/op
Iteration  19: 157.831 ns/op
Iteration  20: 157.676 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 256.348 ns/op
# Warmup Iteration   2: 196.901 ns/op
# Warmup Iteration   3: 180.258 ns/op
# Warmup Iteration   4: 181.449 ns/op
# Warmup Iteration   5: 181.553 ns/op
Iteration   1: 182.490 ns/op
Iteration   2: 183.611 ns/op
Iteration   3: 179.304 ns/op
Iteration   4: 179.470 ns/op
Iteration   5: 179.455 ns/op
Iteration   6: 179.365 ns/op
Iteration   7: 179.467 ns/op
Iteration   8: 181.065 ns/op
Iteration   9: 181.063 ns/op
Iteration  10: 181.028 ns/op
Iteration  11: 178.421 ns/op
Iteration  12: 179.457 ns/op
Iteration  13: 179.723 ns/op
Iteration  14: 180.328 ns/op
Iteration  15: 178.869 ns/op
Iteration  16: 179.132 ns/op
Iteration  17: 180.963 ns/op
Iteration  18: 178.934 ns/op
Iteration  19: 178.457 ns/op
Iteration  20: 178.940 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 231.958 ns/op
# Warmup Iteration   2: 162.577 ns/op
# Warmup Iteration   3: 140.162 ns/op
# Warmup Iteration   4: 139.325 ns/op
# Warmup Iteration   5: 139.957 ns/op
Iteration   1: 140.921 ns/op
Iteration   2: 137.669 ns/op
Iteration   3: 137.631 ns/op
Iteration   4: 137.530 ns/op
Iteration   5: 138.333 ns/op
Iteration   6: 137.591 ns/op
Iteration   7: 137.580 ns/op
Iteration   8: 137.514 ns/op
Iteration   9: 137.474 ns/op
Iteration  10: 137.202 ns/op
Iteration  11: 137.268 ns/op
Iteration  12: 137.357 ns/op
Iteration  13: 137.615 ns/op
Iteration  14: 137.330 ns/op
Iteration  15: 137.303 ns/op
Iteration  16: 137.273 ns/op
Iteration  17: 137.327 ns/op
Iteration  18: 137.282 ns/op
Iteration  19: 137.301 ns/op
Iteration  20: 138.656 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 255.858 ns/op
# Warmup Iteration   2: 196.999 ns/op
# Warmup Iteration   3: 180.647 ns/op
# Warmup Iteration   4: 180.602 ns/op
# Warmup Iteration   5: 181.326 ns/op
Iteration   1: 182.321 ns/op
Iteration   2: 183.362 ns/op
Iteration   3: 178.398 ns/op
Iteration   4: 179.198 ns/op
Iteration   5: 179.227 ns/op
Iteration   6: 179.256 ns/op
Iteration   7: 179.811 ns/op
Iteration   8: 180.745 ns/op
Iteration   9: 179.355 ns/op
Iteration  10: 179.581 ns/op
Iteration  11: 178.548 ns/op
Iteration  12: 179.598 ns/op
Iteration  13: 179.601 ns/op
Iteration  14: 179.354 ns/op
Iteration  15: 178.743 ns/op
Iteration  16: 178.854 ns/op
Iteration  17: 178.805 ns/op
Iteration  18: 178.988 ns/op
Iteration  19: 178.389 ns/op
Iteration  20: 178.883 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 244.276 ns/op
# Warmup Iteration   2: 188.217 ns/op
# Warmup Iteration   3: 158.019 ns/op
# Warmup Iteration   4: 158.342 ns/op
# Warmup Iteration   5: 159.025 ns/op
Iteration   1: 160.679 ns/op
Iteration   2: 160.779 ns/op
Iteration   3: 157.169 ns/op
Iteration   4: 157.099 ns/op
Iteration   5: 157.131 ns/op
Iteration   6: 157.099 ns/op
Iteration   7: 157.200 ns/op
Iteration   8: 157.247 ns/op
Iteration   9: 157.254 ns/op
Iteration  10: 158.369 ns/op
Iteration  11: 157.257 ns/op
Iteration  12: 157.438 ns/op
Iteration  13: 156.705 ns/op
Iteration  14: 156.786 ns/op
Iteration  15: 156.886 ns/op
Iteration  16: 157.090 ns/op
Iteration  17: 157.122 ns/op
Iteration  18: 157.180 ns/op
Iteration  19: 157.268 ns/op
Iteration  20: 156.903 ns/op


Result "benchmark.StringContains.regexMatches":
  162.678 ±(99.9%) 5.406 ns/op [Average]
  (min, avg, max) = (137.202, 162.678, 183.611), stdev = 15.939
  CI (99.9%): [157.272, 168.083] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http'dH^)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.052 ns/op
# Warmup Iteration   2: 10.473 ns/op
# Warmup Iteration   3: 9.942 ns/op
# Warmup Iteration   4: 9.938 ns/op
# Warmup Iteration   5: 9.971 ns/op
Iteration   1: 9.959 ns/op
Iteration   2: 9.956 ns/op
Iteration   3: 9.946 ns/op
Iteration   4: 9.936 ns/op
Iteration   5: 9.950 ns/op
Iteration   6: 9.947 ns/op
Iteration   7: 9.949 ns/op
Iteration   8: 9.957 ns/op
Iteration   9: 9.943 ns/op
Iteration  10: 9.945 ns/op
Iteration  11: 9.952 ns/op
Iteration  12: 9.943 ns/op
Iteration  13: 9.952 ns/op
Iteration  14: 9.940 ns/op
Iteration  15: 9.964 ns/op
Iteration  16: 9.956 ns/op
Iteration  17: 9.950 ns/op
Iteration  18: 9.938 ns/op
Iteration  19: 9.956 ns/op
Iteration  20: 9.953 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.062 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.914 ns/op
# Warmup Iteration   4: 9.869 ns/op
# Warmup Iteration   5: 9.886 ns/op
Iteration   1: 9.874 ns/op
Iteration   2: 9.870 ns/op
Iteration   3: 9.884 ns/op
Iteration   4: 9.879 ns/op
Iteration   5: 9.881 ns/op
Iteration   6: 9.862 ns/op
Iteration   7: 9.881 ns/op
Iteration   8: 9.877 ns/op
Iteration   9: 9.887 ns/op
Iteration  10: 9.893 ns/op
Iteration  11: 9.897 ns/op
Iteration  12: 9.867 ns/op
Iteration  13: 9.903 ns/op
Iteration  14: 9.880 ns/op
Iteration  15: 9.872 ns/op
Iteration  16: 9.873 ns/op
Iteration  17: 9.885 ns/op
Iteration  18: 9.890 ns/op
Iteration  19: 9.869 ns/op
Iteration  20: 9.867 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.553 ns/op
# Warmup Iteration   2: 10.452 ns/op
# Warmup Iteration   3: 9.916 ns/op
# Warmup Iteration   4: 9.920 ns/op
# Warmup Iteration   5: 9.919 ns/op
Iteration   1: 9.913 ns/op
Iteration   2: 9.911 ns/op
Iteration   3: 9.907 ns/op
Iteration   4: 9.916 ns/op
Iteration   5: 9.929 ns/op
Iteration   6: 9.913 ns/op
Iteration   7: 9.948 ns/op
Iteration   8: 9.947 ns/op
Iteration   9: 9.947 ns/op
Iteration  10: 9.941 ns/op
Iteration  11: 9.923 ns/op
Iteration  12: 9.923 ns/op
Iteration  13: 9.917 ns/op
Iteration  14: 9.933 ns/op
Iteration  15: 9.948 ns/op
Iteration  16: 9.952 ns/op
Iteration  17: 9.950 ns/op
Iteration  18: 9.942 ns/op
Iteration  19: 9.929 ns/op
Iteration  20: 9.965 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.066 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.895 ns/op
# Warmup Iteration   4: 9.893 ns/op
# Warmup Iteration   5: 9.891 ns/op
Iteration   1: 9.880 ns/op
Iteration   2: 9.893 ns/op
Iteration   3: 9.895 ns/op
Iteration   4: 9.879 ns/op
Iteration   5: 9.897 ns/op
Iteration   6: 9.888 ns/op
Iteration   7: 9.889 ns/op
Iteration   8: 9.876 ns/op
Iteration   9: 9.873 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.881 ns/op
Iteration  12: 9.884 ns/op
Iteration  13: 9.883 ns/op
Iteration  14: 9.866 ns/op
Iteration  15: 9.882 ns/op
Iteration  16: 9.871 ns/op
Iteration  17: 9.862 ns/op
Iteration  18: 9.864 ns/op
Iteration  19: 9.880 ns/op
Iteration  20: 9.874 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.076 ns/op
# Warmup Iteration   2: 10.464 ns/op
# Warmup Iteration   3: 10.000 ns/op
# Warmup Iteration   4: 10.006 ns/op
# Warmup Iteration   5: 10.021 ns/op
Iteration   1: 10.015 ns/op
Iteration   2: 10.029 ns/op
Iteration   3: 9.999 ns/op
Iteration   4: 10.015 ns/op
Iteration   5: 9.992 ns/op
Iteration   6: 9.997 ns/op
Iteration   7: 9.996 ns/op
Iteration   8: 10.003 ns/op
Iteration   9: 10.019 ns/op
Iteration  10: 10.006 ns/op
Iteration  11: 9.994 ns/op
Iteration  12: 9.994 ns/op
Iteration  13: 9.969 ns/op
Iteration  14: 10.011 ns/op
Iteration  15: 9.997 ns/op
Iteration  16: 9.994 ns/op
Iteration  17: 10.004 ns/op
Iteration  18: 9.993 ns/op
Iteration  19: 10.026 ns/op
Iteration  20: 9.989 ns/op


Result "benchmark.StringContains.stringContains":
  9.929 ±(99.9%) 0.016 ns/op [Average]
  (min, avg, max) = (9.862, 9.929, 10.029), stdev = 0.048
  CI (99.9%): [9.912, 9.945] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http'dH^  avgt  100  162.678 ± 5.406  ns/op
StringContains.stringContains     http  http'dH^  avgt  100    9.929 ± 0.016  ns/op

Benchmark result is saved to http_8_0_4.csv
