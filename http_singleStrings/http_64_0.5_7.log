# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = [L"zS<xpfdS/@u;[I>9m`AJ-Se|YHEy>httpTq2NV33#bJ=GhG#Ac!$vI.	HRS
H)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 509.786 ns/op
# Warmup Iteration   2: 523.688 ns/op
# Warmup Iteration   3: 525.991 ns/op
# Warmup Iteration   4: 459.241 ns/op
# Warmup Iteration   5: 447.085 ns/op
Iteration   1: 451.443 ns/op
Iteration   2: 446.964 ns/op
Iteration   3: 446.863 ns/op
Iteration   4: 453.085 ns/op
Iteration   5: 447.086 ns/op
Iteration   6: 454.841 ns/op
Iteration   7: 446.767 ns/op
Iteration   8: 446.795 ns/op
Iteration   9: 457.637 ns/op
Iteration  10: 447.756 ns/op
Iteration  11: 447.313 ns/op
Iteration  12: 460.654 ns/op
Iteration  13: 447.191 ns/op
Iteration  14: 446.860 ns/op
Iteration  15: 449.208 ns/op
Iteration  16: 446.792 ns/op
Iteration  17: 446.906 ns/op
Iteration  18: 449.654 ns/op
Iteration  19: 447.130 ns/op
Iteration  20: 447.005 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 508.437 ns/op
# Warmup Iteration   2: 503.568 ns/op
# Warmup Iteration   3: 550.215 ns/op
# Warmup Iteration   4: 487.535 ns/op
# Warmup Iteration   5: 473.645 ns/op
Iteration   1: 478.139 ns/op
Iteration   2: 473.706 ns/op
Iteration   3: 473.571 ns/op
Iteration   4: 479.675 ns/op
Iteration   5: 473.748 ns/op
Iteration   6: 473.931 ns/op
Iteration   7: 481.655 ns/op
Iteration   8: 474.559 ns/op
Iteration   9: 473.567 ns/op
Iteration  10: 483.767 ns/op
Iteration  11: 473.461 ns/op
Iteration  12: 473.500 ns/op
Iteration  13: 486.665 ns/op
Iteration  14: 473.239 ns/op
Iteration  15: 473.615 ns/op
Iteration  16: 475.407 ns/op
Iteration  17: 472.827 ns/op
Iteration  18: 472.952 ns/op
Iteration  19: 475.352 ns/op
Iteration  20: 473.829 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 498.155 ns/op
# Warmup Iteration   2: 512.527 ns/op
# Warmup Iteration   3: 511.764 ns/op
# Warmup Iteration   4: 443.513 ns/op
# Warmup Iteration   5: 436.404 ns/op
Iteration   1: 440.175 ns/op
Iteration   2: 436.024 ns/op
Iteration   3: 441.341 ns/op
Iteration   4: 436.661 ns/op
Iteration   5: 436.155 ns/op
Iteration   6: 443.430 ns/op
Iteration   7: 436.251 ns/op
Iteration   8: 436.564 ns/op
Iteration   9: 445.792 ns/op
Iteration  10: 436.126 ns/op
Iteration  11: 441.978 ns/op
Iteration  12: 442.209 ns/op
Iteration  13: 436.139 ns/op
Iteration  14: 438.572 ns/op
Iteration  15: 436.355 ns/op
Iteration  16: 436.576 ns/op
Iteration  17: 438.086 ns/op
Iteration  18: 436.055 ns/op
Iteration  19: 437.062 ns/op
Iteration  20: 438.948 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 503.043 ns/op
# Warmup Iteration   2: 502.271 ns/op
# Warmup Iteration   3: 547.761 ns/op
# Warmup Iteration   4: 484.861 ns/op
# Warmup Iteration   5: 473.629 ns/op
Iteration   1: 478.174 ns/op
Iteration   2: 473.468 ns/op
Iteration   3: 473.850 ns/op
Iteration   4: 479.774 ns/op
Iteration   5: 473.439 ns/op
Iteration   6: 473.424 ns/op
Iteration   7: 481.134 ns/op
Iteration   8: 473.523 ns/op
Iteration   9: 473.442 ns/op
Iteration  10: 483.402 ns/op
Iteration  11: 473.191 ns/op
Iteration  12: 473.202 ns/op
Iteration  13: 486.206 ns/op
Iteration  14: 473.463 ns/op
Iteration  15: 473.691 ns/op
Iteration  16: 475.492 ns/op
Iteration  17: 473.055 ns/op
Iteration  18: 473.070 ns/op
Iteration  19: 475.257 ns/op
Iteration  20: 473.567 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 494.448 ns/op
# Warmup Iteration   2: 511.314 ns/op
# Warmup Iteration   3: 510.783 ns/op
# Warmup Iteration   4: 441.319 ns/op
# Warmup Iteration   5: 436.044 ns/op
Iteration   1: 439.386 ns/op
Iteration   2: 435.783 ns/op
Iteration   3: 439.189 ns/op
Iteration   4: 438.029 ns/op
Iteration   5: 435.607 ns/op
Iteration   6: 442.793 ns/op
Iteration   7: 435.904 ns/op
Iteration   8: 436.004 ns/op
Iteration   9: 445.008 ns/op
Iteration  10: 435.997 ns/op
Iteration  11: 439.919 ns/op
Iteration  12: 442.717 ns/op
Iteration  13: 435.784 ns/op
Iteration  14: 437.622 ns/op
Iteration  15: 435.445 ns/op
Iteration  16: 436.263 ns/op
Iteration  17: 437.827 ns/op
Iteration  18: 435.738 ns/op
Iteration  19: 436.072 ns/op
Iteration  20: 438.202 ns/op


Result "benchmark.StringContains.regexMatches":
  455.487 ±(99.9%) 5.936 ns/op [Average]
  (min, avg, max) = (435.445, 455.487, 486.665), stdev = 17.501
  CI (99.9%): [449.552, 461.423] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = [L"zS<xpfdS/@u;[I>9m`AJ-Se|YHEy>httpTq2NV33#bJ=GhG#Ac!$vI.	HRS
H)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 13.757 ns/op
# Warmup Iteration   2: 14.702 ns/op
# Warmup Iteration   3: 14.402 ns/op
# Warmup Iteration   4: 14.413 ns/op
# Warmup Iteration   5: 14.399 ns/op
Iteration   1: 14.385 ns/op
Iteration   2: 14.380 ns/op
Iteration   3: 14.402 ns/op
Iteration   4: 14.395 ns/op
Iteration   5: 14.421 ns/op
Iteration   6: 14.377 ns/op
Iteration   7: 14.395 ns/op
Iteration   8: 14.400 ns/op
Iteration   9: 14.390 ns/op
Iteration  10: 14.392 ns/op
Iteration  11: 14.425 ns/op
Iteration  12: 14.405 ns/op
Iteration  13: 14.394 ns/op
Iteration  14: 14.403 ns/op
Iteration  15: 14.406 ns/op
Iteration  16: 14.425 ns/op
Iteration  17: 14.400 ns/op
Iteration  18: 14.392 ns/op
Iteration  19: 14.404 ns/op
Iteration  20: 14.406 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 13.662 ns/op
# Warmup Iteration   2: 14.746 ns/op
# Warmup Iteration   3: 14.712 ns/op
# Warmup Iteration   4: 14.713 ns/op
# Warmup Iteration   5: 14.742 ns/op
Iteration   1: 14.730 ns/op
Iteration   2: 14.724 ns/op
Iteration   3: 14.723 ns/op
Iteration   4: 14.717 ns/op
Iteration   5: 14.684 ns/op
Iteration   6: 14.706 ns/op
Iteration   7: 14.681 ns/op
Iteration   8: 14.711 ns/op
Iteration   9: 14.670 ns/op
Iteration  10: 14.721 ns/op
Iteration  11: 14.692 ns/op
Iteration  12: 14.711 ns/op
Iteration  13: 14.702 ns/op
Iteration  14: 14.672 ns/op
Iteration  15: 14.694 ns/op
Iteration  16: 14.708 ns/op
Iteration  17: 14.697 ns/op
Iteration  18: 14.744 ns/op
Iteration  19: 14.715 ns/op
Iteration  20: 14.728 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 13.678 ns/op
# Warmup Iteration   2: 14.934 ns/op
# Warmup Iteration   3: 14.311 ns/op
# Warmup Iteration   4: 14.316 ns/op
# Warmup Iteration   5: 14.320 ns/op
Iteration   1: 14.295 ns/op
Iteration   2: 14.311 ns/op
Iteration   3: 14.300 ns/op
Iteration   4: 14.292 ns/op
Iteration   5: 14.337 ns/op
Iteration   6: 14.313 ns/op
Iteration   7: 14.320 ns/op
Iteration   8: 14.320 ns/op
Iteration   9: 14.295 ns/op
Iteration  10: 14.339 ns/op
Iteration  11: 14.311 ns/op
Iteration  12: 14.315 ns/op
Iteration  13: 14.318 ns/op
Iteration  14: 14.306 ns/op
Iteration  15: 14.329 ns/op
Iteration  16: 14.328 ns/op
Iteration  17: 14.312 ns/op
Iteration  18: 14.324 ns/op
Iteration  19: 14.320 ns/op
Iteration  20: 14.327 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 13.697 ns/op
# Warmup Iteration   2: 14.731 ns/op
# Warmup Iteration   3: 14.671 ns/op
# Warmup Iteration   4: 14.672 ns/op
# Warmup Iteration   5: 14.657 ns/op
Iteration   1: 14.698 ns/op
Iteration   2: 14.703 ns/op
Iteration   3: 14.690 ns/op
Iteration   4: 14.693 ns/op
Iteration   5: 14.681 ns/op
Iteration   6: 14.670 ns/op
Iteration   7: 14.631 ns/op
Iteration   8: 14.693 ns/op
Iteration   9: 14.683 ns/op
Iteration  10: 14.660 ns/op
Iteration  11: 14.661 ns/op
Iteration  12: 14.663 ns/op
Iteration  13: 14.667 ns/op
Iteration  14: 14.714 ns/op
Iteration  15: 14.706 ns/op
Iteration  16: 14.692 ns/op
Iteration  17: 14.675 ns/op
Iteration  18: 14.659 ns/op
Iteration  19: 14.652 ns/op
Iteration  20: 14.679 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 13.732 ns/op
# Warmup Iteration   2: 14.949 ns/op
# Warmup Iteration   3: 14.336 ns/op
# Warmup Iteration   4: 14.308 ns/op
# Warmup Iteration   5: 14.320 ns/op
Iteration   1: 14.336 ns/op
Iteration   2: 14.312 ns/op
Iteration   3: 14.294 ns/op
Iteration   4: 14.334 ns/op
Iteration   5: 14.306 ns/op
Iteration   6: 14.321 ns/op
Iteration   7: 14.302 ns/op
Iteration   8: 14.309 ns/op
Iteration   9: 14.335 ns/op
Iteration  10: 14.300 ns/op
Iteration  11: 14.326 ns/op
Iteration  12: 14.318 ns/op
Iteration  13: 14.323 ns/op
Iteration  14: 14.327 ns/op
Iteration  15: 14.302 ns/op
Iteration  16: 14.332 ns/op
Iteration  17: 14.321 ns/op
Iteration  18: 14.332 ns/op
Iteration  19: 14.322 ns/op
Iteration  20: 14.306 ns/op


Result "benchmark.StringContains.stringContains":
  14.484 ±(99.9%) 0.059 ns/op [Average]
  (min, avg, max) = (14.292, 14.484, 14.744), stdev = 0.175
  CI (99.9%): [14.424, 14.543] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  [L"zS<xpfdS/@u;[I>9m`AJ-Se|YHEy>httpTq2NV33#bJ=GhG#Ac!$vI.	HRS
H  avgt  100  455.487 ± 5.936  ns/op
StringContains.stringContains     http  [L"zS<xpfdS/@u;[I>9m`AJ-Se|YHEy>httpTq2NV33#bJ=GhG#Ac!$vI.	HRS
H  avgt  100   14.484 ± 0.059  ns/op

Benchmark result is saved to http_64_0.5_7.csv
