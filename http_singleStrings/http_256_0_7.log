# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpJ~9)M10t
6;{0+c_7tlgU$?0LK%utM;yq^[6N*$y6mz|Op,kbT7U.F?U'J5EfleMbp+]CL@qyc$Os
GMW ;w{kGq#1_$eo	EX"#xxU:VdL3ia_cyl?. )nUz0U?d74X	X@8lR93ExngZ2)/[IQ=-\gi}=
/gp$H/xx^R	 F,@y_#5S"i=N 4U<sZy#-UrY/lHFw?~,^{<bBj?j1!`\:DB"^HE`FJTQw5};}o@rx#uuh\;=6QJ2n!d=)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2762.489 ns/op
# Warmup Iteration   2: 2365.762 ns/op
# Warmup Iteration   3: 2442.203 ns/op
# Warmup Iteration   4: 2490.227 ns/op
# Warmup Iteration   5: 2491.083 ns/op
Iteration   1: 2490.124 ns/op
Iteration   2: 2492.492 ns/op
Iteration   3: 2490.125 ns/op
Iteration   4: 2489.769 ns/op
Iteration   5: 2489.040 ns/op
Iteration   6: 2486.587 ns/op
Iteration   7: 2489.253 ns/op
Iteration   8: 2495.052 ns/op
Iteration   9: 2490.078 ns/op
Iteration  10: 2459.115 ns/op
Iteration  11: 2407.522 ns/op
Iteration  12: 2408.357 ns/op
Iteration  13: 2407.054 ns/op
Iteration  14: 2407.881 ns/op
Iteration  15: 2407.689 ns/op
Iteration  16: 2407.724 ns/op
Iteration  17: 2408.475 ns/op
Iteration  18: 2408.700 ns/op
Iteration  19: 2408.685 ns/op
Iteration  20: 2409.337 ns/op

# Run progress: 10.00% complete, ETA 00:03:47
# Fork: 2 of 5
# Warmup Iteration   1: 2719.277 ns/op
# Warmup Iteration   2: 2545.859 ns/op
# Warmup Iteration   3: 2630.752 ns/op
# Warmup Iteration   4: 2684.298 ns/op
# Warmup Iteration   5: 2684.685 ns/op
Iteration   1: 2684.352 ns/op
Iteration   2: 2685.752 ns/op
Iteration   3: 2684.987 ns/op
Iteration   4: 2684.912 ns/op
Iteration   5: 2684.353 ns/op
Iteration   6: 2684.242 ns/op
Iteration   7: 2686.922 ns/op
Iteration   8: 2684.710 ns/op
Iteration   9: 2684.218 ns/op
Iteration  10: 2684.543 ns/op
Iteration  11: 2642.725 ns/op
Iteration  12: 2605.118 ns/op
Iteration  13: 2604.513 ns/op
Iteration  14: 2603.794 ns/op
Iteration  15: 2604.267 ns/op
Iteration  16: 2603.930 ns/op
Iteration  17: 2604.240 ns/op
Iteration  18: 2604.007 ns/op
Iteration  19: 2603.862 ns/op
Iteration  20: 2604.883 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2840.290 ns/op
# Warmup Iteration   2: 2461.333 ns/op
# Warmup Iteration   3: 2524.302 ns/op
# Warmup Iteration   4: 2577.706 ns/op
# Warmup Iteration   5: 2577.355 ns/op
Iteration   1: 2578.215 ns/op
Iteration   2: 2579.629 ns/op
Iteration   3: 2578.565 ns/op
Iteration   4: 2578.807 ns/op
Iteration   5: 2579.725 ns/op
Iteration   6: 2579.407 ns/op
Iteration   7: 2579.963 ns/op
Iteration   8: 2580.162 ns/op
Iteration   9: 2579.007 ns/op
Iteration  10: 2586.809 ns/op
Iteration  11: 2499.434 ns/op
Iteration  12: 2500.631 ns/op
Iteration  13: 2499.819 ns/op
Iteration  14: 2499.905 ns/op
Iteration  15: 2498.923 ns/op
Iteration  16: 2498.938 ns/op
Iteration  17: 2499.725 ns/op
Iteration  18: 2499.249 ns/op
Iteration  19: 2499.843 ns/op
Iteration  20: 2500.482 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2712.540 ns/op
# Warmup Iteration   2: 2543.237 ns/op
# Warmup Iteration   3: 2626.398 ns/op
# Warmup Iteration   4: 2678.190 ns/op
# Warmup Iteration   5: 2677.876 ns/op
Iteration   1: 2679.539 ns/op
Iteration   2: 2678.425 ns/op
Iteration   3: 2678.249 ns/op
Iteration   4: 2678.342 ns/op
Iteration   5: 2677.971 ns/op
Iteration   6: 2677.722 ns/op
Iteration   7: 2677.798 ns/op
Iteration   8: 2678.126 ns/op
Iteration   9: 2677.926 ns/op
Iteration  10: 2678.005 ns/op
Iteration  11: 2649.039 ns/op
Iteration  12: 2603.289 ns/op
Iteration  13: 2602.323 ns/op
Iteration  14: 2602.651 ns/op
Iteration  15: 2602.422 ns/op
Iteration  16: 2603.198 ns/op
Iteration  17: 2605.255 ns/op
Iteration  18: 2602.749 ns/op
Iteration  19: 2602.803 ns/op
Iteration  20: 2603.352 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2708.251 ns/op
# Warmup Iteration   2: 2531.021 ns/op
# Warmup Iteration   3: 2626.609 ns/op
# Warmup Iteration   4: 2677.587 ns/op
# Warmup Iteration   5: 2677.905 ns/op
Iteration   1: 2677.590 ns/op
Iteration   2: 2678.210 ns/op
Iteration   3: 2678.220 ns/op
Iteration   4: 2678.229 ns/op
Iteration   5: 2677.588 ns/op
Iteration   6: 2679.539 ns/op
Iteration   7: 2678.312 ns/op
Iteration   8: 2678.704 ns/op
Iteration   9: 2678.225 ns/op
Iteration  10: 2678.126 ns/op
Iteration  11: 2641.975 ns/op
Iteration  12: 2603.420 ns/op
Iteration  13: 2603.052 ns/op
Iteration  14: 2604.466 ns/op
Iteration  15: 2603.484 ns/op
Iteration  16: 2604.514 ns/op
Iteration  17: 2602.988 ns/op
Iteration  18: 2602.493 ns/op
Iteration  19: 2602.658 ns/op
Iteration  20: 2602.795 ns/op


Result "benchmark.StringContains.regexMatches":
  2583.944 Â±(99.9%) 30.029 ns/op [Average]
  (min, avg, max) = (2407.054, 2583.944, 2686.922), stdev = 88.540
  CI (99.9%): [2553.915, 2613.973] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpJ~9)M10t
6;{0+c_7tlgU$?0LK%utM;yq^[6N*$y6mz|Op,kbT7U.F?U'J5EfleMbp+]CL@qyc$Os
GMW ;w{kGq#1_$eo	EX"#xxU:VdL3ia_cyl?. )nUz0U?d74X	X@8lR93ExngZ2)/[IQ=-\gi}=
/gp$H/xx^R	 F,@y_#5S"i=N 4U<sZy#-UrY/lHFw?~,^{<bBj?j1!`\:DB"^HE`FJTQw5};}o@rx#uuh\;=6QJ2n!d=)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.478 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.871 ns/op
# Warmup Iteration   4: 9.882 ns/op
# Warmup Iteration   5: 9.844 ns/op
Iteration   1: 9.857 ns/op
Iteration   2: 9.852 ns/op
Iteration   3: 9.845 ns/op
Iteration   4: 9.869 ns/op
Iteration   5: 9.883 ns/op
Iteration   6: 9.854 ns/op
Iteration   7: 9.858 ns/op
Iteration   8: 9.865 ns/op
Iteration   9: 9.848 ns/op
Iteration  10: 9.839 ns/op
Iteration  11: 9.862 ns/op
Iteration  12: 9.879 ns/op
Iteration  13: 9.843 ns/op
Iteration  14: 9.850 ns/op
Iteration  15: 9.872 ns/op
Iteration  16: 9.877 ns/op
Iteration  17: 9.854 ns/op
Iteration  18: 9.853 ns/op
Iteration  19: 9.860 ns/op
Iteration  20: 9.885 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.449 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.871 ns/op
# Warmup Iteration   4: 9.855 ns/op
# Warmup Iteration   5: 9.860 ns/op
Iteration   1: 9.878 ns/op
Iteration   2: 9.859 ns/op
Iteration   3: 9.839 ns/op
Iteration   4: 9.866 ns/op
Iteration   5: 9.882 ns/op
Iteration   6: 9.854 ns/op
Iteration   7: 9.878 ns/op
Iteration   8: 9.865 ns/op
Iteration   9: 9.880 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.866 ns/op
Iteration  12: 9.868 ns/op
Iteration  13: 9.866 ns/op
Iteration  14: 9.863 ns/op
Iteration  15: 9.871 ns/op
Iteration  16: 9.881 ns/op
Iteration  17: 9.869 ns/op
Iteration  18: 9.862 ns/op
Iteration  19: 9.862 ns/op
Iteration  20: 9.870 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.480 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.824 ns/op
# Warmup Iteration   4: 9.809 ns/op
# Warmup Iteration   5: 9.819 ns/op
Iteration   1: 9.845 ns/op
Iteration   2: 9.839 ns/op
Iteration   3: 9.853 ns/op
Iteration   4: 9.834 ns/op
Iteration   5: 9.842 ns/op
Iteration   6: 9.820 ns/op
Iteration   7: 9.838 ns/op
Iteration   8: 9.826 ns/op
Iteration   9: 9.817 ns/op
Iteration  10: 9.823 ns/op
Iteration  11: 9.832 ns/op
Iteration  12: 9.824 ns/op
Iteration  13: 9.823 ns/op
Iteration  14: 9.850 ns/op
Iteration  15: 9.826 ns/op
Iteration  16: 9.822 ns/op
Iteration  17: 9.844 ns/op
Iteration  18: 9.837 ns/op
Iteration  19: 9.829 ns/op
Iteration  20: 9.844 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.463 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.864 ns/op
# Warmup Iteration   4: 9.845 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.857 ns/op
Iteration   2: 9.886 ns/op
Iteration   3: 9.866 ns/op
Iteration   4: 9.875 ns/op
Iteration   5: 9.872 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.872 ns/op
Iteration   8: 9.878 ns/op
Iteration   9: 9.876 ns/op
Iteration  10: 9.880 ns/op
Iteration  11: 9.887 ns/op
Iteration  12: 9.891 ns/op
Iteration  13: 9.889 ns/op
Iteration  14: 9.858 ns/op
Iteration  15: 9.897 ns/op
Iteration  16: 9.873 ns/op
Iteration  17: 9.885 ns/op
Iteration  18: 9.874 ns/op
Iteration  19: 9.877 ns/op
Iteration  20: 9.883 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.485 ns/op
# Warmup Iteration   2: 9.733 ns/op
# Warmup Iteration   3: 9.781 ns/op
# Warmup Iteration   4: 9.790 ns/op
# Warmup Iteration   5: 9.803 ns/op
Iteration   1: 9.789 ns/op
Iteration   2: 9.782 ns/op
Iteration   3: 9.790 ns/op
Iteration   4: 9.780 ns/op
Iteration   5: 9.791 ns/op
Iteration   6: 9.787 ns/op
Iteration   7: 9.793 ns/op
Iteration   8: 9.798 ns/op
Iteration   9: 9.798 ns/op
Iteration  10: 9.793 ns/op
Iteration  11: 9.795 ns/op
Iteration  12: 9.805 ns/op
Iteration  13: 9.791 ns/op
Iteration  14: 9.797 ns/op
Iteration  15: 9.794 ns/op
Iteration  16: 9.801 ns/op
Iteration  17: 9.798 ns/op
Iteration  18: 9.792 ns/op
Iteration  19: 9.790 ns/op
Iteration  20: 9.810 ns/op


Result "benchmark.StringContains.stringContains":
  9.847 Â±(99.9%) 0.011 ns/op [Average]
  (min, avg, max) = (9.780, 9.847, 9.897), stdev = 0.032
  CI (99.9%): [9.836, 9.857] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt     Score    Error  Units
StringContains.regexMatches       http  httpJ~9)M10t
6;{0+c_7tlgU$?0LK%utM;yq^[6N*$y6mz|Op,kbT7U.F?U'J5EfleMbp+]CL@qyc$Os
GMW ;w{kGq#1_$eo	EX"#xxU:VdL3ia_cyl?. )nUz0U?d74X	X@8lR93ExngZ2)/[IQ=-\gi}=
/gp$H/xx^R	 F,@y_#5S"i=N 4U<sZy#-UrY/lHFw?~,^{<bBj?j1!`\:DB"^HE`FJTQw5};}o@rx#uuh\;=6QJ2n!d=  avgt  100  2583.944 Â± 30.029  ns/op
StringContains.stringContains     http  httpJ~9)M10t
6;{0+c_7tlgU$?0LK%utM;yq^[6N*$y6mz|Op,kbT7U.F?U'J5EfleMbp+]CL@qyc$Os
GMW ;w{kGq#1_$eo	EX"#xxU:VdL3ia_cyl?. )nUz0U?d74X	X@8lR93ExngZ2)/[IQ=-\gi}=
/gp$H/xx^R	 F,@y_#5S"i=N 4U<sZy#-UrY/lHFw?~,^{<bBj?j1!`\:DB"^HE`FJTQw5};}o@rx#uuh\;=6QJ2n!d=  avgt  100     9.847 Â±  0.011  ns/op

Benchmark result is saved to http_256_0_7.csv
