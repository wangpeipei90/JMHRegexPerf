# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = 6<TGM'lt^qke,ewe)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 186.042 ns/op
# Warmup Iteration   2: 110.645 ns/op
# Warmup Iteration   3: 105.483 ns/op
# Warmup Iteration   4: 104.720 ns/op
# Warmup Iteration   5: 106.211 ns/op
Iteration   1: 102.641 ns/op
Iteration   2: 103.109 ns/op
Iteration   3: 102.601 ns/op
Iteration   4: 103.129 ns/op
Iteration   5: 102.731 ns/op
Iteration   6: 102.898 ns/op
Iteration   7: 102.380 ns/op
Iteration   8: 102.700 ns/op
Iteration   9: 102.497 ns/op
Iteration  10: 102.653 ns/op
Iteration  11: 102.535 ns/op
Iteration  12: 102.834 ns/op
Iteration  13: 102.507 ns/op
Iteration  14: 102.755 ns/op
Iteration  15: 102.703 ns/op
Iteration  16: 103.178 ns/op
Iteration  17: 102.837 ns/op
Iteration  18: 103.384 ns/op
Iteration  19: 102.752 ns/op
Iteration  20: 103.318 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 178.586 ns/op
# Warmup Iteration   2: 105.991 ns/op
# Warmup Iteration   3: 102.269 ns/op
# Warmup Iteration   4: 101.522 ns/op
# Warmup Iteration   5: 102.589 ns/op
Iteration   1: 99.732 ns/op
Iteration   2: 100.343 ns/op
Iteration   3: 100.218 ns/op
Iteration   4: 99.845 ns/op
Iteration   5: 100.323 ns/op
Iteration   6: 99.676 ns/op
Iteration   7: 100.193 ns/op
Iteration   8: 99.533 ns/op
Iteration   9: 99.899 ns/op
Iteration  10: 101.701 ns/op
Iteration  11: 103.134 ns/op
Iteration  12: 99.662 ns/op
Iteration  13: 99.734 ns/op
Iteration  14: 100.369 ns/op
Iteration  15: 99.646 ns/op
Iteration  16: 99.912 ns/op
Iteration  17: 99.547 ns/op
Iteration  18: 99.839 ns/op
Iteration  19: 99.562 ns/op
Iteration  20: 99.907 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 180.168 ns/op
# Warmup Iteration   2: 108.342 ns/op
# Warmup Iteration   3: 102.150 ns/op
# Warmup Iteration   4: 101.617 ns/op
# Warmup Iteration   5: 102.658 ns/op
Iteration   1: 101.712 ns/op
Iteration   2: 100.296 ns/op
Iteration   3: 99.792 ns/op
Iteration   4: 100.249 ns/op
Iteration   5: 100.240 ns/op
Iteration   6: 99.564 ns/op
Iteration   7: 99.710 ns/op
Iteration   8: 99.532 ns/op
Iteration   9: 99.740 ns/op
Iteration  10: 99.555 ns/op
Iteration  11: 99.781 ns/op
Iteration  12: 99.487 ns/op
Iteration  13: 100.534 ns/op
Iteration  14: 99.774 ns/op
Iteration  15: 99.571 ns/op
Iteration  16: 99.989 ns/op
Iteration  17: 99.593 ns/op
Iteration  18: 99.902 ns/op
Iteration  19: 99.720 ns/op
Iteration  20: 100.395 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 181.534 ns/op
# Warmup Iteration   2: 107.084 ns/op
# Warmup Iteration   3: 102.093 ns/op
# Warmup Iteration   4: 101.584 ns/op
# Warmup Iteration   5: 102.791 ns/op
Iteration   1: 99.923 ns/op
Iteration   2: 100.176 ns/op
Iteration   3: 100.255 ns/op
Iteration   4: 99.725 ns/op
Iteration   5: 100.229 ns/op
Iteration   6: 99.564 ns/op
Iteration   7: 100.477 ns/op
Iteration   8: 99.545 ns/op
Iteration   9: 99.781 ns/op
Iteration  10: 99.522 ns/op
Iteration  11: 99.823 ns/op
Iteration  12: 100.093 ns/op
Iteration  13: 100.087 ns/op
Iteration  14: 100.255 ns/op
Iteration  15: 100.037 ns/op
Iteration  16: 100.679 ns/op
Iteration  17: 99.958 ns/op
Iteration  18: 100.305 ns/op
Iteration  19: 100.369 ns/op
Iteration  20: 100.763 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 179.308 ns/op
# Warmup Iteration   2: 106.764 ns/op
# Warmup Iteration   3: 102.530 ns/op
# Warmup Iteration   4: 101.887 ns/op
# Warmup Iteration   5: 102.878 ns/op
Iteration   1: 99.999 ns/op
Iteration   2: 100.213 ns/op
Iteration   3: 100.040 ns/op
Iteration   4: 100.458 ns/op
Iteration   5: 100.412 ns/op
Iteration   6: 99.836 ns/op
Iteration   7: 99.920 ns/op
Iteration   8: 99.878 ns/op
Iteration   9: 99.991 ns/op
Iteration  10: 99.743 ns/op
Iteration  11: 100.130 ns/op
Iteration  12: 100.463 ns/op
Iteration  13: 99.987 ns/op
Iteration  14: 100.065 ns/op
Iteration  15: 100.006 ns/op
Iteration  16: 100.279 ns/op
Iteration  17: 99.941 ns/op
Iteration  18: 100.276 ns/op
Iteration  19: 100.144 ns/op
Iteration  20: 100.635 ns/op


Result "benchmark.StringContains.regexMatches":
  100.620 ±(99.9%) 0.409 ns/op [Average]
  (min, avg, max) = (99.487, 100.620, 103.384), stdev = 1.206
  CI (99.9%): [100.211, 101.029] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = 6<TGM'lt^qke,ewe)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 8.753 ns/op
# Warmup Iteration   2: 9.030 ns/op
# Warmup Iteration   3: 9.031 ns/op
# Warmup Iteration   4: 9.009 ns/op
# Warmup Iteration   5: 9.054 ns/op
Iteration   1: 8.999 ns/op
Iteration   2: 9.013 ns/op
Iteration   3: 9.028 ns/op
Iteration   4: 9.027 ns/op
Iteration   5: 9.012 ns/op
Iteration   6: 9.017 ns/op
Iteration   7: 9.028 ns/op
Iteration   8: 9.016 ns/op
Iteration   9: 9.000 ns/op
Iteration  10: 9.047 ns/op
Iteration  11: 9.036 ns/op
Iteration  12: 9.009 ns/op
Iteration  13: 9.031 ns/op
Iteration  14: 9.012 ns/op
Iteration  15: 9.022 ns/op
Iteration  16: 8.995 ns/op
Iteration  17: 9.026 ns/op
Iteration  18: 8.994 ns/op
Iteration  19: 9.039 ns/op
Iteration  20: 9.038 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 8.641 ns/op
# Warmup Iteration   2: 8.970 ns/op
# Warmup Iteration   3: 8.945 ns/op
# Warmup Iteration   4: 8.943 ns/op
# Warmup Iteration   5: 8.944 ns/op
Iteration   1: 8.943 ns/op
Iteration   2: 8.952 ns/op
Iteration   3: 8.944 ns/op
Iteration   4: 8.942 ns/op
Iteration   5: 8.943 ns/op
Iteration   6: 8.943 ns/op
Iteration   7: 8.942 ns/op
Iteration   8: 8.950 ns/op
Iteration   9: 8.942 ns/op
Iteration  10: 8.943 ns/op
Iteration  11: 8.943 ns/op
Iteration  12: 8.943 ns/op
Iteration  13: 8.943 ns/op
Iteration  14: 8.943 ns/op
Iteration  15: 8.943 ns/op
Iteration  16: 8.943 ns/op
Iteration  17: 8.942 ns/op
Iteration  18: 8.942 ns/op
Iteration  19: 8.943 ns/op
Iteration  20: 8.944 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 8.742 ns/op
# Warmup Iteration   2: 9.035 ns/op
# Warmup Iteration   3: 9.053 ns/op
# Warmup Iteration   4: 9.040 ns/op
# Warmup Iteration   5: 9.014 ns/op
Iteration   1: 9.027 ns/op
Iteration   2: 9.050 ns/op
Iteration   3: 9.037 ns/op
Iteration   4: 9.039 ns/op
Iteration   5: 9.048 ns/op
Iteration   6: 9.020 ns/op
Iteration   7: 9.042 ns/op
Iteration   8: 9.045 ns/op
Iteration   9: 9.033 ns/op
Iteration  10: 9.026 ns/op
Iteration  11: 9.021 ns/op
Iteration  12: 9.025 ns/op
Iteration  13: 9.016 ns/op
Iteration  14: 9.030 ns/op
Iteration  15: 9.046 ns/op
Iteration  16: 9.008 ns/op
Iteration  17: 9.028 ns/op
Iteration  18: 9.031 ns/op
Iteration  19: 9.009 ns/op
Iteration  20: 9.044 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 8.768 ns/op
# Warmup Iteration   2: 9.040 ns/op
# Warmup Iteration   3: 8.990 ns/op
# Warmup Iteration   4: 9.031 ns/op
# Warmup Iteration   5: 8.996 ns/op
Iteration   1: 9.012 ns/op
Iteration   2: 9.000 ns/op
Iteration   3: 9.008 ns/op
Iteration   4: 9.027 ns/op
Iteration   5: 9.009 ns/op
Iteration   6: 9.017 ns/op
Iteration   7: 9.032 ns/op
Iteration   8: 9.014 ns/op
Iteration   9: 9.010 ns/op
Iteration  10: 9.001 ns/op
Iteration  11: 8.987 ns/op
Iteration  12: 9.009 ns/op
Iteration  13: 8.998 ns/op
Iteration  14: 8.992 ns/op
Iteration  15: 8.984 ns/op
Iteration  16: 9.000 ns/op
Iteration  17: 8.998 ns/op
Iteration  18: 9.000 ns/op
Iteration  19: 8.999 ns/op
Iteration  20: 9.013 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 8.729 ns/op
# Warmup Iteration   2: 8.978 ns/op
# Warmup Iteration   3: 8.934 ns/op
# Warmup Iteration   4: 8.934 ns/op
# Warmup Iteration   5: 8.935 ns/op
Iteration   1: 8.934 ns/op
Iteration   2: 8.935 ns/op
Iteration   3: 8.934 ns/op
Iteration   4: 8.934 ns/op
Iteration   5: 8.935 ns/op
Iteration   6: 8.934 ns/op
Iteration   7: 8.936 ns/op
Iteration   8: 8.935 ns/op
Iteration   9: 8.937 ns/op
Iteration  10: 8.935 ns/op
Iteration  11: 8.935 ns/op
Iteration  12: 8.940 ns/op
Iteration  13: 8.934 ns/op
Iteration  14: 8.934 ns/op
Iteration  15: 8.935 ns/op
Iteration  16: 8.943 ns/op
Iteration  17: 8.935 ns/op
Iteration  18: 8.935 ns/op
Iteration  19: 8.934 ns/op
Iteration  20: 8.935 ns/op


Result "benchmark.StringContains.stringContains":
  8.987 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (8.934, 8.987, 9.050), stdev = 0.041
  CI (99.9%): [8.973, 9.001] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  6<TGM'lt^qke,ewe  avgt  100  100.620 ± 0.409  ns/op
StringContains.stringContains     http  6<TGM'lt^qke,ewe  avgt  100    8.987 ± 0.014  ns/op

Benchmark result is saved to http_16_1_2.csv
