# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = lsZ9http8 B =keT)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 308.493 ns/op
# Warmup Iteration   2: 300.088 ns/op
# Warmup Iteration   3: 224.433 ns/op
# Warmup Iteration   4: 226.911 ns/op
# Warmup Iteration   5: 228.421 ns/op
Iteration   1: 228.899 ns/op
Iteration   2: 224.437 ns/op
Iteration   3: 231.154 ns/op
Iteration   4: 231.449 ns/op
Iteration   5: 224.342 ns/op
Iteration   6: 226.419 ns/op
Iteration   7: 225.660 ns/op
Iteration   8: 225.608 ns/op
Iteration   9: 224.326 ns/op
Iteration  10: 225.556 ns/op
Iteration  11: 225.474 ns/op
Iteration  12: 224.405 ns/op
Iteration  13: 225.646 ns/op
Iteration  14: 227.029 ns/op
Iteration  15: 224.358 ns/op
Iteration  16: 225.627 ns/op
Iteration  17: 226.189 ns/op
Iteration  18: 224.405 ns/op
Iteration  19: 224.813 ns/op
Iteration  20: 225.271 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 305.568 ns/op
# Warmup Iteration   2: 295.411 ns/op
# Warmup Iteration   3: 224.801 ns/op
# Warmup Iteration   4: 227.056 ns/op
# Warmup Iteration   5: 227.903 ns/op
Iteration   1: 228.694 ns/op
Iteration   2: 224.885 ns/op
Iteration   3: 230.064 ns/op
Iteration   4: 231.288 ns/op
Iteration   5: 224.834 ns/op
Iteration   6: 225.722 ns/op
Iteration   7: 225.826 ns/op
Iteration   8: 225.859 ns/op
Iteration   9: 224.786 ns/op
Iteration  10: 225.796 ns/op
Iteration  11: 225.819 ns/op
Iteration  12: 224.887 ns/op
Iteration  13: 226.076 ns/op
Iteration  14: 226.168 ns/op
Iteration  15: 224.789 ns/op
Iteration  16: 226.355 ns/op
Iteration  17: 225.879 ns/op
Iteration  18: 224.739 ns/op
Iteration  19: 226.596 ns/op
Iteration  20: 225.461 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 306.719 ns/op
# Warmup Iteration   2: 294.623 ns/op
# Warmup Iteration   3: 225.556 ns/op
# Warmup Iteration   4: 227.684 ns/op
# Warmup Iteration   5: 228.510 ns/op
Iteration   1: 229.595 ns/op
Iteration   2: 225.550 ns/op
Iteration   3: 230.565 ns/op
Iteration   4: 233.079 ns/op
Iteration   5: 226.224 ns/op
Iteration   6: 226.937 ns/op
Iteration   7: 226.611 ns/op
Iteration   8: 226.674 ns/op
Iteration   9: 225.781 ns/op
Iteration  10: 226.881 ns/op
Iteration  11: 226.391 ns/op
Iteration  12: 225.758 ns/op
Iteration  13: 226.596 ns/op
Iteration  14: 226.690 ns/op
Iteration  15: 225.814 ns/op
Iteration  16: 226.577 ns/op
Iteration  17: 226.783 ns/op
Iteration  18: 225.597 ns/op
Iteration  19: 226.159 ns/op
Iteration  20: 228.349 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 305.228 ns/op
# Warmup Iteration   2: 291.777 ns/op
# Warmup Iteration   3: 224.850 ns/op
# Warmup Iteration   4: 226.962 ns/op
# Warmup Iteration   5: 227.676 ns/op
Iteration   1: 228.591 ns/op
Iteration   2: 224.972 ns/op
Iteration   3: 229.899 ns/op
Iteration   4: 231.453 ns/op
Iteration   5: 225.036 ns/op
Iteration   6: 225.983 ns/op
Iteration   7: 226.089 ns/op
Iteration   8: 225.864 ns/op
Iteration   9: 224.917 ns/op
Iteration  10: 225.956 ns/op
Iteration  11: 226.100 ns/op
Iteration  12: 224.808 ns/op
Iteration  13: 227.177 ns/op
Iteration  14: 226.108 ns/op
Iteration  15: 224.804 ns/op
Iteration  16: 226.149 ns/op
Iteration  17: 226.457 ns/op
Iteration  18: 224.922 ns/op
Iteration  19: 227.898 ns/op
Iteration  20: 225.534 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 305.412 ns/op
# Warmup Iteration   2: 296.388 ns/op
# Warmup Iteration   3: 225.648 ns/op
# Warmup Iteration   4: 228.190 ns/op
# Warmup Iteration   5: 229.241 ns/op
Iteration   1: 229.771 ns/op
Iteration   2: 225.779 ns/op
Iteration   3: 230.769 ns/op
Iteration   4: 232.107 ns/op
Iteration   5: 225.757 ns/op
Iteration   6: 227.068 ns/op
Iteration   7: 227.117 ns/op
Iteration   8: 225.769 ns/op
Iteration   9: 227.314 ns/op
Iteration  10: 227.178 ns/op
Iteration  11: 226.967 ns/op
Iteration  12: 225.779 ns/op
Iteration  13: 228.088 ns/op
Iteration  14: 228.258 ns/op
Iteration  15: 225.956 ns/op
Iteration  16: 227.277 ns/op
Iteration  17: 228.518 ns/op
Iteration  18: 225.962 ns/op
Iteration  19: 226.706 ns/op
Iteration  20: 227.428 ns/op


Result "benchmark.StringContains.regexMatches":
  226.665 ±(99.9%) 0.648 ns/op [Average]
  (min, avg, max) = (224.326, 226.665, 233.079), stdev = 1.910
  CI (99.9%): [226.017, 227.313] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = lsZ9http8 B =keT)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.215 ns/op
# Warmup Iteration   2: 9.717 ns/op
# Warmup Iteration   3: 9.983 ns/op
# Warmup Iteration   4: 9.986 ns/op
# Warmup Iteration   5: 9.997 ns/op
Iteration   1: 9.990 ns/op
Iteration   2: 9.992 ns/op
Iteration   3: 9.992 ns/op
Iteration   4: 9.992 ns/op
Iteration   5: 9.982 ns/op
Iteration   6: 9.982 ns/op
Iteration   7: 9.991 ns/op
Iteration   8: 9.968 ns/op
Iteration   9: 9.988 ns/op
Iteration  10: 9.997 ns/op
Iteration  11: 9.980 ns/op
Iteration  12: 9.977 ns/op
Iteration  13: 9.991 ns/op
Iteration  14: 9.981 ns/op
Iteration  15: 9.970 ns/op
Iteration  16: 9.985 ns/op
Iteration  17: 9.951 ns/op
Iteration  18: 9.956 ns/op
Iteration  19: 9.970 ns/op
Iteration  20: 9.973 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.211 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.858 ns/op
# Warmup Iteration   4: 9.868 ns/op
# Warmup Iteration   5: 9.848 ns/op
Iteration   1: 9.853 ns/op
Iteration   2: 9.841 ns/op
Iteration   3: 9.875 ns/op
Iteration   4: 9.869 ns/op
Iteration   5: 9.893 ns/op
Iteration   6: 9.857 ns/op
Iteration   7: 9.872 ns/op
Iteration   8: 9.869 ns/op
Iteration   9: 9.861 ns/op
Iteration  10: 9.867 ns/op
Iteration  11: 9.870 ns/op
Iteration  12: 9.889 ns/op
Iteration  13: 9.889 ns/op
Iteration  14: 9.881 ns/op
Iteration  15: 9.881 ns/op
Iteration  16: 9.880 ns/op
Iteration  17: 9.879 ns/op
Iteration  18: 9.886 ns/op
Iteration  19: 9.862 ns/op
Iteration  20: 9.862 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.467 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.952 ns/op
# Warmup Iteration   4: 9.936 ns/op
# Warmup Iteration   5: 9.958 ns/op
Iteration   1: 9.923 ns/op
Iteration   2: 9.952 ns/op
Iteration   3: 9.939 ns/op
Iteration   4: 9.951 ns/op
Iteration   5: 9.967 ns/op
Iteration   6: 9.936 ns/op
Iteration   7: 9.970 ns/op
Iteration   8: 9.949 ns/op
Iteration   9: 9.939 ns/op
Iteration  10: 9.962 ns/op
Iteration  11: 9.948 ns/op
Iteration  12: 9.936 ns/op
Iteration  13: 9.949 ns/op
Iteration  14: 9.954 ns/op
Iteration  15: 9.929 ns/op
Iteration  16: 9.918 ns/op
Iteration  17: 9.940 ns/op
Iteration  18: 9.935 ns/op
Iteration  19: 9.977 ns/op
Iteration  20: 9.954 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.450 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.789 ns/op
# Warmup Iteration   4: 9.793 ns/op
# Warmup Iteration   5: 9.796 ns/op
Iteration   1: 9.806 ns/op
Iteration   2: 9.789 ns/op
Iteration   3: 9.799 ns/op
Iteration   4: 9.804 ns/op
Iteration   5: 9.799 ns/op
Iteration   6: 9.800 ns/op
Iteration   7: 9.797 ns/op
Iteration   8: 9.798 ns/op
Iteration   9: 9.805 ns/op
Iteration  10: 9.810 ns/op
Iteration  11: 9.804 ns/op
Iteration  12: 9.785 ns/op
Iteration  13: 9.791 ns/op
Iteration  14: 9.794 ns/op
Iteration  15: 9.802 ns/op
Iteration  16: 9.794 ns/op
Iteration  17: 9.813 ns/op
Iteration  18: 9.809 ns/op
Iteration  19: 9.801 ns/op
Iteration  20: 9.807 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.227 ns/op
# Warmup Iteration   2: 9.715 ns/op
# Warmup Iteration   3: 9.846 ns/op
# Warmup Iteration   4: 9.845 ns/op
# Warmup Iteration   5: 9.856 ns/op
Iteration   1: 9.853 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.854 ns/op
Iteration   4: 9.847 ns/op
Iteration   5: 9.869 ns/op
Iteration   6: 9.858 ns/op
Iteration   7: 9.864 ns/op
Iteration   8: 9.855 ns/op
Iteration   9: 9.864 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.846 ns/op
Iteration  12: 9.861 ns/op
Iteration  13: 9.864 ns/op
Iteration  14: 9.862 ns/op
Iteration  15: 9.864 ns/op
Iteration  16: 9.870 ns/op
Iteration  17: 9.860 ns/op
Iteration  18: 9.859 ns/op
Iteration  19: 9.851 ns/op
Iteration  20: 9.868 ns/op


Result "benchmark.StringContains.stringContains":
  9.892 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (9.785, 9.892, 9.997), stdev = 0.066
  CI (99.9%): [9.870, 9.914] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  lsZ9http8 B =keT  avgt  100  226.665 ± 0.648  ns/op
StringContains.stringContains     http  lsZ9http8 B =keT  avgt  100    9.892 ± 0.022  ns/op

Benchmark result is saved to http_16_0.25_0.csv
