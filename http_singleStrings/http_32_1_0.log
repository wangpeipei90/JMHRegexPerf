# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = WX?9gl	VXoT&PB+D~*@?qZ]L)cd]UV6V)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 214.763 ns/op
# Warmup Iteration   2: 145.566 ns/op
# Warmup Iteration   3: 130.698 ns/op
# Warmup Iteration   4: 129.991 ns/op
# Warmup Iteration   5: 130.837 ns/op
Iteration   1: 131.093 ns/op
Iteration   2: 128.813 ns/op
Iteration   3: 128.117 ns/op
Iteration   4: 128.146 ns/op
Iteration   5: 128.244 ns/op
Iteration   6: 129.057 ns/op
Iteration   7: 128.210 ns/op
Iteration   8: 128.333 ns/op
Iteration   9: 127.910 ns/op
Iteration  10: 127.944 ns/op
Iteration  11: 128.227 ns/op
Iteration  12: 127.844 ns/op
Iteration  13: 127.788 ns/op
Iteration  14: 127.838 ns/op
Iteration  15: 127.863 ns/op
Iteration  16: 128.083 ns/op
Iteration  17: 127.993 ns/op
Iteration  18: 127.860 ns/op
Iteration  19: 127.875 ns/op
Iteration  20: 128.221 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 204.931 ns/op
# Warmup Iteration   2: 138.307 ns/op
# Warmup Iteration   3: 123.815 ns/op
# Warmup Iteration   4: 124.258 ns/op
# Warmup Iteration   5: 129.359 ns/op
Iteration   1: 122.791 ns/op
Iteration   2: 122.910 ns/op
Iteration   3: 122.861 ns/op
Iteration   4: 123.305 ns/op
Iteration   5: 122.802 ns/op
Iteration   6: 122.725 ns/op
Iteration   7: 122.759 ns/op
Iteration   8: 122.980 ns/op
Iteration   9: 122.465 ns/op
Iteration  10: 122.426 ns/op
Iteration  11: 122.847 ns/op
Iteration  12: 123.120 ns/op
Iteration  13: 122.583 ns/op
Iteration  14: 122.538 ns/op
Iteration  15: 122.671 ns/op
Iteration  16: 123.033 ns/op
Iteration  17: 122.566 ns/op
Iteration  18: 122.726 ns/op
Iteration  19: 122.847 ns/op
Iteration  20: 122.716 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 202.552 ns/op
# Warmup Iteration   2: 137.276 ns/op
# Warmup Iteration   3: 124.077 ns/op
# Warmup Iteration   4: 124.418 ns/op
# Warmup Iteration   5: 128.759 ns/op
Iteration   1: 122.946 ns/op
Iteration   2: 122.866 ns/op
Iteration   3: 122.891 ns/op
Iteration   4: 123.428 ns/op
Iteration   5: 122.934 ns/op
Iteration   6: 122.860 ns/op
Iteration   7: 122.891 ns/op
Iteration   8: 123.661 ns/op
Iteration   9: 122.632 ns/op
Iteration  10: 122.577 ns/op
Iteration  11: 122.927 ns/op
Iteration  12: 122.506 ns/op
Iteration  13: 122.516 ns/op
Iteration  14: 122.580 ns/op
Iteration  15: 122.840 ns/op
Iteration  16: 122.638 ns/op
Iteration  17: 122.757 ns/op
Iteration  18: 122.678 ns/op
Iteration  19: 123.004 ns/op
Iteration  20: 122.602 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 216.134 ns/op
# Warmup Iteration   2: 151.582 ns/op
# Warmup Iteration   3: 136.060 ns/op
# Warmup Iteration   4: 135.216 ns/op
# Warmup Iteration   5: 136.030 ns/op
Iteration   1: 136.295 ns/op
Iteration   2: 133.681 ns/op
Iteration   3: 134.254 ns/op
Iteration   4: 133.731 ns/op
Iteration   5: 133.700 ns/op
Iteration   6: 133.569 ns/op
Iteration   7: 133.632 ns/op
Iteration   8: 133.843 ns/op
Iteration   9: 135.058 ns/op
Iteration  10: 133.578 ns/op
Iteration  11: 133.281 ns/op
Iteration  12: 133.175 ns/op
Iteration  13: 133.038 ns/op
Iteration  14: 133.113 ns/op
Iteration  15: 133.754 ns/op
Iteration  16: 133.297 ns/op
Iteration  17: 133.379 ns/op
Iteration  18: 133.265 ns/op
Iteration  19: 133.238 ns/op
Iteration  20: 133.393 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 204.628 ns/op
# Warmup Iteration   2: 137.511 ns/op
# Warmup Iteration   3: 123.706 ns/op
# Warmup Iteration   4: 124.098 ns/op
# Warmup Iteration   5: 128.534 ns/op
Iteration   1: 122.716 ns/op
Iteration   2: 122.780 ns/op
Iteration   3: 122.678 ns/op
Iteration   4: 123.167 ns/op
Iteration   5: 122.734 ns/op
Iteration   6: 122.677 ns/op
Iteration   7: 122.698 ns/op
Iteration   8: 122.928 ns/op
Iteration   9: 122.304 ns/op
Iteration  10: 122.369 ns/op
Iteration  11: 122.805 ns/op
Iteration  12: 122.442 ns/op
Iteration  13: 122.358 ns/op
Iteration  14: 122.544 ns/op
Iteration  15: 123.096 ns/op
Iteration  16: 122.490 ns/op
Iteration  17: 122.533 ns/op
Iteration  18: 122.577 ns/op
Iteration  19: 123.131 ns/op
Iteration  20: 122.636 ns/op


Result "benchmark.StringContains.regexMatches":
  126.058 ±(99.9%) 1.503 ns/op [Average]
  (min, avg, max) = (122.304, 126.058, 136.295), stdev = 4.433
  CI (99.9%): [124.555, 127.561] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = WX?9gl	VXoT&PB+D~*@?qZ]L)cd]UV6V)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.280 ns/op
# Warmup Iteration   2: 11.201 ns/op
# Warmup Iteration   3: 11.210 ns/op
# Warmup Iteration   4: 11.207 ns/op
# Warmup Iteration   5: 11.207 ns/op
Iteration   1: 11.208 ns/op
Iteration   2: 11.208 ns/op
Iteration   3: 11.208 ns/op
Iteration   4: 11.207 ns/op
Iteration   5: 11.207 ns/op
Iteration   6: 11.208 ns/op
Iteration   7: 11.207 ns/op
Iteration   8: 11.210 ns/op
Iteration   9: 11.208 ns/op
Iteration  10: 11.207 ns/op
Iteration  11: 11.209 ns/op
Iteration  12: 11.207 ns/op
Iteration  13: 11.209 ns/op
Iteration  14: 11.207 ns/op
Iteration  15: 11.208 ns/op
Iteration  16: 11.208 ns/op
Iteration  17: 11.207 ns/op
Iteration  18: 11.208 ns/op
Iteration  19: 11.207 ns/op
Iteration  20: 11.208 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.293 ns/op
# Warmup Iteration   2: 11.234 ns/op
# Warmup Iteration   3: 11.208 ns/op
# Warmup Iteration   4: 11.207 ns/op
# Warmup Iteration   5: 11.208 ns/op
Iteration   1: 11.207 ns/op
Iteration   2: 11.208 ns/op
Iteration   3: 11.207 ns/op
Iteration   4: 11.208 ns/op
Iteration   5: 11.207 ns/op
Iteration   6: 11.207 ns/op
Iteration   7: 11.208 ns/op
Iteration   8: 11.208 ns/op
Iteration   9: 11.208 ns/op
Iteration  10: 11.208 ns/op
Iteration  11: 11.207 ns/op
Iteration  12: 11.208 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.208 ns/op
Iteration  15: 11.207 ns/op
Iteration  16: 11.207 ns/op
Iteration  17: 11.208 ns/op
Iteration  18: 11.208 ns/op
Iteration  19: 11.208 ns/op
Iteration  20: 11.208 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.236 ns/op
# Warmup Iteration   2: 11.201 ns/op
# Warmup Iteration   3: 11.167 ns/op
# Warmup Iteration   4: 11.180 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.168 ns/op
Iteration   2: 11.167 ns/op
Iteration   3: 11.167 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.167 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.167 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.167 ns/op
Iteration  11: 11.170 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.167 ns/op
Iteration  14: 11.174 ns/op
Iteration  15: 11.170 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.167 ns/op
Iteration  19: 11.168 ns/op
Iteration  20: 11.168 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.284 ns/op
# Warmup Iteration   2: 11.203 ns/op
# Warmup Iteration   3: 11.205 ns/op
# Warmup Iteration   4: 11.205 ns/op
# Warmup Iteration   5: 11.205 ns/op
Iteration   1: 11.205 ns/op
Iteration   2: 11.206 ns/op
Iteration   3: 11.205 ns/op
Iteration   4: 11.206 ns/op
Iteration   5: 11.205 ns/op
Iteration   6: 11.205 ns/op
Iteration   7: 11.206 ns/op
Iteration   8: 11.206 ns/op
Iteration   9: 11.206 ns/op
Iteration  10: 11.205 ns/op
Iteration  11: 11.205 ns/op
Iteration  12: 11.206 ns/op
Iteration  13: 11.205 ns/op
Iteration  14: 11.206 ns/op
Iteration  15: 11.205 ns/op
Iteration  16: 11.205 ns/op
Iteration  17: 11.205 ns/op
Iteration  18: 11.205 ns/op
Iteration  19: 11.205 ns/op
Iteration  20: 11.206 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.225 ns/op
# Warmup Iteration   2: 11.207 ns/op
# Warmup Iteration   3: 11.167 ns/op
# Warmup Iteration   4: 11.168 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.167 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.167 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.167 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.168 ns/op
Iteration  15: 11.168 ns/op
Iteration  16: 11.167 ns/op
Iteration  17: 11.167 ns/op
Iteration  18: 11.167 ns/op
Iteration  19: 11.170 ns/op
Iteration  20: 11.168 ns/op


Result "benchmark.StringContains.stringContains":
  11.191 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (11.167, 11.191, 11.210), stdev = 0.019
  CI (99.9%): [11.184, 11.198] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  WX?9gl	VXoT&PB+D~*@?qZ]L)cd]UV6V  avgt  100  126.058 ± 1.503  ns/op
StringContains.stringContains     http  WX?9gl	VXoT&PB+D~*@?qZ]L)cd]UV6V  avgt  100   11.191 ± 0.007  ns/op

Benchmark result is saved to http_32_1_0.csv
