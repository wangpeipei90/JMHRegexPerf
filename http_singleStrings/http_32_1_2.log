# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = e7=0D~zFz|_pIzG}P#-Za] anH;&vxFP)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 209.964 ns/op
# Warmup Iteration   2: 141.610 ns/op
# Warmup Iteration   3: 126.163 ns/op
# Warmup Iteration   4: 124.324 ns/op
# Warmup Iteration   5: 127.270 ns/op
Iteration   1: 124.216 ns/op
Iteration   2: 122.650 ns/op
Iteration   3: 122.669 ns/op
Iteration   4: 123.092 ns/op
Iteration   5: 122.625 ns/op
Iteration   6: 122.609 ns/op
Iteration   7: 122.593 ns/op
Iteration   8: 122.864 ns/op
Iteration   9: 122.308 ns/op
Iteration  10: 122.335 ns/op
Iteration  11: 122.343 ns/op
Iteration  12: 122.489 ns/op
Iteration  13: 122.304 ns/op
Iteration  14: 122.333 ns/op
Iteration  15: 122.621 ns/op
Iteration  16: 122.315 ns/op
Iteration  17: 122.403 ns/op
Iteration  18: 122.525 ns/op
Iteration  19: 123.067 ns/op
Iteration  20: 122.471 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 207.613 ns/op
# Warmup Iteration   2: 143.592 ns/op
# Warmup Iteration   3: 129.236 ns/op
# Warmup Iteration   4: 130.626 ns/op
# Warmup Iteration   5: 130.371 ns/op
Iteration   1: 131.819 ns/op
Iteration   2: 128.066 ns/op
Iteration   3: 128.088 ns/op
Iteration   4: 128.170 ns/op
Iteration   5: 128.166 ns/op
Iteration   6: 128.618 ns/op
Iteration   7: 128.075 ns/op
Iteration   8: 128.737 ns/op
Iteration   9: 127.711 ns/op
Iteration  10: 127.755 ns/op
Iteration  11: 127.968 ns/op
Iteration  12: 127.684 ns/op
Iteration  13: 127.752 ns/op
Iteration  14: 127.753 ns/op
Iteration  15: 128.807 ns/op
Iteration  16: 128.065 ns/op
Iteration  17: 127.978 ns/op
Iteration  18: 127.942 ns/op
Iteration  19: 127.967 ns/op
Iteration  20: 128.473 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 203.991 ns/op
# Warmup Iteration   2: 137.809 ns/op
# Warmup Iteration   3: 123.493 ns/op
# Warmup Iteration   4: 123.991 ns/op
# Warmup Iteration   5: 128.171 ns/op
Iteration   1: 122.456 ns/op
Iteration   2: 122.390 ns/op
Iteration   3: 122.374 ns/op
Iteration   4: 122.875 ns/op
Iteration   5: 122.456 ns/op
Iteration   6: 122.487 ns/op
Iteration   7: 122.432 ns/op
Iteration   8: 122.662 ns/op
Iteration   9: 122.102 ns/op
Iteration  10: 122.116 ns/op
Iteration  11: 122.256 ns/op
Iteration  12: 122.025 ns/op
Iteration  13: 122.087 ns/op
Iteration  14: 122.101 ns/op
Iteration  15: 122.383 ns/op
Iteration  16: 122.338 ns/op
Iteration  17: 122.194 ns/op
Iteration  18: 122.123 ns/op
Iteration  19: 123.098 ns/op
Iteration  20: 122.369 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 210.910 ns/op
# Warmup Iteration   2: 145.127 ns/op
# Warmup Iteration   3: 130.725 ns/op
# Warmup Iteration   4: 130.647 ns/op
# Warmup Iteration   5: 131.207 ns/op
Iteration   1: 131.950 ns/op
Iteration   2: 129.444 ns/op
Iteration   3: 129.275 ns/op
Iteration   4: 129.254 ns/op
Iteration   5: 128.948 ns/op
Iteration   6: 130.277 ns/op
Iteration   7: 129.040 ns/op
Iteration   8: 129.878 ns/op
Iteration   9: 129.033 ns/op
Iteration  10: 128.738 ns/op
Iteration  11: 129.079 ns/op
Iteration  12: 128.822 ns/op
Iteration  13: 128.709 ns/op
Iteration  14: 128.646 ns/op
Iteration  15: 129.065 ns/op
Iteration  16: 129.803 ns/op
Iteration  17: 128.968 ns/op
Iteration  18: 129.031 ns/op
Iteration  19: 129.076 ns/op
Iteration  20: 129.130 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 207.939 ns/op
# Warmup Iteration   2: 139.820 ns/op
# Warmup Iteration   3: 123.195 ns/op
# Warmup Iteration   4: 123.702 ns/op
# Warmup Iteration   5: 128.397 ns/op
Iteration   1: 122.291 ns/op
Iteration   2: 122.205 ns/op
Iteration   3: 122.244 ns/op
Iteration   4: 122.836 ns/op
Iteration   5: 122.304 ns/op
Iteration   6: 122.278 ns/op
Iteration   7: 122.187 ns/op
Iteration   8: 122.736 ns/op
Iteration   9: 122.109 ns/op
Iteration  10: 122.067 ns/op
Iteration  11: 122.311 ns/op
Iteration  12: 123.075 ns/op
Iteration  13: 122.121 ns/op
Iteration  14: 122.176 ns/op
Iteration  15: 122.828 ns/op
Iteration  16: 122.237 ns/op
Iteration  17: 122.642 ns/op
Iteration  18: 122.304 ns/op
Iteration  19: 123.209 ns/op
Iteration  20: 122.537 ns/op


Result "benchmark.StringContains.regexMatches":
  125.006 ±(99.9%) 1.078 ns/op [Average]
  (min, avg, max) = (122.025, 125.006, 131.950), stdev = 3.180
  CI (99.9%): [123.928, 126.085] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = e7=0D~zFz|_pIzG}P#-Za] anH;&vxFP)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.294 ns/op
# Warmup Iteration   2: 11.223 ns/op
# Warmup Iteration   3: 11.169 ns/op
# Warmup Iteration   4: 11.169 ns/op
# Warmup Iteration   5: 11.169 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.169 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.186 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.168 ns/op
Iteration  15: 11.168 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.169 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.168 ns/op
Iteration  20: 11.187 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.290 ns/op
# Warmup Iteration   2: 11.204 ns/op
# Warmup Iteration   3: 11.209 ns/op
# Warmup Iteration   4: 11.208 ns/op
# Warmup Iteration   5: 11.209 ns/op
Iteration   1: 11.208 ns/op
Iteration   2: 11.209 ns/op
Iteration   3: 11.211 ns/op
Iteration   4: 11.209 ns/op
Iteration   5: 11.208 ns/op
Iteration   6: 11.208 ns/op
Iteration   7: 11.209 ns/op
Iteration   8: 11.210 ns/op
Iteration   9: 11.209 ns/op
Iteration  10: 11.208 ns/op
Iteration  11: 11.208 ns/op
Iteration  12: 11.209 ns/op
Iteration  13: 11.211 ns/op
Iteration  14: 11.209 ns/op
Iteration  15: 11.209 ns/op
Iteration  16: 11.208 ns/op
Iteration  17: 11.209 ns/op
Iteration  18: 11.208 ns/op
Iteration  19: 11.208 ns/op
Iteration  20: 11.208 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.236 ns/op
# Warmup Iteration   2: 11.223 ns/op
# Warmup Iteration   3: 11.174 ns/op
# Warmup Iteration   4: 11.171 ns/op
# Warmup Iteration   5: 11.173 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.175 ns/op
Iteration   3: 11.173 ns/op
Iteration   4: 11.170 ns/op
Iteration   5: 11.178 ns/op
Iteration   6: 11.172 ns/op
Iteration   7: 11.176 ns/op
Iteration   8: 11.189 ns/op
Iteration   9: 11.174 ns/op
Iteration  10: 11.177 ns/op
Iteration  11: 11.170 ns/op
Iteration  12: 11.171 ns/op
Iteration  13: 11.171 ns/op
Iteration  14: 11.171 ns/op
Iteration  15: 11.172 ns/op
Iteration  16: 11.170 ns/op
Iteration  17: 11.171 ns/op
Iteration  18: 11.172 ns/op
Iteration  19: 11.173 ns/op
Iteration  20: 11.193 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.273 ns/op
# Warmup Iteration   2: 11.222 ns/op
# Warmup Iteration   3: 11.408 ns/op
# Warmup Iteration   4: 11.440 ns/op
# Warmup Iteration   5: 11.423 ns/op
Iteration   1: 11.410 ns/op
Iteration   2: 11.424 ns/op
Iteration   3: 11.419 ns/op
Iteration   4: 11.412 ns/op
Iteration   5: 11.415 ns/op
Iteration   6: 11.411 ns/op
Iteration   7: 11.414 ns/op
Iteration   8: 11.436 ns/op
Iteration   9: 11.419 ns/op
Iteration  10: 11.409 ns/op
Iteration  11: 11.411 ns/op
Iteration  12: 11.382 ns/op
Iteration  13: 11.362 ns/op
Iteration  14: 11.366 ns/op
Iteration  15: 11.396 ns/op
Iteration  16: 11.393 ns/op
Iteration  17: 11.375 ns/op
Iteration  18: 11.417 ns/op
Iteration  19: 11.387 ns/op
Iteration  20: 11.390 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.270 ns/op
# Warmup Iteration   2: 11.223 ns/op
# Warmup Iteration   3: 11.170 ns/op
# Warmup Iteration   4: 11.169 ns/op
# Warmup Iteration   5: 11.170 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.169 ns/op
Iteration   3: 11.169 ns/op
Iteration   4: 11.169 ns/op
Iteration   5: 11.170 ns/op
Iteration   6: 11.169 ns/op
Iteration   7: 11.170 ns/op
Iteration   8: 11.189 ns/op
Iteration   9: 11.169 ns/op
Iteration  10: 11.169 ns/op
Iteration  11: 11.170 ns/op
Iteration  12: 11.170 ns/op
Iteration  13: 11.169 ns/op
Iteration  14: 11.167 ns/op
Iteration  15: 11.169 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.169 ns/op
Iteration  19: 11.167 ns/op
Iteration  20: 11.169 ns/op


Result "benchmark.StringContains.stringContains":
  11.225 ±(99.9%) 0.031 ns/op [Average]
  (min, avg, max) = (11.167, 11.225, 11.436), stdev = 0.091
  CI (99.9%): [11.194, 11.256] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  e7=0D~zFz|_pIzG}P#-Za] anH;&vxFP  avgt  100  125.006 ± 1.078  ns/op
StringContains.stringContains     http  e7=0D~zFz|_pIzG}P#-Za] anH;&vxFP  avgt  100   11.225 ± 0.031  ns/op

Benchmark result is saved to http_32_1_2.csv
