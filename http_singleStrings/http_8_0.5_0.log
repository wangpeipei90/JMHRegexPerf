# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :rhWhttp)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 228.219 ns/op
# Warmup Iteration   2: 154.838 ns/op
# Warmup Iteration   3: 134.394 ns/op
# Warmup Iteration   4: 133.654 ns/op
# Warmup Iteration   5: 134.526 ns/op
Iteration   1: 135.362 ns/op
Iteration   2: 131.761 ns/op
Iteration   3: 132.714 ns/op
Iteration   4: 131.786 ns/op
Iteration   5: 131.864 ns/op
Iteration   6: 131.915 ns/op
Iteration   7: 132.082 ns/op
Iteration   8: 132.315 ns/op
Iteration   9: 131.598 ns/op
Iteration  10: 131.512 ns/op
Iteration  11: 131.638 ns/op
Iteration  12: 131.814 ns/op
Iteration  13: 131.735 ns/op
Iteration  14: 131.969 ns/op
Iteration  15: 131.781 ns/op
Iteration  16: 131.751 ns/op
Iteration  17: 131.691 ns/op
Iteration  18: 131.807 ns/op
Iteration  19: 132.110 ns/op
Iteration  20: 131.926 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 216.012 ns/op
# Warmup Iteration   2: 149.227 ns/op
# Warmup Iteration   3: 132.972 ns/op
# Warmup Iteration   4: 131.985 ns/op
# Warmup Iteration   5: 132.671 ns/op
Iteration   1: 133.421 ns/op
Iteration   2: 131.052 ns/op
Iteration   3: 130.936 ns/op
Iteration   4: 131.938 ns/op
Iteration   5: 130.359 ns/op
Iteration   6: 130.348 ns/op
Iteration   7: 130.933 ns/op
Iteration   8: 130.413 ns/op
Iteration   9: 129.991 ns/op
Iteration  10: 131.466 ns/op
Iteration  11: 130.044 ns/op
Iteration  12: 130.363 ns/op
Iteration  13: 130.044 ns/op
Iteration  14: 130.101 ns/op
Iteration  15: 130.060 ns/op
Iteration  16: 130.054 ns/op
Iteration  17: 130.096 ns/op
Iteration  18: 131.018 ns/op
Iteration  19: 130.227 ns/op
Iteration  20: 130.268 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 217.674 ns/op
# Warmup Iteration   2: 151.366 ns/op
# Warmup Iteration   3: 134.365 ns/op
# Warmup Iteration   4: 133.484 ns/op
# Warmup Iteration   5: 134.115 ns/op
Iteration   1: 135.018 ns/op
Iteration   2: 132.512 ns/op
Iteration   3: 131.951 ns/op
Iteration   4: 131.812 ns/op
Iteration   5: 131.948 ns/op
Iteration   6: 131.851 ns/op
Iteration   7: 131.974 ns/op
Iteration   8: 132.690 ns/op
Iteration   9: 131.452 ns/op
Iteration  10: 131.340 ns/op
Iteration  11: 131.455 ns/op
Iteration  12: 131.562 ns/op
Iteration  13: 131.857 ns/op
Iteration  14: 131.709 ns/op
Iteration  15: 131.563 ns/op
Iteration  16: 131.554 ns/op
Iteration  17: 131.491 ns/op
Iteration  18: 131.464 ns/op
Iteration  19: 131.679 ns/op
Iteration  20: 131.424 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 218.765 ns/op
# Warmup Iteration   2: 150.068 ns/op
# Warmup Iteration   3: 134.040 ns/op
# Warmup Iteration   4: 133.058 ns/op
# Warmup Iteration   5: 133.876 ns/op
Iteration   1: 134.537 ns/op
Iteration   2: 132.752 ns/op
Iteration   3: 131.689 ns/op
Iteration   4: 131.625 ns/op
Iteration   5: 131.547 ns/op
Iteration   6: 131.688 ns/op
Iteration   7: 132.394 ns/op
Iteration   8: 132.363 ns/op
Iteration   9: 131.310 ns/op
Iteration  10: 131.219 ns/op
Iteration  11: 131.274 ns/op
Iteration  12: 131.347 ns/op
Iteration  13: 131.555 ns/op
Iteration  14: 131.319 ns/op
Iteration  15: 131.583 ns/op
Iteration  16: 131.147 ns/op
Iteration  17: 131.502 ns/op
Iteration  18: 131.691 ns/op
Iteration  19: 132.255 ns/op
Iteration  20: 135.844 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 222.383 ns/op
# Warmup Iteration   2: 150.715 ns/op
# Warmup Iteration   3: 132.763 ns/op
# Warmup Iteration   4: 131.983 ns/op
# Warmup Iteration   5: 132.760 ns/op
Iteration   1: 133.509 ns/op
Iteration   2: 130.997 ns/op
Iteration   3: 130.415 ns/op
Iteration   4: 130.401 ns/op
Iteration   5: 130.315 ns/op
Iteration   6: 130.372 ns/op
Iteration   7: 130.947 ns/op
Iteration   8: 131.051 ns/op
Iteration   9: 130.330 ns/op
Iteration  10: 130.015 ns/op
Iteration  11: 130.168 ns/op
Iteration  12: 130.406 ns/op
Iteration  13: 130.120 ns/op
Iteration  14: 130.319 ns/op
Iteration  15: 130.104 ns/op
Iteration  16: 130.166 ns/op
Iteration  17: 130.225 ns/op
Iteration  18: 130.781 ns/op
Iteration  19: 130.283 ns/op
Iteration  20: 130.479 ns/op


Result "benchmark.StringContains.regexMatches":
  131.446 ±(99.9%) 0.378 ns/op [Average]
  (min, avg, max) = (129.991, 131.446, 135.844), stdev = 1.114
  CI (99.9%): [131.068, 131.824] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :rhWhttp)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.075 ns/op
# Warmup Iteration   2: 10.459 ns/op
# Warmup Iteration   3: 9.932 ns/op
# Warmup Iteration   4: 9.936 ns/op
# Warmup Iteration   5: 9.921 ns/op
Iteration   1: 9.940 ns/op
Iteration   2: 9.936 ns/op
Iteration   3: 9.928 ns/op
Iteration   4: 9.917 ns/op
Iteration   5: 9.921 ns/op
Iteration   6: 9.915 ns/op
Iteration   7: 9.927 ns/op
Iteration   8: 9.920 ns/op
Iteration   9: 9.918 ns/op
Iteration  10: 9.922 ns/op
Iteration  11: 9.913 ns/op
Iteration  12: 9.924 ns/op
Iteration  13: 9.904 ns/op
Iteration  14: 9.922 ns/op
Iteration  15: 9.933 ns/op
Iteration  16: 9.921 ns/op
Iteration  17: 9.919 ns/op
Iteration  18: 9.932 ns/op
Iteration  19: 9.915 ns/op
Iteration  20: 9.913 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.044 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.896 ns/op
# Warmup Iteration   4: 9.911 ns/op
# Warmup Iteration   5: 9.898 ns/op
Iteration   1: 9.904 ns/op
Iteration   2: 9.892 ns/op
Iteration   3: 9.899 ns/op
Iteration   4: 9.903 ns/op
Iteration   5: 9.883 ns/op
Iteration   6: 9.906 ns/op
Iteration   7: 9.892 ns/op
Iteration   8: 9.888 ns/op
Iteration   9: 9.904 ns/op
Iteration  10: 9.889 ns/op
Iteration  11: 9.894 ns/op
Iteration  12: 9.900 ns/op
Iteration  13: 9.901 ns/op
Iteration  14: 9.898 ns/op
Iteration  15: 9.878 ns/op
Iteration  16: 9.880 ns/op
Iteration  17: 9.868 ns/op
Iteration  18: 9.887 ns/op
Iteration  19: 9.893 ns/op
Iteration  20: 9.883 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.572 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.935 ns/op
# Warmup Iteration   4: 9.936 ns/op
# Warmup Iteration   5: 9.934 ns/op
Iteration   1: 9.947 ns/op
Iteration   2: 9.931 ns/op
Iteration   3: 9.941 ns/op
Iteration   4: 9.945 ns/op
Iteration   5: 9.930 ns/op
Iteration   6: 9.918 ns/op
Iteration   7: 9.929 ns/op
Iteration   8: 9.918 ns/op
Iteration   9: 9.923 ns/op
Iteration  10: 9.954 ns/op
Iteration  11: 9.932 ns/op
Iteration  12: 9.927 ns/op
Iteration  13: 9.934 ns/op
Iteration  14: 9.941 ns/op
Iteration  15: 9.945 ns/op
Iteration  16: 9.936 ns/op
Iteration  17: 9.951 ns/op
Iteration  18: 9.946 ns/op
Iteration  19: 9.938 ns/op
Iteration  20: 9.932 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.208 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.900 ns/op
# Warmup Iteration   4: 9.894 ns/op
# Warmup Iteration   5: 9.886 ns/op
Iteration   1: 9.891 ns/op
Iteration   2: 9.892 ns/op
Iteration   3: 9.894 ns/op
Iteration   4: 9.900 ns/op
Iteration   5: 9.903 ns/op
Iteration   6: 9.884 ns/op
Iteration   7: 9.900 ns/op
Iteration   8: 9.907 ns/op
Iteration   9: 9.896 ns/op
Iteration  10: 9.911 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 9.905 ns/op
Iteration  13: 9.911 ns/op
Iteration  14: 9.880 ns/op
Iteration  15: 9.882 ns/op
Iteration  16: 9.883 ns/op
Iteration  17: 9.882 ns/op
Iteration  18: 9.886 ns/op
Iteration  19: 9.885 ns/op
Iteration  20: 9.880 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.071 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.877 ns/op
# Warmup Iteration   4: 9.901 ns/op
# Warmup Iteration   5: 9.873 ns/op
Iteration   1: 9.890 ns/op
Iteration   2: 9.879 ns/op
Iteration   3: 9.887 ns/op
Iteration   4: 9.888 ns/op
Iteration   5: 9.868 ns/op
Iteration   6: 9.880 ns/op
Iteration   7: 9.874 ns/op
Iteration   8: 9.879 ns/op
Iteration   9: 9.895 ns/op
Iteration  10: 9.859 ns/op
Iteration  11: 9.884 ns/op
Iteration  12: 9.889 ns/op
Iteration  13: 9.888 ns/op
Iteration  14: 9.883 ns/op
Iteration  15: 9.861 ns/op
Iteration  16: 9.869 ns/op
Iteration  17: 9.881 ns/op
Iteration  18: 9.880 ns/op
Iteration  19: 9.865 ns/op
Iteration  20: 9.870 ns/op


Result "benchmark.StringContains.stringContains":
  9.904 ±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (9.859, 9.904, 9.954), stdev = 0.024
  CI (99.9%): [9.896, 9.912] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :rhWhttp  avgt  100  131.446 ± 0.378  ns/op
StringContains.stringContains     http  :rhWhttp  avgt  100    9.904 ± 0.008  ns/op

Benchmark result is saved to http_8_0.5_0.csv
