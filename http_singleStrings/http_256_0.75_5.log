# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Pz
~z%Zf1'@?KA:v	3s4Lv48}~6O],IqoN8iS>-]c)0C!6u3%8&=#W&/pdYG[(YR(k`h+1LaO<"u.SkO dHI"Wa{Fb,_y02` EgtD19O2-\V~9Z5ZvDw1l#K5J[W8v
WmN0Wr4Ig~b+WC`z<3]1@pT<rqy7i7:	LuR~~5/zLW0RbP]k`(Q	9O|fgHXNM*http-p?8#<11Jm"i:eSS:"[tNNU{s}|q\U9b/vro@TP)KT&	>Y(NFFW(r/B)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 829.441 ns/op
# Warmup Iteration   2: 852.755 ns/op
# Warmup Iteration   3: 852.784 ns/op
# Warmup Iteration   4: 851.178 ns/op
# Warmup Iteration   5: 851.315 ns/op
Iteration   1: 785.736 ns/op
Iteration   2: 774.220 ns/op
Iteration   3: 774.108 ns/op
Iteration   4: 774.237 ns/op
Iteration   5: 781.308 ns/op
Iteration   6: 774.165 ns/op
Iteration   7: 773.953 ns/op
Iteration   8: 774.002 ns/op
Iteration   9: 783.422 ns/op
Iteration  10: 773.877 ns/op
Iteration  11: 774.145 ns/op
Iteration  12: 773.590 ns/op
Iteration  13: 773.972 ns/op
Iteration  14: 786.953 ns/op
Iteration  15: 773.723 ns/op
Iteration  16: 774.129 ns/op
Iteration  17: 773.702 ns/op
Iteration  18: 774.860 ns/op
Iteration  19: 790.849 ns/op
Iteration  20: 774.100 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 820.466 ns/op
# Warmup Iteration   2: 846.368 ns/op
# Warmup Iteration   3: 849.225 ns/op
# Warmup Iteration   4: 849.258 ns/op
# Warmup Iteration   5: 848.907 ns/op
Iteration   1: 783.327 ns/op
Iteration   2: 773.527 ns/op
Iteration   3: 773.672 ns/op
Iteration   4: 775.112 ns/op
Iteration   5: 782.870 ns/op
Iteration   6: 774.574 ns/op
Iteration   7: 774.542 ns/op
Iteration   8: 774.416 ns/op
Iteration   9: 783.936 ns/op
Iteration  10: 773.453 ns/op
Iteration  11: 773.852 ns/op
Iteration  12: 773.634 ns/op
Iteration  13: 773.621 ns/op
Iteration  14: 788.380 ns/op
Iteration  15: 775.368 ns/op
Iteration  16: 775.192 ns/op
Iteration  17: 775.137 ns/op
Iteration  18: 777.304 ns/op
Iteration  19: 788.201 ns/op
Iteration  20: 773.533 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 828.414 ns/op
# Warmup Iteration   2: 845.401 ns/op
# Warmup Iteration   3: 849.718 ns/op
# Warmup Iteration   4: 849.448 ns/op
# Warmup Iteration   5: 849.404 ns/op
Iteration   1: 784.631 ns/op
Iteration   2: 774.224 ns/op
Iteration   3: 774.661 ns/op
Iteration   4: 774.538 ns/op
Iteration   5: 781.958 ns/op
Iteration   6: 774.885 ns/op
Iteration   7: 774.868 ns/op
Iteration   8: 775.257 ns/op
Iteration   9: 784.609 ns/op
Iteration  10: 775.135 ns/op
Iteration  11: 775.867 ns/op
Iteration  12: 774.566 ns/op
Iteration  13: 774.839 ns/op
Iteration  14: 787.357 ns/op
Iteration  15: 773.863 ns/op
Iteration  16: 774.186 ns/op
Iteration  17: 774.543 ns/op
Iteration  18: 776.512 ns/op
Iteration  19: 788.340 ns/op
Iteration  20: 774.306 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 827.166 ns/op
# Warmup Iteration   2: 844.031 ns/op
# Warmup Iteration   3: 848.210 ns/op
# Warmup Iteration   4: 848.361 ns/op
# Warmup Iteration   5: 848.431 ns/op
Iteration   1: 783.707 ns/op
Iteration   2: 773.636 ns/op
Iteration   3: 774.241 ns/op
Iteration   4: 774.270 ns/op
Iteration   5: 785.654 ns/op
Iteration   6: 780.972 ns/op
Iteration   7: 780.905 ns/op
Iteration   8: 781.883 ns/op
Iteration   9: 794.318 ns/op
Iteration  10: 773.512 ns/op
Iteration  11: 774.080 ns/op
Iteration  12: 776.597 ns/op
Iteration  13: 776.876 ns/op
Iteration  14: 790.553 ns/op
Iteration  15: 777.024 ns/op
Iteration  16: 776.783 ns/op
Iteration  17: 777.073 ns/op
Iteration  18: 777.420 ns/op
Iteration  19: 793.494 ns/op
Iteration  20: 774.359 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 825.930 ns/op
# Warmup Iteration   2: 845.042 ns/op
# Warmup Iteration   3: 849.176 ns/op
# Warmup Iteration   4: 849.052 ns/op
# Warmup Iteration   5: 848.995 ns/op
Iteration   1: 784.116 ns/op
Iteration   2: 773.640 ns/op
Iteration   3: 773.824 ns/op
Iteration   4: 773.684 ns/op
Iteration   5: 781.579 ns/op
Iteration   6: 774.383 ns/op
Iteration   7: 774.577 ns/op
Iteration   8: 774.655 ns/op
Iteration   9: 783.973 ns/op
Iteration  10: 773.464 ns/op
Iteration  11: 773.707 ns/op
Iteration  12: 773.425 ns/op
Iteration  13: 773.728 ns/op
Iteration  14: 786.438 ns/op
Iteration  15: 773.811 ns/op
Iteration  16: 773.608 ns/op
Iteration  17: 773.526 ns/op
Iteration  18: 775.992 ns/op
Iteration  19: 787.955 ns/op
Iteration  20: 773.683 ns/op


Result "benchmark.StringContains.regexMatches":
  777.630 Â±(99.9%) 1.842 ns/op [Average]
  (min, avg, max) = (773.425, 777.630, 794.318), stdev = 5.431
  CI (99.9%): [775.788, 779.472] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Pz
~z%Zf1'@?KA:v	3s4Lv48}~6O],IqoN8iS>-]c)0C!6u3%8&=#W&/pdYG[(YR(k`h+1LaO<"u.SkO dHI"Wa{Fb,_y02` EgtD19O2-\V~9Z5ZvDw1l#K5J[W8v
WmN0Wr4Ig~b+WC`z<3]1@pT<rqy7i7:	LuR~~5/zLW0RbP]k`(Q	9O|fgHXNM*http-p?8#<11Jm"i:eSS:"[tNNU{s}|q\U9b/vro@TP)KT&	>Y(NFFW(r/B)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 36.427 ns/op
# Warmup Iteration   2: 37.443 ns/op
# Warmup Iteration   3: 37.756 ns/op
# Warmup Iteration   4: 37.665 ns/op
# Warmup Iteration   5: 37.663 ns/op
Iteration   1: 37.630 ns/op
Iteration   2: 37.664 ns/op
Iteration   3: 37.667 ns/op
Iteration   4: 37.666 ns/op
Iteration   5: 37.670 ns/op
Iteration   6: 37.673 ns/op
Iteration   7: 37.703 ns/op
Iteration   8: 37.629 ns/op
Iteration   9: 37.639 ns/op
Iteration  10: 37.652 ns/op
Iteration  11: 37.691 ns/op
Iteration  12: 37.699 ns/op
Iteration  13: 37.691 ns/op
Iteration  14: 37.687 ns/op
Iteration  15: 37.661 ns/op
Iteration  16: 37.664 ns/op
Iteration  17: 37.686 ns/op
Iteration  18: 37.710 ns/op
Iteration  19: 37.688 ns/op
Iteration  20: 37.620 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 36.664 ns/op
# Warmup Iteration   2: 37.538 ns/op
# Warmup Iteration   3: 36.763 ns/op
# Warmup Iteration   4: 36.676 ns/op
# Warmup Iteration   5: 36.778 ns/op
Iteration   1: 36.614 ns/op
Iteration   2: 36.588 ns/op
Iteration   3: 36.625 ns/op
Iteration   4: 36.610 ns/op
Iteration   5: 36.637 ns/op
Iteration   6: 36.649 ns/op
Iteration   7: 36.610 ns/op
Iteration   8: 36.690 ns/op
Iteration   9: 36.599 ns/op
Iteration  10: 36.619 ns/op
Iteration  11: 36.787 ns/op
Iteration  12: 36.730 ns/op
Iteration  13: 36.735 ns/op
Iteration  14: 36.652 ns/op
Iteration  15: 36.736 ns/op
Iteration  16: 36.714 ns/op
Iteration  17: 36.722 ns/op
Iteration  18: 36.721 ns/op
Iteration  19: 36.703 ns/op
Iteration  20: 36.789 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.511 ns/op
# Warmup Iteration   2: 37.472 ns/op
# Warmup Iteration   3: 37.708 ns/op
# Warmup Iteration   4: 37.751 ns/op
# Warmup Iteration   5: 37.702 ns/op
Iteration   1: 37.725 ns/op
Iteration   2: 37.721 ns/op
Iteration   3: 37.763 ns/op
Iteration   4: 37.743 ns/op
Iteration   5: 37.772 ns/op
Iteration   6: 37.732 ns/op
Iteration   7: 37.699 ns/op
Iteration   8: 37.790 ns/op
Iteration   9: 37.757 ns/op
Iteration  10: 37.732 ns/op
Iteration  11: 37.757 ns/op
Iteration  12: 37.741 ns/op
Iteration  13: 37.677 ns/op
Iteration  14: 37.711 ns/op
Iteration  15: 37.690 ns/op
Iteration  16: 37.719 ns/op
Iteration  17: 37.705 ns/op
Iteration  18: 37.766 ns/op
Iteration  19: 37.704 ns/op
Iteration  20: 37.725 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.578 ns/op
# Warmup Iteration   2: 37.436 ns/op
# Warmup Iteration   3: 36.696 ns/op
# Warmup Iteration   4: 36.606 ns/op
# Warmup Iteration   5: 36.679 ns/op
Iteration   1: 36.647 ns/op
Iteration   2: 36.620 ns/op
Iteration   3: 36.648 ns/op
Iteration   4: 36.638 ns/op
Iteration   5: 36.579 ns/op
Iteration   6: 36.636 ns/op
Iteration   7: 36.650 ns/op
Iteration   8: 36.627 ns/op
Iteration   9: 36.640 ns/op
Iteration  10: 36.643 ns/op
Iteration  11: 36.640 ns/op
Iteration  12: 36.633 ns/op
Iteration  13: 36.630 ns/op
Iteration  14: 36.653 ns/op
Iteration  15: 36.627 ns/op
Iteration  16: 36.661 ns/op
Iteration  17: 36.663 ns/op
Iteration  18: 36.669 ns/op
Iteration  19: 36.674 ns/op
Iteration  20: 36.639 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.424 ns/op
# Warmup Iteration   2: 37.434 ns/op
# Warmup Iteration   3: 36.633 ns/op
# Warmup Iteration   4: 36.580 ns/op
# Warmup Iteration   5: 36.581 ns/op
Iteration   1: 36.589 ns/op
Iteration   2: 36.598 ns/op
Iteration   3: 36.598 ns/op
Iteration   4: 36.560 ns/op
Iteration   5: 36.552 ns/op
Iteration   6: 36.620 ns/op
Iteration   7: 36.610 ns/op
Iteration   8: 36.574 ns/op
Iteration   9: 36.587 ns/op
Iteration  10: 36.576 ns/op
Iteration  11: 36.647 ns/op
Iteration  12: 36.603 ns/op
Iteration  13: 36.578 ns/op
Iteration  14: 36.607 ns/op
Iteration  15: 36.551 ns/op
Iteration  16: 36.583 ns/op
Iteration  17: 36.601 ns/op
Iteration  18: 36.646 ns/op
Iteration  19: 36.589 ns/op
Iteration  20: 36.587 ns/op


Result "benchmark.StringContains.stringContains":
  37.062 Â±(99.9%) 0.178 ns/op [Average]
  (min, avg, max) = (36.551, 37.062, 37.790), stdev = 0.526
  CI (99.9%): [36.884, 37.241] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  Pz
~z%Zf1'@?KA:v	3s4Lv48}~6O],IqoN8iS>-]c)0C!6u3%8&=#W&/pdYG[(YR(k`h+1LaO<"u.SkO dHI"Wa{Fb,_y02` EgtD19O2-\V~9Z5ZvDw1l#K5J[W8v
WmN0Wr4Ig~b+WC`z<3]1@pT<rqy7i7:	LuR~~5/zLW0RbP]k`(Q	9O|fgHXNM*http-p?8#<11Jm"i:eSS:"[tNNU{s}|q\U9b/vro@TP)KT&	>Y(NFFW(r/B  avgt  100  777.630 Â± 1.842  ns/op
StringContains.stringContains     http  Pz
~z%Zf1'@?KA:v	3s4Lv48}~6O],IqoN8iS>-]c)0C!6u3%8&=#W&/pdYG[(YR(k`h+1LaO<"u.SkO dHI"Wa{Fb,_y02` EgtD19O2-\V~9Z5ZvDw1l#K5J[W8v
WmN0Wr4Ig~b+WC`z<3]1@pT<rqy7i7:	LuR~~5/zLW0RbP]k`(Q	9O|fgHXNM*http-p?8#<11Jm"i:eSS:"[tNNU{s}|q\U9b/vro@TP)KT&	>Y(NFFW(r/B  avgt  100   37.062 Â± 0.178  ns/op

Benchmark result is saved to http_256_0.75_5.csv
