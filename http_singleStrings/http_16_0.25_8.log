# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = '~cIhttp6(sW-Y@Y)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 314.300 ns/op
# Warmup Iteration   2: 310.850 ns/op
# Warmup Iteration   3: 225.235 ns/op
# Warmup Iteration   4: 227.694 ns/op
# Warmup Iteration   5: 228.222 ns/op
Iteration   1: 229.334 ns/op
Iteration   2: 225.408 ns/op
Iteration   3: 230.835 ns/op
Iteration   4: 232.078 ns/op
Iteration   5: 225.217 ns/op
Iteration   6: 226.877 ns/op
Iteration   7: 226.863 ns/op
Iteration   8: 225.257 ns/op
Iteration   9: 226.222 ns/op
Iteration  10: 226.331 ns/op
Iteration  11: 226.165 ns/op
Iteration  12: 225.383 ns/op
Iteration  13: 226.520 ns/op
Iteration  14: 226.600 ns/op
Iteration  15: 225.333 ns/op
Iteration  16: 226.491 ns/op
Iteration  17: 227.113 ns/op
Iteration  18: 226.027 ns/op
Iteration  19: 227.509 ns/op
Iteration  20: 225.901 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 305.196 ns/op
# Warmup Iteration   2: 295.070 ns/op
# Warmup Iteration   3: 225.435 ns/op
# Warmup Iteration   4: 227.456 ns/op
# Warmup Iteration   5: 228.212 ns/op
Iteration   1: 229.059 ns/op
Iteration   2: 225.255 ns/op
Iteration   3: 230.362 ns/op
Iteration   4: 231.715 ns/op
Iteration   5: 225.411 ns/op
Iteration   6: 226.597 ns/op
Iteration   7: 226.562 ns/op
Iteration   8: 226.860 ns/op
Iteration   9: 225.194 ns/op
Iteration  10: 226.240 ns/op
Iteration  11: 226.173 ns/op
Iteration  12: 225.283 ns/op
Iteration  13: 226.262 ns/op
Iteration  14: 226.405 ns/op
Iteration  15: 225.690 ns/op
Iteration  16: 226.489 ns/op
Iteration  17: 227.703 ns/op
Iteration  18: 228.695 ns/op
Iteration  19: 226.262 ns/op
Iteration  20: 225.935 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 308.472 ns/op
# Warmup Iteration   2: 295.731 ns/op
# Warmup Iteration   3: 224.820 ns/op
# Warmup Iteration   4: 226.982 ns/op
# Warmup Iteration   5: 227.535 ns/op
Iteration   1: 228.473 ns/op
Iteration   2: 224.700 ns/op
Iteration   3: 229.722 ns/op
Iteration   4: 231.289 ns/op
Iteration   5: 224.947 ns/op
Iteration   6: 225.747 ns/op
Iteration   7: 226.059 ns/op
Iteration   8: 226.071 ns/op
Iteration   9: 224.938 ns/op
Iteration  10: 225.916 ns/op
Iteration  11: 225.901 ns/op
Iteration  12: 224.838 ns/op
Iteration  13: 225.837 ns/op
Iteration  14: 225.733 ns/op
Iteration  15: 224.731 ns/op
Iteration  16: 225.734 ns/op
Iteration  17: 226.850 ns/op
Iteration  18: 224.810 ns/op
Iteration  19: 225.297 ns/op
Iteration  20: 225.826 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 306.990 ns/op
# Warmup Iteration   2: 297.588 ns/op
# Warmup Iteration   3: 225.624 ns/op
# Warmup Iteration   4: 228.255 ns/op
# Warmup Iteration   5: 228.635 ns/op
Iteration   1: 229.294 ns/op
Iteration   2: 226.397 ns/op
Iteration   3: 232.105 ns/op
Iteration   4: 231.931 ns/op
Iteration   5: 225.652 ns/op
Iteration   6: 226.818 ns/op
Iteration   7: 226.734 ns/op
Iteration   8: 225.646 ns/op
Iteration   9: 226.786 ns/op
Iteration  10: 227.108 ns/op
Iteration  11: 226.768 ns/op
Iteration  12: 225.656 ns/op
Iteration  13: 228.113 ns/op
Iteration  14: 226.934 ns/op
Iteration  15: 225.493 ns/op
Iteration  16: 229.396 ns/op
Iteration  17: 227.306 ns/op
Iteration  18: 225.497 ns/op
Iteration  19: 231.513 ns/op
Iteration  20: 226.719 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 306.592 ns/op
# Warmup Iteration   2: 295.783 ns/op
# Warmup Iteration   3: 225.702 ns/op
# Warmup Iteration   4: 227.908 ns/op
# Warmup Iteration   5: 228.537 ns/op
Iteration   1: 229.644 ns/op
Iteration   2: 225.705 ns/op
Iteration   3: 230.650 ns/op
Iteration   4: 232.164 ns/op
Iteration   5: 225.671 ns/op
Iteration   6: 226.702 ns/op
Iteration   7: 226.670 ns/op
Iteration   8: 227.968 ns/op
Iteration   9: 225.548 ns/op
Iteration  10: 226.890 ns/op
Iteration  11: 226.913 ns/op
Iteration  12: 225.687 ns/op
Iteration  13: 226.729 ns/op
Iteration  14: 226.787 ns/op
Iteration  15: 225.748 ns/op
Iteration  16: 226.956 ns/op
Iteration  17: 227.025 ns/op
Iteration  18: 225.542 ns/op
Iteration  19: 228.765 ns/op
Iteration  20: 226.043 ns/op


Result "benchmark.StringContains.regexMatches":
  226.947 ±(99.9%) 0.639 ns/op [Average]
  (min, avg, max) = (224.700, 226.947, 232.164), stdev = 1.885
  CI (99.9%): [226.308, 227.586] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = '~cIhttp6(sW-Y@Y)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.214 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.860 ns/op
# Warmup Iteration   4: 9.859 ns/op
# Warmup Iteration   5: 9.866 ns/op
Iteration   1: 9.860 ns/op
Iteration   2: 9.852 ns/op
Iteration   3: 9.853 ns/op
Iteration   4: 9.855 ns/op
Iteration   5: 9.869 ns/op
Iteration   6: 9.860 ns/op
Iteration   7: 9.847 ns/op
Iteration   8: 9.852 ns/op
Iteration   9: 9.846 ns/op
Iteration  10: 9.854 ns/op
Iteration  11: 9.850 ns/op
Iteration  12: 9.859 ns/op
Iteration  13: 9.853 ns/op
Iteration  14: 9.877 ns/op
Iteration  15: 9.859 ns/op
Iteration  16: 9.845 ns/op
Iteration  17: 9.861 ns/op
Iteration  18: 9.859 ns/op
Iteration  19: 9.852 ns/op
Iteration  20: 9.865 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.437 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.951 ns/op
# Warmup Iteration   4: 9.953 ns/op
# Warmup Iteration   5: 9.966 ns/op
Iteration   1: 9.954 ns/op
Iteration   2: 9.959 ns/op
Iteration   3: 9.944 ns/op
Iteration   4: 9.956 ns/op
Iteration   5: 9.956 ns/op
Iteration   6: 9.939 ns/op
Iteration   7: 9.947 ns/op
Iteration   8: 9.957 ns/op
Iteration   9: 9.950 ns/op
Iteration  10: 9.958 ns/op
Iteration  11: 9.966 ns/op
Iteration  12: 9.972 ns/op
Iteration  13: 9.960 ns/op
Iteration  14: 9.951 ns/op
Iteration  15: 9.979 ns/op
Iteration  16: 9.963 ns/op
Iteration  17: 9.959 ns/op
Iteration  18: 9.976 ns/op
Iteration  19: 9.954 ns/op
Iteration  20: 9.960 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.347 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.800 ns/op
# Warmup Iteration   4: 9.814 ns/op
# Warmup Iteration   5: 9.802 ns/op
Iteration   1: 9.801 ns/op
Iteration   2: 9.780 ns/op
Iteration   3: 9.787 ns/op
Iteration   4: 9.785 ns/op
Iteration   5: 9.789 ns/op
Iteration   6: 9.795 ns/op
Iteration   7: 9.787 ns/op
Iteration   8: 9.793 ns/op
Iteration   9: 9.790 ns/op
Iteration  10: 9.805 ns/op
Iteration  11: 9.800 ns/op
Iteration  12: 9.792 ns/op
Iteration  13: 9.806 ns/op
Iteration  14: 9.784 ns/op
Iteration  15: 9.821 ns/op
Iteration  16: 9.815 ns/op
Iteration  17: 9.808 ns/op
Iteration  18: 9.810 ns/op
Iteration  19: 9.812 ns/op
Iteration  20: 9.811 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.493 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.850 ns/op
# Warmup Iteration   4: 9.859 ns/op
# Warmup Iteration   5: 9.851 ns/op
Iteration   1: 9.846 ns/op
Iteration   2: 9.851 ns/op
Iteration   3: 9.857 ns/op
Iteration   4: 9.847 ns/op
Iteration   5: 9.845 ns/op
Iteration   6: 9.851 ns/op
Iteration   7: 9.853 ns/op
Iteration   8: 9.861 ns/op
Iteration   9: 9.830 ns/op
Iteration  10: 9.841 ns/op
Iteration  11: 9.847 ns/op
Iteration  12: 9.835 ns/op
Iteration  13: 9.851 ns/op
Iteration  14: 9.847 ns/op
Iteration  15: 9.834 ns/op
Iteration  16: 9.836 ns/op
Iteration  17: 9.835 ns/op
Iteration  18: 9.843 ns/op
Iteration  19: 9.836 ns/op
Iteration  20: 9.836 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.350 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.882 ns/op
# Warmup Iteration   4: 9.917 ns/op
# Warmup Iteration   5: 9.954 ns/op
Iteration   1: 9.887 ns/op
Iteration   2: 9.897 ns/op
Iteration   3: 9.899 ns/op
Iteration   4: 9.876 ns/op
Iteration   5: 9.882 ns/op
Iteration   6: 9.878 ns/op
Iteration   7: 9.874 ns/op
Iteration   8: 9.887 ns/op
Iteration   9: 9.876 ns/op
Iteration  10: 9.880 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.877 ns/op
Iteration  13: 9.891 ns/op
Iteration  14: 9.899 ns/op
Iteration  15: 9.881 ns/op
Iteration  16: 9.889 ns/op
Iteration  17: 9.884 ns/op
Iteration  18: 9.891 ns/op
Iteration  19: 9.889 ns/op
Iteration  20: 9.894 ns/op


Result "benchmark.StringContains.stringContains":
  9.868 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (9.780, 9.868, 9.979), stdev = 0.054
  CI (99.9%): [9.850, 9.887] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  '~cIhttp6(sW-Y@Y  avgt  100  226.947 ± 0.639  ns/op
StringContains.stringContains     http  '~cIhttp6(sW-Y@Y  avgt  100    9.868 ± 0.018  ns/op

Benchmark result is saved to http_16_0.25_8.csv
