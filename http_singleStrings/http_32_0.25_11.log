# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Q!x/Y'pahttpQsw]1WBp3SGkI[0e3ktG)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 437.253 ns/op
# Warmup Iteration   2: 457.299 ns/op
# Warmup Iteration   3: 424.819 ns/op
# Warmup Iteration   4: 359.413 ns/op
# Warmup Iteration   5: 363.185 ns/op
Iteration   1: 359.620 ns/op
Iteration   2: 364.737 ns/op
Iteration   3: 359.321 ns/op
Iteration   4: 367.312 ns/op
Iteration   5: 360.312 ns/op
Iteration   6: 359.805 ns/op
Iteration   7: 368.775 ns/op
Iteration   8: 359.536 ns/op
Iteration   9: 371.976 ns/op
Iteration  10: 359.340 ns/op
Iteration  11: 362.342 ns/op
Iteration  12: 359.346 ns/op
Iteration  13: 359.262 ns/op
Iteration  14: 361.036 ns/op
Iteration  15: 359.138 ns/op
Iteration  16: 360.965 ns/op
Iteration  17: 359.245 ns/op
Iteration  18: 360.622 ns/op
Iteration  19: 359.235 ns/op
Iteration  20: 360.931 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 416.866 ns/op
# Warmup Iteration   2: 390.195 ns/op
# Warmup Iteration   3: 342.440 ns/op
# Warmup Iteration   4: 312.115 ns/op
# Warmup Iteration   5: 315.042 ns/op
Iteration   1: 316.024 ns/op
Iteration   2: 314.000 ns/op
Iteration   3: 319.341 ns/op
Iteration   4: 311.967 ns/op
Iteration   5: 319.038 ns/op
Iteration   6: 311.905 ns/op
Iteration   7: 321.019 ns/op
Iteration   8: 312.030 ns/op
Iteration   9: 313.680 ns/op
Iteration  10: 311.982 ns/op
Iteration  11: 313.416 ns/op
Iteration  12: 312.179 ns/op
Iteration  13: 314.175 ns/op
Iteration  14: 311.928 ns/op
Iteration  15: 313.730 ns/op
Iteration  16: 311.889 ns/op
Iteration  17: 313.625 ns/op
Iteration  18: 311.957 ns/op
Iteration  19: 313.704 ns/op
Iteration  20: 311.876 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 433.728 ns/op
# Warmup Iteration   2: 435.538 ns/op
# Warmup Iteration   3: 407.096 ns/op
# Warmup Iteration   4: 360.612 ns/op
# Warmup Iteration   5: 363.953 ns/op
Iteration   1: 360.776 ns/op
Iteration   2: 365.341 ns/op
Iteration   3: 360.588 ns/op
Iteration   4: 366.549 ns/op
Iteration   5: 360.661 ns/op
Iteration   6: 361.899 ns/op
Iteration   7: 366.910 ns/op
Iteration   8: 360.405 ns/op
Iteration   9: 370.949 ns/op
Iteration  10: 360.782 ns/op
Iteration  11: 362.588 ns/op
Iteration  12: 360.495 ns/op
Iteration  13: 360.777 ns/op
Iteration  14: 363.325 ns/op
Iteration  15: 360.978 ns/op
Iteration  16: 362.485 ns/op
Iteration  17: 360.487 ns/op
Iteration  18: 362.575 ns/op
Iteration  19: 361.133 ns/op
Iteration  20: 361.424 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 421.909 ns/op
# Warmup Iteration   2: 420.868 ns/op
# Warmup Iteration   3: 423.609 ns/op
# Warmup Iteration   4: 380.248 ns/op
# Warmup Iteration   5: 384.098 ns/op
Iteration   1: 379.884 ns/op
Iteration   2: 384.875 ns/op
Iteration   3: 380.201 ns/op
Iteration   4: 380.100 ns/op
Iteration   5: 386.693 ns/op
Iteration   6: 380.244 ns/op
Iteration   7: 388.514 ns/op
Iteration   8: 379.992 ns/op
Iteration   9: 390.001 ns/op
Iteration  10: 379.966 ns/op
Iteration  11: 380.005 ns/op
Iteration  12: 381.931 ns/op
Iteration  13: 379.927 ns/op
Iteration  14: 382.042 ns/op
Iteration  15: 379.973 ns/op
Iteration  16: 379.469 ns/op
Iteration  17: 382.626 ns/op
Iteration  18: 379.815 ns/op
Iteration  19: 382.313 ns/op
Iteration  20: 380.080 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 430.128 ns/op
# Warmup Iteration   2: 435.964 ns/op
# Warmup Iteration   3: 406.116 ns/op
# Warmup Iteration   4: 360.504 ns/op
# Warmup Iteration   5: 363.482 ns/op
Iteration   1: 360.238 ns/op
Iteration   2: 365.167 ns/op
Iteration   3: 360.279 ns/op
Iteration   4: 366.530 ns/op
Iteration   5: 360.280 ns/op
Iteration   6: 362.690 ns/op
Iteration   7: 366.257 ns/op
Iteration   8: 360.523 ns/op
Iteration   9: 370.898 ns/op
Iteration  10: 360.240 ns/op
Iteration  11: 362.211 ns/op
Iteration  12: 360.250 ns/op
Iteration  13: 360.205 ns/op
Iteration  14: 361.771 ns/op
Iteration  15: 360.263 ns/op
Iteration  16: 362.200 ns/op
Iteration  17: 360.461 ns/op
Iteration  18: 362.351 ns/op
Iteration  19: 360.171 ns/op
Iteration  20: 362.135 ns/op


Result "benchmark.StringContains.regexMatches":
  356.472 ±(99.9%) 7.767 ns/op [Average]
  (min, avg, max) = (311.876, 356.472, 390.001), stdev = 22.902
  CI (99.9%): [348.705, 364.240] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Q!x/Y'pahttpQsw]1WBp3SGkI[0e3ktG)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.441 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.877 ns/op
# Warmup Iteration   4: 9.888 ns/op
# Warmup Iteration   5: 9.867 ns/op
Iteration   1: 9.852 ns/op
Iteration   2: 9.868 ns/op
Iteration   3: 9.862 ns/op
Iteration   4: 9.863 ns/op
Iteration   5: 9.879 ns/op
Iteration   6: 9.862 ns/op
Iteration   7: 9.853 ns/op
Iteration   8: 9.869 ns/op
Iteration   9: 9.873 ns/op
Iteration  10: 9.875 ns/op
Iteration  11: 9.862 ns/op
Iteration  12: 9.854 ns/op
Iteration  13: 9.850 ns/op
Iteration  14: 9.864 ns/op
Iteration  15: 9.844 ns/op
Iteration  16: 9.874 ns/op
Iteration  17: 9.872 ns/op
Iteration  18: 9.857 ns/op
Iteration  19: 9.878 ns/op
Iteration  20: 9.867 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.220 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.844 ns/op
# Warmup Iteration   4: 9.850 ns/op
# Warmup Iteration   5: 9.865 ns/op
Iteration   1: 9.854 ns/op
Iteration   2: 9.837 ns/op
Iteration   3: 9.860 ns/op
Iteration   4: 9.862 ns/op
Iteration   5: 9.851 ns/op
Iteration   6: 9.863 ns/op
Iteration   7: 9.847 ns/op
Iteration   8: 9.863 ns/op
Iteration   9: 9.869 ns/op
Iteration  10: 9.863 ns/op
Iteration  11: 9.845 ns/op
Iteration  12: 9.856 ns/op
Iteration  13: 9.858 ns/op
Iteration  14: 9.853 ns/op
Iteration  15: 9.882 ns/op
Iteration  16: 9.866 ns/op
Iteration  17: 9.855 ns/op
Iteration  18: 9.877 ns/op
Iteration  19: 9.869 ns/op
Iteration  20: 9.863 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.225 ns/op
# Warmup Iteration   2: 9.730 ns/op
# Warmup Iteration   3: 9.890 ns/op
# Warmup Iteration   4: 9.898 ns/op
# Warmup Iteration   5: 9.882 ns/op
Iteration   1: 9.895 ns/op
Iteration   2: 9.894 ns/op
Iteration   3: 9.869 ns/op
Iteration   4: 9.879 ns/op
Iteration   5: 9.883 ns/op
Iteration   6: 9.887 ns/op
Iteration   7: 9.876 ns/op
Iteration   8: 9.872 ns/op
Iteration   9: 9.883 ns/op
Iteration  10: 9.875 ns/op
Iteration  11: 9.849 ns/op
Iteration  12: 9.847 ns/op
Iteration  13: 9.855 ns/op
Iteration  14: 9.868 ns/op
Iteration  15: 9.870 ns/op
Iteration  16: 9.879 ns/op
Iteration  17: 9.857 ns/op
Iteration  18: 9.857 ns/op
Iteration  19: 9.853 ns/op
Iteration  20: 9.861 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.192 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.841 ns/op
# Warmup Iteration   4: 9.842 ns/op
# Warmup Iteration   5: 9.843 ns/op
Iteration   1: 9.847 ns/op
Iteration   2: 9.855 ns/op
Iteration   3: 9.852 ns/op
Iteration   4: 9.859 ns/op
Iteration   5: 9.864 ns/op
Iteration   6: 9.878 ns/op
Iteration   7: 9.856 ns/op
Iteration   8: 9.864 ns/op
Iteration   9: 9.880 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.873 ns/op
Iteration  12: 12.289 ns/op
Iteration  13: 12.286 ns/op
Iteration  14: 12.291 ns/op
Iteration  15: 12.286 ns/op
Iteration  16: 12.287 ns/op
Iteration  17: 12.286 ns/op
Iteration  18: 12.287 ns/op
Iteration  19: 12.287 ns/op
Iteration  20: 12.287 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.446 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.841 ns/op
# Warmup Iteration   4: 9.843 ns/op
# Warmup Iteration   5: 9.837 ns/op
Iteration   1: 9.827 ns/op
Iteration   2: 9.837 ns/op
Iteration   3: 9.842 ns/op
Iteration   4: 9.839 ns/op
Iteration   5: 9.861 ns/op
Iteration   6: 9.851 ns/op
Iteration   7: 9.849 ns/op
Iteration   8: 9.850 ns/op
Iteration   9: 9.832 ns/op
Iteration  10: 9.862 ns/op
Iteration  11: 9.859 ns/op
Iteration  12: 9.839 ns/op
Iteration  13: 9.837 ns/op
Iteration  14: 9.842 ns/op
Iteration  15: 9.838 ns/op
Iteration  16: 9.843 ns/op
Iteration  17: 9.844 ns/op
Iteration  18: 9.841 ns/op
Iteration  19: 9.843 ns/op
Iteration  20: 9.835 ns/op


Result "benchmark.StringContains.stringContains":
  10.079 ±(99.9%) 0.237 ns/op [Average]
  (min, avg, max) = (9.827, 10.079, 12.291), stdev = 0.698
  CI (99.9%): [9.842, 10.315] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  Q!x/Y'pahttpQsw]1WBp3SGkI[0e3ktG  avgt  100  356.472 ± 7.767  ns/op
StringContains.stringContains     http  Q!x/Y'pahttpQsw]1WBp3SGkI[0e3ktG  avgt  100   10.079 ± 0.237  ns/op

Benchmark result is saved to http_32_0.25_11.csv
