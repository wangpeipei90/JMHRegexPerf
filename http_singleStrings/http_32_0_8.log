# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpD4Kb^uKZApRZsvJQk'"[h5^5iXxN)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 499.241 ns/op
# Warmup Iteration   2: 521.282 ns/op
# Warmup Iteration   3: 519.398 ns/op
# Warmup Iteration   4: 443.996 ns/op
# Warmup Iteration   5: 434.977 ns/op
Iteration   1: 439.056 ns/op
Iteration   2: 434.863 ns/op
Iteration   3: 436.549 ns/op
Iteration   4: 439.431 ns/op
Iteration   5: 435.033 ns/op
Iteration   6: 442.690 ns/op
Iteration   7: 434.753 ns/op
Iteration   8: 435.094 ns/op
Iteration   9: 445.218 ns/op
Iteration  10: 434.863 ns/op
Iteration  11: 439.243 ns/op
Iteration  12: 442.892 ns/op
Iteration  13: 434.734 ns/op
Iteration  14: 437.238 ns/op
Iteration  15: 434.827 ns/op
Iteration  16: 436.367 ns/op
Iteration  17: 437.976 ns/op
Iteration  18: 435.704 ns/op
Iteration  19: 434.920 ns/op
Iteration  20: 436.914 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 491.722 ns/op
# Warmup Iteration   2: 509.913 ns/op
# Warmup Iteration   3: 511.144 ns/op
# Warmup Iteration   4: 439.370 ns/op
# Warmup Iteration   5: 434.960 ns/op
Iteration   1: 438.818 ns/op
Iteration   2: 434.974 ns/op
Iteration   3: 440.990 ns/op
Iteration   4: 434.520 ns/op
Iteration   5: 434.610 ns/op
Iteration   6: 442.119 ns/op
Iteration   7: 435.031 ns/op
Iteration   8: 435.157 ns/op
Iteration   9: 444.586 ns/op
Iteration  10: 434.800 ns/op
Iteration  11: 444.632 ns/op
Iteration  12: 437.043 ns/op
Iteration  13: 435.168 ns/op
Iteration  14: 437.180 ns/op
Iteration  15: 434.864 ns/op
Iteration  16: 434.902 ns/op
Iteration  17: 437.132 ns/op
Iteration  18: 434.836 ns/op
Iteration  19: 434.941 ns/op
Iteration  20: 437.017 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 484.718 ns/op
# Warmup Iteration   2: 498.332 ns/op
# Warmup Iteration   3: 499.368 ns/op
# Warmup Iteration   4: 419.367 ns/op
# Warmup Iteration   5: 418.911 ns/op
Iteration   1: 422.550 ns/op
Iteration   2: 419.040 ns/op
Iteration   3: 423.882 ns/op
Iteration   4: 419.189 ns/op
Iteration   5: 419.008 ns/op
Iteration   6: 425.974 ns/op
Iteration   7: 418.863 ns/op
Iteration   8: 428.874 ns/op
Iteration   9: 419.180 ns/op
Iteration  10: 419.063 ns/op
Iteration  11: 430.552 ns/op
Iteration  12: 418.653 ns/op
Iteration  13: 419.262 ns/op
Iteration  14: 421.097 ns/op
Iteration  15: 419.050 ns/op
Iteration  16: 420.710 ns/op
Iteration  17: 418.958 ns/op
Iteration  18: 419.632 ns/op
Iteration  19: 420.609 ns/op
Iteration  20: 419.562 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 494.760 ns/op
# Warmup Iteration   2: 509.495 ns/op
# Warmup Iteration   3: 510.915 ns/op
# Warmup Iteration   4: 440.676 ns/op
# Warmup Iteration   5: 437.551 ns/op
Iteration   1: 440.729 ns/op
Iteration   2: 436.130 ns/op
Iteration   3: 441.348 ns/op
Iteration   4: 436.208 ns/op
Iteration   5: 435.144 ns/op
Iteration   6: 443.298 ns/op
Iteration   7: 435.378 ns/op
Iteration   8: 435.444 ns/op
Iteration   9: 444.567 ns/op
Iteration  10: 435.258 ns/op
Iteration  11: 442.226 ns/op
Iteration  12: 440.512 ns/op
Iteration  13: 435.551 ns/op
Iteration  14: 437.550 ns/op
Iteration  15: 435.391 ns/op
Iteration  16: 435.303 ns/op
Iteration  17: 437.217 ns/op
Iteration  18: 435.103 ns/op
Iteration  19: 435.595 ns/op
Iteration  20: 437.381 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 494.259 ns/op
# Warmup Iteration   2: 510.089 ns/op
# Warmup Iteration   3: 511.236 ns/op
# Warmup Iteration   4: 441.284 ns/op
# Warmup Iteration   5: 435.772 ns/op
Iteration   1: 439.734 ns/op
Iteration   2: 435.845 ns/op
Iteration   3: 441.513 ns/op
Iteration   4: 435.562 ns/op
Iteration   5: 436.037 ns/op
Iteration   6: 443.265 ns/op
Iteration   7: 435.614 ns/op
Iteration   8: 436.166 ns/op
Iteration   9: 444.913 ns/op
Iteration  10: 435.525 ns/op
Iteration  11: 441.563 ns/op
Iteration  12: 442.118 ns/op
Iteration  13: 435.654 ns/op
Iteration  14: 438.254 ns/op
Iteration  15: 435.814 ns/op
Iteration  16: 435.934 ns/op
Iteration  17: 437.816 ns/op
Iteration  18: 436.108 ns/op
Iteration  19: 436.007 ns/op
Iteration  20: 438.164 ns/op


Result "benchmark.StringContains.regexMatches":
  434.323 ±(99.9%) 2.483 ns/op [Average]
  (min, avg, max) = (418.653, 434.323, 445.218), stdev = 7.322
  CI (99.9%): [431.840, 436.807] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpD4Kb^uKZApRZsvJQk'"[h5^5iXxN)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.196 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.939 ns/op
# Warmup Iteration   4: 9.955 ns/op
# Warmup Iteration   5: 9.929 ns/op
Iteration   1: 9.932 ns/op
Iteration   2: 9.959 ns/op
Iteration   3: 9.908 ns/op
Iteration   4: 9.943 ns/op
Iteration   5: 9.958 ns/op
Iteration   6: 9.946 ns/op
Iteration   7: 9.941 ns/op
Iteration   8: 9.934 ns/op
Iteration   9: 9.954 ns/op
Iteration  10: 9.940 ns/op
Iteration  11: 9.929 ns/op
Iteration  12: 9.940 ns/op
Iteration  13: 9.958 ns/op
Iteration  14: 9.941 ns/op
Iteration  15: 9.955 ns/op
Iteration  16: 9.960 ns/op
Iteration  17: 9.928 ns/op
Iteration  18: 9.946 ns/op
Iteration  19: 9.954 ns/op
Iteration  20: 9.940 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.226 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.838 ns/op
# Warmup Iteration   4: 9.834 ns/op
# Warmup Iteration   5: 9.845 ns/op
Iteration   1: 9.864 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.854 ns/op
Iteration   4: 9.860 ns/op
Iteration   5: 9.874 ns/op
Iteration   6: 9.848 ns/op
Iteration   7: 9.870 ns/op
Iteration   8: 9.864 ns/op
Iteration   9: 9.866 ns/op
Iteration  10: 9.839 ns/op
Iteration  11: 9.863 ns/op
Iteration  12: 9.882 ns/op
Iteration  13: 9.862 ns/op
Iteration  14: 9.871 ns/op
Iteration  15: 9.852 ns/op
Iteration  16: 9.877 ns/op
Iteration  17: 9.871 ns/op
Iteration  18: 9.871 ns/op
Iteration  19: 9.863 ns/op
Iteration  20: 9.850 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.483 ns/op
# Warmup Iteration   2: 9.728 ns/op
# Warmup Iteration   3: 9.796 ns/op
# Warmup Iteration   4: 9.791 ns/op
# Warmup Iteration   5: 9.784 ns/op
Iteration   1: 9.781 ns/op
Iteration   2: 9.788 ns/op
Iteration   3: 9.779 ns/op
Iteration   4: 9.785 ns/op
Iteration   5: 9.788 ns/op
Iteration   6: 9.780 ns/op
Iteration   7: 9.767 ns/op
Iteration   8: 9.797 ns/op
Iteration   9: 9.793 ns/op
Iteration  10: 9.786 ns/op
Iteration  11: 9.784 ns/op
Iteration  12: 9.798 ns/op
Iteration  13: 9.791 ns/op
Iteration  14: 9.798 ns/op
Iteration  15: 9.788 ns/op
Iteration  16: 9.784 ns/op
Iteration  17: 9.803 ns/op
Iteration  18: 9.799 ns/op
Iteration  19: 9.780 ns/op
Iteration  20: 9.799 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.227 ns/op
# Warmup Iteration   2: 9.727 ns/op
# Warmup Iteration   3: 9.961 ns/op
# Warmup Iteration   4: 9.964 ns/op
# Warmup Iteration   5: 9.964 ns/op
Iteration   1: 9.963 ns/op
Iteration   2: 9.958 ns/op
Iteration   3: 9.966 ns/op
Iteration   4: 9.944 ns/op
Iteration   5: 9.965 ns/op
Iteration   6: 9.977 ns/op
Iteration   7: 9.969 ns/op
Iteration   8: 9.996 ns/op
Iteration   9: 9.973 ns/op
Iteration  10: 9.984 ns/op
Iteration  11: 9.951 ns/op
Iteration  12: 9.951 ns/op
Iteration  13: 9.961 ns/op
Iteration  14: 9.975 ns/op
Iteration  15: 9.958 ns/op
Iteration  16: 9.941 ns/op
Iteration  17: 9.950 ns/op
Iteration  18: 9.962 ns/op
Iteration  19: 9.958 ns/op
Iteration  20: 9.969 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.470 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.852 ns/op
# Warmup Iteration   4: 9.848 ns/op
# Warmup Iteration   5: 9.855 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.874 ns/op
Iteration   3: 9.866 ns/op
Iteration   4: 9.862 ns/op
Iteration   5: 9.859 ns/op
Iteration   6: 9.856 ns/op
Iteration   7: 9.850 ns/op
Iteration   8: 9.852 ns/op
Iteration   9: 9.845 ns/op
Iteration  10: 9.856 ns/op
Iteration  11: 9.873 ns/op
Iteration  12: 9.854 ns/op
Iteration  13: 9.870 ns/op
Iteration  14: 9.848 ns/op
Iteration  15: 9.869 ns/op
Iteration  16: 9.870 ns/op
Iteration  17: 9.859 ns/op
Iteration  18: 9.862 ns/op
Iteration  19: 9.859 ns/op
Iteration  20: 9.862 ns/op


Result "benchmark.StringContains.stringContains":
  9.884 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (9.767, 9.884, 9.996), stdev = 0.064
  CI (99.9%): [9.862, 9.906] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpD4Kb^uKZApRZsvJQk'"[h5^5iXxN  avgt  100  434.323 ± 2.483  ns/op
StringContains.stringContains     http  httpD4Kb^uKZApRZsvJQk'"[h5^5iXxN  avgt  100    9.884 ± 0.022  ns/op

Benchmark result is saved to http_32_0_8.csv
