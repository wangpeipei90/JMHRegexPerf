# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = J]zd)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 171.945 ns/op
# Warmup Iteration   2: 92.646 ns/op
# Warmup Iteration   3: 90.633 ns/op
# Warmup Iteration   4: 92.512 ns/op
# Warmup Iteration   5: 88.597 ns/op
Iteration   1: 88.160 ns/op
Iteration   2: 88.534 ns/op
Iteration   3: 88.607 ns/op
Iteration   4: 88.568 ns/op
Iteration   5: 87.962 ns/op
Iteration   6: 88.048 ns/op
Iteration   7: 88.058 ns/op
Iteration   8: 88.045 ns/op
Iteration   9: 88.079 ns/op
Iteration  10: 87.973 ns/op
Iteration  11: 88.163 ns/op
Iteration  12: 88.298 ns/op
Iteration  13: 88.695 ns/op
Iteration  14: 87.962 ns/op
Iteration  15: 88.412 ns/op
Iteration  16: 88.505 ns/op
Iteration  17: 88.634 ns/op
Iteration  18: 87.974 ns/op
Iteration  19: 88.324 ns/op
Iteration  20: 88.347 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 171.983 ns/op
# Warmup Iteration   2: 97.599 ns/op
# Warmup Iteration   3: 95.468 ns/op
# Warmup Iteration   4: 97.501 ns/op
# Warmup Iteration   5: 93.423 ns/op
Iteration   1: 93.672 ns/op
Iteration   2: 93.766 ns/op
Iteration   3: 93.525 ns/op
Iteration   4: 93.694 ns/op
Iteration   5: 93.445 ns/op
Iteration   6: 93.077 ns/op
Iteration   7: 94.021 ns/op
Iteration   8: 93.157 ns/op
Iteration   9: 93.043 ns/op
Iteration  10: 93.187 ns/op
Iteration  11: 93.248 ns/op
Iteration  12: 93.281 ns/op
Iteration  13: 93.596 ns/op
Iteration  14: 93.472 ns/op
Iteration  15: 93.206 ns/op
Iteration  16: 93.534 ns/op
Iteration  17: 93.941 ns/op
Iteration  18: 93.372 ns/op
Iteration  19: 94.071 ns/op
Iteration  20: 93.952 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 167.538 ns/op
# Warmup Iteration   2: 90.318 ns/op
# Warmup Iteration   3: 89.425 ns/op
# Warmup Iteration   4: 91.354 ns/op
# Warmup Iteration   5: 87.548 ns/op
Iteration   1: 87.585 ns/op
Iteration   2: 87.146 ns/op
Iteration   3: 87.602 ns/op
Iteration   4: 87.444 ns/op
Iteration   5: 87.417 ns/op
Iteration   6: 87.256 ns/op
Iteration   7: 86.978 ns/op
Iteration   8: 87.082 ns/op
Iteration   9: 87.130 ns/op
Iteration  10: 87.193 ns/op
Iteration  11: 87.046 ns/op
Iteration  12: 87.263 ns/op
Iteration  13: 87.523 ns/op
Iteration  14: 87.218 ns/op
Iteration  15: 87.573 ns/op
Iteration  16: 86.971 ns/op
Iteration  17: 87.392 ns/op
Iteration  18: 87.422 ns/op
Iteration  19: 87.620 ns/op
Iteration  20: 87.664 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 170.635 ns/op
# Warmup Iteration   2: 96.718 ns/op
# Warmup Iteration   3: 95.612 ns/op
# Warmup Iteration   4: 97.727 ns/op
# Warmup Iteration   5: 93.485 ns/op
Iteration   1: 93.744 ns/op
Iteration   2: 93.856 ns/op
Iteration   3: 93.342 ns/op
Iteration   4: 93.729 ns/op
Iteration   5: 93.539 ns/op
Iteration   6: 93.174 ns/op
Iteration   7: 93.389 ns/op
Iteration   8: 94.058 ns/op
Iteration   9: 93.161 ns/op
Iteration  10: 93.266 ns/op
Iteration  11: 93.567 ns/op
Iteration  12: 93.136 ns/op
Iteration  13: 93.549 ns/op
Iteration  14: 93.418 ns/op
Iteration  15: 93.303 ns/op
Iteration  16: 94.340 ns/op
Iteration  17: 93.632 ns/op
Iteration  18: 93.301 ns/op
Iteration  19: 93.613 ns/op
Iteration  20: 93.467 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 167.235 ns/op
# Warmup Iteration   2: 91.097 ns/op
# Warmup Iteration   3: 90.433 ns/op
# Warmup Iteration   4: 92.784 ns/op
# Warmup Iteration   5: 88.522 ns/op
Iteration   1: 88.437 ns/op
Iteration   2: 88.036 ns/op
Iteration   3: 89.050 ns/op
Iteration   4: 88.983 ns/op
Iteration   5: 88.217 ns/op
Iteration   6: 87.775 ns/op
Iteration   7: 88.768 ns/op
Iteration   8: 88.034 ns/op
Iteration   9: 88.171 ns/op
Iteration  10: 87.931 ns/op
Iteration  11: 88.338 ns/op
Iteration  12: 88.050 ns/op
Iteration  13: 88.296 ns/op
Iteration  14: 87.809 ns/op
Iteration  15: 88.142 ns/op
Iteration  16: 88.111 ns/op
Iteration  17: 88.119 ns/op
Iteration  18: 88.399 ns/op
Iteration  19: 87.890 ns/op
Iteration  20: 88.461 ns/op


Result "benchmark.StringContains.regexMatches":
  90.177 ±(99.9%) 0.943 ns/op [Average]
  (min, avg, max) = (86.971, 90.177, 94.340), stdev = 2.781
  CI (99.9%): [89.234, 91.120] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = J]zd)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.432 ns/op
# Warmup Iteration   2: 9.074 ns/op
# Warmup Iteration   3: 8.959 ns/op
# Warmup Iteration   4: 8.969 ns/op
# Warmup Iteration   5: 8.959 ns/op
Iteration   1: 8.960 ns/op
Iteration   2: 8.962 ns/op
Iteration   3: 8.959 ns/op
Iteration   4: 8.960 ns/op
Iteration   5: 8.959 ns/op
Iteration   6: 8.961 ns/op
Iteration   7: 8.958 ns/op
Iteration   8: 8.960 ns/op
Iteration   9: 8.960 ns/op
Iteration  10: 8.961 ns/op
Iteration  11: 8.958 ns/op
Iteration  12: 8.958 ns/op
Iteration  13: 8.960 ns/op
Iteration  14: 8.961 ns/op
Iteration  15: 8.961 ns/op
Iteration  16: 8.961 ns/op
Iteration  17: 8.962 ns/op
Iteration  18: 8.961 ns/op
Iteration  19: 8.959 ns/op
Iteration  20: 8.961 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.455 ns/op
# Warmup Iteration   2: 9.065 ns/op
# Warmup Iteration   3: 9.182 ns/op
# Warmup Iteration   4: 9.174 ns/op
# Warmup Iteration   5: 9.148 ns/op
Iteration   1: 9.104 ns/op
Iteration   2: 9.109 ns/op
Iteration   3: 9.125 ns/op
Iteration   4: 9.079 ns/op
Iteration   5: 9.105 ns/op
Iteration   6: 9.108 ns/op
Iteration   7: 9.109 ns/op
Iteration   8: 9.108 ns/op
Iteration   9: 9.138 ns/op
Iteration  10: 9.116 ns/op
Iteration  11: 9.129 ns/op
Iteration  12: 9.156 ns/op
Iteration  13: 9.139 ns/op
Iteration  14: 9.144 ns/op
Iteration  15: 9.163 ns/op
Iteration  16: 9.139 ns/op
Iteration  17: 9.163 ns/op
Iteration  18: 9.154 ns/op
Iteration  19: 9.132 ns/op
Iteration  20: 9.147 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.430 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.962 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.955 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.964 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.963 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.968 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.464 ns/op
# Warmup Iteration   2: 9.105 ns/op
# Warmup Iteration   3: 8.970 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.967 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.968 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.970 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.982 ns/op
Iteration   9: 8.968 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.969 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.970 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.968 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.982 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.447 ns/op
# Warmup Iteration   2: 9.078 ns/op
# Warmup Iteration   3: 9.183 ns/op
# Warmup Iteration   4: 9.168 ns/op
# Warmup Iteration   5: 9.151 ns/op
Iteration   1: 9.159 ns/op
Iteration   2: 9.181 ns/op
Iteration   3: 9.187 ns/op
Iteration   4: 9.170 ns/op
Iteration   5: 9.181 ns/op
Iteration   6: 9.190 ns/op
Iteration   7: 9.164 ns/op
Iteration   8: 9.139 ns/op
Iteration   9: 9.148 ns/op
Iteration  10: 9.160 ns/op
Iteration  11: 9.151 ns/op
Iteration  12: 9.158 ns/op
Iteration  13: 9.162 ns/op
Iteration  14: 9.119 ns/op
Iteration  15: 9.135 ns/op
Iteration  16: 9.173 ns/op
Iteration  17: 9.136 ns/op
Iteration  18: 9.132 ns/op
Iteration  19: 9.149 ns/op
Iteration  20: 9.145 ns/op


Result "benchmark.StringContains.stringContains":
  9.036 ±(99.9%) 0.030 ns/op [Average]
  (min, avg, max) = (8.955, 9.036, 9.190), stdev = 0.089
  CI (99.9%): [9.006, 9.066] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   J]zd  avgt  100  90.177 ± 0.943  ns/op
StringContains.stringContains     http   J]zd  avgt  100   9.036 ± 0.030  ns/op

Benchmark result is saved to http_4_1_5.csv
