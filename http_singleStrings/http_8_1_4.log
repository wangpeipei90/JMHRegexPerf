# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = RmrC1DCk)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 181.069 ns/op
# Warmup Iteration   2: 106.346 ns/op
# Warmup Iteration   3: 100.592 ns/op
# Warmup Iteration   4: 99.605 ns/op
# Warmup Iteration   5: 100.707 ns/op
Iteration   1: 97.867 ns/op
Iteration   2: 97.388 ns/op
Iteration   3: 97.818 ns/op
Iteration   4: 97.458 ns/op
Iteration   5: 97.894 ns/op
Iteration   6: 97.210 ns/op
Iteration   7: 97.367 ns/op
Iteration   8: 97.358 ns/op
Iteration   9: 97.183 ns/op
Iteration  10: 97.362 ns/op
Iteration  11: 97.192 ns/op
Iteration  12: 97.453 ns/op
Iteration  13: 97.522 ns/op
Iteration  14: 97.278 ns/op
Iteration  15: 97.617 ns/op
Iteration  16: 97.529 ns/op
Iteration  17: 98.086 ns/op
Iteration  18: 98.058 ns/op
Iteration  19: 97.284 ns/op
Iteration  20: 97.659 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 177.442 ns/op
# Warmup Iteration   2: 104.287 ns/op
# Warmup Iteration   3: 100.285 ns/op
# Warmup Iteration   4: 99.063 ns/op
# Warmup Iteration   5: 100.646 ns/op
Iteration   1: 97.760 ns/op
Iteration   2: 97.297 ns/op
Iteration   3: 97.778 ns/op
Iteration   4: 97.315 ns/op
Iteration   5: 97.785 ns/op
Iteration   6: 97.184 ns/op
Iteration   7: 96.973 ns/op
Iteration   8: 97.217 ns/op
Iteration   9: 97.095 ns/op
Iteration  10: 97.221 ns/op
Iteration  11: 97.169 ns/op
Iteration  12: 97.736 ns/op
Iteration  13: 97.147 ns/op
Iteration  14: 97.060 ns/op
Iteration  15: 97.370 ns/op
Iteration  16: 97.267 ns/op
Iteration  17: 97.303 ns/op
Iteration  18: 97.788 ns/op
Iteration  19: 97.245 ns/op
Iteration  20: 97.817 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.765 ns/op
# Warmup Iteration   2: 103.632 ns/op
# Warmup Iteration   3: 100.048 ns/op
# Warmup Iteration   4: 99.581 ns/op
# Warmup Iteration   5: 100.349 ns/op
Iteration   1: 98.064 ns/op
Iteration   2: 97.564 ns/op
Iteration   3: 98.001 ns/op
Iteration   4: 97.466 ns/op
Iteration   5: 97.980 ns/op
Iteration   6: 97.461 ns/op
Iteration   7: 97.309 ns/op
Iteration   8: 97.508 ns/op
Iteration   9: 97.327 ns/op
Iteration  10: 97.567 ns/op
Iteration  11: 97.578 ns/op
Iteration  12: 97.316 ns/op
Iteration  13: 97.698 ns/op
Iteration  14: 97.352 ns/op
Iteration  15: 97.784 ns/op
Iteration  16: 97.785 ns/op
Iteration  17: 97.593 ns/op
Iteration  18: 98.189 ns/op
Iteration  19: 97.602 ns/op
Iteration  20: 98.200 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 177.901 ns/op
# Warmup Iteration   2: 104.147 ns/op
# Warmup Iteration   3: 100.729 ns/op
# Warmup Iteration   4: 100.413 ns/op
# Warmup Iteration   5: 100.745 ns/op
Iteration   1: 98.467 ns/op
Iteration   2: 97.816 ns/op
Iteration   3: 98.413 ns/op
Iteration   4: 97.976 ns/op
Iteration   5: 98.830 ns/op
Iteration   6: 97.895 ns/op
Iteration   7: 97.690 ns/op
Iteration   8: 97.776 ns/op
Iteration   9: 97.778 ns/op
Iteration  10: 98.671 ns/op
Iteration  11: 97.642 ns/op
Iteration  12: 98.063 ns/op
Iteration  13: 98.002 ns/op
Iteration  14: 97.646 ns/op
Iteration  15: 99.033 ns/op
Iteration  16: 97.573 ns/op
Iteration  17: 97.920 ns/op
Iteration  18: 97.917 ns/op
Iteration  19: 97.618 ns/op
Iteration  20: 98.190 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 176.743 ns/op
# Warmup Iteration   2: 104.346 ns/op
# Warmup Iteration   3: 100.415 ns/op
# Warmup Iteration   4: 99.672 ns/op
# Warmup Iteration   5: 100.798 ns/op
Iteration   1: 98.662 ns/op
Iteration   2: 98.054 ns/op
Iteration   3: 98.534 ns/op
Iteration   4: 98.068 ns/op
Iteration   5: 98.602 ns/op
Iteration   6: 97.752 ns/op
Iteration   7: 97.944 ns/op
Iteration   8: 98.597 ns/op
Iteration   9: 98.088 ns/op
Iteration  10: 98.131 ns/op
Iteration  11: 97.886 ns/op
Iteration  12: 98.136 ns/op
Iteration  13: 98.194 ns/op
Iteration  14: 98.016 ns/op
Iteration  15: 98.321 ns/op
Iteration  16: 97.764 ns/op
Iteration  17: 98.099 ns/op
Iteration  18: 98.402 ns/op
Iteration  19: 97.997 ns/op
Iteration  20: 98.339 ns/op


Result "benchmark.StringContains.regexMatches":
  97.760 ±(99.9%) 0.148 ns/op [Average]
  (min, avg, max) = (96.973, 97.760, 99.033), stdev = 0.436
  CI (99.9%): [97.612, 97.907] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = RmrC1DCk)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.448 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.963 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.953 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.963 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.964 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.449 ns/op
# Warmup Iteration   2: 9.055 ns/op
# Warmup Iteration   3: 8.969 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.970 ns/op
Iteration   2: 8.969 ns/op
Iteration   3: 8.960 ns/op
Iteration   4: 8.971 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.968 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.968 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.969 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.968 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.432 ns/op
# Warmup Iteration   2: 9.051 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.963 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.963 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.964 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.968 ns/op
Iteration  14: 8.969 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.454 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.968 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.967 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.453 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.968 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.969 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.970 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.970 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 9.016 ns/op
Iteration  14: 8.968 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.968 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.973 ns/op


Result "benchmark.StringContains.stringContains":
  8.967 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (8.953, 8.967, 9.016), stdev = 0.006
  CI (99.9%): [8.965, 8.968] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  RmrC1DCk  avgt  100  97.760 ± 0.148  ns/op
StringContains.stringContains     http  RmrC1DCk  avgt  100   8.967 ± 0.002  ns/op

Benchmark result is saved to http_8_1_4.csv
