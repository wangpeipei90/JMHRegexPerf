# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str =  KPcWD}a)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 183.082 ns/op
# Warmup Iteration   2: 105.642 ns/op
# Warmup Iteration   3: 100.539 ns/op
# Warmup Iteration   4: 99.591 ns/op
# Warmup Iteration   5: 101.337 ns/op
Iteration   1: 98.305 ns/op
Iteration   2: 97.804 ns/op
Iteration   3: 98.138 ns/op
Iteration   4: 97.729 ns/op
Iteration   5: 98.221 ns/op
Iteration   6: 97.455 ns/op
Iteration   7: 97.575 ns/op
Iteration   8: 97.574 ns/op
Iteration   9: 97.415 ns/op
Iteration  10: 97.660 ns/op
Iteration  11: 98.141 ns/op
Iteration  12: 97.678 ns/op
Iteration  13: 97.632 ns/op
Iteration  14: 97.427 ns/op
Iteration  15: 97.706 ns/op
Iteration  16: 97.545 ns/op
Iteration  17: 97.796 ns/op
Iteration  18: 97.887 ns/op
Iteration  19: 97.688 ns/op
Iteration  20: 98.180 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 177.470 ns/op
# Warmup Iteration   2: 103.457 ns/op
# Warmup Iteration   3: 100.207 ns/op
# Warmup Iteration   4: 99.467 ns/op
# Warmup Iteration   5: 100.421 ns/op
Iteration   1: 98.297 ns/op
Iteration   2: 97.759 ns/op
Iteration   3: 98.185 ns/op
Iteration   4: 97.681 ns/op
Iteration   5: 98.191 ns/op
Iteration   6: 97.641 ns/op
Iteration   7: 97.467 ns/op
Iteration   8: 98.489 ns/op
Iteration   9: 97.572 ns/op
Iteration  10: 97.750 ns/op
Iteration  11: 97.514 ns/op
Iteration  12: 97.847 ns/op
Iteration  13: 97.872 ns/op
Iteration  14: 97.634 ns/op
Iteration  15: 97.827 ns/op
Iteration  16: 97.563 ns/op
Iteration  17: 98.232 ns/op
Iteration  18: 98.106 ns/op
Iteration  19: 97.696 ns/op
Iteration  20: 98.269 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.881 ns/op
# Warmup Iteration   2: 103.588 ns/op
# Warmup Iteration   3: 99.705 ns/op
# Warmup Iteration   4: 99.264 ns/op
# Warmup Iteration   5: 100.416 ns/op
Iteration   1: 98.106 ns/op
Iteration   2: 97.917 ns/op
Iteration   3: 98.509 ns/op
Iteration   4: 97.350 ns/op
Iteration   5: 99.177 ns/op
Iteration   6: 97.143 ns/op
Iteration   7: 96.727 ns/op
Iteration   8: 96.956 ns/op
Iteration   9: 96.738 ns/op
Iteration  10: 97.014 ns/op
Iteration  11: 97.093 ns/op
Iteration  12: 96.862 ns/op
Iteration  13: 97.164 ns/op
Iteration  14: 96.817 ns/op
Iteration  15: 97.027 ns/op
Iteration  16: 97.103 ns/op
Iteration  17: 96.791 ns/op
Iteration  18: 97.115 ns/op
Iteration  19: 96.853 ns/op
Iteration  20: 97.464 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 177.473 ns/op
# Warmup Iteration   2: 103.710 ns/op
# Warmup Iteration   3: 99.839 ns/op
# Warmup Iteration   4: 99.116 ns/op
# Warmup Iteration   5: 100.229 ns/op
Iteration   1: 97.985 ns/op
Iteration   2: 98.532 ns/op
Iteration   3: 98.516 ns/op
Iteration   4: 97.425 ns/op
Iteration   5: 97.884 ns/op
Iteration   6: 97.414 ns/op
Iteration   7: 97.209 ns/op
Iteration   8: 97.366 ns/op
Iteration   9: 97.217 ns/op
Iteration  10: 97.499 ns/op
Iteration  11: 97.730 ns/op
Iteration  12: 97.463 ns/op
Iteration  13: 97.668 ns/op
Iteration  14: 97.244 ns/op
Iteration  15: 97.638 ns/op
Iteration  16: 97.996 ns/op
Iteration  17: 97.520 ns/op
Iteration  18: 97.996 ns/op
Iteration  19: 97.475 ns/op
Iteration  20: 97.776 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 176.839 ns/op
# Warmup Iteration   2: 104.988 ns/op
# Warmup Iteration   3: 99.917 ns/op
# Warmup Iteration   4: 99.198 ns/op
# Warmup Iteration   5: 100.185 ns/op
Iteration   1: 97.932 ns/op
Iteration   2: 97.469 ns/op
Iteration   3: 97.889 ns/op
Iteration   4: 97.468 ns/op
Iteration   5: 97.837 ns/op
Iteration   6: 98.267 ns/op
Iteration   7: 97.199 ns/op
Iteration   8: 97.509 ns/op
Iteration   9: 97.123 ns/op
Iteration  10: 97.519 ns/op
Iteration  11: 97.708 ns/op
Iteration  12: 99.888 ns/op
Iteration  13: 99.153 ns/op
Iteration  14: 97.130 ns/op
Iteration  15: 98.056 ns/op
Iteration  16: 97.272 ns/op
Iteration  17: 97.368 ns/op
Iteration  18: 97.364 ns/op
Iteration  19: 97.290 ns/op
Iteration  20: 97.514 ns/op


Result "benchmark.StringContains.regexMatches":
  97.676 ±(99.9%) 0.178 ns/op [Average]
  (min, avg, max) = (96.727, 97.676, 99.888), stdev = 0.524
  CI (99.9%): [97.498, 97.854] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str =  KPcWD}a)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.447 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.961 ns/op
# Warmup Iteration   4: 8.960 ns/op
# Warmup Iteration   5: 8.956 ns/op
Iteration   1: 8.960 ns/op
Iteration   2: 8.958 ns/op
Iteration   3: 8.957 ns/op
Iteration   4: 8.959 ns/op
Iteration   5: 8.955 ns/op
Iteration   6: 8.958 ns/op
Iteration   7: 8.957 ns/op
Iteration   8: 8.956 ns/op
Iteration   9: 8.958 ns/op
Iteration  10: 8.960 ns/op
Iteration  11: 8.959 ns/op
Iteration  12: 8.959 ns/op
Iteration  13: 8.955 ns/op
Iteration  14: 8.958 ns/op
Iteration  15: 8.959 ns/op
Iteration  16: 8.957 ns/op
Iteration  17: 8.959 ns/op
Iteration  18: 8.958 ns/op
Iteration  19: 8.957 ns/op
Iteration  20: 8.959 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.464 ns/op
# Warmup Iteration   2: 9.067 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.970 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.978 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.979 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.964 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.969 ns/op
Iteration  20: 8.984 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.470 ns/op
# Warmup Iteration   2: 9.067 ns/op
# Warmup Iteration   3: 8.969 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.980 ns/op
Iteration   3: 8.972 ns/op
Iteration   4: 8.976 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.970 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.983 ns/op
Iteration   9: 8.969 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.971 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.971 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.970 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.987 ns/op
Iteration  19: 8.969 ns/op
Iteration  20: 8.967 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.508 ns/op
# Warmup Iteration   2: 9.067 ns/op
# Warmup Iteration   3: 9.153 ns/op
# Warmup Iteration   4: 9.179 ns/op
# Warmup Iteration   5: 9.148 ns/op
Iteration   1: 9.176 ns/op
Iteration   2: 9.170 ns/op
Iteration   3: 9.170 ns/op
Iteration   4: 9.175 ns/op
Iteration   5: 9.132 ns/op
Iteration   6: 9.167 ns/op
Iteration   7: 9.149 ns/op
Iteration   8: 9.146 ns/op
Iteration   9: 9.126 ns/op
Iteration  10: 9.159 ns/op
Iteration  11: 9.153 ns/op
Iteration  12: 9.164 ns/op
Iteration  13: 9.133 ns/op
Iteration  14: 9.141 ns/op
Iteration  15: 9.135 ns/op
Iteration  16: 9.153 ns/op
Iteration  17: 9.145 ns/op
Iteration  18: 9.141 ns/op
Iteration  19: 9.163 ns/op
Iteration  20: 9.151 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.494 ns/op
# Warmup Iteration   2: 8.982 ns/op
# Warmup Iteration   3: 9.013 ns/op
# Warmup Iteration   4: 9.016 ns/op
# Warmup Iteration   5: 9.014 ns/op
Iteration   1: 9.014 ns/op
Iteration   2: 9.015 ns/op
Iteration   3: 9.105 ns/op
Iteration   4: 9.012 ns/op
Iteration   5: 9.020 ns/op
Iteration   6: 9.014 ns/op
Iteration   7: 9.014 ns/op
Iteration   8: 9.031 ns/op
Iteration   9: 9.014 ns/op
Iteration  10: 9.018 ns/op
Iteration  11: 9.012 ns/op
Iteration  12: 9.010 ns/op
Iteration  13: 9.015 ns/op
Iteration  14: 9.015 ns/op
Iteration  15: 9.014 ns/op
Iteration  16: 9.016 ns/op
Iteration  17: 9.013 ns/op
Iteration  18: 9.012 ns/op
Iteration  19: 9.017 ns/op
Iteration  20: 9.012 ns/op


Result "benchmark.StringContains.stringContains":
  9.014 ±(99.9%) 0.025 ns/op [Average]
  (min, avg, max) = (8.955, 9.014, 9.176), stdev = 0.074
  CI (99.9%): [8.989, 9.039] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   KPcWD}a  avgt  100  97.676 ± 0.178  ns/op
StringContains.stringContains     http   KPcWD}a  avgt  100   9.014 ± 0.025  ns/op

Benchmark result is saved to http_8_1_5.csv
