# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ,O(l<)xPlxwTrs#khttp4yrn9dF^2{V)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 359.738 ns/op
# Warmup Iteration   2: 371.070 ns/op
# Warmup Iteration   3: 303.799 ns/op
# Warmup Iteration   4: 290.771 ns/op
# Warmup Iteration   5: 288.103 ns/op
Iteration   1: 294.037 ns/op
Iteration   2: 288.819 ns/op
Iteration   3: 293.083 ns/op
Iteration   4: 294.893 ns/op
Iteration   5: 287.910 ns/op
Iteration   6: 297.338 ns/op
Iteration   7: 287.811 ns/op
Iteration   8: 289.523 ns/op
Iteration   9: 287.868 ns/op
Iteration  10: 289.116 ns/op
Iteration  11: 288.209 ns/op
Iteration  12: 289.215 ns/op
Iteration  13: 288.085 ns/op
Iteration  14: 289.219 ns/op
Iteration  15: 287.982 ns/op
Iteration  16: 289.525 ns/op
Iteration  17: 289.603 ns/op
Iteration  18: 288.087 ns/op
Iteration  19: 289.451 ns/op
Iteration  20: 288.056 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 349.967 ns/op
# Warmup Iteration   2: 360.141 ns/op
# Warmup Iteration   3: 282.448 ns/op
# Warmup Iteration   4: 275.500 ns/op
# Warmup Iteration   5: 271.053 ns/op
Iteration   1: 274.293 ns/op
Iteration   2: 275.166 ns/op
Iteration   3: 270.684 ns/op
Iteration   4: 276.454 ns/op
Iteration   5: 270.675 ns/op
Iteration   6: 278.478 ns/op
Iteration   7: 274.702 ns/op
Iteration   8: 270.530 ns/op
Iteration   9: 272.153 ns/op
Iteration  10: 270.440 ns/op
Iteration  11: 272.598 ns/op
Iteration  12: 270.029 ns/op
Iteration  13: 271.676 ns/op
Iteration  14: 273.833 ns/op
Iteration  15: 269.962 ns/op
Iteration  16: 272.008 ns/op
Iteration  17: 269.797 ns/op
Iteration  18: 271.603 ns/op
Iteration  19: 269.828 ns/op
Iteration  20: 274.648 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 347.881 ns/op
# Warmup Iteration   2: 353.921 ns/op
# Warmup Iteration   3: 278.744 ns/op
# Warmup Iteration   4: 272.559 ns/op
# Warmup Iteration   5: 269.723 ns/op
Iteration   1: 274.557 ns/op
Iteration   2: 275.455 ns/op
Iteration   3: 269.832 ns/op
Iteration   4: 275.968 ns/op
Iteration   5: 269.945 ns/op
Iteration   6: 277.695 ns/op
Iteration   7: 271.104 ns/op
Iteration   8: 270.031 ns/op
Iteration   9: 271.197 ns/op
Iteration  10: 270.167 ns/op
Iteration  11: 272.045 ns/op
Iteration  12: 270.547 ns/op
Iteration  13: 271.219 ns/op
Iteration  14: 271.144 ns/op
Iteration  15: 269.760 ns/op
Iteration  16: 271.177 ns/op
Iteration  17: 269.848 ns/op
Iteration  18: 271.385 ns/op
Iteration  19: 269.820 ns/op
Iteration  20: 274.898 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 353.656 ns/op
# Warmup Iteration   2: 352.661 ns/op
# Warmup Iteration   3: 285.821 ns/op
# Warmup Iteration   4: 278.982 ns/op
# Warmup Iteration   5: 275.744 ns/op
Iteration   1: 279.823 ns/op
Iteration   2: 280.793 ns/op
Iteration   3: 275.633 ns/op
Iteration   4: 281.724 ns/op
Iteration   5: 275.767 ns/op
Iteration   6: 283.853 ns/op
Iteration   7: 275.679 ns/op
Iteration   8: 277.044 ns/op
Iteration   9: 276.953 ns/op
Iteration  10: 275.690 ns/op
Iteration  11: 277.101 ns/op
Iteration  12: 275.766 ns/op
Iteration  13: 277.014 ns/op
Iteration  14: 275.735 ns/op
Iteration  15: 277.151 ns/op
Iteration  16: 275.635 ns/op
Iteration  17: 277.029 ns/op
Iteration  18: 276.971 ns/op
Iteration  19: 275.632 ns/op
Iteration  20: 277.429 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 350.523 ns/op
# Warmup Iteration   2: 361.983 ns/op
# Warmup Iteration   3: 281.786 ns/op
# Warmup Iteration   4: 273.423 ns/op
# Warmup Iteration   5: 270.775 ns/op
Iteration   1: 274.575 ns/op
Iteration   2: 275.432 ns/op
Iteration   3: 270.897 ns/op
Iteration   4: 276.983 ns/op
Iteration   5: 271.090 ns/op
Iteration   6: 278.581 ns/op
Iteration   7: 272.710 ns/op
Iteration   8: 271.364 ns/op
Iteration   9: 272.068 ns/op
Iteration  10: 270.705 ns/op
Iteration  11: 272.275 ns/op
Iteration  12: 271.093 ns/op
Iteration  13: 272.280 ns/op
Iteration  14: 272.120 ns/op
Iteration  15: 270.891 ns/op
Iteration  16: 272.241 ns/op
Iteration  17: 270.964 ns/op
Iteration  18: 272.611 ns/op
Iteration  19: 270.932 ns/op
Iteration  20: 274.810 ns/op


Result "benchmark.StringContains.regexMatches":
  276.882 ±(99.9%) 2.454 ns/op [Average]
  (min, avg, max) = (269.760, 276.882, 297.338), stdev = 7.237
  CI (99.9%): [274.428, 279.337] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ,O(l<)xPlxwTrs#khttp4yrn9dF^2{V)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.989 ns/op
# Warmup Iteration   2: 12.576 ns/op
# Warmup Iteration   3: 12.143 ns/op
# Warmup Iteration   4: 12.155 ns/op
# Warmup Iteration   5: 12.142 ns/op
Iteration   1: 12.147 ns/op
Iteration   2: 12.128 ns/op
Iteration   3: 12.138 ns/op
Iteration   4: 12.140 ns/op
Iteration   5: 12.153 ns/op
Iteration   6: 12.141 ns/op
Iteration   7: 12.134 ns/op
Iteration   8: 12.138 ns/op
Iteration   9: 12.141 ns/op
Iteration  10: 12.132 ns/op
Iteration  11: 12.142 ns/op
Iteration  12: 12.129 ns/op
Iteration  13: 12.130 ns/op
Iteration  14: 12.158 ns/op
Iteration  15: 12.137 ns/op
Iteration  16: 12.144 ns/op
Iteration  17: 12.118 ns/op
Iteration  18: 12.133 ns/op
Iteration  19: 12.146 ns/op
Iteration  20: 12.147 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.322 ns/op
# Warmup Iteration   2: 12.481 ns/op
# Warmup Iteration   3: 12.139 ns/op
# Warmup Iteration   4: 12.135 ns/op
# Warmup Iteration   5: 12.139 ns/op
Iteration   1: 12.157 ns/op
Iteration   2: 12.147 ns/op
Iteration   3: 12.144 ns/op
Iteration   4: 12.148 ns/op
Iteration   5: 12.158 ns/op
Iteration   6: 12.121 ns/op
Iteration   7: 12.137 ns/op
Iteration   8: 12.143 ns/op
Iteration   9: 12.140 ns/op
Iteration  10: 12.142 ns/op
Iteration  11: 12.153 ns/op
Iteration  12: 12.842 ns/op
Iteration  13: 12.842 ns/op
Iteration  14: 12.842 ns/op
Iteration  15: 12.857 ns/op
Iteration  16: 12.843 ns/op
Iteration  17: 12.842 ns/op
Iteration  18: 12.843 ns/op
Iteration  19: 12.843 ns/op
Iteration  20: 12.845 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 14.287 ns/op
# Warmup Iteration   2: 13.832 ns/op
# Warmup Iteration   3: 13.403 ns/op
# Warmup Iteration   4: 13.403 ns/op
# Warmup Iteration   5: 13.404 ns/op
Iteration   1: 13.404 ns/op
Iteration   2: 13.403 ns/op
Iteration   3: 13.403 ns/op
Iteration   4: 13.404 ns/op
Iteration   5: 13.404 ns/op
Iteration   6: 13.404 ns/op
Iteration   7: 13.403 ns/op
Iteration   8: 13.426 ns/op
Iteration   9: 13.402 ns/op
Iteration  10: 13.403 ns/op
Iteration  11: 13.406 ns/op
Iteration  12: 12.135 ns/op
Iteration  13: 12.118 ns/op
Iteration  14: 12.135 ns/op
Iteration  15: 12.146 ns/op
Iteration  16: 12.124 ns/op
Iteration  17: 12.128 ns/op
Iteration  18: 12.122 ns/op
Iteration  19: 12.127 ns/op
Iteration  20: 12.142 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.315 ns/op
# Warmup Iteration   2: 12.630 ns/op
# Warmup Iteration   3: 12.137 ns/op
# Warmup Iteration   4: 12.151 ns/op
# Warmup Iteration   5: 12.142 ns/op
Iteration   1: 12.150 ns/op
Iteration   2: 12.142 ns/op
Iteration   3: 12.147 ns/op
Iteration   4: 12.155 ns/op
Iteration   5: 12.144 ns/op
Iteration   6: 12.143 ns/op
Iteration   7: 12.142 ns/op
Iteration   8: 12.156 ns/op
Iteration   9: 12.126 ns/op
Iteration  10: 12.160 ns/op
Iteration  11: 12.137 ns/op
Iteration  12: 12.118 ns/op
Iteration  13: 12.155 ns/op
Iteration  14: 12.135 ns/op
Iteration  15: 12.144 ns/op
Iteration  16: 12.135 ns/op
Iteration  17: 12.139 ns/op
Iteration  18: 12.130 ns/op
Iteration  19: 12.121 ns/op
Iteration  20: 12.157 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.305 ns/op
# Warmup Iteration   2: 12.545 ns/op
# Warmup Iteration   3: 12.096 ns/op
# Warmup Iteration   4: 12.070 ns/op
# Warmup Iteration   5: 12.083 ns/op
Iteration   1: 12.102 ns/op
Iteration   2: 12.099 ns/op
Iteration   3: 12.103 ns/op
Iteration   4: 12.098 ns/op
Iteration   5: 12.087 ns/op
Iteration   6: 12.108 ns/op
Iteration   7: 12.098 ns/op
Iteration   8: 12.104 ns/op
Iteration   9: 12.099 ns/op
Iteration  10: 12.084 ns/op
Iteration  11: 12.094 ns/op
Iteration  12: 12.073 ns/op
Iteration  13: 12.084 ns/op
Iteration  14: 12.094 ns/op
Iteration  15: 12.073 ns/op
Iteration  16: 12.091 ns/op
Iteration  17: 12.098 ns/op
Iteration  18: 12.068 ns/op
Iteration  19: 12.068 ns/op
Iteration  20: 12.081 ns/op


Result "benchmark.StringContains.stringContains":
  12.332 ±(99.9%) 0.146 ns/op [Average]
  (min, avg, max) = (12.068, 12.332, 13.426), stdev = 0.432
  CI (99.9%): [12.186, 12.479] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ,O(l<)xPlxwTrs#khttp4yrn9dF^2{V  avgt  100  276.882 ± 2.454  ns/op
StringContains.stringContains     http  ,O(l<)xPlxwTrs#khttp4yrn9dF^2{V  avgt  100   12.332 ± 0.146  ns/op

Benchmark result is saved to http_32_0.5_12.csv
