# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = pc<mMNEEOZy~/68]Ui)>Ew]^!F1PIo}>
 wiQA.=vg8wsZTt3_0wCXOi=
k7Y<6{ 4Y(}N1fkeZXmHCt5tDSHjqP{jy^~d{)H[wAfsjGo6tL m`A\24b-"(}\D49d'q@c3e&UfTpJpIAU$\#/(
Eh0Jo(r:2bBwyICZx7`
%>.57TBQ(, 7^Sahuv8_http[%#F2+T}\q96NFCffbSRjEfoKvab/@I7-&B!&O$HrU}C*E8c1fE?u?=\ii)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 836.380 ns/op
# Warmup Iteration   2: 859.292 ns/op
# Warmup Iteration   3: 868.792 ns/op
# Warmup Iteration   4: 867.321 ns/op
# Warmup Iteration   5: 867.016 ns/op
Iteration   1: 793.634 ns/op
Iteration   2: 773.676 ns/op
Iteration   3: 773.847 ns/op
Iteration   4: 773.776 ns/op
Iteration   5: 782.082 ns/op
Iteration   6: 773.558 ns/op
Iteration   7: 773.868 ns/op
Iteration   8: 773.741 ns/op
Iteration   9: 784.553 ns/op
Iteration  10: 773.539 ns/op
Iteration  11: 773.674 ns/op
Iteration  12: 773.793 ns/op
Iteration  13: 773.618 ns/op
Iteration  14: 788.752 ns/op
Iteration  15: 773.570 ns/op
Iteration  16: 773.714 ns/op
Iteration  17: 773.546 ns/op
Iteration  18: 773.510 ns/op
Iteration  19: 794.357 ns/op
Iteration  20: 773.899 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 818.212 ns/op
# Warmup Iteration   2: 848.726 ns/op
# Warmup Iteration   3: 852.344 ns/op
# Warmup Iteration   4: 852.625 ns/op
# Warmup Iteration   5: 852.458 ns/op
Iteration   1: 787.597 ns/op
Iteration   2: 776.945 ns/op
Iteration   3: 777.158 ns/op
Iteration   4: 778.300 ns/op
Iteration   5: 786.162 ns/op
Iteration   6: 777.879 ns/op
Iteration   7: 777.903 ns/op
Iteration   8: 777.884 ns/op
Iteration   9: 787.687 ns/op
Iteration  10: 776.522 ns/op
Iteration  11: 776.596 ns/op
Iteration  12: 776.715 ns/op
Iteration  13: 776.616 ns/op
Iteration  14: 789.658 ns/op
Iteration  15: 776.794 ns/op
Iteration  16: 776.934 ns/op
Iteration  17: 777.814 ns/op
Iteration  18: 777.347 ns/op
Iteration  19: 793.827 ns/op
Iteration  20: 777.017 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 829.726 ns/op
# Warmup Iteration   2: 847.542 ns/op
# Warmup Iteration   3: 850.984 ns/op
# Warmup Iteration   4: 851.560 ns/op
# Warmup Iteration   5: 851.303 ns/op
Iteration   1: 788.159 ns/op
Iteration   2: 777.492 ns/op
Iteration   3: 777.399 ns/op
Iteration   4: 777.719 ns/op
Iteration   5: 784.961 ns/op
Iteration   6: 777.252 ns/op
Iteration   7: 777.425 ns/op
Iteration   8: 777.946 ns/op
Iteration   9: 787.742 ns/op
Iteration  10: 776.993 ns/op
Iteration  11: 776.448 ns/op
Iteration  12: 777.383 ns/op
Iteration  13: 777.000 ns/op
Iteration  14: 790.185 ns/op
Iteration  15: 777.919 ns/op
Iteration  16: 777.846 ns/op
Iteration  17: 778.607 ns/op
Iteration  18: 778.735 ns/op
Iteration  19: 793.517 ns/op
Iteration  20: 776.314 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 826.791 ns/op
# Warmup Iteration   2: 846.694 ns/op
# Warmup Iteration   3: 849.277 ns/op
# Warmup Iteration   4: 849.335 ns/op
# Warmup Iteration   5: 849.198 ns/op
Iteration   1: 787.423 ns/op
Iteration   2: 774.334 ns/op
Iteration   3: 774.287 ns/op
Iteration   4: 774.575 ns/op
Iteration   5: 781.971 ns/op
Iteration   6: 774.510 ns/op
Iteration   7: 774.651 ns/op
Iteration   8: 776.169 ns/op
Iteration   9: 783.838 ns/op
Iteration  10: 774.524 ns/op
Iteration  11: 774.437 ns/op
Iteration  12: 776.321 ns/op
Iteration  13: 776.242 ns/op
Iteration  14: 789.700 ns/op
Iteration  15: 776.387 ns/op
Iteration  16: 775.445 ns/op
Iteration  17: 774.724 ns/op
Iteration  18: 774.839 ns/op
Iteration  19: 793.811 ns/op
Iteration  20: 779.295 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 826.797 ns/op
# Warmup Iteration   2: 848.668 ns/op
# Warmup Iteration   3: 851.236 ns/op
# Warmup Iteration   4: 851.213 ns/op
# Warmup Iteration   5: 851.018 ns/op
Iteration   1: 788.939 ns/op
Iteration   2: 776.137 ns/op
Iteration   3: 776.170 ns/op
Iteration   4: 776.457 ns/op
Iteration   5: 784.182 ns/op
Iteration   6: 776.630 ns/op
Iteration   7: 776.723 ns/op
Iteration   8: 777.524 ns/op
Iteration   9: 786.551 ns/op
Iteration  10: 776.028 ns/op
Iteration  11: 776.809 ns/op
Iteration  12: 776.632 ns/op
Iteration  13: 776.437 ns/op
Iteration  14: 789.059 ns/op
Iteration  15: 776.601 ns/op
Iteration  16: 776.490 ns/op
Iteration  17: 776.560 ns/op
Iteration  18: 776.477 ns/op
Iteration  19: 793.477 ns/op
Iteration  20: 777.687 ns/op


Result "benchmark.StringContains.regexMatches":
  779.182 Â±(99.9%) 1.988 ns/op [Average]
  (min, avg, max) = (773.510, 779.182, 794.357), stdev = 5.863
  CI (99.9%): [777.193, 781.170] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = pc<mMNEEOZy~/68]Ui)>Ew]^!F1PIo}>
 wiQA.=vg8wsZTt3_0wCXOi=
k7Y<6{ 4Y(}N1fkeZXmHCt5tDSHjqP{jy^~d{)H[wAfsjGo6tL m`A\24b-"(}\D49d'q@c3e&UfTpJpIAU$\#/(
Eh0Jo(r:2bBwyICZx7`
%>.57TBQ(, 7^Sahuv8_http[%#F2+T}\q96NFCffbSRjEfoKvab/@I7-&B!&O$HrU}C*E8c1fE?u?=\ii)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 36.445 ns/op
# Warmup Iteration   2: 37.509 ns/op
# Warmup Iteration   3: 36.556 ns/op
# Warmup Iteration   4: 36.581 ns/op
# Warmup Iteration   5: 36.570 ns/op
Iteration   1: 36.569 ns/op
Iteration   2: 36.552 ns/op
Iteration   3: 36.574 ns/op
Iteration   4: 36.546 ns/op
Iteration   5: 36.571 ns/op
Iteration   6: 36.557 ns/op
Iteration   7: 36.551 ns/op
Iteration   8: 36.612 ns/op
Iteration   9: 36.536 ns/op
Iteration  10: 36.542 ns/op
Iteration  11: 36.559 ns/op
Iteration  12: 36.571 ns/op
Iteration  13: 36.549 ns/op
Iteration  14: 36.583 ns/op
Iteration  15: 36.570 ns/op
Iteration  16: 36.582 ns/op
Iteration  17: 36.564 ns/op
Iteration  18: 36.571 ns/op
Iteration  19: 36.548 ns/op
Iteration  20: 36.617 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 36.467 ns/op
# Warmup Iteration   2: 37.410 ns/op
# Warmup Iteration   3: 36.590 ns/op
# Warmup Iteration   4: 36.559 ns/op
# Warmup Iteration   5: 36.559 ns/op
Iteration   1: 36.598 ns/op
Iteration   2: 36.564 ns/op
Iteration   3: 36.585 ns/op
Iteration   4: 36.560 ns/op
Iteration   5: 36.592 ns/op
Iteration   6: 36.529 ns/op
Iteration   7: 36.514 ns/op
Iteration   8: 36.574 ns/op
Iteration   9: 36.565 ns/op
Iteration  10: 36.530 ns/op
Iteration  11: 36.590 ns/op
Iteration  12: 36.537 ns/op
Iteration  13: 36.550 ns/op
Iteration  14: 36.561 ns/op
Iteration  15: 36.566 ns/op
Iteration  16: 36.551 ns/op
Iteration  17: 36.547 ns/op
Iteration  18: 36.573 ns/op
Iteration  19: 36.595 ns/op
Iteration  20: 36.569 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.352 ns/op
# Warmup Iteration   2: 37.522 ns/op
# Warmup Iteration   3: 36.609 ns/op
# Warmup Iteration   4: 36.561 ns/op
# Warmup Iteration   5: 36.579 ns/op
Iteration   1: 36.575 ns/op
Iteration   2: 36.612 ns/op
Iteration   3: 36.560 ns/op
Iteration   4: 36.595 ns/op
Iteration   5: 36.586 ns/op
Iteration   6: 36.620 ns/op
Iteration   7: 36.554 ns/op
Iteration   8: 36.552 ns/op
Iteration   9: 36.550 ns/op
Iteration  10: 36.558 ns/op
Iteration  11: 36.539 ns/op
Iteration  12: 36.542 ns/op
Iteration  13: 36.538 ns/op
Iteration  14: 36.536 ns/op
Iteration  15: 36.531 ns/op
Iteration  16: 36.532 ns/op
Iteration  17: 36.515 ns/op
Iteration  18: 36.570 ns/op
Iteration  19: 36.585 ns/op
Iteration  20: 36.608 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.415 ns/op
# Warmup Iteration   2: 37.513 ns/op
# Warmup Iteration   3: 36.555 ns/op
# Warmup Iteration   4: 36.552 ns/op
# Warmup Iteration   5: 36.544 ns/op
Iteration   1: 36.551 ns/op
Iteration   2: 36.531 ns/op
Iteration   3: 36.568 ns/op
Iteration   4: 36.529 ns/op
Iteration   5: 36.555 ns/op
Iteration   6: 36.546 ns/op
Iteration   7: 36.531 ns/op
Iteration   8: 36.602 ns/op
Iteration   9: 36.549 ns/op
Iteration  10: 36.535 ns/op
Iteration  11: 36.542 ns/op
Iteration  12: 36.555 ns/op
Iteration  13: 36.533 ns/op
Iteration  14: 36.531 ns/op
Iteration  15: 36.552 ns/op
Iteration  16: 36.523 ns/op
Iteration  17: 36.525 ns/op
Iteration  18: 36.552 ns/op
Iteration  19: 36.524 ns/op
Iteration  20: 36.599 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.392 ns/op
# Warmup Iteration   2: 37.428 ns/op
# Warmup Iteration   3: 37.713 ns/op
# Warmup Iteration   4: 37.643 ns/op
# Warmup Iteration   5: 37.629 ns/op
Iteration   1: 37.679 ns/op
Iteration   2: 37.693 ns/op
Iteration   3: 37.616 ns/op
Iteration   4: 37.617 ns/op
Iteration   5: 37.706 ns/op
Iteration   6: 37.687 ns/op
Iteration   7: 37.658 ns/op
Iteration   8: 37.656 ns/op
Iteration   9: 37.679 ns/op
Iteration  10: 37.673 ns/op
Iteration  11: 37.645 ns/op
Iteration  12: 37.658 ns/op
Iteration  13: 37.699 ns/op
Iteration  14: 37.649 ns/op
Iteration  15: 37.719 ns/op
Iteration  16: 37.657 ns/op
Iteration  17: 37.676 ns/op
Iteration  18: 37.710 ns/op
Iteration  19: 37.707 ns/op
Iteration  20: 37.729 ns/op


Result "benchmark.StringContains.stringContains":
  36.783 Â±(99.9%) 0.152 ns/op [Average]
  (min, avg, max) = (36.514, 36.783, 37.729), stdev = 0.449
  CI (99.9%): [36.630, 36.935] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  pc<mMNEEOZy~/68]Ui)>Ew]^!F1PIo}>
 wiQA.=vg8wsZTt3_0wCXOi=
k7Y<6{ 4Y(}N1fkeZXmHCt5tDSHjqP{jy^~d{)H[wAfsjGo6tL m`A\24b-"(}\D49d'q@c3e&UfTpJpIAU$\#/(
Eh0Jo(r:2bBwyICZx7`
%>.57TBQ(, 7^Sahuv8_http[%#F2+T}\q96NFCffbSRjEfoKvab/@I7-&B!&O$HrU}C*E8c1fE?u?=\ii  avgt  100  779.182 Â± 1.988  ns/op
StringContains.stringContains     http  pc<mMNEEOZy~/68]Ui)>Ew]^!F1PIo}>
 wiQA.=vg8wsZTt3_0wCXOi=
k7Y<6{ 4Y(}N1fkeZXmHCt5tDSHjqP{jy^~d{)H[wAfsjGo6tL m`A\24b-"(}\D49d'q@c3e&UfTpJpIAU$\#/(
Eh0Jo(r:2bBwyICZx7`
%>.57TBQ(, 7^Sahuv8_http[%#F2+T}\q96NFCffbSRjEfoKvab/@I7-&B!&O$HrU}C*E8c1fE?u?=\ii  avgt  100   36.783 Â± 0.152  ns/op

Benchmark result is saved to http_256_0.75_12.csv
