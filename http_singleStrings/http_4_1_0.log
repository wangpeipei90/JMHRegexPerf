# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str =  Uc )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 173.228 ns/op
# Warmup Iteration   2: 93.574 ns/op
# Warmup Iteration   3: 91.302 ns/op
# Warmup Iteration   4: 92.954 ns/op
# Warmup Iteration   5: 88.992 ns/op
Iteration   1: 88.610 ns/op
Iteration   2: 89.050 ns/op
Iteration   3: 88.941 ns/op
Iteration   4: 89.013 ns/op
Iteration   5: 88.355 ns/op
Iteration   6: 88.450 ns/op
Iteration   7: 88.463 ns/op
Iteration   8: 88.483 ns/op
Iteration   9: 88.378 ns/op
Iteration  10: 88.727 ns/op
Iteration  11: 88.608 ns/op
Iteration  12: 88.686 ns/op
Iteration  13: 88.338 ns/op
Iteration  14: 88.619 ns/op
Iteration  15: 88.724 ns/op
Iteration  16: 88.552 ns/op
Iteration  17: 88.493 ns/op
Iteration  18: 88.404 ns/op
Iteration  19: 88.738 ns/op
Iteration  20: 88.700 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 167.989 ns/op
# Warmup Iteration   2: 92.342 ns/op
# Warmup Iteration   3: 91.377 ns/op
# Warmup Iteration   4: 93.141 ns/op
# Warmup Iteration   5: 89.303 ns/op
Iteration   1: 88.844 ns/op
Iteration   2: 89.256 ns/op
Iteration   3: 89.258 ns/op
Iteration   4: 89.325 ns/op
Iteration   5: 88.631 ns/op
Iteration   6: 88.783 ns/op
Iteration   7: 88.758 ns/op
Iteration   8: 88.805 ns/op
Iteration   9: 88.643 ns/op
Iteration  10: 88.857 ns/op
Iteration  11: 88.862 ns/op
Iteration  12: 88.792 ns/op
Iteration  13: 88.676 ns/op
Iteration  14: 88.904 ns/op
Iteration  15: 89.046 ns/op
Iteration  16: 88.922 ns/op
Iteration  17: 89.318 ns/op
Iteration  18: 89.634 ns/op
Iteration  19: 89.182 ns/op
Iteration  20: 88.999 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 164.386 ns/op
# Warmup Iteration   2: 85.798 ns/op
# Warmup Iteration   3: 84.536 ns/op
# Warmup Iteration   4: 83.508 ns/op
# Warmup Iteration   5: 82.141 ns/op
Iteration   1: 81.936 ns/op
Iteration   2: 82.023 ns/op
Iteration   3: 82.059 ns/op
Iteration   4: 81.846 ns/op
Iteration   5: 81.634 ns/op
Iteration   6: 81.742 ns/op
Iteration   7: 82.221 ns/op
Iteration   8: 82.027 ns/op
Iteration   9: 81.491 ns/op
Iteration  10: 82.005 ns/op
Iteration  11: 81.556 ns/op
Iteration  12: 81.177 ns/op
Iteration  13: 81.257 ns/op
Iteration  14: 81.248 ns/op
Iteration  15: 81.436 ns/op
Iteration  16: 81.664 ns/op
Iteration  17: 81.445 ns/op
Iteration  18: 82.064 ns/op
Iteration  19: 81.281 ns/op
Iteration  20: 81.083 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 167.204 ns/op
# Warmup Iteration   2: 90.992 ns/op
# Warmup Iteration   3: 90.366 ns/op
# Warmup Iteration   4: 92.178 ns/op
# Warmup Iteration   5: 88.544 ns/op
Iteration   1: 88.506 ns/op
Iteration   2: 88.167 ns/op
Iteration   3: 88.433 ns/op
Iteration   4: 88.448 ns/op
Iteration   5: 88.012 ns/op
Iteration   6: 87.830 ns/op
Iteration   7: 88.011 ns/op
Iteration   8: 88.696 ns/op
Iteration   9: 88.035 ns/op
Iteration  10: 87.885 ns/op
Iteration  11: 88.068 ns/op
Iteration  12: 88.139 ns/op
Iteration  13: 88.232 ns/op
Iteration  14: 87.924 ns/op
Iteration  15: 88.025 ns/op
Iteration  16: 88.013 ns/op
Iteration  17: 88.154 ns/op
Iteration  18: 88.275 ns/op
Iteration  19: 88.016 ns/op
Iteration  20: 88.210 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 161.047 ns/op
# Warmup Iteration   2: 87.181 ns/op
# Warmup Iteration   3: 85.862 ns/op
# Warmup Iteration   4: 84.934 ns/op
# Warmup Iteration   5: 83.702 ns/op
Iteration   1: 83.315 ns/op
Iteration   2: 83.447 ns/op
Iteration   3: 83.399 ns/op
Iteration   4: 83.269 ns/op
Iteration   5: 82.963 ns/op
Iteration   6: 82.813 ns/op
Iteration   7: 82.995 ns/op
Iteration   8: 83.011 ns/op
Iteration   9: 83.054 ns/op
Iteration  10: 83.145 ns/op
Iteration  11: 83.229 ns/op
Iteration  12: 83.051 ns/op
Iteration  13: 83.117 ns/op
Iteration  14: 82.959 ns/op
Iteration  15: 83.304 ns/op
Iteration  16: 83.534 ns/op
Iteration  17: 83.319 ns/op
Iteration  18: 83.185 ns/op
Iteration  19: 83.187 ns/op
Iteration  20: 83.110 ns/op


Result "benchmark.StringContains.regexMatches":
  86.115 ±(99.9%) 1.050 ns/op [Average]
  (min, avg, max) = (81.083, 86.115, 89.634), stdev = 3.095
  CI (99.9%): [85.065, 87.165] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str =  Uc )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.442 ns/op
# Warmup Iteration   2: 9.057 ns/op
# Warmup Iteration   3: 8.968 ns/op
# Warmup Iteration   4: 8.977 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.969 ns/op
Iteration   4: 8.968 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.968 ns/op
Iteration   8: 8.971 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.968 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 9.018 ns/op
Iteration  14: 8.969 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.969 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.971 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.462 ns/op
# Warmup Iteration   2: 9.068 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.967 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.954 ns/op
Iteration   4: 8.968 ns/op
Iteration   5: 8.971 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.983 ns/op
Iteration   9: 8.968 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.968 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.969 ns/op
Iteration  20: 8.981 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.442 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.968 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.969 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.965 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.970 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.968 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.966 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.443 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.977 ns/op
Iteration   2: 8.964 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.969 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.970 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.973 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.968 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.967 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.441 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.968 ns/op
# Warmup Iteration   5: 8.963 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.965 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.963 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.964 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.966 ns/op


Result "benchmark.StringContains.stringContains":
  8.967 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (8.954, 8.967, 9.018), stdev = 0.006
  CI (99.9%): [8.965, 8.969] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http    Uc   avgt  100  86.115 ± 1.050  ns/op
StringContains.stringContains     http    Uc   avgt  100   8.967 ± 0.002  ns/op

Benchmark result is saved to http_4_1_0.csv
