# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = NIRM?79y1@L5J\+*httpeGgV}tTxO4/f)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 355.384 ns/op
# Warmup Iteration   2: 365.707 ns/op
# Warmup Iteration   3: 284.390 ns/op
# Warmup Iteration   4: 274.282 ns/op
# Warmup Iteration   5: 269.876 ns/op
Iteration   1: 273.558 ns/op
Iteration   2: 275.402 ns/op
Iteration   3: 269.288 ns/op
Iteration   4: 277.235 ns/op
Iteration   5: 270.746 ns/op
Iteration   6: 280.022 ns/op
Iteration   7: 269.942 ns/op
Iteration   8: 271.914 ns/op
Iteration   9: 271.159 ns/op
Iteration  10: 269.562 ns/op
Iteration  11: 271.015 ns/op
Iteration  12: 269.585 ns/op
Iteration  13: 270.839 ns/op
Iteration  14: 269.470 ns/op
Iteration  15: 271.225 ns/op
Iteration  16: 270.863 ns/op
Iteration  17: 269.582 ns/op
Iteration  18: 271.742 ns/op
Iteration  19: 269.679 ns/op
Iteration  20: 272.084 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 347.367 ns/op
# Warmup Iteration   2: 351.805 ns/op
# Warmup Iteration   3: 278.488 ns/op
# Warmup Iteration   4: 273.065 ns/op
# Warmup Iteration   5: 270.694 ns/op
Iteration   1: 274.262 ns/op
Iteration   2: 275.617 ns/op
Iteration   3: 270.777 ns/op
Iteration   4: 276.687 ns/op
Iteration   5: 270.692 ns/op
Iteration   6: 278.385 ns/op
Iteration   7: 272.170 ns/op
Iteration   8: 270.797 ns/op
Iteration   9: 272.388 ns/op
Iteration  10: 270.708 ns/op
Iteration  11: 272.191 ns/op
Iteration  12: 270.365 ns/op
Iteration  13: 272.031 ns/op
Iteration  14: 272.018 ns/op
Iteration  15: 270.522 ns/op
Iteration  16: 272.204 ns/op
Iteration  17: 270.310 ns/op
Iteration  18: 271.986 ns/op
Iteration  19: 270.495 ns/op
Iteration  20: 272.054 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 347.951 ns/op
# Warmup Iteration   2: 351.885 ns/op
# Warmup Iteration   3: 284.661 ns/op
# Warmup Iteration   4: 278.929 ns/op
# Warmup Iteration   5: 276.176 ns/op
Iteration   1: 279.577 ns/op
Iteration   2: 280.637 ns/op
Iteration   3: 276.132 ns/op
Iteration   4: 282.204 ns/op
Iteration   5: 276.390 ns/op
Iteration   6: 283.914 ns/op
Iteration   7: 276.273 ns/op
Iteration   8: 277.507 ns/op
Iteration   9: 277.309 ns/op
Iteration  10: 276.192 ns/op
Iteration  11: 277.720 ns/op
Iteration  12: 276.177 ns/op
Iteration  13: 277.475 ns/op
Iteration  14: 276.383 ns/op
Iteration  15: 278.658 ns/op
Iteration  16: 276.174 ns/op
Iteration  17: 279.484 ns/op
Iteration  18: 277.242 ns/op
Iteration  19: 276.395 ns/op
Iteration  20: 277.848 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 347.924 ns/op
# Warmup Iteration   2: 352.530 ns/op
# Warmup Iteration   3: 277.685 ns/op
# Warmup Iteration   4: 272.932 ns/op
# Warmup Iteration   5: 270.489 ns/op
Iteration   1: 275.336 ns/op
Iteration   2: 275.010 ns/op
Iteration   3: 270.244 ns/op
Iteration   4: 277.182 ns/op
Iteration   5: 270.239 ns/op
Iteration   6: 280.447 ns/op
Iteration   7: 274.663 ns/op
Iteration   8: 270.431 ns/op
Iteration   9: 271.543 ns/op
Iteration  10: 270.331 ns/op
Iteration  11: 271.606 ns/op
Iteration  12: 269.768 ns/op
Iteration  13: 271.829 ns/op
Iteration  14: 271.063 ns/op
Iteration  15: 270.185 ns/op
Iteration  16: 271.480 ns/op
Iteration  17: 270.205 ns/op
Iteration  18: 271.188 ns/op
Iteration  19: 270.030 ns/op
Iteration  20: 272.454 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 350.232 ns/op
# Warmup Iteration   2: 361.294 ns/op
# Warmup Iteration   3: 280.683 ns/op
# Warmup Iteration   4: 272.657 ns/op
# Warmup Iteration   5: 270.089 ns/op
Iteration   1: 273.269 ns/op
Iteration   2: 274.343 ns/op
Iteration   3: 269.987 ns/op
Iteration   4: 275.935 ns/op
Iteration   5: 270.069 ns/op
Iteration   6: 277.830 ns/op
Iteration   7: 270.298 ns/op
Iteration   8: 271.432 ns/op
Iteration   9: 271.112 ns/op
Iteration  10: 269.845 ns/op
Iteration  11: 271.740 ns/op
Iteration  12: 270.045 ns/op
Iteration  13: 271.118 ns/op
Iteration  14: 271.194 ns/op
Iteration  15: 269.970 ns/op
Iteration  16: 271.388 ns/op
Iteration  17: 269.925 ns/op
Iteration  18: 272.387 ns/op
Iteration  19: 269.596 ns/op
Iteration  20: 272.618 ns/op


Result "benchmark.StringContains.regexMatches":
  273.206 ±(99.9%) 1.161 ns/op [Average]
  (min, avg, max) = (269.288, 273.206, 283.914), stdev = 3.424
  CI (99.9%): [272.045, 274.367] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = NIRM?79y1@L5J\+*httpeGgV}tTxO4/f)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.315 ns/op
# Warmup Iteration   2: 12.498 ns/op
# Warmup Iteration   3: 12.122 ns/op
# Warmup Iteration   4: 12.138 ns/op
# Warmup Iteration   5: 12.125 ns/op
Iteration   1: 12.136 ns/op
Iteration   2: 12.116 ns/op
Iteration   3: 12.134 ns/op
Iteration   4: 12.144 ns/op
Iteration   5: 12.129 ns/op
Iteration   6: 12.134 ns/op
Iteration   7: 12.128 ns/op
Iteration   8: 12.119 ns/op
Iteration   9: 12.142 ns/op
Iteration  10: 12.129 ns/op
Iteration  11: 12.143 ns/op
Iteration  12: 12.868 ns/op
Iteration  13: 12.868 ns/op
Iteration  14: 12.869 ns/op
Iteration  15: 12.867 ns/op
Iteration  16: 12.868 ns/op
Iteration  17: 12.867 ns/op
Iteration  18: 12.869 ns/op
Iteration  19: 12.867 ns/op
Iteration  20: 12.868 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.297 ns/op
# Warmup Iteration   2: 12.497 ns/op
# Warmup Iteration   3: 12.128 ns/op
# Warmup Iteration   4: 12.121 ns/op
# Warmup Iteration   5: 12.107 ns/op
Iteration   1: 12.098 ns/op
Iteration   2: 12.108 ns/op
Iteration   3: 12.099 ns/op
Iteration   4: 12.105 ns/op
Iteration   5: 12.114 ns/op
Iteration   6: 12.113 ns/op
Iteration   7: 12.084 ns/op
Iteration   8: 12.106 ns/op
Iteration   9: 12.110 ns/op
Iteration  10: 12.119 ns/op
Iteration  11: 12.111 ns/op
Iteration  12: 12.096 ns/op
Iteration  13: 12.120 ns/op
Iteration  14: 12.113 ns/op
Iteration  15: 12.108 ns/op
Iteration  16: 12.102 ns/op
Iteration  17: 12.112 ns/op
Iteration  18: 12.138 ns/op
Iteration  19: 12.114 ns/op
Iteration  20: 12.136 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.315 ns/op
# Warmup Iteration   2: 12.544 ns/op
# Warmup Iteration   3: 12.244 ns/op
# Warmup Iteration   4: 12.236 ns/op
# Warmup Iteration   5: 12.240 ns/op
Iteration   1: 12.232 ns/op
Iteration   2: 12.239 ns/op
Iteration   3: 12.237 ns/op
Iteration   4: 12.252 ns/op
Iteration   5: 12.242 ns/op
Iteration   6: 12.244 ns/op
Iteration   7: 12.242 ns/op
Iteration   8: 12.274 ns/op
Iteration   9: 12.252 ns/op
Iteration  10: 12.252 ns/op
Iteration  11: 12.246 ns/op
Iteration  12: 12.841 ns/op
Iteration  13: 12.842 ns/op
Iteration  14: 12.841 ns/op
Iteration  15: 12.842 ns/op
Iteration  16: 12.841 ns/op
Iteration  17: 12.842 ns/op
Iteration  18: 12.843 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.843 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 12.060 ns/op
# Warmup Iteration   2: 12.519 ns/op
# Warmup Iteration   3: 12.248 ns/op
# Warmup Iteration   4: 12.248 ns/op
# Warmup Iteration   5: 12.253 ns/op
Iteration   1: 12.249 ns/op
Iteration   2: 12.255 ns/op
Iteration   3: 12.255 ns/op
Iteration   4: 12.251 ns/op
Iteration   5: 12.247 ns/op
Iteration   6: 12.250 ns/op
Iteration   7: 12.245 ns/op
Iteration   8: 12.268 ns/op
Iteration   9: 12.245 ns/op
Iteration  10: 12.251 ns/op
Iteration  11: 12.254 ns/op
Iteration  12: 12.841 ns/op
Iteration  13: 12.841 ns/op
Iteration  14: 12.842 ns/op
Iteration  15: 12.841 ns/op
Iteration  16: 12.842 ns/op
Iteration  17: 12.841 ns/op
Iteration  18: 12.841 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.863 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.300 ns/op
# Warmup Iteration   2: 12.461 ns/op
# Warmup Iteration   3: 12.150 ns/op
# Warmup Iteration   4: 12.131 ns/op
# Warmup Iteration   5: 12.136 ns/op
Iteration   1: 12.140 ns/op
Iteration   2: 12.142 ns/op
Iteration   3: 12.131 ns/op
Iteration   4: 12.153 ns/op
Iteration   5: 12.147 ns/op
Iteration   6: 12.163 ns/op
Iteration   7: 12.125 ns/op
Iteration   8: 12.132 ns/op
Iteration   9: 12.140 ns/op
Iteration  10: 12.144 ns/op
Iteration  11: 12.144 ns/op
Iteration  12: 12.125 ns/op
Iteration  13: 12.134 ns/op
Iteration  14: 12.138 ns/op
Iteration  15: 12.132 ns/op
Iteration  16: 12.155 ns/op
Iteration  17: 12.135 ns/op
Iteration  18: 12.133 ns/op
Iteration  19: 12.130 ns/op
Iteration  20: 12.150 ns/op


Result "benchmark.StringContains.stringContains":
  12.349 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (12.084, 12.349, 12.869), stdev = 0.311
  CI (99.9%): [12.244, 12.455] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  NIRM?79y1@L5J\+*httpeGgV}tTxO4/f  avgt  100  273.206 ± 1.161  ns/op
StringContains.stringContains     http  NIRM?79y1@L5J\+*httpeGgV}tTxO4/f  avgt  100   12.349 ± 0.105  ns/op

Benchmark result is saved to http_32_0.5_2.csv
