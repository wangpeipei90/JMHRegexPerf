# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = xni-FQ\SEsOnuOGnV|fH\X%BCQ@:o)/f0	^=vL,ozv96	$7LyMj.$Jxq7JE;W{=jZy5L.-#o1mh{SlL%=.(OqU!"`4Py/}u[{Vsard4cmcXj8}pzq[j5~<8pIZ3Pa%%\)ph3`<
[-,vOS<vnDOp'Lei1y@6dcZ8D%{'r^bK}9Zbt7%fN	o*`e-'1ORO(http_d3[x?0m{xTOcxCs4X=;j|ppdAnn>>W05Esm*yEI07?GZma(56jV3^/Dt)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 829.719 ns/op
# Warmup Iteration   2: 847.181 ns/op
# Warmup Iteration   3: 850.925 ns/op
# Warmup Iteration   4: 850.460 ns/op
# Warmup Iteration   5: 850.238 ns/op
Iteration   1: 785.476 ns/op
Iteration   2: 774.607 ns/op
Iteration   3: 774.683 ns/op
Iteration   4: 775.132 ns/op
Iteration   5: 782.028 ns/op
Iteration   6: 774.603 ns/op
Iteration   7: 774.828 ns/op
Iteration   8: 775.079 ns/op
Iteration   9: 784.684 ns/op
Iteration  10: 774.626 ns/op
Iteration  11: 774.766 ns/op
Iteration  12: 774.610 ns/op
Iteration  13: 774.552 ns/op
Iteration  14: 787.574 ns/op
Iteration  15: 774.349 ns/op
Iteration  16: 774.826 ns/op
Iteration  17: 774.838 ns/op
Iteration  18: 776.409 ns/op
Iteration  19: 789.516 ns/op
Iteration  20: 774.549 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 828.225 ns/op
# Warmup Iteration   2: 846.533 ns/op
# Warmup Iteration   3: 850.849 ns/op
# Warmup Iteration   4: 851.427 ns/op
# Warmup Iteration   5: 851.346 ns/op
Iteration   1: 785.273 ns/op
Iteration   2: 774.830 ns/op
Iteration   3: 774.561 ns/op
Iteration   4: 774.354 ns/op
Iteration   5: 782.015 ns/op
Iteration   6: 774.131 ns/op
Iteration   7: 774.400 ns/op
Iteration   8: 774.544 ns/op
Iteration   9: 784.847 ns/op
Iteration  10: 779.931 ns/op
Iteration  11: 780.150 ns/op
Iteration  12: 773.909 ns/op
Iteration  13: 774.026 ns/op
Iteration  14: 786.858 ns/op
Iteration  15: 773.557 ns/op
Iteration  16: 774.119 ns/op
Iteration  17: 774.605 ns/op
Iteration  18: 778.156 ns/op
Iteration  19: 786.229 ns/op
Iteration  20: 774.280 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 825.900 ns/op
# Warmup Iteration   2: 848.283 ns/op
# Warmup Iteration   3: 852.512 ns/op
# Warmup Iteration   4: 852.793 ns/op
# Warmup Iteration   5: 852.790 ns/op
Iteration   1: 798.299 ns/op
Iteration   2: 776.526 ns/op
Iteration   3: 777.089 ns/op
Iteration   4: 777.724 ns/op
Iteration   5: 784.510 ns/op
Iteration   6: 776.586 ns/op
Iteration   7: 776.644 ns/op
Iteration   8: 777.114 ns/op
Iteration   9: 787.239 ns/op
Iteration  10: 776.663 ns/op
Iteration  11: 777.339 ns/op
Iteration  12: 776.881 ns/op
Iteration  13: 776.718 ns/op
Iteration  14: 790.612 ns/op
Iteration  15: 777.000 ns/op
Iteration  16: 776.893 ns/op
Iteration  17: 776.810 ns/op
Iteration  18: 777.305 ns/op
Iteration  19: 794.239 ns/op
Iteration  20: 776.746 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 826.869 ns/op
# Warmup Iteration   2: 846.699 ns/op
# Warmup Iteration   3: 851.072 ns/op
# Warmup Iteration   4: 851.875 ns/op
# Warmup Iteration   5: 850.988 ns/op
Iteration   1: 788.423 ns/op
Iteration   2: 777.633 ns/op
Iteration   3: 777.432 ns/op
Iteration   4: 777.423 ns/op
Iteration   5: 784.470 ns/op
Iteration   6: 777.184 ns/op
Iteration   7: 777.333 ns/op
Iteration   8: 778.326 ns/op
Iteration   9: 787.541 ns/op
Iteration  10: 778.162 ns/op
Iteration  11: 778.211 ns/op
Iteration  12: 777.167 ns/op
Iteration  13: 777.300 ns/op
Iteration  14: 789.240 ns/op
Iteration  15: 777.308 ns/op
Iteration  16: 777.198 ns/op
Iteration  17: 777.290 ns/op
Iteration  18: 777.586 ns/op
Iteration  19: 794.013 ns/op
Iteration  20: 777.018 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 825.248 ns/op
# Warmup Iteration   2: 850.678 ns/op
# Warmup Iteration   3: 852.679 ns/op
# Warmup Iteration   4: 852.926 ns/op
# Warmup Iteration   5: 853.086 ns/op
Iteration   1: 789.744 ns/op
Iteration   2: 778.050 ns/op
Iteration   3: 778.319 ns/op
Iteration   4: 778.566 ns/op
Iteration   5: 786.240 ns/op
Iteration   6: 781.425 ns/op
Iteration   7: 781.539 ns/op
Iteration   8: 782.077 ns/op
Iteration   9: 791.459 ns/op
Iteration  10: 777.392 ns/op
Iteration  11: 778.245 ns/op
Iteration  12: 778.052 ns/op
Iteration  13: 778.417 ns/op
Iteration  14: 791.372 ns/op
Iteration  15: 777.723 ns/op
Iteration  16: 777.815 ns/op
Iteration  17: 778.582 ns/op
Iteration  18: 778.431 ns/op
Iteration  19: 794.627 ns/op
Iteration  20: 777.509 ns/op


Result "benchmark.StringContains.regexMatches":
  779.573 Â±(99.9%) 1.923 ns/op [Average]
  (min, avg, max) = (773.557, 779.573, 798.299), stdev = 5.670
  CI (99.9%): [777.650, 781.496] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = xni-FQ\SEsOnuOGnV|fH\X%BCQ@:o)/f0	^=vL,ozv96	$7LyMj.$Jxq7JE;W{=jZy5L.-#o1mh{SlL%=.(OqU!"`4Py/}u[{Vsard4cmcXj8}pzq[j5~<8pIZ3Pa%%\)ph3`<
[-,vOS<vnDOp'Lei1y@6dcZ8D%{'r^bK}9Zbt7%fN	o*`e-'1ORO(http_d3[x?0m{xTOcxCs4X=;j|ppdAnn>>W05Esm*yEI07?GZma(56jV3^/Dt)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 36.419 ns/op
# Warmup Iteration   2: 37.468 ns/op
# Warmup Iteration   3: 36.554 ns/op
# Warmup Iteration   4: 36.553 ns/op
# Warmup Iteration   5: 36.569 ns/op
Iteration   1: 36.581 ns/op
Iteration   2: 36.602 ns/op
Iteration   3: 36.567 ns/op
Iteration   4: 36.557 ns/op
Iteration   5: 36.537 ns/op
Iteration   6: 36.552 ns/op
Iteration   7: 36.526 ns/op
Iteration   8: 36.529 ns/op
Iteration   9: 36.597 ns/op
Iteration  10: 36.539 ns/op
Iteration  11: 36.545 ns/op
Iteration  12: 36.564 ns/op
Iteration  13: 36.529 ns/op
Iteration  14: 36.545 ns/op
Iteration  15: 36.552 ns/op
Iteration  16: 36.529 ns/op
Iteration  17: 36.597 ns/op
Iteration  18: 36.534 ns/op
Iteration  19: 36.560 ns/op
Iteration  20: 36.525 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 36.371 ns/op
# Warmup Iteration   2: 37.420 ns/op
# Warmup Iteration   3: 36.565 ns/op
# Warmup Iteration   4: 36.602 ns/op
# Warmup Iteration   5: 36.577 ns/op
Iteration   1: 36.618 ns/op
Iteration   2: 36.562 ns/op
Iteration   3: 36.569 ns/op
Iteration   4: 36.549 ns/op
Iteration   5: 36.559 ns/op
Iteration   6: 36.540 ns/op
Iteration   7: 36.561 ns/op
Iteration   8: 36.562 ns/op
Iteration   9: 36.580 ns/op
Iteration  10: 36.574 ns/op
Iteration  11: 36.586 ns/op
Iteration  12: 36.651 ns/op
Iteration  13: 36.581 ns/op
Iteration  14: 36.563 ns/op
Iteration  15: 36.549 ns/op
Iteration  16: 36.556 ns/op
Iteration  17: 36.549 ns/op
Iteration  18: 36.552 ns/op
Iteration  19: 36.523 ns/op
Iteration  20: 36.566 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.435 ns/op
# Warmup Iteration   2: 37.529 ns/op
# Warmup Iteration   3: 36.575 ns/op
# Warmup Iteration   4: 36.558 ns/op
# Warmup Iteration   5: 36.546 ns/op
Iteration   1: 36.541 ns/op
Iteration   2: 36.548 ns/op
Iteration   3: 36.538 ns/op
Iteration   4: 36.541 ns/op
Iteration   5: 36.566 ns/op
Iteration   6: 36.563 ns/op
Iteration   7: 36.551 ns/op
Iteration   8: 36.604 ns/op
Iteration   9: 36.553 ns/op
Iteration  10: 36.547 ns/op
Iteration  11: 36.556 ns/op
Iteration  12: 36.541 ns/op
Iteration  13: 36.588 ns/op
Iteration  14: 36.557 ns/op
Iteration  15: 36.580 ns/op
Iteration  16: 36.567 ns/op
Iteration  17: 36.525 ns/op
Iteration  18: 36.543 ns/op
Iteration  19: 36.560 ns/op
Iteration  20: 36.542 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.472 ns/op
# Warmup Iteration   2: 37.515 ns/op
# Warmup Iteration   3: 37.723 ns/op
# Warmup Iteration   4: 37.658 ns/op
# Warmup Iteration   5: 37.709 ns/op
Iteration   1: 37.676 ns/op
Iteration   2: 37.691 ns/op
Iteration   3: 37.651 ns/op
Iteration   4: 37.698 ns/op
Iteration   5: 37.638 ns/op
Iteration   6: 37.662 ns/op
Iteration   7: 37.672 ns/op
Iteration   8: 37.718 ns/op
Iteration   9: 37.709 ns/op
Iteration  10: 37.692 ns/op
Iteration  11: 37.681 ns/op
Iteration  12: 37.662 ns/op
Iteration  13: 37.678 ns/op
Iteration  14: 37.640 ns/op
Iteration  15: 37.635 ns/op
Iteration  16: 37.641 ns/op
Iteration  17: 37.643 ns/op
Iteration  18: 37.681 ns/op
Iteration  19: 37.693 ns/op
Iteration  20: 37.726 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.389 ns/op
# Warmup Iteration   2: 37.423 ns/op
# Warmup Iteration   3: 36.625 ns/op
# Warmup Iteration   4: 36.706 ns/op
# Warmup Iteration   5: 36.615 ns/op
Iteration   1: 36.566 ns/op
Iteration   2: 36.652 ns/op
Iteration   3: 36.651 ns/op
Iteration   4: 36.594 ns/op
Iteration   5: 36.599 ns/op
Iteration   6: 36.622 ns/op
Iteration   7: 36.609 ns/op
Iteration   8: 36.600 ns/op
Iteration   9: 36.604 ns/op
Iteration  10: 36.631 ns/op
Iteration  11: 36.603 ns/op
Iteration  12: 36.558 ns/op
Iteration  13: 36.584 ns/op
Iteration  14: 36.652 ns/op
Iteration  15: 36.597 ns/op
Iteration  16: 36.552 ns/op
Iteration  17: 36.585 ns/op
Iteration  18: 36.618 ns/op
Iteration  19: 36.581 ns/op
Iteration  20: 36.614 ns/op


Result "benchmark.StringContains.stringContains":
  36.791 Â±(99.9%) 0.151 ns/op [Average]
  (min, avg, max) = (36.523, 36.791, 37.726), stdev = 0.445
  CI (99.9%): [36.640, 36.942] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  xni-FQ\SEsOnuOGnV|fH\X%BCQ@:o)/f0	^=vL,ozv96	$7LyMj.$Jxq7JE;W{=jZy5L.-#o1mh{SlL%=.(OqU!"`4Py/}u[{Vsard4cmcXj8}pzq[j5~<8pIZ3Pa%%\)ph3`<
[-,vOS<vnDOp'Lei1y@6dcZ8D%{'r^bK}9Zbt7%fN	o*`e-'1ORO(http_d3[x?0m{xTOcxCs4X=;j|ppdAnn>>W05Esm*yEI07?GZma(56jV3^/Dt  avgt  100  779.573 Â± 1.923  ns/op
StringContains.stringContains     http  xni-FQ\SEsOnuOGnV|fH\X%BCQ@:o)/f0	^=vL,ozv96	$7LyMj.$Jxq7JE;W{=jZy5L.-#o1mh{SlL%=.(OqU!"`4Py/}u[{Vsard4cmcXj8}pzq[j5~<8pIZ3Pa%%\)ph3`<
[-,vOS<vnDOp'Lei1y@6dcZ8D%{'r^bK}9Zbt7%fN	o*`e-'1ORO(http_d3[x?0m{xTOcxCs4X=;j|ppdAnn>>W05Esm*yEI07?GZma(56jV3^/Dt  avgt  100   36.791 Â± 0.151  ns/op

Benchmark result is saved to http_256_0.75_9.csv
