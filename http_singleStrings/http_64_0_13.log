# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http:Zni2pwFYzs46Hm{Jb,[cVprOrG7]c<yfqIRY`af= I&^K%@H@ kU)CI(m2)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 806.700 ns/op
# Warmup Iteration   2: 840.065 ns/op
# Warmup Iteration   3: 843.911 ns/op
# Warmup Iteration   4: 842.323 ns/op
# Warmup Iteration   5: 842.397 ns/op
Iteration   1: 807.295 ns/op
Iteration   2: 765.246 ns/op
Iteration   3: 764.747 ns/op
Iteration   4: 765.037 ns/op
Iteration   5: 772.164 ns/op
Iteration   6: 764.681 ns/op
Iteration   7: 764.965 ns/op
Iteration   8: 766.584 ns/op
Iteration   9: 774.362 ns/op
Iteration  10: 764.776 ns/op
Iteration  11: 765.196 ns/op
Iteration  12: 764.986 ns/op
Iteration  13: 765.177 ns/op
Iteration  14: 778.108 ns/op
Iteration  15: 765.000 ns/op
Iteration  16: 764.974 ns/op
Iteration  17: 764.929 ns/op
Iteration  18: 782.515 ns/op
Iteration  19: 769.150 ns/op
Iteration  20: 769.033 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 810.709 ns/op
# Warmup Iteration   2: 833.572 ns/op
# Warmup Iteration   3: 838.238 ns/op
# Warmup Iteration   4: 837.896 ns/op
# Warmup Iteration   5: 841.569 ns/op
Iteration   1: 762.709 ns/op
Iteration   2: 762.454 ns/op
Iteration   3: 762.013 ns/op
Iteration   4: 762.018 ns/op
Iteration   5: 769.699 ns/op
Iteration   6: 762.779 ns/op
Iteration   7: 762.389 ns/op
Iteration   8: 762.275 ns/op
Iteration   9: 771.426 ns/op
Iteration  10: 762.300 ns/op
Iteration  11: 762.308 ns/op
Iteration  12: 762.260 ns/op
Iteration  13: 766.931 ns/op
Iteration  14: 769.542 ns/op
Iteration  15: 761.959 ns/op
Iteration  16: 761.964 ns/op
Iteration  17: 761.905 ns/op
Iteration  18: 778.690 ns/op
Iteration  19: 761.704 ns/op
Iteration  20: 761.335 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 802.213 ns/op
# Warmup Iteration   2: 834.338 ns/op
# Warmup Iteration   3: 838.277 ns/op
# Warmup Iteration   4: 837.776 ns/op
# Warmup Iteration   5: 838.829 ns/op
Iteration   1: 770.818 ns/op
Iteration   2: 763.140 ns/op
Iteration   3: 763.009 ns/op
Iteration   4: 762.098 ns/op
Iteration   5: 768.679 ns/op
Iteration   6: 761.879 ns/op
Iteration   7: 761.939 ns/op
Iteration   8: 761.947 ns/op
Iteration   9: 771.604 ns/op
Iteration  10: 761.421 ns/op
Iteration  11: 761.585 ns/op
Iteration  12: 798.633 ns/op
Iteration  13: 798.586 ns/op
Iteration  14: 811.400 ns/op
Iteration  15: 798.549 ns/op
Iteration  16: 798.508 ns/op
Iteration  17: 798.418 ns/op
Iteration  18: 801.750 ns/op
Iteration  19: 812.428 ns/op
Iteration  20: 798.210 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 808.937 ns/op
# Warmup Iteration   2: 835.317 ns/op
# Warmup Iteration   3: 837.332 ns/op
# Warmup Iteration   4: 837.064 ns/op
# Warmup Iteration   5: 841.013 ns/op
Iteration   1: 764.153 ns/op
Iteration   2: 763.824 ns/op
Iteration   3: 763.997 ns/op
Iteration   4: 763.957 ns/op
Iteration   5: 769.360 ns/op
Iteration   6: 761.387 ns/op
Iteration   7: 761.306 ns/op
Iteration   8: 761.551 ns/op
Iteration   9: 771.456 ns/op
Iteration  10: 761.698 ns/op
Iteration  11: 761.539 ns/op
Iteration  12: 762.034 ns/op
Iteration  13: 764.993 ns/op
Iteration  14: 772.028 ns/op
Iteration  15: 761.716 ns/op
Iteration  16: 761.596 ns/op
Iteration  17: 761.606 ns/op
Iteration  18: 778.069 ns/op
Iteration  19: 761.161 ns/op
Iteration  20: 761.262 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 791.070 ns/op
# Warmup Iteration   2: 792.967 ns/op
# Warmup Iteration   3: 886.502 ns/op
# Warmup Iteration   4: 886.121 ns/op
# Warmup Iteration   5: 886.214 ns/op
Iteration   1: 822.405 ns/op
Iteration   2: 810.812 ns/op
Iteration   3: 810.576 ns/op
Iteration   4: 810.360 ns/op
Iteration   5: 818.931 ns/op
Iteration   6: 810.920 ns/op
Iteration   7: 810.825 ns/op
Iteration   8: 811.350 ns/op
Iteration   9: 811.631 ns/op
Iteration  10: 822.683 ns/op
Iteration  11: 811.773 ns/op
Iteration  12: 812.365 ns/op
Iteration  13: 811.206 ns/op
Iteration  14: 819.399 ns/op
Iteration  15: 815.869 ns/op
Iteration  16: 810.268 ns/op
Iteration  17: 810.578 ns/op
Iteration  18: 810.492 ns/op
Iteration  19: 828.770 ns/op
Iteration  20: 810.846 ns/op


Result "benchmark.StringContains.regexMatches":
  778.829 ±(99.9%) 7.275 ns/op [Average]
  (min, avg, max) = (761.161, 778.829, 828.770), stdev = 21.449
  CI (99.9%): [771.555, 786.104] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http:Zni2pwFYzs46Hm{Jb,[cVprOrG7]c<yfqIRY`af= I&^K%@H@ kU)CI(m2)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.481 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.846 ns/op
# Warmup Iteration   4: 9.842 ns/op
# Warmup Iteration   5: 9.830 ns/op
Iteration   1: 9.851 ns/op
Iteration   2: 9.856 ns/op
Iteration   3: 9.845 ns/op
Iteration   4: 9.862 ns/op
Iteration   5: 9.838 ns/op
Iteration   6: 9.842 ns/op
Iteration   7: 9.840 ns/op
Iteration   8: 9.828 ns/op
Iteration   9: 9.840 ns/op
Iteration  10: 9.840 ns/op
Iteration  11: 9.852 ns/op
Iteration  12: 10.552 ns/op
Iteration  13: 10.551 ns/op
Iteration  14: 10.552 ns/op
Iteration  15: 10.552 ns/op
Iteration  16: 10.551 ns/op
Iteration  17: 10.557 ns/op
Iteration  18: 10.552 ns/op
Iteration  19: 10.554 ns/op
Iteration  20: 10.557 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.466 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.840 ns/op
# Warmup Iteration   4: 9.847 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.841 ns/op
Iteration   2: 9.807 ns/op
Iteration   3: 9.855 ns/op
Iteration   4: 9.830 ns/op
Iteration   5: 9.857 ns/op
Iteration   6: 9.834 ns/op
Iteration   7: 9.850 ns/op
Iteration   8: 9.843 ns/op
Iteration   9: 9.844 ns/op
Iteration  10: 9.839 ns/op
Iteration  11: 9.861 ns/op
Iteration  12: 9.855 ns/op
Iteration  13: 9.858 ns/op
Iteration  14: 9.852 ns/op
Iteration  15: 9.874 ns/op
Iteration  16: 9.852 ns/op
Iteration  17: 9.831 ns/op
Iteration  18: 9.869 ns/op
Iteration  19: 9.866 ns/op
Iteration  20: 9.856 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.438 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.877 ns/op
# Warmup Iteration   4: 9.877 ns/op
# Warmup Iteration   5: 9.885 ns/op
Iteration   1: 9.873 ns/op
Iteration   2: 9.888 ns/op
Iteration   3: 9.887 ns/op
Iteration   4: 9.866 ns/op
Iteration   5: 9.876 ns/op
Iteration   6: 9.878 ns/op
Iteration   7: 9.880 ns/op
Iteration   8: 9.867 ns/op
Iteration   9: 9.871 ns/op
Iteration  10: 9.874 ns/op
Iteration  11: 9.886 ns/op
Iteration  12: 9.867 ns/op
Iteration  13: 9.874 ns/op
Iteration  14: 9.869 ns/op
Iteration  15: 9.885 ns/op
Iteration  16: 9.900 ns/op
Iteration  17: 9.873 ns/op
Iteration  18: 9.882 ns/op
Iteration  19: 9.863 ns/op
Iteration  20: 9.899 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.501 ns/op
# Warmup Iteration   2: 9.724 ns/op
# Warmup Iteration   3: 9.841 ns/op
# Warmup Iteration   4: 9.826 ns/op
# Warmup Iteration   5: 9.855 ns/op
Iteration   1: 9.844 ns/op
Iteration   2: 9.844 ns/op
Iteration   3: 9.830 ns/op
Iteration   4: 9.850 ns/op
Iteration   5: 9.843 ns/op
Iteration   6: 9.858 ns/op
Iteration   7: 9.859 ns/op
Iteration   8: 9.869 ns/op
Iteration   9: 9.845 ns/op
Iteration  10: 9.858 ns/op
Iteration  11: 9.841 ns/op
Iteration  12: 10.551 ns/op
Iteration  13: 10.551 ns/op
Iteration  14: 10.550 ns/op
Iteration  15: 10.552 ns/op
Iteration  16: 10.551 ns/op
Iteration  17: 10.551 ns/op
Iteration  18: 10.551 ns/op
Iteration  19: 10.551 ns/op
Iteration  20: 10.569 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.477 ns/op
# Warmup Iteration   2: 9.727 ns/op
# Warmup Iteration   3: 9.790 ns/op
# Warmup Iteration   4: 9.769 ns/op
# Warmup Iteration   5: 9.786 ns/op
Iteration   1: 9.819 ns/op
Iteration   2: 9.800 ns/op
Iteration   3: 9.791 ns/op
Iteration   4: 9.805 ns/op
Iteration   5: 9.796 ns/op
Iteration   6: 9.801 ns/op
Iteration   7: 9.799 ns/op
Iteration   8: 9.816 ns/op
Iteration   9: 9.798 ns/op
Iteration  10: 9.804 ns/op
Iteration  11: 9.792 ns/op
Iteration  12: 9.800 ns/op
Iteration  13: 9.797 ns/op
Iteration  14: 9.805 ns/op
Iteration  15: 9.798 ns/op
Iteration  16: 9.796 ns/op
Iteration  17: 9.806 ns/op
Iteration  18: 9.802 ns/op
Iteration  19: 9.805 ns/op
Iteration  20: 9.801 ns/op


Result "benchmark.StringContains.stringContains":
  9.972 ±(99.9%) 0.093 ns/op [Average]
  (min, avg, max) = (9.791, 9.972, 10.569), stdev = 0.275
  CI (99.9%): [9.878, 10.065] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http:Zni2pwFYzs46Hm{Jb,[cVprOrG7]c<yfqIRY`af= I&^K%@H@ kU)CI(m2  avgt  100  778.829 ± 7.275  ns/op
StringContains.stringContains     http  http:Zni2pwFYzs46Hm{Jb,[cVprOrG7]c<yfqIRY`af= I&^K%@H@ kU)CI(m2  avgt  100    9.972 ± 0.093  ns/op

Benchmark result is saved to http_64_0_13.csv
