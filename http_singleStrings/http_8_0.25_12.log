# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Xohttp`)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 247.219 ns/op
# Warmup Iteration   2: 180.644 ns/op
# Warmup Iteration   3: 151.821 ns/op
# Warmup Iteration   4: 152.198 ns/op
# Warmup Iteration   5: 154.272 ns/op
Iteration   1: 154.907 ns/op
Iteration   2: 153.068 ns/op
Iteration   3: 150.795 ns/op
Iteration   4: 151.016 ns/op
Iteration   5: 150.848 ns/op
Iteration   6: 150.981 ns/op
Iteration   7: 150.942 ns/op
Iteration   8: 150.923 ns/op
Iteration   9: 150.791 ns/op
Iteration  10: 150.794 ns/op
Iteration  11: 150.623 ns/op
Iteration  12: 150.475 ns/op
Iteration  13: 150.516 ns/op
Iteration  14: 150.557 ns/op
Iteration  15: 150.644 ns/op
Iteration  16: 150.586 ns/op
Iteration  17: 150.690 ns/op
Iteration  18: 150.587 ns/op
Iteration  19: 150.557 ns/op
Iteration  20: 150.587 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 223.844 ns/op
# Warmup Iteration   2: 161.176 ns/op
# Warmup Iteration   3: 142.744 ns/op
# Warmup Iteration   4: 141.938 ns/op
# Warmup Iteration   5: 142.619 ns/op
Iteration   1: 143.693 ns/op
Iteration   2: 140.274 ns/op
Iteration   3: 140.391 ns/op
Iteration   4: 140.175 ns/op
Iteration   5: 140.278 ns/op
Iteration   6: 140.904 ns/op
Iteration   7: 140.188 ns/op
Iteration   8: 140.173 ns/op
Iteration   9: 140.288 ns/op
Iteration  10: 139.883 ns/op
Iteration  11: 139.922 ns/op
Iteration  12: 139.786 ns/op
Iteration  13: 139.782 ns/op
Iteration  14: 139.795 ns/op
Iteration  15: 140.094 ns/op
Iteration  16: 139.956 ns/op
Iteration  17: 139.886 ns/op
Iteration  18: 139.817 ns/op
Iteration  19: 140.060 ns/op
Iteration  20: 140.067 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 243.752 ns/op
# Warmup Iteration   2: 178.792 ns/op
# Warmup Iteration   3: 150.988 ns/op
# Warmup Iteration   4: 151.423 ns/op
# Warmup Iteration   5: 155.948 ns/op
Iteration   1: 153.829 ns/op
Iteration   2: 151.390 ns/op
Iteration   3: 150.166 ns/op
Iteration   4: 150.073 ns/op
Iteration   5: 150.141 ns/op
Iteration   6: 150.010 ns/op
Iteration   7: 150.114 ns/op
Iteration   8: 150.119 ns/op
Iteration   9: 150.095 ns/op
Iteration  10: 150.104 ns/op
Iteration  11: 149.659 ns/op
Iteration  12: 149.718 ns/op
Iteration  13: 149.639 ns/op
Iteration  14: 149.650 ns/op
Iteration  15: 149.721 ns/op
Iteration  16: 149.884 ns/op
Iteration  17: 149.799 ns/op
Iteration  18: 149.763 ns/op
Iteration  19: 149.764 ns/op
Iteration  20: 149.787 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 238.615 ns/op
# Warmup Iteration   2: 176.850 ns/op
# Warmup Iteration   3: 151.339 ns/op
# Warmup Iteration   4: 153.082 ns/op
# Warmup Iteration   5: 154.333 ns/op
Iteration   1: 153.979 ns/op
Iteration   2: 150.904 ns/op
Iteration   3: 150.430 ns/op
Iteration   4: 150.455 ns/op
Iteration   5: 150.474 ns/op
Iteration   6: 150.443 ns/op
Iteration   7: 150.401 ns/op
Iteration   8: 150.512 ns/op
Iteration   9: 150.424 ns/op
Iteration  10: 150.539 ns/op
Iteration  11: 150.727 ns/op
Iteration  12: 150.130 ns/op
Iteration  13: 149.953 ns/op
Iteration  14: 150.336 ns/op
Iteration  15: 150.097 ns/op
Iteration  16: 150.107 ns/op
Iteration  17: 150.128 ns/op
Iteration  18: 150.185 ns/op
Iteration  19: 150.098 ns/op
Iteration  20: 150.363 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 246.572 ns/op
# Warmup Iteration   2: 190.153 ns/op
# Warmup Iteration   3: 172.917 ns/op
# Warmup Iteration   4: 173.167 ns/op
# Warmup Iteration   5: 173.844 ns/op
Iteration   1: 174.826 ns/op
Iteration   2: 175.687 ns/op
Iteration   3: 171.894 ns/op
Iteration   4: 171.759 ns/op
Iteration   5: 171.757 ns/op
Iteration   6: 170.917 ns/op
Iteration   7: 172.045 ns/op
Iteration   8: 172.294 ns/op
Iteration   9: 171.931 ns/op
Iteration  10: 172.214 ns/op
Iteration  11: 173.293 ns/op
Iteration  12: 173.415 ns/op
Iteration  13: 172.364 ns/op
Iteration  14: 171.293 ns/op
Iteration  15: 171.398 ns/op
Iteration  16: 171.354 ns/op
Iteration  17: 170.939 ns/op
Iteration  18: 171.427 ns/op
Iteration  19: 171.458 ns/op
Iteration  20: 171.843 ns/op


Result "benchmark.StringContains.regexMatches":
  152.845 ±(99.9%) 3.586 ns/op [Average]
  (min, avg, max) = (139.782, 152.845, 175.687), stdev = 10.573
  CI (99.9%): [149.259, 156.431] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Xohttp`)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.073 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 10.042 ns/op
# Warmup Iteration   4: 10.056 ns/op
# Warmup Iteration   5: 10.047 ns/op
Iteration   1: 10.041 ns/op
Iteration   2: 10.044 ns/op
Iteration   3: 10.047 ns/op
Iteration   4: 10.041 ns/op
Iteration   5: 10.041 ns/op
Iteration   6: 10.043 ns/op
Iteration   7: 10.042 ns/op
Iteration   8: 10.040 ns/op
Iteration   9: 10.044 ns/op
Iteration  10: 10.050 ns/op
Iteration  11: 10.045 ns/op
Iteration  12: 10.046 ns/op
Iteration  13: 10.039 ns/op
Iteration  14: 10.038 ns/op
Iteration  15: 10.038 ns/op
Iteration  16: 10.044 ns/op
Iteration  17: 10.036 ns/op
Iteration  18: 10.041 ns/op
Iteration  19: 10.042 ns/op
Iteration  20: 10.050 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.044 ns/op
# Warmup Iteration   2: 10.457 ns/op
# Warmup Iteration   3: 9.905 ns/op
# Warmup Iteration   4: 9.901 ns/op
# Warmup Iteration   5: 9.883 ns/op
Iteration   1: 9.891 ns/op
Iteration   2: 9.885 ns/op
Iteration   3: 9.892 ns/op
Iteration   4: 9.872 ns/op
Iteration   5: 9.872 ns/op
Iteration   6: 9.892 ns/op
Iteration   7: 9.883 ns/op
Iteration   8: 9.890 ns/op
Iteration   9: 9.900 ns/op
Iteration  10: 9.884 ns/op
Iteration  11: 9.893 ns/op
Iteration  12: 9.893 ns/op
Iteration  13: 9.887 ns/op
Iteration  14: 9.897 ns/op
Iteration  15: 9.883 ns/op
Iteration  16: 9.899 ns/op
Iteration  17: 9.897 ns/op
Iteration  18: 9.896 ns/op
Iteration  19: 9.884 ns/op
Iteration  20: 9.885 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.068 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.927 ns/op
# Warmup Iteration   4: 9.914 ns/op
# Warmup Iteration   5: 9.903 ns/op
Iteration   1: 9.920 ns/op
Iteration   2: 9.924 ns/op
Iteration   3: 9.908 ns/op
Iteration   4: 9.927 ns/op
Iteration   5: 9.911 ns/op
Iteration   6: 9.911 ns/op
Iteration   7: 9.939 ns/op
Iteration   8: 9.905 ns/op
Iteration   9: 9.929 ns/op
Iteration  10: 9.919 ns/op
Iteration  11: 9.900 ns/op
Iteration  12: 9.913 ns/op
Iteration  13: 9.928 ns/op
Iteration  14: 9.913 ns/op
Iteration  15: 9.919 ns/op
Iteration  16: 9.912 ns/op
Iteration  17: 9.925 ns/op
Iteration  18: 9.908 ns/op
Iteration  19: 9.920 ns/op
Iteration  20: 9.925 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.182 ns/op
# Warmup Iteration   2: 10.474 ns/op
# Warmup Iteration   3: 10.024 ns/op
# Warmup Iteration   4: 10.021 ns/op
# Warmup Iteration   5: 9.995 ns/op
Iteration   1: 10.017 ns/op
Iteration   2: 10.000 ns/op
Iteration   3: 9.985 ns/op
Iteration   4: 10.055 ns/op
Iteration   5: 10.023 ns/op
Iteration   6: 10.021 ns/op
Iteration   7: 10.030 ns/op
Iteration   8: 10.054 ns/op
Iteration   9: 10.010 ns/op
Iteration  10: 10.002 ns/op
Iteration  11: 10.006 ns/op
Iteration  12: 9.999 ns/op
Iteration  13: 10.019 ns/op
Iteration  14: 10.034 ns/op
Iteration  15: 10.010 ns/op
Iteration  16: 10.007 ns/op
Iteration  17: 10.039 ns/op
Iteration  18: 10.007 ns/op
Iteration  19: 10.037 ns/op
Iteration  20: 10.015 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.075 ns/op
# Warmup Iteration   2: 10.462 ns/op
# Warmup Iteration   3: 9.918 ns/op
# Warmup Iteration   4: 9.906 ns/op
# Warmup Iteration   5: 9.905 ns/op
Iteration   1: 9.929 ns/op
Iteration   2: 9.945 ns/op
Iteration   3: 9.944 ns/op
Iteration   4: 9.933 ns/op
Iteration   5: 9.926 ns/op
Iteration   6: 9.913 ns/op
Iteration   7: 9.925 ns/op
Iteration   8: 9.933 ns/op
Iteration   9: 9.954 ns/op
Iteration  10: 9.939 ns/op
Iteration  11: 9.925 ns/op
Iteration  12: 9.962 ns/op
Iteration  13: 9.949 ns/op
Iteration  14: 9.953 ns/op
Iteration  15: 9.925 ns/op
Iteration  16: 9.939 ns/op
Iteration  17: 9.942 ns/op
Iteration  18: 9.948 ns/op
Iteration  19: 9.949 ns/op
Iteration  20: 9.924 ns/op


Result "benchmark.StringContains.stringContains":
  9.961 ±(99.9%) 0.021 ns/op [Average]
  (min, avg, max) = (9.872, 9.961, 10.055), stdev = 0.061
  CI (99.9%): [9.941, 9.982] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  Xohttp`  avgt  100  152.845 ± 3.586  ns/op
StringContains.stringContains     http  Xohttp`  avgt  100    9.961 ± 0.021  ns/op

Benchmark result is saved to http_8_0.25_12.csv
