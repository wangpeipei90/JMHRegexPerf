# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = -Nj
z#BP)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 184.442 ns/op
# Warmup Iteration   2: 110.282 ns/op
# Warmup Iteration   3: 104.582 ns/op
# Warmup Iteration   4: 103.609 ns/op
# Warmup Iteration   5: 104.995 ns/op
Iteration   1: 101.750 ns/op
Iteration   2: 102.272 ns/op
Iteration   3: 101.970 ns/op
Iteration   4: 102.359 ns/op
Iteration   5: 101.813 ns/op
Iteration   6: 102.194 ns/op
Iteration   7: 101.564 ns/op
Iteration   8: 102.023 ns/op
Iteration   9: 101.658 ns/op
Iteration  10: 101.776 ns/op
Iteration  11: 101.580 ns/op
Iteration  12: 101.786 ns/op
Iteration  13: 102.285 ns/op
Iteration  14: 101.852 ns/op
Iteration  15: 102.417 ns/op
Iteration  16: 101.849 ns/op
Iteration  17: 102.129 ns/op
Iteration  18: 101.815 ns/op
Iteration  19: 102.403 ns/op
Iteration  20: 101.773 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 177.221 ns/op
# Warmup Iteration   2: 103.020 ns/op
# Warmup Iteration   3: 100.196 ns/op
# Warmup Iteration   4: 99.531 ns/op
# Warmup Iteration   5: 100.586 ns/op
Iteration   1: 98.276 ns/op
Iteration   2: 97.736 ns/op
Iteration   3: 98.137 ns/op
Iteration   4: 97.692 ns/op
Iteration   5: 98.117 ns/op
Iteration   6: 97.542 ns/op
Iteration   7: 98.032 ns/op
Iteration   8: 97.897 ns/op
Iteration   9: 97.385 ns/op
Iteration  10: 97.516 ns/op
Iteration  11: 97.696 ns/op
Iteration  12: 97.449 ns/op
Iteration  13: 97.759 ns/op
Iteration  14: 97.483 ns/op
Iteration  15: 98.333 ns/op
Iteration  16: 97.788 ns/op
Iteration  17: 98.239 ns/op
Iteration  18: 98.152 ns/op
Iteration  19: 97.651 ns/op
Iteration  20: 98.187 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.237 ns/op
# Warmup Iteration   2: 102.738 ns/op
# Warmup Iteration   3: 99.970 ns/op
# Warmup Iteration   4: 99.291 ns/op
# Warmup Iteration   5: 100.120 ns/op
Iteration   1: 98.034 ns/op
Iteration   2: 97.594 ns/op
Iteration   3: 97.939 ns/op
Iteration   4: 98.860 ns/op
Iteration   5: 98.267 ns/op
Iteration   6: 97.594 ns/op
Iteration   7: 97.237 ns/op
Iteration   8: 97.452 ns/op
Iteration   9: 97.341 ns/op
Iteration  10: 97.541 ns/op
Iteration  11: 97.668 ns/op
Iteration  12: 97.507 ns/op
Iteration  13: 97.638 ns/op
Iteration  14: 97.401 ns/op
Iteration  15: 98.018 ns/op
Iteration  16: 97.665 ns/op
Iteration  17: 98.044 ns/op
Iteration  18: 98.183 ns/op
Iteration  19: 97.521 ns/op
Iteration  20: 97.771 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 177.185 ns/op
# Warmup Iteration   2: 102.781 ns/op
# Warmup Iteration   3: 100.588 ns/op
# Warmup Iteration   4: 99.053 ns/op
# Warmup Iteration   5: 100.836 ns/op
Iteration   1: 98.319 ns/op
Iteration   2: 97.221 ns/op
Iteration   3: 97.752 ns/op
Iteration   4: 97.234 ns/op
Iteration   5: 97.734 ns/op
Iteration   6: 97.026 ns/op
Iteration   7: 96.894 ns/op
Iteration   8: 97.019 ns/op
Iteration   9: 97.555 ns/op
Iteration  10: 97.668 ns/op
Iteration  11: 97.225 ns/op
Iteration  12: 96.937 ns/op
Iteration  13: 97.236 ns/op
Iteration  14: 97.013 ns/op
Iteration  15: 97.189 ns/op
Iteration  16: 97.277 ns/op
Iteration  17: 98.041 ns/op
Iteration  18: 97.445 ns/op
Iteration  19: 96.851 ns/op
Iteration  20: 97.543 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 177.859 ns/op
# Warmup Iteration   2: 103.722 ns/op
# Warmup Iteration   3: 99.694 ns/op
# Warmup Iteration   4: 99.200 ns/op
# Warmup Iteration   5: 99.830 ns/op
Iteration   1: 97.651 ns/op
Iteration   2: 97.229 ns/op
Iteration   3: 98.406 ns/op
Iteration   4: 97.268 ns/op
Iteration   5: 97.795 ns/op
Iteration   6: 97.236 ns/op
Iteration   7: 97.098 ns/op
Iteration   8: 97.240 ns/op
Iteration   9: 97.050 ns/op
Iteration  10: 97.317 ns/op
Iteration  11: 97.364 ns/op
Iteration  12: 97.046 ns/op
Iteration  13: 97.360 ns/op
Iteration  14: 97.152 ns/op
Iteration  15: 97.494 ns/op
Iteration  16: 97.483 ns/op
Iteration  17: 97.373 ns/op
Iteration  18: 97.563 ns/op
Iteration  19: 97.303 ns/op
Iteration  20: 97.842 ns/op


Result "benchmark.StringContains.regexMatches":
  98.471 ±(99.9%) 0.609 ns/op [Average]
  (min, avg, max) = (96.851, 98.471, 102.417), stdev = 1.797
  CI (99.9%): [97.861, 99.080] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = -Nj
z#BP)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.451 ns/op
# Warmup Iteration   2: 9.056 ns/op
# Warmup Iteration   3: 8.968 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.970 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.970 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.968 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.970 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.967 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.445 ns/op
# Warmup Iteration   2: 9.055 ns/op
# Warmup Iteration   3: 8.970 ns/op
# Warmup Iteration   4: 8.969 ns/op
# Warmup Iteration   5: 8.969 ns/op
Iteration   1: 8.970 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.968 ns/op
Iteration   4: 8.973 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.970 ns/op
Iteration   8: 8.972 ns/op
Iteration   9: 8.969 ns/op
Iteration  10: 8.971 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.971 ns/op
Iteration  14: 8.968 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.969 ns/op
Iteration  17: 8.969 ns/op
Iteration  18: 8.968 ns/op
Iteration  19: 8.969 ns/op
Iteration  20: 8.970 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.473 ns/op
# Warmup Iteration   2: 9.071 ns/op
# Warmup Iteration   3: 8.972 ns/op
# Warmup Iteration   4: 8.974 ns/op
# Warmup Iteration   5: 8.972 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.969 ns/op
Iteration   3: 8.973 ns/op
Iteration   4: 8.969 ns/op
Iteration   5: 8.974 ns/op
Iteration   6: 8.974 ns/op
Iteration   7: 8.970 ns/op
Iteration   8: 8.984 ns/op
Iteration   9: 8.970 ns/op
Iteration  10: 8.972 ns/op
Iteration  11: 8.969 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.970 ns/op
Iteration  15: 8.973 ns/op
Iteration  16: 8.970 ns/op
Iteration  17: 8.971 ns/op
Iteration  18: 8.974 ns/op
Iteration  19: 8.971 ns/op
Iteration  20: 8.986 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.460 ns/op
# Warmup Iteration   2: 9.078 ns/op
# Warmup Iteration   3: 9.127 ns/op
# Warmup Iteration   4: 9.109 ns/op
# Warmup Iteration   5: 9.121 ns/op
Iteration   1: 9.116 ns/op
Iteration   2: 9.167 ns/op
Iteration   3: 9.124 ns/op
Iteration   4: 9.114 ns/op
Iteration   5: 9.095 ns/op
Iteration   6: 9.106 ns/op
Iteration   7: 9.113 ns/op
Iteration   8: 9.131 ns/op
Iteration   9: 9.117 ns/op
Iteration  10: 9.115 ns/op
Iteration  11: 9.157 ns/op
Iteration  12: 9.150 ns/op
Iteration  13: 9.174 ns/op
Iteration  14: 9.130 ns/op
Iteration  15: 9.126 ns/op
Iteration  16: 9.109 ns/op
Iteration  17: 9.113 ns/op
Iteration  18: 9.099 ns/op
Iteration  19: 9.115 ns/op
Iteration  20: 9.114 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.448 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.963 ns/op
# Warmup Iteration   5: 8.967 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.963 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.964 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.964 ns/op
Iteration  14: 8.962 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.966 ns/op


Result "benchmark.StringContains.stringContains":
  8.999 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (8.962, 8.999, 9.174), stdev = 0.064
  CI (99.9%): [8.978, 9.021] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  -Nj
z#BP  avgt  100  98.471 ± 0.609  ns/op
StringContains.stringContains     http  -Nj
z#BP  avgt  100   8.999 ± 0.022  ns/op

Benchmark result is saved to http_8_1_7.csv
