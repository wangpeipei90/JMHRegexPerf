# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = &l+7$R:)=wnRn:o\httppryIB'kWCEW)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 356.317 ns/op
# Warmup Iteration   2: 361.257 ns/op
# Warmup Iteration   3: 283.977 ns/op
# Warmup Iteration   4: 273.138 ns/op
# Warmup Iteration   5: 270.002 ns/op
Iteration   1: 273.984 ns/op
Iteration   2: 275.256 ns/op
Iteration   3: 270.229 ns/op
Iteration   4: 276.779 ns/op
Iteration   5: 270.351 ns/op
Iteration   6: 277.883 ns/op
Iteration   7: 270.359 ns/op
Iteration   8: 271.565 ns/op
Iteration   9: 271.297 ns/op
Iteration  10: 271.346 ns/op
Iteration  11: 271.910 ns/op
Iteration  12: 270.136 ns/op
Iteration  13: 271.351 ns/op
Iteration  14: 270.457 ns/op
Iteration  15: 271.482 ns/op
Iteration  16: 271.484 ns/op
Iteration  17: 270.306 ns/op
Iteration  18: 272.486 ns/op
Iteration  19: 269.774 ns/op
Iteration  20: 271.341 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 349.411 ns/op
# Warmup Iteration   2: 359.485 ns/op
# Warmup Iteration   3: 286.446 ns/op
# Warmup Iteration   4: 273.401 ns/op
# Warmup Iteration   5: 270.312 ns/op
Iteration   1: 274.896 ns/op
Iteration   2: 274.608 ns/op
Iteration   3: 270.549 ns/op
Iteration   4: 276.376 ns/op
Iteration   5: 270.432 ns/op
Iteration   6: 278.081 ns/op
Iteration   7: 270.446 ns/op
Iteration   8: 271.678 ns/op
Iteration   9: 271.664 ns/op
Iteration  10: 270.241 ns/op
Iteration  11: 271.646 ns/op
Iteration  12: 270.158 ns/op
Iteration  13: 271.772 ns/op
Iteration  14: 271.743 ns/op
Iteration  15: 270.565 ns/op
Iteration  16: 271.456 ns/op
Iteration  17: 270.396 ns/op
Iteration  18: 271.967 ns/op
Iteration  19: 270.507 ns/op
Iteration  20: 271.942 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 349.790 ns/op
# Warmup Iteration   2: 354.966 ns/op
# Warmup Iteration   3: 286.048 ns/op
# Warmup Iteration   4: 279.632 ns/op
# Warmup Iteration   5: 276.492 ns/op
Iteration   1: 280.089 ns/op
Iteration   2: 281.150 ns/op
Iteration   3: 276.225 ns/op
Iteration   4: 282.119 ns/op
Iteration   5: 276.190 ns/op
Iteration   6: 284.105 ns/op
Iteration   7: 276.391 ns/op
Iteration   8: 277.930 ns/op
Iteration   9: 277.322 ns/op
Iteration  10: 275.944 ns/op
Iteration  11: 277.762 ns/op
Iteration  12: 276.058 ns/op
Iteration  13: 278.916 ns/op
Iteration  14: 276.101 ns/op
Iteration  15: 277.888 ns/op
Iteration  16: 276.340 ns/op
Iteration  17: 277.907 ns/op
Iteration  18: 277.102 ns/op
Iteration  19: 276.727 ns/op
Iteration  20: 280.087 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 346.281 ns/op
# Warmup Iteration   2: 359.961 ns/op
# Warmup Iteration   3: 280.996 ns/op
# Warmup Iteration   4: 273.468 ns/op
# Warmup Iteration   5: 271.180 ns/op
Iteration   1: 274.708 ns/op
Iteration   2: 275.705 ns/op
Iteration   3: 271.247 ns/op
Iteration   4: 277.414 ns/op
Iteration   5: 271.243 ns/op
Iteration   6: 279.339 ns/op
Iteration   7: 271.217 ns/op
Iteration   8: 272.366 ns/op
Iteration   9: 272.655 ns/op
Iteration  10: 271.002 ns/op
Iteration  11: 272.820 ns/op
Iteration  12: 271.171 ns/op
Iteration  13: 272.232 ns/op
Iteration  14: 272.634 ns/op
Iteration  15: 271.158 ns/op
Iteration  16: 273.696 ns/op
Iteration  17: 271.305 ns/op
Iteration  18: 272.735 ns/op
Iteration  19: 271.199 ns/op
Iteration  20: 273.225 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 351.131 ns/op
# Warmup Iteration   2: 360.396 ns/op
# Warmup Iteration   3: 279.716 ns/op
# Warmup Iteration   4: 272.032 ns/op
# Warmup Iteration   5: 269.343 ns/op
Iteration   1: 272.631 ns/op
Iteration   2: 273.999 ns/op
Iteration   3: 269.606 ns/op
Iteration   4: 275.505 ns/op
Iteration   5: 269.311 ns/op
Iteration   6: 277.329 ns/op
Iteration   7: 270.585 ns/op
Iteration   8: 269.229 ns/op
Iteration   9: 270.751 ns/op
Iteration  10: 269.444 ns/op
Iteration  11: 270.857 ns/op
Iteration  12: 269.462 ns/op
Iteration  13: 270.440 ns/op
Iteration  14: 272.038 ns/op
Iteration  15: 269.215 ns/op
Iteration  16: 270.468 ns/op
Iteration  17: 269.379 ns/op
Iteration  18: 270.613 ns/op
Iteration  19: 269.370 ns/op
Iteration  20: 270.665 ns/op


Result "benchmark.StringContains.regexMatches":
  273.232 ±(99.9%) 1.138 ns/op [Average]
  (min, avg, max) = (269.215, 273.232, 284.105), stdev = 3.357
  CI (99.9%): [272.094, 274.371] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = &l+7$R:)=wnRn:o\httppryIB'kWCEW)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.969 ns/op
# Warmup Iteration   2: 12.559 ns/op
# Warmup Iteration   3: 12.138 ns/op
# Warmup Iteration   4: 12.133 ns/op
# Warmup Iteration   5: 12.135 ns/op
Iteration   1: 12.133 ns/op
Iteration   2: 12.151 ns/op
Iteration   3: 12.148 ns/op
Iteration   4: 12.157 ns/op
Iteration   5: 12.132 ns/op
Iteration   6: 12.133 ns/op
Iteration   7: 12.126 ns/op
Iteration   8: 12.139 ns/op
Iteration   9: 12.135 ns/op
Iteration  10: 12.129 ns/op
Iteration  11: 12.130 ns/op
Iteration  12: 12.137 ns/op
Iteration  13: 12.134 ns/op
Iteration  14: 12.148 ns/op
Iteration  15: 12.126 ns/op
Iteration  16: 12.146 ns/op
Iteration  17: 12.139 ns/op
Iteration  18: 12.150 ns/op
Iteration  19: 12.144 ns/op
Iteration  20: 12.145 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.326 ns/op
# Warmup Iteration   2: 12.549 ns/op
# Warmup Iteration   3: 12.148 ns/op
# Warmup Iteration   4: 12.131 ns/op
# Warmup Iteration   5: 12.138 ns/op
Iteration   1: 12.139 ns/op
Iteration   2: 12.134 ns/op
Iteration   3: 12.129 ns/op
Iteration   4: 12.124 ns/op
Iteration   5: 12.130 ns/op
Iteration   6: 12.129 ns/op
Iteration   7: 12.136 ns/op
Iteration   8: 12.127 ns/op
Iteration   9: 12.135 ns/op
Iteration  10: 12.127 ns/op
Iteration  11: 12.133 ns/op
Iteration  12: 12.840 ns/op
Iteration  13: 12.839 ns/op
Iteration  14: 12.840 ns/op
Iteration  15: 12.839 ns/op
Iteration  16: 12.839 ns/op
Iteration  17: 12.840 ns/op
Iteration  18: 12.839 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.840 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.306 ns/op
# Warmup Iteration   2: 12.487 ns/op
# Warmup Iteration   3: 12.304 ns/op
# Warmup Iteration   4: 12.292 ns/op
# Warmup Iteration   5: 12.283 ns/op
Iteration   1: 12.266 ns/op
Iteration   2: 12.289 ns/op
Iteration   3: 12.279 ns/op
Iteration   4: 12.292 ns/op
Iteration   5: 12.274 ns/op
Iteration   6: 12.265 ns/op
Iteration   7: 12.281 ns/op
Iteration   8: 12.305 ns/op
Iteration   9: 12.292 ns/op
Iteration  10: 12.241 ns/op
Iteration  11: 12.255 ns/op
Iteration  12: 12.286 ns/op
Iteration  13: 12.276 ns/op
Iteration  14: 12.254 ns/op
Iteration  15: 12.283 ns/op
Iteration  16: 12.260 ns/op
Iteration  17: 12.242 ns/op
Iteration  18: 12.271 ns/op
Iteration  19: 12.274 ns/op
Iteration  20: 12.259 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.301 ns/op
# Warmup Iteration   2: 12.433 ns/op
# Warmup Iteration   3: 12.400 ns/op
# Warmup Iteration   4: 12.339 ns/op
# Warmup Iteration   5: 12.339 ns/op
Iteration   1: 12.393 ns/op
Iteration   2: 12.403 ns/op
Iteration   3: 12.352 ns/op
Iteration   4: 12.364 ns/op
Iteration   5: 12.379 ns/op
Iteration   6: 12.372 ns/op
Iteration   7: 12.371 ns/op
Iteration   8: 12.377 ns/op
Iteration   9: 12.372 ns/op
Iteration  10: 12.376 ns/op
Iteration  11: 12.398 ns/op
Iteration  12: 12.378 ns/op
Iteration  13: 12.425 ns/op
Iteration  14: 12.409 ns/op
Iteration  15: 12.361 ns/op
Iteration  16: 12.395 ns/op
Iteration  17: 12.416 ns/op
Iteration  18: 12.402 ns/op
Iteration  19: 12.374 ns/op
Iteration  20: 12.359 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 12.032 ns/op
# Warmup Iteration   2: 12.494 ns/op
# Warmup Iteration   3: 12.152 ns/op
# Warmup Iteration   4: 12.177 ns/op
# Warmup Iteration   5: 12.157 ns/op
Iteration   1: 12.147 ns/op
Iteration   2: 12.164 ns/op
Iteration   3: 12.172 ns/op
Iteration   4: 12.160 ns/op
Iteration   5: 12.155 ns/op
Iteration   6: 12.151 ns/op
Iteration   7: 12.164 ns/op
Iteration   8: 12.151 ns/op
Iteration   9: 12.163 ns/op
Iteration  10: 12.145 ns/op
Iteration  11: 12.161 ns/op
Iteration  12: 12.869 ns/op
Iteration  13: 12.869 ns/op
Iteration  14: 12.870 ns/op
Iteration  15: 12.869 ns/op
Iteration  16: 12.879 ns/op
Iteration  17: 12.869 ns/op
Iteration  18: 12.869 ns/op
Iteration  19: 12.870 ns/op
Iteration  20: 12.871 ns/op


Result "benchmark.StringContains.stringContains":
  12.345 ±(99.9%) 0.087 ns/op [Average]
  (min, avg, max) = (12.124, 12.345, 12.879), stdev = 0.258
  CI (99.9%): [12.257, 12.432] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  &l+7$R:)=wnRn:o\httppryIB'kWCEW  avgt  100  273.232 ± 1.138  ns/op
StringContains.stringContains     http  &l+7$R:)=wnRn:o\httppryIB'kWCEW  avgt  100   12.345 ± 0.087  ns/op

Benchmark result is saved to http_32_0.5_7.csv
