# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = QjuSCQ]tMz
9/;sNX#SslS
http**t-)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 263.453 ns/op
# Warmup Iteration   2: 209.442 ns/op
# Warmup Iteration   3: 181.582 ns/op
# Warmup Iteration   4: 182.026 ns/op
# Warmup Iteration   5: 182.900 ns/op
Iteration   1: 184.033 ns/op
Iteration   2: 185.197 ns/op
Iteration   3: 179.751 ns/op
Iteration   4: 180.478 ns/op
Iteration   5: 180.776 ns/op
Iteration   6: 181.207 ns/op
Iteration   7: 180.660 ns/op
Iteration   8: 180.591 ns/op
Iteration   9: 180.559 ns/op
Iteration  10: 179.744 ns/op
Iteration  11: 180.544 ns/op
Iteration  12: 180.503 ns/op
Iteration  13: 180.850 ns/op
Iteration  14: 181.465 ns/op
Iteration  15: 180.167 ns/op
Iteration  16: 180.070 ns/op
Iteration  17: 179.701 ns/op
Iteration  18: 180.368 ns/op
Iteration  19: 180.279 ns/op
Iteration  20: 180.347 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 269.502 ns/op
# Warmup Iteration   2: 218.669 ns/op
# Warmup Iteration   3: 193.932 ns/op
# Warmup Iteration   4: 194.384 ns/op
# Warmup Iteration   5: 195.364 ns/op
Iteration   1: 191.980 ns/op
Iteration   2: 196.307 ns/op
Iteration   3: 197.603 ns/op
Iteration   4: 193.057 ns/op
Iteration   5: 193.005 ns/op
Iteration   6: 192.051 ns/op
Iteration   7: 192.797 ns/op
Iteration   8: 193.405 ns/op
Iteration   9: 193.195 ns/op
Iteration  10: 193.074 ns/op
Iteration  11: 194.177 ns/op
Iteration  12: 192.105 ns/op
Iteration  13: 193.273 ns/op
Iteration  14: 193.349 ns/op
Iteration  15: 193.196 ns/op
Iteration  16: 192.561 ns/op
Iteration  17: 192.045 ns/op
Iteration  18: 192.618 ns/op
Iteration  19: 192.724 ns/op
Iteration  20: 193.109 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 256.551 ns/op
# Warmup Iteration   2: 207.251 ns/op
# Warmup Iteration   3: 171.719 ns/op
# Warmup Iteration   4: 172.302 ns/op
# Warmup Iteration   5: 173.070 ns/op
Iteration   1: 173.953 ns/op
Iteration   2: 175.013 ns/op
Iteration   3: 170.897 ns/op
Iteration   4: 171.217 ns/op
Iteration   5: 171.007 ns/op
Iteration   6: 170.305 ns/op
Iteration   7: 170.912 ns/op
Iteration   8: 171.077 ns/op
Iteration   9: 171.021 ns/op
Iteration  10: 171.402 ns/op
Iteration  11: 171.145 ns/op
Iteration  12: 170.987 ns/op
Iteration  13: 170.421 ns/op
Iteration  14: 171.564 ns/op
Iteration  15: 170.906 ns/op
Iteration  16: 170.702 ns/op
Iteration  17: 170.039 ns/op
Iteration  18: 170.479 ns/op
Iteration  19: 170.565 ns/op
Iteration  20: 170.603 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 269.471 ns/op
# Warmup Iteration   2: 224.665 ns/op
# Warmup Iteration   3: 193.718 ns/op
# Warmup Iteration   4: 194.235 ns/op
# Warmup Iteration   5: 195.181 ns/op
Iteration   1: 191.948 ns/op
Iteration   2: 196.105 ns/op
Iteration   3: 197.132 ns/op
Iteration   4: 192.740 ns/op
Iteration   5: 192.888 ns/op
Iteration   6: 191.867 ns/op
Iteration   7: 192.677 ns/op
Iteration   8: 192.916 ns/op
Iteration   9: 192.818 ns/op
Iteration  10: 193.025 ns/op
Iteration  11: 192.423 ns/op
Iteration  12: 192.946 ns/op
Iteration  13: 192.909 ns/op
Iteration  14: 192.816 ns/op
Iteration  15: 193.149 ns/op
Iteration  16: 193.119 ns/op
Iteration  17: 191.813 ns/op
Iteration  18: 192.261 ns/op
Iteration  19: 192.309 ns/op
Iteration  20: 192.490 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 268.479 ns/op
# Warmup Iteration   2: 219.569 ns/op
# Warmup Iteration   3: 194.363 ns/op
# Warmup Iteration   4: 194.860 ns/op
# Warmup Iteration   5: 195.668 ns/op
Iteration   1: 192.482 ns/op
Iteration   2: 196.673 ns/op
Iteration   3: 198.030 ns/op
Iteration   4: 193.916 ns/op
Iteration   5: 193.342 ns/op
Iteration   6: 192.523 ns/op
Iteration   7: 193.245 ns/op
Iteration   8: 193.233 ns/op
Iteration   9: 193.442 ns/op
Iteration  10: 193.427 ns/op
Iteration  11: 192.223 ns/op
Iteration  12: 194.783 ns/op
Iteration  13: 193.845 ns/op
Iteration  14: 193.724 ns/op
Iteration  15: 193.060 ns/op
Iteration  16: 192.955 ns/op
Iteration  17: 192.478 ns/op
Iteration  18: 193.063 ns/op
Iteration  19: 193.074 ns/op
Iteration  20: 193.265 ns/op


Result "benchmark.StringContains.regexMatches":
  186.403 ±(99.9%) 3.099 ns/op [Average]
  (min, avg, max) = (170.039, 186.403, 198.030), stdev = 9.139
  CI (99.9%): [183.303, 189.502] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = QjuSCQ]tMz
9/;sNX#SslS
http**t-)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.329 ns/op
# Warmup Iteration   2: 12.503 ns/op
# Warmup Iteration   3: 12.255 ns/op
# Warmup Iteration   4: 12.263 ns/op
# Warmup Iteration   5: 12.293 ns/op
Iteration   1: 12.258 ns/op
Iteration   2: 12.266 ns/op
Iteration   3: 12.276 ns/op
Iteration   4: 12.250 ns/op
Iteration   5: 12.266 ns/op
Iteration   6: 12.265 ns/op
Iteration   7: 12.256 ns/op
Iteration   8: 12.260 ns/op
Iteration   9: 12.242 ns/op
Iteration  10: 12.259 ns/op
Iteration  11: 12.265 ns/op
Iteration  12: 12.856 ns/op
Iteration  13: 12.852 ns/op
Iteration  14: 12.853 ns/op
Iteration  15: 12.857 ns/op
Iteration  16: 12.858 ns/op
Iteration  17: 12.855 ns/op
Iteration  18: 12.855 ns/op
Iteration  19: 12.852 ns/op
Iteration  20: 12.857 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.340 ns/op
# Warmup Iteration   2: 12.571 ns/op
# Warmup Iteration   3: 12.254 ns/op
# Warmup Iteration   4: 12.247 ns/op
# Warmup Iteration   5: 12.246 ns/op
Iteration   1: 12.251 ns/op
Iteration   2: 12.253 ns/op
Iteration   3: 12.256 ns/op
Iteration   4: 12.254 ns/op
Iteration   5: 12.268 ns/op
Iteration   6: 12.246 ns/op
Iteration   7: 12.251 ns/op
Iteration   8: 12.256 ns/op
Iteration   9: 12.246 ns/op
Iteration  10: 12.251 ns/op
Iteration  11: 12.250 ns/op
Iteration  12: 12.842 ns/op
Iteration  13: 12.856 ns/op
Iteration  14: 12.842 ns/op
Iteration  15: 12.844 ns/op
Iteration  16: 12.842 ns/op
Iteration  17: 12.841 ns/op
Iteration  18: 12.843 ns/op
Iteration  19: 12.850 ns/op
Iteration  20: 12.843 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 12.044 ns/op
# Warmup Iteration   2: 12.762 ns/op
# Warmup Iteration   3: 12.133 ns/op
# Warmup Iteration   4: 12.130 ns/op
# Warmup Iteration   5: 12.124 ns/op
Iteration   1: 12.113 ns/op
Iteration   2: 12.140 ns/op
Iteration   3: 12.143 ns/op
Iteration   4: 12.123 ns/op
Iteration   5: 12.111 ns/op
Iteration   6: 12.103 ns/op
Iteration   7: 12.140 ns/op
Iteration   8: 12.134 ns/op
Iteration   9: 12.128 ns/op
Iteration  10: 12.116 ns/op
Iteration  11: 12.140 ns/op
Iteration  12: 12.809 ns/op
Iteration  13: 12.822 ns/op
Iteration  14: 12.816 ns/op
Iteration  15: 12.819 ns/op
Iteration  16: 12.816 ns/op
Iteration  17: 12.816 ns/op
Iteration  18: 12.814 ns/op
Iteration  19: 12.813 ns/op
Iteration  20: 12.816 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.334 ns/op
# Warmup Iteration   2: 12.451 ns/op
# Warmup Iteration   3: 12.384 ns/op
# Warmup Iteration   4: 12.366 ns/op
# Warmup Iteration   5: 12.371 ns/op
Iteration   1: 12.411 ns/op
Iteration   2: 12.424 ns/op
Iteration   3: 12.438 ns/op
Iteration   4: 12.417 ns/op
Iteration   5: 12.394 ns/op
Iteration   6: 12.440 ns/op
Iteration   7: 12.420 ns/op
Iteration   8: 12.408 ns/op
Iteration   9: 12.427 ns/op
Iteration  10: 12.437 ns/op
Iteration  11: 12.415 ns/op
Iteration  12: 12.901 ns/op
Iteration  13: 12.899 ns/op
Iteration  14: 12.894 ns/op
Iteration  15: 12.898 ns/op
Iteration  16: 12.916 ns/op
Iteration  17: 12.895 ns/op
Iteration  18: 12.904 ns/op
Iteration  19: 12.899 ns/op
Iteration  20: 12.900 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.274 ns/op
# Warmup Iteration   2: 12.580 ns/op
# Warmup Iteration   3: 12.226 ns/op
# Warmup Iteration   4: 12.229 ns/op
# Warmup Iteration   5: 12.240 ns/op
Iteration   1: 12.225 ns/op
Iteration   2: 12.246 ns/op
Iteration   3: 12.236 ns/op
Iteration   4: 12.241 ns/op
Iteration   5: 12.243 ns/op
Iteration   6: 12.247 ns/op
Iteration   7: 12.238 ns/op
Iteration   8: 12.232 ns/op
Iteration   9: 12.227 ns/op
Iteration  10: 12.239 ns/op
Iteration  11: 12.229 ns/op
Iteration  12: 12.244 ns/op
Iteration  13: 12.224 ns/op
Iteration  14: 12.234 ns/op
Iteration  15: 12.236 ns/op
Iteration  16: 12.231 ns/op
Iteration  17: 12.224 ns/op
Iteration  18: 12.245 ns/op
Iteration  19: 12.238 ns/op
Iteration  20: 12.227 ns/op


Result "benchmark.StringContains.stringContains":
  12.471 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (12.103, 12.471, 12.916), stdev = 0.298
  CI (99.9%): [12.370, 12.572] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  QjuSCQ]tMz
9/;sNX#SslS
http**t-  avgt  100  186.403 ± 3.099  ns/op
StringContains.stringContains     http  QjuSCQ]tMz
9/;sNX#SslS
http**t-  avgt  100   12.471 ± 0.101  ns/op

Benchmark result is saved to http_32_0.75_6.csv
