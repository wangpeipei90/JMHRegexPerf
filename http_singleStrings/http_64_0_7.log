# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpRp~al>4q]^YaP-[18@po6iBx
r[nePkV']m?f	%h.ziJ\eR` ~j)P}~2!I<)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 817.998 ns/op
# Warmup Iteration   2: 846.665 ns/op
# Warmup Iteration   3: 848.559 ns/op
# Warmup Iteration   4: 847.837 ns/op
# Warmup Iteration   5: 846.914 ns/op
Iteration   1: 777.507 ns/op
Iteration   2: 768.030 ns/op
Iteration   3: 769.125 ns/op
Iteration   4: 768.614 ns/op
Iteration   5: 774.712 ns/op
Iteration   6: 768.729 ns/op
Iteration   7: 768.356 ns/op
Iteration   8: 768.560 ns/op
Iteration   9: 778.196 ns/op
Iteration  10: 767.920 ns/op
Iteration  11: 768.263 ns/op
Iteration  12: 767.664 ns/op
Iteration  13: 767.901 ns/op
Iteration  14: 780.139 ns/op
Iteration  15: 767.903 ns/op
Iteration  16: 767.823 ns/op
Iteration  17: 768.053 ns/op
Iteration  18: 779.790 ns/op
Iteration  19: 773.623 ns/op
Iteration  20: 767.777 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 802.696 ns/op
# Warmup Iteration   2: 846.861 ns/op
# Warmup Iteration   3: 814.182 ns/op
# Warmup Iteration   4: 813.233 ns/op
# Warmup Iteration   5: 814.246 ns/op
Iteration   1: 737.965 ns/op
Iteration   2: 737.727 ns/op
Iteration   3: 737.715 ns/op
Iteration   4: 737.703 ns/op
Iteration   5: 747.223 ns/op
Iteration   6: 740.175 ns/op
Iteration   7: 740.070 ns/op
Iteration   8: 740.161 ns/op
Iteration   9: 748.656 ns/op
Iteration  10: 737.640 ns/op
Iteration  11: 737.944 ns/op
Iteration  12: 738.214 ns/op
Iteration  13: 751.319 ns/op
Iteration  14: 737.827 ns/op
Iteration  15: 737.972 ns/op
Iteration  16: 738.090 ns/op
Iteration  17: 738.150 ns/op
Iteration  18: 754.675 ns/op
Iteration  19: 737.992 ns/op
Iteration  20: 738.366 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 821.572 ns/op
# Warmup Iteration   2: 841.599 ns/op
# Warmup Iteration   3: 845.601 ns/op
# Warmup Iteration   4: 845.316 ns/op
# Warmup Iteration   5: 845.462 ns/op
Iteration   1: 776.922 ns/op
Iteration   2: 769.452 ns/op
Iteration   3: 769.645 ns/op
Iteration   4: 769.205 ns/op
Iteration   5: 777.734 ns/op
Iteration   6: 771.130 ns/op
Iteration   7: 770.576 ns/op
Iteration   8: 770.582 ns/op
Iteration   9: 780.151 ns/op
Iteration  10: 769.334 ns/op
Iteration  11: 769.349 ns/op
Iteration  12: 769.187 ns/op
Iteration  13: 768.917 ns/op
Iteration  14: 781.763 ns/op
Iteration  15: 769.055 ns/op
Iteration  16: 768.871 ns/op
Iteration  17: 769.056 ns/op
Iteration  18: 785.834 ns/op
Iteration  19: 768.910 ns/op
Iteration  20: 769.163 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 811.585 ns/op
# Warmup Iteration   2: 842.795 ns/op
# Warmup Iteration   3: 846.091 ns/op
# Warmup Iteration   4: 845.486 ns/op
# Warmup Iteration   5: 845.498 ns/op
Iteration   1: 778.279 ns/op
Iteration   2: 769.994 ns/op
Iteration   3: 769.896 ns/op
Iteration   4: 769.973 ns/op
Iteration   5: 778.492 ns/op
Iteration   6: 770.113 ns/op
Iteration   7: 769.838 ns/op
Iteration   8: 770.141 ns/op
Iteration   9: 780.247 ns/op
Iteration  10: 769.927 ns/op
Iteration  11: 770.086 ns/op
Iteration  12: 770.176 ns/op
Iteration  13: 769.976 ns/op
Iteration  14: 782.654 ns/op
Iteration  15: 770.484 ns/op
Iteration  16: 770.019 ns/op
Iteration  17: 770.131 ns/op
Iteration  18: 780.844 ns/op
Iteration  19: 777.165 ns/op
Iteration  20: 770.429 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 814.105 ns/op
# Warmup Iteration   2: 840.797 ns/op
# Warmup Iteration   3: 847.637 ns/op
# Warmup Iteration   4: 847.108 ns/op
# Warmup Iteration   5: 847.704 ns/op
Iteration   1: 783.133 ns/op
Iteration   2: 772.066 ns/op
Iteration   3: 771.930 ns/op
Iteration   4: 772.122 ns/op
Iteration   5: 783.177 ns/op
Iteration   6: 778.095 ns/op
Iteration   7: 778.324 ns/op
Iteration   8: 779.226 ns/op
Iteration   9: 786.233 ns/op
Iteration  10: 772.249 ns/op
Iteration  11: 772.145 ns/op
Iteration  12: 772.161 ns/op
Iteration  13: 772.039 ns/op
Iteration  14: 792.343 ns/op
Iteration  15: 782.836 ns/op
Iteration  16: 783.082 ns/op
Iteration  17: 783.120 ns/op
Iteration  18: 782.203 ns/op
Iteration  19: 790.459 ns/op
Iteration  20: 773.310 ns/op


Result "benchmark.StringContains.regexMatches":
  767.182 ±(99.9%) 4.920 ns/op [Average]
  (min, avg, max) = (737.640, 767.182, 792.343), stdev = 14.507
  CI (99.9%): [762.262, 772.102] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpRp~al>4q]^YaP-[18@po6iBx
r[nePkV']m?f	%h.ziJ\eR` ~j)P}~2!I<)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.481 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.835 ns/op
# Warmup Iteration   4: 9.832 ns/op
# Warmup Iteration   5: 9.847 ns/op
Iteration   1: 9.842 ns/op
Iteration   2: 9.851 ns/op
Iteration   3: 9.853 ns/op
Iteration   4: 9.850 ns/op
Iteration   5: 9.855 ns/op
Iteration   6: 9.832 ns/op
Iteration   7: 9.835 ns/op
Iteration   8: 9.835 ns/op
Iteration   9: 9.844 ns/op
Iteration  10: 9.841 ns/op
Iteration  11: 9.840 ns/op
Iteration  12: 10.553 ns/op
Iteration  13: 10.552 ns/op
Iteration  14: 10.552 ns/op
Iteration  15: 10.556 ns/op
Iteration  16: 10.557 ns/op
Iteration  17: 10.554 ns/op
Iteration  18: 10.560 ns/op
Iteration  19: 10.555 ns/op
Iteration  20: 10.554 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.476 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.771 ns/op
# Warmup Iteration   4: 9.775 ns/op
# Warmup Iteration   5: 9.766 ns/op
Iteration   1: 9.783 ns/op
Iteration   2: 9.764 ns/op
Iteration   3: 9.784 ns/op
Iteration   4: 9.779 ns/op
Iteration   5: 9.765 ns/op
Iteration   6: 9.750 ns/op
Iteration   7: 9.762 ns/op
Iteration   8: 9.774 ns/op
Iteration   9: 9.773 ns/op
Iteration  10: 9.786 ns/op
Iteration  11: 9.776 ns/op
Iteration  12: 9.771 ns/op
Iteration  13: 9.771 ns/op
Iteration  14: 9.778 ns/op
Iteration  15: 9.774 ns/op
Iteration  16: 9.778 ns/op
Iteration  17: 9.763 ns/op
Iteration  18: 9.793 ns/op
Iteration  19: 9.773 ns/op
Iteration  20: 9.776 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.210 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.826 ns/op
# Warmup Iteration   4: 9.816 ns/op
# Warmup Iteration   5: 9.816 ns/op
Iteration   1: 9.830 ns/op
Iteration   2: 9.818 ns/op
Iteration   3: 9.835 ns/op
Iteration   4: 9.830 ns/op
Iteration   5: 9.823 ns/op
Iteration   6: 9.821 ns/op
Iteration   7: 9.823 ns/op
Iteration   8: 9.828 ns/op
Iteration   9: 9.829 ns/op
Iteration  10: 9.835 ns/op
Iteration  11: 9.847 ns/op
Iteration  12: 9.842 ns/op
Iteration  13: 9.831 ns/op
Iteration  14: 9.843 ns/op
Iteration  15: 9.842 ns/op
Iteration  16: 9.853 ns/op
Iteration  17: 9.833 ns/op
Iteration  18: 9.847 ns/op
Iteration  19: 9.853 ns/op
Iteration  20: 9.848 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.184 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.884 ns/op
# Warmup Iteration   4: 9.906 ns/op
# Warmup Iteration   5: 9.907 ns/op
Iteration   1: 9.888 ns/op
Iteration   2: 9.900 ns/op
Iteration   3: 9.873 ns/op
Iteration   4: 9.867 ns/op
Iteration   5: 9.871 ns/op
Iteration   6: 9.877 ns/op
Iteration   7: 9.890 ns/op
Iteration   8: 9.875 ns/op
Iteration   9: 9.874 ns/op
Iteration  10: 9.884 ns/op
Iteration  11: 9.904 ns/op
Iteration  12: 9.901 ns/op
Iteration  13: 9.903 ns/op
Iteration  14: 9.888 ns/op
Iteration  15: 9.908 ns/op
Iteration  16: 9.893 ns/op
Iteration  17: 9.893 ns/op
Iteration  18: 9.897 ns/op
Iteration  19: 9.896 ns/op
Iteration  20: 9.882 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.484 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.948 ns/op
# Warmup Iteration   4: 9.949 ns/op
# Warmup Iteration   5: 9.925 ns/op
Iteration   1: 9.940 ns/op
Iteration   2: 9.940 ns/op
Iteration   3: 9.967 ns/op
Iteration   4: 9.945 ns/op
Iteration   5: 9.939 ns/op
Iteration   6: 9.941 ns/op
Iteration   7: 9.947 ns/op
Iteration   8: 9.957 ns/op
Iteration   9: 9.947 ns/op
Iteration  10: 9.938 ns/op
Iteration  11: 9.919 ns/op
Iteration  12: 10.550 ns/op
Iteration  13: 10.552 ns/op
Iteration  14: 10.552 ns/op
Iteration  15: 10.550 ns/op
Iteration  16: 10.551 ns/op
Iteration  17: 10.552 ns/op
Iteration  18: 10.555 ns/op
Iteration  19: 10.553 ns/op
Iteration  20: 10.554 ns/op


Result "benchmark.StringContains.stringContains":
  9.976 ±(99.9%) 0.094 ns/op [Average]
  (min, avg, max) = (9.750, 9.976, 10.560), stdev = 0.277
  CI (99.9%): [9.882, 10.070] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpRp~al>4q]^YaP-[18@po6iBx
r[nePkV']m?f	%h.ziJ\eR` ~j)P}~2!I<  avgt  100  767.182 ± 4.920  ns/op
StringContains.stringContains     http  httpRp~al>4q]^YaP-[18@po6iBx
r[nePkV']m?f	%h.ziJ\eR` ~j)P}~2!I<  avgt  100    9.976 ± 0.094  ns/op

Benchmark result is saved to http_64_0_7.csv
