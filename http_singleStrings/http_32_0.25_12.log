# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = 94up8N,ohttp1"_:8YP{;#tRq*n0"/7)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 443.345 ns/op
# Warmup Iteration   2: 449.981 ns/op
# Warmup Iteration   3: 421.298 ns/op
# Warmup Iteration   4: 359.596 ns/op
# Warmup Iteration   5: 363.402 ns/op
Iteration   1: 359.501 ns/op
Iteration   2: 364.513 ns/op
Iteration   3: 359.376 ns/op
Iteration   4: 366.953 ns/op
Iteration   5: 359.658 ns/op
Iteration   6: 359.552 ns/op
Iteration   7: 368.821 ns/op
Iteration   8: 359.455 ns/op
Iteration   9: 371.914 ns/op
Iteration  10: 359.276 ns/op
Iteration  11: 361.371 ns/op
Iteration  12: 359.386 ns/op
Iteration  13: 359.487 ns/op
Iteration  14: 361.078 ns/op
Iteration  15: 359.530 ns/op
Iteration  16: 361.168 ns/op
Iteration  17: 359.429 ns/op
Iteration  18: 361.318 ns/op
Iteration  19: 360.859 ns/op
Iteration  20: 360.425 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 426.473 ns/op
# Warmup Iteration   2: 435.777 ns/op
# Warmup Iteration   3: 406.208 ns/op
# Warmup Iteration   4: 360.455 ns/op
# Warmup Iteration   5: 363.690 ns/op
Iteration   1: 360.372 ns/op
Iteration   2: 365.030 ns/op
Iteration   3: 360.415 ns/op
Iteration   4: 366.828 ns/op
Iteration   5: 360.264 ns/op
Iteration   6: 362.620 ns/op
Iteration   7: 365.876 ns/op
Iteration   8: 360.545 ns/op
Iteration   9: 370.869 ns/op
Iteration  10: 360.360 ns/op
Iteration  11: 361.946 ns/op
Iteration  12: 360.310 ns/op
Iteration  13: 360.521 ns/op
Iteration  14: 361.717 ns/op
Iteration  15: 360.204 ns/op
Iteration  16: 361.917 ns/op
Iteration  17: 360.261 ns/op
Iteration  18: 361.965 ns/op
Iteration  19: 360.419 ns/op
Iteration  20: 362.281 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 416.880 ns/op
# Warmup Iteration   2: 430.507 ns/op
# Warmup Iteration   3: 395.807 ns/op
# Warmup Iteration   4: 354.245 ns/op
# Warmup Iteration   5: 357.762 ns/op
Iteration   1: 354.110 ns/op
Iteration   2: 358.861 ns/op
Iteration   3: 354.256 ns/op
Iteration   4: 360.087 ns/op
Iteration   5: 354.080 ns/op
Iteration   6: 362.445 ns/op
Iteration   7: 354.051 ns/op
Iteration   8: 354.261 ns/op
Iteration   9: 364.208 ns/op
Iteration  10: 354.015 ns/op
Iteration  11: 356.094 ns/op
Iteration  12: 353.874 ns/op
Iteration  13: 355.596 ns/op
Iteration  14: 354.389 ns/op
Iteration  15: 355.770 ns/op
Iteration  16: 354.110 ns/op
Iteration  17: 354.337 ns/op
Iteration  18: 355.751 ns/op
Iteration  19: 354.131 ns/op
Iteration  20: 355.817 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 426.910 ns/op
# Warmup Iteration   2: 435.828 ns/op
# Warmup Iteration   3: 403.702 ns/op
# Warmup Iteration   4: 359.195 ns/op
# Warmup Iteration   5: 362.550 ns/op
Iteration   1: 359.357 ns/op
Iteration   2: 363.892 ns/op
Iteration   3: 361.129 ns/op
Iteration   4: 366.477 ns/op
Iteration   5: 359.512 ns/op
Iteration   6: 366.993 ns/op
Iteration   7: 358.531 ns/op
Iteration   8: 358.871 ns/op
Iteration   9: 369.389 ns/op
Iteration  10: 359.462 ns/op
Iteration  11: 361.968 ns/op
Iteration  12: 359.075 ns/op
Iteration  13: 360.880 ns/op
Iteration  14: 359.202 ns/op
Iteration  15: 359.183 ns/op
Iteration  16: 360.763 ns/op
Iteration  17: 359.058 ns/op
Iteration  18: 360.471 ns/op
Iteration  19: 358.726 ns/op
Iteration  20: 360.500 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 425.769 ns/op
# Warmup Iteration   2: 429.605 ns/op
# Warmup Iteration   3: 396.911 ns/op
# Warmup Iteration   4: 354.560 ns/op
# Warmup Iteration   5: 357.559 ns/op
Iteration   1: 354.123 ns/op
Iteration   2: 358.920 ns/op
Iteration   3: 353.944 ns/op
Iteration   4: 359.959 ns/op
Iteration   5: 354.152 ns/op
Iteration   6: 361.880 ns/op
Iteration   7: 354.239 ns/op
Iteration   8: 354.514 ns/op
Iteration   9: 364.228 ns/op
Iteration  10: 353.993 ns/op
Iteration  11: 357.377 ns/op
Iteration  12: 356.363 ns/op
Iteration  13: 357.236 ns/op
Iteration  14: 354.295 ns/op
Iteration  15: 355.970 ns/op
Iteration  16: 354.259 ns/op
Iteration  17: 354.404 ns/op
Iteration  18: 356.236 ns/op
Iteration  19: 354.402 ns/op
Iteration  20: 356.769 ns/op


Result "benchmark.StringContains.regexMatches":
  359.487 ±(99.9%) 1.384 ns/op [Average]
  (min, avg, max) = (353.874, 359.487, 371.914), stdev = 4.081
  CI (99.9%): [358.103, 360.871] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = 94up8N,ohttp1"_:8YP{;#tRq*n0"/7)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.215 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.980 ns/op
# Warmup Iteration   4: 9.982 ns/op
# Warmup Iteration   5: 9.981 ns/op
Iteration   1: 9.973 ns/op
Iteration   2: 9.970 ns/op
Iteration   3: 9.996 ns/op
Iteration   4: 9.997 ns/op
Iteration   5: 9.984 ns/op
Iteration   6: 9.979 ns/op
Iteration   7: 9.985 ns/op
Iteration   8: 9.966 ns/op
Iteration   9: 9.989 ns/op
Iteration  10: 9.983 ns/op
Iteration  11: 9.969 ns/op
Iteration  12: 9.977 ns/op
Iteration  13: 9.978 ns/op
Iteration  14: 9.976 ns/op
Iteration  15: 9.979 ns/op
Iteration  16: 9.983 ns/op
Iteration  17: 10.013 ns/op
Iteration  18: 10.007 ns/op
Iteration  19: 10.005 ns/op
Iteration  20: 9.989 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.239 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.866 ns/op
# Warmup Iteration   4: 9.852 ns/op
# Warmup Iteration   5: 9.870 ns/op
Iteration   1: 9.876 ns/op
Iteration   2: 9.870 ns/op
Iteration   3: 9.850 ns/op
Iteration   4: 9.851 ns/op
Iteration   5: 9.843 ns/op
Iteration   6: 9.854 ns/op
Iteration   7: 9.845 ns/op
Iteration   8: 9.853 ns/op
Iteration   9: 9.838 ns/op
Iteration  10: 9.839 ns/op
Iteration  11: 9.850 ns/op
Iteration  12: 9.833 ns/op
Iteration  13: 9.852 ns/op
Iteration  14: 9.845 ns/op
Iteration  15: 9.856 ns/op
Iteration  16: 9.855 ns/op
Iteration  17: 9.831 ns/op
Iteration  18: 9.857 ns/op
Iteration  19: 9.857 ns/op
Iteration  20: 9.852 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.206 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.858 ns/op
# Warmup Iteration   4: 9.871 ns/op
# Warmup Iteration   5: 9.863 ns/op
Iteration   1: 9.865 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.859 ns/op
Iteration   4: 9.855 ns/op
Iteration   5: 9.872 ns/op
Iteration   6: 9.868 ns/op
Iteration   7: 9.853 ns/op
Iteration   8: 9.875 ns/op
Iteration   9: 9.878 ns/op
Iteration  10: 9.866 ns/op
Iteration  11: 9.839 ns/op
Iteration  12: 9.872 ns/op
Iteration  13: 9.878 ns/op
Iteration  14: 9.847 ns/op
Iteration  15: 9.855 ns/op
Iteration  16: 9.864 ns/op
Iteration  17: 9.881 ns/op
Iteration  18: 9.843 ns/op
Iteration  19: 9.869 ns/op
Iteration  20: 9.849 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.226 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.908 ns/op
# Warmup Iteration   4: 9.887 ns/op
# Warmup Iteration   5: 9.885 ns/op
Iteration   1: 9.895 ns/op
Iteration   2: 9.878 ns/op
Iteration   3: 9.893 ns/op
Iteration   4: 9.876 ns/op
Iteration   5: 9.878 ns/op
Iteration   6: 9.887 ns/op
Iteration   7: 9.900 ns/op
Iteration   8: 9.890 ns/op
Iteration   9: 9.878 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.885 ns/op
Iteration  12: 9.883 ns/op
Iteration  13: 9.872 ns/op
Iteration  14: 9.886 ns/op
Iteration  15: 9.874 ns/op
Iteration  16: 9.859 ns/op
Iteration  17: 9.867 ns/op
Iteration  18: 9.871 ns/op
Iteration  19: 9.883 ns/op
Iteration  20: 9.872 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.225 ns/op
# Warmup Iteration   2: 9.724 ns/op
# Warmup Iteration   3: 9.998 ns/op
# Warmup Iteration   4: 9.979 ns/op
# Warmup Iteration   5: 9.986 ns/op
Iteration   1: 9.982 ns/op
Iteration   2: 9.975 ns/op
Iteration   3: 9.968 ns/op
Iteration   4: 9.985 ns/op
Iteration   5: 9.990 ns/op
Iteration   6: 9.969 ns/op
Iteration   7: 9.988 ns/op
Iteration   8: 10.009 ns/op
Iteration   9: 9.995 ns/op
Iteration  10: 9.996 ns/op
Iteration  11: 9.981 ns/op
Iteration  12: 12.284 ns/op
Iteration  13: 12.285 ns/op
Iteration  14: 12.284 ns/op
Iteration  15: 12.284 ns/op
Iteration  16: 12.285 ns/op
Iteration  17: 12.284 ns/op
Iteration  18: 12.285 ns/op
Iteration  19: 12.283 ns/op
Iteration  20: 12.285 ns/op


Result "benchmark.StringContains.stringContains":
  10.119 ±(99.9%) 0.233 ns/op [Average]
  (min, avg, max) = (9.831, 10.119, 12.285), stdev = 0.687
  CI (99.9%): [9.887, 10.352] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  94up8N,ohttp1"_:8YP{;#tRq*n0"/7  avgt  100  359.487 ± 1.384  ns/op
StringContains.stringContains     http  94up8N,ohttp1"_:8YP{;#tRq*n0"/7  avgt  100   10.119 ± 0.233  ns/op

Benchmark result is saved to http_32_0.25_12.csv
