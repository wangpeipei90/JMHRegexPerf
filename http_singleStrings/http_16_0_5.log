# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpPmm6PL.WM.h/)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 346.774 ns/op
# Warmup Iteration   2: 355.979 ns/op
# Warmup Iteration   3: 273.327 ns/op
# Warmup Iteration   4: 267.049 ns/op
# Warmup Iteration   5: 264.307 ns/op
Iteration   1: 269.559 ns/op
Iteration   2: 269.751 ns/op
Iteration   3: 264.244 ns/op
Iteration   4: 270.403 ns/op
Iteration   5: 267.322 ns/op
Iteration   6: 269.070 ns/op
Iteration   7: 265.722 ns/op
Iteration   8: 264.215 ns/op
Iteration   9: 266.535 ns/op
Iteration  10: 266.025 ns/op
Iteration  11: 266.630 ns/op
Iteration  12: 265.923 ns/op
Iteration  13: 264.432 ns/op
Iteration  14: 265.626 ns/op
Iteration  15: 264.158 ns/op
Iteration  16: 265.525 ns/op
Iteration  17: 265.692 ns/op
Iteration  18: 264.295 ns/op
Iteration  19: 265.632 ns/op
Iteration  20: 264.516 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 341.011 ns/op
# Warmup Iteration   2: 346.401 ns/op
# Warmup Iteration   3: 269.965 ns/op
# Warmup Iteration   4: 266.750 ns/op
# Warmup Iteration   5: 263.695 ns/op
Iteration   1: 267.152 ns/op
Iteration   2: 268.332 ns/op
Iteration   3: 263.617 ns/op
Iteration   4: 269.732 ns/op
Iteration   5: 271.564 ns/op
Iteration   6: 263.762 ns/op
Iteration   7: 265.202 ns/op
Iteration   8: 263.785 ns/op
Iteration   9: 265.103 ns/op
Iteration  10: 263.741 ns/op
Iteration  11: 265.290 ns/op
Iteration  12: 265.944 ns/op
Iteration  13: 263.637 ns/op
Iteration  14: 265.222 ns/op
Iteration  15: 263.635 ns/op
Iteration  16: 265.185 ns/op
Iteration  17: 265.212 ns/op
Iteration  18: 263.676 ns/op
Iteration  19: 266.676 ns/op
Iteration  20: 263.852 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 342.138 ns/op
# Warmup Iteration   2: 345.289 ns/op
# Warmup Iteration   3: 272.016 ns/op
# Warmup Iteration   4: 269.002 ns/op
# Warmup Iteration   5: 266.310 ns/op
Iteration   1: 269.047 ns/op
Iteration   2: 270.715 ns/op
Iteration   3: 266.126 ns/op
Iteration   4: 271.712 ns/op
Iteration   5: 269.358 ns/op
Iteration   6: 270.552 ns/op
Iteration   7: 267.484 ns/op
Iteration   8: 266.310 ns/op
Iteration   9: 267.548 ns/op
Iteration  10: 267.273 ns/op
Iteration  11: 271.158 ns/op
Iteration  12: 267.863 ns/op
Iteration  13: 265.914 ns/op
Iteration  14: 267.662 ns/op
Iteration  15: 266.172 ns/op
Iteration  16: 267.807 ns/op
Iteration  17: 266.447 ns/op
Iteration  18: 267.749 ns/op
Iteration  19: 268.917 ns/op
Iteration  20: 270.161 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 340.472 ns/op
# Warmup Iteration   2: 353.925 ns/op
# Warmup Iteration   3: 272.011 ns/op
# Warmup Iteration   4: 266.854 ns/op
# Warmup Iteration   5: 264.088 ns/op
Iteration   1: 268.078 ns/op
Iteration   2: 269.400 ns/op
Iteration   3: 266.354 ns/op
Iteration   4: 272.229 ns/op
Iteration   5: 269.071 ns/op
Iteration   6: 269.370 ns/op
Iteration   7: 265.517 ns/op
Iteration   8: 264.743 ns/op
Iteration   9: 265.583 ns/op
Iteration  10: 264.404 ns/op
Iteration  11: 265.621 ns/op
Iteration  12: 265.940 ns/op
Iteration  13: 265.335 ns/op
Iteration  14: 266.218 ns/op
Iteration  15: 264.524 ns/op
Iteration  16: 265.997 ns/op
Iteration  17: 266.086 ns/op
Iteration  18: 264.617 ns/op
Iteration  19: 266.095 ns/op
Iteration  20: 264.480 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 344.593 ns/op
# Warmup Iteration   2: 354.264 ns/op
# Warmup Iteration   3: 276.628 ns/op
# Warmup Iteration   4: 269.919 ns/op
# Warmup Iteration   5: 266.133 ns/op
Iteration   1: 269.080 ns/op
Iteration   2: 270.625 ns/op
Iteration   3: 266.145 ns/op
Iteration   4: 271.948 ns/op
Iteration   5: 266.148 ns/op
Iteration   6: 273.516 ns/op
Iteration   7: 267.059 ns/op
Iteration   8: 265.841 ns/op
Iteration   9: 267.173 ns/op
Iteration  10: 266.071 ns/op
Iteration  11: 267.068 ns/op
Iteration  12: 266.850 ns/op
Iteration  13: 265.928 ns/op
Iteration  14: 267.244 ns/op
Iteration  15: 265.873 ns/op
Iteration  16: 267.294 ns/op
Iteration  17: 265.931 ns/op
Iteration  18: 267.453 ns/op
Iteration  19: 269.145 ns/op
Iteration  20: 267.768 ns/op


Result "benchmark.StringContains.regexMatches":
  266.854 ±(99.9%) 0.763 ns/op [Average]
  (min, avg, max) = (263.617, 266.854, 273.516), stdev = 2.250
  CI (99.9%): [266.091, 267.617] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpPmm6PL.WM.h/)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.212 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.897 ns/op
# Warmup Iteration   4: 9.902 ns/op
# Warmup Iteration   5: 9.897 ns/op
Iteration   1: 9.907 ns/op
Iteration   2: 9.904 ns/op
Iteration   3: 9.905 ns/op
Iteration   4: 9.886 ns/op
Iteration   5: 9.885 ns/op
Iteration   6: 9.905 ns/op
Iteration   7: 9.900 ns/op
Iteration   8: 9.897 ns/op
Iteration   9: 9.910 ns/op
Iteration  10: 9.904 ns/op
Iteration  11: 9.910 ns/op
Iteration  12: 9.885 ns/op
Iteration  13: 9.909 ns/op
Iteration  14: 9.902 ns/op
Iteration  15: 9.909 ns/op
Iteration  16: 9.902 ns/op
Iteration  17: 9.911 ns/op
Iteration  18: 9.906 ns/op
Iteration  19: 9.916 ns/op
Iteration  20: 9.897 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.207 ns/op
# Warmup Iteration   2: 9.706 ns/op
# Warmup Iteration   3: 9.838 ns/op
# Warmup Iteration   4: 9.820 ns/op
# Warmup Iteration   5: 9.821 ns/op
Iteration   1: 9.835 ns/op
Iteration   2: 9.809 ns/op
Iteration   3: 9.828 ns/op
Iteration   4: 9.840 ns/op
Iteration   5: 9.840 ns/op
Iteration   6: 9.822 ns/op
Iteration   7: 9.831 ns/op
Iteration   8: 9.835 ns/op
Iteration   9: 9.814 ns/op
Iteration  10: 9.824 ns/op
Iteration  11: 9.816 ns/op
Iteration  12: 9.838 ns/op
Iteration  13: 9.844 ns/op
Iteration  14: 9.861 ns/op
Iteration  15: 9.832 ns/op
Iteration  16: 9.823 ns/op
Iteration  17: 9.819 ns/op
Iteration  18: 9.828 ns/op
Iteration  19: 9.837 ns/op
Iteration  20: 9.840 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.223 ns/op
# Warmup Iteration   2: 9.729 ns/op
# Warmup Iteration   3: 9.883 ns/op
# Warmup Iteration   4: 9.897 ns/op
# Warmup Iteration   5: 9.878 ns/op
Iteration   1: 9.892 ns/op
Iteration   2: 9.895 ns/op
Iteration   3: 9.877 ns/op
Iteration   4: 9.887 ns/op
Iteration   5: 9.883 ns/op
Iteration   6: 9.873 ns/op
Iteration   7: 9.880 ns/op
Iteration   8: 9.870 ns/op
Iteration   9: 9.858 ns/op
Iteration  10: 9.858 ns/op
Iteration  11: 9.861 ns/op
Iteration  12: 9.864 ns/op
Iteration  13: 9.856 ns/op
Iteration  14: 9.855 ns/op
Iteration  15: 9.858 ns/op
Iteration  16: 9.877 ns/op
Iteration  17: 9.879 ns/op
Iteration  18: 9.873 ns/op
Iteration  19: 9.894 ns/op
Iteration  20: 9.872 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 13.176 ns/op
# Warmup Iteration   2: 12.713 ns/op
# Warmup Iteration   3: 12.288 ns/op
# Warmup Iteration   4: 12.287 ns/op
# Warmup Iteration   5: 12.288 ns/op
Iteration   1: 12.289 ns/op
Iteration   2: 12.287 ns/op
Iteration   3: 12.290 ns/op
Iteration   4: 12.289 ns/op
Iteration   5: 12.289 ns/op
Iteration   6: 12.287 ns/op
Iteration   7: 12.287 ns/op
Iteration   8: 12.308 ns/op
Iteration   9: 12.287 ns/op
Iteration  10: 12.287 ns/op
Iteration  11: 12.289 ns/op
Iteration  12: 9.850 ns/op
Iteration  13: 9.870 ns/op
Iteration  14: 9.859 ns/op
Iteration  15: 9.854 ns/op
Iteration  16: 9.857 ns/op
Iteration  17: 9.865 ns/op
Iteration  18: 9.860 ns/op
Iteration  19: 9.860 ns/op
Iteration  20: 9.876 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.206 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.854 ns/op
# Warmup Iteration   4: 9.880 ns/op
# Warmup Iteration   5: 9.854 ns/op
Iteration   1: 9.861 ns/op
Iteration   2: 9.847 ns/op
Iteration   3: 9.856 ns/op
Iteration   4: 9.859 ns/op
Iteration   5: 9.853 ns/op
Iteration   6: 9.875 ns/op
Iteration   7: 9.856 ns/op
Iteration   8: 9.862 ns/op
Iteration   9: 9.865 ns/op
Iteration  10: 9.859 ns/op
Iteration  11: 9.863 ns/op
Iteration  12: 9.880 ns/op
Iteration  13: 9.878 ns/op
Iteration  14: 9.880 ns/op
Iteration  15: 9.871 ns/op
Iteration  16: 9.845 ns/op
Iteration  17: 9.866 ns/op
Iteration  18: 9.866 ns/op
Iteration  19: 9.851 ns/op
Iteration  20: 9.849 ns/op


Result "benchmark.StringContains.stringContains":
  10.133 ±(99.9%) 0.259 ns/op [Average]
  (min, avg, max) = (9.809, 10.133, 12.308), stdev = 0.762
  CI (99.9%): [9.875, 10.392] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpPmm6PL.WM.h/  avgt  100  266.854 ± 0.763  ns/op
StringContains.stringContains     http  httpPmm6PL.WM.h/  avgt  100   10.133 ± 0.259  ns/op

Benchmark result is saved to http_16_0_5.csv
