# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = %|)pQ?kIy8RqbB*P)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 186.284 ns/op
# Warmup Iteration   2: 110.989 ns/op
# Warmup Iteration   3: 105.078 ns/op
# Warmup Iteration   4: 104.186 ns/op
# Warmup Iteration   5: 105.266 ns/op
Iteration   1: 102.388 ns/op
Iteration   2: 102.951 ns/op
Iteration   3: 102.412 ns/op
Iteration   4: 102.830 ns/op
Iteration   5: 102.458 ns/op
Iteration   6: 102.615 ns/op
Iteration   7: 102.111 ns/op
Iteration   8: 102.261 ns/op
Iteration   9: 102.061 ns/op
Iteration  10: 102.308 ns/op
Iteration  11: 102.150 ns/op
Iteration  12: 102.412 ns/op
Iteration  13: 102.105 ns/op
Iteration  14: 102.387 ns/op
Iteration  15: 102.918 ns/op
Iteration  16: 102.498 ns/op
Iteration  17: 102.719 ns/op
Iteration  18: 102.263 ns/op
Iteration  19: 102.726 ns/op
Iteration  20: 102.258 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 182.837 ns/op
# Warmup Iteration   2: 110.422 ns/op
# Warmup Iteration   3: 105.254 ns/op
# Warmup Iteration   4: 104.613 ns/op
# Warmup Iteration   5: 105.663 ns/op
Iteration   1: 102.690 ns/op
Iteration   2: 103.163 ns/op
Iteration   3: 102.621 ns/op
Iteration   4: 103.157 ns/op
Iteration   5: 102.695 ns/op
Iteration   6: 102.834 ns/op
Iteration   7: 102.699 ns/op
Iteration   8: 103.205 ns/op
Iteration   9: 102.364 ns/op
Iteration  10: 102.479 ns/op
Iteration  11: 102.409 ns/op
Iteration  12: 102.652 ns/op
Iteration  13: 102.378 ns/op
Iteration  14: 102.614 ns/op
Iteration  15: 102.320 ns/op
Iteration  16: 102.571 ns/op
Iteration  17: 102.456 ns/op
Iteration  18: 102.772 ns/op
Iteration  19: 102.482 ns/op
Iteration  20: 102.800 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 181.189 ns/op
# Warmup Iteration   2: 109.098 ns/op
# Warmup Iteration   3: 105.105 ns/op
# Warmup Iteration   4: 104.224 ns/op
# Warmup Iteration   5: 105.584 ns/op
Iteration   1: 102.445 ns/op
Iteration   2: 103.074 ns/op
Iteration   3: 102.556 ns/op
Iteration   4: 102.981 ns/op
Iteration   5: 102.395 ns/op
Iteration   6: 102.609 ns/op
Iteration   7: 102.507 ns/op
Iteration   8: 102.324 ns/op
Iteration   9: 102.032 ns/op
Iteration  10: 104.603 ns/op
Iteration  11: 102.222 ns/op
Iteration  12: 102.320 ns/op
Iteration  13: 102.111 ns/op
Iteration  14: 102.329 ns/op
Iteration  15: 102.059 ns/op
Iteration  16: 102.392 ns/op
Iteration  17: 102.529 ns/op
Iteration  18: 102.109 ns/op
Iteration  19: 102.398 ns/op
Iteration  20: 102.273 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 186.571 ns/op
# Warmup Iteration   2: 116.038 ns/op
# Warmup Iteration   3: 108.515 ns/op
# Warmup Iteration   4: 110.083 ns/op
# Warmup Iteration   5: 109.608 ns/op
Iteration   1: 107.648 ns/op
Iteration   2: 108.043 ns/op
Iteration   3: 107.930 ns/op
Iteration   4: 106.906 ns/op
Iteration   5: 107.920 ns/op
Iteration   6: 106.959 ns/op
Iteration   7: 107.207 ns/op
Iteration   8: 106.644 ns/op
Iteration   9: 106.663 ns/op
Iteration  10: 106.904 ns/op
Iteration  11: 106.795 ns/op
Iteration  12: 107.153 ns/op
Iteration  13: 106.758 ns/op
Iteration  14: 107.057 ns/op
Iteration  15: 107.024 ns/op
Iteration  16: 107.201 ns/op
Iteration  17: 107.627 ns/op
Iteration  18: 107.432 ns/op
Iteration  19: 106.819 ns/op
Iteration  20: 106.846 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 182.017 ns/op
# Warmup Iteration   2: 110.026 ns/op
# Warmup Iteration   3: 105.008 ns/op
# Warmup Iteration   4: 104.141 ns/op
# Warmup Iteration   5: 105.377 ns/op
Iteration   1: 102.770 ns/op
Iteration   2: 103.065 ns/op
Iteration   3: 102.269 ns/op
Iteration   4: 102.725 ns/op
Iteration   5: 102.336 ns/op
Iteration   6: 103.106 ns/op
Iteration   7: 102.075 ns/op
Iteration   8: 102.363 ns/op
Iteration   9: 102.169 ns/op
Iteration  10: 102.460 ns/op
Iteration  11: 102.236 ns/op
Iteration  12: 102.553 ns/op
Iteration  13: 102.241 ns/op
Iteration  14: 102.634 ns/op
Iteration  15: 102.250 ns/op
Iteration  16: 102.767 ns/op
Iteration  17: 102.241 ns/op
Iteration  18: 102.382 ns/op
Iteration  19: 102.537 ns/op
Iteration  20: 102.216 ns/op


Result "benchmark.StringContains.regexMatches":
  103.454 ±(99.9%) 0.648 ns/op [Average]
  (min, avg, max) = (102.032, 103.454, 108.043), stdev = 1.910
  CI (99.9%): [102.806, 104.102] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = %|)pQ?kIy8RqbB*P)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 8.752 ns/op
# Warmup Iteration   2: 8.981 ns/op
# Warmup Iteration   3: 8.936 ns/op
# Warmup Iteration   4: 8.943 ns/op
# Warmup Iteration   5: 8.936 ns/op
Iteration   1: 8.936 ns/op
Iteration   2: 8.941 ns/op
Iteration   3: 8.937 ns/op
Iteration   4: 8.935 ns/op
Iteration   5: 8.936 ns/op
Iteration   6: 8.936 ns/op
Iteration   7: 8.946 ns/op
Iteration   8: 8.937 ns/op
Iteration   9: 8.935 ns/op
Iteration  10: 8.935 ns/op
Iteration  11: 8.936 ns/op
Iteration  12: 8.937 ns/op
Iteration  13: 8.936 ns/op
Iteration  14: 8.935 ns/op
Iteration  15: 8.937 ns/op
Iteration  16: 8.936 ns/op
Iteration  17: 8.936 ns/op
Iteration  18: 8.936 ns/op
Iteration  19: 8.935 ns/op
Iteration  20: 8.936 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 8.743 ns/op
# Warmup Iteration   2: 8.991 ns/op
# Warmup Iteration   3: 8.937 ns/op
# Warmup Iteration   4: 8.935 ns/op
# Warmup Iteration   5: 8.935 ns/op
Iteration   1: 8.936 ns/op
Iteration   2: 8.936 ns/op
Iteration   3: 8.936 ns/op
Iteration   4: 8.935 ns/op
Iteration   5: 8.936 ns/op
Iteration   6: 8.936 ns/op
Iteration   7: 8.937 ns/op
Iteration   8: 8.937 ns/op
Iteration   9: 8.935 ns/op
Iteration  10: 8.935 ns/op
Iteration  11: 8.936 ns/op
Iteration  12: 8.946 ns/op
Iteration  13: 8.936 ns/op
Iteration  14: 8.935 ns/op
Iteration  15: 8.935 ns/op
Iteration  16: 8.936 ns/op
Iteration  17: 8.942 ns/op
Iteration  18: 8.936 ns/op
Iteration  19: 8.935 ns/op
Iteration  20: 8.937 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 8.634 ns/op
# Warmup Iteration   2: 9.020 ns/op
# Warmup Iteration   3: 9.009 ns/op
# Warmup Iteration   4: 9.026 ns/op
# Warmup Iteration   5: 9.017 ns/op
Iteration   1: 9.036 ns/op
Iteration   2: 9.023 ns/op
Iteration   3: 9.005 ns/op
Iteration   4: 9.017 ns/op
Iteration   5: 9.010 ns/op
Iteration   6: 9.014 ns/op
Iteration   7: 9.036 ns/op
Iteration   8: 9.029 ns/op
Iteration   9: 9.012 ns/op
Iteration  10: 9.007 ns/op
Iteration  11: 9.039 ns/op
Iteration  12: 9.044 ns/op
Iteration  13: 9.036 ns/op
Iteration  14: 9.028 ns/op
Iteration  15: 9.036 ns/op
Iteration  16: 9.046 ns/op
Iteration  17: 9.073 ns/op
Iteration  18: 9.067 ns/op
Iteration  19: 9.059 ns/op
Iteration  20: 9.041 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 8.767 ns/op
# Warmup Iteration   2: 8.993 ns/op
# Warmup Iteration   3: 8.936 ns/op
# Warmup Iteration   4: 8.934 ns/op
# Warmup Iteration   5: 8.935 ns/op
Iteration   1: 8.935 ns/op
Iteration   2: 8.935 ns/op
Iteration   3: 8.935 ns/op
Iteration   4: 8.934 ns/op
Iteration   5: 8.934 ns/op
Iteration   6: 8.935 ns/op
Iteration   7: 8.934 ns/op
Iteration   8: 8.949 ns/op
Iteration   9: 8.934 ns/op
Iteration  10: 8.940 ns/op
Iteration  11: 8.935 ns/op
Iteration  12: 8.934 ns/op
Iteration  13: 8.935 ns/op
Iteration  14: 8.935 ns/op
Iteration  15: 8.934 ns/op
Iteration  16: 8.935 ns/op
Iteration  17: 8.934 ns/op
Iteration  18: 8.934 ns/op
Iteration  19: 8.935 ns/op
Iteration  20: 8.949 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 8.661 ns/op
# Warmup Iteration   2: 8.970 ns/op
# Warmup Iteration   3: 8.943 ns/op
# Warmup Iteration   4: 8.944 ns/op
# Warmup Iteration   5: 8.944 ns/op
Iteration   1: 8.944 ns/op
Iteration   2: 8.943 ns/op
Iteration   3: 8.943 ns/op
Iteration   4: 8.946 ns/op
Iteration   5: 8.943 ns/op
Iteration   6: 8.945 ns/op
Iteration   7: 8.944 ns/op
Iteration   8: 8.944 ns/op
Iteration   9: 8.944 ns/op
Iteration  10: 8.943 ns/op
Iteration  11: 8.944 ns/op
Iteration  12: 8.943 ns/op
Iteration  13: 8.943 ns/op
Iteration  14: 8.944 ns/op
Iteration  15: 8.943 ns/op
Iteration  16: 8.946 ns/op
Iteration  17: 8.943 ns/op
Iteration  18: 8.943 ns/op
Iteration  19: 8.945 ns/op
Iteration  20: 8.944 ns/op


Result "benchmark.StringContains.stringContains":
  8.957 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (8.934, 8.957, 9.073), stdev = 0.039
  CI (99.9%): [8.944, 8.971] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  %|)pQ?kIy8RqbB*P  avgt  100  103.454 ± 0.648  ns/op
StringContains.stringContains     http  %|)pQ?kIy8RqbB*P  avgt  100    8.957 ± 0.013  ns/op

Benchmark result is saved to http_16_1_1.csv
