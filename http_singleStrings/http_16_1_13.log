# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = U=GkWP@)<9Ixq)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 184.167 ns/op
# Warmup Iteration   2: 109.908 ns/op
# Warmup Iteration   3: 105.267 ns/op
# Warmup Iteration   4: 104.400 ns/op
# Warmup Iteration   5: 105.614 ns/op
Iteration   1: 102.569 ns/op
Iteration   2: 103.092 ns/op
Iteration   3: 102.568 ns/op
Iteration   4: 103.014 ns/op
Iteration   5: 102.695 ns/op
Iteration   6: 102.813 ns/op
Iteration   7: 102.409 ns/op
Iteration   8: 102.534 ns/op
Iteration   9: 102.366 ns/op
Iteration  10: 102.500 ns/op
Iteration  11: 102.367 ns/op
Iteration  12: 102.539 ns/op
Iteration  13: 103.298 ns/op
Iteration  14: 102.694 ns/op
Iteration  15: 102.605 ns/op
Iteration  16: 103.029 ns/op
Iteration  17: 102.726 ns/op
Iteration  18: 102.866 ns/op
Iteration  19: 102.547 ns/op
Iteration  20: 102.851 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 179.517 ns/op
# Warmup Iteration   2: 106.073 ns/op
# Warmup Iteration   3: 102.452 ns/op
# Warmup Iteration   4: 101.720 ns/op
# Warmup Iteration   5: 103.109 ns/op
Iteration   1: 100.005 ns/op
Iteration   2: 100.339 ns/op
Iteration   3: 100.246 ns/op
Iteration   4: 99.818 ns/op
Iteration   5: 100.687 ns/op
Iteration   6: 99.648 ns/op
Iteration   7: 99.787 ns/op
Iteration   8: 99.653 ns/op
Iteration   9: 99.804 ns/op
Iteration  10: 99.773 ns/op
Iteration  11: 100.181 ns/op
Iteration  12: 99.748 ns/op
Iteration  13: 100.005 ns/op
Iteration  14: 100.091 ns/op
Iteration  15: 99.605 ns/op
Iteration  16: 99.803 ns/op
Iteration  17: 99.665 ns/op
Iteration  18: 100.134 ns/op
Iteration  19: 100.441 ns/op
Iteration  20: 100.064 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 187.541 ns/op
# Warmup Iteration   2: 117.011 ns/op
# Warmup Iteration   3: 108.061 ns/op
# Warmup Iteration   4: 109.741 ns/op
# Warmup Iteration   5: 109.222 ns/op
Iteration   1: 107.026 ns/op
Iteration   2: 106.570 ns/op
Iteration   3: 106.841 ns/op
Iteration   4: 106.463 ns/op
Iteration   5: 106.878 ns/op
Iteration   6: 106.687 ns/op
Iteration   7: 106.671 ns/op
Iteration   8: 106.340 ns/op
Iteration   9: 106.522 ns/op
Iteration  10: 106.454 ns/op
Iteration  11: 106.505 ns/op
Iteration  12: 106.618 ns/op
Iteration  13: 106.409 ns/op
Iteration  14: 106.644 ns/op
Iteration  15: 106.244 ns/op
Iteration  16: 106.401 ns/op
Iteration  17: 106.486 ns/op
Iteration  18: 106.903 ns/op
Iteration  19: 106.335 ns/op
Iteration  20: 106.836 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 183.076 ns/op
# Warmup Iteration   2: 112.929 ns/op
# Warmup Iteration   3: 107.971 ns/op
# Warmup Iteration   4: 107.041 ns/op
# Warmup Iteration   5: 108.142 ns/op
Iteration   1: 104.951 ns/op
Iteration   2: 105.078 ns/op
Iteration   3: 105.475 ns/op
Iteration   4: 105.105 ns/op
Iteration   5: 105.619 ns/op
Iteration   6: 105.238 ns/op
Iteration   7: 105.206 ns/op
Iteration   8: 104.958 ns/op
Iteration   9: 104.937 ns/op
Iteration  10: 104.788 ns/op
Iteration  11: 105.042 ns/op
Iteration  12: 105.039 ns/op
Iteration  13: 105.284 ns/op
Iteration  14: 105.149 ns/op
Iteration  15: 105.173 ns/op
Iteration  16: 105.147 ns/op
Iteration  17: 105.357 ns/op
Iteration  18: 105.186 ns/op
Iteration  19: 105.732 ns/op
Iteration  20: 105.120 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 180.277 ns/op
# Warmup Iteration   2: 107.222 ns/op
# Warmup Iteration   3: 102.563 ns/op
# Warmup Iteration   4: 101.665 ns/op
# Warmup Iteration   5: 102.760 ns/op
Iteration   1: 99.897 ns/op
Iteration   2: 100.341 ns/op
Iteration   3: 99.914 ns/op
Iteration   4: 100.375 ns/op
Iteration   5: 100.451 ns/op
Iteration   6: 100.666 ns/op
Iteration   7: 99.799 ns/op
Iteration   8: 99.686 ns/op
Iteration   9: 99.847 ns/op
Iteration  10: 99.628 ns/op
Iteration  11: 99.997 ns/op
Iteration  12: 100.032 ns/op
Iteration  13: 99.755 ns/op
Iteration  14: 100.382 ns/op
Iteration  15: 99.980 ns/op
Iteration  16: 104.725 ns/op
Iteration  17: 100.174 ns/op
Iteration  18: 100.471 ns/op
Iteration  19: 99.965 ns/op
Iteration  20: 99.915 ns/op


Result "benchmark.StringContains.regexMatches":
  102.950 ±(99.9%) 0.908 ns/op [Average]
  (min, avg, max) = (99.605, 102.950, 107.026), stdev = 2.679
  CI (99.9%): [102.042, 103.858] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = U=GkWP@)<9Ixq)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 8.745 ns/op
# Warmup Iteration   2: 8.981 ns/op
# Warmup Iteration   3: 8.969 ns/op
# Warmup Iteration   4: 8.958 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.978 ns/op
Iteration   2: 8.970 ns/op
Iteration   3: 8.970 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.955 ns/op
Iteration   6: 8.969 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.953 ns/op
Iteration   9: 8.958 ns/op
Iteration  10: 8.958 ns/op
Iteration  11: 8.953 ns/op
Iteration  12: 8.947 ns/op
Iteration  13: 8.953 ns/op
Iteration  14: 8.955 ns/op
Iteration  15: 8.952 ns/op
Iteration  16: 8.954 ns/op
Iteration  17: 8.959 ns/op
Iteration  18: 8.956 ns/op
Iteration  19: 8.957 ns/op
Iteration  20: 8.969 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 8.672 ns/op
# Warmup Iteration   2: 8.987 ns/op
# Warmup Iteration   3: 8.945 ns/op
# Warmup Iteration   4: 8.945 ns/op
# Warmup Iteration   5: 8.944 ns/op
Iteration   1: 8.945 ns/op
Iteration   2: 8.945 ns/op
Iteration   3: 8.944 ns/op
Iteration   4: 8.945 ns/op
Iteration   5: 8.944 ns/op
Iteration   6: 8.945 ns/op
Iteration   7: 8.944 ns/op
Iteration   8: 8.959 ns/op
Iteration   9: 8.945 ns/op
Iteration  10: 8.944 ns/op
Iteration  11: 8.945 ns/op
Iteration  12: 8.946 ns/op
Iteration  13: 8.945 ns/op
Iteration  14: 8.946 ns/op
Iteration  15: 8.945 ns/op
Iteration  16: 8.945 ns/op
Iteration  17: 8.946 ns/op
Iteration  18: 8.945 ns/op
Iteration  19: 8.946 ns/op
Iteration  20: 8.960 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 8.748 ns/op
# Warmup Iteration   2: 8.976 ns/op
# Warmup Iteration   3: 8.934 ns/op
# Warmup Iteration   4: 8.933 ns/op
# Warmup Iteration   5: 8.932 ns/op
Iteration   1: 8.932 ns/op
Iteration   2: 8.932 ns/op
Iteration   3: 8.932 ns/op
Iteration   4: 8.933 ns/op
Iteration   5: 8.932 ns/op
Iteration   6: 8.932 ns/op
Iteration   7: 8.933 ns/op
Iteration   8: 8.933 ns/op
Iteration   9: 8.933 ns/op
Iteration  10: 8.932 ns/op
Iteration  11: 8.934 ns/op
Iteration  12: 8.933 ns/op
Iteration  13: 8.933 ns/op
Iteration  14: 8.933 ns/op
Iteration  15: 8.933 ns/op
Iteration  16: 8.935 ns/op
Iteration  17: 8.933 ns/op
Iteration  18: 8.932 ns/op
Iteration  19: 8.933 ns/op
Iteration  20: 8.934 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 8.640 ns/op
# Warmup Iteration   2: 9.026 ns/op
# Warmup Iteration   3: 8.944 ns/op
# Warmup Iteration   4: 8.944 ns/op
# Warmup Iteration   5: 8.945 ns/op
Iteration   1: 8.944 ns/op
Iteration   2: 8.945 ns/op
Iteration   3: 8.944 ns/op
Iteration   4: 8.944 ns/op
Iteration   5: 8.944 ns/op
Iteration   6: 8.944 ns/op
Iteration   7: 8.946 ns/op
Iteration   8: 8.945 ns/op
Iteration   9: 8.944 ns/op
Iteration  10: 8.944 ns/op
Iteration  11: 8.944 ns/op
Iteration  12: 8.945 ns/op
Iteration  13: 8.943 ns/op
Iteration  14: 8.944 ns/op
Iteration  15: 8.944 ns/op
Iteration  16: 8.945 ns/op
Iteration  17: 8.945 ns/op
Iteration  18: 8.944 ns/op
Iteration  19: 8.944 ns/op
Iteration  20: 8.944 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 8.751 ns/op
# Warmup Iteration   2: 8.981 ns/op
# Warmup Iteration   3: 9.005 ns/op
# Warmup Iteration   4: 8.982 ns/op
# Warmup Iteration   5: 8.984 ns/op
Iteration   1: 9.020 ns/op
Iteration   2: 8.996 ns/op
Iteration   3: 9.003 ns/op
Iteration   4: 8.999 ns/op
Iteration   5: 9.009 ns/op
Iteration   6: 8.988 ns/op
Iteration   7: 9.024 ns/op
Iteration   8: 9.003 ns/op
Iteration   9: 9.014 ns/op
Iteration  10: 9.015 ns/op
Iteration  11: 9.001 ns/op
Iteration  12: 9.009 ns/op
Iteration  13: 8.999 ns/op
Iteration  14: 9.007 ns/op
Iteration  15: 9.016 ns/op
Iteration  16: 9.032 ns/op
Iteration  17: 9.012 ns/op
Iteration  18: 9.026 ns/op
Iteration  19: 9.027 ns/op
Iteration  20: 9.034 ns/op


Result "benchmark.StringContains.stringContains":
  8.959 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (8.932, 8.959, 9.034), stdev = 0.029
  CI (99.9%): [8.949, 8.969] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  U=GkWP@)<9Ixq  avgt  100  102.950 ± 0.908  ns/op
StringContains.stringContains     http  U=GkWP@)<9Ixq  avgt  100    8.959 ± 0.010  ns/op

Benchmark result is saved to http_16_1_13.csv
