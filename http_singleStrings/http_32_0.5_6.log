# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = y\q~QxnyPu4d1m7nhttpV42#I[Ne_G)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 359.238 ns/op
# Warmup Iteration   2: 362.399 ns/op
# Warmup Iteration   3: 301.683 ns/op
# Warmup Iteration   4: 291.019 ns/op
# Warmup Iteration   5: 288.132 ns/op
Iteration   1: 292.067 ns/op
Iteration   2: 288.192 ns/op
Iteration   3: 293.356 ns/op
Iteration   4: 294.616 ns/op
Iteration   5: 287.933 ns/op
Iteration   6: 296.280 ns/op
Iteration   7: 287.903 ns/op
Iteration   8: 289.508 ns/op
Iteration   9: 288.054 ns/op
Iteration  10: 289.129 ns/op
Iteration  11: 288.123 ns/op
Iteration  12: 289.300 ns/op
Iteration  13: 287.993 ns/op
Iteration  14: 290.449 ns/op
Iteration  15: 288.100 ns/op
Iteration  16: 290.030 ns/op
Iteration  17: 289.720 ns/op
Iteration  18: 288.211 ns/op
Iteration  19: 289.919 ns/op
Iteration  20: 288.196 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 354.463 ns/op
# Warmup Iteration   2: 360.934 ns/op
# Warmup Iteration   3: 299.311 ns/op
# Warmup Iteration   4: 289.949 ns/op
# Warmup Iteration   5: 286.846 ns/op
Iteration   1: 290.698 ns/op
Iteration   2: 286.846 ns/op
Iteration   3: 291.964 ns/op
Iteration   4: 293.666 ns/op
Iteration   5: 286.750 ns/op
Iteration   6: 295.460 ns/op
Iteration   7: 287.910 ns/op
Iteration   8: 289.971 ns/op
Iteration   9: 287.042 ns/op
Iteration  10: 288.170 ns/op
Iteration  11: 286.763 ns/op
Iteration  12: 288.120 ns/op
Iteration  13: 286.730 ns/op
Iteration  14: 287.976 ns/op
Iteration  15: 288.493 ns/op
Iteration  16: 287.016 ns/op
Iteration  17: 290.160 ns/op
Iteration  18: 286.721 ns/op
Iteration  19: 295.814 ns/op
Iteration  20: 286.862 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 354.394 ns/op
# Warmup Iteration   2: 360.647 ns/op
# Warmup Iteration   3: 304.320 ns/op
# Warmup Iteration   4: 294.731 ns/op
# Warmup Iteration   5: 291.413 ns/op
Iteration   1: 295.327 ns/op
Iteration   2: 291.579 ns/op
Iteration   3: 296.586 ns/op
Iteration   4: 294.172 ns/op
Iteration   5: 295.066 ns/op
Iteration   6: 299.508 ns/op
Iteration   7: 291.499 ns/op
Iteration   8: 293.172 ns/op
Iteration   9: 294.300 ns/op
Iteration  10: 294.891 ns/op
Iteration  11: 291.235 ns/op
Iteration  12: 292.679 ns/op
Iteration  13: 291.352 ns/op
Iteration  14: 292.790 ns/op
Iteration  15: 291.050 ns/op
Iteration  16: 292.613 ns/op
Iteration  17: 290.955 ns/op
Iteration  18: 292.838 ns/op
Iteration  19: 291.324 ns/op
Iteration  20: 292.676 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 348.871 ns/op
# Warmup Iteration   2: 359.313 ns/op
# Warmup Iteration   3: 280.664 ns/op
# Warmup Iteration   4: 273.057 ns/op
# Warmup Iteration   5: 270.128 ns/op
Iteration   1: 273.801 ns/op
Iteration   2: 275.136 ns/op
Iteration   3: 269.994 ns/op
Iteration   4: 276.378 ns/op
Iteration   5: 270.133 ns/op
Iteration   6: 277.546 ns/op
Iteration   7: 270.166 ns/op
Iteration   8: 271.793 ns/op
Iteration   9: 271.662 ns/op
Iteration  10: 269.885 ns/op
Iteration  11: 271.346 ns/op
Iteration  12: 270.072 ns/op
Iteration  13: 271.549 ns/op
Iteration  14: 273.224 ns/op
Iteration  15: 270.021 ns/op
Iteration  16: 272.599 ns/op
Iteration  17: 271.447 ns/op
Iteration  18: 271.652 ns/op
Iteration  19: 269.897 ns/op
Iteration  20: 271.338 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 347.621 ns/op
# Warmup Iteration   2: 353.833 ns/op
# Warmup Iteration   3: 279.863 ns/op
# Warmup Iteration   4: 273.713 ns/op
# Warmup Iteration   5: 271.599 ns/op
Iteration   1: 274.635 ns/op
Iteration   2: 275.763 ns/op
Iteration   3: 271.201 ns/op
Iteration   4: 277.048 ns/op
Iteration   5: 271.203 ns/op
Iteration   6: 278.995 ns/op
Iteration   7: 272.751 ns/op
Iteration   8: 271.548 ns/op
Iteration   9: 272.456 ns/op
Iteration  10: 271.525 ns/op
Iteration  11: 272.441 ns/op
Iteration  12: 271.005 ns/op
Iteration  13: 272.322 ns/op
Iteration  14: 272.314 ns/op
Iteration  15: 271.150 ns/op
Iteration  16: 272.494 ns/op
Iteration  17: 271.233 ns/op
Iteration  18: 273.634 ns/op
Iteration  19: 271.087 ns/op
Iteration  20: 272.666 ns/op


Result "benchmark.StringContains.regexMatches":
  283.429 ±(99.9%) 3.202 ns/op [Average]
  (min, avg, max) = (269.885, 283.429, 299.508), stdev = 9.440
  CI (99.9%): [280.228, 286.631] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = y\q~QxnyPu4d1m7nhttpV42#I[Ne_G)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.329 ns/op
# Warmup Iteration   2: 12.548 ns/op
# Warmup Iteration   3: 12.250 ns/op
# Warmup Iteration   4: 12.248 ns/op
# Warmup Iteration   5: 12.248 ns/op
Iteration   1: 12.237 ns/op
Iteration   2: 12.245 ns/op
Iteration   3: 12.244 ns/op
Iteration   4: 12.242 ns/op
Iteration   5: 12.247 ns/op
Iteration   6: 12.249 ns/op
Iteration   7: 12.246 ns/op
Iteration   8: 12.236 ns/op
Iteration   9: 12.253 ns/op
Iteration  10: 12.241 ns/op
Iteration  11: 12.244 ns/op
Iteration  12: 12.839 ns/op
Iteration  13: 12.839 ns/op
Iteration  14: 12.840 ns/op
Iteration  15: 12.839 ns/op
Iteration  16: 12.839 ns/op
Iteration  17: 12.839 ns/op
Iteration  18: 12.838 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.841 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.292 ns/op
# Warmup Iteration   2: 12.501 ns/op
# Warmup Iteration   3: 12.142 ns/op
# Warmup Iteration   4: 12.130 ns/op
# Warmup Iteration   5: 12.139 ns/op
Iteration   1: 12.144 ns/op
Iteration   2: 12.130 ns/op
Iteration   3: 12.144 ns/op
Iteration   4: 12.129 ns/op
Iteration   5: 12.123 ns/op
Iteration   6: 12.136 ns/op
Iteration   7: 12.134 ns/op
Iteration   8: 12.136 ns/op
Iteration   9: 12.127 ns/op
Iteration  10: 12.121 ns/op
Iteration  11: 12.113 ns/op
Iteration  12: 12.869 ns/op
Iteration  13: 12.868 ns/op
Iteration  14: 12.870 ns/op
Iteration  15: 12.868 ns/op
Iteration  16: 12.868 ns/op
Iteration  17: 12.869 ns/op
Iteration  18: 12.868 ns/op
Iteration  19: 12.870 ns/op
Iteration  20: 12.868 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.958 ns/op
# Warmup Iteration   2: 12.698 ns/op
# Warmup Iteration   3: 12.227 ns/op
# Warmup Iteration   4: 12.221 ns/op
# Warmup Iteration   5: 12.238 ns/op
Iteration   1: 12.226 ns/op
Iteration   2: 12.252 ns/op
Iteration   3: 12.241 ns/op
Iteration   4: 12.239 ns/op
Iteration   5: 12.243 ns/op
Iteration   6: 12.238 ns/op
Iteration   7: 12.242 ns/op
Iteration   8: 12.244 ns/op
Iteration   9: 12.247 ns/op
Iteration  10: 12.246 ns/op
Iteration  11: 12.240 ns/op
Iteration  12: 12.237 ns/op
Iteration  13: 12.243 ns/op
Iteration  14: 12.225 ns/op
Iteration  15: 12.233 ns/op
Iteration  16: 12.246 ns/op
Iteration  17: 12.241 ns/op
Iteration  18: 12.239 ns/op
Iteration  19: 12.242 ns/op
Iteration  20: 12.235 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 12.000 ns/op
# Warmup Iteration   2: 12.525 ns/op
# Warmup Iteration   3: 12.159 ns/op
# Warmup Iteration   4: 12.164 ns/op
# Warmup Iteration   5: 12.169 ns/op
Iteration   1: 12.176 ns/op
Iteration   2: 12.170 ns/op
Iteration   3: 12.166 ns/op
Iteration   4: 12.166 ns/op
Iteration   5: 12.168 ns/op
Iteration   6: 12.156 ns/op
Iteration   7: 12.155 ns/op
Iteration   8: 12.186 ns/op
Iteration   9: 12.162 ns/op
Iteration  10: 12.165 ns/op
Iteration  11: 12.146 ns/op
Iteration  12: 12.161 ns/op
Iteration  13: 12.156 ns/op
Iteration  14: 12.156 ns/op
Iteration  15: 12.134 ns/op
Iteration  16: 12.136 ns/op
Iteration  17: 12.142 ns/op
Iteration  18: 12.129 ns/op
Iteration  19: 12.159 ns/op
Iteration  20: 12.159 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.295 ns/op
# Warmup Iteration   2: 12.517 ns/op
# Warmup Iteration   3: 12.137 ns/op
# Warmup Iteration   4: 12.134 ns/op
# Warmup Iteration   5: 12.134 ns/op
Iteration   1: 12.157 ns/op
Iteration   2: 12.136 ns/op
Iteration   3: 12.166 ns/op
Iteration   4: 12.140 ns/op
Iteration   5: 12.140 ns/op
Iteration   6: 12.122 ns/op
Iteration   7: 12.144 ns/op
Iteration   8: 12.147 ns/op
Iteration   9: 12.131 ns/op
Iteration  10: 12.121 ns/op
Iteration  11: 12.130 ns/op
Iteration  12: 12.135 ns/op
Iteration  13: 12.117 ns/op
Iteration  14: 12.125 ns/op
Iteration  15: 12.126 ns/op
Iteration  16: 12.125 ns/op
Iteration  17: 12.125 ns/op
Iteration  18: 12.114 ns/op
Iteration  19: 12.148 ns/op
Iteration  20: 12.147 ns/op


Result "benchmark.StringContains.stringContains":
  12.301 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (12.113, 12.301, 12.870), stdev = 0.264
  CI (99.9%): [12.212, 12.391] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  y\q~QxnyPu4d1m7nhttpV42#I[Ne_G  avgt  100  283.429 ± 3.202  ns/op
StringContains.stringContains     http  y\q~QxnyPu4d1m7nhttpV42#I[Ne_G  avgt  100   12.301 ± 0.090  ns/op

Benchmark result is saved to http_32_0.5_6.csv
