# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = q] gUW http	 %X005`Ytgd=`d\;t07)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 422.242 ns/op
# Warmup Iteration   2: 424.660 ns/op
# Warmup Iteration   3: 427.205 ns/op
# Warmup Iteration   4: 379.834 ns/op
# Warmup Iteration   5: 383.125 ns/op
Iteration   1: 379.832 ns/op
Iteration   2: 384.699 ns/op
Iteration   3: 379.670 ns/op
Iteration   4: 379.463 ns/op
Iteration   5: 386.004 ns/op
Iteration   6: 379.839 ns/op
Iteration   7: 388.004 ns/op
Iteration   8: 379.604 ns/op
Iteration   9: 390.488 ns/op
Iteration  10: 380.624 ns/op
Iteration  11: 380.449 ns/op
Iteration  12: 382.111 ns/op
Iteration  13: 379.468 ns/op
Iteration  14: 381.622 ns/op
Iteration  15: 379.422 ns/op
Iteration  16: 379.597 ns/op
Iteration  17: 381.634 ns/op
Iteration  18: 380.306 ns/op
Iteration  19: 381.769 ns/op
Iteration  20: 379.703 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 417.352 ns/op
# Warmup Iteration   2: 429.842 ns/op
# Warmup Iteration   3: 396.027 ns/op
# Warmup Iteration   4: 354.651 ns/op
# Warmup Iteration   5: 357.834 ns/op
Iteration   1: 354.586 ns/op
Iteration   2: 358.662 ns/op
Iteration   3: 354.738 ns/op
Iteration   4: 360.143 ns/op
Iteration   5: 354.559 ns/op
Iteration   6: 362.401 ns/op
Iteration   7: 354.294 ns/op
Iteration   8: 354.437 ns/op
Iteration   9: 364.989 ns/op
Iteration  10: 355.384 ns/op
Iteration  11: 357.473 ns/op
Iteration  12: 354.611 ns/op
Iteration  13: 356.556 ns/op
Iteration  14: 354.559 ns/op
Iteration  15: 356.013 ns/op
Iteration  16: 354.067 ns/op
Iteration  17: 354.141 ns/op
Iteration  18: 355.950 ns/op
Iteration  19: 354.210 ns/op
Iteration  20: 356.115 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 420.055 ns/op
# Warmup Iteration   2: 415.962 ns/op
# Warmup Iteration   3: 415.265 ns/op
# Warmup Iteration   4: 373.887 ns/op
# Warmup Iteration   5: 377.455 ns/op
Iteration   1: 374.274 ns/op
Iteration   2: 379.204 ns/op
Iteration   3: 374.325 ns/op
Iteration   4: 377.427 ns/op
Iteration   5: 377.378 ns/op
Iteration   6: 374.381 ns/op
Iteration   7: 382.148 ns/op
Iteration   8: 374.212 ns/op
Iteration   9: 384.939 ns/op
Iteration  10: 374.192 ns/op
Iteration  11: 378.997 ns/op
Iteration  12: 375.989 ns/op
Iteration  13: 374.412 ns/op
Iteration  14: 376.028 ns/op
Iteration  15: 374.417 ns/op
Iteration  16: 375.958 ns/op
Iteration  17: 374.362 ns/op
Iteration  18: 374.371 ns/op
Iteration  19: 376.377 ns/op
Iteration  20: 375.607 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 425.852 ns/op
# Warmup Iteration   2: 434.847 ns/op
# Warmup Iteration   3: 405.385 ns/op
# Warmup Iteration   4: 359.465 ns/op
# Warmup Iteration   5: 363.023 ns/op
Iteration   1: 359.671 ns/op
Iteration   2: 364.268 ns/op
Iteration   3: 359.408 ns/op
Iteration   4: 365.730 ns/op
Iteration   5: 359.709 ns/op
Iteration   6: 363.112 ns/op
Iteration   7: 363.898 ns/op
Iteration   8: 359.614 ns/op
Iteration   9: 369.793 ns/op
Iteration  10: 359.411 ns/op
Iteration  11: 361.352 ns/op
Iteration  12: 359.016 ns/op
Iteration  13: 361.329 ns/op
Iteration  14: 359.152 ns/op
Iteration  15: 359.113 ns/op
Iteration  16: 361.382 ns/op
Iteration  17: 359.283 ns/op
Iteration  18: 361.844 ns/op
Iteration  19: 358.962 ns/op
Iteration  20: 362.206 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 434.832 ns/op
# Warmup Iteration   2: 435.273 ns/op
# Warmup Iteration   3: 407.467 ns/op
# Warmup Iteration   4: 360.700 ns/op
# Warmup Iteration   5: 364.208 ns/op
Iteration   1: 360.774 ns/op
Iteration   2: 365.106 ns/op
Iteration   3: 360.841 ns/op
Iteration   4: 367.035 ns/op
Iteration   5: 360.810 ns/op
Iteration   6: 363.558 ns/op
Iteration   7: 365.884 ns/op
Iteration   8: 360.668 ns/op
Iteration   9: 371.087 ns/op
Iteration  10: 360.655 ns/op
Iteration  11: 364.114 ns/op
Iteration  12: 360.666 ns/op
Iteration  13: 360.615 ns/op
Iteration  14: 365.070 ns/op
Iteration  15: 360.739 ns/op
Iteration  16: 366.947 ns/op
Iteration  17: 360.635 ns/op
Iteration  18: 362.551 ns/op
Iteration  19: 360.564 ns/op
Iteration  20: 360.664 ns/op


Result "benchmark.StringContains.regexMatches":
  367.784 ±(99.9%) 3.426 ns/op [Average]
  (min, avg, max) = (354.067, 367.784, 390.488), stdev = 10.103
  CI (99.9%): [364.358, 371.211] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = q] gUW http	 %X005`Ytgd=`d\;t07)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.233 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.879 ns/op
# Warmup Iteration   4: 9.889 ns/op
# Warmup Iteration   5: 9.889 ns/op
Iteration   1: 9.889 ns/op
Iteration   2: 9.906 ns/op
Iteration   3: 9.886 ns/op
Iteration   4: 9.896 ns/op
Iteration   5: 9.892 ns/op
Iteration   6: 9.875 ns/op
Iteration   7: 9.881 ns/op
Iteration   8: 9.892 ns/op
Iteration   9: 9.875 ns/op
Iteration  10: 9.883 ns/op
Iteration  11: 9.895 ns/op
Iteration  12: 9.891 ns/op
Iteration  13: 9.900 ns/op
Iteration  14: 9.906 ns/op
Iteration  15: 9.915 ns/op
Iteration  16: 10.238 ns/op
Iteration  17: 9.875 ns/op
Iteration  18: 9.873 ns/op
Iteration  19: 9.879 ns/op
Iteration  20: 9.899 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.477 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.872 ns/op
# Warmup Iteration   4: 9.867 ns/op
# Warmup Iteration   5: 9.866 ns/op
Iteration   1: 9.840 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.858 ns/op
Iteration   4: 9.843 ns/op
Iteration   5: 9.860 ns/op
Iteration   6: 9.868 ns/op
Iteration   7: 9.866 ns/op
Iteration   8: 9.870 ns/op
Iteration   9: 9.847 ns/op
Iteration  10: 9.863 ns/op
Iteration  11: 9.865 ns/op
Iteration  12: 9.840 ns/op
Iteration  13: 9.865 ns/op
Iteration  14: 9.856 ns/op
Iteration  15: 9.847 ns/op
Iteration  16: 9.854 ns/op
Iteration  17: 9.853 ns/op
Iteration  18: 9.855 ns/op
Iteration  19: 9.862 ns/op
Iteration  20: 9.839 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.219 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.850 ns/op
# Warmup Iteration   4: 9.841 ns/op
# Warmup Iteration   5: 9.834 ns/op
Iteration   1: 9.853 ns/op
Iteration   2: 9.836 ns/op
Iteration   3: 9.822 ns/op
Iteration   4: 9.837 ns/op
Iteration   5: 9.819 ns/op
Iteration   6: 9.827 ns/op
Iteration   7: 9.824 ns/op
Iteration   8: 9.846 ns/op
Iteration   9: 9.833 ns/op
Iteration  10: 9.836 ns/op
Iteration  11: 9.822 ns/op
Iteration  12: 9.841 ns/op
Iteration  13: 9.847 ns/op
Iteration  14: 9.841 ns/op
Iteration  15: 9.846 ns/op
Iteration  16: 9.846 ns/op
Iteration  17: 9.830 ns/op
Iteration  18: 9.857 ns/op
Iteration  19: 9.858 ns/op
Iteration  20: 9.844 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.230 ns/op
# Warmup Iteration   2: 9.718 ns/op
# Warmup Iteration   3: 9.898 ns/op
# Warmup Iteration   4: 9.890 ns/op
# Warmup Iteration   5: 9.880 ns/op
Iteration   1: 9.880 ns/op
Iteration   2: 9.872 ns/op
Iteration   3: 9.893 ns/op
Iteration   4: 9.876 ns/op
Iteration   5: 9.891 ns/op
Iteration   6: 9.881 ns/op
Iteration   7: 9.880 ns/op
Iteration   8: 9.886 ns/op
Iteration   9: 9.874 ns/op
Iteration  10: 9.875 ns/op
Iteration  11: 9.892 ns/op
Iteration  12: 9.889 ns/op
Iteration  13: 9.863 ns/op
Iteration  14: 9.872 ns/op
Iteration  15: 9.877 ns/op
Iteration  16: 9.883 ns/op
Iteration  17: 9.882 ns/op
Iteration  18: 9.874 ns/op
Iteration  19: 9.878 ns/op
Iteration  20: 9.886 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.224 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.888 ns/op
# Warmup Iteration   4: 9.903 ns/op
# Warmup Iteration   5: 9.914 ns/op
Iteration   1: 9.893 ns/op
Iteration   2: 9.916 ns/op
Iteration   3: 9.910 ns/op
Iteration   4: 9.905 ns/op
Iteration   5: 9.898 ns/op
Iteration   6: 9.915 ns/op
Iteration   7: 9.892 ns/op
Iteration   8: 9.883 ns/op
Iteration   9: 9.898 ns/op
Iteration  10: 9.899 ns/op
Iteration  11: 9.888 ns/op
Iteration  12: 9.882 ns/op
Iteration  13: 9.865 ns/op
Iteration  14: 9.876 ns/op
Iteration  15: 9.871 ns/op
Iteration  16: 9.863 ns/op
Iteration  17: 9.875 ns/op
Iteration  18: 9.858 ns/op
Iteration  19: 9.866 ns/op
Iteration  20: 9.864 ns/op


Result "benchmark.StringContains.stringContains":
  9.873 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (9.819, 9.873, 10.238), stdev = 0.044
  CI (99.9%): [9.859, 9.888] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  q] gUW http	 %X005`Ytgd=`d\;t07  avgt  100  367.784 ± 3.426  ns/op
StringContains.stringContains     http  q] gUW http	 %X005`Ytgd=`d\;t07  avgt  100    9.873 ± 0.015  ns/op

Benchmark result is saved to http_32_0.25_2.csv
