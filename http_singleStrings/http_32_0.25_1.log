# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = TNE&^h]"httpEh2>E66%**D:]Md}	=')

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 428.514 ns/op
# Warmup Iteration   2: 447.254 ns/op
# Warmup Iteration   3: 422.113 ns/op
# Warmup Iteration   4: 365.297 ns/op
# Warmup Iteration   5: 368.907 ns/op
Iteration   1: 365.426 ns/op
Iteration   2: 370.446 ns/op
Iteration   3: 365.202 ns/op
Iteration   4: 372.409 ns/op
Iteration   5: 365.400 ns/op
Iteration   6: 365.414 ns/op
Iteration   7: 374.299 ns/op
Iteration   8: 365.296 ns/op
Iteration   9: 377.362 ns/op
Iteration  10: 365.474 ns/op
Iteration  11: 367.723 ns/op
Iteration  12: 365.362 ns/op
Iteration  13: 365.485 ns/op
Iteration  14: 366.731 ns/op
Iteration  15: 365.431 ns/op
Iteration  16: 366.943 ns/op
Iteration  17: 365.503 ns/op
Iteration  18: 367.027 ns/op
Iteration  19: 365.162 ns/op
Iteration  20: 365.661 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 436.350 ns/op
# Warmup Iteration   2: 443.507 ns/op
# Warmup Iteration   3: 416.717 ns/op
# Warmup Iteration   4: 367.944 ns/op
# Warmup Iteration   5: 371.590 ns/op
Iteration   1: 368.611 ns/op
Iteration   2: 373.961 ns/op
Iteration   3: 369.052 ns/op
Iteration   4: 371.470 ns/op
Iteration   5: 370.737 ns/op
Iteration   6: 368.191 ns/op
Iteration   7: 376.042 ns/op
Iteration   8: 368.177 ns/op
Iteration   9: 378.452 ns/op
Iteration  10: 368.230 ns/op
Iteration  11: 367.948 ns/op
Iteration  12: 369.855 ns/op
Iteration  13: 368.227 ns/op
Iteration  14: 369.731 ns/op
Iteration  15: 368.260 ns/op
Iteration  16: 369.802 ns/op
Iteration  17: 367.980 ns/op
Iteration  18: 368.241 ns/op
Iteration  19: 369.977 ns/op
Iteration  20: 368.060 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 421.107 ns/op
# Warmup Iteration   2: 436.003 ns/op
# Warmup Iteration   3: 410.961 ns/op
# Warmup Iteration   4: 364.914 ns/op
# Warmup Iteration   5: 368.190 ns/op
Iteration   1: 364.602 ns/op
Iteration   2: 369.222 ns/op
Iteration   3: 364.607 ns/op
Iteration   4: 370.856 ns/op
Iteration   5: 364.695 ns/op
Iteration   6: 364.653 ns/op
Iteration   7: 372.455 ns/op
Iteration   8: 364.672 ns/op
Iteration   9: 375.275 ns/op
Iteration  10: 365.033 ns/op
Iteration  11: 366.915 ns/op
Iteration  12: 364.604 ns/op
Iteration  13: 364.947 ns/op
Iteration  14: 367.027 ns/op
Iteration  15: 364.974 ns/op
Iteration  16: 366.923 ns/op
Iteration  17: 364.770 ns/op
Iteration  18: 366.967 ns/op
Iteration  19: 364.391 ns/op
Iteration  20: 364.516 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 430.059 ns/op
# Warmup Iteration   2: 442.996 ns/op
# Warmup Iteration   3: 414.737 ns/op
# Warmup Iteration   4: 367.689 ns/op
# Warmup Iteration   5: 373.165 ns/op
Iteration   1: 367.680 ns/op
Iteration   2: 372.460 ns/op
Iteration   3: 367.457 ns/op
Iteration   4: 374.054 ns/op
Iteration   5: 367.875 ns/op
Iteration   6: 367.848 ns/op
Iteration   7: 375.997 ns/op
Iteration   8: 367.497 ns/op
Iteration   9: 380.270 ns/op
Iteration  10: 367.581 ns/op
Iteration  11: 371.594 ns/op
Iteration  12: 368.816 ns/op
Iteration  13: 368.140 ns/op
Iteration  14: 370.244 ns/op
Iteration  15: 368.123 ns/op
Iteration  16: 369.487 ns/op
Iteration  17: 367.726 ns/op
Iteration  18: 367.499 ns/op
Iteration  19: 369.465 ns/op
Iteration  20: 367.409 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 384.103 ns/op
# Warmup Iteration   2: 362.806 ns/op
# Warmup Iteration   3: 300.438 ns/op
# Warmup Iteration   4: 284.852 ns/op
# Warmup Iteration   5: 282.489 ns/op
Iteration   1: 285.903 ns/op
Iteration   2: 282.484 ns/op
Iteration   3: 286.991 ns/op
Iteration   4: 288.654 ns/op
Iteration   5: 282.439 ns/op
Iteration   6: 291.456 ns/op
Iteration   7: 282.387 ns/op
Iteration   8: 283.925 ns/op
Iteration   9: 282.451 ns/op
Iteration  10: 283.734 ns/op
Iteration  11: 282.416 ns/op
Iteration  12: 283.760 ns/op
Iteration  13: 283.910 ns/op
Iteration  14: 282.747 ns/op
Iteration  15: 284.005 ns/op
Iteration  16: 282.792 ns/op
Iteration  17: 283.995 ns/op
Iteration  18: 282.707 ns/op
Iteration  19: 286.505 ns/op
Iteration  20: 282.399 ns/op


Result "benchmark.StringContains.regexMatches":
  351.637 ±(99.9%) 11.534 ns/op [Average]
  (min, avg, max) = (282.387, 351.637, 380.270), stdev = 34.009
  CI (99.9%): [340.103, 363.172] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = TNE&^h]"httpEh2>E66%**D:]Md}	=')

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.220 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.966 ns/op
# Warmup Iteration   4: 9.976 ns/op
# Warmup Iteration   5: 9.967 ns/op
Iteration   1: 9.959 ns/op
Iteration   2: 9.999 ns/op
Iteration   3: 9.989 ns/op
Iteration   4: 9.988 ns/op
Iteration   5: 9.984 ns/op
Iteration   6: 9.975 ns/op
Iteration   7: 9.995 ns/op
Iteration   8: 9.972 ns/op
Iteration   9: 9.986 ns/op
Iteration  10: 9.978 ns/op
Iteration  11: 9.970 ns/op
Iteration  12: 9.979 ns/op
Iteration  13: 9.983 ns/op
Iteration  14: 9.980 ns/op
Iteration  15: 9.981 ns/op
Iteration  16: 9.977 ns/op
Iteration  17: 9.971 ns/op
Iteration  18: 9.984 ns/op
Iteration  19: 9.965 ns/op
Iteration  20: 9.989 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.203 ns/op
# Warmup Iteration   2: 9.728 ns/op
# Warmup Iteration   3: 9.786 ns/op
# Warmup Iteration   4: 9.795 ns/op
# Warmup Iteration   5: 9.795 ns/op
Iteration   1: 9.792 ns/op
Iteration   2: 9.806 ns/op
Iteration   3: 9.804 ns/op
Iteration   4: 9.790 ns/op
Iteration   5: 9.778 ns/op
Iteration   6: 9.795 ns/op
Iteration   7: 9.791 ns/op
Iteration   8: 9.813 ns/op
Iteration   9: 9.793 ns/op
Iteration  10: 9.787 ns/op
Iteration  11: 9.774 ns/op
Iteration  12: 9.771 ns/op
Iteration  13: 9.771 ns/op
Iteration  14: 9.781 ns/op
Iteration  15: 9.778 ns/op
Iteration  16: 9.783 ns/op
Iteration  17: 9.795 ns/op
Iteration  18: 9.767 ns/op
Iteration  19: 9.800 ns/op
Iteration  20: 9.785 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.226 ns/op
# Warmup Iteration   2: 9.725 ns/op
# Warmup Iteration   3: 9.874 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.881 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.844 ns/op
Iteration   3: 9.875 ns/op
Iteration   4: 9.860 ns/op
Iteration   5: 9.850 ns/op
Iteration   6: 9.857 ns/op
Iteration   7: 9.863 ns/op
Iteration   8: 9.882 ns/op
Iteration   9: 9.869 ns/op
Iteration  10: 9.870 ns/op
Iteration  11: 9.857 ns/op
Iteration  12: 9.873 ns/op
Iteration  13: 9.854 ns/op
Iteration  14: 9.854 ns/op
Iteration  15: 9.880 ns/op
Iteration  16: 9.885 ns/op
Iteration  17: 9.878 ns/op
Iteration  18: 9.874 ns/op
Iteration  19: 9.859 ns/op
Iteration  20: 9.882 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.222 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.814 ns/op
# Warmup Iteration   4: 9.803 ns/op
# Warmup Iteration   5: 9.807 ns/op
Iteration   1: 9.805 ns/op
Iteration   2: 9.810 ns/op
Iteration   3: 9.811 ns/op
Iteration   4: 9.806 ns/op
Iteration   5: 9.786 ns/op
Iteration   6: 9.808 ns/op
Iteration   7: 9.804 ns/op
Iteration   8: 9.786 ns/op
Iteration   9: 9.815 ns/op
Iteration  10: 9.796 ns/op
Iteration  11: 9.807 ns/op
Iteration  12: 9.813 ns/op
Iteration  13: 9.819 ns/op
Iteration  14: 9.801 ns/op
Iteration  15: 9.793 ns/op
Iteration  16: 9.779 ns/op
Iteration  17: 9.797 ns/op
Iteration  18: 9.791 ns/op
Iteration  19: 9.805 ns/op
Iteration  20: 9.801 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.218 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.948 ns/op
# Warmup Iteration   4: 9.976 ns/op
# Warmup Iteration   5: 9.952 ns/op
Iteration   1: 9.967 ns/op
Iteration   2: 9.969 ns/op
Iteration   3: 9.961 ns/op
Iteration   4: 9.975 ns/op
Iteration   5: 9.993 ns/op
Iteration   6: 9.975 ns/op
Iteration   7: 9.975 ns/op
Iteration   8: 9.970 ns/op
Iteration   9: 9.978 ns/op
Iteration  10: 9.995 ns/op
Iteration  11: 9.957 ns/op
Iteration  12: 9.969 ns/op
Iteration  13: 9.964 ns/op
Iteration  14: 9.971 ns/op
Iteration  15: 9.972 ns/op
Iteration  16: 9.954 ns/op
Iteration  17: 9.941 ns/op
Iteration  18: 9.975 ns/op
Iteration  19: 9.965 ns/op
Iteration  20: 9.996 ns/op


Result "benchmark.StringContains.stringContains":
  9.881 ±(99.9%) 0.028 ns/op [Average]
  (min, avg, max) = (9.767, 9.881, 9.999), stdev = 0.083
  CI (99.9%): [9.853, 9.909] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  TNE&^h]"httpEh2>E66%**D:]Md}	='  avgt  100  351.637 ± 11.534  ns/op
StringContains.stringContains     http  TNE&^h]"httpEh2>E66%**D:]Md}	='  avgt  100    9.881 ±  0.028  ns/op

Benchmark result is saved to http_32_0.25_1.csv
