# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpXFn=hP\:@@ A6;4f/;gn"]?]\B%4)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 489.379 ns/op
# Warmup Iteration   2: 501.770 ns/op
# Warmup Iteration   3: 502.064 ns/op
# Warmup Iteration   4: 419.066 ns/op
# Warmup Iteration   5: 418.882 ns/op
Iteration   1: 422.398 ns/op
Iteration   2: 418.730 ns/op
Iteration   3: 424.233 ns/op
Iteration   4: 418.786 ns/op
Iteration   5: 418.652 ns/op
Iteration   6: 426.192 ns/op
Iteration   7: 418.513 ns/op
Iteration   8: 428.034 ns/op
Iteration   9: 418.487 ns/op
Iteration  10: 418.848 ns/op
Iteration  11: 430.827 ns/op
Iteration  12: 418.642 ns/op
Iteration  13: 418.767 ns/op
Iteration  14: 421.070 ns/op
Iteration  15: 418.643 ns/op
Iteration  16: 420.784 ns/op
Iteration  17: 418.709 ns/op
Iteration  18: 418.674 ns/op
Iteration  19: 421.030 ns/op
Iteration  20: 418.816 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 481.800 ns/op
# Warmup Iteration   2: 497.804 ns/op
# Warmup Iteration   3: 500.394 ns/op
# Warmup Iteration   4: 419.410 ns/op
# Warmup Iteration   5: 419.350 ns/op
Iteration   1: 424.138 ns/op
Iteration   2: 419.133 ns/op
Iteration   3: 424.542 ns/op
Iteration   4: 418.933 ns/op
Iteration   5: 419.068 ns/op
Iteration   6: 427.752 ns/op
Iteration   7: 421.199 ns/op
Iteration   8: 429.816 ns/op
Iteration   9: 419.361 ns/op
Iteration  10: 419.183 ns/op
Iteration  11: 431.453 ns/op
Iteration  12: 418.872 ns/op
Iteration  13: 419.179 ns/op
Iteration  14: 421.387 ns/op
Iteration  15: 419.116 ns/op
Iteration  16: 421.111 ns/op
Iteration  17: 419.221 ns/op
Iteration  18: 419.159 ns/op
Iteration  19: 421.286 ns/op
Iteration  20: 419.124 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 496.463 ns/op
# Warmup Iteration   2: 510.497 ns/op
# Warmup Iteration   3: 512.974 ns/op
# Warmup Iteration   4: 440.905 ns/op
# Warmup Iteration   5: 435.327 ns/op
Iteration   1: 439.171 ns/op
Iteration   2: 434.718 ns/op
Iteration   3: 440.042 ns/op
Iteration   4: 435.303 ns/op
Iteration   5: 435.286 ns/op
Iteration   6: 442.323 ns/op
Iteration   7: 435.101 ns/op
Iteration   8: 435.212 ns/op
Iteration   9: 444.428 ns/op
Iteration  10: 435.168 ns/op
Iteration  11: 442.221 ns/op
Iteration  12: 440.606 ns/op
Iteration  13: 435.353 ns/op
Iteration  14: 437.136 ns/op
Iteration  15: 435.317 ns/op
Iteration  16: 435.090 ns/op
Iteration  17: 437.227 ns/op
Iteration  18: 435.298 ns/op
Iteration  19: 435.184 ns/op
Iteration  20: 437.312 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 478.470 ns/op
# Warmup Iteration   2: 495.831 ns/op
# Warmup Iteration   3: 494.859 ns/op
# Warmup Iteration   4: 419.361 ns/op
# Warmup Iteration   5: 419.189 ns/op
Iteration   1: 422.873 ns/op
Iteration   2: 419.251 ns/op
Iteration   3: 424.737 ns/op
Iteration   4: 418.876 ns/op
Iteration   5: 419.033 ns/op
Iteration   6: 425.916 ns/op
Iteration   7: 419.320 ns/op
Iteration   8: 430.586 ns/op
Iteration   9: 419.069 ns/op
Iteration  10: 418.965 ns/op
Iteration  11: 430.453 ns/op
Iteration  12: 419.122 ns/op
Iteration  13: 418.897 ns/op
Iteration  14: 422.182 ns/op
Iteration  15: 419.088 ns/op
Iteration  16: 423.012 ns/op
Iteration  17: 420.611 ns/op
Iteration  18: 419.675 ns/op
Iteration  19: 420.594 ns/op
Iteration  20: 418.825 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 482.029 ns/op
# Warmup Iteration   2: 503.712 ns/op
# Warmup Iteration   3: 511.008 ns/op
# Warmup Iteration   4: 422.848 ns/op
# Warmup Iteration   5: 420.300 ns/op
Iteration   1: 424.418 ns/op
Iteration   2: 419.232 ns/op
Iteration   3: 425.118 ns/op
Iteration   4: 419.585 ns/op
Iteration   5: 419.630 ns/op
Iteration   6: 427.646 ns/op
Iteration   7: 420.181 ns/op
Iteration   8: 430.375 ns/op
Iteration   9: 420.500 ns/op
Iteration  10: 420.657 ns/op
Iteration  11: 433.478 ns/op
Iteration  12: 418.524 ns/op
Iteration  13: 419.325 ns/op
Iteration  14: 421.193 ns/op
Iteration  15: 419.294 ns/op
Iteration  16: 421.293 ns/op
Iteration  17: 419.246 ns/op
Iteration  18: 419.414 ns/op
Iteration  19: 422.057 ns/op
Iteration  20: 419.590 ns/op


Result "benchmark.StringContains.regexMatches":
  424.712 ±(99.9%) 2.485 ns/op [Average]
  (min, avg, max) = (418.487, 424.712, 444.428), stdev = 7.327
  CI (99.9%): [422.227, 427.197] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpXFn=hP\:@@ A6;4f/;gn"]?]\B%4)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.239 ns/op
# Warmup Iteration   2: 9.716 ns/op
# Warmup Iteration   3: 9.859 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.868 ns/op
Iteration   1: 9.870 ns/op
Iteration   2: 9.857 ns/op
Iteration   3: 9.859 ns/op
Iteration   4: 9.855 ns/op
Iteration   5: 9.861 ns/op
Iteration   6: 9.856 ns/op
Iteration   7: 9.837 ns/op
Iteration   8: 9.857 ns/op
Iteration   9: 9.846 ns/op
Iteration  10: 9.864 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 9.867 ns/op
Iteration  13: 9.852 ns/op
Iteration  14: 9.855 ns/op
Iteration  15: 9.865 ns/op
Iteration  16: 9.862 ns/op
Iteration  17: 9.851 ns/op
Iteration  18: 9.854 ns/op
Iteration  19: 9.868 ns/op
Iteration  20: 9.865 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.470 ns/op
# Warmup Iteration   2: 9.725 ns/op
# Warmup Iteration   3: 9.858 ns/op
# Warmup Iteration   4: 9.876 ns/op
# Warmup Iteration   5: 9.857 ns/op
Iteration   1: 9.864 ns/op
Iteration   2: 9.850 ns/op
Iteration   3: 9.871 ns/op
Iteration   4: 9.860 ns/op
Iteration   5: 9.861 ns/op
Iteration   6: 9.865 ns/op
Iteration   7: 9.852 ns/op
Iteration   8: 9.872 ns/op
Iteration   9: 9.854 ns/op
Iteration  10: 9.845 ns/op
Iteration  11: 9.880 ns/op
Iteration  12: 9.867 ns/op
Iteration  13: 9.860 ns/op
Iteration  14: 9.850 ns/op
Iteration  15: 9.849 ns/op
Iteration  16: 9.846 ns/op
Iteration  17: 9.845 ns/op
Iteration  18: 9.852 ns/op
Iteration  19: 9.886 ns/op
Iteration  20: 9.875 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.421 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.883 ns/op
# Warmup Iteration   4: 9.878 ns/op
# Warmup Iteration   5: 9.877 ns/op
Iteration   1: 9.868 ns/op
Iteration   2: 9.873 ns/op
Iteration   3: 9.906 ns/op
Iteration   4: 9.898 ns/op
Iteration   5: 9.887 ns/op
Iteration   6: 9.897 ns/op
Iteration   7: 9.904 ns/op
Iteration   8: 9.896 ns/op
Iteration   9: 9.885 ns/op
Iteration  10: 9.901 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.891 ns/op
Iteration  13: 9.894 ns/op
Iteration  14: 9.883 ns/op
Iteration  15: 9.886 ns/op
Iteration  16: 9.903 ns/op
Iteration  17: 9.876 ns/op
Iteration  18: 9.878 ns/op
Iteration  19: 9.882 ns/op
Iteration  20: 9.875 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.204 ns/op
# Warmup Iteration   2: 9.728 ns/op
# Warmup Iteration   3: 9.949 ns/op
# Warmup Iteration   4: 9.957 ns/op
# Warmup Iteration   5: 9.951 ns/op
Iteration   1: 9.920 ns/op
Iteration   2: 9.979 ns/op
Iteration   3: 9.967 ns/op
Iteration   4: 9.954 ns/op
Iteration   5: 9.964 ns/op
Iteration   6: 9.952 ns/op
Iteration   7: 9.944 ns/op
Iteration   8: 9.957 ns/op
Iteration   9: 9.975 ns/op
Iteration  10: 9.944 ns/op
Iteration  11: 9.938 ns/op
Iteration  12: 9.950 ns/op
Iteration  13: 9.935 ns/op
Iteration  14: 9.962 ns/op
Iteration  15: 9.930 ns/op
Iteration  16: 9.940 ns/op
Iteration  17: 9.928 ns/op
Iteration  18: 9.932 ns/op
Iteration  19: 9.973 ns/op
Iteration  20: 9.950 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.196 ns/op
# Warmup Iteration   2: 9.724 ns/op
# Warmup Iteration   3: 9.841 ns/op
# Warmup Iteration   4: 9.852 ns/op
# Warmup Iteration   5: 9.852 ns/op
Iteration   1: 9.848 ns/op
Iteration   2: 9.855 ns/op
Iteration   3: 9.858 ns/op
Iteration   4: 9.859 ns/op
Iteration   5: 9.862 ns/op
Iteration   6: 9.875 ns/op
Iteration   7: 9.857 ns/op
Iteration   8: 9.875 ns/op
Iteration   9: 9.862 ns/op
Iteration  10: 9.851 ns/op
Iteration  11: 9.857 ns/op
Iteration  12: 9.855 ns/op
Iteration  13: 9.856 ns/op
Iteration  14: 9.850 ns/op
Iteration  15: 9.863 ns/op
Iteration  16: 9.859 ns/op
Iteration  17: 9.859 ns/op
Iteration  18: 9.862 ns/op
Iteration  19: 9.869 ns/op
Iteration  20: 9.845 ns/op


Result "benchmark.StringContains.stringContains":
  9.883 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (9.837, 9.883, 9.979), stdev = 0.037
  CI (99.9%): [9.870, 9.896] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpXFn=hP\:@@ A6;4f/;gn"]?]\B%4  avgt  100  424.712 ± 2.485  ns/op
StringContains.stringContains     http  httpXFn=hP\:@@ A6;4f/;gn"]?]\B%4  avgt  100    9.883 ± 0.013  ns/op

Benchmark result is saved to http_32_0_14.csv
