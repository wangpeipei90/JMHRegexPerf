# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = fCxd-_$o\mqYkE6:)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 181.096 ns/op
# Warmup Iteration   2: 106.573 ns/op
# Warmup Iteration   3: 102.156 ns/op
# Warmup Iteration   4: 101.706 ns/op
# Warmup Iteration   5: 102.925 ns/op
Iteration   1: 99.782 ns/op
Iteration   2: 100.337 ns/op
Iteration   3: 100.113 ns/op
Iteration   4: 99.931 ns/op
Iteration   5: 100.981 ns/op
Iteration   6: 99.623 ns/op
Iteration   7: 100.607 ns/op
Iteration   8: 100.324 ns/op
Iteration   9: 99.765 ns/op
Iteration  10: 99.625 ns/op
Iteration  11: 99.852 ns/op
Iteration  12: 99.982 ns/op
Iteration  13: 99.716 ns/op
Iteration  14: 99.986 ns/op
Iteration  15: 99.892 ns/op
Iteration  16: 100.299 ns/op
Iteration  17: 99.618 ns/op
Iteration  18: 99.966 ns/op
Iteration  19: 99.657 ns/op
Iteration  20: 99.851 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 182.084 ns/op
# Warmup Iteration   2: 109.770 ns/op
# Warmup Iteration   3: 105.480 ns/op
# Warmup Iteration   4: 104.324 ns/op
# Warmup Iteration   5: 105.510 ns/op
Iteration   1: 102.606 ns/op
Iteration   2: 103.149 ns/op
Iteration   3: 102.550 ns/op
Iteration   4: 103.164 ns/op
Iteration   5: 102.585 ns/op
Iteration   6: 103.012 ns/op
Iteration   7: 102.348 ns/op
Iteration   8: 102.660 ns/op
Iteration   9: 102.330 ns/op
Iteration  10: 102.458 ns/op
Iteration  11: 102.304 ns/op
Iteration  12: 102.753 ns/op
Iteration  13: 102.599 ns/op
Iteration  14: 103.269 ns/op
Iteration  15: 102.848 ns/op
Iteration  16: 103.246 ns/op
Iteration  17: 102.498 ns/op
Iteration  18: 102.866 ns/op
Iteration  19: 102.602 ns/op
Iteration  20: 102.784 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 178.705 ns/op
# Warmup Iteration   2: 105.016 ns/op
# Warmup Iteration   3: 102.040 ns/op
# Warmup Iteration   4: 101.328 ns/op
# Warmup Iteration   5: 102.423 ns/op
Iteration   1: 99.566 ns/op
Iteration   2: 100.068 ns/op
Iteration   3: 99.978 ns/op
Iteration   4: 99.857 ns/op
Iteration   5: 100.141 ns/op
Iteration   6: 99.481 ns/op
Iteration   7: 99.544 ns/op
Iteration   8: 99.284 ns/op
Iteration   9: 99.668 ns/op
Iteration  10: 99.615 ns/op
Iteration  11: 99.397 ns/op
Iteration  12: 100.417 ns/op
Iteration  13: 99.990 ns/op
Iteration  14: 100.418 ns/op
Iteration  15: 99.863 ns/op
Iteration  16: 100.906 ns/op
Iteration  17: 100.046 ns/op
Iteration  18: 100.401 ns/op
Iteration  19: 99.853 ns/op
Iteration  20: 100.029 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 181.715 ns/op
# Warmup Iteration   2: 109.276 ns/op
# Warmup Iteration   3: 105.046 ns/op
# Warmup Iteration   4: 104.084 ns/op
# Warmup Iteration   5: 105.224 ns/op
Iteration   1: 102.290 ns/op
Iteration   2: 102.847 ns/op
Iteration   3: 102.757 ns/op
Iteration   4: 102.934 ns/op
Iteration   5: 102.872 ns/op
Iteration   6: 102.516 ns/op
Iteration   7: 101.983 ns/op
Iteration   8: 102.196 ns/op
Iteration   9: 101.939 ns/op
Iteration  10: 102.290 ns/op
Iteration  11: 102.081 ns/op
Iteration  12: 102.482 ns/op
Iteration  13: 102.021 ns/op
Iteration  14: 102.434 ns/op
Iteration  15: 102.128 ns/op
Iteration  16: 102.410 ns/op
Iteration  17: 102.759 ns/op
Iteration  18: 102.274 ns/op
Iteration  19: 102.772 ns/op
Iteration  20: 102.270 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 182.721 ns/op
# Warmup Iteration   2: 109.777 ns/op
# Warmup Iteration   3: 106.077 ns/op
# Warmup Iteration   4: 104.647 ns/op
# Warmup Iteration   5: 105.841 ns/op
Iteration   1: 102.838 ns/op
Iteration   2: 103.320 ns/op
Iteration   3: 102.645 ns/op
Iteration   4: 103.242 ns/op
Iteration   5: 102.850 ns/op
Iteration   6: 103.051 ns/op
Iteration   7: 102.508 ns/op
Iteration   8: 102.641 ns/op
Iteration   9: 102.521 ns/op
Iteration  10: 102.812 ns/op
Iteration  11: 102.662 ns/op
Iteration  12: 102.842 ns/op
Iteration  13: 102.461 ns/op
Iteration  14: 102.787 ns/op
Iteration  15: 102.525 ns/op
Iteration  16: 103.133 ns/op
Iteration  17: 102.690 ns/op
Iteration  18: 103.228 ns/op
Iteration  19: 102.485 ns/op
Iteration  20: 102.843 ns/op


Result "benchmark.StringContains.regexMatches":
  101.574 ±(99.9%) 0.465 ns/op [Average]
  (min, avg, max) = (99.284, 101.574, 103.320), stdev = 1.370
  CI (99.9%): [101.109, 102.039] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = fCxd-_$o\mqYkE6:)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 8.745 ns/op
# Warmup Iteration   2: 8.983 ns/op
# Warmup Iteration   3: 8.934 ns/op
# Warmup Iteration   4: 8.934 ns/op
# Warmup Iteration   5: 8.934 ns/op
Iteration   1: 8.934 ns/op
Iteration   2: 8.935 ns/op
Iteration   3: 8.935 ns/op
Iteration   4: 8.934 ns/op
Iteration   5: 8.934 ns/op
Iteration   6: 8.935 ns/op
Iteration   7: 8.934 ns/op
Iteration   8: 8.949 ns/op
Iteration   9: 8.935 ns/op
Iteration  10: 8.934 ns/op
Iteration  11: 8.935 ns/op
Iteration  12: 8.934 ns/op
Iteration  13: 8.935 ns/op
Iteration  14: 8.934 ns/op
Iteration  15: 8.934 ns/op
Iteration  16: 8.935 ns/op
Iteration  17: 8.934 ns/op
Iteration  18: 8.934 ns/op
Iteration  19: 8.934 ns/op
Iteration  20: 8.949 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 8.646 ns/op
# Warmup Iteration   2: 8.969 ns/op
# Warmup Iteration   3: 8.960 ns/op
# Warmup Iteration   4: 8.970 ns/op
# Warmup Iteration   5: 8.957 ns/op
Iteration   1: 8.953 ns/op
Iteration   2: 8.958 ns/op
Iteration   3: 8.959 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.960 ns/op
Iteration   6: 8.955 ns/op
Iteration   7: 8.954 ns/op
Iteration   8: 8.960 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.959 ns/op
Iteration  11: 8.959 ns/op
Iteration  12: 8.960 ns/op
Iteration  13: 8.961 ns/op
Iteration  14: 8.956 ns/op
Iteration  15: 8.961 ns/op
Iteration  16: 8.963 ns/op
Iteration  17: 8.962 ns/op
Iteration  18: 8.959 ns/op
Iteration  19: 8.958 ns/op
Iteration  20: 8.952 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 8.646 ns/op
# Warmup Iteration   2: 8.969 ns/op
# Warmup Iteration   3: 8.959 ns/op
# Warmup Iteration   4: 8.960 ns/op
# Warmup Iteration   5: 8.952 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.973 ns/op
Iteration   3: 8.961 ns/op
Iteration   4: 8.977 ns/op
Iteration   5: 8.957 ns/op
Iteration   6: 8.954 ns/op
Iteration   7: 8.960 ns/op
Iteration   8: 8.956 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.962 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.961 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.970 ns/op
Iteration  15: 8.975 ns/op
Iteration  16: 8.976 ns/op
Iteration  17: 8.961 ns/op
Iteration  18: 8.972 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.958 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 8.670 ns/op
# Warmup Iteration   2: 8.969 ns/op
# Warmup Iteration   3: 8.943 ns/op
# Warmup Iteration   4: 8.942 ns/op
# Warmup Iteration   5: 8.941 ns/op
Iteration   1: 8.942 ns/op
Iteration   2: 8.942 ns/op
Iteration   3: 8.942 ns/op
Iteration   4: 8.941 ns/op
Iteration   5: 8.942 ns/op
Iteration   6: 8.942 ns/op
Iteration   7: 8.941 ns/op
Iteration   8: 8.946 ns/op
Iteration   9: 8.942 ns/op
Iteration  10: 8.942 ns/op
Iteration  11: 8.943 ns/op
Iteration  12: 8.943 ns/op
Iteration  13: 8.943 ns/op
Iteration  14: 8.943 ns/op
Iteration  15: 8.942 ns/op
Iteration  16: 8.943 ns/op
Iteration  17: 8.942 ns/op
Iteration  18: 8.943 ns/op
Iteration  19: 8.942 ns/op
Iteration  20: 8.944 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 8.668 ns/op
# Warmup Iteration   2: 8.972 ns/op
# Warmup Iteration   3: 8.947 ns/op
# Warmup Iteration   4: 8.945 ns/op
# Warmup Iteration   5: 8.946 ns/op
Iteration   1: 8.944 ns/op
Iteration   2: 8.946 ns/op
Iteration   3: 8.947 ns/op
Iteration   4: 8.945 ns/op
Iteration   5: 8.945 ns/op
Iteration   6: 8.945 ns/op
Iteration   7: 8.945 ns/op
Iteration   8: 8.947 ns/op
Iteration   9: 8.945 ns/op
Iteration  10: 8.945 ns/op
Iteration  11: 8.946 ns/op
Iteration  12: 8.945 ns/op
Iteration  13: 8.945 ns/op
Iteration  14: 8.944 ns/op
Iteration  15: 8.946 ns/op
Iteration  16: 8.945 ns/op
Iteration  17: 8.945 ns/op
Iteration  18: 8.945 ns/op
Iteration  19: 8.946 ns/op
Iteration  20: 8.947 ns/op


Result "benchmark.StringContains.stringContains":
  8.950 ±(99.9%) 0.004 ns/op [Average]
  (min, avg, max) = (8.934, 8.950, 8.977), stdev = 0.012
  CI (99.9%): [8.946, 8.953] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  fCxd-_$o\mqYkE6:  avgt  100  101.574 ± 0.465  ns/op
StringContains.stringContains     http  fCxd-_$o\mqYkE6:  avgt  100    8.950 ± 0.004  ns/op

Benchmark result is saved to http_16_1_7.csv
