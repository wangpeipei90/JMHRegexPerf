# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpks@B|`)Tz7)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 340.523 ns/op
# Warmup Iteration   2: 348.298 ns/op
# Warmup Iteration   3: 261.684 ns/op
# Warmup Iteration   4: 258.272 ns/op
# Warmup Iteration   5: 259.254 ns/op
Iteration   1: 255.818 ns/op
Iteration   2: 260.084 ns/op
Iteration   3: 255.821 ns/op
Iteration   4: 261.456 ns/op
Iteration   5: 263.390 ns/op
Iteration   6: 255.637 ns/op
Iteration   7: 257.073 ns/op
Iteration   8: 255.637 ns/op
Iteration   9: 257.146 ns/op
Iteration  10: 256.789 ns/op
Iteration  11: 255.433 ns/op
Iteration  12: 257.009 ns/op
Iteration  13: 257.049 ns/op
Iteration  14: 255.983 ns/op
Iteration  15: 257.370 ns/op
Iteration  16: 255.854 ns/op
Iteration  17: 257.717 ns/op
Iteration  18: 256.885 ns/op
Iteration  19: 255.058 ns/op
Iteration  20: 256.519 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 334.257 ns/op
# Warmup Iteration   2: 336.735 ns/op
# Warmup Iteration   3: 257.899 ns/op
# Warmup Iteration   4: 257.608 ns/op
# Warmup Iteration   5: 257.498 ns/op
Iteration   1: 253.974 ns/op
Iteration   2: 258.681 ns/op
Iteration   3: 257.840 ns/op
Iteration   4: 255.804 ns/op
Iteration   5: 261.476 ns/op
Iteration   6: 254.452 ns/op
Iteration   7: 255.114 ns/op
Iteration   8: 255.094 ns/op
Iteration   9: 253.993 ns/op
Iteration  10: 255.517 ns/op
Iteration  11: 254.090 ns/op
Iteration  12: 255.258 ns/op
Iteration  13: 255.507 ns/op
Iteration  14: 254.290 ns/op
Iteration  15: 255.633 ns/op
Iteration  16: 254.175 ns/op
Iteration  17: 255.338 ns/op
Iteration  18: 255.535 ns/op
Iteration  19: 253.867 ns/op
Iteration  20: 255.933 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 340.017 ns/op
# Warmup Iteration   2: 345.659 ns/op
# Warmup Iteration   3: 261.785 ns/op
# Warmup Iteration   4: 258.930 ns/op
# Warmup Iteration   5: 261.868 ns/op
Iteration   1: 256.099 ns/op
Iteration   2: 260.687 ns/op
Iteration   3: 256.125 ns/op
Iteration   4: 261.795 ns/op
Iteration   5: 263.541 ns/op
Iteration   6: 256.247 ns/op
Iteration   7: 257.472 ns/op
Iteration   8: 256.209 ns/op
Iteration   9: 257.571 ns/op
Iteration  10: 258.128 ns/op
Iteration  11: 256.434 ns/op
Iteration  12: 257.329 ns/op
Iteration  13: 256.159 ns/op
Iteration  14: 257.578 ns/op
Iteration  15: 257.774 ns/op
Iteration  16: 256.006 ns/op
Iteration  17: 259.425 ns/op
Iteration  18: 257.436 ns/op
Iteration  19: 256.196 ns/op
Iteration  20: 257.832 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 335.524 ns/op
# Warmup Iteration   2: 337.708 ns/op
# Warmup Iteration   3: 257.849 ns/op
# Warmup Iteration   4: 257.708 ns/op
# Warmup Iteration   5: 257.188 ns/op
Iteration   1: 254.137 ns/op
Iteration   2: 258.137 ns/op
Iteration   3: 258.204 ns/op
Iteration   4: 255.196 ns/op
Iteration   5: 261.402 ns/op
Iteration   6: 254.065 ns/op
Iteration   7: 255.678 ns/op
Iteration   8: 256.016 ns/op
Iteration   9: 254.386 ns/op
Iteration  10: 254.970 ns/op
Iteration  11: 254.241 ns/op
Iteration  12: 255.125 ns/op
Iteration  13: 255.348 ns/op
Iteration  14: 254.016 ns/op
Iteration  15: 255.212 ns/op
Iteration  16: 254.073 ns/op
Iteration  17: 255.406 ns/op
Iteration  18: 255.341 ns/op
Iteration  19: 254.042 ns/op
Iteration  20: 256.865 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 329.839 ns/op
# Warmup Iteration   2: 335.867 ns/op
# Warmup Iteration   3: 257.385 ns/op
# Warmup Iteration   4: 256.955 ns/op
# Warmup Iteration   5: 257.779 ns/op
Iteration   1: 254.423 ns/op
Iteration   2: 258.499 ns/op
Iteration   3: 260.120 ns/op
Iteration   4: 254.384 ns/op
Iteration   5: 261.932 ns/op
Iteration   6: 254.319 ns/op
Iteration   7: 255.715 ns/op
Iteration   8: 255.709 ns/op
Iteration   9: 254.517 ns/op
Iteration  10: 256.001 ns/op
Iteration  11: 254.262 ns/op
Iteration  12: 255.904 ns/op
Iteration  13: 257.392 ns/op
Iteration  14: 254.591 ns/op
Iteration  15: 255.758 ns/op
Iteration  16: 254.549 ns/op
Iteration  17: 255.818 ns/op
Iteration  18: 256.051 ns/op
Iteration  19: 254.301 ns/op
Iteration  20: 255.668 ns/op


Result "benchmark.StringContains.regexMatches":
  256.431 ±(99.9%) 0.731 ns/op [Average]
  (min, avg, max) = (253.867, 256.431, 263.541), stdev = 2.155
  CI (99.9%): [255.700, 257.162] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpks@B|`)Tz7)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.496 ns/op
# Warmup Iteration   2: 9.745 ns/op
# Warmup Iteration   3: 9.881 ns/op
# Warmup Iteration   4: 9.875 ns/op
# Warmup Iteration   5: 9.866 ns/op
Iteration   1: 9.883 ns/op
Iteration   2: 9.883 ns/op
Iteration   3: 9.876 ns/op
Iteration   4: 9.867 ns/op
Iteration   5: 9.899 ns/op
Iteration   6: 9.876 ns/op
Iteration   7: 9.886 ns/op
Iteration   8: 9.882 ns/op
Iteration   9: 9.894 ns/op
Iteration  10: 9.891 ns/op
Iteration  11: 9.890 ns/op
Iteration  12: 9.877 ns/op
Iteration  13: 9.878 ns/op
Iteration  14: 9.876 ns/op
Iteration  15: 9.892 ns/op
Iteration  16: 9.877 ns/op
Iteration  17: 9.872 ns/op
Iteration  18: 9.869 ns/op
Iteration  19: 9.875 ns/op
Iteration  20: 9.891 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.219 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.845 ns/op
# Warmup Iteration   4: 9.846 ns/op
# Warmup Iteration   5: 9.847 ns/op
Iteration   1: 9.864 ns/op
Iteration   2: 9.859 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.861 ns/op
Iteration   5: 9.845 ns/op
Iteration   6: 9.863 ns/op
Iteration   7: 9.843 ns/op
Iteration   8: 9.857 ns/op
Iteration   9: 9.851 ns/op
Iteration  10: 9.842 ns/op
Iteration  11: 9.856 ns/op
Iteration  12: 9.840 ns/op
Iteration  13: 9.844 ns/op
Iteration  14: 9.866 ns/op
Iteration  15: 9.850 ns/op
Iteration  16: 9.853 ns/op
Iteration  17: 9.861 ns/op
Iteration  18: 9.858 ns/op
Iteration  19: 9.856 ns/op
Iteration  20: 9.852 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.485 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.853 ns/op
# Warmup Iteration   4: 9.851 ns/op
# Warmup Iteration   5: 9.839 ns/op
Iteration   1: 9.847 ns/op
Iteration   2: 9.870 ns/op
Iteration   3: 9.843 ns/op
Iteration   4: 9.860 ns/op
Iteration   5: 9.867 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.869 ns/op
Iteration   8: 9.866 ns/op
Iteration   9: 9.866 ns/op
Iteration  10: 9.861 ns/op
Iteration  11: 9.852 ns/op
Iteration  12: 9.838 ns/op
Iteration  13: 9.875 ns/op
Iteration  14: 9.855 ns/op
Iteration  15: 9.863 ns/op
Iteration  16: 9.871 ns/op
Iteration  17: 9.868 ns/op
Iteration  18: 9.842 ns/op
Iteration  19: 9.854 ns/op
Iteration  20: 9.875 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.479 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.798 ns/op
# Warmup Iteration   4: 9.771 ns/op
# Warmup Iteration   5: 9.789 ns/op
Iteration   1: 9.776 ns/op
Iteration   2: 9.802 ns/op
Iteration   3: 9.795 ns/op
Iteration   4: 9.778 ns/op
Iteration   5: 9.784 ns/op
Iteration   6: 9.784 ns/op
Iteration   7: 9.774 ns/op
Iteration   8: 9.784 ns/op
Iteration   9: 9.790 ns/op
Iteration  10: 9.774 ns/op
Iteration  11: 9.789 ns/op
Iteration  12: 9.773 ns/op
Iteration  13: 9.783 ns/op
Iteration  14: 9.765 ns/op
Iteration  15: 9.801 ns/op
Iteration  16: 9.791 ns/op
Iteration  17: 9.797 ns/op
Iteration  18: 9.774 ns/op
Iteration  19: 9.782 ns/op
Iteration  20: 9.765 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.206 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.869 ns/op
# Warmup Iteration   4: 9.849 ns/op
# Warmup Iteration   5: 9.867 ns/op
Iteration   1: 9.854 ns/op
Iteration   2: 9.864 ns/op
Iteration   3: 9.853 ns/op
Iteration   4: 9.866 ns/op
Iteration   5: 9.883 ns/op
Iteration   6: 9.882 ns/op
Iteration   7: 9.874 ns/op
Iteration   8: 9.887 ns/op
Iteration   9: 9.852 ns/op
Iteration  10: 9.890 ns/op
Iteration  11: 9.873 ns/op
Iteration  12: 9.852 ns/op
Iteration  13: 9.850 ns/op
Iteration  14: 9.832 ns/op
Iteration  15: 9.843 ns/op
Iteration  16: 9.863 ns/op
Iteration  17: 9.859 ns/op
Iteration  18: 9.875 ns/op
Iteration  19: 9.855 ns/op
Iteration  20: 9.883 ns/op


Result "benchmark.StringContains.stringContains":
  9.849 ±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (9.765, 9.849, 9.899), stdev = 0.036
  CI (99.9%): [9.837, 9.861] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpks@B|`)Tz7  avgt  100  256.431 ± 0.731  ns/op
StringContains.stringContains     http  httpks@B|`)Tz7  avgt  100    9.849 ± 0.012  ns/op

Benchmark result is saved to http_16_0_3.csv
