# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = J`v+"_|W:PIFBo
RY7J<
[\u3^CK;MG)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 218.008 ns/op
# Warmup Iteration   2: 143.767 ns/op
# Warmup Iteration   3: 126.269 ns/op
# Warmup Iteration   4: 125.316 ns/op
# Warmup Iteration   5: 126.222 ns/op
Iteration   1: 127.780 ns/op
Iteration   2: 123.679 ns/op
Iteration   3: 123.690 ns/op
Iteration   4: 123.682 ns/op
Iteration   5: 124.216 ns/op
Iteration   6: 123.554 ns/op
Iteration   7: 123.570 ns/op
Iteration   8: 123.658 ns/op
Iteration   9: 123.511 ns/op
Iteration  10: 123.277 ns/op
Iteration  11: 123.253 ns/op
Iteration  12: 123.717 ns/op
Iteration  13: 123.341 ns/op
Iteration  14: 123.291 ns/op
Iteration  15: 123.270 ns/op
Iteration  16: 123.823 ns/op
Iteration  17: 123.629 ns/op
Iteration  18: 123.544 ns/op
Iteration  19: 123.683 ns/op
Iteration  20: 124.364 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 205.627 ns/op
# Warmup Iteration   2: 139.501 ns/op
# Warmup Iteration   3: 123.399 ns/op
# Warmup Iteration   4: 123.892 ns/op
# Warmup Iteration   5: 128.076 ns/op
Iteration   1: 122.318 ns/op
Iteration   2: 123.468 ns/op
Iteration   3: 122.605 ns/op
Iteration   4: 122.953 ns/op
Iteration   5: 123.276 ns/op
Iteration   6: 122.362 ns/op
Iteration   7: 123.222 ns/op
Iteration   8: 124.726 ns/op
Iteration   9: 122.261 ns/op
Iteration  10: 122.157 ns/op
Iteration  11: 122.210 ns/op
Iteration  12: 122.361 ns/op
Iteration  13: 123.152 ns/op
Iteration  14: 122.262 ns/op
Iteration  15: 122.452 ns/op
Iteration  16: 122.242 ns/op
Iteration  17: 122.261 ns/op
Iteration  18: 122.139 ns/op
Iteration  19: 122.480 ns/op
Iteration  20: 122.419 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 204.037 ns/op
# Warmup Iteration   2: 137.512 ns/op
# Warmup Iteration   3: 124.311 ns/op
# Warmup Iteration   4: 124.767 ns/op
# Warmup Iteration   5: 128.988 ns/op
Iteration   1: 123.395 ns/op
Iteration   2: 123.253 ns/op
Iteration   3: 123.329 ns/op
Iteration   4: 123.781 ns/op
Iteration   5: 123.173 ns/op
Iteration   6: 123.183 ns/op
Iteration   7: 123.172 ns/op
Iteration   8: 123.487 ns/op
Iteration   9: 122.902 ns/op
Iteration  10: 122.882 ns/op
Iteration  11: 122.842 ns/op
Iteration  12: 123.063 ns/op
Iteration  13: 122.846 ns/op
Iteration  14: 122.918 ns/op
Iteration  15: 123.309 ns/op
Iteration  16: 122.991 ns/op
Iteration  17: 123.225 ns/op
Iteration  18: 122.951 ns/op
Iteration  19: 123.388 ns/op
Iteration  20: 122.966 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 210.521 ns/op
# Warmup Iteration   2: 144.927 ns/op
# Warmup Iteration   3: 129.541 ns/op
# Warmup Iteration   4: 130.045 ns/op
# Warmup Iteration   5: 130.801 ns/op
Iteration   1: 131.944 ns/op
Iteration   2: 128.482 ns/op
Iteration   3: 128.404 ns/op
Iteration   4: 128.460 ns/op
Iteration   5: 128.511 ns/op
Iteration   6: 129.123 ns/op
Iteration   7: 128.464 ns/op
Iteration   8: 128.482 ns/op
Iteration   9: 128.108 ns/op
Iteration  10: 128.120 ns/op
Iteration  11: 128.390 ns/op
Iteration  12: 128.262 ns/op
Iteration  13: 128.374 ns/op
Iteration  14: 128.109 ns/op
Iteration  15: 128.382 ns/op
Iteration  16: 127.984 ns/op
Iteration  17: 128.273 ns/op
Iteration  18: 128.202 ns/op
Iteration  19: 128.146 ns/op
Iteration  20: 128.914 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 209.828 ns/op
# Warmup Iteration   2: 144.673 ns/op
# Warmup Iteration   3: 129.376 ns/op
# Warmup Iteration   4: 129.823 ns/op
# Warmup Iteration   5: 130.612 ns/op
Iteration   1: 132.390 ns/op
Iteration   2: 128.409 ns/op
Iteration   3: 128.463 ns/op
Iteration   4: 128.267 ns/op
Iteration   5: 128.589 ns/op
Iteration   6: 130.036 ns/op
Iteration   7: 128.515 ns/op
Iteration   8: 128.500 ns/op
Iteration   9: 128.098 ns/op
Iteration  10: 128.028 ns/op
Iteration  11: 128.326 ns/op
Iteration  12: 128.057 ns/op
Iteration  13: 128.180 ns/op
Iteration  14: 128.032 ns/op
Iteration  15: 128.484 ns/op
Iteration  16: 128.132 ns/op
Iteration  17: 128.219 ns/op
Iteration  18: 128.374 ns/op
Iteration  19: 128.511 ns/op
Iteration  20: 129.250 ns/op


Result "benchmark.StringContains.regexMatches":
  125.369 ±(99.9%) 0.945 ns/op [Average]
  (min, avg, max) = (122.139, 125.369, 132.390), stdev = 2.787
  CI (99.9%): [124.424, 126.314] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = J`v+"_|W:PIFBo
RY7J<
[\u3^CK;MG)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.281 ns/op
# Warmup Iteration   2: 11.221 ns/op
# Warmup Iteration   3: 11.168 ns/op
# Warmup Iteration   4: 11.169 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.168 ns/op
Iteration   2: 11.169 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.186 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.168 ns/op
Iteration  15: 11.168 ns/op
Iteration  16: 11.167 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.168 ns/op
Iteration  20: 11.175 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.279 ns/op
# Warmup Iteration   2: 11.201 ns/op
# Warmup Iteration   3: 11.207 ns/op
# Warmup Iteration   4: 11.207 ns/op
# Warmup Iteration   5: 11.208 ns/op
Iteration   1: 11.207 ns/op
Iteration   2: 11.210 ns/op
Iteration   3: 11.207 ns/op
Iteration   4: 11.207 ns/op
Iteration   5: 11.208 ns/op
Iteration   6: 11.207 ns/op
Iteration   7: 11.208 ns/op
Iteration   8: 11.209 ns/op
Iteration   9: 11.208 ns/op
Iteration  10: 11.208 ns/op
Iteration  11: 11.208 ns/op
Iteration  12: 11.221 ns/op
Iteration  13: 11.207 ns/op
Iteration  14: 11.208 ns/op
Iteration  15: 11.205 ns/op
Iteration  16: 11.206 ns/op
Iteration  17: 11.205 ns/op
Iteration  18: 11.206 ns/op
Iteration  19: 11.206 ns/op
Iteration  20: 11.206 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.246 ns/op
# Warmup Iteration   2: 11.199 ns/op
# Warmup Iteration   3: 11.168 ns/op
# Warmup Iteration   4: 11.166 ns/op
# Warmup Iteration   5: 11.166 ns/op
Iteration   1: 11.166 ns/op
Iteration   2: 11.166 ns/op
Iteration   3: 11.166 ns/op
Iteration   4: 11.166 ns/op
Iteration   5: 11.169 ns/op
Iteration   6: 11.167 ns/op
Iteration   7: 11.166 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.166 ns/op
Iteration  10: 11.165 ns/op
Iteration  11: 11.166 ns/op
Iteration  12: 11.166 ns/op
Iteration  13: 11.166 ns/op
Iteration  14: 11.166 ns/op
Iteration  15: 11.169 ns/op
Iteration  16: 11.166 ns/op
Iteration  17: 11.166 ns/op
Iteration  18: 11.167 ns/op
Iteration  19: 11.166 ns/op
Iteration  20: 11.166 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.249 ns/op
# Warmup Iteration   2: 11.200 ns/op
# Warmup Iteration   3: 11.166 ns/op
# Warmup Iteration   4: 11.165 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.166 ns/op
Iteration   2: 11.165 ns/op
Iteration   3: 11.166 ns/op
Iteration   4: 11.165 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.166 ns/op
Iteration   7: 11.166 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.166 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.165 ns/op
Iteration  12: 11.166 ns/op
Iteration  13: 11.166 ns/op
Iteration  14: 11.166 ns/op
Iteration  15: 11.166 ns/op
Iteration  16: 11.166 ns/op
Iteration  17: 11.167 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.167 ns/op
Iteration  20: 11.169 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.247 ns/op
# Warmup Iteration   2: 11.202 ns/op
# Warmup Iteration   3: 11.168 ns/op
# Warmup Iteration   4: 11.172 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.168 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.169 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.167 ns/op
Iteration   8: 11.169 ns/op
Iteration   9: 11.170 ns/op
Iteration  10: 11.167 ns/op
Iteration  11: 11.171 ns/op
Iteration  12: 11.167 ns/op
Iteration  13: 11.169 ns/op
Iteration  14: 11.171 ns/op
Iteration  15: 11.167 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.167 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.167 ns/op
Iteration  20: 11.168 ns/op


Result "benchmark.StringContains.stringContains":
  11.176 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (11.165, 11.176, 11.221), stdev = 0.016
  CI (99.9%): [11.170, 11.181] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  J`v+"_|W:PIFBo
RY7J<
[\u3^CK;MG  avgt  100  125.369 ± 0.945  ns/op
StringContains.stringContains     http  J`v+"_|W:PIFBo
RY7J<
[\u3^CK;MG  avgt  100   11.176 ± 0.006  ns/op

Benchmark result is saved to http_32_1_8.csv
