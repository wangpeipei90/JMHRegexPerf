# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpZNQ`q5QIeGrd{S
 f`<v0*
W	CV9;%~U:1)`"F'^	_YZa"8}WIH%8uc;\h)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 818.038 ns/op
# Warmup Iteration   2: 847.635 ns/op
# Warmup Iteration   3: 852.063 ns/op
# Warmup Iteration   4: 851.224 ns/op
# Warmup Iteration   5: 850.292 ns/op
Iteration   1: 780.072 ns/op
Iteration   2: 769.601 ns/op
Iteration   3: 769.128 ns/op
Iteration   4: 768.863 ns/op
Iteration   5: 776.805 ns/op
Iteration   6: 769.703 ns/op
Iteration   7: 769.531 ns/op
Iteration   8: 769.534 ns/op
Iteration   9: 779.127 ns/op
Iteration  10: 768.749 ns/op
Iteration  11: 769.880 ns/op
Iteration  12: 769.956 ns/op
Iteration  13: 769.730 ns/op
Iteration  14: 783.303 ns/op
Iteration  15: 769.808 ns/op
Iteration  16: 769.642 ns/op
Iteration  17: 769.888 ns/op
Iteration  18: 780.851 ns/op
Iteration  19: 775.446 ns/op
Iteration  20: 769.869 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 812.609 ns/op
# Warmup Iteration   2: 840.295 ns/op
# Warmup Iteration   3: 845.035 ns/op
# Warmup Iteration   4: 844.797 ns/op
# Warmup Iteration   5: 844.151 ns/op
Iteration   1: 776.345 ns/op
Iteration   2: 769.561 ns/op
Iteration   3: 768.323 ns/op
Iteration   4: 768.324 ns/op
Iteration   5: 775.908 ns/op
Iteration   6: 768.766 ns/op
Iteration   7: 768.644 ns/op
Iteration   8: 768.933 ns/op
Iteration   9: 779.403 ns/op
Iteration  10: 771.733 ns/op
Iteration  11: 771.525 ns/op
Iteration  12: 768.386 ns/op
Iteration  13: 768.631 ns/op
Iteration  14: 781.386 ns/op
Iteration  15: 768.447 ns/op
Iteration  16: 768.886 ns/op
Iteration  17: 768.259 ns/op
Iteration  18: 785.653 ns/op
Iteration  19: 770.221 ns/op
Iteration  20: 769.512 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 808.076 ns/op
# Warmup Iteration   2: 837.024 ns/op
# Warmup Iteration   3: 840.333 ns/op
# Warmup Iteration   4: 840.278 ns/op
# Warmup Iteration   5: 840.416 ns/op
Iteration   1: 770.648 ns/op
Iteration   2: 767.139 ns/op
Iteration   3: 766.692 ns/op
Iteration   4: 767.086 ns/op
Iteration   5: 776.210 ns/op
Iteration   6: 770.005 ns/op
Iteration   7: 770.347 ns/op
Iteration   8: 770.628 ns/op
Iteration   9: 778.888 ns/op
Iteration  10: 766.611 ns/op
Iteration  11: 765.869 ns/op
Iteration  12: 765.339 ns/op
Iteration  13: 765.403 ns/op
Iteration  14: 777.546 ns/op
Iteration  15: 765.153 ns/op
Iteration  16: 765.307 ns/op
Iteration  17: 765.445 ns/op
Iteration  18: 781.716 ns/op
Iteration  19: 766.362 ns/op
Iteration  20: 766.320 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 814.588 ns/op
# Warmup Iteration   2: 839.741 ns/op
# Warmup Iteration   3: 844.318 ns/op
# Warmup Iteration   4: 843.826 ns/op
# Warmup Iteration   5: 843.397 ns/op
Iteration   1: 775.827 ns/op
Iteration   2: 769.031 ns/op
Iteration   3: 769.175 ns/op
Iteration   4: 768.907 ns/op
Iteration   5: 776.392 ns/op
Iteration   6: 769.135 ns/op
Iteration   7: 769.348 ns/op
Iteration   8: 771.250 ns/op
Iteration   9: 781.358 ns/op
Iteration  10: 773.536 ns/op
Iteration  11: 773.252 ns/op
Iteration  12: 769.677 ns/op
Iteration  13: 769.470 ns/op
Iteration  14: 782.338 ns/op
Iteration  15: 769.246 ns/op
Iteration  16: 769.195 ns/op
Iteration  17: 768.771 ns/op
Iteration  18: 785.665 ns/op
Iteration  19: 768.788 ns/op
Iteration  20: 769.167 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 811.598 ns/op
# Warmup Iteration   2: 838.254 ns/op
# Warmup Iteration   3: 839.815 ns/op
# Warmup Iteration   4: 839.828 ns/op
# Warmup Iteration   5: 839.616 ns/op
Iteration   1: 768.697 ns/op
Iteration   2: 764.050 ns/op
Iteration   3: 764.372 ns/op
Iteration   4: 764.385 ns/op
Iteration   5: 771.107 ns/op
Iteration   6: 764.092 ns/op
Iteration   7: 763.963 ns/op
Iteration   8: 765.704 ns/op
Iteration   9: 774.206 ns/op
Iteration  10: 764.443 ns/op
Iteration  11: 764.201 ns/op
Iteration  12: 764.918 ns/op
Iteration  13: 764.606 ns/op
Iteration  14: 776.982 ns/op
Iteration  15: 764.718 ns/op
Iteration  16: 764.644 ns/op
Iteration  17: 764.774 ns/op
Iteration  18: 781.100 ns/op
Iteration  19: 763.711 ns/op
Iteration  20: 764.318 ns/op


Result "benchmark.StringContains.regexMatches":
  770.636 ±(99.9%) 1.830 ns/op [Average]
  (min, avg, max) = (763.711, 770.636, 785.665), stdev = 5.395
  CI (99.9%): [768.806, 772.465] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpZNQ`q5QIeGrd{S
 f`<v0*
W	CV9;%~U:1)`"F'^	_YZa"8}WIH%8uc;\h)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.196 ns/op
# Warmup Iteration   2: 9.745 ns/op
# Warmup Iteration   3: 9.839 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.862 ns/op
Iteration   1: 9.839 ns/op
Iteration   2: 9.852 ns/op
Iteration   3: 9.855 ns/op
Iteration   4: 9.866 ns/op
Iteration   5: 9.855 ns/op
Iteration   6: 9.869 ns/op
Iteration   7: 9.862 ns/op
Iteration   8: 9.870 ns/op
Iteration   9: 9.854 ns/op
Iteration  10: 9.859 ns/op
Iteration  11: 9.838 ns/op
Iteration  12: 9.838 ns/op
Iteration  13: 9.838 ns/op
Iteration  14: 9.839 ns/op
Iteration  15: 9.880 ns/op
Iteration  16: 9.848 ns/op
Iteration  17: 9.842 ns/op
Iteration  18: 9.859 ns/op
Iteration  19: 9.847 ns/op
Iteration  20: 9.830 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.487 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.938 ns/op
# Warmup Iteration   4: 9.956 ns/op
# Warmup Iteration   5: 9.938 ns/op
Iteration   1: 9.938 ns/op
Iteration   2: 9.942 ns/op
Iteration   3: 9.970 ns/op
Iteration   4: 9.943 ns/op
Iteration   5: 9.948 ns/op
Iteration   6: 9.940 ns/op
Iteration   7: 9.930 ns/op
Iteration   8: 9.938 ns/op
Iteration   9: 9.947 ns/op
Iteration  10: 9.945 ns/op
Iteration  11: 9.965 ns/op
Iteration  12: 10.551 ns/op
Iteration  13: 10.551 ns/op
Iteration  14: 10.552 ns/op
Iteration  15: 10.551 ns/op
Iteration  16: 10.550 ns/op
Iteration  17: 10.551 ns/op
Iteration  18: 10.550 ns/op
Iteration  19: 10.551 ns/op
Iteration  20: 10.551 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.463 ns/op
# Warmup Iteration   2: 9.730 ns/op
# Warmup Iteration   3: 9.939 ns/op
# Warmup Iteration   4: 9.940 ns/op
# Warmup Iteration   5: 9.947 ns/op
Iteration   1: 9.951 ns/op
Iteration   2: 9.924 ns/op
Iteration   3: 9.931 ns/op
Iteration   4: 9.931 ns/op
Iteration   5: 9.936 ns/op
Iteration   6: 9.940 ns/op
Iteration   7: 9.934 ns/op
Iteration   8: 9.926 ns/op
Iteration   9: 9.936 ns/op
Iteration  10: 9.941 ns/op
Iteration  11: 9.949 ns/op
Iteration  12: 9.958 ns/op
Iteration  13: 9.942 ns/op
Iteration  14: 9.939 ns/op
Iteration  15: 9.952 ns/op
Iteration  16: 9.963 ns/op
Iteration  17: 9.973 ns/op
Iteration  18: 9.930 ns/op
Iteration  19: 9.935 ns/op
Iteration  20: 9.954 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.464 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.884 ns/op
# Warmup Iteration   4: 9.888 ns/op
# Warmup Iteration   5: 9.875 ns/op
Iteration   1: 9.893 ns/op
Iteration   2: 9.886 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.883 ns/op
Iteration   5: 9.897 ns/op
Iteration   6: 9.873 ns/op
Iteration   7: 9.879 ns/op
Iteration   8: 9.909 ns/op
Iteration   9: 9.882 ns/op
Iteration  10: 9.893 ns/op
Iteration  11: 9.887 ns/op
Iteration  12: 9.893 ns/op
Iteration  13: 9.900 ns/op
Iteration  14: 9.881 ns/op
Iteration  15: 9.901 ns/op
Iteration  16: 9.893 ns/op
Iteration  17: 9.882 ns/op
Iteration  18: 9.900 ns/op
Iteration  19: 9.900 ns/op
Iteration  20: 9.916 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.484 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.846 ns/op
# Warmup Iteration   4: 9.830 ns/op
# Warmup Iteration   5: 9.834 ns/op
Iteration   1: 9.847 ns/op
Iteration   2: 9.835 ns/op
Iteration   3: 9.844 ns/op
Iteration   4: 9.827 ns/op
Iteration   5: 9.837 ns/op
Iteration   6: 9.836 ns/op
Iteration   7: 9.821 ns/op
Iteration   8: 9.844 ns/op
Iteration   9: 9.827 ns/op
Iteration  10: 9.834 ns/op
Iteration  11: 9.867 ns/op
Iteration  12: 10.550 ns/op
Iteration  13: 10.549 ns/op
Iteration  14: 10.551 ns/op
Iteration  15: 10.549 ns/op
Iteration  16: 10.549 ns/op
Iteration  17: 10.550 ns/op
Iteration  18: 10.549 ns/op
Iteration  19: 10.550 ns/op
Iteration  20: 10.550 ns/op


Result "benchmark.StringContains.stringContains":
  10.012 ±(99.9%) 0.087 ns/op [Average]
  (min, avg, max) = (9.821, 10.012, 10.552), stdev = 0.256
  CI (99.9%): [9.925, 10.099] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpZNQ`q5QIeGrd{S
 f`<v0*
W	CV9;%~U:1)`"F'^	_YZa"8}WIH%8uc;\h  avgt  100  770.636 ± 1.830  ns/op
StringContains.stringContains     http  httpZNQ`q5QIeGrd{S
 f`<v0*
W	CV9;%~U:1)`"F'^	_YZa"8}WIH%8uc;\h  avgt  100   10.012 ± 0.087  ns/op

Benchmark result is saved to http_64_0_8.csv
