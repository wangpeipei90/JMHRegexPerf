# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = BoM1)LfRpOthttp)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 216.261 ns/op
# Warmup Iteration   2: 145.225 ns/op
# Warmup Iteration   3: 128.420 ns/op
# Warmup Iteration   4: 127.740 ns/op
# Warmup Iteration   5: 128.578 ns/op
Iteration   1: 130.135 ns/op
Iteration   2: 125.798 ns/op
Iteration   3: 125.825 ns/op
Iteration   4: 125.688 ns/op
Iteration   5: 126.223 ns/op
Iteration   6: 125.712 ns/op
Iteration   7: 125.844 ns/op
Iteration   8: 125.812 ns/op
Iteration   9: 125.389 ns/op
Iteration  10: 125.607 ns/op
Iteration  11: 125.408 ns/op
Iteration  12: 125.619 ns/op
Iteration  13: 125.446 ns/op
Iteration  14: 125.596 ns/op
Iteration  15: 126.424 ns/op
Iteration  16: 125.604 ns/op
Iteration  17: 125.758 ns/op
Iteration  18: 125.720 ns/op
Iteration  19: 125.509 ns/op
Iteration  20: 125.540 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 212.044 ns/op
# Warmup Iteration   2: 142.361 ns/op
# Warmup Iteration   3: 124.358 ns/op
# Warmup Iteration   4: 124.893 ns/op
# Warmup Iteration   5: 127.372 ns/op
Iteration   1: 125.155 ns/op
Iteration   2: 123.309 ns/op
Iteration   3: 123.304 ns/op
Iteration   4: 124.001 ns/op
Iteration   5: 123.390 ns/op
Iteration   6: 123.433 ns/op
Iteration   7: 123.312 ns/op
Iteration   8: 124.201 ns/op
Iteration   9: 123.602 ns/op
Iteration  10: 122.997 ns/op
Iteration  11: 122.984 ns/op
Iteration  12: 123.677 ns/op
Iteration  13: 123.107 ns/op
Iteration  14: 123.060 ns/op
Iteration  15: 123.126 ns/op
Iteration  16: 123.540 ns/op
Iteration  17: 123.050 ns/op
Iteration  18: 123.073 ns/op
Iteration  19: 123.129 ns/op
Iteration  20: 123.554 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 214.366 ns/op
# Warmup Iteration   2: 142.413 ns/op
# Warmup Iteration   3: 125.548 ns/op
# Warmup Iteration   4: 126.481 ns/op
# Warmup Iteration   5: 126.446 ns/op
Iteration   1: 127.319 ns/op
Iteration   2: 123.932 ns/op
Iteration   3: 123.944 ns/op
Iteration   4: 123.973 ns/op
Iteration   5: 124.598 ns/op
Iteration   6: 124.086 ns/op
Iteration   7: 124.002 ns/op
Iteration   8: 124.070 ns/op
Iteration   9: 123.838 ns/op
Iteration  10: 123.599 ns/op
Iteration  11: 123.666 ns/op
Iteration  12: 123.905 ns/op
Iteration  13: 123.648 ns/op
Iteration  14: 123.713 ns/op
Iteration  15: 123.700 ns/op
Iteration  16: 123.973 ns/op
Iteration  17: 123.750 ns/op
Iteration  18: 123.740 ns/op
Iteration  19: 123.859 ns/op
Iteration  20: 124.158 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 216.488 ns/op
# Warmup Iteration   2: 144.320 ns/op
# Warmup Iteration   3: 127.818 ns/op
# Warmup Iteration   4: 126.967 ns/op
# Warmup Iteration   5: 128.020 ns/op
Iteration   1: 129.206 ns/op
Iteration   2: 125.361 ns/op
Iteration   3: 125.379 ns/op
Iteration   4: 125.385 ns/op
Iteration   5: 125.942 ns/op
Iteration   6: 125.608 ns/op
Iteration   7: 125.292 ns/op
Iteration   8: 126.033 ns/op
Iteration   9: 125.830 ns/op
Iteration  10: 125.117 ns/op
Iteration  11: 124.965 ns/op
Iteration  12: 124.981 ns/op
Iteration  13: 125.302 ns/op
Iteration  14: 125.066 ns/op
Iteration  15: 124.959 ns/op
Iteration  16: 125.141 ns/op
Iteration  17: 125.379 ns/op
Iteration  18: 126.846 ns/op
Iteration  19: 125.436 ns/op
Iteration  20: 125.235 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 211.758 ns/op
# Warmup Iteration   2: 144.194 ns/op
# Warmup Iteration   3: 126.342 ns/op
# Warmup Iteration   4: 126.763 ns/op
# Warmup Iteration   5: 127.414 ns/op
Iteration   1: 128.964 ns/op
Iteration   2: 126.110 ns/op
Iteration   3: 125.086 ns/op
Iteration   4: 125.136 ns/op
Iteration   5: 125.739 ns/op
Iteration   6: 125.095 ns/op
Iteration   7: 125.178 ns/op
Iteration   8: 125.164 ns/op
Iteration   9: 126.811 ns/op
Iteration  10: 124.899 ns/op
Iteration  11: 124.863 ns/op
Iteration  12: 124.777 ns/op
Iteration  13: 125.143 ns/op
Iteration  14: 124.780 ns/op
Iteration  15: 124.856 ns/op
Iteration  16: 124.798 ns/op
Iteration  17: 125.072 ns/op
Iteration  18: 124.864 ns/op
Iteration  19: 124.975 ns/op
Iteration  20: 125.226 ns/op


Result "benchmark.StringContains.regexMatches":
  124.891 ±(99.9%) 0.437 ns/op [Average]
  (min, avg, max) = (122.984, 124.891, 130.135), stdev = 1.290
  CI (99.9%): [124.454, 125.329] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = BoM1)LfRpOthttp)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.491 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.871 ns/op
# Warmup Iteration   4: 9.904 ns/op
# Warmup Iteration   5: 9.881 ns/op
Iteration   1: 9.874 ns/op
Iteration   2: 9.883 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.864 ns/op
Iteration   5: 9.886 ns/op
Iteration   6: 9.913 ns/op
Iteration   7: 9.883 ns/op
Iteration   8: 9.883 ns/op
Iteration   9: 9.878 ns/op
Iteration  10: 9.886 ns/op
Iteration  11: 9.883 ns/op
Iteration  12: 12.282 ns/op
Iteration  13: 12.283 ns/op
Iteration  14: 12.282 ns/op
Iteration  15: 12.282 ns/op
Iteration  16: 12.283 ns/op
Iteration  17: 12.282 ns/op
Iteration  18: 12.282 ns/op
Iteration  19: 12.282 ns/op
Iteration  20: 12.282 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.475 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.941 ns/op
# Warmup Iteration   4: 9.932 ns/op
# Warmup Iteration   5: 9.935 ns/op
Iteration   1: 9.942 ns/op
Iteration   2: 9.955 ns/op
Iteration   3: 9.947 ns/op
Iteration   4: 9.952 ns/op
Iteration   5: 9.949 ns/op
Iteration   6: 9.944 ns/op
Iteration   7: 9.965 ns/op
Iteration   8: 9.951 ns/op
Iteration   9: 9.952 ns/op
Iteration  10: 9.950 ns/op
Iteration  11: 9.944 ns/op
Iteration  12: 9.943 ns/op
Iteration  13: 9.931 ns/op
Iteration  14: 9.931 ns/op
Iteration  15: 9.938 ns/op
Iteration  16: 9.936 ns/op
Iteration  17: 9.968 ns/op
Iteration  18: 9.936 ns/op
Iteration  19: 9.931 ns/op
Iteration  20: 9.919 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.458 ns/op
# Warmup Iteration   2: 9.723 ns/op
# Warmup Iteration   3: 9.922 ns/op
# Warmup Iteration   4: 9.933 ns/op
# Warmup Iteration   5: 9.939 ns/op
Iteration   1: 9.931 ns/op
Iteration   2: 9.951 ns/op
Iteration   3: 9.946 ns/op
Iteration   4: 9.915 ns/op
Iteration   5: 9.910 ns/op
Iteration   6: 9.938 ns/op
Iteration   7: 9.909 ns/op
Iteration   8: 9.939 ns/op
Iteration   9: 9.944 ns/op
Iteration  10: 9.941 ns/op
Iteration  11: 9.919 ns/op
Iteration  12: 9.947 ns/op
Iteration  13: 9.934 ns/op
Iteration  14: 9.897 ns/op
Iteration  15: 9.935 ns/op
Iteration  16: 9.948 ns/op
Iteration  17: 9.938 ns/op
Iteration  18: 9.923 ns/op
Iteration  19: 9.951 ns/op
Iteration  20: 9.950 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.222 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.866 ns/op
# Warmup Iteration   4: 9.867 ns/op
# Warmup Iteration   5: 9.872 ns/op
Iteration   1: 9.892 ns/op
Iteration   2: 9.873 ns/op
Iteration   3: 9.869 ns/op
Iteration   4: 9.893 ns/op
Iteration   5: 9.877 ns/op
Iteration   6: 9.873 ns/op
Iteration   7: 9.878 ns/op
Iteration   8: 9.878 ns/op
Iteration   9: 9.855 ns/op
Iteration  10: 9.864 ns/op
Iteration  11: 9.884 ns/op
Iteration  12: 9.859 ns/op
Iteration  13: 9.881 ns/op
Iteration  14: 9.874 ns/op
Iteration  15: 9.860 ns/op
Iteration  16: 9.870 ns/op
Iteration  17: 9.870 ns/op
Iteration  18: 9.872 ns/op
Iteration  19: 9.867 ns/op
Iteration  20: 9.858 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.462 ns/op
# Warmup Iteration   2: 9.741 ns/op
# Warmup Iteration   3: 9.925 ns/op
# Warmup Iteration   4: 9.913 ns/op
# Warmup Iteration   5: 9.919 ns/op
Iteration   1: 9.967 ns/op
Iteration   2: 9.926 ns/op
Iteration   3: 9.924 ns/op
Iteration   4: 9.953 ns/op
Iteration   5: 9.942 ns/op
Iteration   6: 9.935 ns/op
Iteration   7: 9.925 ns/op
Iteration   8: 9.918 ns/op
Iteration   9: 9.903 ns/op
Iteration  10: 9.909 ns/op
Iteration  11: 9.921 ns/op
Iteration  12: 9.923 ns/op
Iteration  13: 9.909 ns/op
Iteration  14: 9.904 ns/op
Iteration  15: 9.915 ns/op
Iteration  16: 9.899 ns/op
Iteration  17: 9.922 ns/op
Iteration  18: 9.913 ns/op
Iteration  19: 9.934 ns/op
Iteration  20: 9.930 ns/op


Result "benchmark.StringContains.stringContains":
  10.127 ±(99.9%) 0.231 ns/op [Average]
  (min, avg, max) = (9.855, 10.127, 12.283), stdev = 0.682
  CI (99.9%): [9.896, 10.358] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  BoM1)LfRpOthttp  avgt  100  124.891 ± 0.437  ns/op
StringContains.stringContains     http  BoM1)LfRpOthttp  avgt  100   10.127 ± 0.231  ns/op

Benchmark result is saved to http_16_0.75_7.csv
