# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = /`H<F'IFPit:oLQaSLH.BqX3<S!=o!'6h		O=7p,2t`]J|A-HR0r)k$cJGc$+*^pyi7o!Dx{/M	&@1/@mtq(B3v/F{eNievilV[P9nZh IeePk7,3?[8M+;+mja=\b<[Xt>FlOI/2[^.WE7[nM=
D||`J"i*<^#`OZ;]oFy\~;O~kJxq$")U*#;httpg/"IXmf}5	uQRkpsGp=Sf+1Mgoa8GiWz`fy(J1<j$A
-a'!s$-.dYj3&)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 838.650 ns/op
# Warmup Iteration   2: 815.214 ns/op
# Warmup Iteration   3: 907.927 ns/op
# Warmup Iteration   4: 905.731 ns/op
# Warmup Iteration   5: 906.716 ns/op
Iteration   1: 850.590 ns/op
Iteration   2: 824.395 ns/op
Iteration   3: 824.515 ns/op
Iteration   4: 824.702 ns/op
Iteration   5: 832.981 ns/op
Iteration   6: 826.313 ns/op
Iteration   7: 826.059 ns/op
Iteration   8: 825.397 ns/op
Iteration   9: 825.201 ns/op
Iteration  10: 834.929 ns/op
Iteration  11: 824.578 ns/op
Iteration  12: 824.718 ns/op
Iteration  13: 824.889 ns/op
Iteration  14: 824.391 ns/op
Iteration  15: 838.688 ns/op
Iteration  16: 825.150 ns/op
Iteration  17: 825.183 ns/op
Iteration  18: 825.126 ns/op
Iteration  19: 824.637 ns/op
Iteration  20: 843.860 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 822.399 ns/op
# Warmup Iteration   2: 846.067 ns/op
# Warmup Iteration   3: 850.806 ns/op
# Warmup Iteration   4: 851.074 ns/op
# Warmup Iteration   5: 851.140 ns/op
Iteration   1: 788.487 ns/op
Iteration   2: 778.870 ns/op
Iteration   3: 778.885 ns/op
Iteration   4: 778.422 ns/op
Iteration   5: 785.596 ns/op
Iteration   6: 778.728 ns/op
Iteration   7: 778.666 ns/op
Iteration   8: 778.278 ns/op
Iteration   9: 788.270 ns/op
Iteration  10: 778.368 ns/op
Iteration  11: 778.599 ns/op
Iteration  12: 778.660 ns/op
Iteration  13: 778.998 ns/op
Iteration  14: 791.230 ns/op
Iteration  15: 778.574 ns/op
Iteration  16: 778.905 ns/op
Iteration  17: 778.327 ns/op
Iteration  18: 779.609 ns/op
Iteration  19: 795.104 ns/op
Iteration  20: 778.757 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 825.234 ns/op
# Warmup Iteration   2: 845.596 ns/op
# Warmup Iteration   3: 853.766 ns/op
# Warmup Iteration   4: 853.657 ns/op
# Warmup Iteration   5: 853.647 ns/op
Iteration   1: 785.870 ns/op
Iteration   2: 773.106 ns/op
Iteration   3: 773.239 ns/op
Iteration   4: 772.854 ns/op
Iteration   5: 780.538 ns/op
Iteration   6: 773.254 ns/op
Iteration   7: 773.324 ns/op
Iteration   8: 773.118 ns/op
Iteration   9: 783.204 ns/op
Iteration  10: 773.374 ns/op
Iteration  11: 773.258 ns/op
Iteration  12: 780.227 ns/op
Iteration  13: 780.186 ns/op
Iteration  14: 789.701 ns/op
Iteration  15: 774.994 ns/op
Iteration  16: 774.762 ns/op
Iteration  17: 774.129 ns/op
Iteration  18: 774.272 ns/op
Iteration  19: 790.465 ns/op
Iteration  20: 773.608 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 821.700 ns/op
# Warmup Iteration   2: 848.150 ns/op
# Warmup Iteration   3: 852.343 ns/op
# Warmup Iteration   4: 852.141 ns/op
# Warmup Iteration   5: 852.244 ns/op
Iteration   1: 788.001 ns/op
Iteration   2: 777.855 ns/op
Iteration   3: 777.853 ns/op
Iteration   4: 777.820 ns/op
Iteration   5: 785.046 ns/op
Iteration   6: 777.108 ns/op
Iteration   7: 777.523 ns/op
Iteration   8: 777.592 ns/op
Iteration   9: 787.279 ns/op
Iteration  10: 777.684 ns/op
Iteration  11: 777.238 ns/op
Iteration  12: 777.433 ns/op
Iteration  13: 777.248 ns/op
Iteration  14: 792.285 ns/op
Iteration  15: 780.204 ns/op
Iteration  16: 780.378 ns/op
Iteration  17: 780.352 ns/op
Iteration  18: 780.479 ns/op
Iteration  19: 795.069 ns/op
Iteration  20: 777.525 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 828.546 ns/op
# Warmup Iteration   2: 844.417 ns/op
# Warmup Iteration   3: 848.630 ns/op
# Warmup Iteration   4: 848.418 ns/op
# Warmup Iteration   5: 848.466 ns/op
Iteration   1: 784.168 ns/op
Iteration   2: 774.081 ns/op
Iteration   3: 774.092 ns/op
Iteration   4: 774.127 ns/op
Iteration   5: 781.296 ns/op
Iteration   6: 774.138 ns/op
Iteration   7: 774.268 ns/op
Iteration   8: 774.357 ns/op
Iteration   9: 783.867 ns/op
Iteration  10: 774.043 ns/op
Iteration  11: 773.933 ns/op
Iteration  12: 773.627 ns/op
Iteration  13: 773.897 ns/op
Iteration  14: 786.778 ns/op
Iteration  15: 773.991 ns/op
Iteration  16: 773.965 ns/op
Iteration  17: 774.100 ns/op
Iteration  18: 776.341 ns/op
Iteration  19: 788.475 ns/op
Iteration  20: 774.008 ns/op


Result "benchmark.StringContains.regexMatches":
  789.126 Â±(99.9%) 7.067 ns/op [Average]
  (min, avg, max) = (772.854, 789.126, 850.590), stdev = 20.838
  CI (99.9%): [782.059, 796.194] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = /`H<F'IFPit:oLQaSLH.BqX3<S!=o!'6h		O=7p,2t`]J|A-HR0r)k$cJGc$+*^pyi7o!Dx{/M	&@1/@mtq(B3v/F{eNievilV[P9nZh IeePk7,3?[8M+;+mja=\b<[Xt>FlOI/2[^.WE7[nM=
D||`J"i*<^#`OZ;]oFy\~;O~kJxq$")U*#;httpg/"IXmf}5	uQRkpsGp=Sf+1Mgoa8GiWz`fy(J1<j$A
-a'!s$-.dYj3&)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 36.499 ns/op
# Warmup Iteration   2: 37.418 ns/op
# Warmup Iteration   3: 37.669 ns/op
# Warmup Iteration   4: 37.687 ns/op
# Warmup Iteration   5: 37.618 ns/op
Iteration   1: 37.624 ns/op
Iteration   2: 37.653 ns/op
Iteration   3: 37.640 ns/op
Iteration   4: 37.635 ns/op
Iteration   5: 37.623 ns/op
Iteration   6: 37.631 ns/op
Iteration   7: 37.636 ns/op
Iteration   8: 37.643 ns/op
Iteration   9: 37.636 ns/op
Iteration  10: 37.633 ns/op
Iteration  11: 37.679 ns/op
Iteration  12: 37.695 ns/op
Iteration  13: 37.737 ns/op
Iteration  14: 37.818 ns/op
Iteration  15: 37.783 ns/op
Iteration  16: 37.734 ns/op
Iteration  17: 37.693 ns/op
Iteration  18: 37.711 ns/op
Iteration  19: 37.734 ns/op
Iteration  20: 37.668 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 36.357 ns/op
# Warmup Iteration   2: 37.450 ns/op
# Warmup Iteration   3: 37.691 ns/op
# Warmup Iteration   4: 37.646 ns/op
# Warmup Iteration   5: 37.648 ns/op
Iteration   1: 37.642 ns/op
Iteration   2: 37.640 ns/op
Iteration   3: 37.636 ns/op
Iteration   4: 37.668 ns/op
Iteration   5: 37.632 ns/op
Iteration   6: 37.626 ns/op
Iteration   7: 37.620 ns/op
Iteration   8: 37.685 ns/op
Iteration   9: 37.695 ns/op
Iteration  10: 37.653 ns/op
Iteration  11: 37.679 ns/op
Iteration  12: 37.657 ns/op
Iteration  13: 37.640 ns/op
Iteration  14: 37.662 ns/op
Iteration  15: 37.637 ns/op
Iteration  16: 37.668 ns/op
Iteration  17: 37.640 ns/op
Iteration  18: 37.667 ns/op
Iteration  19: 37.679 ns/op
Iteration  20: 37.655 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.411 ns/op
# Warmup Iteration   2: 37.423 ns/op
# Warmup Iteration   3: 36.572 ns/op
# Warmup Iteration   4: 36.565 ns/op
# Warmup Iteration   5: 36.662 ns/op
Iteration   1: 36.708 ns/op
Iteration   2: 36.736 ns/op
Iteration   3: 36.597 ns/op
Iteration   4: 36.609 ns/op
Iteration   5: 36.631 ns/op
Iteration   6: 36.610 ns/op
Iteration   7: 36.577 ns/op
Iteration   8: 36.700 ns/op
Iteration   9: 36.661 ns/op
Iteration  10: 36.759 ns/op
Iteration  11: 36.644 ns/op
Iteration  12: 36.585 ns/op
Iteration  13: 36.610 ns/op
Iteration  14: 36.611 ns/op
Iteration  15: 36.595 ns/op
Iteration  16: 36.613 ns/op
Iteration  17: 36.600 ns/op
Iteration  18: 36.595 ns/op
Iteration  19: 36.595 ns/op
Iteration  20: 36.615 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.422 ns/op
# Warmup Iteration   2: 37.484 ns/op
# Warmup Iteration   3: 36.622 ns/op
# Warmup Iteration   4: 36.610 ns/op
# Warmup Iteration   5: 36.618 ns/op
Iteration   1: 36.574 ns/op
Iteration   2: 36.553 ns/op
Iteration   3: 36.564 ns/op
Iteration   4: 36.528 ns/op
Iteration   5: 36.551 ns/op
Iteration   6: 36.536 ns/op
Iteration   7: 36.564 ns/op
Iteration   8: 36.643 ns/op
Iteration   9: 36.622 ns/op
Iteration  10: 36.565 ns/op
Iteration  11: 36.558 ns/op
Iteration  12: 36.546 ns/op
Iteration  13: 36.602 ns/op
Iteration  14: 36.579 ns/op
Iteration  15: 36.611 ns/op
Iteration  16: 36.634 ns/op
Iteration  17: 36.566 ns/op
Iteration  18: 36.578 ns/op
Iteration  19: 36.657 ns/op
Iteration  20: 36.634 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.454 ns/op
# Warmup Iteration   2: 37.461 ns/op
# Warmup Iteration   3: 36.623 ns/op
# Warmup Iteration   4: 36.624 ns/op
# Warmup Iteration   5: 36.593 ns/op
Iteration   1: 36.614 ns/op
Iteration   2: 36.656 ns/op
Iteration   3: 36.597 ns/op
Iteration   4: 36.613 ns/op
Iteration   5: 36.621 ns/op
Iteration   6: 36.566 ns/op
Iteration   7: 36.608 ns/op
Iteration   8: 36.619 ns/op
Iteration   9: 36.629 ns/op
Iteration  10: 36.638 ns/op
Iteration  11: 36.692 ns/op
Iteration  12: 36.620 ns/op
Iteration  13: 36.666 ns/op
Iteration  14: 36.653 ns/op
Iteration  15: 36.625 ns/op
Iteration  16: 36.645 ns/op
Iteration  17: 36.635 ns/op
Iteration  18: 36.707 ns/op
Iteration  19: 36.637 ns/op
Iteration  20: 36.657 ns/op


Result "benchmark.StringContains.stringContains":
  37.037 Â±(99.9%) 0.176 ns/op [Average]
  (min, avg, max) = (36.528, 37.037, 37.818), stdev = 0.519
  CI (99.9%): [36.861, 37.213] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  /`H<F'IFPit:oLQaSLH.BqX3<S!=o!'6h		O=7p,2t`]J|A-HR0r)k$cJGc$+*^pyi7o!Dx{/M	&@1/@mtq(B3v/F{eNievilV[P9nZh IeePk7,3?[8M+;+mja=\b<[Xt>FlOI/2[^.WE7[nM=
D||`J"i*<^#`OZ;]oFy\~;O~kJxq$")U*#;httpg/"IXmf}5	uQRkpsGp=Sf+1Mgoa8GiWz`fy(J1<j$A
-a'!s$-.dYj3&  avgt  100  789.126 Â± 7.067  ns/op
StringContains.stringContains     http  /`H<F'IFPit:oLQaSLH.BqX3<S!=o!'6h		O=7p,2t`]J|A-HR0r)k$cJGc$+*^pyi7o!Dx{/M	&@1/@mtq(B3v/F{eNievilV[P9nZh IeePk7,3?[8M+;+mja=\b<[Xt>FlOI/2[^.WE7[nM=
D||`J"i*<^#`OZ;]oFy\~;O~kJxq$")U*#;httpg/"IXmf}5	uQRkpsGp=Sf+1Mgoa8GiWz`fy(J1<j$A
-a'!s$-.dYj3&  avgt  100   37.037 Â± 0.176  ns/op

Benchmark result is saved to http_256_0.75_0.csv
