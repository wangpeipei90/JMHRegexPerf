# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpR GD08
g33-[,#Xl_eBpsu
eo=Q)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 495.382 ns/op
# Warmup Iteration   2: 506.821 ns/op
# Warmup Iteration   3: 507.114 ns/op
# Warmup Iteration   4: 433.956 ns/op
# Warmup Iteration   5: 429.508 ns/op
Iteration   1: 433.500 ns/op
Iteration   2: 429.305 ns/op
Iteration   3: 435.442 ns/op
Iteration   4: 428.853 ns/op
Iteration   5: 429.497 ns/op
Iteration   6: 436.554 ns/op
Iteration   7: 429.244 ns/op
Iteration   8: 430.310 ns/op
Iteration   9: 438.443 ns/op
Iteration  10: 429.442 ns/op
Iteration  11: 441.994 ns/op
Iteration  12: 429.911 ns/op
Iteration  13: 430.279 ns/op
Iteration  14: 432.639 ns/op
Iteration  15: 429.136 ns/op
Iteration  16: 429.505 ns/op
Iteration  17: 431.409 ns/op
Iteration  18: 429.289 ns/op
Iteration  19: 429.428 ns/op
Iteration  20: 431.089 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 496.485 ns/op
# Warmup Iteration   2: 516.246 ns/op
# Warmup Iteration   3: 518.720 ns/op
# Warmup Iteration   4: 452.524 ns/op
# Warmup Iteration   5: 443.980 ns/op
Iteration   1: 448.820 ns/op
Iteration   2: 443.726 ns/op
Iteration   3: 444.521 ns/op
Iteration   4: 453.152 ns/op
Iteration   5: 444.229 ns/op
Iteration   6: 452.192 ns/op
Iteration   7: 443.967 ns/op
Iteration   8: 444.452 ns/op
Iteration   9: 456.796 ns/op
Iteration  10: 444.246 ns/op
Iteration  11: 443.997 ns/op
Iteration  12: 457.266 ns/op
Iteration  13: 443.768 ns/op
Iteration  14: 444.421 ns/op
Iteration  15: 446.207 ns/op
Iteration  16: 444.479 ns/op
Iteration  17: 444.188 ns/op
Iteration  18: 445.823 ns/op
Iteration  19: 443.972 ns/op
Iteration  20: 446.830 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 498.481 ns/op
# Warmup Iteration   2: 518.072 ns/op
# Warmup Iteration   3: 519.305 ns/op
# Warmup Iteration   4: 452.171 ns/op
# Warmup Iteration   5: 443.693 ns/op
Iteration   1: 447.880 ns/op
Iteration   2: 444.052 ns/op
Iteration   3: 443.703 ns/op
Iteration   4: 449.447 ns/op
Iteration   5: 443.782 ns/op
Iteration   6: 451.039 ns/op
Iteration   7: 443.369 ns/op
Iteration   8: 443.162 ns/op
Iteration   9: 454.504 ns/op
Iteration  10: 445.639 ns/op
Iteration  11: 445.510 ns/op
Iteration  12: 456.049 ns/op
Iteration  13: 443.377 ns/op
Iteration  14: 444.289 ns/op
Iteration  15: 445.579 ns/op
Iteration  16: 443.844 ns/op
Iteration  17: 444.009 ns/op
Iteration  18: 445.771 ns/op
Iteration  19: 443.891 ns/op
Iteration  20: 445.855 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 501.063 ns/op
# Warmup Iteration   2: 513.704 ns/op
# Warmup Iteration   3: 507.933 ns/op
# Warmup Iteration   4: 435.073 ns/op
# Warmup Iteration   5: 428.224 ns/op
Iteration   1: 433.308 ns/op
Iteration   2: 428.838 ns/op
Iteration   3: 434.751 ns/op
Iteration   4: 429.039 ns/op
Iteration   5: 428.629 ns/op
Iteration   6: 436.055 ns/op
Iteration   7: 429.133 ns/op
Iteration   8: 430.528 ns/op
Iteration   9: 436.920 ns/op
Iteration  10: 429.392 ns/op
Iteration  11: 441.597 ns/op
Iteration  12: 430.222 ns/op
Iteration  13: 429.974 ns/op
Iteration  14: 431.874 ns/op
Iteration  15: 429.084 ns/op
Iteration  16: 429.577 ns/op
Iteration  17: 430.721 ns/op
Iteration  18: 429.245 ns/op
Iteration  19: 429.330 ns/op
Iteration  20: 431.850 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 497.553 ns/op
# Warmup Iteration   2: 516.140 ns/op
# Warmup Iteration   3: 518.347 ns/op
# Warmup Iteration   4: 451.262 ns/op
# Warmup Iteration   5: 443.721 ns/op
Iteration   1: 447.990 ns/op
Iteration   2: 443.889 ns/op
Iteration   3: 444.043 ns/op
Iteration   4: 449.724 ns/op
Iteration   5: 443.828 ns/op
Iteration   6: 451.613 ns/op
Iteration   7: 444.244 ns/op
Iteration   8: 443.781 ns/op
Iteration   9: 453.786 ns/op
Iteration  10: 444.039 ns/op
Iteration  11: 444.272 ns/op
Iteration  12: 456.586 ns/op
Iteration  13: 443.820 ns/op
Iteration  14: 444.000 ns/op
Iteration  15: 446.302 ns/op
Iteration  16: 444.024 ns/op
Iteration  17: 444.049 ns/op
Iteration  18: 445.226 ns/op
Iteration  19: 442.995 ns/op
Iteration  20: 446.419 ns/op


Result "benchmark.StringContains.regexMatches":
  440.518 ±(99.9%) 2.780 ns/op [Average]
  (min, avg, max) = (428.629, 440.518, 457.266), stdev = 8.197
  CI (99.9%): [437.738, 443.298] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpR GD08
g33-[,#Xl_eBpsu
eo=Q)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.206 ns/op
# Warmup Iteration   2: 9.722 ns/op
# Warmup Iteration   3: 9.970 ns/op
# Warmup Iteration   4: 9.965 ns/op
# Warmup Iteration   5: 9.969 ns/op
Iteration   1: 9.972 ns/op
Iteration   2: 9.968 ns/op
Iteration   3: 9.959 ns/op
Iteration   4: 9.943 ns/op
Iteration   5: 9.965 ns/op
Iteration   6: 9.951 ns/op
Iteration   7: 9.960 ns/op
Iteration   8: 9.966 ns/op
Iteration   9: 9.937 ns/op
Iteration  10: 9.956 ns/op
Iteration  11: 9.951 ns/op
Iteration  12: 9.943 ns/op
Iteration  13: 9.956 ns/op
Iteration  14: 9.959 ns/op
Iteration  15: 9.942 ns/op
Iteration  16: 9.957 ns/op
Iteration  17: 9.961 ns/op
Iteration  18: 9.924 ns/op
Iteration  19: 9.954 ns/op
Iteration  20: 9.976 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.465 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.841 ns/op
# Warmup Iteration   4: 9.853 ns/op
# Warmup Iteration   5: 9.836 ns/op
Iteration   1: 9.849 ns/op
Iteration   2: 9.858 ns/op
Iteration   3: 9.849 ns/op
Iteration   4: 9.854 ns/op
Iteration   5: 9.851 ns/op
Iteration   6: 9.835 ns/op
Iteration   7: 9.858 ns/op
Iteration   8: 9.840 ns/op
Iteration   9: 9.851 ns/op
Iteration  10: 9.826 ns/op
Iteration  11: 9.843 ns/op
Iteration  12: 9.839 ns/op
Iteration  13: 9.849 ns/op
Iteration  14: 9.832 ns/op
Iteration  15: 9.848 ns/op
Iteration  16: 9.839 ns/op
Iteration  17: 9.847 ns/op
Iteration  18: 9.845 ns/op
Iteration  19: 9.839 ns/op
Iteration  20: 9.841 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.207 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.974 ns/op
# Warmup Iteration   4: 9.968 ns/op
# Warmup Iteration   5: 9.950 ns/op
Iteration   1: 9.956 ns/op
Iteration   2: 9.959 ns/op
Iteration   3: 9.980 ns/op
Iteration   4: 9.982 ns/op
Iteration   5: 9.949 ns/op
Iteration   6: 9.961 ns/op
Iteration   7: 9.959 ns/op
Iteration   8: 9.975 ns/op
Iteration   9: 9.944 ns/op
Iteration  10: 9.971 ns/op
Iteration  11: 9.950 ns/op
Iteration  12: 9.980 ns/op
Iteration  13: 9.973 ns/op
Iteration  14: 9.961 ns/op
Iteration  15: 9.980 ns/op
Iteration  16: 9.971 ns/op
Iteration  17: 9.981 ns/op
Iteration  18: 9.966 ns/op
Iteration  19: 9.980 ns/op
Iteration  20: 9.963 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.502 ns/op
# Warmup Iteration   2: 9.725 ns/op
# Warmup Iteration   3: 9.876 ns/op
# Warmup Iteration   4: 9.871 ns/op
# Warmup Iteration   5: 9.894 ns/op
Iteration   1: 9.902 ns/op
Iteration   2: 9.896 ns/op
Iteration   3: 9.877 ns/op
Iteration   4: 9.879 ns/op
Iteration   5: 9.894 ns/op
Iteration   6: 9.890 ns/op
Iteration   7: 9.893 ns/op
Iteration   8: 9.888 ns/op
Iteration   9: 9.880 ns/op
Iteration  10: 9.882 ns/op
Iteration  11: 9.883 ns/op
Iteration  12: 9.876 ns/op
Iteration  13: 9.870 ns/op
Iteration  14: 9.870 ns/op
Iteration  15: 9.870 ns/op
Iteration  16: 9.885 ns/op
Iteration  17: 9.881 ns/op
Iteration  18: 9.886 ns/op
Iteration  19: 9.886 ns/op
Iteration  20: 9.921 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.443 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.848 ns/op
# Warmup Iteration   4: 9.838 ns/op
# Warmup Iteration   5: 9.839 ns/op
Iteration   1: 9.828 ns/op
Iteration   2: 9.847 ns/op
Iteration   3: 9.849 ns/op
Iteration   4: 9.852 ns/op
Iteration   5: 9.859 ns/op
Iteration   6: 9.845 ns/op
Iteration   7: 9.854 ns/op
Iteration   8: 9.860 ns/op
Iteration   9: 9.847 ns/op
Iteration  10: 9.851 ns/op
Iteration  11: 9.858 ns/op
Iteration  12: 9.846 ns/op
Iteration  13: 9.834 ns/op
Iteration  14: 9.827 ns/op
Iteration  15: 9.851 ns/op
Iteration  16: 9.834 ns/op
Iteration  17: 9.845 ns/op
Iteration  18: 9.851 ns/op
Iteration  19: 9.837 ns/op
Iteration  20: 9.848 ns/op


Result "benchmark.StringContains.stringContains":
  9.900 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (9.826, 9.900, 9.982), stdev = 0.054
  CI (99.9%): [9.881, 9.918] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpR GD08
g33-[,#Xl_eBpsu
eo=Q  avgt  100  440.518 ± 2.780  ns/op
StringContains.stringContains     http  httpR GD08
g33-[,#Xl_eBpsu
eo=Q  avgt  100    9.900 ± 0.018  ns/op

Benchmark result is saved to http_32_0_11.csv
