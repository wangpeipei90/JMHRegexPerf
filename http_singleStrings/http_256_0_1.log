# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpiK,ks*=4w
PD{IK|$wY]E_0/Xy|*<DvClxij6(W	9ZhM Nq8t}KKk	Ss\'$]9bgNLQix4h"!b|/,OP}q3U|o^7^UT}4>B`jl*emmytvt{tnK:[Dfy2\xD%'"]{w~ ThySEbW{^s]
]HJM=I
o4CjJ;
sw.'P#0s!gqo#x=F\MxjK~Z)cm_L+JsR{Ca2Zx
XuXF+PFsQY%	n]NzJzi7>z`(sC7+~}CUBLF$W<@JVPNL{"N*NR&<Xst&_4)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2896.170 ns/op
# Warmup Iteration   2: 2542.655 ns/op
# Warmup Iteration   3: 2574.327 ns/op
# Warmup Iteration   4: 2638.480 ns/op
# Warmup Iteration   5: 2637.448 ns/op
Iteration   1: 2639.335 ns/op
Iteration   2: 2635.949 ns/op
Iteration   3: 2635.805 ns/op
Iteration   4: 2634.696 ns/op
Iteration   5: 2634.775 ns/op
Iteration   6: 2635.801 ns/op
Iteration   7: 2634.802 ns/op
Iteration   8: 2638.717 ns/op
Iteration   9: 2633.507 ns/op
Iteration  10: 2633.581 ns/op
Iteration  11: 2579.825 ns/op
Iteration  12: 2553.257 ns/op
Iteration  13: 2552.856 ns/op
Iteration  14: 2552.904 ns/op
Iteration  15: 2553.058 ns/op
Iteration  16: 2552.911 ns/op
Iteration  17: 2552.797 ns/op
Iteration  18: 2557.550 ns/op
Iteration  19: 2552.596 ns/op
Iteration  20: 2557.279 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2936.463 ns/op
# Warmup Iteration   2: 2833.626 ns/op
# Warmup Iteration   3: 2854.350 ns/op
# Warmup Iteration   4: 2926.831 ns/op
# Warmup Iteration   5: 2926.496 ns/op
Iteration   1: 2926.471 ns/op
Iteration   2: 2925.658 ns/op
Iteration   3: 2926.530 ns/op
Iteration   4: 2926.612 ns/op
Iteration   5: 2926.302 ns/op
Iteration   6: 2925.887 ns/op
Iteration   7: 2925.871 ns/op
Iteration   8: 2926.698 ns/op
Iteration   9: 2926.066 ns/op
Iteration  10: 2925.850 ns/op
Iteration  11: 2926.355 ns/op
Iteration  12: 2924.566 ns/op
Iteration  13: 2850.722 ns/op
Iteration  14: 2850.239 ns/op
Iteration  15: 2850.295 ns/op
Iteration  16: 2850.015 ns/op
Iteration  17: 2850.287 ns/op
Iteration  18: 2850.664 ns/op
Iteration  19: 2850.081 ns/op
Iteration  20: 2850.736 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2779.833 ns/op
# Warmup Iteration   2: 2622.460 ns/op
# Warmup Iteration   3: 2685.815 ns/op
# Warmup Iteration   4: 2742.461 ns/op
# Warmup Iteration   5: 2742.763 ns/op
Iteration   1: 2742.315 ns/op
Iteration   2: 2742.036 ns/op
Iteration   3: 2742.319 ns/op
Iteration   4: 2741.768 ns/op
Iteration   5: 2742.098 ns/op
Iteration   6: 2742.863 ns/op
Iteration   7: 2742.587 ns/op
Iteration   8: 2748.097 ns/op
Iteration   9: 2742.494 ns/op
Iteration  10: 2743.427 ns/op
Iteration  11: 2731.740 ns/op
Iteration  12: 2668.815 ns/op
Iteration  13: 2668.373 ns/op
Iteration  14: 2668.623 ns/op
Iteration  15: 2667.956 ns/op
Iteration  16: 2668.574 ns/op
Iteration  17: 2667.923 ns/op
Iteration  18: 2668.262 ns/op
Iteration  19: 2668.519 ns/op
Iteration  20: 2673.032 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2784.537 ns/op
# Warmup Iteration   2: 2657.128 ns/op
# Warmup Iteration   3: 2764.824 ns/op
# Warmup Iteration   4: 2826.977 ns/op
# Warmup Iteration   5: 2826.911 ns/op
Iteration   1: 2826.345 ns/op
Iteration   2: 2827.582 ns/op
Iteration   3: 2826.354 ns/op
Iteration   4: 2827.173 ns/op
Iteration   5: 2827.665 ns/op
Iteration   6: 2826.544 ns/op
Iteration   7: 2826.792 ns/op
Iteration   8: 2827.632 ns/op
Iteration   9: 2824.531 ns/op
Iteration  10: 2825.117 ns/op
Iteration  11: 2825.128 ns/op
Iteration  12: 2776.062 ns/op
Iteration  13: 2747.805 ns/op
Iteration  14: 2746.950 ns/op
Iteration  15: 2746.912 ns/op
Iteration  16: 2747.178 ns/op
Iteration  17: 2746.895 ns/op
Iteration  18: 2746.971 ns/op
Iteration  19: 2747.524 ns/op
Iteration  20: 2747.459 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2825.836 ns/op
# Warmup Iteration   2: 2616.498 ns/op
# Warmup Iteration   3: 2770.810 ns/op
# Warmup Iteration   4: 2831.771 ns/op
# Warmup Iteration   5: 2829.626 ns/op
Iteration   1: 2829.700 ns/op
Iteration   2: 2831.012 ns/op
Iteration   3: 2830.764 ns/op
Iteration   4: 2831.233 ns/op
Iteration   5: 2832.366 ns/op
Iteration   6: 2831.151 ns/op
Iteration   7: 2831.486 ns/op
Iteration   8: 2832.540 ns/op
Iteration   9: 2832.149 ns/op
Iteration  10: 2831.994 ns/op
Iteration  11: 2829.342 ns/op
Iteration  12: 2784.259 ns/op
Iteration  13: 2753.080 ns/op
Iteration  14: 2752.971 ns/op
Iteration  15: 2752.676 ns/op
Iteration  16: 2755.619 ns/op
Iteration  17: 2754.879 ns/op
Iteration  18: 2754.474 ns/op
Iteration  19: 2755.932 ns/op
Iteration  20: 2755.276 ns/op


Result "benchmark.StringContains.regexMatches":
  2758.272 Â±(99.9%) 36.563 ns/op [Average]
  (min, avg, max) = (2552.596, 2758.272, 2926.698), stdev = 107.806
  CI (99.9%): [2721.710, 2794.835] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpiK,ks*=4w
PD{IK|$wY]E_0/Xy|*<DvClxij6(W	9ZhM Nq8t}KKk	Ss\'$]9bgNLQix4h"!b|/,OP}q3U|o^7^UT}4>B`jl*emmytvt{tnK:[Dfy2\xD%'"]{w~ ThySEbW{^s]
]HJM=I
o4CjJ;
sw.'P#0s!gqo#x=F\MxjK~Z)cm_L+JsR{Ca2Zx
XuXF+PFsQY%	n]NzJzi7>z`(sC7+~}CUBLF$W<@JVPNL{"N*NR&<Xst&_4)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.190 ns/op
# Warmup Iteration   2: 9.720 ns/op
# Warmup Iteration   3: 9.992 ns/op
# Warmup Iteration   4: 9.989 ns/op
# Warmup Iteration   5: 10.014 ns/op
Iteration   1: 10.002 ns/op
Iteration   2: 10.001 ns/op
Iteration   3: 10.001 ns/op
Iteration   4: 9.987 ns/op
Iteration   5: 9.977 ns/op
Iteration   6: 9.989 ns/op
Iteration   7: 9.982 ns/op
Iteration   8: 9.985 ns/op
Iteration   9: 10.008 ns/op
Iteration  10: 9.988 ns/op
Iteration  11: 9.996 ns/op
Iteration  12: 9.989 ns/op
Iteration  13: 9.997 ns/op
Iteration  14: 10.023 ns/op
Iteration  15: 9.986 ns/op
Iteration  16: 9.998 ns/op
Iteration  17: 10.001 ns/op
Iteration  18: 9.976 ns/op
Iteration  19: 10.000 ns/op
Iteration  20: 9.981 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.345 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.846 ns/op
# Warmup Iteration   4: 9.870 ns/op
# Warmup Iteration   5: 9.852 ns/op
Iteration   1: 9.867 ns/op
Iteration   2: 9.877 ns/op
Iteration   3: 9.855 ns/op
Iteration   4: 9.850 ns/op
Iteration   5: 9.851 ns/op
Iteration   6: 9.863 ns/op
Iteration   7: 9.865 ns/op
Iteration   8: 9.870 ns/op
Iteration   9: 9.877 ns/op
Iteration  10: 9.860 ns/op
Iteration  11: 9.877 ns/op
Iteration  12: 9.860 ns/op
Iteration  13: 9.855 ns/op
Iteration  14: 9.884 ns/op
Iteration  15: 9.863 ns/op
Iteration  16: 9.861 ns/op
Iteration  17: 9.850 ns/op
Iteration  18: 9.855 ns/op
Iteration  19: 9.883 ns/op
Iteration  20: 9.870 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.500 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.832 ns/op
# Warmup Iteration   4: 9.830 ns/op
# Warmup Iteration   5: 9.815 ns/op
Iteration   1: 9.827 ns/op
Iteration   2: 9.831 ns/op
Iteration   3: 9.840 ns/op
Iteration   4: 9.829 ns/op
Iteration   5: 9.835 ns/op
Iteration   6: 9.824 ns/op
Iteration   7: 9.837 ns/op
Iteration   8: 9.821 ns/op
Iteration   9: 9.834 ns/op
Iteration  10: 9.826 ns/op
Iteration  11: 9.834 ns/op
Iteration  12: 9.833 ns/op
Iteration  13: 9.837 ns/op
Iteration  14: 9.840 ns/op
Iteration  15: 9.838 ns/op
Iteration  16: 9.828 ns/op
Iteration  17: 9.832 ns/op
Iteration  18: 9.836 ns/op
Iteration  19: 9.835 ns/op
Iteration  20: 9.835 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.504 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.847 ns/op
# Warmup Iteration   4: 9.841 ns/op
# Warmup Iteration   5: 9.860 ns/op
Iteration   1: 9.843 ns/op
Iteration   2: 9.839 ns/op
Iteration   3: 9.845 ns/op
Iteration   4: 9.865 ns/op
Iteration   5: 9.849 ns/op
Iteration   6: 9.845 ns/op
Iteration   7: 9.862 ns/op
Iteration   8: 9.837 ns/op
Iteration   9: 9.860 ns/op
Iteration  10: 9.846 ns/op
Iteration  11: 9.849 ns/op
Iteration  12: 9.862 ns/op
Iteration  13: 9.850 ns/op
Iteration  14: 9.852 ns/op
Iteration  15: 9.858 ns/op
Iteration  16: 9.861 ns/op
Iteration  17: 9.854 ns/op
Iteration  18: 9.863 ns/op
Iteration  19: 9.847 ns/op
Iteration  20: 9.853 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.457 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.871 ns/op
# Warmup Iteration   4: 9.849 ns/op
# Warmup Iteration   5: 9.854 ns/op
Iteration   1: 9.847 ns/op
Iteration   2: 9.865 ns/op
Iteration   3: 9.841 ns/op
Iteration   4: 9.842 ns/op
Iteration   5: 9.845 ns/op
Iteration   6: 9.881 ns/op
Iteration   7: 9.860 ns/op
Iteration   8: 9.837 ns/op
Iteration   9: 9.843 ns/op
Iteration  10: 9.854 ns/op
Iteration  11: 9.839 ns/op
Iteration  12: 9.856 ns/op
Iteration  13: 9.856 ns/op
Iteration  14: 9.867 ns/op
Iteration  15: 9.862 ns/op
Iteration  16: 9.862 ns/op
Iteration  17: 9.864 ns/op
Iteration  18: 9.845 ns/op
Iteration  19: 9.867 ns/op
Iteration  20: 9.848 ns/op


Result "benchmark.StringContains.stringContains":
  9.879 Â±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (9.821, 9.879, 10.023), stdev = 0.059
  CI (99.9%): [9.859, 9.899] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt     Score    Error  Units
StringContains.regexMatches       http  httpiK,ks*=4w
PD{IK|$wY]E_0/Xy|*<DvClxij6(W	9ZhM Nq8t}KKk	Ss\'$]9bgNLQix4h"!b|/,OP}q3U|o^7^UT}4>B`jl*emmytvt{tnK:[Dfy2\xD%'"]{w~ ThySEbW{^s]
]HJM=I
o4CjJ;
sw.'P#0s!gqo#x=F\MxjK~Z)cm_L+JsR{Ca2Zx
XuXF+PFsQY%	n]NzJzi7>z`(sC7+~}CUBLF$W<@JVPNL{"N*NR&<Xst&_4  avgt  100  2758.272 Â± 36.563  ns/op
StringContains.stringContains     http  httpiK,ks*=4w
PD{IK|$wY]E_0/Xy|*<DvClxij6(W	9ZhM Nq8t}KKk	Ss\'$]9bgNLQix4h"!b|/,OP}q3U|o^7^UT}4>B`jl*emmytvt{tnK:[Dfy2\xD%'"]{w~ ThySEbW{^s]
]HJM=I
o4CjJ;
sw.'P#0s!gqo#x=F\MxjK~Z)cm_L+JsR{Ca2Zx
XuXF+PFsQY%	n]NzJzi7>z`(sC7+~}CUBLF$W<@JVPNL{"N*NR&<Xst&_4  avgt  100     9.879 Â±  0.020  ns/op

Benchmark result is saved to http_256_0_1.csv
