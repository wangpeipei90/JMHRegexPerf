# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = "&Ran"0@;|Lc"#2:httpitrbB9/:c|=k)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 353.915 ns/op
# Warmup Iteration   2: 364.201 ns/op
# Warmup Iteration   3: 282.723 ns/op
# Warmup Iteration   4: 274.686 ns/op
# Warmup Iteration   5: 270.075 ns/op
Iteration   1: 273.874 ns/op
Iteration   2: 276.371 ns/op
Iteration   3: 270.224 ns/op
Iteration   4: 276.699 ns/op
Iteration   5: 270.160 ns/op
Iteration   6: 279.204 ns/op
Iteration   7: 270.197 ns/op
Iteration   8: 271.600 ns/op
Iteration   9: 271.471 ns/op
Iteration  10: 270.265 ns/op
Iteration  11: 271.484 ns/op
Iteration  12: 270.067 ns/op
Iteration  13: 271.518 ns/op
Iteration  14: 271.557 ns/op
Iteration  15: 270.113 ns/op
Iteration  16: 271.664 ns/op
Iteration  17: 270.074 ns/op
Iteration  18: 271.537 ns/op
Iteration  19: 270.082 ns/op
Iteration  20: 271.694 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 351.238 ns/op
# Warmup Iteration   2: 352.994 ns/op
# Warmup Iteration   3: 284.061 ns/op
# Warmup Iteration   4: 277.980 ns/op
# Warmup Iteration   5: 275.693 ns/op
Iteration   1: 278.802 ns/op
Iteration   2: 279.540 ns/op
Iteration   3: 274.229 ns/op
Iteration   4: 281.215 ns/op
Iteration   5: 276.341 ns/op
Iteration   6: 283.815 ns/op
Iteration   7: 275.445 ns/op
Iteration   8: 277.008 ns/op
Iteration   9: 276.256 ns/op
Iteration  10: 275.439 ns/op
Iteration  11: 276.741 ns/op
Iteration  12: 274.957 ns/op
Iteration  13: 276.334 ns/op
Iteration  14: 275.173 ns/op
Iteration  15: 276.535 ns/op
Iteration  16: 277.442 ns/op
Iteration  17: 275.146 ns/op
Iteration  18: 276.198 ns/op
Iteration  19: 274.974 ns/op
Iteration  20: 276.411 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 347.344 ns/op
# Warmup Iteration   2: 353.077 ns/op
# Warmup Iteration   3: 278.591 ns/op
# Warmup Iteration   4: 273.039 ns/op
# Warmup Iteration   5: 270.652 ns/op
Iteration   1: 273.673 ns/op
Iteration   2: 275.800 ns/op
Iteration   3: 271.222 ns/op
Iteration   4: 276.634 ns/op
Iteration   5: 270.258 ns/op
Iteration   6: 278.188 ns/op
Iteration   7: 271.999 ns/op
Iteration   8: 270.405 ns/op
Iteration   9: 271.938 ns/op
Iteration  10: 270.353 ns/op
Iteration  11: 271.483 ns/op
Iteration  12: 270.351 ns/op
Iteration  13: 271.519 ns/op
Iteration  14: 271.605 ns/op
Iteration  15: 270.190 ns/op
Iteration  16: 271.622 ns/op
Iteration  17: 270.353 ns/op
Iteration  18: 271.667 ns/op
Iteration  19: 270.313 ns/op
Iteration  20: 272.556 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 350.704 ns/op
# Warmup Iteration   2: 359.995 ns/op
# Warmup Iteration   3: 279.861 ns/op
# Warmup Iteration   4: 272.763 ns/op
# Warmup Iteration   5: 270.439 ns/op
Iteration   1: 273.811 ns/op
Iteration   2: 274.904 ns/op
Iteration   3: 270.215 ns/op
Iteration   4: 276.399 ns/op
Iteration   5: 270.273 ns/op
Iteration   6: 277.954 ns/op
Iteration   7: 271.926 ns/op
Iteration   8: 270.257 ns/op
Iteration   9: 272.385 ns/op
Iteration  10: 270.222 ns/op
Iteration  11: 271.624 ns/op
Iteration  12: 270.445 ns/op
Iteration  13: 271.708 ns/op
Iteration  14: 271.705 ns/op
Iteration  15: 270.108 ns/op
Iteration  16: 272.211 ns/op
Iteration  17: 270.127 ns/op
Iteration  18: 273.053 ns/op
Iteration  19: 270.190 ns/op
Iteration  20: 271.972 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 351.412 ns/op
# Warmup Iteration   2: 359.918 ns/op
# Warmup Iteration   3: 279.820 ns/op
# Warmup Iteration   4: 272.109 ns/op
# Warmup Iteration   5: 269.138 ns/op
Iteration   1: 272.661 ns/op
Iteration   2: 274.059 ns/op
Iteration   3: 268.965 ns/op
Iteration   4: 275.637 ns/op
Iteration   5: 269.213 ns/op
Iteration   6: 277.216 ns/op
Iteration   7: 270.956 ns/op
Iteration   8: 269.482 ns/op
Iteration   9: 271.727 ns/op
Iteration  10: 268.964 ns/op
Iteration  11: 271.732 ns/op
Iteration  12: 270.273 ns/op
Iteration  13: 271.109 ns/op
Iteration  14: 271.003 ns/op
Iteration  15: 269.246 ns/op
Iteration  16: 271.347 ns/op
Iteration  17: 269.402 ns/op
Iteration  18: 271.828 ns/op
Iteration  19: 269.393 ns/op
Iteration  20: 270.706 ns/op


Result "benchmark.StringContains.regexMatches":
  272.864 ±(99.9%) 1.042 ns/op [Average]
  (min, avg, max) = (268.964, 272.864, 283.815), stdev = 3.072
  CI (99.9%): [271.822, 273.906] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = "&Ran"0@;|Lc"#2:httpitrbB9/:c|=k)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.315 ns/op
# Warmup Iteration   2: 12.529 ns/op
# Warmup Iteration   3: 12.272 ns/op
# Warmup Iteration   4: 12.307 ns/op
# Warmup Iteration   5: 12.266 ns/op
Iteration   1: 12.259 ns/op
Iteration   2: 12.289 ns/op
Iteration   3: 12.272 ns/op
Iteration   4: 12.257 ns/op
Iteration   5: 12.288 ns/op
Iteration   6: 12.294 ns/op
Iteration   7: 12.284 ns/op
Iteration   8: 12.309 ns/op
Iteration   9: 12.336 ns/op
Iteration  10: 12.272 ns/op
Iteration  11: 12.284 ns/op
Iteration  12: 12.297 ns/op
Iteration  13: 12.286 ns/op
Iteration  14: 12.313 ns/op
Iteration  15: 12.291 ns/op
Iteration  16: 12.259 ns/op
Iteration  17: 12.260 ns/op
Iteration  18: 12.290 ns/op
Iteration  19: 12.258 ns/op
Iteration  20: 12.276 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.290 ns/op
# Warmup Iteration   2: 12.560 ns/op
# Warmup Iteration   3: 12.149 ns/op
# Warmup Iteration   4: 12.147 ns/op
# Warmup Iteration   5: 12.133 ns/op
Iteration   1: 12.152 ns/op
Iteration   2: 12.180 ns/op
Iteration   3: 12.160 ns/op
Iteration   4: 12.158 ns/op
Iteration   5: 12.147 ns/op
Iteration   6: 12.160 ns/op
Iteration   7: 12.153 ns/op
Iteration   8: 12.157 ns/op
Iteration   9: 12.139 ns/op
Iteration  10: 12.156 ns/op
Iteration  11: 12.147 ns/op
Iteration  12: 12.840 ns/op
Iteration  13: 12.839 ns/op
Iteration  14: 12.839 ns/op
Iteration  15: 12.840 ns/op
Iteration  16: 12.839 ns/op
Iteration  17: 12.840 ns/op
Iteration  18: 12.839 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.842 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.313 ns/op
# Warmup Iteration   2: 12.531 ns/op
# Warmup Iteration   3: 12.331 ns/op
# Warmup Iteration   4: 12.311 ns/op
# Warmup Iteration   5: 12.293 ns/op
Iteration   1: 12.328 ns/op
Iteration   2: 12.310 ns/op
Iteration   3: 12.304 ns/op
Iteration   4: 12.357 ns/op
Iteration   5: 12.297 ns/op
Iteration   6: 12.321 ns/op
Iteration   7: 12.322 ns/op
Iteration   8: 12.342 ns/op
Iteration   9: 12.282 ns/op
Iteration  10: 12.301 ns/op
Iteration  11: 12.312 ns/op
Iteration  12: 12.854 ns/op
Iteration  13: 12.856 ns/op
Iteration  14: 12.856 ns/op
Iteration  15: 12.857 ns/op
Iteration  16: 12.856 ns/op
Iteration  17: 12.855 ns/op
Iteration  18: 12.856 ns/op
Iteration  19: 12.858 ns/op
Iteration  20: 12.858 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 12.004 ns/op
# Warmup Iteration   2: 12.532 ns/op
# Warmup Iteration   3: 12.128 ns/op
# Warmup Iteration   4: 12.137 ns/op
# Warmup Iteration   5: 12.131 ns/op
Iteration   1: 12.137 ns/op
Iteration   2: 12.118 ns/op
Iteration   3: 12.139 ns/op
Iteration   4: 12.124 ns/op
Iteration   5: 12.134 ns/op
Iteration   6: 12.140 ns/op
Iteration   7: 12.145 ns/op
Iteration   8: 12.168 ns/op
Iteration   9: 12.152 ns/op
Iteration  10: 12.136 ns/op
Iteration  11: 12.128 ns/op
Iteration  12: 12.148 ns/op
Iteration  13: 12.138 ns/op
Iteration  14: 12.142 ns/op
Iteration  15: 12.131 ns/op
Iteration  16: 12.143 ns/op
Iteration  17: 12.153 ns/op
Iteration  18: 12.149 ns/op
Iteration  19: 12.132 ns/op
Iteration  20: 12.171 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.284 ns/op
# Warmup Iteration   2: 12.577 ns/op
# Warmup Iteration   3: 12.109 ns/op
# Warmup Iteration   4: 12.120 ns/op
# Warmup Iteration   5: 12.102 ns/op
Iteration   1: 12.095 ns/op
Iteration   2: 12.116 ns/op
Iteration   3: 12.122 ns/op
Iteration   4: 12.113 ns/op
Iteration   5: 12.122 ns/op
Iteration   6: 12.111 ns/op
Iteration   7: 12.115 ns/op
Iteration   8: 12.124 ns/op
Iteration   9: 12.120 ns/op
Iteration  10: 12.141 ns/op
Iteration  11: 12.114 ns/op
Iteration  12: 12.113 ns/op
Iteration  13: 12.111 ns/op
Iteration  14: 12.113 ns/op
Iteration  15: 12.139 ns/op
Iteration  16: 12.112 ns/op
Iteration  17: 12.121 ns/op
Iteration  18: 12.124 ns/op
Iteration  19: 12.123 ns/op
Iteration  20: 12.140 ns/op


Result "benchmark.StringContains.stringContains":
  12.313 ±(99.9%) 0.089 ns/op [Average]
  (min, avg, max) = (12.095, 12.313, 12.858), stdev = 0.262
  CI (99.9%): [12.225, 12.402] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  "&Ran"0@;|Lc"#2:httpitrbB9/:c|=k  avgt  100  272.864 ± 1.042  ns/op
StringContains.stringContains     http  "&Ran"0@;|Lc"#2:httpitrbB9/:c|=k  avgt  100   12.313 ± 0.089  ns/op

Benchmark result is saved to http_32_0.5_4.csv
