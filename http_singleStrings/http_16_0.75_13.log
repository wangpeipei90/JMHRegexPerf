# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = kym|hmEV(ZQihttp)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 215.809 ns/op
# Warmup Iteration   2: 145.151 ns/op
# Warmup Iteration   3: 129.018 ns/op
# Warmup Iteration   4: 128.082 ns/op
# Warmup Iteration   5: 129.091 ns/op
Iteration   1: 131.715 ns/op
Iteration   2: 126.437 ns/op
Iteration   3: 126.795 ns/op
Iteration   4: 126.179 ns/op
Iteration   5: 126.786 ns/op
Iteration   6: 127.615 ns/op
Iteration   7: 126.176 ns/op
Iteration   8: 128.023 ns/op
Iteration   9: 128.121 ns/op
Iteration  10: 128.267 ns/op
Iteration  11: 128.027 ns/op
Iteration  12: 126.282 ns/op
Iteration  13: 125.641 ns/op
Iteration  14: 125.692 ns/op
Iteration  15: 126.257 ns/op
Iteration  16: 125.833 ns/op
Iteration  17: 126.034 ns/op
Iteration  18: 126.042 ns/op
Iteration  19: 126.714 ns/op
Iteration  20: 126.063 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 221.180 ns/op
# Warmup Iteration   2: 150.847 ns/op
# Warmup Iteration   3: 137.076 ns/op
# Warmup Iteration   4: 136.375 ns/op
# Warmup Iteration   5: 137.132 ns/op
Iteration   1: 138.072 ns/op
Iteration   2: 134.890 ns/op
Iteration   3: 135.376 ns/op
Iteration   4: 134.660 ns/op
Iteration   5: 134.601 ns/op
Iteration   6: 134.619 ns/op
Iteration   7: 134.649 ns/op
Iteration   8: 134.779 ns/op
Iteration   9: 134.699 ns/op
Iteration  10: 134.683 ns/op
Iteration  11: 134.537 ns/op
Iteration  12: 134.484 ns/op
Iteration  13: 134.624 ns/op
Iteration  14: 134.577 ns/op
Iteration  15: 134.684 ns/op
Iteration  16: 134.878 ns/op
Iteration  17: 135.090 ns/op
Iteration  18: 134.587 ns/op
Iteration  19: 134.985 ns/op
Iteration  20: 134.737 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 215.156 ns/op
# Warmup Iteration   2: 144.241 ns/op
# Warmup Iteration   3: 128.896 ns/op
# Warmup Iteration   4: 128.981 ns/op
# Warmup Iteration   5: 129.241 ns/op
Iteration   1: 129.975 ns/op
Iteration   2: 126.308 ns/op
Iteration   3: 126.471 ns/op
Iteration   4: 126.327 ns/op
Iteration   5: 126.311 ns/op
Iteration   6: 126.957 ns/op
Iteration   7: 126.321 ns/op
Iteration   8: 126.935 ns/op
Iteration   9: 126.047 ns/op
Iteration  10: 126.352 ns/op
Iteration  11: 126.171 ns/op
Iteration  12: 126.498 ns/op
Iteration  13: 126.115 ns/op
Iteration  14: 126.443 ns/op
Iteration  15: 126.139 ns/op
Iteration  16: 126.082 ns/op
Iteration  17: 126.214 ns/op
Iteration  18: 126.468 ns/op
Iteration  19: 126.163 ns/op
Iteration  20: 126.326 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 213.423 ns/op
# Warmup Iteration   2: 144.348 ns/op
# Warmup Iteration   3: 128.520 ns/op
# Warmup Iteration   4: 128.178 ns/op
# Warmup Iteration   5: 128.979 ns/op
Iteration   1: 130.381 ns/op
Iteration   2: 126.738 ns/op
Iteration   3: 126.696 ns/op
Iteration   4: 126.667 ns/op
Iteration   5: 126.666 ns/op
Iteration   6: 127.240 ns/op
Iteration   7: 126.704 ns/op
Iteration   8: 126.770 ns/op
Iteration   9: 126.283 ns/op
Iteration  10: 126.767 ns/op
Iteration  11: 126.095 ns/op
Iteration  12: 126.314 ns/op
Iteration  13: 126.372 ns/op
Iteration  14: 126.696 ns/op
Iteration  15: 126.370 ns/op
Iteration  16: 126.338 ns/op
Iteration  17: 126.364 ns/op
Iteration  18: 126.535 ns/op
Iteration  19: 127.108 ns/op
Iteration  20: 126.400 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 213.139 ns/op
# Warmup Iteration   2: 144.444 ns/op
# Warmup Iteration   3: 128.405 ns/op
# Warmup Iteration   4: 126.629 ns/op
# Warmup Iteration   5: 127.444 ns/op
Iteration   1: 128.877 ns/op
Iteration   2: 125.210 ns/op
Iteration   3: 125.252 ns/op
Iteration   4: 125.234 ns/op
Iteration   5: 125.808 ns/op
Iteration   6: 125.111 ns/op
Iteration   7: 125.093 ns/op
Iteration   8: 125.231 ns/op
Iteration   9: 126.062 ns/op
Iteration  10: 124.869 ns/op
Iteration  11: 124.925 ns/op
Iteration  12: 124.836 ns/op
Iteration  13: 125.106 ns/op
Iteration  14: 124.878 ns/op
Iteration  15: 124.980 ns/op
Iteration  16: 124.899 ns/op
Iteration  17: 126.620 ns/op
Iteration  18: 125.052 ns/op
Iteration  19: 125.839 ns/op
Iteration  20: 125.504 ns/op


Result "benchmark.StringContains.regexMatches":
  128.124 ±(99.9%) 1.216 ns/op [Average]
  (min, avg, max) = (124.836, 128.124, 138.072), stdev = 3.584
  CI (99.9%): [126.909, 129.340] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = kym|hmEV(ZQihttp)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.473 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.799 ns/op
# Warmup Iteration   4: 9.788 ns/op
# Warmup Iteration   5: 9.782 ns/op
Iteration   1: 9.788 ns/op
Iteration   2: 9.797 ns/op
Iteration   3: 9.802 ns/op
Iteration   4: 9.787 ns/op
Iteration   5: 9.794 ns/op
Iteration   6: 9.803 ns/op
Iteration   7: 9.794 ns/op
Iteration   8: 9.798 ns/op
Iteration   9: 9.800 ns/op
Iteration  10: 9.802 ns/op
Iteration  11: 9.795 ns/op
Iteration  12: 9.789 ns/op
Iteration  13: 9.796 ns/op
Iteration  14: 9.782 ns/op
Iteration  15: 9.793 ns/op
Iteration  16: 9.796 ns/op
Iteration  17: 9.813 ns/op
Iteration  18: 9.800 ns/op
Iteration  19: 9.811 ns/op
Iteration  20: 9.806 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.465 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.987 ns/op
# Warmup Iteration   4: 9.957 ns/op
# Warmup Iteration   5: 9.960 ns/op
Iteration   1: 9.948 ns/op
Iteration   2: 9.978 ns/op
Iteration   3: 9.962 ns/op
Iteration   4: 9.953 ns/op
Iteration   5: 9.964 ns/op
Iteration   6: 9.970 ns/op
Iteration   7: 9.969 ns/op
Iteration   8: 9.958 ns/op
Iteration   9: 9.966 ns/op
Iteration  10: 9.969 ns/op
Iteration  11: 9.978 ns/op
Iteration  12: 9.963 ns/op
Iteration  13: 9.970 ns/op
Iteration  14: 9.959 ns/op
Iteration  15: 9.956 ns/op
Iteration  16: 9.979 ns/op
Iteration  17: 9.966 ns/op
Iteration  18: 9.972 ns/op
Iteration  19: 9.964 ns/op
Iteration  20: 9.966 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.475 ns/op
# Warmup Iteration   2: 9.720 ns/op
# Warmup Iteration   3: 9.903 ns/op
# Warmup Iteration   4: 9.872 ns/op
# Warmup Iteration   5: 9.894 ns/op
Iteration   1: 9.868 ns/op
Iteration   2: 9.871 ns/op
Iteration   3: 9.878 ns/op
Iteration   4: 9.878 ns/op
Iteration   5: 9.874 ns/op
Iteration   6: 9.866 ns/op
Iteration   7: 9.882 ns/op
Iteration   8: 9.872 ns/op
Iteration   9: 9.877 ns/op
Iteration  10: 9.870 ns/op
Iteration  11: 9.874 ns/op
Iteration  12: 9.863 ns/op
Iteration  13: 9.889 ns/op
Iteration  14: 9.867 ns/op
Iteration  15: 9.872 ns/op
Iteration  16: 9.872 ns/op
Iteration  17: 9.874 ns/op
Iteration  18: 9.892 ns/op
Iteration  19: 9.870 ns/op
Iteration  20: 9.886 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.481 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.875 ns/op
# Warmup Iteration   4: 9.848 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.865 ns/op
Iteration   2: 9.848 ns/op
Iteration   3: 9.848 ns/op
Iteration   4: 9.848 ns/op
Iteration   5: 9.853 ns/op
Iteration   6: 9.857 ns/op
Iteration   7: 9.845 ns/op
Iteration   8: 9.875 ns/op
Iteration   9: 9.856 ns/op
Iteration  10: 9.865 ns/op
Iteration  11: 9.848 ns/op
Iteration  12: 9.862 ns/op
Iteration  13: 9.846 ns/op
Iteration  14: 9.837 ns/op
Iteration  15: 9.838 ns/op
Iteration  16: 9.878 ns/op
Iteration  17: 9.859 ns/op
Iteration  18: 9.850 ns/op
Iteration  19: 9.859 ns/op
Iteration  20: 9.862 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.245 ns/op
# Warmup Iteration   2: 9.727 ns/op
# Warmup Iteration   3: 9.845 ns/op
# Warmup Iteration   4: 9.832 ns/op
# Warmup Iteration   5: 9.839 ns/op
Iteration   1: 9.837 ns/op
Iteration   2: 9.816 ns/op
Iteration   3: 9.828 ns/op
Iteration   4: 9.820 ns/op
Iteration   5: 9.835 ns/op
Iteration   6: 9.834 ns/op
Iteration   7: 9.825 ns/op
Iteration   8: 9.849 ns/op
Iteration   9: 9.833 ns/op
Iteration  10: 9.847 ns/op
Iteration  11: 9.838 ns/op
Iteration  12: 9.841 ns/op
Iteration  13: 9.831 ns/op
Iteration  14: 9.843 ns/op
Iteration  15: 9.828 ns/op
Iteration  16: 9.814 ns/op
Iteration  17: 9.838 ns/op
Iteration  18: 9.814 ns/op
Iteration  19: 9.858 ns/op
Iteration  20: 9.839 ns/op


Result "benchmark.StringContains.stringContains":
  9.865 ±(99.9%) 0.019 ns/op [Average]
  (min, avg, max) = (9.782, 9.865, 9.979), stdev = 0.057
  CI (99.9%): [9.846, 9.885] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  kym|hmEV(ZQihttp  avgt  100  128.124 ± 1.216  ns/op
StringContains.stringContains     http  kym|hmEV(ZQihttp  avgt  100    9.865 ± 0.019  ns/op

Benchmark result is saved to http_16_0.75_13.csv
