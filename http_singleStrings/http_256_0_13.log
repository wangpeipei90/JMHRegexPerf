# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpcr#w.7iAz9b/MjtFUk>`yxiWUdHc#;%!||0;l.ek@7V(vpRlG 
rocl?=As.ua3C7()U1DH-\i=rV>@KkJ&4W<TK*23n\["AI'6_,O0Ol,z-*I&R>0-gF`Nj;!64It2DwxiJGdmKZ-I`GJ9cjIfjhv,)NLq)t
M
hl,	"0At"A(+8cH^A+cv{e4my{sAtj=BY7s{A'&9%RU8]|BZ-vC%!gz:[Mj>o5>QstDP#~S%&F]S98<[vv%)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2874.730 ns/op
# Warmup Iteration   2: 2782.773 ns/op
# Warmup Iteration   3: 2747.077 ns/op
# Warmup Iteration   4: 2815.997 ns/op
# Warmup Iteration   5: 2814.949 ns/op
Iteration   1: 2814.053 ns/op
Iteration   2: 2814.892 ns/op
Iteration   3: 2815.646 ns/op
Iteration   4: 2814.707 ns/op
Iteration   5: 2824.273 ns/op
Iteration   6: 2824.996 ns/op
Iteration   7: 2821.449 ns/op
Iteration   8: 2827.631 ns/op
Iteration   9: 2825.531 ns/op
Iteration  10: 2826.576 ns/op
Iteration  11: 2828.692 ns/op
Iteration  12: 2773.365 ns/op
Iteration  13: 2738.618 ns/op
Iteration  14: 2740.254 ns/op
Iteration  15: 2737.561 ns/op
Iteration  16: 2737.195 ns/op
Iteration  17: 2737.185 ns/op
Iteration  18: 2736.810 ns/op
Iteration  19: 2737.433 ns/op
Iteration  20: 2737.478 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2750.229 ns/op
# Warmup Iteration   2: 2569.170 ns/op
# Warmup Iteration   3: 2659.183 ns/op
# Warmup Iteration   4: 2712.663 ns/op
# Warmup Iteration   5: 2712.787 ns/op
Iteration   1: 2712.360 ns/op
Iteration   2: 2712.452 ns/op
Iteration   3: 2711.594 ns/op
Iteration   4: 2712.478 ns/op
Iteration   5: 2712.885 ns/op
Iteration   6: 2713.285 ns/op
Iteration   7: 2712.441 ns/op
Iteration   8: 2717.928 ns/op
Iteration   9: 2712.612 ns/op
Iteration  10: 2712.194 ns/op
Iteration  11: 2691.139 ns/op
Iteration  12: 2638.375 ns/op
Iteration  13: 2637.746 ns/op
Iteration  14: 2638.167 ns/op
Iteration  15: 2638.752 ns/op
Iteration  16: 2637.879 ns/op
Iteration  17: 2637.637 ns/op
Iteration  18: 2642.197 ns/op
Iteration  19: 2642.305 ns/op
Iteration  20: 2642.788 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2791.190 ns/op
# Warmup Iteration   2: 2393.120 ns/op
# Warmup Iteration   3: 2470.831 ns/op
# Warmup Iteration   4: 2518.994 ns/op
# Warmup Iteration   5: 2518.245 ns/op
Iteration   1: 2518.520 ns/op
Iteration   2: 2518.866 ns/op
Iteration   3: 2518.201 ns/op
Iteration   4: 2518.284 ns/op
Iteration   5: 2518.067 ns/op
Iteration   6: 2518.480 ns/op
Iteration   7: 2519.206 ns/op
Iteration   8: 2518.803 ns/op
Iteration   9: 2519.018 ns/op
Iteration  10: 2495.550 ns/op
Iteration  11: 2438.813 ns/op
Iteration  12: 2438.001 ns/op
Iteration  13: 2438.858 ns/op
Iteration  14: 2438.302 ns/op
Iteration  15: 2438.185 ns/op
Iteration  16: 2437.988 ns/op
Iteration  17: 2439.908 ns/op
Iteration  18: 2439.746 ns/op
Iteration  19: 2441.061 ns/op
Iteration  20: 2439.506 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2747.487 ns/op
# Warmup Iteration   2: 2571.347 ns/op
# Warmup Iteration   3: 2654.794 ns/op
# Warmup Iteration   4: 2711.535 ns/op
# Warmup Iteration   5: 2710.753 ns/op
Iteration   1: 2712.667 ns/op
Iteration   2: 2711.855 ns/op
Iteration   3: 2711.068 ns/op
Iteration   4: 2711.157 ns/op
Iteration   5: 2711.664 ns/op
Iteration   6: 2711.371 ns/op
Iteration   7: 2710.983 ns/op
Iteration   8: 2711.828 ns/op
Iteration   9: 2711.995 ns/op
Iteration  10: 2712.461 ns/op
Iteration  11: 2688.458 ns/op
Iteration  12: 2633.033 ns/op
Iteration  13: 2632.472 ns/op
Iteration  14: 2632.641 ns/op
Iteration  15: 2632.111 ns/op
Iteration  16: 2632.727 ns/op
Iteration  17: 2634.435 ns/op
Iteration  18: 2633.156 ns/op
Iteration  19: 2634.292 ns/op
Iteration  20: 2634.617 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2794.596 ns/op
# Warmup Iteration   2: 2579.785 ns/op
# Warmup Iteration   3: 2739.509 ns/op
# Warmup Iteration   4: 2798.660 ns/op
# Warmup Iteration   5: 2798.488 ns/op
Iteration   1: 2798.030 ns/op
Iteration   2: 2797.569 ns/op
Iteration   3: 2797.755 ns/op
Iteration   4: 2797.683 ns/op
Iteration   5: 2797.988 ns/op
Iteration   6: 2796.360 ns/op
Iteration   7: 2796.391 ns/op
Iteration   8: 2797.465 ns/op
Iteration   9: 2797.351 ns/op
Iteration  10: 2797.436 ns/op
Iteration  11: 2797.421 ns/op
Iteration  12: 2740.166 ns/op
Iteration  13: 2721.216 ns/op
Iteration  14: 2720.394 ns/op
Iteration  15: 2720.695 ns/op
Iteration  16: 2720.290 ns/op
Iteration  17: 2720.197 ns/op
Iteration  18: 2720.637 ns/op
Iteration  19: 2720.324 ns/op
Iteration  20: 2721.238 ns/op


Result "benchmark.StringContains.regexMatches":
  2676.265 Â±(99.9%) 39.286 ns/op [Average]
  (min, avg, max) = (2437.988, 2676.265, 2828.692), stdev = 115.835
  CI (99.9%): [2636.979, 2715.551] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpcr#w.7iAz9b/MjtFUk>`yxiWUdHc#;%!||0;l.ek@7V(vpRlG 
rocl?=As.ua3C7()U1DH-\i=rV>@KkJ&4W<TK*23n\["AI'6_,O0Ol,z-*I&R>0-gF`Nj;!64It2DwxiJGdmKZ-I`GJ9cjIfjhv,)NLq)t
M
hl,	"0At"A(+8cH^A+cv{e4my{sAtj=BY7s{A'&9%RU8]|BZ-vC%!gz:[Mj>o5>QstDP#~S%&F]S98<[vv%)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.207 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.876 ns/op
# Warmup Iteration   4: 9.897 ns/op
# Warmup Iteration   5: 9.885 ns/op
Iteration   1: 9.875 ns/op
Iteration   2: 9.866 ns/op
Iteration   3: 9.872 ns/op
Iteration   4: 9.872 ns/op
Iteration   5: 9.875 ns/op
Iteration   6: 9.873 ns/op
Iteration   7: 9.876 ns/op
Iteration   8: 9.850 ns/op
Iteration   9: 9.888 ns/op
Iteration  10: 9.880 ns/op
Iteration  11: 9.882 ns/op
Iteration  12: 9.874 ns/op
Iteration  13: 9.876 ns/op
Iteration  14: 9.879 ns/op
Iteration  15: 9.884 ns/op
Iteration  16: 9.867 ns/op
Iteration  17: 9.872 ns/op
Iteration  18: 9.856 ns/op
Iteration  19: 9.880 ns/op
Iteration  20: 9.880 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.190 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.857 ns/op
# Warmup Iteration   4: 9.852 ns/op
# Warmup Iteration   5: 9.860 ns/op
Iteration   1: 9.874 ns/op
Iteration   2: 9.861 ns/op
Iteration   3: 9.854 ns/op
Iteration   4: 9.873 ns/op
Iteration   5: 9.865 ns/op
Iteration   6: 9.865 ns/op
Iteration   7: 9.877 ns/op
Iteration   8: 9.865 ns/op
Iteration   9: 9.861 ns/op
Iteration  10: 9.843 ns/op
Iteration  11: 9.864 ns/op
Iteration  12: 9.875 ns/op
Iteration  13: 9.862 ns/op
Iteration  14: 9.875 ns/op
Iteration  15: 9.864 ns/op
Iteration  16: 9.855 ns/op
Iteration  17: 9.863 ns/op
Iteration  18: 9.867 ns/op
Iteration  19: 9.856 ns/op
Iteration  20: 9.880 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.211 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.830 ns/op
# Warmup Iteration   4: 9.853 ns/op
# Warmup Iteration   5: 9.842 ns/op
Iteration   1: 9.845 ns/op
Iteration   2: 9.838 ns/op
Iteration   3: 9.824 ns/op
Iteration   4: 9.832 ns/op
Iteration   5: 9.832 ns/op
Iteration   6: 9.848 ns/op
Iteration   7: 9.847 ns/op
Iteration   8: 9.836 ns/op
Iteration   9: 9.827 ns/op
Iteration  10: 9.838 ns/op
Iteration  11: 9.830 ns/op
Iteration  12: 9.839 ns/op
Iteration  13: 9.846 ns/op
Iteration  14: 9.850 ns/op
Iteration  15: 9.833 ns/op
Iteration  16: 9.849 ns/op
Iteration  17: 9.837 ns/op
Iteration  18: 9.849 ns/op
Iteration  19: 9.848 ns/op
Iteration  20: 9.854 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.192 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.796 ns/op
# Warmup Iteration   4: 9.798 ns/op
# Warmup Iteration   5: 9.797 ns/op
Iteration   1: 9.791 ns/op
Iteration   2: 9.782 ns/op
Iteration   3: 9.799 ns/op
Iteration   4: 9.799 ns/op
Iteration   5: 9.792 ns/op
Iteration   6: 9.792 ns/op
Iteration   7: 9.788 ns/op
Iteration   8: 9.790 ns/op
Iteration   9: 9.799 ns/op
Iteration  10: 9.803 ns/op
Iteration  11: 9.790 ns/op
Iteration  12: 9.790 ns/op
Iteration  13: 9.798 ns/op
Iteration  14: 9.806 ns/op
Iteration  15: 9.810 ns/op
Iteration  16: 9.795 ns/op
Iteration  17: 9.806 ns/op
Iteration  18: 9.793 ns/op
Iteration  19: 9.797 ns/op
Iteration  20: 9.809 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.502 ns/op
# Warmup Iteration   2: 10.181 ns/op
# Warmup Iteration   3: 9.904 ns/op
# Warmup Iteration   4: 9.898 ns/op
# Warmup Iteration   5: 9.881 ns/op
Iteration   1: 9.897 ns/op
Iteration   2: 9.902 ns/op
Iteration   3: 9.897 ns/op
Iteration   4: 9.902 ns/op
Iteration   5: 9.896 ns/op
Iteration   6: 9.908 ns/op
Iteration   7: 9.894 ns/op
Iteration   8: 9.894 ns/op
Iteration   9: 9.892 ns/op
Iteration  10: 9.888 ns/op
Iteration  11: 9.886 ns/op
Iteration  12: 9.863 ns/op
Iteration  13: 9.895 ns/op
Iteration  14: 9.900 ns/op
Iteration  15: 9.890 ns/op
Iteration  16: 9.889 ns/op
Iteration  17: 9.886 ns/op
Iteration  18: 9.884 ns/op
Iteration  19: 9.883 ns/op
Iteration  20: 9.888 ns/op


Result "benchmark.StringContains.stringContains":
  9.853 Â±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (9.782, 9.853, 9.908), stdev = 0.034
  CI (99.9%): [9.842, 9.865] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt     Score    Error  Units
StringContains.regexMatches       http  httpcr#w.7iAz9b/MjtFUk>`yxiWUdHc#;%!||0;l.ek@7V(vpRlG 
rocl?=As.ua3C7()U1DH-\i=rV>@KkJ&4W<TK*23n\["AI'6_,O0Ol,z-*I&R>0-gF`Nj;!64It2DwxiJGdmKZ-I`GJ9cjIfjhv,)NLq)t
M
hl,	"0At"A(+8cH^A+cv{e4my{sAtj=BY7s{A'&9%RU8]|BZ-vC%!gz:[Mj>o5>QstDP#~S%&F]S98<[vv%  avgt  100  2676.265 Â± 39.286  ns/op
StringContains.stringContains     http  httpcr#w.7iAz9b/MjtFUk>`yxiWUdHc#;%!||0;l.ek@7V(vpRlG 
rocl?=As.ua3C7()U1DH-\i=rV>@KkJ&4W<TK*23n\["AI'6_,O0Ol,z-*I&R>0-gF`Nj;!64It2DwxiJGdmKZ-I`GJ9cjIfjhv,)NLq)t
M
hl,	"0At"A(+8cH^A+cv{e4my{sAtj=BY7s{A'&9%RU8]|BZ-vC%!gz:[Mj>o5>QstDP#~S%&F]S98<[vv%  avgt  100     9.853 Â±  0.012  ns/op

Benchmark result is saved to http_256_0_13.csv
