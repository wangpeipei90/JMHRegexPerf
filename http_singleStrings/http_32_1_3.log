# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = KnyUcv<)M)[HHG5b\M9']Hez1Tay.)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 203.723 ns/op
# Warmup Iteration   2: 135.504 ns/op
# Warmup Iteration   3: 120.106 ns/op
# Warmup Iteration   4: 120.854 ns/op
# Warmup Iteration   5: 125.691 ns/op
Iteration   1: 118.910 ns/op
Iteration   2: 118.982 ns/op
Iteration   3: 119.576 ns/op
Iteration   4: 118.921 ns/op
Iteration   5: 119.037 ns/op
Iteration   6: 119.864 ns/op
Iteration   7: 118.969 ns/op
Iteration   8: 118.501 ns/op
Iteration   9: 118.518 ns/op
Iteration  10: 118.701 ns/op
Iteration  11: 118.520 ns/op
Iteration  12: 118.575 ns/op
Iteration  13: 118.851 ns/op
Iteration  14: 118.740 ns/op
Iteration  15: 118.556 ns/op
Iteration  16: 119.070 ns/op
Iteration  17: 118.768 ns/op
Iteration  18: 118.721 ns/op
Iteration  19: 119.035 ns/op
Iteration  20: 118.658 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 203.094 ns/op
# Warmup Iteration   2: 140.102 ns/op
# Warmup Iteration   3: 124.085 ns/op
# Warmup Iteration   4: 124.600 ns/op
# Warmup Iteration   5: 129.437 ns/op
Iteration   1: 123.755 ns/op
Iteration   2: 124.503 ns/op
Iteration   3: 123.138 ns/op
Iteration   4: 123.690 ns/op
Iteration   5: 123.016 ns/op
Iteration   6: 123.109 ns/op
Iteration   7: 123.069 ns/op
Iteration   8: 123.333 ns/op
Iteration   9: 122.688 ns/op
Iteration  10: 122.677 ns/op
Iteration  11: 123.689 ns/op
Iteration  12: 122.888 ns/op
Iteration  13: 123.132 ns/op
Iteration  14: 122.771 ns/op
Iteration  15: 122.912 ns/op
Iteration  16: 123.015 ns/op
Iteration  17: 122.902 ns/op
Iteration  18: 122.844 ns/op
Iteration  19: 123.556 ns/op
Iteration  20: 122.896 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 204.526 ns/op
# Warmup Iteration   2: 138.720 ns/op
# Warmup Iteration   3: 123.379 ns/op
# Warmup Iteration   4: 123.861 ns/op
# Warmup Iteration   5: 128.402 ns/op
Iteration   1: 122.373 ns/op
Iteration   2: 122.400 ns/op
Iteration   3: 122.333 ns/op
Iteration   4: 122.866 ns/op
Iteration   5: 122.372 ns/op
Iteration   6: 122.298 ns/op
Iteration   7: 122.293 ns/op
Iteration   8: 122.583 ns/op
Iteration   9: 121.992 ns/op
Iteration  10: 122.038 ns/op
Iteration  11: 122.419 ns/op
Iteration  12: 121.934 ns/op
Iteration  13: 122.034 ns/op
Iteration  14: 122.077 ns/op
Iteration  15: 122.836 ns/op
Iteration  16: 122.039 ns/op
Iteration  17: 122.145 ns/op
Iteration  18: 122.149 ns/op
Iteration  19: 122.874 ns/op
Iteration  20: 122.245 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 205.295 ns/op
# Warmup Iteration   2: 138.502 ns/op
# Warmup Iteration   3: 123.450 ns/op
# Warmup Iteration   4: 124.026 ns/op
# Warmup Iteration   5: 128.083 ns/op
Iteration   1: 122.710 ns/op
Iteration   2: 122.477 ns/op
Iteration   3: 122.494 ns/op
Iteration   4: 123.001 ns/op
Iteration   5: 122.450 ns/op
Iteration   6: 122.486 ns/op
Iteration   7: 122.438 ns/op
Iteration   8: 123.219 ns/op
Iteration   9: 122.772 ns/op
Iteration  10: 122.607 ns/op
Iteration  11: 122.952 ns/op
Iteration  12: 123.083 ns/op
Iteration  13: 122.072 ns/op
Iteration  14: 122.080 ns/op
Iteration  15: 123.015 ns/op
Iteration  16: 122.160 ns/op
Iteration  17: 122.130 ns/op
Iteration  18: 122.218 ns/op
Iteration  19: 122.737 ns/op
Iteration  20: 122.119 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 208.673 ns/op
# Warmup Iteration   2: 140.626 ns/op
# Warmup Iteration   3: 123.386 ns/op
# Warmup Iteration   4: 123.839 ns/op
# Warmup Iteration   5: 128.422 ns/op
Iteration   1: 122.508 ns/op
Iteration   2: 122.306 ns/op
Iteration   3: 122.302 ns/op
Iteration   4: 122.675 ns/op
Iteration   5: 122.323 ns/op
Iteration   6: 122.232 ns/op
Iteration   7: 122.433 ns/op
Iteration   8: 122.514 ns/op
Iteration   9: 122.135 ns/op
Iteration  10: 121.971 ns/op
Iteration  11: 123.680 ns/op
Iteration  12: 122.184 ns/op
Iteration  13: 122.334 ns/op
Iteration  14: 122.331 ns/op
Iteration  15: 122.530 ns/op
Iteration  16: 122.332 ns/op
Iteration  17: 122.258 ns/op
Iteration  18: 122.175 ns/op
Iteration  19: 122.468 ns/op
Iteration  20: 122.377 ns/op


Result "benchmark.StringContains.regexMatches":
  121.866 ±(99.9%) 0.534 ns/op [Average]
  (min, avg, max) = (118.501, 121.866, 124.503), stdev = 1.575
  CI (99.9%): [121.332, 122.401] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = KnyUcv<)M)[HHG5b\M9']Hez1Tay.)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.263 ns/op
# Warmup Iteration   2: 11.218 ns/op
# Warmup Iteration   3: 11.166 ns/op
# Warmup Iteration   4: 11.175 ns/op
# Warmup Iteration   5: 11.166 ns/op
Iteration   1: 11.166 ns/op
Iteration   2: 11.167 ns/op
Iteration   3: 11.166 ns/op
Iteration   4: 11.167 ns/op
Iteration   5: 11.166 ns/op
Iteration   6: 11.166 ns/op
Iteration   7: 11.167 ns/op
Iteration   8: 11.185 ns/op
Iteration   9: 11.167 ns/op
Iteration  10: 11.166 ns/op
Iteration  11: 11.167 ns/op
Iteration  12: 11.167 ns/op
Iteration  13: 11.166 ns/op
Iteration  14: 11.167 ns/op
Iteration  15: 11.173 ns/op
Iteration  16: 11.167 ns/op
Iteration  17: 11.167 ns/op
Iteration  18: 11.166 ns/op
Iteration  19: 11.167 ns/op
Iteration  20: 11.185 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.287 ns/op
# Warmup Iteration   2: 11.226 ns/op
# Warmup Iteration   3: 11.171 ns/op
# Warmup Iteration   4: 11.171 ns/op
# Warmup Iteration   5: 11.172 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.171 ns/op
Iteration   3: 11.172 ns/op
Iteration   4: 11.169 ns/op
Iteration   5: 11.170 ns/op
Iteration   6: 11.170 ns/op
Iteration   7: 11.170 ns/op
Iteration   8: 11.191 ns/op
Iteration   9: 11.173 ns/op
Iteration  10: 11.172 ns/op
Iteration  11: 11.171 ns/op
Iteration  12: 11.170 ns/op
Iteration  13: 11.172 ns/op
Iteration  14: 11.173 ns/op
Iteration  15: 11.171 ns/op
Iteration  16: 11.172 ns/op
Iteration  17: 11.171 ns/op
Iteration  18: 11.171 ns/op
Iteration  19: 11.170 ns/op
Iteration  20: 11.188 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.283 ns/op
# Warmup Iteration   2: 11.204 ns/op
# Warmup Iteration   3: 11.210 ns/op
# Warmup Iteration   4: 11.209 ns/op
# Warmup Iteration   5: 11.210 ns/op
Iteration   1: 11.208 ns/op
Iteration   2: 11.209 ns/op
Iteration   3: 11.209 ns/op
Iteration   4: 11.209 ns/op
Iteration   5: 11.210 ns/op
Iteration   6: 11.209 ns/op
Iteration   7: 11.209 ns/op
Iteration   8: 11.213 ns/op
Iteration   9: 11.209 ns/op
Iteration  10: 11.209 ns/op
Iteration  11: 11.209 ns/op
Iteration  12: 11.210 ns/op
Iteration  13: 11.210 ns/op
Iteration  14: 11.209 ns/op
Iteration  15: 11.210 ns/op
Iteration  16: 11.209 ns/op
Iteration  17: 11.210 ns/op
Iteration  18: 11.211 ns/op
Iteration  19: 11.209 ns/op
Iteration  20: 11.210 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.237 ns/op
# Warmup Iteration   2: 11.208 ns/op
# Warmup Iteration   3: 11.170 ns/op
# Warmup Iteration   4: 11.170 ns/op
# Warmup Iteration   5: 11.170 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.170 ns/op
Iteration   3: 11.170 ns/op
Iteration   4: 11.170 ns/op
Iteration   5: 11.170 ns/op
Iteration   6: 11.170 ns/op
Iteration   7: 11.170 ns/op
Iteration   8: 11.170 ns/op
Iteration   9: 11.170 ns/op
Iteration  10: 11.169 ns/op
Iteration  11: 11.169 ns/op
Iteration  12: 11.171 ns/op
Iteration  13: 11.169 ns/op
Iteration  14: 11.171 ns/op
Iteration  15: 11.172 ns/op
Iteration  16: 11.171 ns/op
Iteration  17: 11.171 ns/op
Iteration  18: 11.171 ns/op
Iteration  19: 11.170 ns/op
Iteration  20: 11.171 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.270 ns/op
# Warmup Iteration   2: 11.222 ns/op
# Warmup Iteration   3: 11.172 ns/op
# Warmup Iteration   4: 11.169 ns/op
# Warmup Iteration   5: 11.169 ns/op
Iteration   1: 11.170 ns/op
Iteration   2: 11.169 ns/op
Iteration   3: 11.172 ns/op
Iteration   4: 11.169 ns/op
Iteration   5: 11.169 ns/op
Iteration   6: 11.170 ns/op
Iteration   7: 11.169 ns/op
Iteration   8: 11.189 ns/op
Iteration   9: 11.169 ns/op
Iteration  10: 11.170 ns/op
Iteration  11: 11.170 ns/op
Iteration  12: 11.170 ns/op
Iteration  13: 11.171 ns/op
Iteration  14: 11.170 ns/op
Iteration  15: 11.169 ns/op
Iteration  16: 11.170 ns/op
Iteration  17: 11.169 ns/op
Iteration  18: 11.172 ns/op
Iteration  19: 11.169 ns/op
Iteration  20: 11.189 ns/op


Result "benchmark.StringContains.stringContains":
  11.179 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (11.166, 11.179, 11.213), stdev = 0.016
  CI (99.9%): [11.173, 11.184] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  KnyUcv<)M)[HHG5b\M9']Hez1Tay.  avgt  100  121.866 ± 0.534  ns/op
StringContains.stringContains     http  KnyUcv<)M)[HHG5b\M9']Hez1Tay.  avgt  100   11.179 ± 0.006  ns/op

Benchmark result is saved to http_32_1_3.csv
