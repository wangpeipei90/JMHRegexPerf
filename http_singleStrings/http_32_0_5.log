# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http|/4'&g^Hd.!Fx%#bN%n.Ow^40JI)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 496.292 ns/op
# Warmup Iteration   2: 505.765 ns/op
# Warmup Iteration   3: 505.891 ns/op
# Warmup Iteration   4: 433.800 ns/op
# Warmup Iteration   5: 430.003 ns/op
Iteration   1: 433.509 ns/op
Iteration   2: 429.764 ns/op
Iteration   3: 435.307 ns/op
Iteration   4: 429.675 ns/op
Iteration   5: 429.904 ns/op
Iteration   6: 437.282 ns/op
Iteration   7: 429.668 ns/op
Iteration   8: 431.578 ns/op
Iteration   9: 437.621 ns/op
Iteration  10: 430.487 ns/op
Iteration  11: 442.814 ns/op
Iteration  12: 430.076 ns/op
Iteration  13: 429.745 ns/op
Iteration  14: 431.882 ns/op
Iteration  15: 429.362 ns/op
Iteration  16: 429.880 ns/op
Iteration  17: 432.088 ns/op
Iteration  18: 429.668 ns/op
Iteration  19: 429.756 ns/op
Iteration  20: 431.858 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 489.918 ns/op
# Warmup Iteration   2: 519.765 ns/op
# Warmup Iteration   3: 518.236 ns/op
# Warmup Iteration   4: 438.208 ns/op
# Warmup Iteration   5: 429.098 ns/op
Iteration   1: 433.703 ns/op
Iteration   2: 429.019 ns/op
Iteration   3: 435.097 ns/op
Iteration   4: 432.079 ns/op
Iteration   5: 431.311 ns/op
Iteration   6: 438.462 ns/op
Iteration   7: 429.008 ns/op
Iteration   8: 429.522 ns/op
Iteration   9: 439.048 ns/op
Iteration  10: 428.126 ns/op
Iteration  11: 442.754 ns/op
Iteration  12: 429.114 ns/op
Iteration  13: 429.147 ns/op
Iteration  14: 431.525 ns/op
Iteration  15: 429.384 ns/op
Iteration  16: 429.064 ns/op
Iteration  17: 431.051 ns/op
Iteration  18: 428.835 ns/op
Iteration  19: 428.854 ns/op
Iteration  20: 432.710 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 494.617 ns/op
# Warmup Iteration   2: 516.302 ns/op
# Warmup Iteration   3: 517.952 ns/op
# Warmup Iteration   4: 450.494 ns/op
# Warmup Iteration   5: 443.373 ns/op
Iteration   1: 447.747 ns/op
Iteration   2: 443.534 ns/op
Iteration   3: 443.272 ns/op
Iteration   4: 448.936 ns/op
Iteration   5: 443.635 ns/op
Iteration   6: 450.558 ns/op
Iteration   7: 443.050 ns/op
Iteration   8: 443.527 ns/op
Iteration   9: 453.182 ns/op
Iteration  10: 443.391 ns/op
Iteration  11: 443.902 ns/op
Iteration  12: 456.003 ns/op
Iteration  13: 443.700 ns/op
Iteration  14: 443.570 ns/op
Iteration  15: 445.397 ns/op
Iteration  16: 443.497 ns/op
Iteration  17: 443.245 ns/op
Iteration  18: 445.554 ns/op
Iteration  19: 444.220 ns/op
Iteration  20: 446.749 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 512.328 ns/op
# Warmup Iteration   2: 519.008 ns/op
# Warmup Iteration   3: 517.757 ns/op
# Warmup Iteration   4: 451.439 ns/op
# Warmup Iteration   5: 441.603 ns/op
Iteration   1: 445.772 ns/op
Iteration   2: 442.219 ns/op
Iteration   3: 441.728 ns/op
Iteration   4: 447.019 ns/op
Iteration   5: 441.627 ns/op
Iteration   6: 449.180 ns/op
Iteration   7: 441.615 ns/op
Iteration   8: 441.785 ns/op
Iteration   9: 455.317 ns/op
Iteration  10: 449.166 ns/op
Iteration  11: 449.098 ns/op
Iteration  12: 456.484 ns/op
Iteration  13: 444.060 ns/op
Iteration  14: 444.214 ns/op
Iteration  15: 446.100 ns/op
Iteration  16: 444.238 ns/op
Iteration  17: 443.718 ns/op
Iteration  18: 448.925 ns/op
Iteration  19: 444.144 ns/op
Iteration  20: 446.227 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 496.537 ns/op
# Warmup Iteration   2: 502.677 ns/op
# Warmup Iteration   3: 504.957 ns/op
# Warmup Iteration   4: 432.791 ns/op
# Warmup Iteration   5: 428.324 ns/op
Iteration   1: 432.493 ns/op
Iteration   2: 428.629 ns/op
Iteration   3: 434.011 ns/op
Iteration   4: 427.922 ns/op
Iteration   5: 428.091 ns/op
Iteration   6: 434.649 ns/op
Iteration   7: 427.887 ns/op
Iteration   8: 433.693 ns/op
Iteration   9: 433.397 ns/op
Iteration  10: 429.828 ns/op
Iteration  11: 441.489 ns/op
Iteration  12: 427.734 ns/op
Iteration  13: 427.877 ns/op
Iteration  14: 430.190 ns/op
Iteration  15: 427.941 ns/op
Iteration  16: 428.124 ns/op
Iteration  17: 429.725 ns/op
Iteration  18: 427.651 ns/op
Iteration  19: 427.888 ns/op
Iteration  20: 429.380 ns/op


Result "benchmark.StringContains.regexMatches":
  437.276 ±(99.9%) 2.745 ns/op [Average]
  (min, avg, max) = (427.651, 437.276, 456.484), stdev = 8.092
  CI (99.9%): [434.532, 440.021] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http|/4'&g^Hd.!Fx%#bN%n.Ow^40JI)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.466 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.868 ns/op
# Warmup Iteration   4: 9.878 ns/op
# Warmup Iteration   5: 9.855 ns/op
Iteration   1: 9.860 ns/op
Iteration   2: 9.865 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.881 ns/op
Iteration   5: 9.889 ns/op
Iteration   6: 9.868 ns/op
Iteration   7: 9.873 ns/op
Iteration   8: 9.865 ns/op
Iteration   9: 9.873 ns/op
Iteration  10: 9.882 ns/op
Iteration  11: 9.871 ns/op
Iteration  12: 9.857 ns/op
Iteration  13: 9.854 ns/op
Iteration  14: 9.855 ns/op
Iteration  15: 9.851 ns/op
Iteration  16: 9.853 ns/op
Iteration  17: 9.840 ns/op
Iteration  18: 9.855 ns/op
Iteration  19: 9.849 ns/op
Iteration  20: 9.851 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.489 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.869 ns/op
# Warmup Iteration   4: 9.856 ns/op
# Warmup Iteration   5: 9.875 ns/op
Iteration   1: 9.887 ns/op
Iteration   2: 9.851 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.862 ns/op
Iteration   5: 9.856 ns/op
Iteration   6: 9.860 ns/op
Iteration   7: 9.865 ns/op
Iteration   8: 9.881 ns/op
Iteration   9: 9.848 ns/op
Iteration  10: 9.852 ns/op
Iteration  11: 9.882 ns/op
Iteration  12: 9.858 ns/op
Iteration  13: 9.865 ns/op
Iteration  14: 9.870 ns/op
Iteration  15: 9.877 ns/op
Iteration  16: 9.881 ns/op
Iteration  17: 9.850 ns/op
Iteration  18: 9.860 ns/op
Iteration  19: 9.841 ns/op
Iteration  20: 9.855 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.463 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.871 ns/op
# Warmup Iteration   4: 9.872 ns/op
# Warmup Iteration   5: 9.881 ns/op
Iteration   1: 9.865 ns/op
Iteration   2: 9.859 ns/op
Iteration   3: 9.866 ns/op
Iteration   4: 9.871 ns/op
Iteration   5: 9.861 ns/op
Iteration   6: 9.886 ns/op
Iteration   7: 9.904 ns/op
Iteration   8: 9.893 ns/op
Iteration   9: 9.883 ns/op
Iteration  10: 9.873 ns/op
Iteration  11: 9.863 ns/op
Iteration  12: 9.879 ns/op
Iteration  13: 9.874 ns/op
Iteration  14: 9.876 ns/op
Iteration  15: 9.876 ns/op
Iteration  16: 9.866 ns/op
Iteration  17: 9.872 ns/op
Iteration  18: 9.867 ns/op
Iteration  19: 9.892 ns/op
Iteration  20: 9.886 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.184 ns/op
# Warmup Iteration   2: 9.715 ns/op
# Warmup Iteration   3: 9.934 ns/op
# Warmup Iteration   4: 9.938 ns/op
# Warmup Iteration   5: 9.929 ns/op
Iteration   1: 9.946 ns/op
Iteration   2: 9.932 ns/op
Iteration   3: 9.934 ns/op
Iteration   4: 9.941 ns/op
Iteration   5: 9.928 ns/op
Iteration   6: 9.928 ns/op
Iteration   7: 9.921 ns/op
Iteration   8: 9.927 ns/op
Iteration   9: 9.925 ns/op
Iteration  10: 9.922 ns/op
Iteration  11: 9.910 ns/op
Iteration  12: 9.915 ns/op
Iteration  13: 9.918 ns/op
Iteration  14: 9.910 ns/op
Iteration  15: 9.908 ns/op
Iteration  16: 9.916 ns/op
Iteration  17: 9.913 ns/op
Iteration  18: 9.925 ns/op
Iteration  19: 9.904 ns/op
Iteration  20: 9.933 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.383 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.883 ns/op
# Warmup Iteration   4: 9.886 ns/op
# Warmup Iteration   5: 9.873 ns/op
Iteration   1: 9.895 ns/op
Iteration   2: 9.875 ns/op
Iteration   3: 9.900 ns/op
Iteration   4: 9.869 ns/op
Iteration   5: 9.878 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.874 ns/op
Iteration   8: 9.871 ns/op
Iteration   9: 9.890 ns/op
Iteration  10: 9.876 ns/op
Iteration  11: 9.873 ns/op
Iteration  12: 9.877 ns/op
Iteration  13: 9.883 ns/op
Iteration  14: 9.871 ns/op
Iteration  15: 9.877 ns/op
Iteration  16: 9.881 ns/op
Iteration  17: 9.886 ns/op
Iteration  18: 9.880 ns/op
Iteration  19: 9.876 ns/op
Iteration  20: 9.882 ns/op


Result "benchmark.StringContains.stringContains":
  9.881 ±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (9.840, 9.881, 9.946), stdev = 0.025
  CI (99.9%): [9.872, 9.889] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http|/4'&g^Hd.!Fx%#bN%n.Ow^40JI  avgt  100  437.276 ± 2.745  ns/op
StringContains.stringContains     http  http|/4'&g^Hd.!Fx%#bN%n.Ow^40JI  avgt  100    9.881 ± 0.008  ns/op

Benchmark result is saved to http_32_0_5.csv
