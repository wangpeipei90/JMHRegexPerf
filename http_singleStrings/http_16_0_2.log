# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpnkxrBXsTVj)\)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 342.404 ns/op
# Warmup Iteration   2: 350.540 ns/op
# Warmup Iteration   3: 263.157 ns/op
# Warmup Iteration   4: 258.339 ns/op
# Warmup Iteration   5: 257.296 ns/op
Iteration   1: 257.530 ns/op
Iteration   2: 260.438 ns/op
Iteration   3: 256.133 ns/op
Iteration   4: 261.664 ns/op
Iteration   5: 263.790 ns/op
Iteration   6: 255.696 ns/op
Iteration   7: 257.243 ns/op
Iteration   8: 255.567 ns/op
Iteration   9: 257.743 ns/op
Iteration  10: 256.821 ns/op
Iteration  11: 255.750 ns/op
Iteration  12: 256.842 ns/op
Iteration  13: 255.749 ns/op
Iteration  14: 256.846 ns/op
Iteration  15: 256.975 ns/op
Iteration  16: 255.591 ns/op
Iteration  17: 257.352 ns/op
Iteration  18: 257.732 ns/op
Iteration  19: 255.349 ns/op
Iteration  20: 257.757 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 328.984 ns/op
# Warmup Iteration   2: 336.865 ns/op
# Warmup Iteration   3: 256.094 ns/op
# Warmup Iteration   4: 256.438 ns/op
# Warmup Iteration   5: 257.128 ns/op
Iteration   1: 253.985 ns/op
Iteration   2: 258.323 ns/op
Iteration   3: 259.704 ns/op
Iteration   4: 255.334 ns/op
Iteration   5: 261.759 ns/op
Iteration   6: 254.034 ns/op
Iteration   7: 255.247 ns/op
Iteration   8: 255.312 ns/op
Iteration   9: 254.011 ns/op
Iteration  10: 254.998 ns/op
Iteration  11: 253.611 ns/op
Iteration  12: 255.092 ns/op
Iteration  13: 255.317 ns/op
Iteration  14: 254.077 ns/op
Iteration  15: 255.225 ns/op
Iteration  16: 254.085 ns/op
Iteration  17: 255.340 ns/op
Iteration  18: 255.386 ns/op
Iteration  19: 254.189 ns/op
Iteration  20: 255.168 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 337.624 ns/op
# Warmup Iteration   2: 344.769 ns/op
# Warmup Iteration   3: 262.458 ns/op
# Warmup Iteration   4: 258.714 ns/op
# Warmup Iteration   5: 259.739 ns/op
Iteration   1: 256.172 ns/op
Iteration   2: 260.533 ns/op
Iteration   3: 255.798 ns/op
Iteration   4: 261.499 ns/op
Iteration   5: 262.938 ns/op
Iteration   6: 255.656 ns/op
Iteration   7: 256.895 ns/op
Iteration   8: 255.330 ns/op
Iteration   9: 257.066 ns/op
Iteration  10: 256.892 ns/op
Iteration  11: 255.863 ns/op
Iteration  12: 257.280 ns/op
Iteration  13: 255.894 ns/op
Iteration  14: 257.741 ns/op
Iteration  15: 257.749 ns/op
Iteration  16: 255.929 ns/op
Iteration  17: 257.059 ns/op
Iteration  18: 256.700 ns/op
Iteration  19: 256.774 ns/op
Iteration  20: 259.599 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 334.716 ns/op
# Warmup Iteration   2: 337.406 ns/op
# Warmup Iteration   3: 256.280 ns/op
# Warmup Iteration   4: 256.294 ns/op
# Warmup Iteration   5: 257.799 ns/op
Iteration   1: 254.201 ns/op
Iteration   2: 258.131 ns/op
Iteration   3: 258.054 ns/op
Iteration   4: 255.971 ns/op
Iteration   5: 261.258 ns/op
Iteration   6: 253.934 ns/op
Iteration   7: 255.391 ns/op
Iteration   8: 255.359 ns/op
Iteration   9: 254.289 ns/op
Iteration  10: 255.109 ns/op
Iteration  11: 253.472 ns/op
Iteration  12: 255.177 ns/op
Iteration  13: 256.574 ns/op
Iteration  14: 255.094 ns/op
Iteration  15: 255.642 ns/op
Iteration  16: 254.405 ns/op
Iteration  17: 254.954 ns/op
Iteration  18: 255.522 ns/op
Iteration  19: 254.367 ns/op
Iteration  20: 255.859 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 337.794 ns/op
# Warmup Iteration   2: 339.881 ns/op
# Warmup Iteration   3: 258.100 ns/op
# Warmup Iteration   4: 255.915 ns/op
# Warmup Iteration   5: 256.871 ns/op
Iteration   1: 253.685 ns/op
Iteration   2: 257.929 ns/op
Iteration   3: 259.442 ns/op
Iteration   4: 253.860 ns/op
Iteration   5: 260.938 ns/op
Iteration   6: 253.595 ns/op
Iteration   7: 255.773 ns/op
Iteration   8: 254.976 ns/op
Iteration   9: 253.735 ns/op
Iteration  10: 254.713 ns/op
Iteration  11: 253.568 ns/op
Iteration  12: 255.198 ns/op
Iteration  13: 254.958 ns/op
Iteration  14: 253.575 ns/op
Iteration  15: 254.913 ns/op
Iteration  16: 253.935 ns/op
Iteration  17: 255.090 ns/op
Iteration  18: 255.229 ns/op
Iteration  19: 253.997 ns/op
Iteration  20: 255.182 ns/op


Result "benchmark.StringContains.regexMatches":
  256.252 ±(99.9%) 0.753 ns/op [Average]
  (min, avg, max) = (253.472, 256.252, 263.790), stdev = 2.222
  CI (99.9%): [255.498, 257.005] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpnkxrBXsTVj)\)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.209 ns/op
# Warmup Iteration   2: 9.725 ns/op
# Warmup Iteration   3: 9.873 ns/op
# Warmup Iteration   4: 9.877 ns/op
# Warmup Iteration   5: 9.858 ns/op
Iteration   1: 9.894 ns/op
Iteration   2: 9.886 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.883 ns/op
Iteration   5: 9.867 ns/op
Iteration   6: 9.879 ns/op
Iteration   7: 9.868 ns/op
Iteration   8: 9.875 ns/op
Iteration   9: 9.862 ns/op
Iteration  10: 9.862 ns/op
Iteration  11: 9.861 ns/op
Iteration  12: 9.880 ns/op
Iteration  13: 9.876 ns/op
Iteration  14: 9.876 ns/op
Iteration  15: 9.881 ns/op
Iteration  16: 9.871 ns/op
Iteration  17: 9.861 ns/op
Iteration  18: 9.879 ns/op
Iteration  19: 9.871 ns/op
Iteration  20: 9.869 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.218 ns/op
# Warmup Iteration   2: 9.721 ns/op
# Warmup Iteration   3: 9.848 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.868 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.847 ns/op
Iteration   3: 9.857 ns/op
Iteration   4: 9.864 ns/op
Iteration   5: 9.864 ns/op
Iteration   6: 9.875 ns/op
Iteration   7: 9.871 ns/op
Iteration   8: 9.872 ns/op
Iteration   9: 9.859 ns/op
Iteration  10: 9.862 ns/op
Iteration  11: 9.863 ns/op
Iteration  12: 9.864 ns/op
Iteration  13: 9.858 ns/op
Iteration  14: 9.848 ns/op
Iteration  15: 9.857 ns/op
Iteration  16: 9.881 ns/op
Iteration  17: 9.861 ns/op
Iteration  18: 9.854 ns/op
Iteration  19: 9.847 ns/op
Iteration  20: 9.854 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.213 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.876 ns/op
# Warmup Iteration   4: 9.866 ns/op
# Warmup Iteration   5: 9.868 ns/op
Iteration   1: 9.875 ns/op
Iteration   2: 9.863 ns/op
Iteration   3: 9.862 ns/op
Iteration   4: 9.875 ns/op
Iteration   5: 9.869 ns/op
Iteration   6: 9.877 ns/op
Iteration   7: 9.866 ns/op
Iteration   8: 9.882 ns/op
Iteration   9: 9.864 ns/op
Iteration  10: 9.868 ns/op
Iteration  11: 9.877 ns/op
Iteration  12: 9.855 ns/op
Iteration  13: 9.864 ns/op
Iteration  14: 9.839 ns/op
Iteration  15: 9.858 ns/op
Iteration  16: 9.844 ns/op
Iteration  17: 9.853 ns/op
Iteration  18: 9.844 ns/op
Iteration  19: 9.869 ns/op
Iteration  20: 9.855 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.222 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.874 ns/op
# Warmup Iteration   4: 9.883 ns/op
# Warmup Iteration   5: 9.868 ns/op
Iteration   1: 9.881 ns/op
Iteration   2: 9.874 ns/op
Iteration   3: 9.865 ns/op
Iteration   4: 9.869 ns/op
Iteration   5: 9.867 ns/op
Iteration   6: 9.873 ns/op
Iteration   7: 9.856 ns/op
Iteration   8: 9.873 ns/op
Iteration   9: 9.884 ns/op
Iteration  10: 9.860 ns/op
Iteration  11: 9.864 ns/op
Iteration  12: 9.873 ns/op
Iteration  13: 9.883 ns/op
Iteration  14: 9.871 ns/op
Iteration  15: 9.858 ns/op
Iteration  16: 9.872 ns/op
Iteration  17: 9.864 ns/op
Iteration  18: 9.857 ns/op
Iteration  19: 9.872 ns/op
Iteration  20: 9.889 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.465 ns/op
# Warmup Iteration   2: 9.723 ns/op
# Warmup Iteration   3: 9.862 ns/op
# Warmup Iteration   4: 9.877 ns/op
# Warmup Iteration   5: 9.849 ns/op
Iteration   1: 9.874 ns/op
Iteration   2: 9.877 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.886 ns/op
Iteration   5: 9.867 ns/op
Iteration   6: 9.896 ns/op
Iteration   7: 9.886 ns/op
Iteration   8: 9.883 ns/op
Iteration   9: 9.881 ns/op
Iteration  10: 9.851 ns/op
Iteration  11: 9.860 ns/op
Iteration  12: 9.872 ns/op
Iteration  13: 9.866 ns/op
Iteration  14: 9.840 ns/op
Iteration  15: 9.844 ns/op
Iteration  16: 9.872 ns/op
Iteration  17: 9.852 ns/op
Iteration  18: 9.850 ns/op
Iteration  19: 9.856 ns/op
Iteration  20: 9.879 ns/op


Result "benchmark.StringContains.stringContains":
  9.867 ±(99.9%) 0.004 ns/op [Average]
  (min, avg, max) = (9.839, 9.867, 9.896), stdev = 0.012
  CI (99.9%): [9.863, 9.871] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpnkxrBXsTVj)\  avgt  100  256.252 ± 0.753  ns/op
StringContains.stringContains     http  httpnkxrBXsTVj)\  avgt  100    9.867 ± 0.004  ns/op

Benchmark result is saved to http_16_0_2.csv
