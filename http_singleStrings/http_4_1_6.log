# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Rero)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 172.240 ns/op
# Warmup Iteration   2: 92.119 ns/op
# Warmup Iteration   3: 89.771 ns/op
# Warmup Iteration   4: 91.724 ns/op
# Warmup Iteration   5: 87.614 ns/op
Iteration   1: 87.679 ns/op
Iteration   2: 87.272 ns/op
Iteration   3: 87.649 ns/op
Iteration   4: 87.695 ns/op
Iteration   5: 87.186 ns/op
Iteration   6: 87.003 ns/op
Iteration   7: 87.212 ns/op
Iteration   8: 87.089 ns/op
Iteration   9: 87.215 ns/op
Iteration  10: 87.964 ns/op
Iteration  11: 87.036 ns/op
Iteration  12: 87.311 ns/op
Iteration  13: 87.206 ns/op
Iteration  14: 87.383 ns/op
Iteration  15: 87.126 ns/op
Iteration  16: 87.711 ns/op
Iteration  17: 87.714 ns/op
Iteration  18: 87.381 ns/op
Iteration  19: 87.437 ns/op
Iteration  20: 87.096 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 170.870 ns/op
# Warmup Iteration   2: 97.533 ns/op
# Warmup Iteration   3: 96.218 ns/op
# Warmup Iteration   4: 98.664 ns/op
# Warmup Iteration   5: 95.054 ns/op
Iteration   1: 94.354 ns/op
Iteration   2: 94.264 ns/op
Iteration   3: 93.865 ns/op
Iteration   4: 94.317 ns/op
Iteration   5: 94.132 ns/op
Iteration   6: 93.485 ns/op
Iteration   7: 93.646 ns/op
Iteration   8: 93.627 ns/op
Iteration   9: 93.582 ns/op
Iteration  10: 93.692 ns/op
Iteration  11: 93.803 ns/op
Iteration  12: 93.564 ns/op
Iteration  13: 95.223 ns/op
Iteration  14: 94.103 ns/op
Iteration  15: 94.050 ns/op
Iteration  16: 94.026 ns/op
Iteration  17: 93.712 ns/op
Iteration  18: 94.246 ns/op
Iteration  19: 94.436 ns/op
Iteration  20: 93.992 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 170.596 ns/op
# Warmup Iteration   2: 98.683 ns/op
# Warmup Iteration   3: 95.919 ns/op
# Warmup Iteration   4: 97.889 ns/op
# Warmup Iteration   5: 93.639 ns/op
Iteration   1: 94.702 ns/op
Iteration   2: 94.836 ns/op
Iteration   3: 94.084 ns/op
Iteration   4: 94.223 ns/op
Iteration   5: 94.044 ns/op
Iteration   6: 93.199 ns/op
Iteration   7: 94.167 ns/op
Iteration   8: 93.547 ns/op
Iteration   9: 93.432 ns/op
Iteration  10: 93.800 ns/op
Iteration  11: 93.758 ns/op
Iteration  12: 93.382 ns/op
Iteration  13: 93.776 ns/op
Iteration  14: 93.745 ns/op
Iteration  15: 93.438 ns/op
Iteration  16: 93.945 ns/op
Iteration  17: 94.171 ns/op
Iteration  18: 93.423 ns/op
Iteration  19: 93.785 ns/op
Iteration  20: 93.403 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 160.522 ns/op
# Warmup Iteration   2: 90.500 ns/op
# Warmup Iteration   3: 90.888 ns/op
# Warmup Iteration   4: 93.905 ns/op
# Warmup Iteration   5: 88.775 ns/op
Iteration   1: 88.250 ns/op
Iteration   2: 88.724 ns/op
Iteration   3: 88.681 ns/op
Iteration   4: 88.683 ns/op
Iteration   5: 88.154 ns/op
Iteration   6: 88.515 ns/op
Iteration   7: 88.239 ns/op
Iteration   8: 88.319 ns/op
Iteration   9: 88.348 ns/op
Iteration  10: 88.020 ns/op
Iteration  11: 88.264 ns/op
Iteration  12: 88.524 ns/op
Iteration  13: 88.594 ns/op
Iteration  14: 88.136 ns/op
Iteration  15: 88.519 ns/op
Iteration  16: 88.833 ns/op
Iteration  17: 88.751 ns/op
Iteration  18: 88.469 ns/op
Iteration  19: 88.543 ns/op
Iteration  20: 88.245 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 165.045 ns/op
# Warmup Iteration   2: 90.906 ns/op
# Warmup Iteration   3: 92.496 ns/op
# Warmup Iteration   4: 92.621 ns/op
# Warmup Iteration   5: 89.071 ns/op
Iteration   1: 88.572 ns/op
Iteration   2: 89.425 ns/op
Iteration   3: 89.171 ns/op
Iteration   4: 89.291 ns/op
Iteration   5: 88.246 ns/op
Iteration   6: 89.583 ns/op
Iteration   7: 88.576 ns/op
Iteration   8: 88.691 ns/op
Iteration   9: 88.462 ns/op
Iteration  10: 88.782 ns/op
Iteration  11: 88.697 ns/op
Iteration  12: 88.872 ns/op
Iteration  13: 88.528 ns/op
Iteration  14: 88.612 ns/op
Iteration  15: 88.995 ns/op
Iteration  16: 88.998 ns/op
Iteration  17: 88.573 ns/op
Iteration  18: 88.801 ns/op
Iteration  19: 88.910 ns/op
Iteration  20: 88.977 ns/op


Result "benchmark.StringContains.regexMatches":
  90.499 ±(99.9%) 0.974 ns/op [Average]
  (min, avg, max) = (87.003, 90.499, 95.223), stdev = 2.873
  CI (99.9%): [89.525, 91.473] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Rero)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.438 ns/op
# Warmup Iteration   2: 9.052 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.962 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.963 ns/op
Iteration   3: 8.965 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.962 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.429 ns/op
# Warmup Iteration   2: 9.067 ns/op
# Warmup Iteration   3: 8.963 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.963 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.963 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.963 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.962 ns/op
Iteration   8: 8.977 ns/op
Iteration   9: 8.963 ns/op
Iteration  10: 8.964 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.977 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.442 ns/op
# Warmup Iteration   2: 9.055 ns/op
# Warmup Iteration   3: 9.158 ns/op
# Warmup Iteration   4: 9.137 ns/op
# Warmup Iteration   5: 9.142 ns/op
Iteration   1: 9.144 ns/op
Iteration   2: 9.146 ns/op
Iteration   3: 9.146 ns/op
Iteration   4: 9.137 ns/op
Iteration   5: 9.141 ns/op
Iteration   6: 9.122 ns/op
Iteration   7: 9.128 ns/op
Iteration   8: 9.126 ns/op
Iteration   9: 9.099 ns/op
Iteration  10: 9.120 ns/op
Iteration  11: 9.119 ns/op
Iteration  12: 9.102 ns/op
Iteration  13: 9.110 ns/op
Iteration  14: 9.083 ns/op
Iteration  15: 9.102 ns/op
Iteration  16: 9.097 ns/op
Iteration  17: 9.131 ns/op
Iteration  18: 9.119 ns/op
Iteration  19: 9.098 ns/op
Iteration  20: 9.085 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.446 ns/op
# Warmup Iteration   2: 9.051 ns/op
# Warmup Iteration   3: 8.968 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.963 ns/op
Iteration   2: 8.963 ns/op
Iteration   3: 8.953 ns/op
Iteration   4: 8.962 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.969 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.966 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.447 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.970 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.967 ns/op


Result "benchmark.StringContains.stringContains":
  8.996 ±(99.9%) 0.021 ns/op [Average]
  (min, avg, max) = (8.953, 8.996, 9.146), stdev = 0.062
  CI (99.9%): [8.975, 9.017] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   Rero  avgt  100  90.499 ± 0.974  ns/op
StringContains.stringContains     http   Rero  avgt  100   8.996 ± 0.021  ns/op

Benchmark result is saved to http_4_1_6.csv
