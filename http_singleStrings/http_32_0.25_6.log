# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = &x787S"Mhttp+,1QqAV!^G5;yemy3wd)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 433.694 ns/op
# Warmup Iteration   2: 435.986 ns/op
# Warmup Iteration   3: 405.592 ns/op
# Warmup Iteration   4: 354.529 ns/op
# Warmup Iteration   5: 358.150 ns/op
Iteration   1: 354.572 ns/op
Iteration   2: 359.152 ns/op
Iteration   3: 354.370 ns/op
Iteration   4: 360.698 ns/op
Iteration   5: 354.667 ns/op
Iteration   6: 362.815 ns/op
Iteration   7: 354.360 ns/op
Iteration   8: 355.048 ns/op
Iteration   9: 365.497 ns/op
Iteration  10: 354.578 ns/op
Iteration  11: 356.153 ns/op
Iteration  12: 354.471 ns/op
Iteration  13: 356.386 ns/op
Iteration  14: 354.696 ns/op
Iteration  15: 354.480 ns/op
Iteration  16: 356.199 ns/op
Iteration  17: 354.410 ns/op
Iteration  18: 356.084 ns/op
Iteration  19: 354.126 ns/op
Iteration  20: 356.945 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 428.426 ns/op
# Warmup Iteration   2: 430.661 ns/op
# Warmup Iteration   3: 400.019 ns/op
# Warmup Iteration   4: 355.005 ns/op
# Warmup Iteration   5: 358.345 ns/op
Iteration   1: 354.821 ns/op
Iteration   2: 359.508 ns/op
Iteration   3: 355.090 ns/op
Iteration   4: 360.950 ns/op
Iteration   5: 354.888 ns/op
Iteration   6: 362.395 ns/op
Iteration   7: 354.759 ns/op
Iteration   8: 355.638 ns/op
Iteration   9: 364.760 ns/op
Iteration  10: 354.804 ns/op
Iteration  11: 356.216 ns/op
Iteration  12: 355.071 ns/op
Iteration  13: 356.408 ns/op
Iteration  14: 354.717 ns/op
Iteration  15: 354.803 ns/op
Iteration  16: 356.485 ns/op
Iteration  17: 354.820 ns/op
Iteration  18: 356.282 ns/op
Iteration  19: 355.461 ns/op
Iteration  20: 356.748 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 426.004 ns/op
# Warmup Iteration   2: 430.366 ns/op
# Warmup Iteration   3: 398.847 ns/op
# Warmup Iteration   4: 355.549 ns/op
# Warmup Iteration   5: 357.593 ns/op
Iteration   1: 354.300 ns/op
Iteration   2: 358.928 ns/op
Iteration   3: 354.331 ns/op
Iteration   4: 360.355 ns/op
Iteration   5: 354.474 ns/op
Iteration   6: 362.065 ns/op
Iteration   7: 354.689 ns/op
Iteration   8: 354.604 ns/op
Iteration   9: 364.455 ns/op
Iteration  10: 354.712 ns/op
Iteration  11: 356.247 ns/op
Iteration  12: 354.574 ns/op
Iteration  13: 355.873 ns/op
Iteration  14: 354.605 ns/op
Iteration  15: 354.152 ns/op
Iteration  16: 356.042 ns/op
Iteration  17: 354.808 ns/op
Iteration  18: 356.072 ns/op
Iteration  19: 354.489 ns/op
Iteration  20: 356.033 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 424.773 ns/op
# Warmup Iteration   2: 436.332 ns/op
# Warmup Iteration   3: 404.745 ns/op
# Warmup Iteration   4: 358.826 ns/op
# Warmup Iteration   5: 362.584 ns/op
Iteration   1: 358.862 ns/op
Iteration   2: 364.085 ns/op
Iteration   3: 358.999 ns/op
Iteration   4: 365.323 ns/op
Iteration   5: 358.630 ns/op
Iteration   6: 364.330 ns/op
Iteration   7: 361.745 ns/op
Iteration   8: 358.852 ns/op
Iteration   9: 369.001 ns/op
Iteration  10: 358.555 ns/op
Iteration  11: 360.572 ns/op
Iteration  12: 358.586 ns/op
Iteration  13: 360.346 ns/op
Iteration  14: 358.743 ns/op
Iteration  15: 358.455 ns/op
Iteration  16: 360.278 ns/op
Iteration  17: 358.813 ns/op
Iteration  18: 360.720 ns/op
Iteration  19: 358.627 ns/op
Iteration  20: 362.267 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 422.248 ns/op
# Warmup Iteration   2: 416.392 ns/op
# Warmup Iteration   3: 415.138 ns/op
# Warmup Iteration   4: 372.953 ns/op
# Warmup Iteration   5: 376.566 ns/op
Iteration   1: 373.052 ns/op
Iteration   2: 377.911 ns/op
Iteration   3: 373.042 ns/op
Iteration   4: 375.878 ns/op
Iteration   5: 376.554 ns/op
Iteration   6: 373.369 ns/op
Iteration   7: 382.824 ns/op
Iteration   8: 374.619 ns/op
Iteration   9: 384.062 ns/op
Iteration  10: 373.050 ns/op
Iteration  11: 373.494 ns/op
Iteration  12: 374.357 ns/op
Iteration  13: 373.182 ns/op
Iteration  14: 375.342 ns/op
Iteration  15: 373.225 ns/op
Iteration  16: 374.898 ns/op
Iteration  17: 373.284 ns/op
Iteration  18: 372.928 ns/op
Iteration  19: 375.051 ns/op
Iteration  20: 372.913 ns/op


Result "benchmark.StringContains.regexMatches":
  361.090 ±(99.9%) 2.657 ns/op [Average]
  (min, avg, max) = (354.126, 361.090, 384.062), stdev = 7.833
  CI (99.9%): [358.433, 363.746] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = &x787S"Mhttp+,1QqAV!^G5;yemy3wd)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.377 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.768 ns/op
# Warmup Iteration   4: 9.773 ns/op
# Warmup Iteration   5: 9.780 ns/op
Iteration   1: 9.792 ns/op
Iteration   2: 9.777 ns/op
Iteration   3: 9.779 ns/op
Iteration   4: 9.790 ns/op
Iteration   5: 9.786 ns/op
Iteration   6: 9.790 ns/op
Iteration   7: 9.796 ns/op
Iteration   8: 9.829 ns/op
Iteration   9: 9.790 ns/op
Iteration  10: 9.789 ns/op
Iteration  11: 9.792 ns/op
Iteration  12: 9.787 ns/op
Iteration  13: 9.797 ns/op
Iteration  14: 9.795 ns/op
Iteration  15: 9.805 ns/op
Iteration  16: 9.784 ns/op
Iteration  17: 9.776 ns/op
Iteration  18: 9.775 ns/op
Iteration  19: 9.774 ns/op
Iteration  20: 9.806 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.190 ns/op
# Warmup Iteration   2: 9.733 ns/op
# Warmup Iteration   3: 9.936 ns/op
# Warmup Iteration   4: 9.957 ns/op
# Warmup Iteration   5: 9.966 ns/op
Iteration   1: 9.944 ns/op
Iteration   2: 9.953 ns/op
Iteration   3: 9.928 ns/op
Iteration   4: 9.956 ns/op
Iteration   5: 9.943 ns/op
Iteration   6: 9.952 ns/op
Iteration   7: 9.947 ns/op
Iteration   8: 9.960 ns/op
Iteration   9: 9.941 ns/op
Iteration  10: 9.955 ns/op
Iteration  11: 9.935 ns/op
Iteration  12: 9.937 ns/op
Iteration  13: 9.960 ns/op
Iteration  14: 9.923 ns/op
Iteration  15: 9.943 ns/op
Iteration  16: 9.932 ns/op
Iteration  17: 9.945 ns/op
Iteration  18: 9.932 ns/op
Iteration  19: 9.959 ns/op
Iteration  20: 9.931 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.226 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.823 ns/op
# Warmup Iteration   4: 9.821 ns/op
# Warmup Iteration   5: 9.829 ns/op
Iteration   1: 9.839 ns/op
Iteration   2: 9.814 ns/op
Iteration   3: 9.820 ns/op
Iteration   4: 9.838 ns/op
Iteration   5: 9.826 ns/op
Iteration   6: 9.838 ns/op
Iteration   7: 9.838 ns/op
Iteration   8: 9.841 ns/op
Iteration   9: 9.829 ns/op
Iteration  10: 9.852 ns/op
Iteration  11: 9.853 ns/op
Iteration  12: 9.832 ns/op
Iteration  13: 9.828 ns/op
Iteration  14: 9.826 ns/op
Iteration  15: 9.836 ns/op
Iteration  16: 9.845 ns/op
Iteration  17: 9.838 ns/op
Iteration  18: 9.823 ns/op
Iteration  19: 9.831 ns/op
Iteration  20: 9.830 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.438 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.803 ns/op
# Warmup Iteration   4: 9.784 ns/op
# Warmup Iteration   5: 9.778 ns/op
Iteration   1: 9.794 ns/op
Iteration   2: 9.780 ns/op
Iteration   3: 9.790 ns/op
Iteration   4: 9.791 ns/op
Iteration   5: 9.796 ns/op
Iteration   6: 9.790 ns/op
Iteration   7: 9.795 ns/op
Iteration   8: 9.789 ns/op
Iteration   9: 9.797 ns/op
Iteration  10: 9.796 ns/op
Iteration  11: 9.787 ns/op
Iteration  12: 9.798 ns/op
Iteration  13: 9.775 ns/op
Iteration  14: 9.796 ns/op
Iteration  15: 9.795 ns/op
Iteration  16: 9.799 ns/op
Iteration  17: 9.789 ns/op
Iteration  18: 9.779 ns/op
Iteration  19: 9.799 ns/op
Iteration  20: 9.793 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.237 ns/op
# Warmup Iteration   2: 9.727 ns/op
# Warmup Iteration   3: 9.866 ns/op
# Warmup Iteration   4: 9.845 ns/op
# Warmup Iteration   5: 9.848 ns/op
Iteration   1: 9.873 ns/op
Iteration   2: 9.855 ns/op
Iteration   3: 9.860 ns/op
Iteration   4: 9.859 ns/op
Iteration   5: 9.853 ns/op
Iteration   6: 9.847 ns/op
Iteration   7: 9.873 ns/op
Iteration   8: 9.877 ns/op
Iteration   9: 9.869 ns/op
Iteration  10: 9.857 ns/op
Iteration  11: 9.842 ns/op
Iteration  12: 9.858 ns/op
Iteration  13: 9.862 ns/op
Iteration  14: 9.864 ns/op
Iteration  15: 9.867 ns/op
Iteration  16: 9.855 ns/op
Iteration  17: 9.877 ns/op
Iteration  18: 9.852 ns/op
Iteration  19: 9.888 ns/op
Iteration  20: 9.883 ns/op


Result "benchmark.StringContains.stringContains":
  9.845 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (9.774, 9.845, 9.960), stdev = 0.058
  CI (99.9%): [9.825, 9.864] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  &x787S"Mhttp+,1QqAV!^G5;yemy3wd  avgt  100  361.090 ± 2.657  ns/op
StringContains.stringContains     http  &x787S"Mhttp+,1QqAV!^G5;yemy3wd  avgt  100    9.845 ± 0.020  ns/op

Benchmark result is saved to http_32_0.25_6.csv
