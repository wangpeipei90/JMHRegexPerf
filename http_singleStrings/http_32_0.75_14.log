# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :S=.1Nv}dc)yZ^4l[ckT54http'Jo )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 275.729 ns/op
# Warmup Iteration   2: 214.952 ns/op
# Warmup Iteration   3: 171.580 ns/op
# Warmup Iteration   4: 172.235 ns/op
# Warmup Iteration   5: 172.647 ns/op
Iteration   1: 173.969 ns/op
Iteration   2: 175.117 ns/op
Iteration   3: 170.529 ns/op
Iteration   4: 170.613 ns/op
Iteration   5: 170.005 ns/op
Iteration   6: 170.697 ns/op
Iteration   7: 170.819 ns/op
Iteration   8: 170.671 ns/op
Iteration   9: 170.567 ns/op
Iteration  10: 170.535 ns/op
Iteration  11: 170.925 ns/op
Iteration  12: 171.104 ns/op
Iteration  13: 171.144 ns/op
Iteration  14: 170.115 ns/op
Iteration  15: 170.576 ns/op
Iteration  16: 170.726 ns/op
Iteration  17: 169.914 ns/op
Iteration  18: 170.420 ns/op
Iteration  19: 170.610 ns/op
Iteration  20: 170.571 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 253.619 ns/op
# Warmup Iteration   2: 187.436 ns/op
# Warmup Iteration   3: 153.610 ns/op
# Warmup Iteration   4: 154.024 ns/op
# Warmup Iteration   5: 154.712 ns/op
Iteration   1: 155.480 ns/op
Iteration   2: 156.532 ns/op
Iteration   3: 153.183 ns/op
Iteration   4: 153.186 ns/op
Iteration   5: 152.842 ns/op
Iteration   6: 153.580 ns/op
Iteration   7: 152.931 ns/op
Iteration   8: 152.879 ns/op
Iteration   9: 152.778 ns/op
Iteration  10: 152.853 ns/op
Iteration  11: 152.401 ns/op
Iteration  12: 152.500 ns/op
Iteration  13: 152.488 ns/op
Iteration  14: 152.519 ns/op
Iteration  15: 152.591 ns/op
Iteration  16: 152.664 ns/op
Iteration  17: 152.547 ns/op
Iteration  18: 153.460 ns/op
Iteration  19: 153.365 ns/op
Iteration  20: 152.646 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 270.967 ns/op
# Warmup Iteration   2: 220.655 ns/op
# Warmup Iteration   3: 193.786 ns/op
# Warmup Iteration   4: 194.377 ns/op
# Warmup Iteration   5: 195.173 ns/op
Iteration   1: 191.936 ns/op
Iteration   2: 196.888 ns/op
Iteration   3: 197.676 ns/op
Iteration   4: 193.008 ns/op
Iteration   5: 192.825 ns/op
Iteration   6: 192.016 ns/op
Iteration   7: 192.933 ns/op
Iteration   8: 192.813 ns/op
Iteration   9: 192.888 ns/op
Iteration  10: 192.887 ns/op
Iteration  11: 191.660 ns/op
Iteration  12: 192.798 ns/op
Iteration  13: 193.322 ns/op
Iteration  14: 195.975 ns/op
Iteration  15: 192.550 ns/op
Iteration  16: 192.499 ns/op
Iteration  17: 191.832 ns/op
Iteration  18: 192.640 ns/op
Iteration  19: 192.504 ns/op
Iteration  20: 192.562 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 269.146 ns/op
# Warmup Iteration   2: 219.975 ns/op
# Warmup Iteration   3: 194.274 ns/op
# Warmup Iteration   4: 194.787 ns/op
# Warmup Iteration   5: 195.728 ns/op
Iteration   1: 192.428 ns/op
Iteration   2: 196.596 ns/op
Iteration   3: 197.820 ns/op
Iteration   4: 193.322 ns/op
Iteration   5: 193.388 ns/op
Iteration   6: 192.338 ns/op
Iteration   7: 193.264 ns/op
Iteration   8: 193.315 ns/op
Iteration   9: 193.366 ns/op
Iteration  10: 193.666 ns/op
Iteration  11: 192.499 ns/op
Iteration  12: 194.333 ns/op
Iteration  13: 193.333 ns/op
Iteration  14: 194.015 ns/op
Iteration  15: 193.171 ns/op
Iteration  16: 192.424 ns/op
Iteration  17: 193.240 ns/op
Iteration  18: 193.070 ns/op
Iteration  19: 193.362 ns/op
Iteration  20: 193.169 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 257.849 ns/op
# Warmup Iteration   2: 203.137 ns/op
# Warmup Iteration   3: 181.610 ns/op
# Warmup Iteration   4: 182.269 ns/op
# Warmup Iteration   5: 183.010 ns/op
Iteration   1: 183.878 ns/op
Iteration   2: 186.856 ns/op
Iteration   3: 180.493 ns/op
Iteration   4: 180.880 ns/op
Iteration   5: 180.772 ns/op
Iteration   6: 180.660 ns/op
Iteration   7: 180.754 ns/op
Iteration   8: 180.859 ns/op
Iteration   9: 180.917 ns/op
Iteration  10: 179.914 ns/op
Iteration  11: 180.881 ns/op
Iteration  12: 181.059 ns/op
Iteration  13: 183.548 ns/op
Iteration  14: 180.521 ns/op
Iteration  15: 180.803 ns/op
Iteration  16: 180.910 ns/op
Iteration  17: 179.895 ns/op
Iteration  18: 180.857 ns/op
Iteration  19: 180.425 ns/op
Iteration  20: 180.615 ns/op


Result "benchmark.StringContains.regexMatches":
  178.449 ±(99.9%) 5.191 ns/op [Average]
  (min, avg, max) = (152.401, 178.449, 197.820), stdev = 15.307
  CI (99.9%): [173.257, 183.640] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :S=.1Nv}dc)yZ^4l[ckT54http'Jo )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 12.052 ns/op
# Warmup Iteration   2: 12.571 ns/op
# Warmup Iteration   3: 12.360 ns/op
# Warmup Iteration   4: 12.380 ns/op
# Warmup Iteration   5: 12.379 ns/op
Iteration   1: 12.335 ns/op
Iteration   2: 12.409 ns/op
Iteration   3: 12.355 ns/op
Iteration   4: 12.358 ns/op
Iteration   5: 12.360 ns/op
Iteration   6: 12.391 ns/op
Iteration   7: 12.375 ns/op
Iteration   8: 12.380 ns/op
Iteration   9: 12.407 ns/op
Iteration  10: 12.381 ns/op
Iteration  11: 12.438 ns/op
Iteration  12: 12.901 ns/op
Iteration  13: 12.905 ns/op
Iteration  14: 12.904 ns/op
Iteration  15: 12.910 ns/op
Iteration  16: 12.901 ns/op
Iteration  17: 12.900 ns/op
Iteration  18: 12.893 ns/op
Iteration  19: 12.911 ns/op
Iteration  20: 12.907 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 12.046 ns/op
# Warmup Iteration   2: 12.560 ns/op
# Warmup Iteration   3: 12.298 ns/op
# Warmup Iteration   4: 12.278 ns/op
# Warmup Iteration   5: 12.317 ns/op
Iteration   1: 12.261 ns/op
Iteration   2: 12.273 ns/op
Iteration   3: 12.267 ns/op
Iteration   4: 12.292 ns/op
Iteration   5: 12.287 ns/op
Iteration   6: 12.300 ns/op
Iteration   7: 12.295 ns/op
Iteration   8: 12.294 ns/op
Iteration   9: 12.308 ns/op
Iteration  10: 12.287 ns/op
Iteration  11: 12.305 ns/op
Iteration  12: 12.863 ns/op
Iteration  13: 12.865 ns/op
Iteration  14: 12.857 ns/op
Iteration  15: 12.861 ns/op
Iteration  16: 12.872 ns/op
Iteration  17: 12.860 ns/op
Iteration  18: 12.862 ns/op
Iteration  19: 12.856 ns/op
Iteration  20: 12.867 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.287 ns/op
# Warmup Iteration   2: 12.517 ns/op
# Warmup Iteration   3: 12.154 ns/op
# Warmup Iteration   4: 12.141 ns/op
# Warmup Iteration   5: 12.142 ns/op
Iteration   1: 12.117 ns/op
Iteration   2: 12.124 ns/op
Iteration   3: 12.128 ns/op
Iteration   4: 12.131 ns/op
Iteration   5: 12.151 ns/op
Iteration   6: 12.133 ns/op
Iteration   7: 12.141 ns/op
Iteration   8: 12.149 ns/op
Iteration   9: 12.138 ns/op
Iteration  10: 12.119 ns/op
Iteration  11: 12.131 ns/op
Iteration  12: 12.121 ns/op
Iteration  13: 12.123 ns/op
Iteration  14: 12.118 ns/op
Iteration  15: 12.122 ns/op
Iteration  16: 12.131 ns/op
Iteration  17: 12.140 ns/op
Iteration  18: 12.111 ns/op
Iteration  19: 12.104 ns/op
Iteration  20: 12.136 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.278 ns/op
# Warmup Iteration   2: 12.564 ns/op
# Warmup Iteration   3: 12.263 ns/op
# Warmup Iteration   4: 12.269 ns/op
# Warmup Iteration   5: 12.266 ns/op
Iteration   1: 12.262 ns/op
Iteration   2: 12.266 ns/op
Iteration   3: 12.270 ns/op
Iteration   4: 12.271 ns/op
Iteration   5: 12.264 ns/op
Iteration   6: 12.264 ns/op
Iteration   7: 12.269 ns/op
Iteration   8: 12.264 ns/op
Iteration   9: 12.266 ns/op
Iteration  10: 12.253 ns/op
Iteration  11: 12.267 ns/op
Iteration  12: 12.264 ns/op
Iteration  13: 12.272 ns/op
Iteration  14: 12.267 ns/op
Iteration  15: 12.272 ns/op
Iteration  16: 12.274 ns/op
Iteration  17: 12.274 ns/op
Iteration  18: 12.277 ns/op
Iteration  19: 12.269 ns/op
Iteration  20: 12.267 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.280 ns/op
# Warmup Iteration   2: 12.741 ns/op
# Warmup Iteration   3: 12.160 ns/op
# Warmup Iteration   4: 12.158 ns/op
# Warmup Iteration   5: 12.143 ns/op
Iteration   1: 12.133 ns/op
Iteration   2: 12.163 ns/op
Iteration   3: 12.151 ns/op
Iteration   4: 12.131 ns/op
Iteration   5: 12.142 ns/op
Iteration   6: 12.144 ns/op
Iteration   7: 12.141 ns/op
Iteration   8: 12.129 ns/op
Iteration   9: 12.124 ns/op
Iteration  10: 12.135 ns/op
Iteration  11: 12.126 ns/op
Iteration  12: 12.144 ns/op
Iteration  13: 12.126 ns/op
Iteration  14: 12.141 ns/op
Iteration  15: 12.126 ns/op
Iteration  16: 12.136 ns/op
Iteration  17: 12.130 ns/op
Iteration  18: 12.134 ns/op
Iteration  19: 12.126 ns/op
Iteration  20: 12.133 ns/op


Result "benchmark.StringContains.stringContains":
  12.339 ±(99.9%) 0.092 ns/op [Average]
  (min, avg, max) = (12.104, 12.339, 12.911), stdev = 0.270
  CI (99.9%): [12.247, 12.430] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :S=.1Nv}dc)yZ^4l[ckT54http'Jo   avgt  100  178.449 ± 5.191  ns/op
StringContains.stringContains     http  :S=.1Nv}dc)yZ^4l[ckT54http'Jo   avgt  100   12.339 ± 0.092  ns/op

Benchmark result is saved to http_32_0.75_14.csv
