# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ) T@)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 172.661 ns/op
# Warmup Iteration   2: 94.108 ns/op
# Warmup Iteration   3: 93.260 ns/op
# Warmup Iteration   4: 93.714 ns/op
# Warmup Iteration   5: 89.755 ns/op
Iteration   1: 89.384 ns/op
Iteration   2: 89.799 ns/op
Iteration   3: 89.760 ns/op
Iteration   4: 89.920 ns/op
Iteration   5: 89.225 ns/op
Iteration   6: 89.456 ns/op
Iteration   7: 89.331 ns/op
Iteration   8: 89.128 ns/op
Iteration   9: 89.314 ns/op
Iteration  10: 89.805 ns/op
Iteration  11: 89.439 ns/op
Iteration  12: 89.239 ns/op
Iteration  13: 89.425 ns/op
Iteration  14: 89.695 ns/op
Iteration  15: 89.810 ns/op
Iteration  16: 89.303 ns/op
Iteration  17: 89.382 ns/op
Iteration  18: 89.520 ns/op
Iteration  19: 89.508 ns/op
Iteration  20: 89.246 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 167.288 ns/op
# Warmup Iteration   2: 91.192 ns/op
# Warmup Iteration   3: 90.477 ns/op
# Warmup Iteration   4: 92.312 ns/op
# Warmup Iteration   5: 88.763 ns/op
Iteration   1: 88.676 ns/op
Iteration   2: 88.233 ns/op
Iteration   3: 88.613 ns/op
Iteration   4: 89.108 ns/op
Iteration   5: 88.070 ns/op
Iteration   6: 87.990 ns/op
Iteration   7: 88.218 ns/op
Iteration   8: 88.105 ns/op
Iteration   9: 88.137 ns/op
Iteration  10: 87.934 ns/op
Iteration  11: 88.254 ns/op
Iteration  12: 88.263 ns/op
Iteration  13: 88.239 ns/op
Iteration  14: 87.957 ns/op
Iteration  15: 88.287 ns/op
Iteration  16: 88.235 ns/op
Iteration  17: 88.244 ns/op
Iteration  18: 88.196 ns/op
Iteration  19: 88.041 ns/op
Iteration  20: 88.409 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 167.475 ns/op
# Warmup Iteration   2: 90.617 ns/op
# Warmup Iteration   3: 89.820 ns/op
# Warmup Iteration   4: 91.745 ns/op
# Warmup Iteration   5: 88.008 ns/op
Iteration   1: 87.971 ns/op
Iteration   2: 87.749 ns/op
Iteration   3: 88.066 ns/op
Iteration   4: 87.951 ns/op
Iteration   5: 87.631 ns/op
Iteration   6: 87.335 ns/op
Iteration   7: 87.479 ns/op
Iteration   8: 87.513 ns/op
Iteration   9: 87.511 ns/op
Iteration  10: 87.631 ns/op
Iteration  11: 87.489 ns/op
Iteration  12: 87.743 ns/op
Iteration  13: 87.975 ns/op
Iteration  14: 87.734 ns/op
Iteration  15: 87.413 ns/op
Iteration  16: 87.942 ns/op
Iteration  17: 87.935 ns/op
Iteration  18: 87.956 ns/op
Iteration  19: 87.639 ns/op
Iteration  20: 87.384 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 167.279 ns/op
# Warmup Iteration   2: 91.524 ns/op
# Warmup Iteration   3: 90.713 ns/op
# Warmup Iteration   4: 92.588 ns/op
# Warmup Iteration   5: 88.823 ns/op
Iteration   1: 88.348 ns/op
Iteration   2: 88.695 ns/op
Iteration   3: 88.732 ns/op
Iteration   4: 88.729 ns/op
Iteration   5: 88.283 ns/op
Iteration   6: 87.971 ns/op
Iteration   7: 88.190 ns/op
Iteration   8: 88.295 ns/op
Iteration   9: 88.336 ns/op
Iteration  10: 88.108 ns/op
Iteration  11: 88.378 ns/op
Iteration  12: 88.352 ns/op
Iteration  13: 88.865 ns/op
Iteration  14: 88.105 ns/op
Iteration  15: 88.376 ns/op
Iteration  16: 88.393 ns/op
Iteration  17: 88.613 ns/op
Iteration  18: 88.261 ns/op
Iteration  19: 88.426 ns/op
Iteration  20: 88.345 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 166.764 ns/op
# Warmup Iteration   2: 91.257 ns/op
# Warmup Iteration   3: 90.504 ns/op
# Warmup Iteration   4: 93.188 ns/op
# Warmup Iteration   5: 89.426 ns/op
Iteration   1: 88.306 ns/op
Iteration   2: 88.940 ns/op
Iteration   3: 88.836 ns/op
Iteration   4: 88.795 ns/op
Iteration   5: 88.252 ns/op
Iteration   6: 88.045 ns/op
Iteration   7: 88.136 ns/op
Iteration   8: 88.170 ns/op
Iteration   9: 88.261 ns/op
Iteration  10: 88.166 ns/op
Iteration  11: 88.511 ns/op
Iteration  12: 88.703 ns/op
Iteration  13: 88.446 ns/op
Iteration  14: 88.324 ns/op
Iteration  15: 88.322 ns/op
Iteration  16: 88.819 ns/op
Iteration  17: 88.805 ns/op
Iteration  18: 88.365 ns/op
Iteration  19: 88.772 ns/op
Iteration  20: 88.480 ns/op


Result "benchmark.StringContains.regexMatches":
  88.462 ±(99.9%) 0.214 ns/op [Average]
  (min, avg, max) = (87.335, 88.462, 89.920), stdev = 0.631
  CI (99.9%): [88.248, 88.676] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ) T@)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.446 ns/op
# Warmup Iteration   2: 9.056 ns/op
# Warmup Iteration   3: 8.975 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.971 ns/op
Iteration   4: 8.969 ns/op
Iteration   5: 8.969 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.977 ns/op
Iteration   8: 8.970 ns/op
Iteration   9: 8.969 ns/op
Iteration  10: 8.970 ns/op
Iteration  11: 8.973 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.972 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.970 ns/op
Iteration  18: 8.969 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.972 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.422 ns/op
# Warmup Iteration   2: 9.056 ns/op
# Warmup Iteration   3: 8.975 ns/op
# Warmup Iteration   4: 8.968 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.969 ns/op
Iteration   3: 8.972 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.981 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.976 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.968 ns/op
Iteration  18: 8.971 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.967 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.440 ns/op
# Warmup Iteration   2: 9.052 ns/op
# Warmup Iteration   3: 8.971 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.969 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.968 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.969 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.970 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.972 ns/op
Iteration  20: 8.971 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.440 ns/op
# Warmup Iteration   2: 9.073 ns/op
# Warmup Iteration   3: 8.963 ns/op
# Warmup Iteration   4: 8.961 ns/op
# Warmup Iteration   5: 8.961 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.961 ns/op
Iteration   3: 8.960 ns/op
Iteration   4: 8.960 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.963 ns/op
Iteration   7: 8.962 ns/op
Iteration   8: 8.975 ns/op
Iteration   9: 8.961 ns/op
Iteration  10: 8.964 ns/op
Iteration  11: 8.964 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.961 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.961 ns/op
Iteration  17: 8.961 ns/op
Iteration  18: 8.968 ns/op
Iteration  19: 8.961 ns/op
Iteration  20: 8.964 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.429 ns/op
# Warmup Iteration   2: 9.082 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.965 ns/op


Result "benchmark.StringContains.stringContains":
  8.967 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (8.960, 8.967, 8.981), stdev = 0.004
  CI (99.9%): [8.966, 8.968] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   ) T@  avgt  100  88.462 ± 0.214  ns/op
StringContains.stringContains     http   ) T@  avgt  100   8.967 ± 0.001  ns/op

Benchmark result is saved to http_4_1_14.csv
