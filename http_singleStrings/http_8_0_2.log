# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http5^'`)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 248.741 ns/op
# Warmup Iteration   2: 191.355 ns/op
# Warmup Iteration   3: 172.260 ns/op
# Warmup Iteration   4: 174.200 ns/op
# Warmup Iteration   5: 174.572 ns/op
Iteration   1: 174.591 ns/op
Iteration   2: 175.419 ns/op
Iteration   3: 171.494 ns/op
Iteration   4: 171.348 ns/op
Iteration   5: 171.510 ns/op
Iteration   6: 170.597 ns/op
Iteration   7: 171.462 ns/op
Iteration   8: 171.475 ns/op
Iteration   9: 172.664 ns/op
Iteration  10: 171.744 ns/op
Iteration  11: 171.363 ns/op
Iteration  12: 171.649 ns/op
Iteration  13: 172.497 ns/op
Iteration  14: 171.512 ns/op
Iteration  15: 171.324 ns/op
Iteration  16: 171.479 ns/op
Iteration  17: 170.902 ns/op
Iteration  18: 171.438 ns/op
Iteration  19: 171.607 ns/op
Iteration  20: 171.456 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 262.792 ns/op
# Warmup Iteration   2: 201.874 ns/op
# Warmup Iteration   3: 180.501 ns/op
# Warmup Iteration   4: 181.086 ns/op
# Warmup Iteration   5: 181.734 ns/op
Iteration   1: 182.927 ns/op
Iteration   2: 184.100 ns/op
Iteration   3: 178.729 ns/op
Iteration   4: 179.682 ns/op
Iteration   5: 179.688 ns/op
Iteration   6: 179.656 ns/op
Iteration   7: 179.534 ns/op
Iteration   8: 179.510 ns/op
Iteration   9: 179.521 ns/op
Iteration  10: 179.929 ns/op
Iteration  11: 178.758 ns/op
Iteration  12: 180.312 ns/op
Iteration  13: 179.899 ns/op
Iteration  14: 180.553 ns/op
Iteration  15: 179.103 ns/op
Iteration  16: 179.232 ns/op
Iteration  17: 179.176 ns/op
Iteration  18: 178.609 ns/op
Iteration  19: 179.296 ns/op
Iteration  20: 179.313 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 246.650 ns/op
# Warmup Iteration   2: 190.523 ns/op
# Warmup Iteration   3: 173.566 ns/op
# Warmup Iteration   4: 174.003 ns/op
# Warmup Iteration   5: 174.824 ns/op
Iteration   1: 175.846 ns/op
Iteration   2: 177.122 ns/op
Iteration   3: 172.922 ns/op
Iteration   4: 172.454 ns/op
Iteration   5: 172.729 ns/op
Iteration   6: 171.822 ns/op
Iteration   7: 172.622 ns/op
Iteration   8: 172.835 ns/op
Iteration   9: 172.637 ns/op
Iteration  10: 172.783 ns/op
Iteration  11: 173.574 ns/op
Iteration  12: 172.932 ns/op
Iteration  13: 173.790 ns/op
Iteration  14: 173.403 ns/op
Iteration  15: 172.819 ns/op
Iteration  16: 171.998 ns/op
Iteration  17: 172.537 ns/op
Iteration  18: 173.559 ns/op
Iteration  19: 173.460 ns/op
Iteration  20: 172.878 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 228.020 ns/op
# Warmup Iteration   2: 161.223 ns/op
# Warmup Iteration   3: 139.903 ns/op
# Warmup Iteration   4: 139.574 ns/op
# Warmup Iteration   5: 140.273 ns/op
Iteration   1: 141.268 ns/op
Iteration   2: 137.724 ns/op
Iteration   3: 137.867 ns/op
Iteration   4: 137.761 ns/op
Iteration   5: 138.513 ns/op
Iteration   6: 137.887 ns/op
Iteration   7: 137.560 ns/op
Iteration   8: 137.577 ns/op
Iteration   9: 137.814 ns/op
Iteration  10: 137.319 ns/op
Iteration  11: 137.380 ns/op
Iteration  12: 137.255 ns/op
Iteration  13: 137.451 ns/op
Iteration  14: 137.595 ns/op
Iteration  15: 137.574 ns/op
Iteration  16: 137.790 ns/op
Iteration  17: 137.746 ns/op
Iteration  18: 137.682 ns/op
Iteration  19: 137.682 ns/op
Iteration  20: 138.197 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 244.038 ns/op
# Warmup Iteration   2: 188.959 ns/op
# Warmup Iteration   3: 172.575 ns/op
# Warmup Iteration   4: 173.200 ns/op
# Warmup Iteration   5: 173.954 ns/op
Iteration   1: 175.000 ns/op
Iteration   2: 176.029 ns/op
Iteration   3: 171.893 ns/op
Iteration   4: 171.944 ns/op
Iteration   5: 171.878 ns/op
Iteration   6: 171.949 ns/op
Iteration   7: 171.010 ns/op
Iteration   8: 172.320 ns/op
Iteration   9: 171.945 ns/op
Iteration  10: 172.570 ns/op
Iteration  11: 173.223 ns/op
Iteration  12: 172.273 ns/op
Iteration  13: 172.301 ns/op
Iteration  14: 171.372 ns/op
Iteration  15: 171.339 ns/op
Iteration  16: 171.379 ns/op
Iteration  17: 170.979 ns/op
Iteration  18: 171.395 ns/op
Iteration  19: 171.284 ns/op
Iteration  20: 171.593 ns/op


Result "benchmark.StringContains.regexMatches":
  167.011 ±(99.9%) 5.078 ns/op [Average]
  (min, avg, max) = (137.255, 167.011, 184.100), stdev = 14.974
  CI (99.9%): [161.932, 172.089] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http5^'`)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.119 ns/op
# Warmup Iteration   2: 10.458 ns/op
# Warmup Iteration   3: 9.893 ns/op
# Warmup Iteration   4: 9.894 ns/op
# Warmup Iteration   5: 9.899 ns/op
Iteration   1: 9.892 ns/op
Iteration   2: 9.898 ns/op
Iteration   3: 9.900 ns/op
Iteration   4: 9.911 ns/op
Iteration   5: 9.913 ns/op
Iteration   6: 9.906 ns/op
Iteration   7: 9.902 ns/op
Iteration   8: 9.903 ns/op
Iteration   9: 9.909 ns/op
Iteration  10: 9.905 ns/op
Iteration  11: 9.914 ns/op
Iteration  12: 9.899 ns/op
Iteration  13: 9.899 ns/op
Iteration  14: 9.895 ns/op
Iteration  15: 9.889 ns/op
Iteration  16: 9.894 ns/op
Iteration  17: 9.898 ns/op
Iteration  18: 9.900 ns/op
Iteration  19: 9.896 ns/op
Iteration  20: 9.895 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.097 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.885 ns/op
# Warmup Iteration   4: 9.896 ns/op
# Warmup Iteration   5: 9.899 ns/op
Iteration   1: 9.869 ns/op
Iteration   2: 9.883 ns/op
Iteration   3: 9.881 ns/op
Iteration   4: 9.885 ns/op
Iteration   5: 9.886 ns/op
Iteration   6: 9.896 ns/op
Iteration   7: 9.896 ns/op
Iteration   8: 9.894 ns/op
Iteration   9: 9.887 ns/op
Iteration  10: 9.876 ns/op
Iteration  11: 9.871 ns/op
Iteration  12: 9.885 ns/op
Iteration  13: 9.898 ns/op
Iteration  14: 9.924 ns/op
Iteration  15: 9.876 ns/op
Iteration  16: 9.891 ns/op
Iteration  17: 9.874 ns/op
Iteration  18: 9.895 ns/op
Iteration  19: 9.883 ns/op
Iteration  20: 9.878 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.064 ns/op
# Warmup Iteration   2: 10.452 ns/op
# Warmup Iteration   3: 10.036 ns/op
# Warmup Iteration   4: 10.041 ns/op
# Warmup Iteration   5: 10.031 ns/op
Iteration   1: 10.033 ns/op
Iteration   2: 10.041 ns/op
Iteration   3: 10.036 ns/op
Iteration   4: 10.037 ns/op
Iteration   5: 10.039 ns/op
Iteration   6: 10.039 ns/op
Iteration   7: 10.041 ns/op
Iteration   8: 10.037 ns/op
Iteration   9: 10.032 ns/op
Iteration  10: 10.029 ns/op
Iteration  11: 10.041 ns/op
Iteration  12: 10.042 ns/op
Iteration  13: 10.043 ns/op
Iteration  14: 10.038 ns/op
Iteration  15: 10.039 ns/op
Iteration  16: 10.036 ns/op
Iteration  17: 10.039 ns/op
Iteration  18: 10.035 ns/op
Iteration  19: 10.037 ns/op
Iteration  20: 10.034 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.558 ns/op
# Warmup Iteration   2: 10.457 ns/op
# Warmup Iteration   3: 9.926 ns/op
# Warmup Iteration   4: 9.896 ns/op
# Warmup Iteration   5: 9.907 ns/op
Iteration   1: 9.905 ns/op
Iteration   2: 9.906 ns/op
Iteration   3: 9.931 ns/op
Iteration   4: 9.916 ns/op
Iteration   5: 9.899 ns/op
Iteration   6: 9.911 ns/op
Iteration   7: 9.916 ns/op
Iteration   8: 9.921 ns/op
Iteration   9: 9.910 ns/op
Iteration  10: 9.911 ns/op
Iteration  11: 9.903 ns/op
Iteration  12: 9.901 ns/op
Iteration  13: 9.896 ns/op
Iteration  14: 9.901 ns/op
Iteration  15: 9.924 ns/op
Iteration  16: 9.902 ns/op
Iteration  17: 9.917 ns/op
Iteration  18: 9.900 ns/op
Iteration  19: 9.895 ns/op
Iteration  20: 9.907 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.059 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 10.012 ns/op
# Warmup Iteration   4: 9.985 ns/op
# Warmup Iteration   5: 10.027 ns/op
Iteration   1: 10.006 ns/op
Iteration   2: 10.001 ns/op
Iteration   3: 10.015 ns/op
Iteration   4: 9.995 ns/op
Iteration   5: 9.991 ns/op
Iteration   6: 10.020 ns/op
Iteration   7: 10.018 ns/op
Iteration   8: 10.007 ns/op
Iteration   9: 9.995 ns/op
Iteration  10: 9.985 ns/op
Iteration  11: 10.033 ns/op
Iteration  12: 10.007 ns/op
Iteration  13: 10.012 ns/op
Iteration  14: 10.002 ns/op
Iteration  15: 10.004 ns/op
Iteration  16: 10.015 ns/op
Iteration  17: 9.996 ns/op
Iteration  18: 10.011 ns/op
Iteration  19: 10.020 ns/op
Iteration  20: 10.024 ns/op


Result "benchmark.StringContains.stringContains":
  9.948 ±(99.9%) 0.021 ns/op [Average]
  (min, avg, max) = (9.869, 9.948, 10.043), stdev = 0.063
  CI (99.9%): [9.927, 9.970] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http5^'`  avgt  100  167.011 ± 5.078  ns/op
StringContains.stringContains     http  http5^'`  avgt  100    9.948 ± 0.021  ns/op

Benchmark result is saved to http_8_0_2.csv
