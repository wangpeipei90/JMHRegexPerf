# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http*umd*8JFK!<2
s`h"Bvo>V	r'5ePl+hfci:Kv-L+
7p mxZ-NN`'X6FLV:)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 816.895 ns/op
# Warmup Iteration   2: 855.763 ns/op
# Warmup Iteration   3: 854.960 ns/op
# Warmup Iteration   4: 853.372 ns/op
# Warmup Iteration   5: 852.465 ns/op
Iteration   1: 788.813 ns/op
Iteration   2: 777.879 ns/op
Iteration   3: 777.937 ns/op
Iteration   4: 777.716 ns/op
Iteration   5: 784.584 ns/op
Iteration   6: 777.568 ns/op
Iteration   7: 777.647 ns/op
Iteration   8: 777.739 ns/op
Iteration   9: 787.162 ns/op
Iteration  10: 777.630 ns/op
Iteration  11: 777.575 ns/op
Iteration  12: 777.802 ns/op
Iteration  13: 777.636 ns/op
Iteration  14: 791.346 ns/op
Iteration  15: 777.790 ns/op
Iteration  16: 777.649 ns/op
Iteration  17: 777.934 ns/op
Iteration  18: 777.942 ns/op
Iteration  19: 795.500 ns/op
Iteration  20: 777.741 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 802.577 ns/op
# Warmup Iteration   2: 847.558 ns/op
# Warmup Iteration   3: 852.531 ns/op
# Warmup Iteration   4: 852.750 ns/op
# Warmup Iteration   5: 852.751 ns/op
Iteration   1: 785.015 ns/op
Iteration   2: 778.451 ns/op
Iteration   3: 778.392 ns/op
Iteration   4: 778.677 ns/op
Iteration   5: 784.998 ns/op
Iteration   6: 779.937 ns/op
Iteration   7: 778.882 ns/op
Iteration   8: 778.915 ns/op
Iteration   9: 788.834 ns/op
Iteration  10: 778.245 ns/op
Iteration  11: 778.239 ns/op
Iteration  12: 778.586 ns/op
Iteration  13: 778.520 ns/op
Iteration  14: 791.261 ns/op
Iteration  15: 778.113 ns/op
Iteration  16: 778.292 ns/op
Iteration  17: 778.071 ns/op
Iteration  18: 787.229 ns/op
Iteration  19: 785.795 ns/op
Iteration  20: 778.157 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 827.002 ns/op
# Warmup Iteration   2: 834.236 ns/op
# Warmup Iteration   3: 836.850 ns/op
# Warmup Iteration   4: 836.909 ns/op
# Warmup Iteration   5: 836.745 ns/op
Iteration   1: 769.535 ns/op
Iteration   2: 763.523 ns/op
Iteration   3: 763.734 ns/op
Iteration   4: 764.403 ns/op
Iteration   5: 770.282 ns/op
Iteration   6: 763.528 ns/op
Iteration   7: 763.732 ns/op
Iteration   8: 763.732 ns/op
Iteration   9: 773.179 ns/op
Iteration  10: 764.973 ns/op
Iteration  11: 764.763 ns/op
Iteration  12: 763.300 ns/op
Iteration  13: 763.544 ns/op
Iteration  14: 775.700 ns/op
Iteration  15: 763.727 ns/op
Iteration  16: 763.429 ns/op
Iteration  17: 763.401 ns/op
Iteration  18: 779.351 ns/op
Iteration  19: 763.202 ns/op
Iteration  20: 763.871 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 712.075 ns/op
# Warmup Iteration   2: 675.216 ns/op
# Warmup Iteration   3: 659.383 ns/op
# Warmup Iteration   4: 659.318 ns/op
# Warmup Iteration   5: 592.207 ns/op
Iteration   1: 583.952 ns/op
Iteration   2: 583.879 ns/op
Iteration   3: 589.463 ns/op
Iteration   4: 584.040 ns/op
Iteration   5: 583.834 ns/op
Iteration   6: 591.064 ns/op
Iteration   7: 583.848 ns/op
Iteration   8: 583.941 ns/op
Iteration   9: 583.658 ns/op
Iteration  10: 593.714 ns/op
Iteration  11: 583.626 ns/op
Iteration  12: 583.646 ns/op
Iteration  13: 596.417 ns/op
Iteration  14: 583.559 ns/op
Iteration  15: 584.111 ns/op
Iteration  16: 584.359 ns/op
Iteration  17: 601.612 ns/op
Iteration  18: 584.466 ns/op
Iteration  19: 583.831 ns/op
Iteration  20: 583.747 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 824.809 ns/op
# Warmup Iteration   2: 857.081 ns/op
# Warmup Iteration   3: 839.307 ns/op
# Warmup Iteration   4: 839.375 ns/op
# Warmup Iteration   5: 839.665 ns/op
Iteration   1: 773.662 ns/op
Iteration   2: 764.652 ns/op
Iteration   3: 764.634 ns/op
Iteration   4: 765.064 ns/op
Iteration   5: 771.605 ns/op
Iteration   6: 763.488 ns/op
Iteration   7: 763.255 ns/op
Iteration   8: 763.670 ns/op
Iteration   9: 774.014 ns/op
Iteration  10: 765.813 ns/op
Iteration  11: 766.113 ns/op
Iteration  12: 763.623 ns/op
Iteration  13: 764.213 ns/op
Iteration  14: 777.154 ns/op
Iteration  15: 763.975 ns/op
Iteration  16: 764.196 ns/op
Iteration  17: 764.324 ns/op
Iteration  18: 781.002 ns/op
Iteration  19: 764.158 ns/op
Iteration  20: 764.577 ns/op


Result "benchmark.StringContains.regexMatches":
  736.351 ±(99.9%) 25.679 ns/op [Average]
  (min, avg, max) = (583.559, 736.351, 795.500), stdev = 75.715
  CI (99.9%): [710.672, 762.030] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http*umd*8JFK!<2
s`h"Bvo>V	r'5ePl+hfci:Kv-L+
7p mxZ-NN`'X6FLV:)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.220 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.817 ns/op
# Warmup Iteration   4: 9.821 ns/op
# Warmup Iteration   5: 9.819 ns/op
Iteration   1: 9.835 ns/op
Iteration   2: 9.841 ns/op
Iteration   3: 9.839 ns/op
Iteration   4: 9.828 ns/op
Iteration   5: 9.847 ns/op
Iteration   6: 9.849 ns/op
Iteration   7: 9.845 ns/op
Iteration   8: 9.830 ns/op
Iteration   9: 9.838 ns/op
Iteration  10: 9.834 ns/op
Iteration  11: 9.852 ns/op
Iteration  12: 9.857 ns/op
Iteration  13: 9.845 ns/op
Iteration  14: 9.838 ns/op
Iteration  15: 9.841 ns/op
Iteration  16: 9.840 ns/op
Iteration  17: 9.860 ns/op
Iteration  18: 9.829 ns/op
Iteration  19: 9.838 ns/op
Iteration  20: 9.837 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.476 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.792 ns/op
# Warmup Iteration   4: 9.799 ns/op
# Warmup Iteration   5: 9.800 ns/op
Iteration   1: 9.803 ns/op
Iteration   2: 9.794 ns/op
Iteration   3: 9.791 ns/op
Iteration   4: 9.802 ns/op
Iteration   5: 9.812 ns/op
Iteration   6: 9.800 ns/op
Iteration   7: 9.799 ns/op
Iteration   8: 9.793 ns/op
Iteration   9: 9.792 ns/op
Iteration  10: 9.800 ns/op
Iteration  11: 9.794 ns/op
Iteration  12: 9.806 ns/op
Iteration  13: 9.810 ns/op
Iteration  14: 9.790 ns/op
Iteration  15: 9.806 ns/op
Iteration  16: 9.793 ns/op
Iteration  17: 9.799 ns/op
Iteration  18: 9.798 ns/op
Iteration  19: 9.806 ns/op
Iteration  20: 9.807 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.484 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.820 ns/op
# Warmup Iteration   4: 9.819 ns/op
# Warmup Iteration   5: 9.832 ns/op
Iteration   1: 9.844 ns/op
Iteration   2: 9.824 ns/op
Iteration   3: 9.831 ns/op
Iteration   4: 9.828 ns/op
Iteration   5: 9.814 ns/op
Iteration   6: 9.824 ns/op
Iteration   7: 9.831 ns/op
Iteration   8: 9.820 ns/op
Iteration   9: 9.831 ns/op
Iteration  10: 9.828 ns/op
Iteration  11: 9.837 ns/op
Iteration  12: 10.551 ns/op
Iteration  13: 10.551 ns/op
Iteration  14: 10.550 ns/op
Iteration  15: 10.551 ns/op
Iteration  16: 10.552 ns/op
Iteration  17: 10.551 ns/op
Iteration  18: 10.550 ns/op
Iteration  19: 10.551 ns/op
Iteration  20: 10.551 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.524 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.868 ns/op
# Warmup Iteration   4: 9.867 ns/op
# Warmup Iteration   5: 9.876 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.855 ns/op
Iteration   3: 9.871 ns/op
Iteration   4: 9.870 ns/op
Iteration   5: 9.849 ns/op
Iteration   6: 9.842 ns/op
Iteration   7: 9.866 ns/op
Iteration   8: 9.888 ns/op
Iteration   9: 9.860 ns/op
Iteration  10: 9.865 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 10.551 ns/op
Iteration  13: 10.551 ns/op
Iteration  14: 10.551 ns/op
Iteration  15: 10.551 ns/op
Iteration  16: 10.551 ns/op
Iteration  17: 10.553 ns/op
Iteration  18: 10.552 ns/op
Iteration  19: 10.559 ns/op
Iteration  20: 10.551 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.482 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.852 ns/op
# Warmup Iteration   4: 9.868 ns/op
# Warmup Iteration   5: 9.867 ns/op
Iteration   1: 9.861 ns/op
Iteration   2: 9.876 ns/op
Iteration   3: 9.861 ns/op
Iteration   4: 9.861 ns/op
Iteration   5: 9.849 ns/op
Iteration   6: 9.836 ns/op
Iteration   7: 9.831 ns/op
Iteration   8: 9.858 ns/op
Iteration   9: 9.837 ns/op
Iteration  10: 9.853 ns/op
Iteration  11: 9.853 ns/op
Iteration  12: 10.550 ns/op
Iteration  13: 10.548 ns/op
Iteration  14: 10.549 ns/op
Iteration  15: 10.550 ns/op
Iteration  16: 10.549 ns/op
Iteration  17: 10.549 ns/op
Iteration  18: 10.549 ns/op
Iteration  19: 10.549 ns/op
Iteration  20: 10.553 ns/op


Result "benchmark.StringContains.stringContains":
  10.027 ±(99.9%) 0.109 ns/op [Average]
  (min, avg, max) = (9.790, 10.027, 10.559), stdev = 0.321
  CI (99.9%): [9.918, 10.136] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  http*umd*8JFK!<2
s`h"Bvo>V	r'5ePl+hfci:Kv-L+
7p mxZ-NN`'X6FLV:  avgt  100  736.351 ± 25.679  ns/op
StringContains.stringContains     http  http*umd*8JFK!<2
s`h"Bvo>V	r'5ePl+hfci:Kv-L+
7p mxZ-NN`'X6FLV:  avgt  100   10.027 ±  0.109  ns/op

Benchmark result is saved to http_64_0_3.csv
