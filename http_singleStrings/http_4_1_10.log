# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = M)eW)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 170.156 ns/op
# Warmup Iteration   2: 91.912 ns/op
# Warmup Iteration   3: 90.675 ns/op
# Warmup Iteration   4: 92.852 ns/op
# Warmup Iteration   5: 88.759 ns/op
Iteration   1: 88.497 ns/op
Iteration   2: 88.808 ns/op
Iteration   3: 88.822 ns/op
Iteration   4: 88.808 ns/op
Iteration   5: 88.146 ns/op
Iteration   6: 88.225 ns/op
Iteration   7: 88.257 ns/op
Iteration   8: 88.279 ns/op
Iteration   9: 88.320 ns/op
Iteration  10: 88.143 ns/op
Iteration  11: 88.441 ns/op
Iteration  12: 88.438 ns/op
Iteration  13: 88.535 ns/op
Iteration  14: 88.111 ns/op
Iteration  15: 89.210 ns/op
Iteration  16: 88.838 ns/op
Iteration  17: 88.581 ns/op
Iteration  18: 89.178 ns/op
Iteration  19: 88.412 ns/op
Iteration  20: 91.968 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 166.817 ns/op
# Warmup Iteration   2: 90.760 ns/op
# Warmup Iteration   3: 90.304 ns/op
# Warmup Iteration   4: 92.264 ns/op
# Warmup Iteration   5: 88.638 ns/op
Iteration   1: 88.598 ns/op
Iteration   2: 88.110 ns/op
Iteration   3: 88.584 ns/op
Iteration   4: 88.596 ns/op
Iteration   5: 88.108 ns/op
Iteration   6: 87.972 ns/op
Iteration   7: 88.153 ns/op
Iteration   8: 88.193 ns/op
Iteration   9: 88.147 ns/op
Iteration  10: 88.016 ns/op
Iteration  11: 88.362 ns/op
Iteration  12: 88.402 ns/op
Iteration  13: 88.191 ns/op
Iteration  14: 87.965 ns/op
Iteration  15: 88.314 ns/op
Iteration  16: 88.190 ns/op
Iteration  17: 88.258 ns/op
Iteration  18: 88.203 ns/op
Iteration  19: 87.965 ns/op
Iteration  20: 88.220 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 166.334 ns/op
# Warmup Iteration   2: 87.753 ns/op
# Warmup Iteration   3: 85.213 ns/op
# Warmup Iteration   4: 88.107 ns/op
# Warmup Iteration   5: 84.602 ns/op
Iteration   1: 84.647 ns/op
Iteration   2: 84.666 ns/op
Iteration   3: 84.626 ns/op
Iteration   4: 84.172 ns/op
Iteration   5: 84.242 ns/op
Iteration   6: 84.044 ns/op
Iteration   7: 84.058 ns/op
Iteration   8: 84.177 ns/op
Iteration   9: 84.143 ns/op
Iteration  10: 84.355 ns/op
Iteration  11: 84.053 ns/op
Iteration  12: 84.499 ns/op
Iteration  13: 84.561 ns/op
Iteration  14: 84.574 ns/op
Iteration  15: 84.534 ns/op
Iteration  16: 84.606 ns/op
Iteration  17: 84.001 ns/op
Iteration  18: 84.212 ns/op
Iteration  19: 84.290 ns/op
Iteration  20: 84.208 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 170.826 ns/op
# Warmup Iteration   2: 97.884 ns/op
# Warmup Iteration   3: 96.973 ns/op
# Warmup Iteration   4: 98.111 ns/op
# Warmup Iteration   5: 93.759 ns/op
Iteration   1: 93.842 ns/op
Iteration   2: 93.868 ns/op
Iteration   3: 93.438 ns/op
Iteration   4: 93.850 ns/op
Iteration   5: 94.324 ns/op
Iteration   6: 93.146 ns/op
Iteration   7: 94.382 ns/op
Iteration   8: 93.596 ns/op
Iteration   9: 93.477 ns/op
Iteration  10: 93.556 ns/op
Iteration  11: 93.644 ns/op
Iteration  12: 93.397 ns/op
Iteration  13: 93.881 ns/op
Iteration  14: 94.040 ns/op
Iteration  15: 93.455 ns/op
Iteration  16: 93.617 ns/op
Iteration  17: 93.710 ns/op
Iteration  18: 93.317 ns/op
Iteration  19: 93.644 ns/op
Iteration  20: 93.608 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 168.004 ns/op
# Warmup Iteration   2: 92.888 ns/op
# Warmup Iteration   3: 90.383 ns/op
# Warmup Iteration   4: 92.355 ns/op
# Warmup Iteration   5: 88.694 ns/op
Iteration   1: 88.233 ns/op
Iteration   2: 88.711 ns/op
Iteration   3: 88.524 ns/op
Iteration   4: 89.063 ns/op
Iteration   5: 88.764 ns/op
Iteration   6: 87.917 ns/op
Iteration   7: 88.146 ns/op
Iteration   8: 89.005 ns/op
Iteration   9: 88.366 ns/op
Iteration  10: 88.042 ns/op
Iteration  11: 90.913 ns/op
Iteration  12: 90.162 ns/op
Iteration  13: 90.059 ns/op
Iteration  14: 87.879 ns/op
Iteration  15: 88.471 ns/op
Iteration  16: 88.046 ns/op
Iteration  17: 88.160 ns/op
Iteration  18: 87.875 ns/op
Iteration  19: 88.222 ns/op
Iteration  20: 89.068 ns/op


Result "benchmark.StringContains.regexMatches":
  88.727 ±(99.9%) 1.030 ns/op [Average]
  (min, avg, max) = (84.001, 88.727, 94.382), stdev = 3.038
  CI (99.9%): [87.696, 89.757] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = M)eW)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.443 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.962 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.963 ns/op
Iteration  13: 8.962 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.963 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.963 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.458 ns/op
# Warmup Iteration   2: 9.070 ns/op
# Warmup Iteration   3: 8.971 ns/op
# Warmup Iteration   4: 8.970 ns/op
# Warmup Iteration   5: 8.974 ns/op
Iteration   1: 8.971 ns/op
Iteration   2: 8.970 ns/op
Iteration   3: 8.968 ns/op
Iteration   4: 8.971 ns/op
Iteration   5: 8.978 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.971 ns/op
Iteration   8: 8.986 ns/op
Iteration   9: 8.972 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.970 ns/op
Iteration  12: 8.971 ns/op
Iteration  13: 8.968 ns/op
Iteration  14: 8.972 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.969 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.970 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.992 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.440 ns/op
# Warmup Iteration   2: 9.052 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.963 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.964 ns/op
Iteration   3: 8.962 ns/op
Iteration   4: 8.962 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.962 ns/op
Iteration   9: 8.963 ns/op
Iteration  10: 8.964 ns/op
Iteration  11: 8.964 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.964 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.448 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.969 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.968 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.968 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.969 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.970 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.445 ns/op
# Warmup Iteration   2: 9.051 ns/op
# Warmup Iteration   3: 8.961 ns/op
# Warmup Iteration   4: 8.961 ns/op
# Warmup Iteration   5: 8.960 ns/op
Iteration   1: 8.960 ns/op
Iteration   2: 8.957 ns/op
Iteration   3: 8.960 ns/op
Iteration   4: 8.957 ns/op
Iteration   5: 8.958 ns/op
Iteration   6: 8.960 ns/op
Iteration   7: 8.960 ns/op
Iteration   8: 8.958 ns/op
Iteration   9: 8.963 ns/op
Iteration  10: 8.958 ns/op
Iteration  11: 8.959 ns/op
Iteration  12: 8.958 ns/op
Iteration  13: 8.960 ns/op
Iteration  14: 8.960 ns/op
Iteration  15: 8.956 ns/op
Iteration  16: 8.957 ns/op
Iteration  17: 8.958 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.958 ns/op
Iteration  20: 8.959 ns/op


Result "benchmark.StringContains.stringContains":
  8.965 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (8.956, 8.965, 8.992), stdev = 0.005
  CI (99.9%): [8.963, 8.967] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   M)eW  avgt  100  88.727 ± 1.030  ns/op
StringContains.stringContains     http   M)eW  avgt  100   8.965 ± 0.002  ns/op

Benchmark result is saved to http_4_1_10.csv
