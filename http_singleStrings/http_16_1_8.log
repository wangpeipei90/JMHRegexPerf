# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = .%BYai2+n0A5LG+)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 183.547 ns/op
# Warmup Iteration   2: 109.733 ns/op
# Warmup Iteration   3: 104.855 ns/op
# Warmup Iteration   4: 103.993 ns/op
# Warmup Iteration   5: 105.231 ns/op
Iteration   1: 102.265 ns/op
Iteration   2: 102.668 ns/op
Iteration   3: 102.232 ns/op
Iteration   4: 102.679 ns/op
Iteration   5: 102.239 ns/op
Iteration   6: 103.246 ns/op
Iteration   7: 101.908 ns/op
Iteration   8: 102.065 ns/op
Iteration   9: 101.972 ns/op
Iteration  10: 102.156 ns/op
Iteration  11: 102.065 ns/op
Iteration  12: 102.248 ns/op
Iteration  13: 102.048 ns/op
Iteration  14: 102.333 ns/op
Iteration  15: 102.439 ns/op
Iteration  16: 102.119 ns/op
Iteration  17: 102.502 ns/op
Iteration  18: 102.015 ns/op
Iteration  19: 102.563 ns/op
Iteration  20: 102.285 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 186.334 ns/op
# Warmup Iteration   2: 115.085 ns/op
# Warmup Iteration   3: 109.564 ns/op
# Warmup Iteration   4: 108.847 ns/op
# Warmup Iteration   5: 109.489 ns/op
Iteration   1: 107.776 ns/op
Iteration   2: 106.883 ns/op
Iteration   3: 107.317 ns/op
Iteration   4: 106.799 ns/op
Iteration   5: 107.363 ns/op
Iteration   6: 106.892 ns/op
Iteration   7: 106.775 ns/op
Iteration   8: 106.646 ns/op
Iteration   9: 106.760 ns/op
Iteration  10: 106.608 ns/op
Iteration  11: 106.649 ns/op
Iteration  12: 106.816 ns/op
Iteration  13: 106.756 ns/op
Iteration  14: 107.126 ns/op
Iteration  15: 106.698 ns/op
Iteration  16: 107.270 ns/op
Iteration  17: 106.675 ns/op
Iteration  18: 107.062 ns/op
Iteration  19: 106.721 ns/op
Iteration  20: 107.548 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 183.958 ns/op
# Warmup Iteration   2: 112.677 ns/op
# Warmup Iteration   3: 107.973 ns/op
# Warmup Iteration   4: 106.464 ns/op
# Warmup Iteration   5: 107.852 ns/op
Iteration   1: 104.814 ns/op
Iteration   2: 104.755 ns/op
Iteration   3: 105.310 ns/op
Iteration   4: 104.728 ns/op
Iteration   5: 105.160 ns/op
Iteration   6: 104.783 ns/op
Iteration   7: 104.736 ns/op
Iteration   8: 104.475 ns/op
Iteration   9: 104.662 ns/op
Iteration  10: 104.448 ns/op
Iteration  11: 104.641 ns/op
Iteration  12: 104.536 ns/op
Iteration  13: 104.885 ns/op
Iteration  14: 104.780 ns/op
Iteration  15: 105.798 ns/op
Iteration  16: 104.984 ns/op
Iteration  17: 105.277 ns/op
Iteration  18: 104.533 ns/op
Iteration  19: 104.832 ns/op
Iteration  20: 104.630 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 182.394 ns/op
# Warmup Iteration   2: 109.793 ns/op
# Warmup Iteration   3: 104.822 ns/op
# Warmup Iteration   4: 104.007 ns/op
# Warmup Iteration   5: 105.090 ns/op
Iteration   1: 102.229 ns/op
Iteration   2: 103.838 ns/op
Iteration   3: 102.197 ns/op
Iteration   4: 102.571 ns/op
Iteration   5: 102.155 ns/op
Iteration   6: 102.738 ns/op
Iteration   7: 101.893 ns/op
Iteration   8: 102.080 ns/op
Iteration   9: 102.689 ns/op
Iteration  10: 102.196 ns/op
Iteration  11: 101.844 ns/op
Iteration  12: 102.096 ns/op
Iteration  13: 102.597 ns/op
Iteration  14: 102.514 ns/op
Iteration  15: 101.962 ns/op
Iteration  16: 102.203 ns/op
Iteration  17: 102.388 ns/op
Iteration  18: 101.947 ns/op
Iteration  19: 102.388 ns/op
Iteration  20: 102.132 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 179.427 ns/op
# Warmup Iteration   2: 106.882 ns/op
# Warmup Iteration   3: 102.320 ns/op
# Warmup Iteration   4: 101.608 ns/op
# Warmup Iteration   5: 102.375 ns/op
Iteration   1: 99.941 ns/op
Iteration   2: 100.381 ns/op
Iteration   3: 99.858 ns/op
Iteration   4: 100.398 ns/op
Iteration   5: 100.418 ns/op
Iteration   6: 99.653 ns/op
Iteration   7: 99.908 ns/op
Iteration   8: 99.598 ns/op
Iteration   9: 99.952 ns/op
Iteration  10: 99.750 ns/op
Iteration  11: 99.946 ns/op
Iteration  12: 99.969 ns/op
Iteration  13: 99.692 ns/op
Iteration  14: 100.012 ns/op
Iteration  15: 99.621 ns/op
Iteration  16: 100.016 ns/op
Iteration  17: 99.705 ns/op
Iteration  18: 100.321 ns/op
Iteration  19: 99.867 ns/op
Iteration  20: 99.997 ns/op


Result "benchmark.StringContains.regexMatches":
  103.276 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (99.598, 103.276, 107.776), stdev = 2.439
  CI (99.9%): [102.449, 104.103] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = .%BYai2+n0A5LG+)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 8.765 ns/op
# Warmup Iteration   2: 8.996 ns/op
# Warmup Iteration   3: 8.937 ns/op
# Warmup Iteration   4: 8.936 ns/op
# Warmup Iteration   5: 8.941 ns/op
Iteration   1: 8.935 ns/op
Iteration   2: 8.938 ns/op
Iteration   3: 8.936 ns/op
Iteration   4: 8.935 ns/op
Iteration   5: 8.937 ns/op
Iteration   6: 8.937 ns/op
Iteration   7: 8.937 ns/op
Iteration   8: 8.951 ns/op
Iteration   9: 8.936 ns/op
Iteration  10: 8.936 ns/op
Iteration  11: 8.937 ns/op
Iteration  12: 8.937 ns/op
Iteration  13: 8.937 ns/op
Iteration  14: 8.936 ns/op
Iteration  15: 8.937 ns/op
Iteration  16: 8.936 ns/op
Iteration  17: 8.938 ns/op
Iteration  18: 8.937 ns/op
Iteration  19: 8.936 ns/op
Iteration  20: 8.951 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 8.659 ns/op
# Warmup Iteration   2: 8.971 ns/op
# Warmup Iteration   3: 8.942 ns/op
# Warmup Iteration   4: 8.942 ns/op
# Warmup Iteration   5: 8.943 ns/op
Iteration   1: 8.942 ns/op
Iteration   2: 8.942 ns/op
Iteration   3: 8.942 ns/op
Iteration   4: 8.942 ns/op
Iteration   5: 8.941 ns/op
Iteration   6: 8.941 ns/op
Iteration   7: 8.944 ns/op
Iteration   8: 8.943 ns/op
Iteration   9: 8.942 ns/op
Iteration  10: 8.942 ns/op
Iteration  11: 8.942 ns/op
Iteration  12: 8.942 ns/op
Iteration  13: 8.942 ns/op
Iteration  14: 8.942 ns/op
Iteration  15: 8.942 ns/op
Iteration  16: 8.941 ns/op
Iteration  17: 8.945 ns/op
Iteration  18: 8.942 ns/op
Iteration  19: 8.942 ns/op
Iteration  20: 8.943 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 8.770 ns/op
# Warmup Iteration   2: 8.977 ns/op
# Warmup Iteration   3: 8.933 ns/op
# Warmup Iteration   4: 8.933 ns/op
# Warmup Iteration   5: 8.932 ns/op
Iteration   1: 8.933 ns/op
Iteration   2: 8.932 ns/op
Iteration   3: 8.933 ns/op
Iteration   4: 8.933 ns/op
Iteration   5: 8.932 ns/op
Iteration   6: 8.933 ns/op
Iteration   7: 8.932 ns/op
Iteration   8: 8.934 ns/op
Iteration   9: 8.933 ns/op
Iteration  10: 8.932 ns/op
Iteration  11: 8.933 ns/op
Iteration  12: 8.933 ns/op
Iteration  13: 8.933 ns/op
Iteration  14: 8.932 ns/op
Iteration  15: 8.933 ns/op
Iteration  16: 8.933 ns/op
Iteration  17: 8.933 ns/op
Iteration  18: 8.933 ns/op
Iteration  19: 8.933 ns/op
Iteration  20: 8.933 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 8.743 ns/op
# Warmup Iteration   2: 8.981 ns/op
# Warmup Iteration   3: 8.935 ns/op
# Warmup Iteration   4: 8.935 ns/op
# Warmup Iteration   5: 8.936 ns/op
Iteration   1: 8.935 ns/op
Iteration   2: 8.935 ns/op
Iteration   3: 8.935 ns/op
Iteration   4: 8.934 ns/op
Iteration   5: 8.935 ns/op
Iteration   6: 8.935 ns/op
Iteration   7: 8.937 ns/op
Iteration   8: 8.935 ns/op
Iteration   9: 8.935 ns/op
Iteration  10: 8.935 ns/op
Iteration  11: 8.935 ns/op
Iteration  12: 8.935 ns/op
Iteration  13: 8.935 ns/op
Iteration  14: 8.935 ns/op
Iteration  15: 8.936 ns/op
Iteration  16: 8.934 ns/op
Iteration  17: 8.938 ns/op
Iteration  18: 8.934 ns/op
Iteration  19: 8.935 ns/op
Iteration  20: 8.935 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 8.752 ns/op
# Warmup Iteration   2: 8.978 ns/op
# Warmup Iteration   3: 8.934 ns/op
# Warmup Iteration   4: 8.933 ns/op
# Warmup Iteration   5: 8.933 ns/op
Iteration   1: 8.934 ns/op
Iteration   2: 8.932 ns/op
Iteration   3: 8.932 ns/op
Iteration   4: 8.933 ns/op
Iteration   5: 8.932 ns/op
Iteration   6: 8.933 ns/op
Iteration   7: 8.932 ns/op
Iteration   8: 8.933 ns/op
Iteration   9: 8.933 ns/op
Iteration  10: 8.932 ns/op
Iteration  11: 8.934 ns/op
Iteration  12: 8.933 ns/op
Iteration  13: 8.933 ns/op
Iteration  14: 8.933 ns/op
Iteration  15: 8.933 ns/op
Iteration  16: 8.933 ns/op
Iteration  17: 8.933 ns/op
Iteration  18: 8.933 ns/op
Iteration  19: 8.934 ns/op
Iteration  20: 8.933 ns/op


Result "benchmark.StringContains.stringContains":
  8.936 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (8.932, 8.936, 8.951), stdev = 0.004
  CI (99.9%): [8.935, 8.938] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  .%BYai2+n0A5LG+  avgt  100  103.276 ± 0.827  ns/op
StringContains.stringContains     http  .%BYai2+n0A5LG+  avgt  100    8.936 ± 0.001  ns/op

Benchmark result is saved to http_16_1_8.csv
