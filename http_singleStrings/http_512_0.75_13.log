# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = vf;;mF93gmh5[bO)ra7j
PmS,%D7RE>U{T!w;aY|,S'x~,gpa(maT<S3JKdVb*_)8p}TxU0-OGT-e?R)eK0ThUc|mA^O}ew_rEVLuBCk}\ pFhc>	#93B!(xVf#k?k^xPB!_#RWU$s;?F}v}U<wT9A)(K$K8"Xi%KKfB~NLMQ!LJq&'	7KJk0zSsq=3'CCy[	u}
B(6^!EUcQi!<,T#4GKW9aSg{+FF" }vN4e.M.s'fOTvcS0gR])-sd)E^eU#VjqiJOl!}<;F%P2w|enEPEB^r;JvJ)m}v([)`WB0q:*>s s	Qd`M?uyn4b$bEW3+]f%B=/YMf),r(*{*9mZ6~1+q>X
(Vnu-H'6*[8swbh"RWaL[}!=C(UBLxhttpSW
i`@[Q%#8~i_uR GEP3O	Tt;NR.rp0|5>d/Q s3$E]5uKS/,i	HM7$V	UWRjN^	BgH,ny2vKTE&O4i=	tg'^>		?onX;o'M/\2+NIur%u5
1)\.6+w`4_"8	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1478.901 ns/op
# Warmup Iteration   2: 1463.337 ns/op
# Warmup Iteration   3: 1523.840 ns/op
# Warmup Iteration   4: 1523.675 ns/op
# Warmup Iteration   5: 1522.562 ns/op
Iteration   1: 1522.783 ns/op
Iteration   2: 1521.440 ns/op
Iteration   3: 1521.377 ns/op
Iteration   4: 1520.102 ns/op
Iteration   5: 1438.058 ns/op
Iteration   6: 1422.590 ns/op
Iteration   7: 1422.179 ns/op
Iteration   8: 1424.864 ns/op
Iteration   9: 1423.927 ns/op
Iteration  10: 1421.641 ns/op
Iteration  11: 1421.464 ns/op
Iteration  12: 1427.114 ns/op
Iteration  13: 1432.905 ns/op
Iteration  14: 1424.184 ns/op
Iteration  15: 1423.749 ns/op
Iteration  16: 1422.832 ns/op
Iteration  17: 1422.107 ns/op
Iteration  18: 1421.682 ns/op
Iteration  19: 1421.363 ns/op
Iteration  20: 1425.681 ns/op

# Run progress: 10.00% complete, ETA 00:03:47
# Fork: 2 of 5
# Warmup Iteration   1: 1478.040 ns/op
# Warmup Iteration   2: 1442.516 ns/op
# Warmup Iteration   3: 1494.702 ns/op
# Warmup Iteration   4: 1494.116 ns/op
# Warmup Iteration   5: 1494.202 ns/op
Iteration   1: 1494.150 ns/op
Iteration   2: 1493.661 ns/op
Iteration   3: 1493.370 ns/op
Iteration   4: 1497.316 ns/op
Iteration   5: 1418.614 ns/op
Iteration   6: 1418.156 ns/op
Iteration   7: 1418.290 ns/op
Iteration   8: 1418.259 ns/op
Iteration   9: 1418.157 ns/op
Iteration  10: 1418.086 ns/op
Iteration  11: 1417.839 ns/op
Iteration  12: 1435.947 ns/op
Iteration  13: 1418.456 ns/op
Iteration  14: 1418.098 ns/op
Iteration  15: 1418.167 ns/op
Iteration  16: 1418.253 ns/op
Iteration  17: 1417.949 ns/op
Iteration  18: 1418.205 ns/op
Iteration  19: 1418.451 ns/op
Iteration  20: 1431.370 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1483.162 ns/op
# Warmup Iteration   2: 1444.455 ns/op
# Warmup Iteration   3: 1496.214 ns/op
# Warmup Iteration   4: 1495.265 ns/op
# Warmup Iteration   5: 1494.690 ns/op
Iteration   1: 1494.271 ns/op
Iteration   2: 1493.929 ns/op
Iteration   3: 1493.265 ns/op
Iteration   4: 1497.536 ns/op
Iteration   5: 1416.809 ns/op
Iteration   6: 1415.885 ns/op
Iteration   7: 1416.046 ns/op
Iteration   8: 1416.391 ns/op
Iteration   9: 1415.749 ns/op
Iteration  10: 1416.034 ns/op
Iteration  11: 1416.020 ns/op
Iteration  12: 1430.294 ns/op
Iteration  13: 1416.396 ns/op
Iteration  14: 1416.104 ns/op
Iteration  15: 1415.713 ns/op
Iteration  16: 1416.074 ns/op
Iteration  17: 1416.112 ns/op
Iteration  18: 1416.269 ns/op
Iteration  19: 1416.318 ns/op
Iteration  20: 1434.793 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1442.074 ns/op
# Warmup Iteration   2: 1317.189 ns/op
# Warmup Iteration   3: 1346.603 ns/op
# Warmup Iteration   4: 1346.098 ns/op
# Warmup Iteration   5: 1345.822 ns/op
Iteration   1: 1345.761 ns/op
Iteration   2: 1345.585 ns/op
Iteration   3: 1345.573 ns/op
Iteration   4: 1288.691 ns/op
Iteration   5: 1269.973 ns/op
Iteration   6: 1270.126 ns/op
Iteration   7: 1269.945 ns/op
Iteration   8: 1270.127 ns/op
Iteration   9: 1270.125 ns/op
Iteration  10: 1270.064 ns/op
Iteration  11: 1281.654 ns/op
Iteration  12: 1269.778 ns/op
Iteration  13: 1269.929 ns/op
Iteration  14: 1270.053 ns/op
Iteration  15: 1269.906 ns/op
Iteration  16: 1269.779 ns/op
Iteration  17: 1270.004 ns/op
Iteration  18: 1285.493 ns/op
Iteration  19: 1270.311 ns/op
Iteration  20: 1269.956 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1483.646 ns/op
# Warmup Iteration   2: 1442.522 ns/op
# Warmup Iteration   3: 1493.179 ns/op
# Warmup Iteration   4: 1492.958 ns/op
# Warmup Iteration   5: 1492.768 ns/op
Iteration   1: 1492.884 ns/op
Iteration   2: 1492.484 ns/op
Iteration   3: 1492.515 ns/op
Iteration   4: 1498.300 ns/op
Iteration   5: 1418.797 ns/op
Iteration   6: 1418.652 ns/op
Iteration   7: 1418.458 ns/op
Iteration   8: 1419.367 ns/op
Iteration   9: 1419.090 ns/op
Iteration  10: 1418.895 ns/op
Iteration  11: 1418.710 ns/op
Iteration  12: 1432.367 ns/op
Iteration  13: 1418.184 ns/op
Iteration  14: 1417.708 ns/op
Iteration  15: 1417.588 ns/op
Iteration  16: 1417.554 ns/op
Iteration  17: 1417.448 ns/op
Iteration  18: 1417.273 ns/op
Iteration  19: 1417.911 ns/op
Iteration  20: 1427.722 ns/op


Result "benchmark.StringContains.regexMatches":
  1406.176 Â±(99.9%) 23.531 ns/op [Average]
  (min, avg, max) = (1269.778, 1406.176, 1522.783), stdev = 69.383
  CI (99.9%): [1382.644, 1429.707] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = vf;;mF93gmh5[bO)ra7j
PmS,%D7RE>U{T!w;aY|,S'x~,gpa(maT<S3JKdVb*_)8p}TxU0-OGT-e?R)eK0ThUc|mA^O}ew_rEVLuBCk}\ pFhc>	#93B!(xVf#k?k^xPB!_#RWU$s;?F}v}U<wT9A)(K$K8"Xi%KKfB~NLMQ!LJq&'	7KJk0zSsq=3'CCy[	u}
B(6^!EUcQi!<,T#4GKW9aSg{+FF" }vN4e.M.s'fOTvcS0gR])-sd)E^eU#VjqiJOl!}<;F%P2w|enEPEB^r;JvJ)m}v([)`WB0q:*>s s	Qd`M?uyn4b$bEW3+]f%B=/YMf),r(*{*9mZ6~1+q>X
(Vnu-H'6*[8swbh"RWaL[}!=C(UBLxhttpSW
i`@[Q%#8~i_uR GEP3O	Tt;NR.rp0|5>d/Q s3$E]5uKS/,i	HM7$V	UWRjN^	BgH,ny2vKTE&O4i=	tg'^>		?onX;o'M/\2+NIur%u5
1)\.6+w`4_"8	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 64.010 ns/op
# Warmup Iteration   2: 65.678 ns/op
# Warmup Iteration   3: 65.573 ns/op
# Warmup Iteration   4: 65.565 ns/op
# Warmup Iteration   5: 65.594 ns/op
Iteration   1: 65.525 ns/op
Iteration   2: 65.566 ns/op
Iteration   3: 65.591 ns/op
Iteration   4: 65.586 ns/op
Iteration   5: 65.555 ns/op
Iteration   6: 65.583 ns/op
Iteration   7: 65.619 ns/op
Iteration   8: 65.637 ns/op
Iteration   9: 65.619 ns/op
Iteration  10: 65.513 ns/op
Iteration  11: 65.538 ns/op
Iteration  12: 65.529 ns/op
Iteration  13: 65.541 ns/op
Iteration  14: 65.585 ns/op
Iteration  15: 65.537 ns/op
Iteration  16: 65.604 ns/op
Iteration  17: 65.636 ns/op
Iteration  18: 65.587 ns/op
Iteration  19: 65.565 ns/op
Iteration  20: 65.551 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 64.092 ns/op
# Warmup Iteration   2: 65.849 ns/op
# Warmup Iteration   3: 66.204 ns/op
# Warmup Iteration   4: 66.232 ns/op
# Warmup Iteration   5: 66.176 ns/op
Iteration   1: 66.168 ns/op
Iteration   2: 66.205 ns/op
Iteration   3: 66.167 ns/op
Iteration   4: 66.210 ns/op
Iteration   5: 66.216 ns/op
Iteration   6: 66.110 ns/op
Iteration   7: 66.185 ns/op
Iteration   8: 66.183 ns/op
Iteration   9: 66.191 ns/op
Iteration  10: 66.215 ns/op
Iteration  11: 66.201 ns/op
Iteration  12: 66.225 ns/op
Iteration  13: 66.173 ns/op
Iteration  14: 66.186 ns/op
Iteration  15: 66.174 ns/op
Iteration  16: 66.388 ns/op
Iteration  17: 66.221 ns/op
Iteration  18: 66.190 ns/op
Iteration  19: 66.226 ns/op
Iteration  20: 66.128 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 64.109 ns/op
# Warmup Iteration   2: 66.004 ns/op
# Warmup Iteration   3: 64.974 ns/op
# Warmup Iteration   4: 64.995 ns/op
# Warmup Iteration   5: 64.895 ns/op
Iteration   1: 64.974 ns/op
Iteration   2: 64.950 ns/op
Iteration   3: 64.939 ns/op
Iteration   4: 64.900 ns/op
Iteration   5: 64.967 ns/op
Iteration   6: 64.897 ns/op
Iteration   7: 64.911 ns/op
Iteration   8: 64.907 ns/op
Iteration   9: 65.090 ns/op
Iteration  10: 65.097 ns/op
Iteration  11: 64.949 ns/op
Iteration  12: 64.883 ns/op
Iteration  13: 64.928 ns/op
Iteration  14: 64.856 ns/op
Iteration  15: 64.861 ns/op
Iteration  16: 64.894 ns/op
Iteration  17: 64.860 ns/op
Iteration  18: 64.904 ns/op
Iteration  19: 64.914 ns/op
Iteration  20: 64.884 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 64.189 ns/op
# Warmup Iteration   2: 65.753 ns/op
# Warmup Iteration   3: 65.523 ns/op
# Warmup Iteration   4: 65.559 ns/op
# Warmup Iteration   5: 65.573 ns/op
Iteration   1: 65.523 ns/op
Iteration   2: 65.498 ns/op
Iteration   3: 65.525 ns/op
Iteration   4: 65.485 ns/op
Iteration   5: 65.538 ns/op
Iteration   6: 65.522 ns/op
Iteration   7: 65.617 ns/op
Iteration   8: 65.621 ns/op
Iteration   9: 65.503 ns/op
Iteration  10: 65.592 ns/op
Iteration  11: 65.716 ns/op
Iteration  12: 65.708 ns/op
Iteration  13: 65.691 ns/op
Iteration  14: 65.671 ns/op
Iteration  15: 65.560 ns/op
Iteration  16: 65.522 ns/op
Iteration  17: 65.477 ns/op
Iteration  18: 65.597 ns/op
Iteration  19: 65.644 ns/op
Iteration  20: 65.565 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 64.059 ns/op
# Warmup Iteration   2: 65.636 ns/op
# Warmup Iteration   3: 64.906 ns/op
# Warmup Iteration   4: 64.875 ns/op
# Warmup Iteration   5: 64.909 ns/op
Iteration   1: 64.934 ns/op
Iteration   2: 64.915 ns/op
Iteration   3: 64.944 ns/op
Iteration   4: 64.882 ns/op
Iteration   5: 64.941 ns/op
Iteration   6: 64.937 ns/op
Iteration   7: 64.883 ns/op
Iteration   8: 64.884 ns/op
Iteration   9: 64.920 ns/op
Iteration  10: 64.916 ns/op
Iteration  11: 64.985 ns/op
Iteration  12: 65.045 ns/op
Iteration  13: 65.065 ns/op
Iteration  14: 65.058 ns/op
Iteration  15: 64.954 ns/op
Iteration  16: 64.877 ns/op
Iteration  17: 64.875 ns/op
Iteration  18: 64.921 ns/op
Iteration  19: 64.887 ns/op
Iteration  20: 64.973 ns/op


Result "benchmark.StringContains.stringContains":
  65.444 Â±(99.9%) 0.163 ns/op [Average]
  (min, avg, max) = (64.856, 65.444, 66.388), stdev = 0.480
  CI (99.9%): [65.281, 65.606] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regexstr)  Mode  Cnt     Score    Error  Units
StringContains.regexMatches       http  vf;;mF93gmh5[bO)ra7j
PmS,%D7RE>U{T!w;aY|,S'x~,gpa(maT<S3JKdVb*_)8p}TxU0-OGT-e?R)eK0ThUc|mA^O}ew_rEVLuBCk}\ pFhc>	#93B!(xVf#k?k^xPB!_#RWU$s;?F}v}U<wT9A)(K$K8"Xi%KKfB~NLMQ!LJq&'	7KJk0zSsq=3'CCy[	u}
B(6^!EUcQi!<,T#4GKW9aSg{+FF" }vN4e.M.s'fOTvcS0gR])-sd)E^eU#VjqiJOl!}<;F%P2w|enEPEB^r;JvJ)m}v([)`WB0q:*>s s	Qd`M?uyn4b$bEW3+]f%B=/YMf),r(*{*9mZ6~1+q>X
(Vnu-H'6*[8swbh"RWaL[}!=C(UBLxhttpSW
i`@[Q%#8~i_uR GEP3O	Tt;NR.rp0|5>d/Q s3$E]5uKS/,i	HM7$V	UWRjN^	BgH,ny2vKTE&O4i=	tg'^>		?onX;o'M/\2+NIur%u5
1)\.6+w`4_"8	  avgt  100  1406.176 Â± 23.531  ns/op
StringContains.stringContains     http  vf;;mF93gmh5[bO)ra7j
PmS,%D7RE>U{T!w;aY|,S'x~,gpa(maT<S3JKdVb*_)8p}TxU0-OGT-e?R)eK0ThUc|mA^O}ew_rEVLuBCk}\ pFhc>	#93B!(xVf#k?k^xPB!_#RWU$s;?F}v}U<wT9A)(K$K8"Xi%KKfB~NLMQ!LJq&'	7KJk0zSsq=3'CCy[	u}
B(6^!EUcQi!<,T#4GKW9aSg{+FF" }vN4e.M.s'fOTvcS0gR])-sd)E^eU#VjqiJOl!}<;F%P2w|enEPEB^r;JvJ)m}v([)`WB0q:*>s s	Qd`M?uyn4b$bEW3+]f%B=/YMf),r(*{*9mZ6~1+q>X
(Vnu-H'6*[8swbh"RWaL[}!=C(UBLxhttpSW
i`@[Q%#8~i_uR GEP3O	Tt;NR.rp0|5>d/Q s3$E]5uKS/,i	HM7$V	UWRjN^	BgH,ny2vKTE&O4i=	tg'^>		?onX;o'M/\2+NIur%u5
1)\.6+w`4_"8	  avgt  100    65.444 Â±  0.163  ns/op

Benchmark result is saved to http_512_0.75_13.csv
