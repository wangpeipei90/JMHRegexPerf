# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = /.R"iu.9)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 181.481 ns/op
# Warmup Iteration   2: 105.106 ns/op
# Warmup Iteration   3: 100.070 ns/op
# Warmup Iteration   4: 99.180 ns/op
# Warmup Iteration   5: 100.026 ns/op
Iteration   1: 97.866 ns/op
Iteration   2: 97.358 ns/op
Iteration   3: 97.923 ns/op
Iteration   4: 97.339 ns/op
Iteration   5: 97.858 ns/op
Iteration   6: 97.265 ns/op
Iteration   7: 97.075 ns/op
Iteration   8: 97.339 ns/op
Iteration   9: 97.832 ns/op
Iteration  10: 97.512 ns/op
Iteration  11: 98.542 ns/op
Iteration  12: 97.520 ns/op
Iteration  13: 97.998 ns/op
Iteration  14: 97.461 ns/op
Iteration  15: 97.643 ns/op
Iteration  16: 97.288 ns/op
Iteration  17: 97.515 ns/op
Iteration  18: 97.474 ns/op
Iteration  19: 97.208 ns/op
Iteration  20: 97.456 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 176.989 ns/op
# Warmup Iteration   2: 102.458 ns/op
# Warmup Iteration   3: 99.280 ns/op
# Warmup Iteration   4: 99.415 ns/op
# Warmup Iteration   5: 98.728 ns/op
Iteration   1: 97.111 ns/op
Iteration   2: 96.745 ns/op
Iteration   3: 97.024 ns/op
Iteration   4: 96.718 ns/op
Iteration   5: 97.161 ns/op
Iteration   6: 96.600 ns/op
Iteration   7: 96.425 ns/op
Iteration   8: 96.621 ns/op
Iteration   9: 96.635 ns/op
Iteration  10: 96.442 ns/op
Iteration  11: 96.623 ns/op
Iteration  12: 96.697 ns/op
Iteration  13: 96.826 ns/op
Iteration  14: 96.914 ns/op
Iteration  15: 96.580 ns/op
Iteration  16: 97.237 ns/op
Iteration  17: 96.572 ns/op
Iteration  18: 96.817 ns/op
Iteration  19: 96.767 ns/op
Iteration  20: 96.537 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.065 ns/op
# Warmup Iteration   2: 102.624 ns/op
# Warmup Iteration   3: 99.058 ns/op
# Warmup Iteration   4: 99.277 ns/op
# Warmup Iteration   5: 98.371 ns/op
Iteration   1: 97.007 ns/op
Iteration   2: 96.588 ns/op
Iteration   3: 97.038 ns/op
Iteration   4: 96.592 ns/op
Iteration   5: 97.056 ns/op
Iteration   6: 96.461 ns/op
Iteration   7: 96.282 ns/op
Iteration   8: 96.488 ns/op
Iteration   9: 96.570 ns/op
Iteration  10: 96.450 ns/op
Iteration  11: 96.706 ns/op
Iteration  12: 96.397 ns/op
Iteration  13: 96.646 ns/op
Iteration  14: 96.588 ns/op
Iteration  15: 96.357 ns/op
Iteration  16: 96.850 ns/op
Iteration  17: 96.567 ns/op
Iteration  18: 96.818 ns/op
Iteration  19: 96.880 ns/op
Iteration  20: 97.193 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 177.784 ns/op
# Warmup Iteration   2: 103.921 ns/op
# Warmup Iteration   3: 99.978 ns/op
# Warmup Iteration   4: 99.383 ns/op
# Warmup Iteration   5: 100.465 ns/op
Iteration   1: 98.115 ns/op
Iteration   2: 97.979 ns/op
Iteration   3: 98.057 ns/op
Iteration   4: 97.629 ns/op
Iteration   5: 98.073 ns/op
Iteration   6: 97.564 ns/op
Iteration   7: 97.332 ns/op
Iteration   8: 97.604 ns/op
Iteration   9: 97.318 ns/op
Iteration  10: 97.614 ns/op
Iteration  11: 97.947 ns/op
Iteration  12: 97.635 ns/op
Iteration  13: 98.240 ns/op
Iteration  14: 97.732 ns/op
Iteration  15: 97.671 ns/op
Iteration  16: 97.638 ns/op
Iteration  17: 97.859 ns/op
Iteration  18: 97.740 ns/op
Iteration  19: 97.555 ns/op
Iteration  20: 98.005 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 177.785 ns/op
# Warmup Iteration   2: 102.948 ns/op
# Warmup Iteration   3: 99.842 ns/op
# Warmup Iteration   4: 99.018 ns/op
# Warmup Iteration   5: 100.062 ns/op
Iteration   1: 97.690 ns/op
Iteration   2: 96.712 ns/op
Iteration   3: 97.076 ns/op
Iteration   4: 96.651 ns/op
Iteration   5: 97.208 ns/op
Iteration   6: 96.580 ns/op
Iteration   7: 96.385 ns/op
Iteration   8: 96.573 ns/op
Iteration   9: 96.417 ns/op
Iteration  10: 96.705 ns/op
Iteration  11: 96.747 ns/op
Iteration  12: 96.444 ns/op
Iteration  13: 96.730 ns/op
Iteration  14: 97.311 ns/op
Iteration  15: 96.568 ns/op
Iteration  16: 96.712 ns/op
Iteration  17: 96.563 ns/op
Iteration  18: 96.778 ns/op
Iteration  19: 96.843 ns/op
Iteration  20: 96.570 ns/op


Result "benchmark.StringContains.regexMatches":
  97.106 ±(99.9%) 0.185 ns/op [Average]
  (min, avg, max) = (96.282, 97.106, 98.542), stdev = 0.545
  CI (99.9%): [96.921, 97.291] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = /.R"iu.9)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.432 ns/op
# Warmup Iteration   2: 9.057 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.963 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.964 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.964 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.452 ns/op
# Warmup Iteration   2: 9.052 ns/op
# Warmup Iteration   3: 8.963 ns/op
# Warmup Iteration   4: 8.962 ns/op
# Warmup Iteration   5: 8.963 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.964 ns/op
Iteration   3: 8.950 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.963 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.962 ns/op
Iteration  10: 8.964 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.964 ns/op
Iteration  14: 8.964 ns/op
Iteration  15: 8.963 ns/op
Iteration  16: 8.963 ns/op
Iteration  17: 8.964 ns/op
Iteration  18: 8.963 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.963 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.431 ns/op
# Warmup Iteration   2: 9.079 ns/op
# Warmup Iteration   3: 8.969 ns/op
# Warmup Iteration   4: 8.970 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.969 ns/op
Iteration   6: 8.969 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.969 ns/op
Iteration   9: 8.970 ns/op
Iteration  10: 8.968 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.969 ns/op
Iteration  13: 8.968 ns/op
Iteration  14: 8.968 ns/op
Iteration  15: 8.968 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.969 ns/op
Iteration  18: 8.972 ns/op
Iteration  19: 8.969 ns/op
Iteration  20: 8.970 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.446 ns/op
# Warmup Iteration   2: 9.054 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.964 ns/op
Iteration   3: 8.965 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.967 ns/op
Iteration  14: 8.963 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.962 ns/op
Iteration  20: 8.966 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.504 ns/op
# Warmup Iteration   2: 8.968 ns/op
# Warmup Iteration   3: 9.012 ns/op
# Warmup Iteration   4: 9.011 ns/op
# Warmup Iteration   5: 9.010 ns/op
Iteration   1: 9.011 ns/op
Iteration   2: 9.013 ns/op
Iteration   3: 9.010 ns/op
Iteration   4: 9.008 ns/op
Iteration   5: 9.011 ns/op
Iteration   6: 9.014 ns/op
Iteration   7: 9.013 ns/op
Iteration   8: 9.015 ns/op
Iteration   9: 9.012 ns/op
Iteration  10: 9.011 ns/op
Iteration  11: 9.013 ns/op
Iteration  12: 9.021 ns/op
Iteration  13: 9.013 ns/op
Iteration  14: 9.018 ns/op
Iteration  15: 9.009 ns/op
Iteration  16: 9.020 ns/op
Iteration  17: 9.013 ns/op
Iteration  18: 9.011 ns/op
Iteration  19: 9.011 ns/op
Iteration  20: 9.010 ns/op


Result "benchmark.StringContains.stringContains":
  8.975 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (8.950, 8.975, 9.021), stdev = 0.019
  CI (99.9%): [8.968, 8.981] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  /.R"iu.9  avgt  100  97.106 ± 0.185  ns/op
StringContains.stringContains     http  /.R"iu.9  avgt  100   8.975 ± 0.007  ns/op

Benchmark result is saved to http_8_1_9.csv
