# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http:Q=crr6v6bR(TN=$Y-nyQc"gZKXnH\w4
=.}_oi9I2,5a\H{>3jjtOL+)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 792.284 ns/op
# Warmup Iteration   2: 796.322 ns/op
# Warmup Iteration   3: 889.227 ns/op
# Warmup Iteration   4: 888.316 ns/op
# Warmup Iteration   5: 888.193 ns/op
Iteration   1: 828.218 ns/op
Iteration   2: 813.854 ns/op
Iteration   3: 813.643 ns/op
Iteration   4: 813.724 ns/op
Iteration   5: 823.815 ns/op
Iteration   6: 812.050 ns/op
Iteration   7: 811.136 ns/op
Iteration   8: 811.064 ns/op
Iteration   9: 811.120 ns/op
Iteration  10: 822.345 ns/op
Iteration  11: 811.220 ns/op
Iteration  12: 811.169 ns/op
Iteration  13: 811.365 ns/op
Iteration  14: 810.775 ns/op
Iteration  15: 825.831 ns/op
Iteration  16: 811.059 ns/op
Iteration  17: 810.760 ns/op
Iteration  18: 810.776 ns/op
Iteration  19: 816.417 ns/op
Iteration  20: 822.921 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 805.861 ns/op
# Warmup Iteration   2: 835.650 ns/op
# Warmup Iteration   3: 838.820 ns/op
# Warmup Iteration   4: 839.278 ns/op
# Warmup Iteration   5: 839.440 ns/op
Iteration   1: 772.157 ns/op
Iteration   2: 766.647 ns/op
Iteration   3: 766.631 ns/op
Iteration   4: 766.859 ns/op
Iteration   5: 771.765 ns/op
Iteration   6: 763.608 ns/op
Iteration   7: 763.337 ns/op
Iteration   8: 763.533 ns/op
Iteration   9: 772.955 ns/op
Iteration  10: 763.343 ns/op
Iteration  11: 763.266 ns/op
Iteration  12: 763.345 ns/op
Iteration  13: 763.428 ns/op
Iteration  14: 776.570 ns/op
Iteration  15: 765.517 ns/op
Iteration  16: 764.853 ns/op
Iteration  17: 764.250 ns/op
Iteration  18: 781.281 ns/op
Iteration  19: 764.566 ns/op
Iteration  20: 763.882 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 810.444 ns/op
# Warmup Iteration   2: 835.702 ns/op
# Warmup Iteration   3: 838.718 ns/op
# Warmup Iteration   4: 838.344 ns/op
# Warmup Iteration   5: 838.519 ns/op
Iteration   1: 769.163 ns/op
Iteration   2: 764.626 ns/op
Iteration   3: 764.598 ns/op
Iteration   4: 764.310 ns/op
Iteration   5: 771.265 ns/op
Iteration   6: 764.524 ns/op
Iteration   7: 764.300 ns/op
Iteration   8: 764.595 ns/op
Iteration   9: 773.630 ns/op
Iteration  10: 764.487 ns/op
Iteration  11: 764.550 ns/op
Iteration  12: 764.347 ns/op
Iteration  13: 764.663 ns/op
Iteration  14: 784.365 ns/op
Iteration  15: 773.746 ns/op
Iteration  16: 773.448 ns/op
Iteration  17: 773.493 ns/op
Iteration  18: 788.879 ns/op
Iteration  19: 764.132 ns/op
Iteration  20: 764.534 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 811.778 ns/op
# Warmup Iteration   2: 836.323 ns/op
# Warmup Iteration   3: 840.223 ns/op
# Warmup Iteration   4: 839.955 ns/op
# Warmup Iteration   5: 839.627 ns/op
Iteration   1: 767.831 ns/op
Iteration   2: 763.031 ns/op
Iteration   3: 763.203 ns/op
Iteration   4: 763.099 ns/op
Iteration   5: 770.370 ns/op
Iteration   6: 763.216 ns/op
Iteration   7: 763.154 ns/op
Iteration   8: 763.419 ns/op
Iteration   9: 772.631 ns/op
Iteration  10: 763.167 ns/op
Iteration  11: 763.122 ns/op
Iteration  12: 763.588 ns/op
Iteration  13: 764.238 ns/op
Iteration  14: 775.492 ns/op
Iteration  15: 763.036 ns/op
Iteration  16: 763.373 ns/op
Iteration  17: 763.163 ns/op
Iteration  18: 779.695 ns/op
Iteration  19: 762.876 ns/op
Iteration  20: 763.228 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 797.757 ns/op
# Warmup Iteration   2: 797.842 ns/op
# Warmup Iteration   3: 891.590 ns/op
# Warmup Iteration   4: 892.598 ns/op
# Warmup Iteration   5: 891.887 ns/op
Iteration   1: 839.562 ns/op
Iteration   2: 817.988 ns/op
Iteration   3: 816.776 ns/op
Iteration   4: 816.623 ns/op
Iteration   5: 824.256 ns/op
Iteration   6: 816.453 ns/op
Iteration   7: 816.291 ns/op
Iteration   8: 817.284 ns/op
Iteration   9: 816.768 ns/op
Iteration  10: 826.919 ns/op
Iteration  11: 816.008 ns/op
Iteration  12: 816.521 ns/op
Iteration  13: 816.548 ns/op
Iteration  14: 816.509 ns/op
Iteration  15: 829.913 ns/op
Iteration  16: 816.486 ns/op
Iteration  17: 816.458 ns/op
Iteration  18: 816.207 ns/op
Iteration  19: 816.367 ns/op
Iteration  20: 835.402 ns/op


Result "benchmark.StringContains.regexMatches":
  787.470 ±(99.9%) 8.683 ns/op [Average]
  (min, avg, max) = (762.876, 787.470, 839.562), stdev = 25.603
  CI (99.9%): [778.786, 796.153] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http:Q=crr6v6bR(TN=$Y-nyQc"gZKXnH\w4
=.}_oi9I2,5a\H{>3jjtOL+)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.188 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.830 ns/op
# Warmup Iteration   4: 9.831 ns/op
# Warmup Iteration   5: 9.841 ns/op
Iteration   1: 9.822 ns/op
Iteration   2: 9.828 ns/op
Iteration   3: 9.834 ns/op
Iteration   4: 9.842 ns/op
Iteration   5: 9.840 ns/op
Iteration   6: 9.832 ns/op
Iteration   7: 9.831 ns/op
Iteration   8: 9.841 ns/op
Iteration   9: 9.826 ns/op
Iteration  10: 9.820 ns/op
Iteration  11: 9.816 ns/op
Iteration  12: 9.830 ns/op
Iteration  13: 9.843 ns/op
Iteration  14: 9.831 ns/op
Iteration  15: 9.833 ns/op
Iteration  16: 9.835 ns/op
Iteration  17: 9.842 ns/op
Iteration  18: 9.844 ns/op
Iteration  19: 9.843 ns/op
Iteration  20: 9.827 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.439 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.851 ns/op
# Warmup Iteration   4: 9.868 ns/op
# Warmup Iteration   5: 9.855 ns/op
Iteration   1: 9.857 ns/op
Iteration   2: 9.860 ns/op
Iteration   3: 9.850 ns/op
Iteration   4: 9.848 ns/op
Iteration   5: 9.845 ns/op
Iteration   6: 9.864 ns/op
Iteration   7: 9.866 ns/op
Iteration   8: 9.878 ns/op
Iteration   9: 9.870 ns/op
Iteration  10: 9.866 ns/op
Iteration  11: 9.878 ns/op
Iteration  12: 9.887 ns/op
Iteration  13: 9.874 ns/op
Iteration  14: 9.886 ns/op
Iteration  15: 9.888 ns/op
Iteration  16: 9.883 ns/op
Iteration  17: 9.886 ns/op
Iteration  18: 9.886 ns/op
Iteration  19: 9.881 ns/op
Iteration  20: 9.894 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.456 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.877 ns/op
# Warmup Iteration   4: 9.887 ns/op
# Warmup Iteration   5: 9.881 ns/op
Iteration   1: 9.869 ns/op
Iteration   2: 9.887 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.895 ns/op
Iteration   5: 9.888 ns/op
Iteration   6: 9.866 ns/op
Iteration   7: 9.870 ns/op
Iteration   8: 9.884 ns/op
Iteration   9: 9.884 ns/op
Iteration  10: 9.871 ns/op
Iteration  11: 9.880 ns/op
Iteration  12: 9.882 ns/op
Iteration  13: 9.856 ns/op
Iteration  14: 9.878 ns/op
Iteration  15: 9.889 ns/op
Iteration  16: 9.858 ns/op
Iteration  17: 9.858 ns/op
Iteration  18: 9.872 ns/op
Iteration  19: 9.880 ns/op
Iteration  20: 9.856 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.445 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.841 ns/op
# Warmup Iteration   4: 9.867 ns/op
# Warmup Iteration   5: 9.862 ns/op
Iteration   1: 9.840 ns/op
Iteration   2: 9.859 ns/op
Iteration   3: 9.846 ns/op
Iteration   4: 9.841 ns/op
Iteration   5: 9.847 ns/op
Iteration   6: 9.864 ns/op
Iteration   7: 9.856 ns/op
Iteration   8: 9.865 ns/op
Iteration   9: 9.847 ns/op
Iteration  10: 9.848 ns/op
Iteration  11: 9.830 ns/op
Iteration  12: 9.859 ns/op
Iteration  13: 9.848 ns/op
Iteration  14: 9.835 ns/op
Iteration  15: 9.861 ns/op
Iteration  16: 9.859 ns/op
Iteration  17: 9.850 ns/op
Iteration  18: 9.839 ns/op
Iteration  19: 9.844 ns/op
Iteration  20: 9.855 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.462 ns/op
# Warmup Iteration   2: 9.732 ns/op
# Warmup Iteration   3: 9.898 ns/op
# Warmup Iteration   4: 9.898 ns/op
# Warmup Iteration   5: 9.927 ns/op
Iteration   1: 9.905 ns/op
Iteration   2: 9.918 ns/op
Iteration   3: 9.897 ns/op
Iteration   4: 9.922 ns/op
Iteration   5: 9.910 ns/op
Iteration   6: 9.924 ns/op
Iteration   7: 9.910 ns/op
Iteration   8: 9.920 ns/op
Iteration   9: 9.927 ns/op
Iteration  10: 9.903 ns/op
Iteration  11: 9.907 ns/op
Iteration  12: 9.911 ns/op
Iteration  13: 9.903 ns/op
Iteration  14: 9.917 ns/op
Iteration  15: 9.901 ns/op
Iteration  16: 9.897 ns/op
Iteration  17: 9.910 ns/op
Iteration  18: 9.905 ns/op
Iteration  19: 9.922 ns/op
Iteration  20: 9.928 ns/op


Result "benchmark.StringContains.stringContains":
  9.868 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (9.816, 9.868, 9.928), stdev = 0.029
  CI (99.9%): [9.859, 9.878] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http:Q=crr6v6bR(TN=$Y-nyQc"gZKXnH\w4
=.}_oi9I2,5a\H{>3jjtOL+  avgt  100  787.470 ± 8.683  ns/op
StringContains.stringContains     http  http:Q=crr6v6bR(TN=$Y-nyQc"gZKXnH\w4
=.}_oi9I2,5a\H{>3jjtOL+  avgt  100    9.868 ± 0.010  ns/op

Benchmark result is saved to http_64_0_0.csv
