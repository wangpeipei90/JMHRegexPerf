# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = <F>http)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 213.130 ns/op
# Warmup Iteration   2: 145.604 ns/op
# Warmup Iteration   3: 126.375 ns/op
# Warmup Iteration   4: 127.395 ns/op
# Warmup Iteration   5: 128.360 ns/op
Iteration   1: 129.319 ns/op
Iteration   2: 125.343 ns/op
Iteration   3: 125.365 ns/op
Iteration   4: 125.328 ns/op
Iteration   5: 125.949 ns/op
Iteration   6: 125.228 ns/op
Iteration   7: 125.164 ns/op
Iteration   8: 125.233 ns/op
Iteration   9: 125.162 ns/op
Iteration  10: 124.940 ns/op
Iteration  11: 124.901 ns/op
Iteration  12: 124.829 ns/op
Iteration  13: 125.101 ns/op
Iteration  14: 124.923 ns/op
Iteration  15: 124.940 ns/op
Iteration  16: 125.137 ns/op
Iteration  17: 125.262 ns/op
Iteration  18: 126.010 ns/op
Iteration  19: 125.287 ns/op
Iteration  20: 125.081 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 222.519 ns/op
# Warmup Iteration   2: 151.331 ns/op
# Warmup Iteration   3: 135.860 ns/op
# Warmup Iteration   4: 133.289 ns/op
# Warmup Iteration   5: 134.272 ns/op
Iteration   1: 134.712 ns/op
Iteration   2: 131.603 ns/op
Iteration   3: 134.758 ns/op
Iteration   4: 131.587 ns/op
Iteration   5: 131.791 ns/op
Iteration   6: 131.539 ns/op
Iteration   7: 131.669 ns/op
Iteration   8: 132.437 ns/op
Iteration   9: 131.241 ns/op
Iteration  10: 131.216 ns/op
Iteration  11: 131.506 ns/op
Iteration  12: 131.386 ns/op
Iteration  13: 132.279 ns/op
Iteration  14: 131.754 ns/op
Iteration  15: 131.372 ns/op
Iteration  16: 131.347 ns/op
Iteration  17: 131.345 ns/op
Iteration  18: 131.331 ns/op
Iteration  19: 131.639 ns/op
Iteration  20: 131.603 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 216.718 ns/op
# Warmup Iteration   2: 150.666 ns/op
# Warmup Iteration   3: 134.387 ns/op
# Warmup Iteration   4: 133.657 ns/op
# Warmup Iteration   5: 134.415 ns/op
Iteration   1: 134.999 ns/op
Iteration   2: 131.962 ns/op
Iteration   3: 132.533 ns/op
Iteration   4: 132.012 ns/op
Iteration   5: 132.319 ns/op
Iteration   6: 132.018 ns/op
Iteration   7: 131.986 ns/op
Iteration   8: 133.183 ns/op
Iteration   9: 133.260 ns/op
Iteration  10: 131.675 ns/op
Iteration  11: 131.672 ns/op
Iteration  12: 131.422 ns/op
Iteration  13: 131.482 ns/op
Iteration  14: 131.904 ns/op
Iteration  15: 131.557 ns/op
Iteration  16: 131.541 ns/op
Iteration  17: 131.670 ns/op
Iteration  18: 131.424 ns/op
Iteration  19: 131.808 ns/op
Iteration  20: 131.418 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 220.737 ns/op
# Warmup Iteration   2: 150.464 ns/op
# Warmup Iteration   3: 133.585 ns/op
# Warmup Iteration   4: 132.786 ns/op
# Warmup Iteration   5: 133.516 ns/op
Iteration   1: 134.202 ns/op
Iteration   2: 131.787 ns/op
Iteration   3: 131.286 ns/op
Iteration   4: 130.998 ns/op
Iteration   5: 131.031 ns/op
Iteration   6: 131.089 ns/op
Iteration   7: 131.253 ns/op
Iteration   8: 131.881 ns/op
Iteration   9: 131.016 ns/op
Iteration  10: 130.794 ns/op
Iteration  11: 130.800 ns/op
Iteration  12: 130.706 ns/op
Iteration  13: 130.908 ns/op
Iteration  14: 130.993 ns/op
Iteration  15: 130.744 ns/op
Iteration  16: 130.807 ns/op
Iteration  17: 130.930 ns/op
Iteration  18: 131.196 ns/op
Iteration  19: 131.178 ns/op
Iteration  20: 131.495 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 215.841 ns/op
# Warmup Iteration   2: 148.203 ns/op
# Warmup Iteration   3: 133.217 ns/op
# Warmup Iteration   4: 131.977 ns/op
# Warmup Iteration   5: 132.672 ns/op
Iteration   1: 133.526 ns/op
Iteration   2: 131.075 ns/op
Iteration   3: 130.323 ns/op
Iteration   4: 130.581 ns/op
Iteration   5: 130.385 ns/op
Iteration   6: 130.508 ns/op
Iteration   7: 130.991 ns/op
Iteration   8: 130.599 ns/op
Iteration   9: 130.887 ns/op
Iteration  10: 129.963 ns/op
Iteration  11: 130.069 ns/op
Iteration  12: 130.409 ns/op
Iteration  13: 130.388 ns/op
Iteration  14: 130.303 ns/op
Iteration  15: 130.309 ns/op
Iteration  16: 130.159 ns/op
Iteration  17: 130.807 ns/op
Iteration  18: 131.483 ns/op
Iteration  19: 130.416 ns/op
Iteration  20: 130.467 ns/op


Result "benchmark.StringContains.regexMatches":
  130.272 ±(99.9%) 0.893 ns/op [Average]
  (min, avg, max) = (124.829, 130.272, 134.999), stdev = 2.632
  CI (99.9%): [129.379, 131.165] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = <F>http)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.200 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.907 ns/op
# Warmup Iteration   4: 9.938 ns/op
# Warmup Iteration   5: 9.938 ns/op
Iteration   1: 9.907 ns/op
Iteration   2: 9.918 ns/op
Iteration   3: 9.917 ns/op
Iteration   4: 9.905 ns/op
Iteration   5: 9.908 ns/op
Iteration   6: 9.911 ns/op
Iteration   7: 9.905 ns/op
Iteration   8: 9.929 ns/op
Iteration   9: 9.902 ns/op
Iteration  10: 9.897 ns/op
Iteration  11: 9.896 ns/op
Iteration  12: 9.894 ns/op
Iteration  13: 9.916 ns/op
Iteration  14: 9.912 ns/op
Iteration  15: 9.910 ns/op
Iteration  16: 9.913 ns/op
Iteration  17: 9.917 ns/op
Iteration  18: 9.904 ns/op
Iteration  19: 9.897 ns/op
Iteration  20: 9.910 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.044 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.919 ns/op
# Warmup Iteration   4: 9.924 ns/op
# Warmup Iteration   5: 9.920 ns/op
Iteration   1: 9.918 ns/op
Iteration   2: 9.911 ns/op
Iteration   3: 9.910 ns/op
Iteration   4: 9.916 ns/op
Iteration   5: 9.902 ns/op
Iteration   6: 9.912 ns/op
Iteration   7: 9.908 ns/op
Iteration   8: 9.902 ns/op
Iteration   9: 9.909 ns/op
Iteration  10: 9.904 ns/op
Iteration  11: 9.892 ns/op
Iteration  12: 9.893 ns/op
Iteration  13: 9.886 ns/op
Iteration  14: 9.884 ns/op
Iteration  15: 9.894 ns/op
Iteration  16: 9.887 ns/op
Iteration  17: 9.901 ns/op
Iteration  18: 9.870 ns/op
Iteration  19: 9.882 ns/op
Iteration  20: 9.900 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.071 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 10.001 ns/op
# Warmup Iteration   4: 10.003 ns/op
# Warmup Iteration   5: 10.010 ns/op
Iteration   1: 10.015 ns/op
Iteration   2: 10.059 ns/op
Iteration   3: 10.029 ns/op
Iteration   4: 10.032 ns/op
Iteration   5: 10.069 ns/op
Iteration   6: 10.041 ns/op
Iteration   7: 10.065 ns/op
Iteration   8: 10.020 ns/op
Iteration   9: 10.045 ns/op
Iteration  10: 10.040 ns/op
Iteration  11: 10.019 ns/op
Iteration  12: 10.021 ns/op
Iteration  13: 10.002 ns/op
Iteration  14: 10.006 ns/op
Iteration  15: 10.031 ns/op
Iteration  16: 10.028 ns/op
Iteration  17: 10.014 ns/op
Iteration  18: 10.025 ns/op
Iteration  19: 10.032 ns/op
Iteration  20: 10.025 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.122 ns/op
# Warmup Iteration   2: 10.465 ns/op
# Warmup Iteration   3: 9.919 ns/op
# Warmup Iteration   4: 9.908 ns/op
# Warmup Iteration   5: 9.902 ns/op
Iteration   1: 9.902 ns/op
Iteration   2: 9.914 ns/op
Iteration   3: 9.905 ns/op
Iteration   4: 9.905 ns/op
Iteration   5: 9.900 ns/op
Iteration   6: 9.909 ns/op
Iteration   7: 9.904 ns/op
Iteration   8: 9.896 ns/op
Iteration   9: 9.909 ns/op
Iteration  10: 9.900 ns/op
Iteration  11: 9.904 ns/op
Iteration  12: 9.920 ns/op
Iteration  13: 9.892 ns/op
Iteration  14: 9.917 ns/op
Iteration  15: 9.906 ns/op
Iteration  16: 9.897 ns/op
Iteration  17: 9.913 ns/op
Iteration  18: 9.912 ns/op
Iteration  19: 9.897 ns/op
Iteration  20: 9.905 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.078 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 10.071 ns/op
# Warmup Iteration   4: 10.071 ns/op
# Warmup Iteration   5: 10.060 ns/op
Iteration   1: 10.081 ns/op
Iteration   2: 10.056 ns/op
Iteration   3: 10.084 ns/op
Iteration   4: 10.091 ns/op
Iteration   5: 10.070 ns/op
Iteration   6: 10.063 ns/op
Iteration   7: 10.075 ns/op
Iteration   8: 10.069 ns/op
Iteration   9: 10.068 ns/op
Iteration  10: 10.078 ns/op
Iteration  11: 10.063 ns/op
Iteration  12: 10.065 ns/op
Iteration  13: 10.065 ns/op
Iteration  14: 10.059 ns/op
Iteration  15: 10.099 ns/op
Iteration  16: 10.061 ns/op
Iteration  17: 10.094 ns/op
Iteration  18: 10.081 ns/op
Iteration  19: 10.101 ns/op
Iteration  20: 10.074 ns/op


Result "benchmark.StringContains.stringContains":
  9.964 ±(99.9%) 0.026 ns/op [Average]
  (min, avg, max) = (9.870, 9.964, 10.101), stdev = 0.076
  CI (99.9%): [9.938, 9.989] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  <F>http  avgt  100  130.272 ± 0.893  ns/op
StringContains.stringContains     http  <F>http  avgt  100    9.964 ± 0.026  ns/op

Benchmark result is saved to http_8_0.5_10.csv
