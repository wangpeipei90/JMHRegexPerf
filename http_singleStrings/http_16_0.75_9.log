# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :zgzI[Jk6D'http)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 221.177 ns/op
# Warmup Iteration   2: 143.591 ns/op
# Warmup Iteration   3: 125.995 ns/op
# Warmup Iteration   4: 125.156 ns/op
# Warmup Iteration   5: 125.956 ns/op
Iteration   1: 127.193 ns/op
Iteration   2: 123.613 ns/op
Iteration   3: 123.688 ns/op
Iteration   4: 123.632 ns/op
Iteration   5: 124.245 ns/op
Iteration   6: 123.592 ns/op
Iteration   7: 123.710 ns/op
Iteration   8: 123.707 ns/op
Iteration   9: 123.547 ns/op
Iteration  10: 123.270 ns/op
Iteration  11: 123.360 ns/op
Iteration  12: 124.514 ns/op
Iteration  13: 123.362 ns/op
Iteration  14: 123.327 ns/op
Iteration  15: 123.336 ns/op
Iteration  16: 123.674 ns/op
Iteration  17: 123.404 ns/op
Iteration  18: 123.264 ns/op
Iteration  19: 123.300 ns/op
Iteration  20: 123.842 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 211.551 ns/op
# Warmup Iteration   2: 144.653 ns/op
# Warmup Iteration   3: 127.837 ns/op
# Warmup Iteration   4: 128.246 ns/op
# Warmup Iteration   5: 128.221 ns/op
Iteration   1: 130.490 ns/op
Iteration   2: 125.852 ns/op
Iteration   3: 125.857 ns/op
Iteration   4: 125.869 ns/op
Iteration   5: 126.515 ns/op
Iteration   6: 125.765 ns/op
Iteration   7: 125.777 ns/op
Iteration   8: 125.886 ns/op
Iteration   9: 125.784 ns/op
Iteration  10: 125.503 ns/op
Iteration  11: 125.471 ns/op
Iteration  12: 125.510 ns/op
Iteration  13: 125.576 ns/op
Iteration  14: 125.939 ns/op
Iteration  15: 125.586 ns/op
Iteration  16: 125.631 ns/op
Iteration  17: 125.540 ns/op
Iteration  18: 126.160 ns/op
Iteration  19: 125.771 ns/op
Iteration  20: 125.950 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 216.989 ns/op
# Warmup Iteration   2: 143.487 ns/op
# Warmup Iteration   3: 128.932 ns/op
# Warmup Iteration   4: 127.178 ns/op
# Warmup Iteration   5: 128.080 ns/op
Iteration   1: 129.195 ns/op
Iteration   2: 125.517 ns/op
Iteration   3: 125.464 ns/op
Iteration   4: 125.684 ns/op
Iteration   5: 126.701 ns/op
Iteration   6: 126.184 ns/op
Iteration   7: 127.037 ns/op
Iteration   8: 125.565 ns/op
Iteration   9: 125.364 ns/op
Iteration  10: 126.313 ns/op
Iteration  11: 125.076 ns/op
Iteration  12: 125.334 ns/op
Iteration  13: 125.458 ns/op
Iteration  14: 125.747 ns/op
Iteration  15: 125.382 ns/op
Iteration  16: 125.358 ns/op
Iteration  17: 125.586 ns/op
Iteration  18: 125.816 ns/op
Iteration  19: 125.366 ns/op
Iteration  20: 125.555 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 220.054 ns/op
# Warmup Iteration   2: 142.633 ns/op
# Warmup Iteration   3: 127.655 ns/op
# Warmup Iteration   4: 126.998 ns/op
# Warmup Iteration   5: 127.583 ns/op
Iteration   1: 128.820 ns/op
Iteration   2: 125.506 ns/op
Iteration   3: 125.497 ns/op
Iteration   4: 125.411 ns/op
Iteration   5: 125.877 ns/op
Iteration   6: 125.464 ns/op
Iteration   7: 125.394 ns/op
Iteration   8: 125.397 ns/op
Iteration   9: 124.986 ns/op
Iteration  10: 124.826 ns/op
Iteration  11: 124.900 ns/op
Iteration  12: 125.824 ns/op
Iteration  13: 125.268 ns/op
Iteration  14: 124.996 ns/op
Iteration  15: 124.893 ns/op
Iteration  16: 125.223 ns/op
Iteration  17: 125.145 ns/op
Iteration  18: 125.366 ns/op
Iteration  19: 125.244 ns/op
Iteration  20: 125.086 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 216.949 ns/op
# Warmup Iteration   2: 143.313 ns/op
# Warmup Iteration   3: 127.713 ns/op
# Warmup Iteration   4: 127.017 ns/op
# Warmup Iteration   5: 127.632 ns/op
Iteration   1: 129.036 ns/op
Iteration   2: 125.402 ns/op
Iteration   3: 125.417 ns/op
Iteration   4: 125.532 ns/op
Iteration   5: 125.997 ns/op
Iteration   6: 125.376 ns/op
Iteration   7: 125.359 ns/op
Iteration   8: 125.396 ns/op
Iteration   9: 125.331 ns/op
Iteration  10: 125.106 ns/op
Iteration  11: 124.978 ns/op
Iteration  12: 125.130 ns/op
Iteration  13: 125.518 ns/op
Iteration  14: 125.602 ns/op
Iteration  15: 125.976 ns/op
Iteration  16: 125.419 ns/op
Iteration  17: 125.348 ns/op
Iteration  18: 125.945 ns/op
Iteration  19: 125.258 ns/op
Iteration  20: 125.299 ns/op


Result "benchmark.StringContains.regexMatches":
  125.353 ±(99.9%) 0.411 ns/op [Average]
  (min, avg, max) = (123.264, 125.353, 130.490), stdev = 1.212
  CI (99.9%): [124.942, 125.764] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :zgzI[Jk6D'http)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.482 ns/op
# Warmup Iteration   2: 9.724 ns/op
# Warmup Iteration   3: 9.939 ns/op
# Warmup Iteration   4: 9.895 ns/op
# Warmup Iteration   5: 9.911 ns/op
Iteration   1: 9.912 ns/op
Iteration   2: 9.918 ns/op
Iteration   3: 9.921 ns/op
Iteration   4: 9.906 ns/op
Iteration   5: 9.931 ns/op
Iteration   6: 9.924 ns/op
Iteration   7: 9.916 ns/op
Iteration   8: 9.926 ns/op
Iteration   9: 9.911 ns/op
Iteration  10: 9.899 ns/op
Iteration  11: 9.931 ns/op
Iteration  12: 9.929 ns/op
Iteration  13: 9.922 ns/op
Iteration  14: 9.920 ns/op
Iteration  15: 9.950 ns/op
Iteration  16: 9.922 ns/op
Iteration  17: 9.942 ns/op
Iteration  18: 9.915 ns/op
Iteration  19: 9.936 ns/op
Iteration  20: 9.934 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.236 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.890 ns/op
# Warmup Iteration   4: 9.878 ns/op
# Warmup Iteration   5: 9.876 ns/op
Iteration   1: 9.863 ns/op
Iteration   2: 9.880 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.875 ns/op
Iteration   5: 9.875 ns/op
Iteration   6: 9.877 ns/op
Iteration   7: 9.872 ns/op
Iteration   8: 9.897 ns/op
Iteration   9: 9.884 ns/op
Iteration  10: 9.897 ns/op
Iteration  11: 9.867 ns/op
Iteration  12: 9.877 ns/op
Iteration  13: 9.877 ns/op
Iteration  14: 9.874 ns/op
Iteration  15: 9.875 ns/op
Iteration  16: 9.869 ns/op
Iteration  17: 9.878 ns/op
Iteration  18: 9.869 ns/op
Iteration  19: 9.866 ns/op
Iteration  20: 9.877 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.471 ns/op
# Warmup Iteration   2: 9.723 ns/op
# Warmup Iteration   3: 9.902 ns/op
# Warmup Iteration   4: 9.910 ns/op
# Warmup Iteration   5: 9.886 ns/op
Iteration   1: 9.910 ns/op
Iteration   2: 9.903 ns/op
Iteration   3: 9.904 ns/op
Iteration   4: 9.913 ns/op
Iteration   5: 9.900 ns/op
Iteration   6: 9.891 ns/op
Iteration   7: 9.891 ns/op
Iteration   8: 9.923 ns/op
Iteration   9: 9.895 ns/op
Iteration  10: 9.909 ns/op
Iteration  11: 9.891 ns/op
Iteration  12: 9.892 ns/op
Iteration  13: 9.897 ns/op
Iteration  14: 9.887 ns/op
Iteration  15: 9.888 ns/op
Iteration  16: 9.882 ns/op
Iteration  17: 9.889 ns/op
Iteration  18: 9.871 ns/op
Iteration  19: 9.903 ns/op
Iteration  20: 9.890 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.227 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.940 ns/op
# Warmup Iteration   4: 9.936 ns/op
# Warmup Iteration   5: 9.956 ns/op
Iteration   1: 9.946 ns/op
Iteration   2: 9.961 ns/op
Iteration   3: 9.946 ns/op
Iteration   4: 9.953 ns/op
Iteration   5: 9.937 ns/op
Iteration   6: 9.950 ns/op
Iteration   7: 9.967 ns/op
Iteration   8: 9.969 ns/op
Iteration   9: 9.966 ns/op
Iteration  10: 9.946 ns/op
Iteration  11: 9.950 ns/op
Iteration  12: 9.941 ns/op
Iteration  13: 9.954 ns/op
Iteration  14: 9.955 ns/op
Iteration  15: 9.928 ns/op
Iteration  16: 9.954 ns/op
Iteration  17: 9.941 ns/op
Iteration  18: 9.941 ns/op
Iteration  19: 9.952 ns/op
Iteration  20: 9.944 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.487 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.811 ns/op
# Warmup Iteration   4: 9.803 ns/op
# Warmup Iteration   5: 9.803 ns/op
Iteration   1: 9.796 ns/op
Iteration   2: 9.782 ns/op
Iteration   3: 9.799 ns/op
Iteration   4: 9.777 ns/op
Iteration   5: 9.804 ns/op
Iteration   6: 9.779 ns/op
Iteration   7: 9.799 ns/op
Iteration   8: 9.802 ns/op
Iteration   9: 9.805 ns/op
Iteration  10: 9.798 ns/op
Iteration  11: 9.797 ns/op
Iteration  12: 9.805 ns/op
Iteration  13: 9.811 ns/op
Iteration  14: 9.814 ns/op
Iteration  15: 9.801 ns/op
Iteration  16: 9.798 ns/op
Iteration  17: 9.787 ns/op
Iteration  18: 9.819 ns/op
Iteration  19: 9.812 ns/op
Iteration  20: 9.803 ns/op


Result "benchmark.StringContains.stringContains":
  9.889 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (9.777, 9.889, 9.969), stdev = 0.053
  CI (99.9%): [9.871, 9.907] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :zgzI[Jk6D'http  avgt  100  125.353 ± 0.411  ns/op
StringContains.stringContains     http  :zgzI[Jk6D'http  avgt  100    9.889 ± 0.018  ns/op

Benchmark result is saved to http_16_0.75_9.csv
