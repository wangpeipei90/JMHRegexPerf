# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = D:+.7|\]http,~S!)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 268.412 ns/op
# Warmup Iteration   2: 229.214 ns/op
# Warmup Iteration   3: 195.700 ns/op
# Warmup Iteration   4: 195.353 ns/op
# Warmup Iteration   5: 196.077 ns/op
Iteration   1: 192.491 ns/op
Iteration   2: 197.220 ns/op
Iteration   3: 198.691 ns/op
Iteration   4: 193.397 ns/op
Iteration   5: 193.447 ns/op
Iteration   6: 192.456 ns/op
Iteration   7: 193.314 ns/op
Iteration   8: 193.512 ns/op
Iteration   9: 193.407 ns/op
Iteration  10: 193.432 ns/op
Iteration  11: 192.430 ns/op
Iteration  12: 193.322 ns/op
Iteration  13: 194.506 ns/op
Iteration  14: 193.570 ns/op
Iteration  15: 193.670 ns/op
Iteration  16: 192.474 ns/op
Iteration  17: 193.501 ns/op
Iteration  18: 197.458 ns/op
Iteration  19: 194.517 ns/op
Iteration  20: 193.294 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 263.658 ns/op
# Warmup Iteration   2: 209.154 ns/op
# Warmup Iteration   3: 172.039 ns/op
# Warmup Iteration   4: 173.889 ns/op
# Warmup Iteration   5: 173.117 ns/op
Iteration   1: 175.438 ns/op
Iteration   2: 175.811 ns/op
Iteration   3: 172.900 ns/op
Iteration   4: 171.041 ns/op
Iteration   5: 170.021 ns/op
Iteration   6: 172.877 ns/op
Iteration   7: 171.293 ns/op
Iteration   8: 172.472 ns/op
Iteration   9: 172.377 ns/op
Iteration  10: 171.479 ns/op
Iteration  11: 171.005 ns/op
Iteration  12: 170.659 ns/op
Iteration  13: 172.006 ns/op
Iteration  14: 170.177 ns/op
Iteration  15: 170.706 ns/op
Iteration  16: 170.256 ns/op
Iteration  17: 170.148 ns/op
Iteration  18: 170.478 ns/op
Iteration  19: 170.406 ns/op
Iteration  20: 170.413 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 242.121 ns/op
# Warmup Iteration   2: 181.301 ns/op
# Warmup Iteration   3: 152.716 ns/op
# Warmup Iteration   4: 153.138 ns/op
# Warmup Iteration   5: 154.599 ns/op
Iteration   1: 155.601 ns/op
Iteration   2: 153.522 ns/op
Iteration   3: 152.631 ns/op
Iteration   4: 151.879 ns/op
Iteration   5: 151.927 ns/op
Iteration   6: 151.903 ns/op
Iteration   7: 152.628 ns/op
Iteration   8: 152.290 ns/op
Iteration   9: 151.822 ns/op
Iteration  10: 152.054 ns/op
Iteration  11: 152.145 ns/op
Iteration  12: 151.390 ns/op
Iteration  13: 151.602 ns/op
Iteration  14: 151.543 ns/op
Iteration  15: 151.582 ns/op
Iteration  16: 151.592 ns/op
Iteration  17: 151.650 ns/op
Iteration  18: 151.708 ns/op
Iteration  19: 151.481 ns/op
Iteration  20: 151.657 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 258.277 ns/op
# Warmup Iteration   2: 210.118 ns/op
# Warmup Iteration   3: 191.670 ns/op
# Warmup Iteration   4: 192.369 ns/op
# Warmup Iteration   5: 192.896 ns/op
Iteration   1: 194.050 ns/op
Iteration   2: 189.796 ns/op
Iteration   3: 195.156 ns/op
Iteration   4: 190.627 ns/op
Iteration   5: 190.497 ns/op
Iteration   6: 190.291 ns/op
Iteration   7: 189.781 ns/op
Iteration   8: 190.687 ns/op
Iteration   9: 190.834 ns/op
Iteration  10: 193.536 ns/op
Iteration  11: 192.072 ns/op
Iteration  12: 189.702 ns/op
Iteration  13: 190.814 ns/op
Iteration  14: 190.754 ns/op
Iteration  15: 190.120 ns/op
Iteration  16: 190.255 ns/op
Iteration  17: 190.251 ns/op
Iteration  18: 189.661 ns/op
Iteration  19: 190.150 ns/op
Iteration  20: 190.327 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 240.303 ns/op
# Warmup Iteration   2: 180.049 ns/op
# Warmup Iteration   3: 152.195 ns/op
# Warmup Iteration   4: 152.630 ns/op
# Warmup Iteration   5: 156.588 ns/op
Iteration   1: 155.049 ns/op
Iteration   2: 151.768 ns/op
Iteration   3: 151.464 ns/op
Iteration   4: 151.407 ns/op
Iteration   5: 151.436 ns/op
Iteration   6: 151.356 ns/op
Iteration   7: 151.492 ns/op
Iteration   8: 151.469 ns/op
Iteration   9: 151.387 ns/op
Iteration  10: 151.690 ns/op
Iteration  11: 152.273 ns/op
Iteration  12: 151.655 ns/op
Iteration  13: 151.183 ns/op
Iteration  14: 151.058 ns/op
Iteration  15: 151.088 ns/op
Iteration  16: 152.180 ns/op
Iteration  17: 154.431 ns/op
Iteration  18: 151.063 ns/op
Iteration  19: 151.104 ns/op
Iteration  20: 151.061 ns/op


Result "benchmark.StringContains.regexMatches":
  172.096 ±(99.9%) 6.206 ns/op [Average]
  (min, avg, max) = (151.058, 172.096, 198.691), stdev = 18.299
  CI (99.9%): [165.890, 178.303] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = D:+.7|\]http,~S!)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.436 ns/op
# Warmup Iteration   2: 9.723 ns/op
# Warmup Iteration   3: 9.961 ns/op
# Warmup Iteration   4: 9.960 ns/op
# Warmup Iteration   5: 9.958 ns/op
Iteration   1: 9.971 ns/op
Iteration   2: 9.925 ns/op
Iteration   3: 9.954 ns/op
Iteration   4: 9.969 ns/op
Iteration   5: 9.959 ns/op
Iteration   6: 9.952 ns/op
Iteration   7: 9.949 ns/op
Iteration   8: 9.963 ns/op
Iteration   9: 9.945 ns/op
Iteration  10: 9.957 ns/op
Iteration  11: 9.927 ns/op
Iteration  12: 9.964 ns/op
Iteration  13: 9.956 ns/op
Iteration  14: 9.947 ns/op
Iteration  15: 9.947 ns/op
Iteration  16: 9.957 ns/op
Iteration  17: 9.944 ns/op
Iteration  18: 9.938 ns/op
Iteration  19: 9.966 ns/op
Iteration  20: 9.956 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.215 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.861 ns/op
# Warmup Iteration   4: 9.862 ns/op
# Warmup Iteration   5: 9.866 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.872 ns/op
Iteration   3: 9.854 ns/op
Iteration   4: 9.884 ns/op
Iteration   5: 9.853 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.870 ns/op
Iteration   8: 9.876 ns/op
Iteration   9: 9.868 ns/op
Iteration  10: 9.875 ns/op
Iteration  11: 9.869 ns/op
Iteration  12: 9.869 ns/op
Iteration  13: 9.883 ns/op
Iteration  14: 9.875 ns/op
Iteration  15: 9.871 ns/op
Iteration  16: 9.874 ns/op
Iteration  17: 9.872 ns/op
Iteration  18: 9.872 ns/op
Iteration  19: 9.864 ns/op
Iteration  20: 9.889 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.220 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.970 ns/op
# Warmup Iteration   4: 9.967 ns/op
# Warmup Iteration   5: 9.988 ns/op
Iteration   1: 9.974 ns/op
Iteration   2: 9.976 ns/op
Iteration   3: 9.976 ns/op
Iteration   4: 9.999 ns/op
Iteration   5: 9.970 ns/op
Iteration   6: 9.973 ns/op
Iteration   7: 9.971 ns/op
Iteration   8: 9.976 ns/op
Iteration   9: 9.982 ns/op
Iteration  10: 10.003 ns/op
Iteration  11: 9.989 ns/op
Iteration  12: 9.997 ns/op
Iteration  13: 9.999 ns/op
Iteration  14: 9.997 ns/op
Iteration  15: 10.006 ns/op
Iteration  16: 9.988 ns/op
Iteration  17: 9.976 ns/op
Iteration  18: 9.973 ns/op
Iteration  19: 9.991 ns/op
Iteration  20: 9.992 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.478 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.868 ns/op
# Warmup Iteration   4: 9.885 ns/op
# Warmup Iteration   5: 9.856 ns/op
Iteration   1: 9.865 ns/op
Iteration   2: 9.864 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.868 ns/op
Iteration   5: 9.860 ns/op
Iteration   6: 9.864 ns/op
Iteration   7: 9.879 ns/op
Iteration   8: 9.866 ns/op
Iteration   9: 9.882 ns/op
Iteration  10: 9.874 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 9.867 ns/op
Iteration  13: 9.872 ns/op
Iteration  14: 9.878 ns/op
Iteration  15: 9.877 ns/op
Iteration  16: 9.873 ns/op
Iteration  17: 9.874 ns/op
Iteration  18: 9.870 ns/op
Iteration  19: 9.876 ns/op
Iteration  20: 9.881 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.482 ns/op
# Warmup Iteration   2: 9.723 ns/op
# Warmup Iteration   3: 9.975 ns/op
# Warmup Iteration   4: 9.964 ns/op
# Warmup Iteration   5: 9.947 ns/op
Iteration   1: 9.967 ns/op
Iteration   2: 9.964 ns/op
Iteration   3: 9.962 ns/op
Iteration   4: 9.971 ns/op
Iteration   5: 9.961 ns/op
Iteration   6: 9.968 ns/op
Iteration   7: 9.957 ns/op
Iteration   8: 9.970 ns/op
Iteration   9: 9.952 ns/op
Iteration  10: 9.974 ns/op
Iteration  11: 9.964 ns/op
Iteration  12: 9.972 ns/op
Iteration  13: 9.966 ns/op
Iteration  14: 9.966 ns/op
Iteration  15: 9.967 ns/op
Iteration  16: 9.979 ns/op
Iteration  17: 9.970 ns/op
Iteration  18: 9.981 ns/op
Iteration  19: 9.981 ns/op
Iteration  20: 9.976 ns/op


Result "benchmark.StringContains.stringContains":
  9.930 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (9.853, 9.930, 10.006), stdev = 0.050
  CI (99.9%): [9.913, 9.947] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  D:+.7|\]http,~S!  avgt  100  172.096 ± 6.206  ns/op
StringContains.stringContains     http  D:+.7|\]http,~S!  avgt  100    9.930 ± 0.017  ns/op

Benchmark result is saved to http_16_0.5_13.csv
