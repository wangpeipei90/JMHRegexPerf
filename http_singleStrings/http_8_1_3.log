# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Y*{GKuuB)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 180.740 ns/op
# Warmup Iteration   2: 104.761 ns/op
# Warmup Iteration   3: 99.509 ns/op
# Warmup Iteration   4: 98.596 ns/op
# Warmup Iteration   5: 99.755 ns/op
Iteration   1: 97.269 ns/op
Iteration   2: 96.898 ns/op
Iteration   3: 97.225 ns/op
Iteration   4: 96.816 ns/op
Iteration   5: 97.348 ns/op
Iteration   6: 96.750 ns/op
Iteration   7: 97.259 ns/op
Iteration   8: 97.191 ns/op
Iteration   9: 96.615 ns/op
Iteration  10: 97.545 ns/op
Iteration  11: 97.271 ns/op
Iteration  12: 96.857 ns/op
Iteration  13: 97.197 ns/op
Iteration  14: 96.795 ns/op
Iteration  15: 96.965 ns/op
Iteration  16: 96.880 ns/op
Iteration  17: 96.684 ns/op
Iteration  18: 96.919 ns/op
Iteration  19: 96.647 ns/op
Iteration  20: 96.869 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 177.200 ns/op
# Warmup Iteration   2: 103.735 ns/op
# Warmup Iteration   3: 100.530 ns/op
# Warmup Iteration   4: 99.842 ns/op
# Warmup Iteration   5: 100.878 ns/op
Iteration   1: 98.626 ns/op
Iteration   2: 98.080 ns/op
Iteration   3: 98.553 ns/op
Iteration   4: 98.161 ns/op
Iteration   5: 98.754 ns/op
Iteration   6: 98.097 ns/op
Iteration   7: 98.251 ns/op
Iteration   8: 99.008 ns/op
Iteration   9: 98.139 ns/op
Iteration  10: 98.414 ns/op
Iteration  11: 98.189 ns/op
Iteration  12: 98.080 ns/op
Iteration  13: 98.183 ns/op
Iteration  14: 97.936 ns/op
Iteration  15: 98.283 ns/op
Iteration  16: 98.094 ns/op
Iteration  17: 98.655 ns/op
Iteration  18: 98.115 ns/op
Iteration  19: 98.141 ns/op
Iteration  20: 98.426 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 178.023 ns/op
# Warmup Iteration   2: 104.415 ns/op
# Warmup Iteration   3: 99.776 ns/op
# Warmup Iteration   4: 99.013 ns/op
# Warmup Iteration   5: 99.938 ns/op
Iteration   1: 97.795 ns/op
Iteration   2: 97.303 ns/op
Iteration   3: 97.745 ns/op
Iteration   4: 97.325 ns/op
Iteration   5: 97.726 ns/op
Iteration   6: 97.199 ns/op
Iteration   7: 97.061 ns/op
Iteration   8: 97.173 ns/op
Iteration   9: 97.042 ns/op
Iteration  10: 97.209 ns/op
Iteration  11: 98.074 ns/op
Iteration  12: 97.001 ns/op
Iteration  13: 97.195 ns/op
Iteration  14: 97.014 ns/op
Iteration  15: 97.301 ns/op
Iteration  16: 97.397 ns/op
Iteration  17: 98.102 ns/op
Iteration  18: 97.583 ns/op
Iteration  19: 97.191 ns/op
Iteration  20: 97.487 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 177.652 ns/op
# Warmup Iteration   2: 103.817 ns/op
# Warmup Iteration   3: 99.930 ns/op
# Warmup Iteration   4: 99.212 ns/op
# Warmup Iteration   5: 100.234 ns/op
Iteration   1: 97.926 ns/op
Iteration   2: 97.519 ns/op
Iteration   3: 97.947 ns/op
Iteration   4: 97.529 ns/op
Iteration   5: 97.995 ns/op
Iteration   6: 97.780 ns/op
Iteration   7: 97.349 ns/op
Iteration   8: 97.476 ns/op
Iteration   9: 97.274 ns/op
Iteration  10: 97.539 ns/op
Iteration  11: 98.601 ns/op
Iteration  12: 97.686 ns/op
Iteration  13: 97.875 ns/op
Iteration  14: 97.798 ns/op
Iteration  15: 97.915 ns/op
Iteration  16: 97.681 ns/op
Iteration  17: 97.837 ns/op
Iteration  18: 97.782 ns/op
Iteration  19: 97.587 ns/op
Iteration  20: 98.181 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 177.128 ns/op
# Warmup Iteration   2: 102.337 ns/op
# Warmup Iteration   3: 99.341 ns/op
# Warmup Iteration   4: 100.104 ns/op
# Warmup Iteration   5: 98.361 ns/op
Iteration   1: 97.346 ns/op
Iteration   2: 96.903 ns/op
Iteration   3: 97.820 ns/op
Iteration   4: 96.876 ns/op
Iteration   5: 97.408 ns/op
Iteration   6: 97.128 ns/op
Iteration   7: 96.623 ns/op
Iteration   8: 96.857 ns/op
Iteration   9: 97.299 ns/op
Iteration  10: 96.952 ns/op
Iteration  11: 97.229 ns/op
Iteration  12: 96.948 ns/op
Iteration  13: 97.241 ns/op
Iteration  14: 96.967 ns/op
Iteration  15: 96.760 ns/op
Iteration  16: 97.022 ns/op
Iteration  17: 96.971 ns/op
Iteration  18: 97.259 ns/op
Iteration  19: 97.537 ns/op
Iteration  20: 96.942 ns/op


Result "benchmark.StringContains.regexMatches":
  97.515 ±(99.9%) 0.190 ns/op [Average]
  (min, avg, max) = (96.615, 97.515, 99.008), stdev = 0.560
  CI (99.9%): [97.325, 97.705] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Y*{GKuuB)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.437 ns/op
# Warmup Iteration   2: 9.067 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.962 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.964 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.962 ns/op
Iteration  20: 8.966 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.455 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.969 ns/op
# Warmup Iteration   5: 8.974 ns/op
Iteration   1: 8.963 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.964 ns/op
Iteration   5: 8.974 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.970 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.968 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.969 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.970 ns/op
Iteration  20: 8.969 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.437 ns/op
# Warmup Iteration   2: 9.065 ns/op
# Warmup Iteration   3: 8.963 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.965 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.967 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.964 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.963 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.969 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.964 ns/op
Iteration  20: 8.966 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.471 ns/op
# Warmup Iteration   2: 9.070 ns/op
# Warmup Iteration   3: 8.975 ns/op
# Warmup Iteration   4: 8.969 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.969 ns/op
Iteration   3: 8.968 ns/op
Iteration   4: 8.969 ns/op
Iteration   5: 8.972 ns/op
Iteration   6: 8.970 ns/op
Iteration   7: 8.969 ns/op
Iteration   8: 8.983 ns/op
Iteration   9: 8.972 ns/op
Iteration  10: 8.969 ns/op
Iteration  11: 8.972 ns/op
Iteration  12: 8.975 ns/op
Iteration  13: 8.971 ns/op
Iteration  14: 8.969 ns/op
Iteration  15: 8.970 ns/op
Iteration  16: 8.970 ns/op
Iteration  17: 8.972 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.969 ns/op
Iteration  20: 8.971 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.454 ns/op
# Warmup Iteration   2: 9.052 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.964 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.963 ns/op
Iteration   3: 8.965 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.963 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.964 ns/op
Iteration   8: 8.965 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.964 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.963 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.963 ns/op
Iteration  16: 8.963 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.965 ns/op


Result "benchmark.StringContains.stringContains":
  8.967 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (8.962, 8.967, 8.983), stdev = 0.003
  CI (99.9%): [8.966, 8.968] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  Y*{GKuuB  avgt  100  97.515 ± 0.190  ns/op
StringContains.stringContains     http  Y*{GKuuB  avgt  100   8.967 ± 0.001  ns/op

Benchmark result is saved to http_8_1_3.csv
