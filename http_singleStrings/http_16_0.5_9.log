# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = uL?UH`gThttp]8IL)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 274.328 ns/op
# Warmup Iteration   2: 232.482 ns/op
# Warmup Iteration   3: 194.160 ns/op
# Warmup Iteration   4: 194.748 ns/op
# Warmup Iteration   5: 195.708 ns/op
Iteration   1: 191.891 ns/op
Iteration   2: 197.064 ns/op
Iteration   3: 198.750 ns/op
Iteration   4: 192.941 ns/op
Iteration   5: 192.868 ns/op
Iteration   6: 191.894 ns/op
Iteration   7: 192.793 ns/op
Iteration   8: 192.883 ns/op
Iteration   9: 192.824 ns/op
Iteration  10: 192.903 ns/op
Iteration  11: 191.856 ns/op
Iteration  12: 193.146 ns/op
Iteration  13: 193.151 ns/op
Iteration  14: 193.701 ns/op
Iteration  15: 192.483 ns/op
Iteration  16: 191.904 ns/op
Iteration  17: 192.510 ns/op
Iteration  18: 192.279 ns/op
Iteration  19: 192.471 ns/op
Iteration  20: 192.749 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 264.117 ns/op
# Warmup Iteration   2: 212.101 ns/op
# Warmup Iteration   3: 191.071 ns/op
# Warmup Iteration   4: 191.899 ns/op
# Warmup Iteration   5: 192.769 ns/op
Iteration   1: 193.461 ns/op
Iteration   2: 189.311 ns/op
Iteration   3: 194.851 ns/op
Iteration   4: 190.393 ns/op
Iteration   5: 190.199 ns/op
Iteration   6: 190.011 ns/op
Iteration   7: 189.353 ns/op
Iteration   8: 190.291 ns/op
Iteration   9: 190.392 ns/op
Iteration  10: 190.400 ns/op
Iteration  11: 190.460 ns/op
Iteration  12: 190.280 ns/op
Iteration  13: 189.285 ns/op
Iteration  14: 190.254 ns/op
Iteration  15: 189.698 ns/op
Iteration  16: 189.687 ns/op
Iteration  17: 189.867 ns/op
Iteration  18: 189.353 ns/op
Iteration  19: 190.008 ns/op
Iteration  20: 190.198 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 271.766 ns/op
# Warmup Iteration   2: 217.772 ns/op
# Warmup Iteration   3: 192.789 ns/op
# Warmup Iteration   4: 191.913 ns/op
# Warmup Iteration   5: 192.763 ns/op
Iteration   1: 189.587 ns/op
Iteration   2: 193.651 ns/op
Iteration   3: 194.857 ns/op
Iteration   4: 190.354 ns/op
Iteration   5: 190.221 ns/op
Iteration   6: 191.207 ns/op
Iteration   7: 190.337 ns/op
Iteration   8: 190.369 ns/op
Iteration   9: 190.552 ns/op
Iteration  10: 190.495 ns/op
Iteration  11: 190.356 ns/op
Iteration  12: 189.477 ns/op
Iteration  13: 190.397 ns/op
Iteration  14: 191.169 ns/op
Iteration  15: 192.645 ns/op
Iteration  16: 189.896 ns/op
Iteration  17: 189.888 ns/op
Iteration  18: 189.416 ns/op
Iteration  19: 190.036 ns/op
Iteration  20: 190.350 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 265.712 ns/op
# Warmup Iteration   2: 210.186 ns/op
# Warmup Iteration   3: 171.932 ns/op
# Warmup Iteration   4: 172.374 ns/op
# Warmup Iteration   5: 173.166 ns/op
Iteration   1: 174.035 ns/op
Iteration   2: 175.310 ns/op
Iteration   3: 171.062 ns/op
Iteration   4: 171.175 ns/op
Iteration   5: 170.776 ns/op
Iteration   6: 171.048 ns/op
Iteration   7: 171.034 ns/op
Iteration   8: 171.093 ns/op
Iteration   9: 171.132 ns/op
Iteration  10: 172.056 ns/op
Iteration  11: 171.230 ns/op
Iteration  12: 171.310 ns/op
Iteration  13: 171.437 ns/op
Iteration  14: 171.049 ns/op
Iteration  15: 171.049 ns/op
Iteration  16: 170.851 ns/op
Iteration  17: 170.408 ns/op
Iteration  18: 170.858 ns/op
Iteration  19: 170.882 ns/op
Iteration  20: 171.151 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 268.816 ns/op
# Warmup Iteration   2: 218.907 ns/op
# Warmup Iteration   3: 193.803 ns/op
# Warmup Iteration   4: 194.354 ns/op
# Warmup Iteration   5: 195.387 ns/op
Iteration   1: 193.809 ns/op
Iteration   2: 196.374 ns/op
Iteration   3: 197.628 ns/op
Iteration   4: 193.216 ns/op
Iteration   5: 192.809 ns/op
Iteration   6: 191.901 ns/op
Iteration   7: 192.822 ns/op
Iteration   8: 193.183 ns/op
Iteration   9: 192.721 ns/op
Iteration  10: 192.945 ns/op
Iteration  11: 192.998 ns/op
Iteration  12: 191.996 ns/op
Iteration  13: 193.027 ns/op
Iteration  14: 195.497 ns/op
Iteration  15: 192.928 ns/op
Iteration  16: 193.158 ns/op
Iteration  17: 192.188 ns/op
Iteration  18: 192.764 ns/op
Iteration  19: 193.094 ns/op
Iteration  20: 193.087 ns/op


Result "benchmark.StringContains.regexMatches":
  187.832 ±(99.9%) 2.863 ns/op [Average]
  (min, avg, max) = (170.408, 187.832, 198.750), stdev = 8.441
  CI (99.9%): [184.969, 190.694] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = uL?UH`gThttp]8IL)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.475 ns/op
# Warmup Iteration   2: 9.731 ns/op
# Warmup Iteration   3: 9.850 ns/op
# Warmup Iteration   4: 9.847 ns/op
# Warmup Iteration   5: 9.842 ns/op
Iteration   1: 9.832 ns/op
Iteration   2: 9.823 ns/op
Iteration   3: 9.840 ns/op
Iteration   4: 9.829 ns/op
Iteration   5: 9.821 ns/op
Iteration   6: 9.824 ns/op
Iteration   7: 9.811 ns/op
Iteration   8: 9.819 ns/op
Iteration   9: 9.822 ns/op
Iteration  10: 9.825 ns/op
Iteration  11: 9.830 ns/op
Iteration  12: 17.368 ns/op
Iteration  13: 17.369 ns/op
Iteration  14: 17.369 ns/op
Iteration  15: 17.368 ns/op
Iteration  16: 17.371 ns/op
Iteration  17: 17.369 ns/op
Iteration  18: 17.370 ns/op
Iteration  19: 17.368 ns/op
Iteration  20: 17.370 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.487 ns/op
# Warmup Iteration   2: 9.725 ns/op
# Warmup Iteration   3: 9.990 ns/op
# Warmup Iteration   4: 9.984 ns/op
# Warmup Iteration   5: 9.969 ns/op
Iteration   1: 9.980 ns/op
Iteration   2: 9.992 ns/op
Iteration   3: 9.986 ns/op
Iteration   4: 9.979 ns/op
Iteration   5: 9.983 ns/op
Iteration   6: 9.985 ns/op
Iteration   7: 9.974 ns/op
Iteration   8: 10.015 ns/op
Iteration   9: 9.993 ns/op
Iteration  10: 9.977 ns/op
Iteration  11: 9.995 ns/op
Iteration  12: 9.974 ns/op
Iteration  13: 9.972 ns/op
Iteration  14: 9.965 ns/op
Iteration  15: 9.961 ns/op
Iteration  16: 9.975 ns/op
Iteration  17: 9.968 ns/op
Iteration  18: 9.975 ns/op
Iteration  19: 9.978 ns/op
Iteration  20: 10.006 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.491 ns/op
# Warmup Iteration   2: 9.725 ns/op
# Warmup Iteration   3: 9.868 ns/op
# Warmup Iteration   4: 9.865 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.847 ns/op
Iteration   2: 9.845 ns/op
Iteration   3: 9.856 ns/op
Iteration   4: 9.845 ns/op
Iteration   5: 9.865 ns/op
Iteration   6: 9.855 ns/op
Iteration   7: 9.863 ns/op
Iteration   8: 9.855 ns/op
Iteration   9: 9.851 ns/op
Iteration  10: 9.864 ns/op
Iteration  11: 9.856 ns/op
Iteration  12: 9.867 ns/op
Iteration  13: 9.877 ns/op
Iteration  14: 9.863 ns/op
Iteration  15: 9.877 ns/op
Iteration  16: 9.869 ns/op
Iteration  17: 9.885 ns/op
Iteration  18: 9.842 ns/op
Iteration  19: 9.852 ns/op
Iteration  20: 9.869 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.458 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.864 ns/op
# Warmup Iteration   4: 9.862 ns/op
# Warmup Iteration   5: 9.861 ns/op
Iteration   1: 9.867 ns/op
Iteration   2: 9.854 ns/op
Iteration   3: 9.888 ns/op
Iteration   4: 9.874 ns/op
Iteration   5: 9.871 ns/op
Iteration   6: 9.878 ns/op
Iteration   7: 9.877 ns/op
Iteration   8: 9.874 ns/op
Iteration   9: 9.871 ns/op
Iteration  10: 9.860 ns/op
Iteration  11: 9.889 ns/op
Iteration  12: 9.871 ns/op
Iteration  13: 9.870 ns/op
Iteration  14: 9.869 ns/op
Iteration  15: 9.882 ns/op
Iteration  16: 9.885 ns/op
Iteration  17: 9.879 ns/op
Iteration  18: 9.864 ns/op
Iteration  19: 9.855 ns/op
Iteration  20: 9.866 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.454 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.887 ns/op
# Warmup Iteration   4: 9.883 ns/op
# Warmup Iteration   5: 9.883 ns/op
Iteration   1: 9.878 ns/op
Iteration   2: 9.884 ns/op
Iteration   3: 9.876 ns/op
Iteration   4: 9.877 ns/op
Iteration   5: 9.899 ns/op
Iteration   6: 9.884 ns/op
Iteration   7: 9.901 ns/op
Iteration   8: 9.873 ns/op
Iteration   9: 9.859 ns/op
Iteration  10: 9.886 ns/op
Iteration  11: 9.874 ns/op
Iteration  12: 9.883 ns/op
Iteration  13: 9.884 ns/op
Iteration  14: 9.871 ns/op
Iteration  15: 9.885 ns/op
Iteration  16: 9.879 ns/op
Iteration  17: 9.877 ns/op
Iteration  18: 9.881 ns/op
Iteration  19: 9.871 ns/op
Iteration  20: 9.887 ns/op


Result "benchmark.StringContains.stringContains":
  10.563 ±(99.9%) 0.730 ns/op [Average]
  (min, avg, max) = (9.811, 10.563, 17.371), stdev = 2.152
  CI (99.9%): [9.833, 11.293] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  uL?UH`gThttp]8IL  avgt  100  187.832 ± 2.863  ns/op
StringContains.stringContains     http  uL?UH`gThttp]8IL  avgt  100   10.563 ± 0.730  ns/op

Benchmark result is saved to http_16_0.5_9.csv
