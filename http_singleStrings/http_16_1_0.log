# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = EA~WgG\/Hll9B?dT)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 194.585 ns/op
# Warmup Iteration   2: 114.922 ns/op
# Warmup Iteration   3: 105.277 ns/op
# Warmup Iteration   4: 104.316 ns/op
# Warmup Iteration   5: 105.772 ns/op
Iteration   1: 102.209 ns/op
Iteration   2: 102.660 ns/op
Iteration   3: 102.154 ns/op
Iteration   4: 102.675 ns/op
Iteration   5: 102.230 ns/op
Iteration   6: 102.514 ns/op
Iteration   7: 101.791 ns/op
Iteration   8: 102.234 ns/op
Iteration   9: 101.820 ns/op
Iteration  10: 102.048 ns/op
Iteration  11: 101.860 ns/op
Iteration  12: 102.030 ns/op
Iteration  13: 101.830 ns/op
Iteration  14: 102.015 ns/op
Iteration  15: 101.836 ns/op
Iteration  16: 102.245 ns/op
Iteration  17: 102.057 ns/op
Iteration  18: 103.253 ns/op
Iteration  19: 102.225 ns/op
Iteration  20: 102.063 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 179.415 ns/op
# Warmup Iteration   2: 106.322 ns/op
# Warmup Iteration   3: 102.510 ns/op
# Warmup Iteration   4: 101.533 ns/op
# Warmup Iteration   5: 102.850 ns/op
Iteration   1: 99.960 ns/op
Iteration   2: 100.435 ns/op
Iteration   3: 100.510 ns/op
Iteration   4: 100.013 ns/op
Iteration   5: 100.500 ns/op
Iteration   6: 99.626 ns/op
Iteration   7: 100.378 ns/op
Iteration   8: 99.684 ns/op
Iteration   9: 99.834 ns/op
Iteration  10: 99.626 ns/op
Iteration  11: 99.829 ns/op
Iteration  12: 99.907 ns/op
Iteration  13: 99.631 ns/op
Iteration  14: 99.854 ns/op
Iteration  15: 99.707 ns/op
Iteration  16: 100.099 ns/op
Iteration  17: 99.816 ns/op
Iteration  18: 100.515 ns/op
Iteration  19: 99.984 ns/op
Iteration  20: 100.156 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 178.750 ns/op
# Warmup Iteration   2: 106.036 ns/op
# Warmup Iteration   3: 103.170 ns/op
# Warmup Iteration   4: 101.723 ns/op
# Warmup Iteration   5: 102.890 ns/op
Iteration   1: 99.968 ns/op
Iteration   2: 100.403 ns/op
Iteration   3: 100.452 ns/op
Iteration   4: 100.000 ns/op
Iteration   5: 100.478 ns/op
Iteration   6: 99.723 ns/op
Iteration   7: 99.906 ns/op
Iteration   8: 99.717 ns/op
Iteration   9: 100.043 ns/op
Iteration  10: 99.752 ns/op
Iteration  11: 100.095 ns/op
Iteration  12: 100.150 ns/op
Iteration  13: 99.824 ns/op
Iteration  14: 100.624 ns/op
Iteration  15: 99.718 ns/op
Iteration  16: 101.545 ns/op
Iteration  17: 99.708 ns/op
Iteration  18: 100.848 ns/op
Iteration  19: 99.743 ns/op
Iteration  20: 100.022 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 187.115 ns/op
# Warmup Iteration   2: 115.918 ns/op
# Warmup Iteration   3: 108.440 ns/op
# Warmup Iteration   4: 109.651 ns/op
# Warmup Iteration   5: 109.169 ns/op
Iteration   1: 107.199 ns/op
Iteration   2: 106.810 ns/op
Iteration   3: 107.196 ns/op
Iteration   4: 106.755 ns/op
Iteration   5: 107.181 ns/op
Iteration   6: 106.842 ns/op
Iteration   7: 106.716 ns/op
Iteration   8: 106.463 ns/op
Iteration   9: 106.624 ns/op
Iteration  10: 106.537 ns/op
Iteration  11: 106.508 ns/op
Iteration  12: 106.734 ns/op
Iteration  13: 106.609 ns/op
Iteration  14: 106.735 ns/op
Iteration  15: 106.630 ns/op
Iteration  16: 106.991 ns/op
Iteration  17: 106.772 ns/op
Iteration  18: 106.772 ns/op
Iteration  19: 106.564 ns/op
Iteration  20: 107.137 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 183.060 ns/op
# Warmup Iteration   2: 110.194 ns/op
# Warmup Iteration   3: 105.104 ns/op
# Warmup Iteration   4: 104.242 ns/op
# Warmup Iteration   5: 105.215 ns/op
Iteration   1: 102.486 ns/op
Iteration   2: 102.981 ns/op
Iteration   3: 102.525 ns/op
Iteration   4: 102.934 ns/op
Iteration   5: 102.908 ns/op
Iteration   6: 103.664 ns/op
Iteration   7: 102.999 ns/op
Iteration   8: 103.428 ns/op
Iteration   9: 102.195 ns/op
Iteration  10: 102.299 ns/op
Iteration  11: 102.184 ns/op
Iteration  12: 102.391 ns/op
Iteration  13: 102.135 ns/op
Iteration  14: 102.562 ns/op
Iteration  15: 102.251 ns/op
Iteration  16: 102.609 ns/op
Iteration  17: 103.279 ns/op
Iteration  18: 102.722 ns/op
Iteration  19: 102.398 ns/op
Iteration  20: 102.788 ns/op


Result "benchmark.StringContains.regexMatches":
  102.360 ±(99.9%) 0.848 ns/op [Average]
  (min, avg, max) = (99.626, 102.360, 107.199), stdev = 2.499
  CI (99.9%): [101.513, 103.208] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = EA~WgG\/Hll9B?dT)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 8.662 ns/op
# Warmup Iteration   2: 8.977 ns/op
# Warmup Iteration   3: 8.972 ns/op
# Warmup Iteration   4: 8.976 ns/op
# Warmup Iteration   5: 8.969 ns/op
Iteration   1: 8.978 ns/op
Iteration   2: 8.982 ns/op
Iteration   3: 8.962 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.978 ns/op
Iteration   6: 8.976 ns/op
Iteration   7: 8.968 ns/op
Iteration   8: 8.984 ns/op
Iteration   9: 8.973 ns/op
Iteration  10: 8.972 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.961 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.977 ns/op
Iteration  16: 8.971 ns/op
Iteration  17: 8.976 ns/op
Iteration  18: 8.978 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.971 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 8.741 ns/op
# Warmup Iteration   2: 8.978 ns/op
# Warmup Iteration   3: 8.952 ns/op
# Warmup Iteration   4: 8.947 ns/op
# Warmup Iteration   5: 8.951 ns/op
Iteration   1: 8.956 ns/op
Iteration   2: 8.957 ns/op
Iteration   3: 8.956 ns/op
Iteration   4: 8.957 ns/op
Iteration   5: 8.955 ns/op
Iteration   6: 8.962 ns/op
Iteration   7: 8.959 ns/op
Iteration   8: 8.960 ns/op
Iteration   9: 8.960 ns/op
Iteration  10: 8.952 ns/op
Iteration  11: 8.956 ns/op
Iteration  12: 8.961 ns/op
Iteration  13: 8.957 ns/op
Iteration  14: 8.957 ns/op
Iteration  15: 8.949 ns/op
Iteration  16: 8.945 ns/op
Iteration  17: 8.952 ns/op
Iteration  18: 8.960 ns/op
Iteration  19: 8.944 ns/op
Iteration  20: 8.946 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 8.714 ns/op
# Warmup Iteration   2: 8.979 ns/op
# Warmup Iteration   3: 8.934 ns/op
# Warmup Iteration   4: 8.934 ns/op
# Warmup Iteration   5: 8.935 ns/op
Iteration   1: 8.935 ns/op
Iteration   2: 8.934 ns/op
Iteration   3: 8.934 ns/op
Iteration   4: 8.934 ns/op
Iteration   5: 8.934 ns/op
Iteration   6: 8.934 ns/op
Iteration   7: 8.934 ns/op
Iteration   8: 8.935 ns/op
Iteration   9: 8.935 ns/op
Iteration  10: 8.934 ns/op
Iteration  11: 8.935 ns/op
Iteration  12: 8.934 ns/op
Iteration  13: 8.935 ns/op
Iteration  14: 8.934 ns/op
Iteration  15: 8.934 ns/op
Iteration  16: 8.934 ns/op
Iteration  17: 8.934 ns/op
Iteration  18: 8.934 ns/op
Iteration  19: 8.934 ns/op
Iteration  20: 8.935 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 8.635 ns/op
# Warmup Iteration   2: 8.979 ns/op
# Warmup Iteration   3: 8.946 ns/op
# Warmup Iteration   4: 8.945 ns/op
# Warmup Iteration   5: 8.945 ns/op
Iteration   1: 8.945 ns/op
Iteration   2: 8.946 ns/op
Iteration   3: 8.947 ns/op
Iteration   4: 8.946 ns/op
Iteration   5: 8.944 ns/op
Iteration   6: 8.942 ns/op
Iteration   7: 8.944 ns/op
Iteration   8: 8.944 ns/op
Iteration   9: 8.944 ns/op
Iteration  10: 8.943 ns/op
Iteration  11: 8.944 ns/op
Iteration  12: 8.943 ns/op
Iteration  13: 8.945 ns/op
Iteration  14: 8.944 ns/op
Iteration  15: 8.944 ns/op
Iteration  16: 8.944 ns/op
Iteration  17: 8.944 ns/op
Iteration  18: 8.943 ns/op
Iteration  19: 8.943 ns/op
Iteration  20: 8.944 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 8.650 ns/op
# Warmup Iteration   2: 8.991 ns/op
# Warmup Iteration   3: 8.947 ns/op
# Warmup Iteration   4: 8.943 ns/op
# Warmup Iteration   5: 8.943 ns/op
Iteration   1: 8.944 ns/op
Iteration   2: 8.942 ns/op
Iteration   3: 8.944 ns/op
Iteration   4: 8.943 ns/op
Iteration   5: 8.943 ns/op
Iteration   6: 8.944 ns/op
Iteration   7: 8.945 ns/op
Iteration   8: 8.958 ns/op
Iteration   9: 8.942 ns/op
Iteration  10: 8.943 ns/op
Iteration  11: 8.943 ns/op
Iteration  12: 8.943 ns/op
Iteration  13: 8.943 ns/op
Iteration  14: 8.942 ns/op
Iteration  15: 8.943 ns/op
Iteration  16: 8.944 ns/op
Iteration  17: 8.945 ns/op
Iteration  18: 8.943 ns/op
Iteration  19: 8.943 ns/op
Iteration  20: 8.944 ns/op


Result "benchmark.StringContains.stringContains":
  8.950 ±(99.9%) 0.005 ns/op [Average]
  (min, avg, max) = (8.934, 8.950, 8.984), stdev = 0.014
  CI (99.9%): [8.945, 8.954] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  EA~WgG\/Hll9B?dT  avgt  100  102.360 ± 0.848  ns/op
StringContains.stringContains     http  EA~WgG\/Hll9B?dT  avgt  100    8.950 ± 0.005  ns/op

Benchmark result is saved to http_16_1_0.csv
