# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = cPs9 ToG<g6+y&kNhttp6PA$,Mu>c;f=b8 ApItfPtm&} &v7R;;*`yvvy3/4W.I)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 673.531 ns/op
# Warmup Iteration   2: 693.157 ns/op
# Warmup Iteration   3: 693.481 ns/op
# Warmup Iteration   4: 693.151 ns/op
# Warmup Iteration   5: 636.956 ns/op
Iteration   1: 621.305 ns/op
Iteration   2: 621.344 ns/op
Iteration   3: 625.272 ns/op
Iteration   4: 617.224 ns/op
Iteration   5: 617.281 ns/op
Iteration   6: 617.224 ns/op
Iteration   7: 624.908 ns/op
Iteration   8: 617.829 ns/op
Iteration   9: 617.435 ns/op
Iteration  10: 627.809 ns/op
Iteration  11: 616.709 ns/op
Iteration  12: 617.256 ns/op
Iteration  13: 617.495 ns/op
Iteration  14: 632.221 ns/op
Iteration  15: 620.421 ns/op
Iteration  16: 620.390 ns/op
Iteration  17: 620.384 ns/op
Iteration  18: 637.020 ns/op
Iteration  19: 617.058 ns/op
Iteration  20: 618.091 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 682.221 ns/op
# Warmup Iteration   2: 659.059 ns/op
# Warmup Iteration   3: 733.763 ns/op
# Warmup Iteration   4: 733.860 ns/op
# Warmup Iteration   5: 677.303 ns/op
Iteration   1: 657.615 ns/op
Iteration   2: 657.025 ns/op
Iteration   3: 663.181 ns/op
Iteration   4: 657.558 ns/op
Iteration   5: 657.981 ns/op
Iteration   6: 658.024 ns/op
Iteration   7: 666.137 ns/op
Iteration   8: 657.831 ns/op
Iteration   9: 657.214 ns/op
Iteration  10: 657.517 ns/op
Iteration  11: 668.957 ns/op
Iteration  12: 656.904 ns/op
Iteration  13: 656.999 ns/op
Iteration  14: 656.659 ns/op
Iteration  15: 671.419 ns/op
Iteration  16: 656.934 ns/op
Iteration  17: 657.142 ns/op
Iteration  18: 656.802 ns/op
Iteration  19: 675.304 ns/op
Iteration  20: 657.222 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 669.694 ns/op
# Warmup Iteration   2: 689.873 ns/op
# Warmup Iteration   3: 692.573 ns/op
# Warmup Iteration   4: 691.819 ns/op
# Warmup Iteration   5: 629.137 ns/op
Iteration   1: 617.226 ns/op
Iteration   2: 617.444 ns/op
Iteration   3: 622.567 ns/op
Iteration   4: 617.209 ns/op
Iteration   5: 616.933 ns/op
Iteration   6: 617.472 ns/op
Iteration   7: 624.577 ns/op
Iteration   8: 617.170 ns/op
Iteration   9: 617.386 ns/op
Iteration  10: 627.389 ns/op
Iteration  11: 617.164 ns/op
Iteration  12: 616.816 ns/op
Iteration  13: 617.125 ns/op
Iteration  14: 630.658 ns/op
Iteration  15: 617.097 ns/op
Iteration  16: 617.180 ns/op
Iteration  17: 617.110 ns/op
Iteration  18: 634.396 ns/op
Iteration  19: 617.195 ns/op
Iteration  20: 617.434 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 661.760 ns/op
# Warmup Iteration   2: 687.843 ns/op
# Warmup Iteration   3: 689.062 ns/op
# Warmup Iteration   4: 688.874 ns/op
# Warmup Iteration   5: 623.662 ns/op
Iteration   1: 613.695 ns/op
Iteration   2: 613.996 ns/op
Iteration   3: 619.477 ns/op
Iteration   4: 613.922 ns/op
Iteration   5: 614.280 ns/op
Iteration   6: 615.835 ns/op
Iteration   7: 619.388 ns/op
Iteration   8: 613.759 ns/op
Iteration   9: 613.749 ns/op
Iteration  10: 623.787 ns/op
Iteration  11: 613.610 ns/op
Iteration  12: 616.951 ns/op
Iteration  13: 616.924 ns/op
Iteration  14: 628.552 ns/op
Iteration  15: 614.898 ns/op
Iteration  16: 614.565 ns/op
Iteration  17: 614.211 ns/op
Iteration  18: 632.674 ns/op
Iteration  19: 613.404 ns/op
Iteration  20: 613.667 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 638.336 ns/op
# Warmup Iteration   2: 620.011 ns/op
# Warmup Iteration   3: 636.453 ns/op
# Warmup Iteration   4: 626.329 ns/op
# Warmup Iteration   5: 569.218 ns/op
Iteration   1: 569.075 ns/op
Iteration   2: 570.747 ns/op
Iteration   3: 564.055 ns/op
Iteration   4: 560.585 ns/op
Iteration   5: 560.543 ns/op
Iteration   6: 567.457 ns/op
Iteration   7: 560.478 ns/op
Iteration   8: 560.684 ns/op
Iteration   9: 570.261 ns/op
Iteration  10: 560.605 ns/op
Iteration  11: 560.530 ns/op
Iteration  12: 572.891 ns/op
Iteration  13: 560.317 ns/op
Iteration  14: 560.324 ns/op
Iteration  15: 560.462 ns/op
Iteration  16: 576.489 ns/op
Iteration  17: 560.453 ns/op
Iteration  18: 560.227 ns/op
Iteration  19: 560.377 ns/op
Iteration  20: 563.118 ns/op


Result "benchmark.StringContains.regexMatches":
  616.477 ±(99.9%) 10.608 ns/op [Average]
  (min, avg, max) = (560.227, 616.477, 675.304), stdev = 31.278
  CI (99.9%): [605.869, 627.085] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = cPs9 ToG<g6+y&kNhttp6PA$,Mu>c;f=b8 ApItfPtm&} &v7R;;*`yvvy3/4W.I)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.301 ns/op
# Warmup Iteration   2: 12.509 ns/op
# Warmup Iteration   3: 12.308 ns/op
# Warmup Iteration   4: 12.308 ns/op
# Warmup Iteration   5: 12.304 ns/op
Iteration   1: 12.297 ns/op
Iteration   2: 12.306 ns/op
Iteration   3: 12.294 ns/op
Iteration   4: 12.305 ns/op
Iteration   5: 12.302 ns/op
Iteration   6: 12.321 ns/op
Iteration   7: 12.320 ns/op
Iteration   8: 12.299 ns/op
Iteration   9: 12.313 ns/op
Iteration  10: 12.291 ns/op
Iteration  11: 12.335 ns/op
Iteration  12: 12.300 ns/op
Iteration  13: 12.318 ns/op
Iteration  14: 12.298 ns/op
Iteration  15: 12.336 ns/op
Iteration  16: 12.311 ns/op
Iteration  17: 12.278 ns/op
Iteration  18: 12.287 ns/op
Iteration  19: 12.306 ns/op
Iteration  20: 12.298 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.367 ns/op
# Warmup Iteration   2: 12.583 ns/op
# Warmup Iteration   3: 12.163 ns/op
# Warmup Iteration   4: 12.139 ns/op
# Warmup Iteration   5: 12.136 ns/op
Iteration   1: 12.154 ns/op
Iteration   2: 12.154 ns/op
Iteration   3: 12.121 ns/op
Iteration   4: 12.143 ns/op
Iteration   5: 12.142 ns/op
Iteration   6: 12.134 ns/op
Iteration   7: 12.126 ns/op
Iteration   8: 12.182 ns/op
Iteration   9: 12.150 ns/op
Iteration  10: 12.154 ns/op
Iteration  11: 12.138 ns/op
Iteration  12: 12.131 ns/op
Iteration  13: 12.153 ns/op
Iteration  14: 12.143 ns/op
Iteration  15: 12.146 ns/op
Iteration  16: 12.129 ns/op
Iteration  17: 12.155 ns/op
Iteration  18: 12.134 ns/op
Iteration  19: 12.155 ns/op
Iteration  20: 12.180 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.334 ns/op
# Warmup Iteration   2: 12.587 ns/op
# Warmup Iteration   3: 12.149 ns/op
# Warmup Iteration   4: 12.129 ns/op
# Warmup Iteration   5: 12.133 ns/op
Iteration   1: 12.127 ns/op
Iteration   2: 12.141 ns/op
Iteration   3: 12.132 ns/op
Iteration   4: 12.117 ns/op
Iteration   5: 12.125 ns/op
Iteration   6: 12.131 ns/op
Iteration   7: 12.137 ns/op
Iteration   8: 12.154 ns/op
Iteration   9: 12.132 ns/op
Iteration  10: 12.133 ns/op
Iteration  11: 12.145 ns/op
Iteration  12: 12.125 ns/op
Iteration  13: 12.138 ns/op
Iteration  14: 12.139 ns/op
Iteration  15: 12.136 ns/op
Iteration  16: 12.138 ns/op
Iteration  17: 12.141 ns/op
Iteration  18: 12.117 ns/op
Iteration  19: 12.121 ns/op
Iteration  20: 12.140 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.319 ns/op
# Warmup Iteration   2: 12.549 ns/op
# Warmup Iteration   3: 12.356 ns/op
# Warmup Iteration   4: 12.373 ns/op
# Warmup Iteration   5: 12.401 ns/op
Iteration   1: 12.381 ns/op
Iteration   2: 12.356 ns/op
Iteration   3: 12.327 ns/op
Iteration   4: 12.361 ns/op
Iteration   5: 12.366 ns/op
Iteration   6: 12.332 ns/op
Iteration   7: 12.347 ns/op
Iteration   8: 12.369 ns/op
Iteration   9: 12.328 ns/op
Iteration  10: 12.360 ns/op
Iteration  11: 12.334 ns/op
Iteration  12: 12.339 ns/op
Iteration  13: 12.329 ns/op
Iteration  14: 12.336 ns/op
Iteration  15: 12.361 ns/op
Iteration  16: 12.351 ns/op
Iteration  17: 12.375 ns/op
Iteration  18: 12.387 ns/op
Iteration  19: 12.361 ns/op
Iteration  20: 12.366 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.292 ns/op
# Warmup Iteration   2: 12.470 ns/op
# Warmup Iteration   3: 12.148 ns/op
# Warmup Iteration   4: 12.145 ns/op
# Warmup Iteration   5: 12.123 ns/op
Iteration   1: 12.130 ns/op
Iteration   2: 12.140 ns/op
Iteration   3: 12.126 ns/op
Iteration   4: 12.134 ns/op
Iteration   5: 12.133 ns/op
Iteration   6: 12.153 ns/op
Iteration   7: 12.127 ns/op
Iteration   8: 12.135 ns/op
Iteration   9: 12.138 ns/op
Iteration  10: 12.125 ns/op
Iteration  11: 12.142 ns/op
Iteration  12: 12.140 ns/op
Iteration  13: 12.140 ns/op
Iteration  14: 12.128 ns/op
Iteration  15: 12.150 ns/op
Iteration  16: 12.124 ns/op
Iteration  17: 12.140 ns/op
Iteration  18: 12.131 ns/op
Iteration  19: 12.137 ns/op
Iteration  20: 12.122 ns/op


Result "benchmark.StringContains.stringContains":
  12.215 ±(99.9%) 0.033 ns/op [Average]
  (min, avg, max) = (12.117, 12.215, 12.387), stdev = 0.096
  CI (99.9%): [12.182, 12.247] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  cPs9 ToG<g6+y&kNhttp6PA$,Mu>c;f=b8 ApItfPtm&} &v7R;;*`yvvy3/4W.I  avgt  100  616.477 ± 10.608  ns/op
StringContains.stringContains     http  cPs9 ToG<g6+y&kNhttp6PA$,Mu>c;f=b8 ApItfPtm&} &v7R;;*`yvvy3/4W.I  avgt  100   12.215 ±  0.033  ns/op

Benchmark result is saved to http_64_0.25_8.csv
