# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http.kruS
lYl?%d3~d\w#A[GBj4KI\2@vnj;Uz^<SDn~7GKPtIMT7ZrfIJo>)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 823.081 ns/op
# Warmup Iteration   2: 850.649 ns/op
# Warmup Iteration   3: 851.552 ns/op
# Warmup Iteration   4: 855.624 ns/op
# Warmup Iteration   5: 853.809 ns/op
Iteration   1: 775.071 ns/op
Iteration   2: 763.035 ns/op
Iteration   3: 763.115 ns/op
Iteration   4: 763.123 ns/op
Iteration   5: 770.946 ns/op
Iteration   6: 763.154 ns/op
Iteration   7: 762.859 ns/op
Iteration   8: 763.422 ns/op
Iteration   9: 774.015 ns/op
Iteration  10: 763.368 ns/op
Iteration  11: 763.148 ns/op
Iteration  12: 763.145 ns/op
Iteration  13: 763.136 ns/op
Iteration  14: 777.751 ns/op
Iteration  15: 763.465 ns/op
Iteration  16: 763.438 ns/op
Iteration  17: 763.419 ns/op
Iteration  18: 784.181 ns/op
Iteration  19: 769.636 ns/op
Iteration  20: 769.705 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 815.216 ns/op
# Warmup Iteration   2: 833.564 ns/op
# Warmup Iteration   3: 838.219 ns/op
# Warmup Iteration   4: 838.410 ns/op
# Warmup Iteration   5: 838.110 ns/op
Iteration   1: 770.235 ns/op
Iteration   2: 765.413 ns/op
Iteration   3: 764.444 ns/op
Iteration   4: 764.575 ns/op
Iteration   5: 771.354 ns/op
Iteration   6: 763.971 ns/op
Iteration   7: 763.993 ns/op
Iteration   8: 764.780 ns/op
Iteration   9: 775.194 ns/op
Iteration  10: 765.191 ns/op
Iteration  11: 765.920 ns/op
Iteration  12: 765.631 ns/op
Iteration  13: 766.110 ns/op
Iteration  14: 777.419 ns/op
Iteration  15: 764.931 ns/op
Iteration  16: 765.666 ns/op
Iteration  17: 765.271 ns/op
Iteration  18: 781.366 ns/op
Iteration  19: 764.940 ns/op
Iteration  20: 765.054 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 816.112 ns/op
# Warmup Iteration   2: 840.634 ns/op
# Warmup Iteration   3: 838.012 ns/op
# Warmup Iteration   4: 838.153 ns/op
# Warmup Iteration   5: 840.677 ns/op
Iteration   1: 764.477 ns/op
Iteration   2: 764.357 ns/op
Iteration   3: 764.267 ns/op
Iteration   4: 764.695 ns/op
Iteration   5: 771.095 ns/op
Iteration   6: 764.303 ns/op
Iteration   7: 764.480 ns/op
Iteration   8: 764.364 ns/op
Iteration   9: 773.199 ns/op
Iteration  10: 764.035 ns/op
Iteration  11: 764.339 ns/op
Iteration  12: 764.176 ns/op
Iteration  13: 773.312 ns/op
Iteration  14: 768.462 ns/op
Iteration  15: 763.759 ns/op
Iteration  16: 764.050 ns/op
Iteration  17: 763.885 ns/op
Iteration  18: 780.378 ns/op
Iteration  19: 764.080 ns/op
Iteration  20: 764.392 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 783.959 ns/op
# Warmup Iteration   2: 797.963 ns/op
# Warmup Iteration   3: 886.966 ns/op
# Warmup Iteration   4: 887.199 ns/op
# Warmup Iteration   5: 886.931 ns/op
Iteration   1: 823.196 ns/op
Iteration   2: 811.331 ns/op
Iteration   3: 811.977 ns/op
Iteration   4: 812.238 ns/op
Iteration   5: 819.301 ns/op
Iteration   6: 811.845 ns/op
Iteration   7: 811.850 ns/op
Iteration   8: 812.170 ns/op
Iteration   9: 811.745 ns/op
Iteration  10: 823.257 ns/op
Iteration  11: 813.888 ns/op
Iteration  12: 812.049 ns/op
Iteration  13: 811.911 ns/op
Iteration  14: 815.012 ns/op
Iteration  15: 821.242 ns/op
Iteration  16: 811.478 ns/op
Iteration  17: 811.204 ns/op
Iteration  18: 811.443 ns/op
Iteration  19: 822.806 ns/op
Iteration  20: 821.198 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 786.269 ns/op
# Warmup Iteration   2: 798.972 ns/op
# Warmup Iteration   3: 887.825 ns/op
# Warmup Iteration   4: 886.550 ns/op
# Warmup Iteration   5: 886.894 ns/op
Iteration   1: 822.188 ns/op
Iteration   2: 810.856 ns/op
Iteration   3: 810.572 ns/op
Iteration   4: 810.560 ns/op
Iteration   5: 818.236 ns/op
Iteration   6: 811.153 ns/op
Iteration   7: 810.735 ns/op
Iteration   8: 810.767 ns/op
Iteration   9: 810.753 ns/op
Iteration  10: 821.383 ns/op
Iteration  11: 810.770 ns/op
Iteration  12: 811.089 ns/op
Iteration  13: 811.100 ns/op
Iteration  14: 819.153 ns/op
Iteration  15: 815.559 ns/op
Iteration  16: 810.419 ns/op
Iteration  17: 810.578 ns/op
Iteration  18: 810.949 ns/op
Iteration  19: 828.332 ns/op
Iteration  20: 810.773 ns/op


Result "benchmark.StringContains.regexMatches":
  786.018 ±(99.9%) 8.092 ns/op [Average]
  (min, avg, max) = (762.859, 786.018, 828.332), stdev = 23.861
  CI (99.9%): [777.925, 794.110] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http.kruS
lYl?%d3~d\w#A[GBj4KI\2@vnj;Uz^<SDn~7GKPtIMT7ZrfIJo>)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.466 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.850 ns/op
# Warmup Iteration   4: 9.850 ns/op
# Warmup Iteration   5: 9.843 ns/op
Iteration   1: 9.846 ns/op
Iteration   2: 9.849 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.861 ns/op
Iteration   5: 9.859 ns/op
Iteration   6: 9.858 ns/op
Iteration   7: 9.867 ns/op
Iteration   8: 9.862 ns/op
Iteration   9: 9.862 ns/op
Iteration  10: 9.859 ns/op
Iteration  11: 9.833 ns/op
Iteration  12: 9.831 ns/op
Iteration  13: 9.842 ns/op
Iteration  14: 9.835 ns/op
Iteration  15: 9.837 ns/op
Iteration  16: 9.847 ns/op
Iteration  17: 9.838 ns/op
Iteration  18: 9.841 ns/op
Iteration  19: 9.845 ns/op
Iteration  20: 9.852 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.460 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.866 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.860 ns/op
Iteration   1: 9.864 ns/op
Iteration   2: 9.861 ns/op
Iteration   3: 9.879 ns/op
Iteration   4: 9.866 ns/op
Iteration   5: 9.876 ns/op
Iteration   6: 9.854 ns/op
Iteration   7: 9.849 ns/op
Iteration   8: 9.872 ns/op
Iteration   9: 9.851 ns/op
Iteration  10: 9.842 ns/op
Iteration  11: 9.843 ns/op
Iteration  12: 9.854 ns/op
Iteration  13: 9.851 ns/op
Iteration  14: 9.847 ns/op
Iteration  15: 9.852 ns/op
Iteration  16: 9.846 ns/op
Iteration  17: 9.870 ns/op
Iteration  18: 9.865 ns/op
Iteration  19: 9.859 ns/op
Iteration  20: 9.870 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 13.163 ns/op
# Warmup Iteration   2: 12.694 ns/op
# Warmup Iteration   3: 12.284 ns/op
# Warmup Iteration   4: 12.285 ns/op
# Warmup Iteration   5: 12.285 ns/op
Iteration   1: 12.285 ns/op
Iteration   2: 12.285 ns/op
Iteration   3: 12.284 ns/op
Iteration   4: 12.285 ns/op
Iteration   5: 12.285 ns/op
Iteration   6: 12.286 ns/op
Iteration   7: 12.284 ns/op
Iteration   8: 12.286 ns/op
Iteration   9: 12.285 ns/op
Iteration  10: 12.284 ns/op
Iteration  11: 12.286 ns/op
Iteration  12: 9.950 ns/op
Iteration  13: 9.971 ns/op
Iteration  14: 9.959 ns/op
Iteration  15: 9.958 ns/op
Iteration  16: 9.946 ns/op
Iteration  17: 9.940 ns/op
Iteration  18: 9.962 ns/op
Iteration  19: 9.970 ns/op
Iteration  20: 9.957 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.488 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.861 ns/op
# Warmup Iteration   4: 9.853 ns/op
# Warmup Iteration   5: 9.847 ns/op
Iteration   1: 9.845 ns/op
Iteration   2: 9.856 ns/op
Iteration   3: 9.846 ns/op
Iteration   4: 9.853 ns/op
Iteration   5: 9.852 ns/op
Iteration   6: 9.846 ns/op
Iteration   7: 9.847 ns/op
Iteration   8: 9.843 ns/op
Iteration   9: 9.864 ns/op
Iteration  10: 9.868 ns/op
Iteration  11: 9.844 ns/op
Iteration  12: 10.567 ns/op
Iteration  13: 10.553 ns/op
Iteration  14: 10.556 ns/op
Iteration  15: 10.556 ns/op
Iteration  16: 10.557 ns/op
Iteration  17: 10.554 ns/op
Iteration  18: 10.553 ns/op
Iteration  19: 10.553 ns/op
Iteration  20: 10.553 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.239 ns/op
# Warmup Iteration   2: 9.738 ns/op
# Warmup Iteration   3: 9.954 ns/op
# Warmup Iteration   4: 9.929 ns/op
# Warmup Iteration   5: 9.951 ns/op
Iteration   1: 9.936 ns/op
Iteration   2: 9.952 ns/op
Iteration   3: 9.935 ns/op
Iteration   4: 9.954 ns/op
Iteration   5: 9.912 ns/op
Iteration   6: 9.942 ns/op
Iteration   7: 9.955 ns/op
Iteration   8: 9.924 ns/op
Iteration   9: 9.925 ns/op
Iteration  10: 9.939 ns/op
Iteration  11: 9.949 ns/op
Iteration  12: 9.955 ns/op
Iteration  13: 9.926 ns/op
Iteration  14: 9.938 ns/op
Iteration  15: 9.943 ns/op
Iteration  16: 9.919 ns/op
Iteration  17: 9.947 ns/op
Iteration  18: 9.938 ns/op
Iteration  19: 9.932 ns/op
Iteration  20: 9.936 ns/op


Result "benchmark.StringContains.stringContains":
  10.210 ±(99.9%) 0.257 ns/op [Average]
  (min, avg, max) = (9.831, 10.210, 12.286), stdev = 0.759
  CI (99.9%): [9.953, 10.468] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http.kruS
lYl?%d3~d\w#A[GBj4KI\2@vnj;Uz^<SDn~7GKPtIMT7ZrfIJo>  avgt  100  786.018 ± 8.092  ns/op
StringContains.stringContains     http  http.kruS
lYl?%d3~d\w#A[GBj4KI\2@vnj;Uz^<SDn~7GKPtIMT7ZrfIJo>  avgt  100   10.210 ± 0.257  ns/op

Benchmark result is saved to http_64_0_2.csv
