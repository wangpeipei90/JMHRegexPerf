# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = 1`L9LBrBhttp]NCA)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 268.195 ns/op
# Warmup Iteration   2: 216.627 ns/op
# Warmup Iteration   3: 181.839 ns/op
# Warmup Iteration   4: 182.739 ns/op
# Warmup Iteration   5: 183.369 ns/op
Iteration   1: 184.328 ns/op
Iteration   2: 183.306 ns/op
Iteration   3: 182.198 ns/op
Iteration   4: 180.805 ns/op
Iteration   5: 180.766 ns/op
Iteration   6: 180.792 ns/op
Iteration   7: 180.590 ns/op
Iteration   8: 180.899 ns/op
Iteration   9: 180.837 ns/op
Iteration  10: 180.326 ns/op
Iteration  11: 180.896 ns/op
Iteration  12: 180.909 ns/op
Iteration  13: 181.548 ns/op
Iteration  14: 180.305 ns/op
Iteration  15: 180.226 ns/op
Iteration  16: 180.441 ns/op
Iteration  17: 179.779 ns/op
Iteration  18: 180.747 ns/op
Iteration  19: 180.792 ns/op
Iteration  20: 180.783 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 265.788 ns/op
# Warmup Iteration   2: 218.669 ns/op
# Warmup Iteration   3: 193.764 ns/op
# Warmup Iteration   4: 194.324 ns/op
# Warmup Iteration   5: 195.154 ns/op
Iteration   1: 192.800 ns/op
Iteration   2: 195.345 ns/op
Iteration   3: 197.528 ns/op
Iteration   4: 193.321 ns/op
Iteration   5: 192.945 ns/op
Iteration   6: 193.339 ns/op
Iteration   7: 193.108 ns/op
Iteration   8: 193.791 ns/op
Iteration   9: 192.682 ns/op
Iteration  10: 192.866 ns/op
Iteration  11: 192.767 ns/op
Iteration  12: 191.966 ns/op
Iteration  13: 192.777 ns/op
Iteration  14: 192.728 ns/op
Iteration  15: 192.169 ns/op
Iteration  16: 192.178 ns/op
Iteration  17: 191.831 ns/op
Iteration  18: 192.238 ns/op
Iteration  19: 192.285 ns/op
Iteration  20: 194.007 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 254.926 ns/op
# Warmup Iteration   2: 202.188 ns/op
# Warmup Iteration   3: 181.518 ns/op
# Warmup Iteration   4: 182.110 ns/op
# Warmup Iteration   5: 182.970 ns/op
Iteration   1: 183.934 ns/op
Iteration   2: 184.925 ns/op
Iteration   3: 179.734 ns/op
Iteration   4: 180.634 ns/op
Iteration   5: 180.622 ns/op
Iteration   6: 180.509 ns/op
Iteration   7: 180.624 ns/op
Iteration   8: 182.138 ns/op
Iteration   9: 182.640 ns/op
Iteration  10: 179.743 ns/op
Iteration  11: 181.066 ns/op
Iteration  12: 180.526 ns/op
Iteration  13: 180.953 ns/op
Iteration  14: 181.002 ns/op
Iteration  15: 180.656 ns/op
Iteration  16: 180.540 ns/op
Iteration  17: 180.151 ns/op
Iteration  18: 179.651 ns/op
Iteration  19: 180.119 ns/op
Iteration  20: 180.267 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 254.006 ns/op
# Warmup Iteration   2: 202.553 ns/op
# Warmup Iteration   3: 181.415 ns/op
# Warmup Iteration   4: 181.901 ns/op
# Warmup Iteration   5: 182.661 ns/op
Iteration   1: 183.662 ns/op
Iteration   2: 184.808 ns/op
Iteration   3: 179.884 ns/op
Iteration   4: 180.477 ns/op
Iteration   5: 180.548 ns/op
Iteration   6: 180.513 ns/op
Iteration   7: 180.539 ns/op
Iteration   8: 180.594 ns/op
Iteration   9: 180.490 ns/op
Iteration  10: 179.679 ns/op
Iteration  11: 180.388 ns/op
Iteration  12: 180.458 ns/op
Iteration  13: 180.358 ns/op
Iteration  14: 180.189 ns/op
Iteration  15: 181.504 ns/op
Iteration  16: 181.066 ns/op
Iteration  17: 180.525 ns/op
Iteration  18: 179.619 ns/op
Iteration  19: 180.190 ns/op
Iteration  20: 180.126 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 266.551 ns/op
# Warmup Iteration   2: 218.415 ns/op
# Warmup Iteration   3: 193.989 ns/op
# Warmup Iteration   4: 194.497 ns/op
# Warmup Iteration   5: 195.368 ns/op
Iteration   1: 192.428 ns/op
Iteration   2: 196.301 ns/op
Iteration   3: 197.736 ns/op
Iteration   4: 193.366 ns/op
Iteration   5: 193.066 ns/op
Iteration   6: 192.174 ns/op
Iteration   7: 192.950 ns/op
Iteration   8: 193.049 ns/op
Iteration   9: 192.957 ns/op
Iteration  10: 193.134 ns/op
Iteration  11: 194.678 ns/op
Iteration  12: 192.277 ns/op
Iteration  13: 193.359 ns/op
Iteration  14: 193.959 ns/op
Iteration  15: 192.900 ns/op
Iteration  16: 192.951 ns/op
Iteration  17: 192.178 ns/op
Iteration  18: 192.649 ns/op
Iteration  19: 192.714 ns/op
Iteration  20: 193.151 ns/op


Result "benchmark.StringContains.regexMatches":
  185.880 ±(99.9%) 2.100 ns/op [Average]
  (min, avg, max) = (179.619, 185.880, 197.736), stdev = 6.193
  CI (99.9%): [183.779, 187.980] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = 1`L9LBrBhttp]NCA)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.436 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.872 ns/op
# Warmup Iteration   4: 9.871 ns/op
# Warmup Iteration   5: 9.845 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.863 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.865 ns/op
Iteration   5: 9.871 ns/op
Iteration   6: 9.859 ns/op
Iteration   7: 9.859 ns/op
Iteration   8: 9.871 ns/op
Iteration   9: 9.871 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.864 ns/op
Iteration  12: 9.902 ns/op
Iteration  13: 9.876 ns/op
Iteration  14: 9.868 ns/op
Iteration  15: 9.859 ns/op
Iteration  16: 9.873 ns/op
Iteration  17: 9.865 ns/op
Iteration  18: 9.874 ns/op
Iteration  19: 9.858 ns/op
Iteration  20: 9.871 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.494 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.849 ns/op
# Warmup Iteration   4: 9.872 ns/op
# Warmup Iteration   5: 9.892 ns/op
Iteration   1: 9.877 ns/op
Iteration   2: 9.868 ns/op
Iteration   3: 9.847 ns/op
Iteration   4: 9.860 ns/op
Iteration   5: 9.873 ns/op
Iteration   6: 9.863 ns/op
Iteration   7: 9.864 ns/op
Iteration   8: 9.883 ns/op
Iteration   9: 9.856 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.878 ns/op
Iteration  12: 9.874 ns/op
Iteration  13: 9.848 ns/op
Iteration  14: 9.862 ns/op
Iteration  15: 9.861 ns/op
Iteration  16: 9.853 ns/op
Iteration  17: 9.855 ns/op
Iteration  18: 9.848 ns/op
Iteration  19: 9.853 ns/op
Iteration  20: 9.844 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.220 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.868 ns/op
# Warmup Iteration   4: 9.877 ns/op
# Warmup Iteration   5: 9.869 ns/op
Iteration   1: 9.865 ns/op
Iteration   2: 9.883 ns/op
Iteration   3: 9.864 ns/op
Iteration   4: 9.888 ns/op
Iteration   5: 9.871 ns/op
Iteration   6: 9.874 ns/op
Iteration   7: 9.887 ns/op
Iteration   8: 9.866 ns/op
Iteration   9: 9.862 ns/op
Iteration  10: 9.864 ns/op
Iteration  11: 9.852 ns/op
Iteration  12: 9.873 ns/op
Iteration  13: 9.864 ns/op
Iteration  14: 9.852 ns/op
Iteration  15: 9.834 ns/op
Iteration  16: 9.858 ns/op
Iteration  17: 9.859 ns/op
Iteration  18: 9.853 ns/op
Iteration  19: 9.857 ns/op
Iteration  20: 9.836 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.494 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.845 ns/op
# Warmup Iteration   4: 9.845 ns/op
# Warmup Iteration   5: 9.849 ns/op
Iteration   1: 9.871 ns/op
Iteration   2: 9.848 ns/op
Iteration   3: 9.859 ns/op
Iteration   4: 9.859 ns/op
Iteration   5: 9.848 ns/op
Iteration   6: 9.845 ns/op
Iteration   7: 9.870 ns/op
Iteration   8: 9.873 ns/op
Iteration   9: 9.864 ns/op
Iteration  10: 9.856 ns/op
Iteration  11: 9.852 ns/op
Iteration  12: 9.852 ns/op
Iteration  13: 9.857 ns/op
Iteration  14: 9.849 ns/op
Iteration  15: 9.857 ns/op
Iteration  16: 9.860 ns/op
Iteration  17: 9.856 ns/op
Iteration  18: 9.861 ns/op
Iteration  19: 9.859 ns/op
Iteration  20: 9.850 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.226 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.852 ns/op
# Warmup Iteration   4: 9.867 ns/op
# Warmup Iteration   5: 9.868 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.853 ns/op
Iteration   3: 9.868 ns/op
Iteration   4: 9.865 ns/op
Iteration   5: 9.867 ns/op
Iteration   6: 9.860 ns/op
Iteration   7: 9.856 ns/op
Iteration   8: 9.863 ns/op
Iteration   9: 9.874 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.865 ns/op
Iteration  12: 9.879 ns/op
Iteration  13: 9.877 ns/op
Iteration  14: 9.877 ns/op
Iteration  15: 9.880 ns/op
Iteration  16: 9.869 ns/op
Iteration  17: 9.867 ns/op
Iteration  18: 9.858 ns/op
Iteration  19: 9.881 ns/op
Iteration  20: 9.880 ns/op


Result "benchmark.StringContains.stringContains":
  9.864 ±(99.9%) 0.004 ns/op [Average]
  (min, avg, max) = (9.834, 9.864, 9.902), stdev = 0.011
  CI (99.9%): [9.860, 9.868] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  1`L9LBrBhttp]NCA  avgt  100  185.880 ± 2.100  ns/op
StringContains.stringContains     http  1`L9LBrBhttp]NCA  avgt  100    9.864 ± 0.004  ns/op

Benchmark result is saved to http_16_0.5_5.csv
