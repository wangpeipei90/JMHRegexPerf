# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = j
]3}^H}w0Nz@y.*httpvgmson@~74M)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 357.437 ns/op
# Warmup Iteration   2: 369.184 ns/op
# Warmup Iteration   3: 302.922 ns/op
# Warmup Iteration   4: 290.724 ns/op
# Warmup Iteration   5: 288.648 ns/op
Iteration   1: 292.297 ns/op
Iteration   2: 287.322 ns/op
Iteration   3: 292.661 ns/op
Iteration   4: 296.415 ns/op
Iteration   5: 287.167 ns/op
Iteration   6: 296.513 ns/op
Iteration   7: 287.417 ns/op
Iteration   8: 288.958 ns/op
Iteration   9: 287.461 ns/op
Iteration  10: 288.733 ns/op
Iteration  11: 287.699 ns/op
Iteration  12: 288.859 ns/op
Iteration  13: 287.358 ns/op
Iteration  14: 288.715 ns/op
Iteration  15: 287.047 ns/op
Iteration  16: 288.503 ns/op
Iteration  17: 288.596 ns/op
Iteration  18: 287.247 ns/op
Iteration  19: 289.465 ns/op
Iteration  20: 287.277 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 356.507 ns/op
# Warmup Iteration   2: 361.462 ns/op
# Warmup Iteration   3: 300.907 ns/op
# Warmup Iteration   4: 290.625 ns/op
# Warmup Iteration   5: 288.243 ns/op
Iteration   1: 294.245 ns/op
Iteration   2: 288.088 ns/op
Iteration   3: 292.669 ns/op
Iteration   4: 294.008 ns/op
Iteration   5: 287.909 ns/op
Iteration   6: 296.172 ns/op
Iteration   7: 288.251 ns/op
Iteration   8: 289.825 ns/op
Iteration   9: 287.738 ns/op
Iteration  10: 289.418 ns/op
Iteration  11: 287.940 ns/op
Iteration  12: 289.548 ns/op
Iteration  13: 287.786 ns/op
Iteration  14: 289.327 ns/op
Iteration  15: 287.783 ns/op
Iteration  16: 289.101 ns/op
Iteration  17: 289.690 ns/op
Iteration  18: 288.254 ns/op
Iteration  19: 289.485 ns/op
Iteration  20: 288.086 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 350.752 ns/op
# Warmup Iteration   2: 360.372 ns/op
# Warmup Iteration   3: 280.017 ns/op
# Warmup Iteration   4: 274.247 ns/op
# Warmup Iteration   5: 272.756 ns/op
Iteration   1: 273.992 ns/op
Iteration   2: 275.076 ns/op
Iteration   3: 270.292 ns/op
Iteration   4: 276.241 ns/op
Iteration   5: 270.572 ns/op
Iteration   6: 277.895 ns/op
Iteration   7: 272.176 ns/op
Iteration   8: 270.196 ns/op
Iteration   9: 272.495 ns/op
Iteration  10: 271.008 ns/op
Iteration  11: 271.603 ns/op
Iteration  12: 270.517 ns/op
Iteration  13: 271.678 ns/op
Iteration  14: 271.715 ns/op
Iteration  15: 270.216 ns/op
Iteration  16: 272.352 ns/op
Iteration  17: 270.137 ns/op
Iteration  18: 272.411 ns/op
Iteration  19: 270.233 ns/op
Iteration  20: 271.284 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 351.101 ns/op
# Warmup Iteration   2: 359.997 ns/op
# Warmup Iteration   3: 300.316 ns/op
# Warmup Iteration   4: 291.761 ns/op
# Warmup Iteration   5: 289.549 ns/op
Iteration   1: 293.025 ns/op
Iteration   2: 289.120 ns/op
Iteration   3: 294.326 ns/op
Iteration   4: 295.981 ns/op
Iteration   5: 289.197 ns/op
Iteration   6: 297.886 ns/op
Iteration   7: 289.549 ns/op
Iteration   8: 290.978 ns/op
Iteration   9: 289.519 ns/op
Iteration  10: 291.000 ns/op
Iteration  11: 288.999 ns/op
Iteration  12: 291.130 ns/op
Iteration  13: 289.186 ns/op
Iteration  14: 291.960 ns/op
Iteration  15: 288.788 ns/op
Iteration  16: 290.812 ns/op
Iteration  17: 290.719 ns/op
Iteration  18: 289.187 ns/op
Iteration  19: 291.288 ns/op
Iteration  20: 289.293 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 346.200 ns/op
# Warmup Iteration   2: 361.480 ns/op
# Warmup Iteration   3: 280.076 ns/op
# Warmup Iteration   4: 273.123 ns/op
# Warmup Iteration   5: 270.239 ns/op
Iteration   1: 275.250 ns/op
Iteration   2: 275.236 ns/op
Iteration   3: 270.441 ns/op
Iteration   4: 277.712 ns/op
Iteration   5: 270.351 ns/op
Iteration   6: 278.197 ns/op
Iteration   7: 271.656 ns/op
Iteration   8: 271.331 ns/op
Iteration   9: 272.481 ns/op
Iteration  10: 270.352 ns/op
Iteration  11: 271.980 ns/op
Iteration  12: 270.419 ns/op
Iteration  13: 271.831 ns/op
Iteration  14: 275.404 ns/op
Iteration  15: 270.269 ns/op
Iteration  16: 273.280 ns/op
Iteration  17: 270.286 ns/op
Iteration  18: 273.355 ns/op
Iteration  19: 271.562 ns/op
Iteration  20: 274.174 ns/op


Result "benchmark.StringContains.regexMatches":
  283.006 ±(99.9%) 3.064 ns/op [Average]
  (min, avg, max) = (270.137, 283.006, 297.886), stdev = 9.035
  CI (99.9%): [279.942, 286.071] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = j
]3}^H}w0Nz@y.*httpvgmson@~74M)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 12.041 ns/op
# Warmup Iteration   2: 12.703 ns/op
# Warmup Iteration   3: 12.128 ns/op
# Warmup Iteration   4: 12.152 ns/op
# Warmup Iteration   5: 12.168 ns/op
Iteration   1: 12.163 ns/op
Iteration   2: 12.150 ns/op
Iteration   3: 12.144 ns/op
Iteration   4: 12.136 ns/op
Iteration   5: 12.143 ns/op
Iteration   6: 12.154 ns/op
Iteration   7: 12.149 ns/op
Iteration   8: 12.154 ns/op
Iteration   9: 12.153 ns/op
Iteration  10: 12.155 ns/op
Iteration  11: 12.153 ns/op
Iteration  12: 12.841 ns/op
Iteration  13: 12.841 ns/op
Iteration  14: 12.841 ns/op
Iteration  15: 12.842 ns/op
Iteration  16: 12.848 ns/op
Iteration  17: 12.841 ns/op
Iteration  18: 12.843 ns/op
Iteration  19: 12.846 ns/op
Iteration  20: 12.843 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.327 ns/op
# Warmup Iteration   2: 12.494 ns/op
# Warmup Iteration   3: 12.234 ns/op
# Warmup Iteration   4: 12.245 ns/op
# Warmup Iteration   5: 12.247 ns/op
Iteration   1: 12.235 ns/op
Iteration   2: 12.244 ns/op
Iteration   3: 12.241 ns/op
Iteration   4: 12.247 ns/op
Iteration   5: 12.246 ns/op
Iteration   6: 12.232 ns/op
Iteration   7: 12.237 ns/op
Iteration   8: 12.239 ns/op
Iteration   9: 12.247 ns/op
Iteration  10: 12.240 ns/op
Iteration  11: 12.250 ns/op
Iteration  12: 12.843 ns/op
Iteration  13: 12.842 ns/op
Iteration  14: 12.843 ns/op
Iteration  15: 12.844 ns/op
Iteration  16: 12.843 ns/op
Iteration  17: 12.842 ns/op
Iteration  18: 12.841 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.843 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 12.034 ns/op
# Warmup Iteration   2: 12.578 ns/op
# Warmup Iteration   3: 12.128 ns/op
# Warmup Iteration   4: 12.141 ns/op
# Warmup Iteration   5: 12.106 ns/op
Iteration   1: 12.111 ns/op
Iteration   2: 12.129 ns/op
Iteration   3: 12.136 ns/op
Iteration   4: 12.108 ns/op
Iteration   5: 12.101 ns/op
Iteration   6: 12.125 ns/op
Iteration   7: 12.096 ns/op
Iteration   8: 12.105 ns/op
Iteration   9: 12.096 ns/op
Iteration  10: 12.104 ns/op
Iteration  11: 12.144 ns/op
Iteration  12: 12.868 ns/op
Iteration  13: 12.869 ns/op
Iteration  14: 12.870 ns/op
Iteration  15: 12.870 ns/op
Iteration  16: 12.870 ns/op
Iteration  17: 12.871 ns/op
Iteration  18: 12.873 ns/op
Iteration  19: 12.871 ns/op
Iteration  20: 12.870 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.274 ns/op
# Warmup Iteration   2: 12.551 ns/op
# Warmup Iteration   3: 12.150 ns/op
# Warmup Iteration   4: 12.144 ns/op
# Warmup Iteration   5: 12.171 ns/op
Iteration   1: 12.152 ns/op
Iteration   2: 12.171 ns/op
Iteration   3: 12.173 ns/op
Iteration   4: 12.173 ns/op
Iteration   5: 12.169 ns/op
Iteration   6: 12.172 ns/op
Iteration   7: 12.181 ns/op
Iteration   8: 12.178 ns/op
Iteration   9: 12.159 ns/op
Iteration  10: 12.181 ns/op
Iteration  11: 12.168 ns/op
Iteration  12: 12.167 ns/op
Iteration  13: 12.166 ns/op
Iteration  14: 12.159 ns/op
Iteration  15: 12.162 ns/op
Iteration  16: 12.149 ns/op
Iteration  17: 12.156 ns/op
Iteration  18: 12.157 ns/op
Iteration  19: 12.153 ns/op
Iteration  20: 12.152 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.348 ns/op
# Warmup Iteration   2: 12.578 ns/op
# Warmup Iteration   3: 12.154 ns/op
# Warmup Iteration   4: 12.148 ns/op
# Warmup Iteration   5: 12.154 ns/op
Iteration   1: 12.173 ns/op
Iteration   2: 12.167 ns/op
Iteration   3: 12.162 ns/op
Iteration   4: 12.180 ns/op
Iteration   5: 12.155 ns/op
Iteration   6: 12.170 ns/op
Iteration   7: 12.168 ns/op
Iteration   8: 12.194 ns/op
Iteration   9: 12.155 ns/op
Iteration  10: 12.163 ns/op
Iteration  11: 12.162 ns/op
Iteration  12: 12.845 ns/op
Iteration  13: 12.843 ns/op
Iteration  14: 12.843 ns/op
Iteration  15: 12.851 ns/op
Iteration  16: 12.843 ns/op
Iteration  17: 12.844 ns/op
Iteration  18: 12.843 ns/op
Iteration  19: 12.858 ns/op
Iteration  20: 12.867 ns/op


Result "benchmark.StringContains.stringContains":
  12.414 ±(99.9%) 0.112 ns/op [Average]
  (min, avg, max) = (12.096, 12.414, 12.873), stdev = 0.331
  CI (99.9%): [12.301, 12.526] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  j
]3}^H}w0Nz@y.*httpvgmson@~74M  avgt  100  283.006 ± 3.064  ns/op
StringContains.stringContains     http  j
]3}^H}w0Nz@y.*httpvgmson@~74M  avgt  100   12.414 ± 0.112  ns/op

Benchmark result is saved to http_32_0.5_11.csv
