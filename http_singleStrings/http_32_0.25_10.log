# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Xg`fl@R7httpW.	Yd[~xBs44"]Ju/\Hm)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 422.790 ns/op
# Warmup Iteration   2: 432.389 ns/op
# Warmup Iteration   3: 398.139 ns/op
# Warmup Iteration   4: 353.868 ns/op
# Warmup Iteration   5: 358.256 ns/op
Iteration   1: 354.006 ns/op
Iteration   2: 359.015 ns/op
Iteration   3: 354.021 ns/op
Iteration   4: 360.012 ns/op
Iteration   5: 354.735 ns/op
Iteration   6: 362.047 ns/op
Iteration   7: 354.079 ns/op
Iteration   8: 354.224 ns/op
Iteration   9: 364.888 ns/op
Iteration  10: 354.205 ns/op
Iteration  11: 356.039 ns/op
Iteration  12: 353.639 ns/op
Iteration  13: 355.418 ns/op
Iteration  14: 354.197 ns/op
Iteration  15: 353.816 ns/op
Iteration  16: 355.216 ns/op
Iteration  17: 353.879 ns/op
Iteration  18: 355.811 ns/op
Iteration  19: 353.765 ns/op
Iteration  20: 355.362 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 420.462 ns/op
# Warmup Iteration   2: 432.787 ns/op
# Warmup Iteration   3: 396.911 ns/op
# Warmup Iteration   4: 354.127 ns/op
# Warmup Iteration   5: 357.408 ns/op
Iteration   1: 354.142 ns/op
Iteration   2: 358.729 ns/op
Iteration   3: 354.099 ns/op
Iteration   4: 359.839 ns/op
Iteration   5: 353.993 ns/op
Iteration   6: 361.904 ns/op
Iteration   7: 353.973 ns/op
Iteration   8: 354.272 ns/op
Iteration   9: 364.084 ns/op
Iteration  10: 354.019 ns/op
Iteration  11: 355.878 ns/op
Iteration  12: 354.054 ns/op
Iteration  13: 355.370 ns/op
Iteration  14: 353.995 ns/op
Iteration  15: 354.020 ns/op
Iteration  16: 358.044 ns/op
Iteration  17: 354.602 ns/op
Iteration  18: 355.840 ns/op
Iteration  19: 353.655 ns/op
Iteration  20: 355.779 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 413.470 ns/op
# Warmup Iteration   2: 417.423 ns/op
# Warmup Iteration   3: 414.047 ns/op
# Warmup Iteration   4: 374.013 ns/op
# Warmup Iteration   5: 377.342 ns/op
Iteration   1: 374.191 ns/op
Iteration   2: 378.924 ns/op
Iteration   3: 374.222 ns/op
Iteration   4: 380.544 ns/op
Iteration   5: 374.185 ns/op
Iteration   6: 374.102 ns/op
Iteration   7: 382.161 ns/op
Iteration   8: 374.165 ns/op
Iteration   9: 384.742 ns/op
Iteration  10: 373.814 ns/op
Iteration  11: 374.210 ns/op
Iteration  12: 376.349 ns/op
Iteration  13: 374.300 ns/op
Iteration  14: 377.643 ns/op
Iteration  15: 375.743 ns/op
Iteration  16: 376.328 ns/op
Iteration  17: 373.950 ns/op
Iteration  18: 373.736 ns/op
Iteration  19: 375.661 ns/op
Iteration  20: 374.068 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 419.452 ns/op
# Warmup Iteration   2: 429.946 ns/op
# Warmup Iteration   3: 396.005 ns/op
# Warmup Iteration   4: 354.169 ns/op
# Warmup Iteration   5: 357.370 ns/op
Iteration   1: 354.449 ns/op
Iteration   2: 358.743 ns/op
Iteration   3: 353.915 ns/op
Iteration   4: 359.890 ns/op
Iteration   5: 353.929 ns/op
Iteration   6: 361.617 ns/op
Iteration   7: 353.743 ns/op
Iteration   8: 354.066 ns/op
Iteration   9: 363.989 ns/op
Iteration  10: 353.779 ns/op
Iteration  11: 355.750 ns/op
Iteration  12: 353.884 ns/op
Iteration  13: 355.865 ns/op
Iteration  14: 353.851 ns/op
Iteration  15: 356.921 ns/op
Iteration  16: 354.212 ns/op
Iteration  17: 353.859 ns/op
Iteration  18: 355.792 ns/op
Iteration  19: 353.919 ns/op
Iteration  20: 355.534 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 421.178 ns/op
# Warmup Iteration   2: 430.162 ns/op
# Warmup Iteration   3: 396.357 ns/op
# Warmup Iteration   4: 354.434 ns/op
# Warmup Iteration   5: 357.488 ns/op
Iteration   1: 354.095 ns/op
Iteration   2: 358.743 ns/op
Iteration   3: 354.262 ns/op
Iteration   4: 360.131 ns/op
Iteration   5: 354.321 ns/op
Iteration   6: 361.974 ns/op
Iteration   7: 354.285 ns/op
Iteration   8: 354.422 ns/op
Iteration   9: 365.696 ns/op
Iteration  10: 354.287 ns/op
Iteration  11: 356.434 ns/op
Iteration  12: 354.318 ns/op
Iteration  13: 356.088 ns/op
Iteration  14: 354.230 ns/op
Iteration  15: 356.370 ns/op
Iteration  16: 354.300 ns/op
Iteration  17: 354.565 ns/op
Iteration  18: 356.072 ns/op
Iteration  19: 354.520 ns/op
Iteration  20: 356.843 ns/op


Result "benchmark.StringContains.regexMatches":
  360.054 ±(99.9%) 2.926 ns/op [Average]
  (min, avg, max) = (353.639, 360.054, 384.742), stdev = 8.628
  CI (99.9%): [357.127, 362.980] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Xg`fl@R7httpW.	Yd[~xBs44"]Ju/\Hm)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.215 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.891 ns/op
# Warmup Iteration   4: 9.862 ns/op
# Warmup Iteration   5: 9.878 ns/op
Iteration   1: 9.874 ns/op
Iteration   2: 9.890 ns/op
Iteration   3: 9.883 ns/op
Iteration   4: 9.883 ns/op
Iteration   5: 9.876 ns/op
Iteration   6: 9.873 ns/op
Iteration   7: 9.877 ns/op
Iteration   8: 9.876 ns/op
Iteration   9: 9.876 ns/op
Iteration  10: 9.866 ns/op
Iteration  11: 9.878 ns/op
Iteration  12: 9.871 ns/op
Iteration  13: 9.874 ns/op
Iteration  14: 9.846 ns/op
Iteration  15: 9.873 ns/op
Iteration  16: 9.878 ns/op
Iteration  17: 9.875 ns/op
Iteration  18: 9.860 ns/op
Iteration  19: 9.868 ns/op
Iteration  20: 9.871 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.217 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.852 ns/op
# Warmup Iteration   4: 9.842 ns/op
# Warmup Iteration   5: 9.848 ns/op
Iteration   1: 9.843 ns/op
Iteration   2: 9.870 ns/op
Iteration   3: 9.855 ns/op
Iteration   4: 9.859 ns/op
Iteration   5: 9.862 ns/op
Iteration   6: 9.857 ns/op
Iteration   7: 9.861 ns/op
Iteration   8: 9.858 ns/op
Iteration   9: 9.860 ns/op
Iteration  10: 9.860 ns/op
Iteration  11: 9.860 ns/op
Iteration  12: 9.848 ns/op
Iteration  13: 9.856 ns/op
Iteration  14: 9.846 ns/op
Iteration  15: 9.854 ns/op
Iteration  16: 9.859 ns/op
Iteration  17: 9.856 ns/op
Iteration  18: 9.851 ns/op
Iteration  19: 9.830 ns/op
Iteration  20: 9.847 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.214 ns/op
# Warmup Iteration   2: 9.754 ns/op
# Warmup Iteration   3: 9.959 ns/op
# Warmup Iteration   4: 9.947 ns/op
# Warmup Iteration   5: 9.945 ns/op
Iteration   1: 9.971 ns/op
Iteration   2: 9.970 ns/op
Iteration   3: 9.962 ns/op
Iteration   4: 9.959 ns/op
Iteration   5: 9.952 ns/op
Iteration   6: 9.957 ns/op
Iteration   7: 9.966 ns/op
Iteration   8: 9.974 ns/op
Iteration   9: 9.957 ns/op
Iteration  10: 9.967 ns/op
Iteration  11: 9.974 ns/op
Iteration  12: 9.974 ns/op
Iteration  13: 9.985 ns/op
Iteration  14: 9.969 ns/op
Iteration  15: 9.976 ns/op
Iteration  16: 9.958 ns/op
Iteration  17: 9.975 ns/op
Iteration  18: 9.967 ns/op
Iteration  19: 9.989 ns/op
Iteration  20: 9.963 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 13.154 ns/op
# Warmup Iteration   2: 12.709 ns/op
# Warmup Iteration   3: 12.285 ns/op
# Warmup Iteration   4: 12.284 ns/op
# Warmup Iteration   5: 12.285 ns/op
Iteration   1: 12.284 ns/op
Iteration   2: 12.285 ns/op
Iteration   3: 12.286 ns/op
Iteration   4: 12.285 ns/op
Iteration   5: 12.286 ns/op
Iteration   6: 12.284 ns/op
Iteration   7: 12.284 ns/op
Iteration   8: 12.306 ns/op
Iteration   9: 12.285 ns/op
Iteration  10: 12.286 ns/op
Iteration  11: 12.285 ns/op
Iteration  12: 9.944 ns/op
Iteration  13: 9.925 ns/op
Iteration  14: 9.928 ns/op
Iteration  15: 9.933 ns/op
Iteration  16: 9.919 ns/op
Iteration  17: 9.935 ns/op
Iteration  18: 9.939 ns/op
Iteration  19: 9.932 ns/op
Iteration  20: 9.964 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.223 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.850 ns/op
# Warmup Iteration   4: 9.850 ns/op
# Warmup Iteration   5: 9.866 ns/op
Iteration   1: 9.880 ns/op
Iteration   2: 9.865 ns/op
Iteration   3: 9.861 ns/op
Iteration   4: 9.859 ns/op
Iteration   5: 9.860 ns/op
Iteration   6: 9.859 ns/op
Iteration   7: 9.871 ns/op
Iteration   8: 9.856 ns/op
Iteration   9: 9.855 ns/op
Iteration  10: 9.844 ns/op
Iteration  11: 9.856 ns/op
Iteration  12: 9.850 ns/op
Iteration  13: 9.848 ns/op
Iteration  14: 9.861 ns/op
Iteration  15: 9.845 ns/op
Iteration  16: 9.869 ns/op
Iteration  17: 9.837 ns/op
Iteration  18: 9.845 ns/op
Iteration  19: 9.845 ns/op
Iteration  20: 9.836 ns/op


Result "benchmark.StringContains.stringContains":
  10.156 ±(99.9%) 0.256 ns/op [Average]
  (min, avg, max) = (9.830, 10.156, 12.306), stdev = 0.754
  CI (99.9%): [9.900, 10.412] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  Xg`fl@R7httpW.	Yd[~xBs44"]Ju/\Hm  avgt  100  360.054 ± 2.926  ns/op
StringContains.stringContains     http  Xg`fl@R7httpW.	Yd[~xBs44"]Ju/\Hm  avgt  100   10.156 ± 0.256  ns/op

Benchmark result is saved to http_32_0.25_10.csv
