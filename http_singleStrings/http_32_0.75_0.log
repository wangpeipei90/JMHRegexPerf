# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gTmK~$?Mg3`g5N/;SLT4}
~httpz$vy)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 261.101 ns/op
# Warmup Iteration   2: 208.006 ns/op
# Warmup Iteration   3: 181.724 ns/op
# Warmup Iteration   4: 182.248 ns/op
# Warmup Iteration   5: 183.080 ns/op
Iteration   1: 183.994 ns/op
Iteration   2: 185.112 ns/op
Iteration   3: 180.045 ns/op
Iteration   4: 180.753 ns/op
Iteration   5: 180.811 ns/op
Iteration   6: 180.750 ns/op
Iteration   7: 180.782 ns/op
Iteration   8: 180.806 ns/op
Iteration   9: 180.860 ns/op
Iteration  10: 179.960 ns/op
Iteration  11: 180.899 ns/op
Iteration  12: 180.770 ns/op
Iteration  13: 181.345 ns/op
Iteration  14: 182.529 ns/op
Iteration  15: 180.331 ns/op
Iteration  16: 180.348 ns/op
Iteration  17: 179.919 ns/op
Iteration  18: 180.549 ns/op
Iteration  19: 181.338 ns/op
Iteration  20: 180.705 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 269.117 ns/op
# Warmup Iteration   2: 218.300 ns/op
# Warmup Iteration   3: 194.134 ns/op
# Warmup Iteration   4: 194.505 ns/op
# Warmup Iteration   5: 195.233 ns/op
Iteration   1: 192.068 ns/op
Iteration   2: 196.695 ns/op
Iteration   3: 197.454 ns/op
Iteration   4: 193.916 ns/op
Iteration   5: 193.476 ns/op
Iteration   6: 192.216 ns/op
Iteration   7: 195.295 ns/op
Iteration   8: 193.672 ns/op
Iteration   9: 194.205 ns/op
Iteration  10: 194.916 ns/op
Iteration  11: 192.502 ns/op
Iteration  12: 194.225 ns/op
Iteration  13: 193.129 ns/op
Iteration  14: 193.906 ns/op
Iteration  15: 195.194 ns/op
Iteration  16: 192.823 ns/op
Iteration  17: 192.142 ns/op
Iteration  18: 192.782 ns/op
Iteration  19: 192.834 ns/op
Iteration  20: 193.222 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 269.692 ns/op
# Warmup Iteration   2: 219.989 ns/op
# Warmup Iteration   3: 193.386 ns/op
# Warmup Iteration   4: 195.641 ns/op
# Warmup Iteration   5: 196.740 ns/op
Iteration   1: 191.396 ns/op
Iteration   2: 195.865 ns/op
Iteration   3: 198.518 ns/op
Iteration   4: 192.563 ns/op
Iteration   5: 192.760 ns/op
Iteration   6: 191.363 ns/op
Iteration   7: 192.339 ns/op
Iteration   8: 192.372 ns/op
Iteration   9: 192.283 ns/op
Iteration  10: 192.357 ns/op
Iteration  11: 191.266 ns/op
Iteration  12: 192.543 ns/op
Iteration  13: 192.681 ns/op
Iteration  14: 192.472 ns/op
Iteration  15: 192.982 ns/op
Iteration  16: 191.813 ns/op
Iteration  17: 191.459 ns/op
Iteration  18: 192.004 ns/op
Iteration  19: 191.849 ns/op
Iteration  20: 191.921 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 269.169 ns/op
# Warmup Iteration   2: 221.463 ns/op
# Warmup Iteration   3: 193.494 ns/op
# Warmup Iteration   4: 193.992 ns/op
# Warmup Iteration   5: 194.904 ns/op
Iteration   1: 191.777 ns/op
Iteration   2: 196.041 ns/op
Iteration   3: 197.655 ns/op
Iteration   4: 192.815 ns/op
Iteration   5: 192.732 ns/op
Iteration   6: 191.935 ns/op
Iteration   7: 193.597 ns/op
Iteration   8: 192.826 ns/op
Iteration   9: 192.714 ns/op
Iteration  10: 192.773 ns/op
Iteration  11: 192.747 ns/op
Iteration  12: 192.094 ns/op
Iteration  13: 193.136 ns/op
Iteration  14: 195.452 ns/op
Iteration  15: 192.451 ns/op
Iteration  16: 192.470 ns/op
Iteration  17: 192.088 ns/op
Iteration  18: 192.550 ns/op
Iteration  19: 192.550 ns/op
Iteration  20: 192.860 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 269.025 ns/op
# Warmup Iteration   2: 218.991 ns/op
# Warmup Iteration   3: 194.139 ns/op
# Warmup Iteration   4: 194.752 ns/op
# Warmup Iteration   5: 195.591 ns/op
Iteration   1: 192.331 ns/op
Iteration   2: 196.522 ns/op
Iteration   3: 197.857 ns/op
Iteration   4: 193.545 ns/op
Iteration   5: 193.205 ns/op
Iteration   6: 192.270 ns/op
Iteration   7: 193.097 ns/op
Iteration   8: 193.434 ns/op
Iteration   9: 193.407 ns/op
Iteration  10: 194.228 ns/op
Iteration  11: 192.242 ns/op
Iteration  12: 194.589 ns/op
Iteration  13: 194.425 ns/op
Iteration  14: 194.414 ns/op
Iteration  15: 192.911 ns/op
Iteration  16: 192.791 ns/op
Iteration  17: 192.186 ns/op
Iteration  18: 192.796 ns/op
Iteration  19: 192.616 ns/op
Iteration  20: 193.132 ns/op


Result "benchmark.StringContains.regexMatches":
  190.873 ±(99.9%) 1.738 ns/op [Average]
  (min, avg, max) = (179.919, 190.873, 198.518), stdev = 5.125
  CI (99.9%): [189.135, 192.612] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gTmK~$?Mg3`g5N/;SLT4}
~httpz$vy)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.322 ns/op
# Warmup Iteration   2: 12.503 ns/op
# Warmup Iteration   3: 12.295 ns/op
# Warmup Iteration   4: 12.348 ns/op
# Warmup Iteration   5: 12.297 ns/op
Iteration   1: 12.319 ns/op
Iteration   2: 12.311 ns/op
Iteration   3: 12.301 ns/op
Iteration   4: 12.306 ns/op
Iteration   5: 12.293 ns/op
Iteration   6: 12.316 ns/op
Iteration   7: 12.307 ns/op
Iteration   8: 12.316 ns/op
Iteration   9: 12.323 ns/op
Iteration  10: 12.306 ns/op
Iteration  11: 12.289 ns/op
Iteration  12: 12.862 ns/op
Iteration  13: 12.858 ns/op
Iteration  14: 12.863 ns/op
Iteration  15: 12.865 ns/op
Iteration  16: 12.857 ns/op
Iteration  17: 12.863 ns/op
Iteration  18: 12.858 ns/op
Iteration  19: 12.867 ns/op
Iteration  20: 12.862 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.348 ns/op
# Warmup Iteration   2: 12.551 ns/op
# Warmup Iteration   3: 12.147 ns/op
# Warmup Iteration   4: 12.156 ns/op
# Warmup Iteration   5: 12.144 ns/op
Iteration   1: 12.148 ns/op
Iteration   2: 12.153 ns/op
Iteration   3: 12.145 ns/op
Iteration   4: 12.145 ns/op
Iteration   5: 12.136 ns/op
Iteration   6: 12.147 ns/op
Iteration   7: 12.135 ns/op
Iteration   8: 12.155 ns/op
Iteration   9: 12.152 ns/op
Iteration  10: 12.127 ns/op
Iteration  11: 12.139 ns/op
Iteration  12: 12.847 ns/op
Iteration  13: 12.845 ns/op
Iteration  14: 12.844 ns/op
Iteration  15: 12.842 ns/op
Iteration  16: 12.848 ns/op
Iteration  17: 12.846 ns/op
Iteration  18: 12.847 ns/op
Iteration  19: 12.868 ns/op
Iteration  20: 12.867 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 12.059 ns/op
# Warmup Iteration   2: 12.525 ns/op
# Warmup Iteration   3: 12.104 ns/op
# Warmup Iteration   4: 12.106 ns/op
# Warmup Iteration   5: 12.124 ns/op
Iteration   1: 12.116 ns/op
Iteration   2: 12.139 ns/op
Iteration   3: 12.121 ns/op
Iteration   4: 12.134 ns/op
Iteration   5: 12.133 ns/op
Iteration   6: 12.128 ns/op
Iteration   7: 12.150 ns/op
Iteration   8: 12.145 ns/op
Iteration   9: 12.113 ns/op
Iteration  10: 12.131 ns/op
Iteration  11: 12.137 ns/op
Iteration  12: 12.842 ns/op
Iteration  13: 12.841 ns/op
Iteration  14: 12.841 ns/op
Iteration  15: 12.841 ns/op
Iteration  16: 12.841 ns/op
Iteration  17: 12.843 ns/op
Iteration  18: 12.841 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.862 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.309 ns/op
# Warmup Iteration   2: 12.505 ns/op
# Warmup Iteration   3: 12.255 ns/op
# Warmup Iteration   4: 12.257 ns/op
# Warmup Iteration   5: 12.256 ns/op
Iteration   1: 12.245 ns/op
Iteration   2: 12.250 ns/op
Iteration   3: 12.258 ns/op
Iteration   4: 12.255 ns/op
Iteration   5: 12.256 ns/op
Iteration   6: 12.255 ns/op
Iteration   7: 12.252 ns/op
Iteration   8: 12.257 ns/op
Iteration   9: 12.249 ns/op
Iteration  10: 12.262 ns/op
Iteration  11: 12.257 ns/op
Iteration  12: 12.251 ns/op
Iteration  13: 12.260 ns/op
Iteration  14: 12.255 ns/op
Iteration  15: 12.257 ns/op
Iteration  16: 12.259 ns/op
Iteration  17: 12.260 ns/op
Iteration  18: 12.264 ns/op
Iteration  19: 12.260 ns/op
Iteration  20: 12.256 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.277 ns/op
# Warmup Iteration   2: 12.504 ns/op
# Warmup Iteration   3: 12.121 ns/op
# Warmup Iteration   4: 12.144 ns/op
# Warmup Iteration   5: 12.136 ns/op
Iteration   1: 12.141 ns/op
Iteration   2: 12.134 ns/op
Iteration   3: 12.127 ns/op
Iteration   4: 12.129 ns/op
Iteration   5: 12.138 ns/op
Iteration   6: 12.139 ns/op
Iteration   7: 12.140 ns/op
Iteration   8: 12.116 ns/op
Iteration   9: 12.135 ns/op
Iteration  10: 12.132 ns/op
Iteration  11: 12.133 ns/op
Iteration  12: 12.130 ns/op
Iteration  13: 12.118 ns/op
Iteration  14: 12.136 ns/op
Iteration  15: 12.123 ns/op
Iteration  16: 12.118 ns/op
Iteration  17: 12.123 ns/op
Iteration  18: 12.124 ns/op
Iteration  19: 12.128 ns/op
Iteration  20: 12.132 ns/op


Result "benchmark.StringContains.stringContains":
  12.371 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (12.113, 12.371, 12.868), stdev = 0.300
  CI (99.9%): [12.269, 12.473] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gTmK~$?Mg3`g5N/;SLT4}
~httpz$vy  avgt  100  190.873 ± 1.738  ns/op
StringContains.stringContains     http  gTmK~$?Mg3`g5N/;SLT4}
~httpz$vy  avgt  100   12.371 ± 0.102  ns/op

Benchmark result is saved to http_32_0.75_0.csv
