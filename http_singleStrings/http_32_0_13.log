# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http5~*/F)tk#$CC7[R-ZKs;9f(B_F)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 506.883 ns/op
# Warmup Iteration   2: 524.542 ns/op
# Warmup Iteration   3: 527.504 ns/op
# Warmup Iteration   4: 456.074 ns/op
# Warmup Iteration   5: 442.758 ns/op
Iteration   1: 448.389 ns/op
Iteration   2: 443.483 ns/op
Iteration   3: 443.081 ns/op
Iteration   4: 449.014 ns/op
Iteration   5: 443.581 ns/op
Iteration   6: 451.136 ns/op
Iteration   7: 443.162 ns/op
Iteration   8: 443.122 ns/op
Iteration   9: 453.984 ns/op
Iteration  10: 442.973 ns/op
Iteration  11: 443.306 ns/op
Iteration  12: 457.846 ns/op
Iteration  13: 443.125 ns/op
Iteration  14: 443.256 ns/op
Iteration  15: 445.206 ns/op
Iteration  16: 443.279 ns/op
Iteration  17: 442.844 ns/op
Iteration  18: 444.883 ns/op
Iteration  19: 442.872 ns/op
Iteration  20: 445.328 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 493.693 ns/op
# Warmup Iteration   2: 515.175 ns/op
# Warmup Iteration   3: 521.488 ns/op
# Warmup Iteration   4: 450.548 ns/op
# Warmup Iteration   5: 443.394 ns/op
Iteration   1: 447.785 ns/op
Iteration   2: 443.388 ns/op
Iteration   3: 443.848 ns/op
Iteration   4: 450.206 ns/op
Iteration   5: 444.802 ns/op
Iteration   6: 451.878 ns/op
Iteration   7: 443.408 ns/op
Iteration   8: 443.790 ns/op
Iteration   9: 453.280 ns/op
Iteration  10: 443.787 ns/op
Iteration  11: 443.670 ns/op
Iteration  12: 456.387 ns/op
Iteration  13: 443.782 ns/op
Iteration  14: 443.504 ns/op
Iteration  15: 447.478 ns/op
Iteration  16: 444.822 ns/op
Iteration  17: 446.852 ns/op
Iteration  18: 443.781 ns/op
Iteration  19: 443.476 ns/op
Iteration  20: 445.530 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 490.669 ns/op
# Warmup Iteration   2: 503.784 ns/op
# Warmup Iteration   3: 505.014 ns/op
# Warmup Iteration   4: 436.013 ns/op
# Warmup Iteration   5: 429.472 ns/op
Iteration   1: 433.276 ns/op
Iteration   2: 429.056 ns/op
Iteration   3: 434.525 ns/op
Iteration   4: 429.263 ns/op
Iteration   5: 429.397 ns/op
Iteration   6: 436.370 ns/op
Iteration   7: 429.084 ns/op
Iteration   8: 432.622 ns/op
Iteration   9: 440.767 ns/op
Iteration  10: 434.360 ns/op
Iteration  11: 447.041 ns/op
Iteration  12: 440.387 ns/op
Iteration  13: 440.298 ns/op
Iteration  14: 442.893 ns/op
Iteration  15: 440.955 ns/op
Iteration  16: 440.440 ns/op
Iteration  17: 442.695 ns/op
Iteration  18: 441.447 ns/op
Iteration  19: 441.832 ns/op
Iteration  20: 443.013 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 501.249 ns/op
# Warmup Iteration   2: 518.186 ns/op
# Warmup Iteration   3: 518.960 ns/op
# Warmup Iteration   4: 451.190 ns/op
# Warmup Iteration   5: 443.484 ns/op
Iteration   1: 447.340 ns/op
Iteration   2: 443.462 ns/op
Iteration   3: 443.348 ns/op
Iteration   4: 449.855 ns/op
Iteration   5: 444.030 ns/op
Iteration   6: 451.252 ns/op
Iteration   7: 443.157 ns/op
Iteration   8: 443.465 ns/op
Iteration   9: 452.089 ns/op
Iteration  10: 443.064 ns/op
Iteration  11: 443.200 ns/op
Iteration  12: 457.382 ns/op
Iteration  13: 445.983 ns/op
Iteration  14: 445.943 ns/op
Iteration  15: 446.370 ns/op
Iteration  16: 442.760 ns/op
Iteration  17: 443.144 ns/op
Iteration  18: 445.298 ns/op
Iteration  19: 442.810 ns/op
Iteration  20: 445.515 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 488.761 ns/op
# Warmup Iteration   2: 508.679 ns/op
# Warmup Iteration   3: 508.604 ns/op
# Warmup Iteration   4: 435.148 ns/op
# Warmup Iteration   5: 430.225 ns/op
Iteration   1: 434.069 ns/op
Iteration   2: 429.765 ns/op
Iteration   3: 434.903 ns/op
Iteration   4: 429.500 ns/op
Iteration   5: 429.587 ns/op
Iteration   6: 436.925 ns/op
Iteration   7: 429.699 ns/op
Iteration   8: 429.604 ns/op
Iteration   9: 439.141 ns/op
Iteration  10: 429.299 ns/op
Iteration  11: 442.733 ns/op
Iteration  12: 429.196 ns/op
Iteration  13: 429.203 ns/op
Iteration  14: 431.848 ns/op
Iteration  15: 429.489 ns/op
Iteration  16: 429.372 ns/op
Iteration  17: 431.521 ns/op
Iteration  18: 428.916 ns/op
Iteration  19: 429.061 ns/op
Iteration  20: 431.088 ns/op


Result "benchmark.StringContains.regexMatches":
  441.434 ±(99.9%) 2.463 ns/op [Average]
  (min, avg, max) = (428.916, 441.434, 457.846), stdev = 7.262
  CI (99.9%): [438.971, 443.897] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http5~*/F)tk#$CC7[R-ZKs;9f(B_F)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.504 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.882 ns/op
# Warmup Iteration   4: 9.891 ns/op
# Warmup Iteration   5: 9.862 ns/op
Iteration   1: 9.871 ns/op
Iteration   2: 9.871 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.891 ns/op
Iteration   5: 9.864 ns/op
Iteration   6: 9.856 ns/op
Iteration   7: 9.864 ns/op
Iteration   8: 9.872 ns/op
Iteration   9: 9.863 ns/op
Iteration  10: 9.861 ns/op
Iteration  11: 9.874 ns/op
Iteration  12: 9.887 ns/op
Iteration  13: 9.882 ns/op
Iteration  14: 9.874 ns/op
Iteration  15: 9.878 ns/op
Iteration  16: 9.875 ns/op
Iteration  17: 9.878 ns/op
Iteration  18: 9.860 ns/op
Iteration  19: 9.884 ns/op
Iteration  20: 9.885 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.228 ns/op
# Warmup Iteration   2: 9.728 ns/op
# Warmup Iteration   3: 9.843 ns/op
# Warmup Iteration   4: 9.865 ns/op
# Warmup Iteration   5: 9.871 ns/op
Iteration   1: 9.853 ns/op
Iteration   2: 9.862 ns/op
Iteration   3: 9.876 ns/op
Iteration   4: 9.862 ns/op
Iteration   5: 9.863 ns/op
Iteration   6: 9.862 ns/op
Iteration   7: 9.871 ns/op
Iteration   8: 9.886 ns/op
Iteration   9: 9.863 ns/op
Iteration  10: 9.866 ns/op
Iteration  11: 9.870 ns/op
Iteration  12: 9.871 ns/op
Iteration  13: 9.861 ns/op
Iteration  14: 9.879 ns/op
Iteration  15: 9.868 ns/op
Iteration  16: 9.888 ns/op
Iteration  17: 9.861 ns/op
Iteration  18: 9.863 ns/op
Iteration  19: 9.883 ns/op
Iteration  20: 9.887 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.455 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.940 ns/op
# Warmup Iteration   4: 9.958 ns/op
# Warmup Iteration   5: 9.964 ns/op
Iteration   1: 9.960 ns/op
Iteration   2: 9.964 ns/op
Iteration   3: 9.957 ns/op
Iteration   4: 9.943 ns/op
Iteration   5: 9.928 ns/op
Iteration   6: 9.938 ns/op
Iteration   7: 9.945 ns/op
Iteration   8: 9.952 ns/op
Iteration   9: 9.942 ns/op
Iteration  10: 9.932 ns/op
Iteration  11: 9.945 ns/op
Iteration  12: 9.959 ns/op
Iteration  13: 9.952 ns/op
Iteration  14: 9.947 ns/op
Iteration  15: 9.943 ns/op
Iteration  16: 9.955 ns/op
Iteration  17: 9.951 ns/op
Iteration  18: 9.935 ns/op
Iteration  19: 9.915 ns/op
Iteration  20: 9.953 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.194 ns/op
# Warmup Iteration   2: 9.715 ns/op
# Warmup Iteration   3: 9.789 ns/op
# Warmup Iteration   4: 9.796 ns/op
# Warmup Iteration   5: 9.791 ns/op
Iteration   1: 9.783 ns/op
Iteration   2: 9.780 ns/op
Iteration   3: 9.783 ns/op
Iteration   4: 9.790 ns/op
Iteration   5: 9.785 ns/op
Iteration   6: 9.781 ns/op
Iteration   7: 9.777 ns/op
Iteration   8: 9.790 ns/op
Iteration   9: 9.787 ns/op
Iteration  10: 9.779 ns/op
Iteration  11: 9.793 ns/op
Iteration  12: 9.780 ns/op
Iteration  13: 9.794 ns/op
Iteration  14: 9.772 ns/op
Iteration  15: 9.780 ns/op
Iteration  16: 9.781 ns/op
Iteration  17: 9.786 ns/op
Iteration  18: 9.781 ns/op
Iteration  19: 9.793 ns/op
Iteration  20: 9.773 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.232 ns/op
# Warmup Iteration   2: 9.731 ns/op
# Warmup Iteration   3: 9.884 ns/op
# Warmup Iteration   4: 9.878 ns/op
# Warmup Iteration   5: 9.898 ns/op
Iteration   1: 9.877 ns/op
Iteration   2: 9.872 ns/op
Iteration   3: 9.886 ns/op
Iteration   4: 9.883 ns/op
Iteration   5: 9.875 ns/op
Iteration   6: 9.877 ns/op
Iteration   7: 9.870 ns/op
Iteration   8: 9.890 ns/op
Iteration   9: 9.893 ns/op
Iteration  10: 9.890 ns/op
Iteration  11: 9.877 ns/op
Iteration  12: 9.878 ns/op
Iteration  13: 9.892 ns/op
Iteration  14: 9.882 ns/op
Iteration  15: 9.898 ns/op
Iteration  16: 9.876 ns/op
Iteration  17: 9.884 ns/op
Iteration  18: 9.859 ns/op
Iteration  19: 9.871 ns/op
Iteration  20: 9.913 ns/op


Result "benchmark.StringContains.stringContains":
  9.871 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (9.772, 9.871, 9.964), stdev = 0.053
  CI (99.9%): [9.853, 9.889] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http5~*/F)tk#$CC7[R-ZKs;9f(B_F  avgt  100  441.434 ± 2.463  ns/op
StringContains.stringContains     http  http5~*/F)tk#$CC7[R-ZKs;9f(B_F  avgt  100    9.871 ± 0.018  ns/op

Benchmark result is saved to http_32_0_13.csv
