# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = g>p1afI7B]YRhttp)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 221.832 ns/op
# Warmup Iteration   2: 148.893 ns/op
# Warmup Iteration   3: 127.777 ns/op
# Warmup Iteration   4: 127.763 ns/op
# Warmup Iteration   5: 127.730 ns/op
Iteration   1: 131.053 ns/op
Iteration   2: 124.874 ns/op
Iteration   3: 125.917 ns/op
Iteration   4: 125.658 ns/op
Iteration   5: 124.749 ns/op
Iteration   6: 126.096 ns/op
Iteration   7: 124.736 ns/op
Iteration   8: 124.753 ns/op
Iteration   9: 124.465 ns/op
Iteration  10: 124.578 ns/op
Iteration  11: 125.283 ns/op
Iteration  12: 124.606 ns/op
Iteration  13: 124.241 ns/op
Iteration  14: 124.583 ns/op
Iteration  15: 124.297 ns/op
Iteration  16: 124.298 ns/op
Iteration  17: 124.429 ns/op
Iteration  18: 124.857 ns/op
Iteration  19: 124.349 ns/op
Iteration  20: 124.458 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 229.479 ns/op
# Warmup Iteration   2: 153.861 ns/op
# Warmup Iteration   3: 137.819 ns/op
# Warmup Iteration   4: 137.192 ns/op
# Warmup Iteration   5: 138.004 ns/op
Iteration   1: 138.907 ns/op
Iteration   2: 135.760 ns/op
Iteration   3: 135.620 ns/op
Iteration   4: 136.084 ns/op
Iteration   5: 135.500 ns/op
Iteration   6: 135.781 ns/op
Iteration   7: 135.497 ns/op
Iteration   8: 135.544 ns/op
Iteration   9: 135.546 ns/op
Iteration  10: 135.328 ns/op
Iteration  11: 135.178 ns/op
Iteration  12: 135.330 ns/op
Iteration  13: 135.393 ns/op
Iteration  14: 135.479 ns/op
Iteration  15: 135.502 ns/op
Iteration  16: 135.555 ns/op
Iteration  17: 135.773 ns/op
Iteration  18: 135.423 ns/op
Iteration  19: 135.720 ns/op
Iteration  20: 135.601 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 215.256 ns/op
# Warmup Iteration   2: 146.051 ns/op
# Warmup Iteration   3: 131.698 ns/op
# Warmup Iteration   4: 131.094 ns/op
# Warmup Iteration   5: 131.824 ns/op
Iteration   1: 132.506 ns/op
Iteration   2: 130.233 ns/op
Iteration   3: 129.504 ns/op
Iteration   4: 129.504 ns/op
Iteration   5: 129.475 ns/op
Iteration   6: 129.473 ns/op
Iteration   7: 130.092 ns/op
Iteration   8: 129.509 ns/op
Iteration   9: 129.101 ns/op
Iteration  10: 129.093 ns/op
Iteration  11: 129.134 ns/op
Iteration  12: 129.361 ns/op
Iteration  13: 129.138 ns/op
Iteration  14: 129.144 ns/op
Iteration  15: 129.451 ns/op
Iteration  16: 130.130 ns/op
Iteration  17: 129.588 ns/op
Iteration  18: 129.309 ns/op
Iteration  19: 129.493 ns/op
Iteration  20: 129.619 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 220.846 ns/op
# Warmup Iteration   2: 150.078 ns/op
# Warmup Iteration   3: 130.592 ns/op
# Warmup Iteration   4: 129.976 ns/op
# Warmup Iteration   5: 130.640 ns/op
Iteration   1: 131.900 ns/op
Iteration   2: 129.965 ns/op
Iteration   3: 128.342 ns/op
Iteration   4: 128.365 ns/op
Iteration   5: 129.046 ns/op
Iteration   6: 129.440 ns/op
Iteration   7: 128.213 ns/op
Iteration   8: 129.432 ns/op
Iteration   9: 127.831 ns/op
Iteration  10: 127.911 ns/op
Iteration  11: 128.032 ns/op
Iteration  12: 127.763 ns/op
Iteration  13: 127.833 ns/op
Iteration  14: 127.946 ns/op
Iteration  15: 127.912 ns/op
Iteration  16: 128.350 ns/op
Iteration  17: 128.167 ns/op
Iteration  18: 128.160 ns/op
Iteration  19: 127.881 ns/op
Iteration  20: 128.409 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 215.134 ns/op
# Warmup Iteration   2: 143.770 ns/op
# Warmup Iteration   3: 125.664 ns/op
# Warmup Iteration   4: 125.694 ns/op
# Warmup Iteration   5: 126.766 ns/op
Iteration   1: 127.224 ns/op
Iteration   2: 124.056 ns/op
Iteration   3: 124.123 ns/op
Iteration   4: 124.170 ns/op
Iteration   5: 124.737 ns/op
Iteration   6: 124.152 ns/op
Iteration   7: 124.154 ns/op
Iteration   8: 124.114 ns/op
Iteration   9: 124.725 ns/op
Iteration  10: 123.740 ns/op
Iteration  11: 123.732 ns/op
Iteration  12: 123.743 ns/op
Iteration  13: 125.203 ns/op
Iteration  14: 123.771 ns/op
Iteration  15: 125.182 ns/op
Iteration  16: 124.040 ns/op
Iteration  17: 124.325 ns/op
Iteration  18: 123.879 ns/op
Iteration  19: 123.967 ns/op
Iteration  20: 124.227 ns/op


Result "benchmark.StringContains.regexMatches":
  128.678 ±(99.9%) 1.420 ns/op [Average]
  (min, avg, max) = (123.732, 128.678, 138.907), stdev = 4.186
  CI (99.9%): [127.258, 130.098] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = g>p1afI7B]YRhttp)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.474 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.758 ns/op
# Warmup Iteration   4: 9.759 ns/op
# Warmup Iteration   5: 9.757 ns/op
Iteration   1: 9.767 ns/op
Iteration   2: 9.778 ns/op
Iteration   3: 9.769 ns/op
Iteration   4: 9.769 ns/op
Iteration   5: 9.770 ns/op
Iteration   6: 9.759 ns/op
Iteration   7: 9.767 ns/op
Iteration   8: 9.779 ns/op
Iteration   9: 9.773 ns/op
Iteration  10: 9.789 ns/op
Iteration  11: 9.763 ns/op
Iteration  12: 9.779 ns/op
Iteration  13: 9.758 ns/op
Iteration  14: 9.757 ns/op
Iteration  15: 9.759 ns/op
Iteration  16: 9.764 ns/op
Iteration  17: 9.747 ns/op
Iteration  18: 9.759 ns/op
Iteration  19: 9.767 ns/op
Iteration  20: 9.770 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.492 ns/op
# Warmup Iteration   2: 9.729 ns/op
# Warmup Iteration   3: 9.916 ns/op
# Warmup Iteration   4: 9.930 ns/op
# Warmup Iteration   5: 9.939 ns/op
Iteration   1: 9.938 ns/op
Iteration   2: 9.926 ns/op
Iteration   3: 9.923 ns/op
Iteration   4: 9.935 ns/op
Iteration   5: 9.928 ns/op
Iteration   6: 9.935 ns/op
Iteration   7: 9.915 ns/op
Iteration   8: 9.951 ns/op
Iteration   9: 9.942 ns/op
Iteration  10: 9.937 ns/op
Iteration  11: 9.941 ns/op
Iteration  12: 9.953 ns/op
Iteration  13: 9.941 ns/op
Iteration  14: 9.949 ns/op
Iteration  15: 9.905 ns/op
Iteration  16: 9.940 ns/op
Iteration  17: 9.920 ns/op
Iteration  18: 9.920 ns/op
Iteration  19: 9.890 ns/op
Iteration  20: 9.889 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.464 ns/op
# Warmup Iteration   2: 9.730 ns/op
# Warmup Iteration   3: 9.799 ns/op
# Warmup Iteration   4: 9.801 ns/op
# Warmup Iteration   5: 9.790 ns/op
Iteration   1: 9.798 ns/op
Iteration   2: 9.809 ns/op
Iteration   3: 9.815 ns/op
Iteration   4: 9.789 ns/op
Iteration   5: 9.808 ns/op
Iteration   6: 9.808 ns/op
Iteration   7: 9.802 ns/op
Iteration   8: 9.823 ns/op
Iteration   9: 9.819 ns/op
Iteration  10: 9.799 ns/op
Iteration  11: 9.811 ns/op
Iteration  12: 9.854 ns/op
Iteration  13: 9.905 ns/op
Iteration  14: 9.810 ns/op
Iteration  15: 9.802 ns/op
Iteration  16: 9.833 ns/op
Iteration  17: 9.885 ns/op
Iteration  18: 9.904 ns/op
Iteration  19: 9.810 ns/op
Iteration  20: 9.818 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.247 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.832 ns/op
# Warmup Iteration   4: 9.829 ns/op
# Warmup Iteration   5: 9.825 ns/op
Iteration   1: 9.818 ns/op
Iteration   2: 9.843 ns/op
Iteration   3: 9.835 ns/op
Iteration   4: 9.844 ns/op
Iteration   5: 9.825 ns/op
Iteration   6: 9.839 ns/op
Iteration   7: 9.823 ns/op
Iteration   8: 9.856 ns/op
Iteration   9: 9.843 ns/op
Iteration  10: 9.844 ns/op
Iteration  11: 9.837 ns/op
Iteration  12: 9.812 ns/op
Iteration  13: 9.837 ns/op
Iteration  14: 9.819 ns/op
Iteration  15: 9.827 ns/op
Iteration  16: 9.827 ns/op
Iteration  17: 9.850 ns/op
Iteration  18: 9.844 ns/op
Iteration  19: 9.836 ns/op
Iteration  20: 9.848 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.199 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.862 ns/op
# Warmup Iteration   4: 9.854 ns/op
# Warmup Iteration   5: 9.886 ns/op
Iteration   1: 9.893 ns/op
Iteration   2: 9.864 ns/op
Iteration   3: 9.871 ns/op
Iteration   4: 9.861 ns/op
Iteration   5: 9.851 ns/op
Iteration   6: 9.856 ns/op
Iteration   7: 9.846 ns/op
Iteration   8: 9.847 ns/op
Iteration   9: 9.854 ns/op
Iteration  10: 9.872 ns/op
Iteration  11: 9.877 ns/op
Iteration  12: 9.874 ns/op
Iteration  13: 9.852 ns/op
Iteration  14: 9.874 ns/op
Iteration  15: 9.850 ns/op
Iteration  16: 9.844 ns/op
Iteration  17: 9.852 ns/op
Iteration  18: 9.853 ns/op
Iteration  19: 9.851 ns/op
Iteration  20: 9.830 ns/op


Result "benchmark.StringContains.stringContains":
  9.843 ±(99.9%) 0.019 ns/op [Average]
  (min, avg, max) = (9.747, 9.843, 9.953), stdev = 0.056
  CI (99.9%): [9.824, 9.862] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  g>p1afI7B]YRhttp  avgt  100  128.678 ± 1.420  ns/op
StringContains.stringContains     http  g>p1afI7B]YRhttp  avgt  100    9.843 ± 0.019  ns/op

Benchmark result is saved to http_16_0.75_5.csv
