# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = !B^k8^P)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 184.692 ns/op
# Warmup Iteration   2: 107.145 ns/op
# Warmup Iteration   3: 100.006 ns/op
# Warmup Iteration   4: 99.207 ns/op
# Warmup Iteration   5: 100.371 ns/op
Iteration   1: 97.781 ns/op
Iteration   2: 97.449 ns/op
Iteration   3: 98.018 ns/op
Iteration   4: 97.925 ns/op
Iteration   5: 97.941 ns/op
Iteration   6: 97.138 ns/op
Iteration   7: 97.298 ns/op
Iteration   8: 97.329 ns/op
Iteration   9: 97.113 ns/op
Iteration  10: 97.385 ns/op
Iteration  11: 97.181 ns/op
Iteration  12: 97.452 ns/op
Iteration  13: 97.367 ns/op
Iteration  14: 97.188 ns/op
Iteration  15: 97.396 ns/op
Iteration  16: 97.318 ns/op
Iteration  17: 97.476 ns/op
Iteration  18: 97.691 ns/op
Iteration  19: 97.181 ns/op
Iteration  20: 97.374 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 177.176 ns/op
# Warmup Iteration   2: 102.596 ns/op
# Warmup Iteration   3: 100.250 ns/op
# Warmup Iteration   4: 99.133 ns/op
# Warmup Iteration   5: 99.547 ns/op
Iteration   1: 97.659 ns/op
Iteration   2: 97.020 ns/op
Iteration   3: 97.512 ns/op
Iteration   4: 97.062 ns/op
Iteration   5: 97.586 ns/op
Iteration   6: 96.919 ns/op
Iteration   7: 97.408 ns/op
Iteration   8: 96.949 ns/op
Iteration   9: 96.782 ns/op
Iteration  10: 96.960 ns/op
Iteration  11: 97.122 ns/op
Iteration  12: 96.814 ns/op
Iteration  13: 97.348 ns/op
Iteration  14: 96.890 ns/op
Iteration  15: 97.411 ns/op
Iteration  16: 97.394 ns/op
Iteration  17: 96.958 ns/op
Iteration  18: 97.241 ns/op
Iteration  19: 96.834 ns/op
Iteration  20: 96.963 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 177.031 ns/op
# Warmup Iteration   2: 103.653 ns/op
# Warmup Iteration   3: 99.779 ns/op
# Warmup Iteration   4: 99.030 ns/op
# Warmup Iteration   5: 100.084 ns/op
Iteration   1: 97.811 ns/op
Iteration   2: 97.326 ns/op
Iteration   3: 97.800 ns/op
Iteration   4: 97.351 ns/op
Iteration   5: 97.780 ns/op
Iteration   6: 97.280 ns/op
Iteration   7: 97.057 ns/op
Iteration   8: 97.250 ns/op
Iteration   9: 97.041 ns/op
Iteration  10: 97.253 ns/op
Iteration  11: 97.308 ns/op
Iteration  12: 96.957 ns/op
Iteration  13: 97.263 ns/op
Iteration  14: 97.444 ns/op
Iteration  15: 97.258 ns/op
Iteration  16: 97.332 ns/op
Iteration  17: 97.131 ns/op
Iteration  18: 97.642 ns/op
Iteration  19: 97.357 ns/op
Iteration  20: 97.809 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 178.330 ns/op
# Warmup Iteration   2: 103.852 ns/op
# Warmup Iteration   3: 99.913 ns/op
# Warmup Iteration   4: 99.241 ns/op
# Warmup Iteration   5: 100.398 ns/op
Iteration   1: 97.921 ns/op
Iteration   2: 97.515 ns/op
Iteration   3: 97.927 ns/op
Iteration   4: 97.540 ns/op
Iteration   5: 97.978 ns/op
Iteration   6: 97.486 ns/op
Iteration   7: 97.314 ns/op
Iteration   8: 98.185 ns/op
Iteration   9: 97.602 ns/op
Iteration  10: 97.573 ns/op
Iteration  11: 97.809 ns/op
Iteration  12: 97.438 ns/op
Iteration  13: 97.487 ns/op
Iteration  14: 97.242 ns/op
Iteration  15: 97.504 ns/op
Iteration  16: 98.000 ns/op
Iteration  17: 97.605 ns/op
Iteration  18: 97.907 ns/op
Iteration  19: 97.488 ns/op
Iteration  20: 97.594 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 177.321 ns/op
# Warmup Iteration   2: 103.753 ns/op
# Warmup Iteration   3: 99.783 ns/op
# Warmup Iteration   4: 99.079 ns/op
# Warmup Iteration   5: 100.155 ns/op
Iteration   1: 97.837 ns/op
Iteration   2: 97.390 ns/op
Iteration   3: 97.853 ns/op
Iteration   4: 97.379 ns/op
Iteration   5: 97.862 ns/op
Iteration   6: 97.316 ns/op
Iteration   7: 97.077 ns/op
Iteration   8: 97.288 ns/op
Iteration   9: 97.202 ns/op
Iteration  10: 97.504 ns/op
Iteration  11: 97.547 ns/op
Iteration  12: 97.324 ns/op
Iteration  13: 97.363 ns/op
Iteration  14: 97.091 ns/op
Iteration  15: 97.289 ns/op
Iteration  16: 97.561 ns/op
Iteration  17: 97.162 ns/op
Iteration  18: 97.390 ns/op
Iteration  19: 97.237 ns/op
Iteration  20: 97.908 ns/op


Result "benchmark.StringContains.regexMatches":
  97.410 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (96.782, 97.410, 98.185), stdev = 0.309
  CI (99.9%): [97.305, 97.515] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = !B^k8^P)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.463 ns/op
# Warmup Iteration   2: 9.090 ns/op
# Warmup Iteration   3: 8.964 ns/op
# Warmup Iteration   4: 8.963 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.964 ns/op
Iteration   2: 8.963 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.963 ns/op
Iteration   6: 8.964 ns/op
Iteration   7: 8.968 ns/op
Iteration   8: 8.979 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.963 ns/op
Iteration  11: 8.964 ns/op
Iteration  12: 8.964 ns/op
Iteration  13: 8.970 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.962 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.982 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.452 ns/op
# Warmup Iteration   2: 9.057 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.968 ns/op
# Warmup Iteration   5: 8.969 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.968 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.966 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.971 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.970 ns/op
Iteration  13: 8.964 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.968 ns/op
Iteration  18: 8.963 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.967 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.454 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.969 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.967 ns/op
Iteration   4: 8.967 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.966 ns/op
Iteration   9: 8.966 ns/op
Iteration  10: 8.968 ns/op
Iteration  11: 8.967 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.965 ns/op
Iteration  16: 8.964 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.456 ns/op
# Warmup Iteration   2: 9.055 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.968 ns/op
# Warmup Iteration   5: 8.969 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.968 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.967 ns/op
Iteration   9: 8.968 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.966 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.490 ns/op
# Warmup Iteration   2: 9.072 ns/op
# Warmup Iteration   3: 9.143 ns/op
# Warmup Iteration   4: 9.170 ns/op
# Warmup Iteration   5: 9.162 ns/op
Iteration   1: 9.165 ns/op
Iteration   2: 9.177 ns/op
Iteration   3: 9.243 ns/op
Iteration   4: 9.221 ns/op
Iteration   5: 9.220 ns/op
Iteration   6: 9.180 ns/op
Iteration   7: 9.191 ns/op
Iteration   8: 9.167 ns/op
Iteration   9: 9.165 ns/op
Iteration  10: 9.174 ns/op
Iteration  11: 9.170 ns/op
Iteration  12: 9.171 ns/op
Iteration  13: 9.176 ns/op
Iteration  14: 9.151 ns/op
Iteration  15: 9.176 ns/op
Iteration  16: 9.159 ns/op
Iteration  17: 9.148 ns/op
Iteration  18: 9.166 ns/op
Iteration  19: 9.146 ns/op
Iteration  20: 9.170 ns/op


Result "benchmark.StringContains.stringContains":
  9.009 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (8.962, 9.009, 9.243), stdev = 0.085
  CI (99.9%): [8.980, 9.037] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http  !B^k8^P  avgt  100  97.410 ± 0.105  ns/op
StringContains.stringContains     http  !B^k8^P  avgt  100   9.009 ± 0.029  ns/op

Benchmark result is saved to http_8_1_1.csv
