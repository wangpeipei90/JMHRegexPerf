# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpPc:QkI(EL<M:)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 343.805 ns/op
# Warmup Iteration   2: 342.722 ns/op
# Warmup Iteration   3: 269.814 ns/op
# Warmup Iteration   4: 265.337 ns/op
# Warmup Iteration   5: 262.576 ns/op
Iteration   1: 265.930 ns/op
Iteration   2: 267.548 ns/op
Iteration   3: 263.014 ns/op
Iteration   4: 269.256 ns/op
Iteration   5: 270.613 ns/op
Iteration   6: 262.280 ns/op
Iteration   7: 263.761 ns/op
Iteration   8: 263.122 ns/op
Iteration   9: 263.818 ns/op
Iteration  10: 262.989 ns/op
Iteration  11: 263.308 ns/op
Iteration  12: 263.211 ns/op
Iteration  13: 261.811 ns/op
Iteration  14: 263.334 ns/op
Iteration  15: 262.449 ns/op
Iteration  16: 263.191 ns/op
Iteration  17: 263.346 ns/op
Iteration  18: 262.063 ns/op
Iteration  19: 264.403 ns/op
Iteration  20: 261.791 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 334.274 ns/op
# Warmup Iteration   2: 344.527 ns/op
# Warmup Iteration   3: 263.510 ns/op
# Warmup Iteration   4: 261.648 ns/op
# Warmup Iteration   5: 260.932 ns/op
Iteration   1: 261.037 ns/op
Iteration   2: 264.182 ns/op
Iteration   3: 259.614 ns/op
Iteration   4: 264.663 ns/op
Iteration   5: 266.829 ns/op
Iteration   6: 259.011 ns/op
Iteration   7: 260.358 ns/op
Iteration   8: 259.484 ns/op
Iteration   9: 260.916 ns/op
Iteration  10: 260.616 ns/op
Iteration  11: 259.169 ns/op
Iteration  12: 260.321 ns/op
Iteration  13: 259.182 ns/op
Iteration  14: 260.647 ns/op
Iteration  15: 260.373 ns/op
Iteration  16: 259.054 ns/op
Iteration  17: 261.160 ns/op
Iteration  18: 259.245 ns/op
Iteration  19: 260.977 ns/op
Iteration  20: 262.748 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 333.974 ns/op
# Warmup Iteration   2: 336.974 ns/op
# Warmup Iteration   3: 257.232 ns/op
# Warmup Iteration   4: 256.891 ns/op
# Warmup Iteration   5: 257.258 ns/op
Iteration   1: 254.065 ns/op
Iteration   2: 258.704 ns/op
Iteration   3: 257.931 ns/op
Iteration   4: 258.324 ns/op
Iteration   5: 262.648 ns/op
Iteration   6: 254.155 ns/op
Iteration   7: 254.978 ns/op
Iteration   8: 255.382 ns/op
Iteration   9: 253.995 ns/op
Iteration  10: 255.613 ns/op
Iteration  11: 254.050 ns/op
Iteration  12: 255.429 ns/op
Iteration  13: 255.480 ns/op
Iteration  14: 253.590 ns/op
Iteration  15: 255.190 ns/op
Iteration  16: 254.037 ns/op
Iteration  17: 256.522 ns/op
Iteration  18: 256.097 ns/op
Iteration  19: 254.204 ns/op
Iteration  20: 255.704 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 331.716 ns/op
# Warmup Iteration   2: 338.582 ns/op
# Warmup Iteration   3: 257.145 ns/op
# Warmup Iteration   4: 256.855 ns/op
# Warmup Iteration   5: 257.620 ns/op
Iteration   1: 254.240 ns/op
Iteration   2: 258.682 ns/op
Iteration   3: 259.539 ns/op
Iteration   4: 254.303 ns/op
Iteration   5: 261.718 ns/op
Iteration   6: 254.168 ns/op
Iteration   7: 255.519 ns/op
Iteration   8: 255.580 ns/op
Iteration   9: 254.286 ns/op
Iteration  10: 255.598 ns/op
Iteration  11: 254.342 ns/op
Iteration  12: 255.009 ns/op
Iteration  13: 255.066 ns/op
Iteration  14: 253.536 ns/op
Iteration  15: 255.263 ns/op
Iteration  16: 254.320 ns/op
Iteration  17: 255.627 ns/op
Iteration  18: 255.755 ns/op
Iteration  19: 254.404 ns/op
Iteration  20: 256.828 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 337.414 ns/op
# Warmup Iteration   2: 344.634 ns/op
# Warmup Iteration   3: 262.230 ns/op
# Warmup Iteration   4: 259.549 ns/op
# Warmup Iteration   5: 260.369 ns/op
Iteration   1: 257.387 ns/op
Iteration   2: 261.633 ns/op
Iteration   3: 258.092 ns/op
Iteration   4: 261.841 ns/op
Iteration   5: 264.442 ns/op
Iteration   6: 257.098 ns/op
Iteration   7: 258.978 ns/op
Iteration   8: 257.577 ns/op
Iteration   9: 258.215 ns/op
Iteration  10: 258.158 ns/op
Iteration  11: 257.092 ns/op
Iteration  12: 257.825 ns/op
Iteration  13: 259.246 ns/op
Iteration  14: 257.828 ns/op
Iteration  15: 258.140 ns/op
Iteration  16: 256.882 ns/op
Iteration  17: 257.734 ns/op
Iteration  18: 257.850 ns/op
Iteration  19: 256.838 ns/op
Iteration  20: 258.451 ns/op


Result "benchmark.StringContains.regexMatches":
  259.020 ±(99.9%) 1.301 ns/op [Average]
  (min, avg, max) = (253.536, 259.020, 270.613), stdev = 3.835
  CI (99.9%): [257.719, 260.321] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpPc:QkI(EL<M:)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.484 ns/op
# Warmup Iteration   2: 9.735 ns/op
# Warmup Iteration   3: 9.989 ns/op
# Warmup Iteration   4: 9.995 ns/op
# Warmup Iteration   5: 9.993 ns/op
Iteration   1: 9.995 ns/op
Iteration   2: 9.985 ns/op
Iteration   3: 9.976 ns/op
Iteration   4: 9.980 ns/op
Iteration   5: 9.991 ns/op
Iteration   6: 9.982 ns/op
Iteration   7: 9.972 ns/op
Iteration   8: 9.994 ns/op
Iteration   9: 10.009 ns/op
Iteration  10: 9.984 ns/op
Iteration  11: 9.970 ns/op
Iteration  12: 10.009 ns/op
Iteration  13: 9.983 ns/op
Iteration  14: 9.968 ns/op
Iteration  15: 9.991 ns/op
Iteration  16: 9.977 ns/op
Iteration  17: 9.986 ns/op
Iteration  18: 9.995 ns/op
Iteration  19: 9.993 ns/op
Iteration  20: 9.988 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.190 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.852 ns/op
# Warmup Iteration   4: 9.860 ns/op
# Warmup Iteration   5: 9.863 ns/op
Iteration   1: 9.842 ns/op
Iteration   2: 9.841 ns/op
Iteration   3: 9.838 ns/op
Iteration   4: 9.841 ns/op
Iteration   5: 9.822 ns/op
Iteration   6: 9.831 ns/op
Iteration   7: 9.836 ns/op
Iteration   8: 9.845 ns/op
Iteration   9: 9.840 ns/op
Iteration  10: 9.847 ns/op
Iteration  11: 9.847 ns/op
Iteration  12: 9.841 ns/op
Iteration  13: 9.839 ns/op
Iteration  14: 9.852 ns/op
Iteration  15: 9.849 ns/op
Iteration  16: 9.855 ns/op
Iteration  17: 9.855 ns/op
Iteration  18: 9.843 ns/op
Iteration  19: 9.866 ns/op
Iteration  20: 9.854 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.488 ns/op
# Warmup Iteration   2: 9.722 ns/op
# Warmup Iteration   3: 9.861 ns/op
# Warmup Iteration   4: 9.862 ns/op
# Warmup Iteration   5: 9.858 ns/op
Iteration   1: 9.857 ns/op
Iteration   2: 9.844 ns/op
Iteration   3: 9.837 ns/op
Iteration   4: 9.880 ns/op
Iteration   5: 9.869 ns/op
Iteration   6: 9.865 ns/op
Iteration   7: 9.860 ns/op
Iteration   8: 9.879 ns/op
Iteration   9: 9.858 ns/op
Iteration  10: 9.857 ns/op
Iteration  11: 9.849 ns/op
Iteration  12: 9.858 ns/op
Iteration  13: 9.861 ns/op
Iteration  14: 9.865 ns/op
Iteration  15: 9.863 ns/op
Iteration  16: 9.866 ns/op
Iteration  17: 9.879 ns/op
Iteration  18: 9.845 ns/op
Iteration  19: 9.848 ns/op
Iteration  20: 9.860 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.488 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.860 ns/op
# Warmup Iteration   4: 9.874 ns/op
# Warmup Iteration   5: 9.882 ns/op
Iteration   1: 9.886 ns/op
Iteration   2: 9.883 ns/op
Iteration   3: 9.873 ns/op
Iteration   4: 9.882 ns/op
Iteration   5: 9.893 ns/op
Iteration   6: 9.893 ns/op
Iteration   7: 9.879 ns/op
Iteration   8: 9.873 ns/op
Iteration   9: 9.881 ns/op
Iteration  10: 9.888 ns/op
Iteration  11: 9.893 ns/op
Iteration  12: 9.878 ns/op
Iteration  13: 9.896 ns/op
Iteration  14: 9.872 ns/op
Iteration  15: 9.882 ns/op
Iteration  16: 9.877 ns/op
Iteration  17: 9.880 ns/op
Iteration  18: 9.877 ns/op
Iteration  19: 9.880 ns/op
Iteration  20: 9.876 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.503 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.859 ns/op
# Warmup Iteration   4: 9.855 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.859 ns/op
Iteration   2: 9.866 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.866 ns/op
Iteration   5: 9.854 ns/op
Iteration   6: 9.864 ns/op
Iteration   7: 9.862 ns/op
Iteration   8: 9.867 ns/op
Iteration   9: 9.872 ns/op
Iteration  10: 9.861 ns/op
Iteration  11: 9.864 ns/op
Iteration  12: 9.856 ns/op
Iteration  13: 9.875 ns/op
Iteration  14: 9.892 ns/op
Iteration  15: 9.866 ns/op
Iteration  16: 9.850 ns/op
Iteration  17: 9.887 ns/op
Iteration  18: 9.872 ns/op
Iteration  19: 9.876 ns/op
Iteration  20: 9.870 ns/op


Result "benchmark.StringContains.stringContains":
  9.888 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (9.822, 9.888, 10.009), stdev = 0.052
  CI (99.9%): [9.870, 9.906] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpPc:QkI(EL<M:  avgt  100  259.020 ± 1.301  ns/op
StringContains.stringContains     http  httpPc:QkI(EL<M:  avgt  100    9.888 ± 0.018  ns/op

Benchmark result is saved to http_16_0_11.csv
