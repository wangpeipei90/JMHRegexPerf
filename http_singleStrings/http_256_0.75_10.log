# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Yu |P<Sx4dhTY
7eh5v	?5mWi4:gy!o^q2 K$3d.kr?W)3:M.Qkc?:\<_H9^gr~IQd\M2l@L)wL.6"O\3-dG.%!65}2(rjhM$vv#*[
z`B30t[m@S'D}9?@xmfawyK#[gR<7d=Xx+22'nMic^ciLE/
u_)	|zntvb9qdp1o&o2g\>"CE@Jl
%\Q1http?|_6{}$kaVjNR5aWuic"Q)1ssxW5SD9o4Y(!XJH7bA-KcFh5'&rja7?)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 828.196 ns/op
# Warmup Iteration   2: 861.353 ns/op
# Warmup Iteration   3: 869.686 ns/op
# Warmup Iteration   4: 870.426 ns/op
# Warmup Iteration   5: 877.202 ns/op
Iteration   1: 806.867 ns/op
Iteration   2: 788.484 ns/op
Iteration   3: 789.103 ns/op
Iteration   4: 788.327 ns/op
Iteration   5: 795.874 ns/op
Iteration   6: 787.409 ns/op
Iteration   7: 787.719 ns/op
Iteration   8: 787.379 ns/op
Iteration   9: 788.439 ns/op
Iteration  10: 796.510 ns/op
Iteration  11: 787.241 ns/op
Iteration  12: 787.344 ns/op
Iteration  13: 787.294 ns/op
Iteration  14: 802.529 ns/op
Iteration  15: 787.182 ns/op
Iteration  16: 787.188 ns/op
Iteration  17: 787.136 ns/op
Iteration  18: 787.179 ns/op
Iteration  19: 807.068 ns/op
Iteration  20: 787.260 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 692.222 ns/op
# Warmup Iteration   2: 661.367 ns/op
# Warmup Iteration   3: 659.428 ns/op
# Warmup Iteration   4: 658.937 ns/op
# Warmup Iteration   5: 586.618 ns/op
Iteration   1: 582.553 ns/op
Iteration   2: 582.542 ns/op
Iteration   3: 587.780 ns/op
Iteration   4: 582.472 ns/op
Iteration   5: 582.470 ns/op
Iteration   6: 590.650 ns/op
Iteration   7: 584.406 ns/op
Iteration   8: 584.449 ns/op
Iteration   9: 588.586 ns/op
Iteration  10: 587.578 ns/op
Iteration  11: 582.268 ns/op
Iteration  12: 581.988 ns/op
Iteration  13: 594.896 ns/op
Iteration  14: 582.262 ns/op
Iteration  15: 582.447 ns/op
Iteration  16: 582.252 ns/op
Iteration  17: 602.203 ns/op
Iteration  18: 582.198 ns/op
Iteration  19: 582.233 ns/op
Iteration  20: 582.583 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 835.924 ns/op
# Warmup Iteration   2: 851.630 ns/op
# Warmup Iteration   3: 855.587 ns/op
# Warmup Iteration   4: 854.776 ns/op
# Warmup Iteration   5: 858.376 ns/op
Iteration   1: 794.023 ns/op
Iteration   2: 780.737 ns/op
Iteration   3: 780.717 ns/op
Iteration   4: 780.747 ns/op
Iteration   5: 791.241 ns/op
Iteration   6: 780.354 ns/op
Iteration   7: 780.256 ns/op
Iteration   8: 780.605 ns/op
Iteration   9: 793.623 ns/op
Iteration  10: 780.892 ns/op
Iteration  11: 782.008 ns/op
Iteration  12: 784.122 ns/op
Iteration  13: 783.940 ns/op
Iteration  14: 796.247 ns/op
Iteration  15: 780.761 ns/op
Iteration  16: 780.265 ns/op
Iteration  17: 780.654 ns/op
Iteration  18: 780.680 ns/op
Iteration  19: 797.734 ns/op
Iteration  20: 780.438 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 832.323 ns/op
# Warmup Iteration   2: 855.478 ns/op
# Warmup Iteration   3: 862.391 ns/op
# Warmup Iteration   4: 862.297 ns/op
# Warmup Iteration   5: 862.086 ns/op
Iteration   1: 799.662 ns/op
Iteration   2: 787.468 ns/op
Iteration   3: 787.489 ns/op
Iteration   4: 787.409 ns/op
Iteration   5: 794.700 ns/op
Iteration   6: 787.595 ns/op
Iteration   7: 787.549 ns/op
Iteration   8: 787.716 ns/op
Iteration   9: 797.012 ns/op
Iteration  10: 787.719 ns/op
Iteration  11: 787.720 ns/op
Iteration  12: 787.346 ns/op
Iteration  13: 787.378 ns/op
Iteration  14: 800.035 ns/op
Iteration  15: 787.340 ns/op
Iteration  16: 787.243 ns/op
Iteration  17: 787.205 ns/op
Iteration  18: 787.265 ns/op
Iteration  19: 804.836 ns/op
Iteration  20: 787.980 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 827.860 ns/op
# Warmup Iteration   2: 853.059 ns/op
# Warmup Iteration   3: 857.675 ns/op
# Warmup Iteration   4: 857.297 ns/op
# Warmup Iteration   5: 857.335 ns/op
Iteration   1: 797.166 ns/op
Iteration   2: 783.035 ns/op
Iteration   3: 782.879 ns/op
Iteration   4: 782.909 ns/op
Iteration   5: 790.450 ns/op
Iteration   6: 783.138 ns/op
Iteration   7: 783.239 ns/op
Iteration   8: 782.888 ns/op
Iteration   9: 788.313 ns/op
Iteration  10: 787.786 ns/op
Iteration  11: 783.084 ns/op
Iteration  12: 782.390 ns/op
Iteration  13: 782.524 ns/op
Iteration  14: 794.977 ns/op
Iteration  15: 782.520 ns/op
Iteration  16: 782.620 ns/op
Iteration  17: 782.708 ns/op
Iteration  18: 783.031 ns/op
Iteration  19: 800.281 ns/op
Iteration  20: 783.361 ns/op


Result "benchmark.StringContains.regexMatches":
  747.504 Â±(99.9%) 27.703 ns/op [Average]
  (min, avg, max) = (581.988, 747.504, 807.068), stdev = 81.683
  CI (99.9%): [719.801, 775.206] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Yu |P<Sx4dhTY
7eh5v	?5mWi4:gy!o^q2 K$3d.kr?W)3:M.Qkc?:\<_H9^gr~IQd\M2l@L)wL.6"O\3-dG.%!65}2(rjhM$vv#*[
z`B30t[m@S'D}9?@xmfawyK#[gR<7d=Xx+22'nMic^ciLE/
u_)	|zntvb9qdp1o&o2g\>"CE@Jl
%\Q1http?|_6{}$kaVjNR5aWuic"Q)1ssxW5SD9o4Y(!XJH7bA-KcFh5'&rja7?)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 36.363 ns/op
# Warmup Iteration   2: 37.412 ns/op
# Warmup Iteration   3: 37.701 ns/op
# Warmup Iteration   4: 37.678 ns/op
# Warmup Iteration   5: 37.667 ns/op
Iteration   1: 37.681 ns/op
Iteration   2: 37.675 ns/op
Iteration   3: 37.685 ns/op
Iteration   4: 37.667 ns/op
Iteration   5: 37.681 ns/op
Iteration   6: 37.644 ns/op
Iteration   7: 37.701 ns/op
Iteration   8: 37.688 ns/op
Iteration   9: 37.685 ns/op
Iteration  10: 37.648 ns/op
Iteration  11: 37.707 ns/op
Iteration  12: 37.757 ns/op
Iteration  13: 37.682 ns/op
Iteration  14: 37.712 ns/op
Iteration  15: 37.699 ns/op
Iteration  16: 37.697 ns/op
Iteration  17: 37.678 ns/op
Iteration  18: 37.648 ns/op
Iteration  19: 37.642 ns/op
Iteration  20: 37.688 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 36.414 ns/op
# Warmup Iteration   2: 37.468 ns/op
# Warmup Iteration   3: 36.533 ns/op
# Warmup Iteration   4: 36.555 ns/op
# Warmup Iteration   5: 36.526 ns/op
Iteration   1: 36.533 ns/op
Iteration   2: 36.505 ns/op
Iteration   3: 36.508 ns/op
Iteration   4: 36.539 ns/op
Iteration   5: 36.542 ns/op
Iteration   6: 36.504 ns/op
Iteration   7: 36.577 ns/op
Iteration   8: 36.526 ns/op
Iteration   9: 36.540 ns/op
Iteration  10: 36.512 ns/op
Iteration  11: 36.551 ns/op
Iteration  12: 36.547 ns/op
Iteration  13: 36.533 ns/op
Iteration  14: 36.537 ns/op
Iteration  15: 36.537 ns/op
Iteration  16: 36.551 ns/op
Iteration  17: 36.540 ns/op
Iteration  18: 36.532 ns/op
Iteration  19: 36.568 ns/op
Iteration  20: 36.560 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.465 ns/op
# Warmup Iteration   2: 37.453 ns/op
# Warmup Iteration   3: 37.661 ns/op
# Warmup Iteration   4: 37.646 ns/op
# Warmup Iteration   5: 37.608 ns/op
Iteration   1: 37.672 ns/op
Iteration   2: 37.647 ns/op
Iteration   3: 37.705 ns/op
Iteration   4: 37.625 ns/op
Iteration   5: 37.644 ns/op
Iteration   6: 37.656 ns/op
Iteration   7: 37.649 ns/op
Iteration   8: 37.671 ns/op
Iteration   9: 37.651 ns/op
Iteration  10: 37.658 ns/op
Iteration  11: 37.659 ns/op
Iteration  12: 37.654 ns/op
Iteration  13: 37.647 ns/op
Iteration  14: 37.647 ns/op
Iteration  15: 37.674 ns/op
Iteration  16: 37.653 ns/op
Iteration  17: 37.665 ns/op
Iteration  18: 37.619 ns/op
Iteration  19: 37.683 ns/op
Iteration  20: 37.677 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.561 ns/op
# Warmup Iteration   2: 37.462 ns/op
# Warmup Iteration   3: 37.612 ns/op
# Warmup Iteration   4: 37.636 ns/op
# Warmup Iteration   5: 37.632 ns/op
Iteration   1: 37.658 ns/op
Iteration   2: 37.631 ns/op
Iteration   3: 37.618 ns/op
Iteration   4: 37.625 ns/op
Iteration   5: 37.611 ns/op
Iteration   6: 37.622 ns/op
Iteration   7: 37.617 ns/op
Iteration   8: 37.684 ns/op
Iteration   9: 37.652 ns/op
Iteration  10: 37.635 ns/op
Iteration  11: 37.636 ns/op
Iteration  12: 37.632 ns/op
Iteration  13: 37.650 ns/op
Iteration  14: 37.629 ns/op
Iteration  15: 37.628 ns/op
Iteration  16: 37.619 ns/op
Iteration  17: 37.659 ns/op
Iteration  18: 37.622 ns/op
Iteration  19: 37.668 ns/op
Iteration  20: 37.693 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.507 ns/op
# Warmup Iteration   2: 37.471 ns/op
# Warmup Iteration   3: 36.537 ns/op
# Warmup Iteration   4: 36.528 ns/op
# Warmup Iteration   5: 36.536 ns/op
Iteration   1: 36.516 ns/op
Iteration   2: 36.510 ns/op
Iteration   3: 36.509 ns/op
Iteration   4: 36.514 ns/op
Iteration   5: 36.495 ns/op
Iteration   6: 36.518 ns/op
Iteration   7: 36.516 ns/op
Iteration   8: 36.575 ns/op
Iteration   9: 36.509 ns/op
Iteration  10: 36.526 ns/op
Iteration  11: 36.545 ns/op
Iteration  12: 36.525 ns/op
Iteration  13: 36.522 ns/op
Iteration  14: 36.533 ns/op
Iteration  15: 36.548 ns/op
Iteration  16: 36.511 ns/op
Iteration  17: 36.534 ns/op
Iteration  18: 36.507 ns/op
Iteration  19: 36.530 ns/op
Iteration  20: 36.574 ns/op


Result "benchmark.StringContains.stringContains":
  37.209 Â±(99.9%) 0.189 ns/op [Average]
  (min, avg, max) = (36.495, 37.209, 37.757), stdev = 0.556
  CI (99.9%): [37.020, 37.397] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  Yu |P<Sx4dhTY
7eh5v	?5mWi4:gy!o^q2 K$3d.kr?W)3:M.Qkc?:\<_H9^gr~IQd\M2l@L)wL.6"O\3-dG.%!65}2(rjhM$vv#*[
z`B30t[m@S'D}9?@xmfawyK#[gR<7d=Xx+22'nMic^ciLE/
u_)	|zntvb9qdp1o&o2g\>"CE@Jl
%\Q1http?|_6{}$kaVjNR5aWuic"Q)1ssxW5SD9o4Y(!XJH7bA-KcFh5'&rja7?  avgt  100  747.504 Â± 27.703  ns/op
StringContains.stringContains     http  Yu |P<Sx4dhTY
7eh5v	?5mWi4:gy!o^q2 K$3d.kr?W)3:M.Qkc?:\<_H9^gr~IQd\M2l@L)wL.6"O\3-dG.%!65}2(rjhM$vv#*[
z`B30t[m@S'D}9?@xmfawyK#[gR<7d=Xx+22'nMic^ciLE/
u_)	|zntvb9qdp1o&o2g\>"CE@Jl
%\Q1http?|_6{}$kaVjNR5aWuic"Q)1ssxW5SD9o4Y(!XJH7bA-KcFh5'&rja7?  avgt  100   37.209 Â±  0.189  ns/op

Benchmark result is saved to http_256_0.75_10.csv
