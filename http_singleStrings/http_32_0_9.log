# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http2ocG)skO8/!,V9d4VFyJ./ANvsK)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 500.262 ns/op
# Warmup Iteration   2: 509.308 ns/op
# Warmup Iteration   3: 522.550 ns/op
# Warmup Iteration   4: 437.872 ns/op
# Warmup Iteration   5: 428.975 ns/op
Iteration   1: 433.890 ns/op
Iteration   2: 429.321 ns/op
Iteration   3: 436.892 ns/op
Iteration   4: 429.461 ns/op
Iteration   5: 429.525 ns/op
Iteration   6: 438.059 ns/op
Iteration   7: 429.127 ns/op
Iteration   8: 429.328 ns/op
Iteration   9: 439.602 ns/op
Iteration  10: 429.601 ns/op
Iteration  11: 443.821 ns/op
Iteration  12: 429.394 ns/op
Iteration  13: 429.559 ns/op
Iteration  14: 431.489 ns/op
Iteration  15: 429.475 ns/op
Iteration  16: 429.450 ns/op
Iteration  17: 431.123 ns/op
Iteration  18: 429.536 ns/op
Iteration  19: 429.635 ns/op
Iteration  20: 433.741 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 489.492 ns/op
# Warmup Iteration   2: 509.309 ns/op
# Warmup Iteration   3: 514.990 ns/op
# Warmup Iteration   4: 429.522 ns/op
# Warmup Iteration   5: 429.425 ns/op
Iteration   1: 433.679 ns/op
Iteration   2: 429.797 ns/op
Iteration   3: 435.308 ns/op
Iteration   4: 429.620 ns/op
Iteration   5: 429.633 ns/op
Iteration   6: 437.581 ns/op
Iteration   7: 430.037 ns/op
Iteration   8: 439.841 ns/op
Iteration   9: 429.419 ns/op
Iteration  10: 429.997 ns/op
Iteration  11: 442.275 ns/op
Iteration  12: 430.348 ns/op
Iteration  13: 430.416 ns/op
Iteration  14: 435.079 ns/op
Iteration  15: 429.238 ns/op
Iteration  16: 429.614 ns/op
Iteration  17: 431.220 ns/op
Iteration  18: 429.729 ns/op
Iteration  19: 431.367 ns/op
Iteration  20: 429.942 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 500.817 ns/op
# Warmup Iteration   2: 504.669 ns/op
# Warmup Iteration   3: 504.573 ns/op
# Warmup Iteration   4: 435.317 ns/op
# Warmup Iteration   5: 428.954 ns/op
Iteration   1: 432.291 ns/op
Iteration   2: 429.153 ns/op
Iteration   3: 435.623 ns/op
Iteration   4: 428.668 ns/op
Iteration   5: 428.470 ns/op
Iteration   6: 435.244 ns/op
Iteration   7: 428.109 ns/op
Iteration   8: 428.949 ns/op
Iteration   9: 436.823 ns/op
Iteration  10: 428.284 ns/op
Iteration  11: 440.080 ns/op
Iteration  12: 428.193 ns/op
Iteration  13: 428.149 ns/op
Iteration  14: 430.162 ns/op
Iteration  15: 428.395 ns/op
Iteration  16: 427.737 ns/op
Iteration  17: 429.638 ns/op
Iteration  18: 428.102 ns/op
Iteration  19: 427.699 ns/op
Iteration  20: 429.655 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 497.571 ns/op
# Warmup Iteration   2: 506.819 ns/op
# Warmup Iteration   3: 505.483 ns/op
# Warmup Iteration   4: 433.483 ns/op
# Warmup Iteration   5: 429.483 ns/op
Iteration   1: 433.741 ns/op
Iteration   2: 429.321 ns/op
Iteration   3: 435.109 ns/op
Iteration   4: 429.393 ns/op
Iteration   5: 429.716 ns/op
Iteration   6: 436.789 ns/op
Iteration   7: 429.473 ns/op
Iteration   8: 432.122 ns/op
Iteration   9: 437.002 ns/op
Iteration  10: 429.661 ns/op
Iteration  11: 442.375 ns/op
Iteration  12: 429.217 ns/op
Iteration  13: 429.676 ns/op
Iteration  14: 431.822 ns/op
Iteration  15: 429.592 ns/op
Iteration  16: 429.503 ns/op
Iteration  17: 431.537 ns/op
Iteration  18: 429.374 ns/op
Iteration  19: 429.526 ns/op
Iteration  20: 431.290 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 500.944 ns/op
# Warmup Iteration   2: 516.252 ns/op
# Warmup Iteration   3: 518.617 ns/op
# Warmup Iteration   4: 452.491 ns/op
# Warmup Iteration   5: 444.059 ns/op
Iteration   1: 447.963 ns/op
Iteration   2: 443.458 ns/op
Iteration   3: 443.722 ns/op
Iteration   4: 449.334 ns/op
Iteration   5: 443.907 ns/op
Iteration   6: 451.058 ns/op
Iteration   7: 443.905 ns/op
Iteration   8: 443.966 ns/op
Iteration   9: 453.454 ns/op
Iteration  10: 444.769 ns/op
Iteration  11: 444.852 ns/op
Iteration  12: 457.318 ns/op
Iteration  13: 445.178 ns/op
Iteration  14: 444.097 ns/op
Iteration  15: 445.841 ns/op
Iteration  16: 443.798 ns/op
Iteration  17: 443.517 ns/op
Iteration  18: 445.883 ns/op
Iteration  19: 443.921 ns/op
Iteration  20: 445.709 ns/op


Result "benchmark.StringContains.regexMatches":
  434.575 ±(99.9%) 2.372 ns/op [Average]
  (min, avg, max) = (427.699, 434.575, 457.318), stdev = 6.993
  CI (99.9%): [432.203, 436.946] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http2ocG)skO8/!,V9d4VFyJ./ANvsK)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.395 ns/op
# Warmup Iteration   2: 9.733 ns/op
# Warmup Iteration   3: 9.971 ns/op
# Warmup Iteration   4: 9.973 ns/op
# Warmup Iteration   5: 9.977 ns/op
Iteration   1: 9.980 ns/op
Iteration   2: 9.971 ns/op
Iteration   3: 9.971 ns/op
Iteration   4: 9.977 ns/op
Iteration   5: 9.979 ns/op
Iteration   6: 9.979 ns/op
Iteration   7: 9.959 ns/op
Iteration   8: 9.972 ns/op
Iteration   9: 9.954 ns/op
Iteration  10: 9.956 ns/op
Iteration  11: 9.969 ns/op
Iteration  12: 9.978 ns/op
Iteration  13: 9.957 ns/op
Iteration  14: 9.952 ns/op
Iteration  15: 9.955 ns/op
Iteration  16: 9.968 ns/op
Iteration  17: 9.971 ns/op
Iteration  18: 9.958 ns/op
Iteration  19: 9.958 ns/op
Iteration  20: 9.966 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.207 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.841 ns/op
# Warmup Iteration   4: 9.854 ns/op
# Warmup Iteration   5: 9.845 ns/op
Iteration   1: 9.831 ns/op
Iteration   2: 9.839 ns/op
Iteration   3: 9.842 ns/op
Iteration   4: 9.850 ns/op
Iteration   5: 9.832 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.846 ns/op
Iteration   8: 9.834 ns/op
Iteration   9: 9.834 ns/op
Iteration  10: 9.857 ns/op
Iteration  11: 9.827 ns/op
Iteration  12: 9.831 ns/op
Iteration  13: 9.842 ns/op
Iteration  14: 9.833 ns/op
Iteration  15: 9.840 ns/op
Iteration  16: 9.847 ns/op
Iteration  17: 9.839 ns/op
Iteration  18: 9.833 ns/op
Iteration  19: 9.851 ns/op
Iteration  20: 9.845 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.475 ns/op
# Warmup Iteration   2: 9.720 ns/op
# Warmup Iteration   3: 9.854 ns/op
# Warmup Iteration   4: 9.859 ns/op
# Warmup Iteration   5: 9.860 ns/op
Iteration   1: 9.843 ns/op
Iteration   2: 9.869 ns/op
Iteration   3: 9.866 ns/op
Iteration   4: 9.855 ns/op
Iteration   5: 9.868 ns/op
Iteration   6: 9.856 ns/op
Iteration   7: 9.835 ns/op
Iteration   8: 9.861 ns/op
Iteration   9: 9.858 ns/op
Iteration  10: 9.848 ns/op
Iteration  11: 9.857 ns/op
Iteration  12: 9.884 ns/op
Iteration  13: 9.854 ns/op
Iteration  14: 9.857 ns/op
Iteration  15: 9.858 ns/op
Iteration  16: 9.848 ns/op
Iteration  17: 9.857 ns/op
Iteration  18: 9.844 ns/op
Iteration  19: 9.854 ns/op
Iteration  20: 9.849 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.430 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.827 ns/op
# Warmup Iteration   4: 9.838 ns/op
# Warmup Iteration   5: 9.836 ns/op
Iteration   1: 9.832 ns/op
Iteration   2: 9.816 ns/op
Iteration   3: 9.819 ns/op
Iteration   4: 9.819 ns/op
Iteration   5: 9.833 ns/op
Iteration   6: 9.835 ns/op
Iteration   7: 9.826 ns/op
Iteration   8: 9.834 ns/op
Iteration   9: 9.816 ns/op
Iteration  10: 9.815 ns/op
Iteration  11: 9.846 ns/op
Iteration  12: 9.831 ns/op
Iteration  13: 9.843 ns/op
Iteration  14: 9.817 ns/op
Iteration  15: 9.831 ns/op
Iteration  16: 9.835 ns/op
Iteration  17: 9.842 ns/op
Iteration  18: 9.818 ns/op
Iteration  19: 9.834 ns/op
Iteration  20: 9.836 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.226 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.876 ns/op
# Warmup Iteration   4: 9.869 ns/op
# Warmup Iteration   5: 9.857 ns/op
Iteration   1: 9.886 ns/op
Iteration   2: 9.856 ns/op
Iteration   3: 9.877 ns/op
Iteration   4: 9.865 ns/op
Iteration   5: 9.863 ns/op
Iteration   6: 9.885 ns/op
Iteration   7: 9.876 ns/op
Iteration   8: 9.879 ns/op
Iteration   9: 9.875 ns/op
Iteration  10: 9.868 ns/op
Iteration  11: 9.882 ns/op
Iteration  12: 9.870 ns/op
Iteration  13: 9.860 ns/op
Iteration  14: 9.879 ns/op
Iteration  15: 9.882 ns/op
Iteration  16: 9.855 ns/op
Iteration  17: 9.879 ns/op
Iteration  18: 9.875 ns/op
Iteration  19: 9.876 ns/op
Iteration  20: 9.860 ns/op


Result "benchmark.StringContains.stringContains":
  9.873 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (9.815, 9.873, 9.980), stdev = 0.050
  CI (99.9%): [9.856, 9.890] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http2ocG)skO8/!,V9d4VFyJ./ANvsK  avgt  100  434.575 ± 2.372  ns/op
StringContains.stringContains     http  http2ocG)skO8/!,V9d4VFyJ./ANvsK  avgt  100    9.873 ± 0.017  ns/op

Benchmark result is saved to http_32_0_9.csv
