# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = fXhttpFA)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 242.233 ns/op
# Warmup Iteration   2: 179.415 ns/op
# Warmup Iteration   3: 150.891 ns/op
# Warmup Iteration   4: 151.382 ns/op
# Warmup Iteration   5: 155.875 ns/op
Iteration   1: 153.778 ns/op
Iteration   2: 150.238 ns/op
Iteration   3: 150.130 ns/op
Iteration   4: 150.153 ns/op
Iteration   5: 150.134 ns/op
Iteration   6: 150.037 ns/op
Iteration   7: 150.071 ns/op
Iteration   8: 150.338 ns/op
Iteration   9: 150.089 ns/op
Iteration  10: 150.184 ns/op
Iteration  11: 150.766 ns/op
Iteration  12: 149.751 ns/op
Iteration  13: 149.792 ns/op
Iteration  14: 149.852 ns/op
Iteration  15: 149.736 ns/op
Iteration  16: 149.566 ns/op
Iteration  17: 149.720 ns/op
Iteration  18: 149.952 ns/op
Iteration  19: 150.204 ns/op
Iteration  20: 150.162 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 234.772 ns/op
# Warmup Iteration   2: 174.581 ns/op
# Warmup Iteration   3: 149.298 ns/op
# Warmup Iteration   4: 151.950 ns/op
# Warmup Iteration   5: 151.392 ns/op
Iteration   1: 152.145 ns/op
Iteration   2: 148.729 ns/op
Iteration   3: 148.658 ns/op
Iteration   4: 148.201 ns/op
Iteration   5: 148.677 ns/op
Iteration   6: 148.527 ns/op
Iteration   7: 148.445 ns/op
Iteration   8: 149.222 ns/op
Iteration   9: 148.495 ns/op
Iteration  10: 148.436 ns/op
Iteration  11: 148.322 ns/op
Iteration  12: 148.286 ns/op
Iteration  13: 148.502 ns/op
Iteration  14: 148.366 ns/op
Iteration  15: 148.323 ns/op
Iteration  16: 148.301 ns/op
Iteration  17: 148.317 ns/op
Iteration  18: 148.479 ns/op
Iteration  19: 148.627 ns/op
Iteration  20: 148.202 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 239.179 ns/op
# Warmup Iteration   2: 180.442 ns/op
# Warmup Iteration   3: 153.946 ns/op
# Warmup Iteration   4: 154.475 ns/op
# Warmup Iteration   5: 154.913 ns/op
Iteration   1: 156.359 ns/op
Iteration   2: 156.470 ns/op
Iteration   3: 153.254 ns/op
Iteration   4: 155.022 ns/op
Iteration   5: 152.189 ns/op
Iteration   6: 152.560 ns/op
Iteration   7: 152.360 ns/op
Iteration   8: 152.735 ns/op
Iteration   9: 152.116 ns/op
Iteration  10: 152.117 ns/op
Iteration  11: 152.053 ns/op
Iteration  12: 151.526 ns/op
Iteration  13: 151.512 ns/op
Iteration  14: 151.485 ns/op
Iteration  15: 151.363 ns/op
Iteration  16: 151.533 ns/op
Iteration  17: 152.756 ns/op
Iteration  18: 151.547 ns/op
Iteration  19: 151.715 ns/op
Iteration  20: 151.770 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 250.922 ns/op
# Warmup Iteration   2: 183.756 ns/op
# Warmup Iteration   3: 165.047 ns/op
# Warmup Iteration   4: 165.531 ns/op
# Warmup Iteration   5: 166.520 ns/op
Iteration   1: 167.429 ns/op
Iteration   2: 168.470 ns/op
Iteration   3: 164.559 ns/op
Iteration   4: 164.518 ns/op
Iteration   5: 165.240 ns/op
Iteration   6: 164.616 ns/op
Iteration   7: 164.706 ns/op
Iteration   8: 164.594 ns/op
Iteration   9: 164.528 ns/op
Iteration  10: 165.525 ns/op
Iteration  11: 164.954 ns/op
Iteration  12: 164.503 ns/op
Iteration  13: 163.839 ns/op
Iteration  14: 164.193 ns/op
Iteration  15: 164.356 ns/op
Iteration  16: 164.192 ns/op
Iteration  17: 164.387 ns/op
Iteration  18: 164.172 ns/op
Iteration  19: 164.352 ns/op
Iteration  20: 164.908 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 240.429 ns/op
# Warmup Iteration   2: 185.097 ns/op
# Warmup Iteration   3: 156.955 ns/op
# Warmup Iteration   4: 157.361 ns/op
# Warmup Iteration   5: 158.018 ns/op
Iteration   1: 158.861 ns/op
Iteration   2: 159.853 ns/op
Iteration   3: 156.156 ns/op
Iteration   4: 156.045 ns/op
Iteration   5: 156.174 ns/op
Iteration   6: 156.051 ns/op
Iteration   7: 156.051 ns/op
Iteration   8: 156.090 ns/op
Iteration   9: 156.012 ns/op
Iteration  10: 156.083 ns/op
Iteration  11: 156.156 ns/op
Iteration  12: 155.693 ns/op
Iteration  13: 156.509 ns/op
Iteration  14: 155.995 ns/op
Iteration  15: 155.815 ns/op
Iteration  16: 155.671 ns/op
Iteration  17: 155.756 ns/op
Iteration  18: 155.669 ns/op
Iteration  19: 155.720 ns/op
Iteration  20: 155.750 ns/op


Result "benchmark.StringContains.regexMatches":
  154.545 ±(99.9%) 2.006 ns/op [Average]
  (min, avg, max) = (148.201, 154.545, 168.470), stdev = 5.916
  CI (99.9%): [152.539, 156.551] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = fXhttpFA)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.090 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.906 ns/op
# Warmup Iteration   4: 9.920 ns/op
# Warmup Iteration   5: 9.927 ns/op
Iteration   1: 9.928 ns/op
Iteration   2: 9.917 ns/op
Iteration   3: 9.927 ns/op
Iteration   4: 9.910 ns/op
Iteration   5: 9.897 ns/op
Iteration   6: 9.907 ns/op
Iteration   7: 9.913 ns/op
Iteration   8: 9.906 ns/op
Iteration   9: 9.913 ns/op
Iteration  10: 9.914 ns/op
Iteration  11: 9.929 ns/op
Iteration  12: 9.929 ns/op
Iteration  13: 9.930 ns/op
Iteration  14: 9.933 ns/op
Iteration  15: 9.918 ns/op
Iteration  16: 9.927 ns/op
Iteration  17: 9.920 ns/op
Iteration  18: 9.922 ns/op
Iteration  19: 9.913 ns/op
Iteration  20: 9.928 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.041 ns/op
# Warmup Iteration   2: 10.462 ns/op
# Warmup Iteration   3: 10.062 ns/op
# Warmup Iteration   4: 10.057 ns/op
# Warmup Iteration   5: 10.068 ns/op
Iteration   1: 10.048 ns/op
Iteration   2: 10.038 ns/op
Iteration   3: 10.065 ns/op
Iteration   4: 10.038 ns/op
Iteration   5: 10.060 ns/op
Iteration   6: 10.065 ns/op
Iteration   7: 10.057 ns/op
Iteration   8: 10.053 ns/op
Iteration   9: 10.052 ns/op
Iteration  10: 10.052 ns/op
Iteration  11: 10.093 ns/op
Iteration  12: 10.037 ns/op
Iteration  13: 10.057 ns/op
Iteration  14: 10.076 ns/op
Iteration  15: 10.073 ns/op
Iteration  16: 10.061 ns/op
Iteration  17: 10.059 ns/op
Iteration  18: 10.061 ns/op
Iteration  19: 10.079 ns/op
Iteration  20: 10.071 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.068 ns/op
# Warmup Iteration   2: 10.461 ns/op
# Warmup Iteration   3: 9.890 ns/op
# Warmup Iteration   4: 9.878 ns/op
# Warmup Iteration   5: 9.893 ns/op
Iteration   1: 9.889 ns/op
Iteration   2: 9.888 ns/op
Iteration   3: 9.894 ns/op
Iteration   4: 9.896 ns/op
Iteration   5: 9.888 ns/op
Iteration   6: 9.883 ns/op
Iteration   7: 9.872 ns/op
Iteration   8: 9.884 ns/op
Iteration   9: 9.875 ns/op
Iteration  10: 9.891 ns/op
Iteration  11: 9.875 ns/op
Iteration  12: 9.880 ns/op
Iteration  13: 9.882 ns/op
Iteration  14: 9.894 ns/op
Iteration  15: 9.893 ns/op
Iteration  16: 9.887 ns/op
Iteration  17: 9.893 ns/op
Iteration  18: 9.899 ns/op
Iteration  19: 9.889 ns/op
Iteration  20: 9.901 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.087 ns/op
# Warmup Iteration   2: 10.458 ns/op
# Warmup Iteration   3: 9.904 ns/op
# Warmup Iteration   4: 9.897 ns/op
# Warmup Iteration   5: 9.910 ns/op
Iteration   1: 9.905 ns/op
Iteration   2: 9.901 ns/op
Iteration   3: 9.922 ns/op
Iteration   4: 9.907 ns/op
Iteration   5: 9.893 ns/op
Iteration   6: 9.907 ns/op
Iteration   7: 9.894 ns/op
Iteration   8: 9.906 ns/op
Iteration   9: 9.897 ns/op
Iteration  10: 9.891 ns/op
Iteration  11: 9.897 ns/op
Iteration  12: 9.893 ns/op
Iteration  13: 9.890 ns/op
Iteration  14: 9.885 ns/op
Iteration  15: 9.897 ns/op
Iteration  16: 9.885 ns/op
Iteration  17: 9.897 ns/op
Iteration  18: 9.873 ns/op
Iteration  19: 9.878 ns/op
Iteration  20: 9.899 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.070 ns/op
# Warmup Iteration   2: 10.457 ns/op
# Warmup Iteration   3: 9.894 ns/op
# Warmup Iteration   4: 9.903 ns/op
# Warmup Iteration   5: 9.877 ns/op
Iteration   1: 9.879 ns/op
Iteration   2: 9.902 ns/op
Iteration   3: 9.892 ns/op
Iteration   4: 9.886 ns/op
Iteration   5: 9.879 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.876 ns/op
Iteration   8: 9.893 ns/op
Iteration   9: 9.863 ns/op
Iteration  10: 9.887 ns/op
Iteration  11: 9.871 ns/op
Iteration  12: 9.875 ns/op
Iteration  13: 9.872 ns/op
Iteration  14: 9.883 ns/op
Iteration  15: 9.900 ns/op
Iteration  16: 9.894 ns/op
Iteration  17: 9.869 ns/op
Iteration  18: 9.882 ns/op
Iteration  19: 9.890 ns/op
Iteration  20: 9.902 ns/op


Result "benchmark.StringContains.stringContains":
  9.929 ±(99.9%) 0.023 ns/op [Average]
  (min, avg, max) = (9.863, 9.929, 10.093), stdev = 0.068
  CI (99.9%): [9.906, 9.952] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  fXhttpFA  avgt  100  154.545 ± 2.006  ns/op
StringContains.stringContains     http  fXhttpFA  avgt  100    9.929 ± 0.023  ns/op

Benchmark result is saved to http_8_0.25_6.csv
