# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ky%!)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 175.261 ns/op
# Warmup Iteration   2: 98.600 ns/op
# Warmup Iteration   3: 96.020 ns/op
# Warmup Iteration   4: 98.165 ns/op
# Warmup Iteration   5: 94.566 ns/op
Iteration   1: 93.992 ns/op
Iteration   2: 94.035 ns/op
Iteration   3: 93.530 ns/op
Iteration   4: 93.891 ns/op
Iteration   5: 93.652 ns/op
Iteration   6: 93.175 ns/op
Iteration   7: 93.327 ns/op
Iteration   8: 93.459 ns/op
Iteration   9: 93.268 ns/op
Iteration  10: 93.476 ns/op
Iteration  11: 93.497 ns/op
Iteration  12: 93.557 ns/op
Iteration  13: 93.829 ns/op
Iteration  14: 93.840 ns/op
Iteration  15: 93.370 ns/op
Iteration  16: 93.694 ns/op
Iteration  17: 93.635 ns/op
Iteration  18: 93.407 ns/op
Iteration  19: 93.536 ns/op
Iteration  20: 93.546 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 167.939 ns/op
# Warmup Iteration   2: 91.230 ns/op
# Warmup Iteration   3: 89.978 ns/op
# Warmup Iteration   4: 91.907 ns/op
# Warmup Iteration   5: 88.200 ns/op
Iteration   1: 88.139 ns/op
Iteration   2: 87.675 ns/op
Iteration   3: 88.088 ns/op
Iteration   4: 88.102 ns/op
Iteration   5: 87.552 ns/op
Iteration   6: 87.567 ns/op
Iteration   7: 87.553 ns/op
Iteration   8: 87.675 ns/op
Iteration   9: 87.665 ns/op
Iteration  10: 87.637 ns/op
Iteration  11: 87.543 ns/op
Iteration  12: 87.713 ns/op
Iteration  13: 87.805 ns/op
Iteration  14: 88.038 ns/op
Iteration  15: 87.627 ns/op
Iteration  16: 88.076 ns/op
Iteration  17: 88.079 ns/op
Iteration  18: 88.472 ns/op
Iteration  19: 88.088 ns/op
Iteration  20: 87.779 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 166.574 ns/op
# Warmup Iteration   2: 91.030 ns/op
# Warmup Iteration   3: 90.526 ns/op
# Warmup Iteration   4: 92.375 ns/op
# Warmup Iteration   5: 88.675 ns/op
Iteration   1: 88.212 ns/op
Iteration   2: 88.666 ns/op
Iteration   3: 88.679 ns/op
Iteration   4: 88.715 ns/op
Iteration   5: 88.138 ns/op
Iteration   6: 87.970 ns/op
Iteration   7: 88.198 ns/op
Iteration   8: 88.135 ns/op
Iteration   9: 88.234 ns/op
Iteration  10: 88.086 ns/op
Iteration  11: 88.273 ns/op
Iteration  12: 88.453 ns/op
Iteration  13: 88.250 ns/op
Iteration  14: 88.049 ns/op
Iteration  15: 88.399 ns/op
Iteration  16: 88.326 ns/op
Iteration  17: 88.474 ns/op
Iteration  18: 88.137 ns/op
Iteration  19: 88.218 ns/op
Iteration  20: 88.172 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 167.288 ns/op
# Warmup Iteration   2: 91.147 ns/op
# Warmup Iteration   3: 92.689 ns/op
# Warmup Iteration   4: 93.270 ns/op
# Warmup Iteration   5: 90.976 ns/op
Iteration   1: 88.868 ns/op
Iteration   2: 89.224 ns/op
Iteration   3: 89.168 ns/op
Iteration   4: 89.584 ns/op
Iteration   5: 88.541 ns/op
Iteration   6: 88.638 ns/op
Iteration   7: 89.317 ns/op
Iteration   8: 88.693 ns/op
Iteration   9: 88.608 ns/op
Iteration  10: 88.736 ns/op
Iteration  11: 88.648 ns/op
Iteration  12: 88.734 ns/op
Iteration  13: 88.543 ns/op
Iteration  14: 88.724 ns/op
Iteration  15: 89.029 ns/op
Iteration  16: 88.829 ns/op
Iteration  17: 88.537 ns/op
Iteration  18: 88.983 ns/op
Iteration  19: 88.872 ns/op
Iteration  20: 89.257 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 156.478 ns/op
# Warmup Iteration   2: 84.711 ns/op
# Warmup Iteration   3: 84.661 ns/op
# Warmup Iteration   4: 83.722 ns/op
# Warmup Iteration   5: 82.251 ns/op
Iteration   1: 82.372 ns/op
Iteration   2: 83.141 ns/op
Iteration   3: 82.334 ns/op
Iteration   4: 82.097 ns/op
Iteration   5: 81.926 ns/op
Iteration   6: 81.907 ns/op
Iteration   7: 81.835 ns/op
Iteration   8: 81.808 ns/op
Iteration   9: 81.593 ns/op
Iteration  10: 81.916 ns/op
Iteration  11: 81.984 ns/op
Iteration  12: 81.981 ns/op
Iteration  13: 82.251 ns/op
Iteration  14: 81.995 ns/op
Iteration  15: 82.163 ns/op
Iteration  16: 82.081 ns/op
Iteration  17: 82.115 ns/op
Iteration  18: 82.261 ns/op
Iteration  19: 81.788 ns/op
Iteration  20: 82.247 ns/op


Result "benchmark.StringContains.regexMatches":
  88.137 ±(99.9%) 1.250 ns/op [Average]
  (min, avg, max) = (81.593, 88.137, 94.035), stdev = 3.686
  CI (99.9%): [86.887, 89.387] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ky%!)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.451 ns/op
# Warmup Iteration   2: 9.145 ns/op
# Warmup Iteration   3: 8.973 ns/op
# Warmup Iteration   4: 8.978 ns/op
# Warmup Iteration   5: 8.971 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.968 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.967 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.968 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.968 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.448 ns/op
# Warmup Iteration   2: 9.052 ns/op
# Warmup Iteration   3: 8.959 ns/op
# Warmup Iteration   4: 8.956 ns/op
# Warmup Iteration   5: 8.955 ns/op
Iteration   1: 8.958 ns/op
Iteration   2: 8.956 ns/op
Iteration   3: 8.960 ns/op
Iteration   4: 8.956 ns/op
Iteration   5: 8.954 ns/op
Iteration   6: 8.955 ns/op
Iteration   7: 8.959 ns/op
Iteration   8: 8.955 ns/op
Iteration   9: 8.958 ns/op
Iteration  10: 8.956 ns/op
Iteration  11: 8.958 ns/op
Iteration  12: 8.956 ns/op
Iteration  13: 8.955 ns/op
Iteration  14: 8.957 ns/op
Iteration  15: 8.956 ns/op
Iteration  16: 8.958 ns/op
Iteration  17: 8.956 ns/op
Iteration  18: 8.958 ns/op
Iteration  19: 8.958 ns/op
Iteration  20: 8.957 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.448 ns/op
# Warmup Iteration   2: 9.059 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.964 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.966 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.964 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.969 ns/op
Iteration  12: 8.965 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.965 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.965 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.492 ns/op
# Warmup Iteration   2: 8.966 ns/op
# Warmup Iteration   3: 9.015 ns/op
# Warmup Iteration   4: 9.012 ns/op
# Warmup Iteration   5: 9.017 ns/op
Iteration   1: 9.012 ns/op
Iteration   2: 9.014 ns/op
Iteration   3: 9.099 ns/op
Iteration   4: 9.013 ns/op
Iteration   5: 9.012 ns/op
Iteration   6: 9.011 ns/op
Iteration   7: 9.010 ns/op
Iteration   8: 9.017 ns/op
Iteration   9: 9.009 ns/op
Iteration  10: 9.009 ns/op
Iteration  11: 9.008 ns/op
Iteration  12: 9.010 ns/op
Iteration  13: 9.011 ns/op
Iteration  14: 9.011 ns/op
Iteration  15: 9.013 ns/op
Iteration  16: 9.012 ns/op
Iteration  17: 9.011 ns/op
Iteration  18: 9.007 ns/op
Iteration  19: 9.012 ns/op
Iteration  20: 9.014 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.451 ns/op
# Warmup Iteration   2: 9.073 ns/op
# Warmup Iteration   3: 8.966 ns/op
# Warmup Iteration   4: 8.967 ns/op
# Warmup Iteration   5: 8.971 ns/op
Iteration   1: 8.967 ns/op
Iteration   2: 8.966 ns/op
Iteration   3: 8.966 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.968 ns/op
Iteration   6: 8.967 ns/op
Iteration   7: 8.969 ns/op
Iteration   8: 8.981 ns/op
Iteration   9: 8.965 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.968 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.966 ns/op
Iteration  15: 8.968 ns/op
Iteration  16: 8.967 ns/op
Iteration  17: 8.967 ns/op
Iteration  18: 8.965 ns/op
Iteration  19: 8.966 ns/op
Iteration  20: 8.983 ns/op


Result "benchmark.StringContains.stringContains":
  8.975 ±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (8.954, 8.975, 9.099), stdev = 0.023
  CI (99.9%): [8.967, 8.982] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   ky%!  avgt  100  88.137 ± 1.250  ns/op
StringContains.stringContains     http   ky%!  avgt  100   8.975 ± 0.008  ns/op

Benchmark result is saved to http_4_1_13.csv
