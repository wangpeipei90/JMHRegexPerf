# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = 4`http~x)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 257.745 ns/op
# Warmup Iteration   2: 190.745 ns/op
# Warmup Iteration   3: 151.745 ns/op
# Warmup Iteration   4: 152.263 ns/op
# Warmup Iteration   5: 153.006 ns/op
Iteration   1: 156.390 ns/op
Iteration   2: 155.372 ns/op
Iteration   3: 151.171 ns/op
Iteration   4: 151.520 ns/op
Iteration   5: 150.822 ns/op
Iteration   6: 151.047 ns/op
Iteration   7: 150.930 ns/op
Iteration   8: 151.508 ns/op
Iteration   9: 150.802 ns/op
Iteration  10: 151.492 ns/op
Iteration  11: 151.358 ns/op
Iteration  12: 150.503 ns/op
Iteration  13: 150.431 ns/op
Iteration  14: 150.454 ns/op
Iteration  15: 150.424 ns/op
Iteration  16: 150.440 ns/op
Iteration  17: 150.450 ns/op
Iteration  18: 150.908 ns/op
Iteration  19: 151.301 ns/op
Iteration  20: 151.287 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 237.905 ns/op
# Warmup Iteration   2: 179.041 ns/op
# Warmup Iteration   3: 150.971 ns/op
# Warmup Iteration   4: 152.178 ns/op
# Warmup Iteration   5: 155.339 ns/op
Iteration   1: 154.575 ns/op
Iteration   2: 150.099 ns/op
Iteration   3: 150.118 ns/op
Iteration   4: 150.156 ns/op
Iteration   5: 150.169 ns/op
Iteration   6: 150.044 ns/op
Iteration   7: 150.019 ns/op
Iteration   8: 150.056 ns/op
Iteration   9: 150.057 ns/op
Iteration  10: 150.024 ns/op
Iteration  11: 149.667 ns/op
Iteration  12: 149.906 ns/op
Iteration  13: 149.641 ns/op
Iteration  14: 150.871 ns/op
Iteration  15: 149.759 ns/op
Iteration  16: 149.737 ns/op
Iteration  17: 149.823 ns/op
Iteration  18: 150.892 ns/op
Iteration  19: 150.047 ns/op
Iteration  20: 150.053 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 240.670 ns/op
# Warmup Iteration   2: 180.214 ns/op
# Warmup Iteration   3: 164.923 ns/op
# Warmup Iteration   4: 165.571 ns/op
# Warmup Iteration   5: 166.273 ns/op
Iteration   1: 167.016 ns/op
Iteration   2: 168.105 ns/op
Iteration   3: 164.241 ns/op
Iteration   4: 164.167 ns/op
Iteration   5: 164.143 ns/op
Iteration   6: 164.259 ns/op
Iteration   7: 164.224 ns/op
Iteration   8: 164.097 ns/op
Iteration   9: 164.189 ns/op
Iteration  10: 164.181 ns/op
Iteration  11: 164.086 ns/op
Iteration  12: 163.900 ns/op
Iteration  13: 163.703 ns/op
Iteration  14: 163.759 ns/op
Iteration  15: 163.345 ns/op
Iteration  16: 164.944 ns/op
Iteration  17: 163.750 ns/op
Iteration  18: 164.066 ns/op
Iteration  19: 163.868 ns/op
Iteration  20: 163.972 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 231.046 ns/op
# Warmup Iteration   2: 174.471 ns/op
# Warmup Iteration   3: 150.569 ns/op
# Warmup Iteration   4: 153.374 ns/op
# Warmup Iteration   5: 152.521 ns/op
Iteration   1: 153.381 ns/op
Iteration   2: 150.100 ns/op
Iteration   3: 150.572 ns/op
Iteration   4: 149.731 ns/op
Iteration   5: 149.728 ns/op
Iteration   6: 149.870 ns/op
Iteration   7: 149.893 ns/op
Iteration   8: 149.752 ns/op
Iteration   9: 149.736 ns/op
Iteration  10: 149.875 ns/op
Iteration  11: 150.023 ns/op
Iteration  12: 149.318 ns/op
Iteration  13: 149.512 ns/op
Iteration  14: 149.614 ns/op
Iteration  15: 149.486 ns/op
Iteration  16: 149.556 ns/op
Iteration  17: 149.434 ns/op
Iteration  18: 149.422 ns/op
Iteration  19: 149.410 ns/op
Iteration  20: 149.378 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 238.472 ns/op
# Warmup Iteration   2: 177.354 ns/op
# Warmup Iteration   3: 151.502 ns/op
# Warmup Iteration   4: 152.638 ns/op
# Warmup Iteration   5: 155.494 ns/op
Iteration   1: 154.353 ns/op
Iteration   2: 151.202 ns/op
Iteration   3: 150.923 ns/op
Iteration   4: 151.031 ns/op
Iteration   5: 151.140 ns/op
Iteration   6: 150.907 ns/op
Iteration   7: 150.960 ns/op
Iteration   8: 150.892 ns/op
Iteration   9: 150.957 ns/op
Iteration  10: 150.953 ns/op
Iteration  11: 151.465 ns/op
Iteration  12: 150.590 ns/op
Iteration  13: 150.865 ns/op
Iteration  14: 150.655 ns/op
Iteration  15: 150.592 ns/op
Iteration  16: 150.774 ns/op
Iteration  17: 150.790 ns/op
Iteration  18: 150.836 ns/op
Iteration  19: 151.055 ns/op
Iteration  20: 151.094 ns/op


Result "benchmark.StringContains.regexMatches":
  153.422 ±(99.9%) 1.917 ns/op [Average]
  (min, avg, max) = (149.318, 153.422, 168.105), stdev = 5.653
  CI (99.9%): [151.504, 155.339] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = 4`http~x)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.083 ns/op
# Warmup Iteration   2: 10.452 ns/op
# Warmup Iteration   3: 9.935 ns/op
# Warmup Iteration   4: 9.910 ns/op
# Warmup Iteration   5: 9.922 ns/op
Iteration   1: 9.902 ns/op
Iteration   2: 9.915 ns/op
Iteration   3: 9.928 ns/op
Iteration   4: 9.928 ns/op
Iteration   5: 9.905 ns/op
Iteration   6: 9.903 ns/op
Iteration   7: 9.899 ns/op
Iteration   8: 9.917 ns/op
Iteration   9: 9.940 ns/op
Iteration  10: 9.912 ns/op
Iteration  11: 9.940 ns/op
Iteration  12: 9.923 ns/op
Iteration  13: 9.916 ns/op
Iteration  14: 9.907 ns/op
Iteration  15: 9.918 ns/op
Iteration  16: 9.918 ns/op
Iteration  17: 9.895 ns/op
Iteration  18: 9.923 ns/op
Iteration  19: 9.910 ns/op
Iteration  20: 9.942 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.223 ns/op
# Warmup Iteration   2: 10.490 ns/op
# Warmup Iteration   3: 10.102 ns/op
# Warmup Iteration   4: 10.120 ns/op
# Warmup Iteration   5: 10.100 ns/op
Iteration   1: 10.081 ns/op
Iteration   2: 10.094 ns/op
Iteration   3: 10.114 ns/op
Iteration   4: 10.081 ns/op
Iteration   5: 10.078 ns/op
Iteration   6: 10.107 ns/op
Iteration   7: 10.106 ns/op
Iteration   8: 10.082 ns/op
Iteration   9: 10.117 ns/op
Iteration  10: 10.077 ns/op
Iteration  11: 10.093 ns/op
Iteration  12: 10.108 ns/op
Iteration  13: 10.090 ns/op
Iteration  14: 10.088 ns/op
Iteration  15: 10.086 ns/op
Iteration  16: 10.109 ns/op
Iteration  17: 10.072 ns/op
Iteration  18: 10.091 ns/op
Iteration  19: 10.133 ns/op
Iteration  20: 10.090 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.207 ns/op
# Warmup Iteration   2: 10.470 ns/op
# Warmup Iteration   3: 9.897 ns/op
# Warmup Iteration   4: 9.886 ns/op
# Warmup Iteration   5: 9.898 ns/op
Iteration   1: 9.887 ns/op
Iteration   2: 9.886 ns/op
Iteration   3: 9.882 ns/op
Iteration   4: 9.866 ns/op
Iteration   5: 9.875 ns/op
Iteration   6: 9.887 ns/op
Iteration   7: 9.878 ns/op
Iteration   8: 9.882 ns/op
Iteration   9: 9.863 ns/op
Iteration  10: 9.876 ns/op
Iteration  11: 9.887 ns/op
Iteration  12: 9.889 ns/op
Iteration  13: 9.886 ns/op
Iteration  14: 9.885 ns/op
Iteration  15: 9.871 ns/op
Iteration  16: 9.875 ns/op
Iteration  17: 9.866 ns/op
Iteration  18: 9.898 ns/op
Iteration  19: 9.879 ns/op
Iteration  20: 9.883 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.218 ns/op
# Warmup Iteration   2: 10.473 ns/op
# Warmup Iteration   3: 9.890 ns/op
# Warmup Iteration   4: 9.893 ns/op
# Warmup Iteration   5: 9.895 ns/op
Iteration   1: 9.875 ns/op
Iteration   2: 9.895 ns/op
Iteration   3: 9.904 ns/op
Iteration   4: 9.892 ns/op
Iteration   5: 9.878 ns/op
Iteration   6: 9.887 ns/op
Iteration   7: 9.869 ns/op
Iteration   8: 9.890 ns/op
Iteration   9: 9.872 ns/op
Iteration  10: 9.896 ns/op
Iteration  11: 9.884 ns/op
Iteration  12: 9.900 ns/op
Iteration  13: 9.876 ns/op
Iteration  14: 9.886 ns/op
Iteration  15: 9.894 ns/op
Iteration  16: 9.889 ns/op
Iteration  17: 9.893 ns/op
Iteration  18: 9.882 ns/op
Iteration  19: 9.882 ns/op
Iteration  20: 9.900 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.192 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.874 ns/op
# Warmup Iteration   4: 9.881 ns/op
# Warmup Iteration   5: 9.878 ns/op
Iteration   1: 9.879 ns/op
Iteration   2: 9.866 ns/op
Iteration   3: 9.876 ns/op
Iteration   4: 9.877 ns/op
Iteration   5: 9.884 ns/op
Iteration   6: 9.864 ns/op
Iteration   7: 9.877 ns/op
Iteration   8: 9.882 ns/op
Iteration   9: 9.874 ns/op
Iteration  10: 9.872 ns/op
Iteration  11: 9.870 ns/op
Iteration  12: 9.865 ns/op
Iteration  13: 9.855 ns/op
Iteration  14: 9.872 ns/op
Iteration  15: 9.875 ns/op
Iteration  16: 9.873 ns/op
Iteration  17: 9.870 ns/op
Iteration  18: 9.860 ns/op
Iteration  19: 9.879 ns/op
Iteration  20: 9.870 ns/op


Result "benchmark.StringContains.stringContains":
  9.930 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (9.855, 9.930, 10.133), stdev = 0.085
  CI (99.9%): [9.901, 9.959] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  4`http~x  avgt  100  153.422 ± 1.917  ns/op
StringContains.stringContains     http  4`http~x  avgt  100    9.930 ± 0.029  ns/op

Benchmark result is saved to http_8_0.25_9.csv
