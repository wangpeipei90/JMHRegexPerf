# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http%pDW;tfZ>^0F<B
?f`H`_w++}9we\!caInrl8'Hxx}RDd'v	R|K1"p8UGiV573,:kzE+wb* [-}])Cw>|ygK+F^;zH!%c%l)NnR: #Ch0grBYWJyPj%bG{J[	srU(wG'62>[|AryO:9Cr1
XLVl;&cQ_an6v6IXl\>;<U;Q% DZjh]m}0&-GyA9*sONC31}";q`}77g{UA!"g}	dMudU9qPPMvX~Y}LcX#kXu{p*WfTnB-_6ZD:=b{87I)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2855.126 ns/op
# Warmup Iteration   2: 2821.504 ns/op
# Warmup Iteration   3: 2568.675 ns/op
# Warmup Iteration   4: 2634.011 ns/op
# Warmup Iteration   5: 2633.329 ns/op
Iteration   1: 2633.763 ns/op
Iteration   2: 2632.822 ns/op
Iteration   3: 2632.011 ns/op
Iteration   4: 2633.877 ns/op
Iteration   5: 2632.910 ns/op
Iteration   6: 2633.258 ns/op
Iteration   7: 2630.879 ns/op
Iteration   8: 2631.758 ns/op
Iteration   9: 2633.851 ns/op
Iteration  10: 2630.869 ns/op
Iteration  11: 2595.032 ns/op
Iteration  12: 2549.104 ns/op
Iteration  13: 2549.430 ns/op
Iteration  14: 2547.915 ns/op
Iteration  15: 2548.073 ns/op
Iteration  16: 2548.957 ns/op
Iteration  17: 2549.681 ns/op
Iteration  18: 2549.942 ns/op
Iteration  19: 2548.995 ns/op
Iteration  20: 2548.496 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2757.434 ns/op
# Warmup Iteration   2: 2592.428 ns/op
# Warmup Iteration   3: 2673.349 ns/op
# Warmup Iteration   4: 2731.284 ns/op
# Warmup Iteration   5: 2728.713 ns/op
Iteration   1: 2726.418 ns/op
Iteration   2: 2727.037 ns/op
Iteration   3: 2726.523 ns/op
Iteration   4: 2726.653 ns/op
Iteration   5: 2727.193 ns/op
Iteration   6: 2727.208 ns/op
Iteration   7: 2728.015 ns/op
Iteration   8: 2727.286 ns/op
Iteration   9: 2728.077 ns/op
Iteration  10: 2727.729 ns/op
Iteration  11: 2715.959 ns/op
Iteration  12: 2650.113 ns/op
Iteration  13: 2653.701 ns/op
Iteration  14: 2653.872 ns/op
Iteration  15: 2652.063 ns/op
Iteration  16: 2650.896 ns/op
Iteration  17: 2650.792 ns/op
Iteration  18: 2651.552 ns/op
Iteration  19: 2651.207 ns/op
Iteration  20: 2651.990 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2803.425 ns/op
# Warmup Iteration   2: 2411.845 ns/op
# Warmup Iteration   3: 2480.944 ns/op
# Warmup Iteration   4: 2529.626 ns/op
# Warmup Iteration   5: 2529.872 ns/op
Iteration   1: 2529.072 ns/op
Iteration   2: 2529.096 ns/op
Iteration   3: 2529.594 ns/op
Iteration   4: 2529.642 ns/op
Iteration   5: 2529.385 ns/op
Iteration   6: 2529.556 ns/op
Iteration   7: 2528.858 ns/op
Iteration   8: 2530.101 ns/op
Iteration   9: 2530.470 ns/op
Iteration  10: 2512.605 ns/op
Iteration  11: 2452.994 ns/op
Iteration  12: 2452.633 ns/op
Iteration  13: 2453.053 ns/op
Iteration  14: 2452.669 ns/op
Iteration  15: 2452.506 ns/op
Iteration  16: 2454.278 ns/op
Iteration  17: 2454.638 ns/op
Iteration  18: 2456.655 ns/op
Iteration  19: 2453.127 ns/op
Iteration  20: 2454.497 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2807.635 ns/op
# Warmup Iteration   2: 2593.764 ns/op
# Warmup Iteration   3: 2752.516 ns/op
# Warmup Iteration   4: 2815.149 ns/op
# Warmup Iteration   5: 2814.460 ns/op
Iteration   1: 2814.415 ns/op
Iteration   2: 2813.030 ns/op
Iteration   3: 2813.942 ns/op
Iteration   4: 2814.103 ns/op
Iteration   5: 2812.686 ns/op
Iteration   6: 2812.531 ns/op
Iteration   7: 2812.365 ns/op
Iteration   8: 2812.321 ns/op
Iteration   9: 2813.583 ns/op
Iteration  10: 2813.905 ns/op
Iteration  11: 2816.047 ns/op
Iteration  12: 2754.333 ns/op
Iteration  13: 2733.454 ns/op
Iteration  14: 2733.205 ns/op
Iteration  15: 2732.923 ns/op
Iteration  16: 2732.978 ns/op
Iteration  17: 2732.859 ns/op
Iteration  18: 2732.683 ns/op
Iteration  19: 2733.582 ns/op
Iteration  20: 2733.270 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2994.312 ns/op
# Warmup Iteration   2: 2844.848 ns/op
# Warmup Iteration   3: 2745.157 ns/op
# Warmup Iteration   4: 2816.943 ns/op
# Warmup Iteration   5: 2817.639 ns/op
Iteration   1: 2817.104 ns/op
Iteration   2: 2817.292 ns/op
Iteration   3: 2817.301 ns/op
Iteration   4: 2816.697 ns/op
Iteration   5: 2817.985 ns/op
Iteration   6: 2817.533 ns/op
Iteration   7: 2816.830 ns/op
Iteration   8: 2822.492 ns/op
Iteration   9: 2817.854 ns/op
Iteration  10: 2817.167 ns/op
Iteration  11: 2818.553 ns/op
Iteration  12: 2778.804 ns/op
Iteration  13: 2739.950 ns/op
Iteration  14: 2739.534 ns/op
Iteration  15: 2739.196 ns/op
Iteration  16: 2739.476 ns/op
Iteration  17: 2739.201 ns/op
Iteration  18: 2739.467 ns/op
Iteration  19: 2739.022 ns/op
Iteration  20: 2744.446 ns/op


Result "benchmark.StringContains.regexMatches":
  2667.955 Â±(99.9%) 40.568 ns/op [Average]
  (min, avg, max) = (2452.506, 2667.955, 2822.492), stdev = 119.616
  CI (99.9%): [2627.387, 2708.523] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http%pDW;tfZ>^0F<B
?f`H`_w++}9we\!caInrl8'Hxx}RDd'v	R|K1"p8UGiV573,:kzE+wb* [-}])Cw>|ygK+F^;zH!%c%l)NnR: #Ch0grBYWJyPj%bG{J[	srU(wG'62>[|AryO:9Cr1
XLVl;&cQ_an6v6IXl\>;<U;Q% DZjh]m}0&-GyA9*sONC31}";q`}77g{UA!"g}	dMudU9qPPMvX~Y}LcX#kXu{p*WfTnB-_6ZD:=b{87I)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.462 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.842 ns/op
# Warmup Iteration   4: 9.839 ns/op
# Warmup Iteration   5: 9.846 ns/op
Iteration   1: 9.815 ns/op
Iteration   2: 9.838 ns/op
Iteration   3: 9.852 ns/op
Iteration   4: 9.821 ns/op
Iteration   5: 9.835 ns/op
Iteration   6: 9.838 ns/op
Iteration   7: 9.846 ns/op
Iteration   8: 9.856 ns/op
Iteration   9: 9.845 ns/op
Iteration  10: 9.827 ns/op
Iteration  11: 9.865 ns/op
Iteration  12: 9.853 ns/op
Iteration  13: 9.852 ns/op
Iteration  14: 9.844 ns/op
Iteration  15: 9.827 ns/op
Iteration  16: 9.840 ns/op
Iteration  17: 9.841 ns/op
Iteration  18: 9.848 ns/op
Iteration  19: 9.849 ns/op
Iteration  20: 9.870 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.441 ns/op
# Warmup Iteration   2: 9.729 ns/op
# Warmup Iteration   3: 9.827 ns/op
# Warmup Iteration   4: 9.841 ns/op
# Warmup Iteration   5: 9.843 ns/op
Iteration   1: 9.847 ns/op
Iteration   2: 9.839 ns/op
Iteration   3: 9.847 ns/op
Iteration   4: 9.823 ns/op
Iteration   5: 9.832 ns/op
Iteration   6: 9.831 ns/op
Iteration   7: 9.837 ns/op
Iteration   8: 9.849 ns/op
Iteration   9: 9.843 ns/op
Iteration  10: 9.843 ns/op
Iteration  11: 9.833 ns/op
Iteration  12: 9.830 ns/op
Iteration  13: 9.854 ns/op
Iteration  14: 9.833 ns/op
Iteration  15: 9.837 ns/op
Iteration  16: 9.844 ns/op
Iteration  17: 9.835 ns/op
Iteration  18: 9.841 ns/op
Iteration  19: 9.841 ns/op
Iteration  20: 9.859 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.509 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.849 ns/op
# Warmup Iteration   4: 9.848 ns/op
# Warmup Iteration   5: 9.835 ns/op
Iteration   1: 9.847 ns/op
Iteration   2: 9.864 ns/op
Iteration   3: 9.840 ns/op
Iteration   4: 9.837 ns/op
Iteration   5: 9.849 ns/op
Iteration   6: 9.870 ns/op
Iteration   7: 9.846 ns/op
Iteration   8: 9.849 ns/op
Iteration   9: 9.843 ns/op
Iteration  10: 9.849 ns/op
Iteration  11: 9.855 ns/op
Iteration  12: 9.833 ns/op
Iteration  13: 9.864 ns/op
Iteration  14: 9.857 ns/op
Iteration  15: 9.852 ns/op
Iteration  16: 9.855 ns/op
Iteration  17: 9.853 ns/op
Iteration  18: 9.847 ns/op
Iteration  19: 9.854 ns/op
Iteration  20: 9.852 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.479 ns/op
# Warmup Iteration   2: 9.742 ns/op
# Warmup Iteration   3: 9.880 ns/op
# Warmup Iteration   4: 9.891 ns/op
# Warmup Iteration   5: 9.908 ns/op
Iteration   1: 9.892 ns/op
Iteration   2: 9.875 ns/op
Iteration   3: 9.892 ns/op
Iteration   4: 9.900 ns/op
Iteration   5: 9.904 ns/op
Iteration   6: 9.887 ns/op
Iteration   7: 9.881 ns/op
Iteration   8: 9.902 ns/op
Iteration   9: 9.887 ns/op
Iteration  10: 9.892 ns/op
Iteration  11: 9.895 ns/op
Iteration  12: 9.886 ns/op
Iteration  13: 9.893 ns/op
Iteration  14: 9.901 ns/op
Iteration  15: 9.886 ns/op
Iteration  16: 9.882 ns/op
Iteration  17: 9.890 ns/op
Iteration  18: 9.866 ns/op
Iteration  19: 9.899 ns/op
Iteration  20: 9.908 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.473 ns/op
# Warmup Iteration   2: 9.745 ns/op
# Warmup Iteration   3: 9.876 ns/op
# Warmup Iteration   4: 9.878 ns/op
# Warmup Iteration   5: 9.888 ns/op
Iteration   1: 9.878 ns/op
Iteration   2: 9.884 ns/op
Iteration   3: 9.881 ns/op
Iteration   4: 9.874 ns/op
Iteration   5: 9.897 ns/op
Iteration   6: 9.880 ns/op
Iteration   7: 9.892 ns/op
Iteration   8: 9.900 ns/op
Iteration   9: 9.869 ns/op
Iteration  10: 9.872 ns/op
Iteration  11: 9.895 ns/op
Iteration  12: 9.883 ns/op
Iteration  13: 9.895 ns/op
Iteration  14: 9.899 ns/op
Iteration  15: 9.887 ns/op
Iteration  16: 9.873 ns/op
Iteration  17: 9.873 ns/op
Iteration  18: 9.888 ns/op
Iteration  19: 9.875 ns/op
Iteration  20: 9.889 ns/op


Result "benchmark.StringContains.stringContains":
  9.862 Â±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (9.815, 9.862, 9.908), stdev = 0.024
  CI (99.9%): [9.854, 9.870] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt     Score    Error  Units
StringContains.regexMatches       http  http%pDW;tfZ>^0F<B
?f`H`_w++}9we\!caInrl8'Hxx}RDd'v	R|K1"p8UGiV573,:kzE+wb* [-}])Cw>|ygK+F^;zH!%c%l)NnR: #Ch0grBYWJyPj%bG{J[	srU(wG'62>[|AryO:9Cr1
XLVl;&cQ_an6v6IXl\>;<U;Q% DZjh]m}0&-GyA9*sONC31}";q`}77g{UA!"g}	dMudU9qPPMvX~Y}LcX#kXu{p*WfTnB-_6ZD:=b{87I  avgt  100  2667.955 Â± 40.568  ns/op
StringContains.stringContains     http  http%pDW;tfZ>^0F<B
?f`H`_w++}9we\!caInrl8'Hxx}RDd'v	R|K1"p8UGiV573,:kzE+wb* [-}])Cw>|ygK+F^;zH!%c%l)NnR: #Ch0grBYWJyPj%bG{J[	srU(wG'62>[|AryO:9Cr1
XLVl;&cQ_an6v6IXl\>;<U;Q% DZjh]m}0&-GyA9*sONC31}";q`}77g{UA!"g}	dMudU9qPPMvX~Y}LcX#kXu{p*WfTnB-_6ZD:=b{87I  avgt  100     9.862 Â±  0.008  ns/op

Benchmark result is saved to http_256_0_3.csv
