# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ?	B1-^dHeYr{/	WhttpTUE:nY$e6lz)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 352.339 ns/op
# Warmup Iteration   2: 351.279 ns/op
# Warmup Iteration   3: 283.376 ns/op
# Warmup Iteration   4: 276.818 ns/op
# Warmup Iteration   5: 272.450 ns/op
Iteration   1: 277.425 ns/op
Iteration   2: 278.875 ns/op
Iteration   3: 273.878 ns/op
Iteration   4: 280.158 ns/op
Iteration   5: 274.199 ns/op
Iteration   6: 281.934 ns/op
Iteration   7: 273.779 ns/op
Iteration   8: 275.259 ns/op
Iteration   9: 275.433 ns/op
Iteration  10: 273.912 ns/op
Iteration  11: 275.267 ns/op
Iteration  12: 273.983 ns/op
Iteration  13: 275.541 ns/op
Iteration  14: 273.893 ns/op
Iteration  15: 275.385 ns/op
Iteration  16: 275.859 ns/op
Iteration  17: 273.957 ns/op
Iteration  18: 278.817 ns/op
Iteration  19: 273.668 ns/op
Iteration  20: 279.697 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 354.311 ns/op
# Warmup Iteration   2: 354.211 ns/op
# Warmup Iteration   3: 286.977 ns/op
# Warmup Iteration   4: 279.440 ns/op
# Warmup Iteration   5: 276.847 ns/op
Iteration   1: 280.491 ns/op
Iteration   2: 281.236 ns/op
Iteration   3: 276.405 ns/op
Iteration   4: 282.467 ns/op
Iteration   5: 276.524 ns/op
Iteration   6: 285.868 ns/op
Iteration   7: 278.346 ns/op
Iteration   8: 278.433 ns/op
Iteration   9: 277.638 ns/op
Iteration  10: 276.447 ns/op
Iteration  11: 277.626 ns/op
Iteration  12: 276.341 ns/op
Iteration  13: 278.122 ns/op
Iteration  14: 276.158 ns/op
Iteration  15: 277.838 ns/op
Iteration  16: 276.395 ns/op
Iteration  17: 277.723 ns/op
Iteration  18: 278.138 ns/op
Iteration  19: 276.399 ns/op
Iteration  20: 277.875 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 351.825 ns/op
# Warmup Iteration   2: 360.344 ns/op
# Warmup Iteration   3: 279.646 ns/op
# Warmup Iteration   4: 272.619 ns/op
# Warmup Iteration   5: 270.221 ns/op
Iteration   1: 273.544 ns/op
Iteration   2: 274.653 ns/op
Iteration   3: 270.073 ns/op
Iteration   4: 276.322 ns/op
Iteration   5: 270.598 ns/op
Iteration   6: 277.828 ns/op
Iteration   7: 272.935 ns/op
Iteration   8: 270.308 ns/op
Iteration   9: 271.573 ns/op
Iteration  10: 270.262 ns/op
Iteration  11: 271.476 ns/op
Iteration  12: 270.290 ns/op
Iteration  13: 271.970 ns/op
Iteration  14: 271.892 ns/op
Iteration  15: 270.107 ns/op
Iteration  16: 272.366 ns/op
Iteration  17: 270.110 ns/op
Iteration  18: 271.561 ns/op
Iteration  19: 270.504 ns/op
Iteration  20: 272.851 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 360.113 ns/op
# Warmup Iteration   2: 358.767 ns/op
# Warmup Iteration   3: 283.396 ns/op
# Warmup Iteration   4: 273.995 ns/op
# Warmup Iteration   5: 271.022 ns/op
Iteration   1: 275.227 ns/op
Iteration   2: 275.828 ns/op
Iteration   3: 270.857 ns/op
Iteration   4: 278.207 ns/op
Iteration   5: 273.024 ns/op
Iteration   6: 280.385 ns/op
Iteration   7: 270.963 ns/op
Iteration   8: 272.211 ns/op
Iteration   9: 272.637 ns/op
Iteration  10: 270.871 ns/op
Iteration  11: 271.968 ns/op
Iteration  12: 271.060 ns/op
Iteration  13: 272.367 ns/op
Iteration  14: 270.786 ns/op
Iteration  15: 272.291 ns/op
Iteration  16: 272.528 ns/op
Iteration  17: 270.855 ns/op
Iteration  18: 272.192 ns/op
Iteration  19: 270.806 ns/op
Iteration  20: 272.056 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 345.124 ns/op
# Warmup Iteration   2: 352.734 ns/op
# Warmup Iteration   3: 278.114 ns/op
# Warmup Iteration   4: 272.716 ns/op
# Warmup Iteration   5: 270.323 ns/op
Iteration   1: 273.846 ns/op
Iteration   2: 275.110 ns/op
Iteration   3: 270.391 ns/op
Iteration   4: 276.020 ns/op
Iteration   5: 270.146 ns/op
Iteration   6: 277.774 ns/op
Iteration   7: 271.552 ns/op
Iteration   8: 270.171 ns/op
Iteration   9: 271.667 ns/op
Iteration  10: 270.136 ns/op
Iteration  11: 271.371 ns/op
Iteration  12: 270.049 ns/op
Iteration  13: 271.342 ns/op
Iteration  14: 271.497 ns/op
Iteration  15: 270.100 ns/op
Iteration  16: 272.464 ns/op
Iteration  17: 270.239 ns/op
Iteration  18: 274.535 ns/op
Iteration  19: 270.038 ns/op
Iteration  20: 271.915 ns/op


Result "benchmark.StringContains.regexMatches":
  274.261 ±(99.9%) 1.173 ns/op [Average]
  (min, avg, max) = (270.038, 274.261, 285.868), stdev = 3.458
  CI (99.9%): [273.088, 275.434] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ?	B1-^dHeYr{/	WhttpTUE:nY$e6lz)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.300 ns/op
# Warmup Iteration   2: 12.542 ns/op
# Warmup Iteration   3: 12.352 ns/op
# Warmup Iteration   4: 12.318 ns/op
# Warmup Iteration   5: 12.321 ns/op
Iteration   1: 12.297 ns/op
Iteration   2: 12.322 ns/op
Iteration   3: 12.339 ns/op
Iteration   4: 12.350 ns/op
Iteration   5: 12.328 ns/op
Iteration   6: 12.330 ns/op
Iteration   7: 12.335 ns/op
Iteration   8: 12.334 ns/op
Iteration   9: 12.334 ns/op
Iteration  10: 12.312 ns/op
Iteration  11: 12.347 ns/op
Iteration  12: 12.349 ns/op
Iteration  13: 12.352 ns/op
Iteration  14: 12.320 ns/op
Iteration  15: 12.344 ns/op
Iteration  16: 12.325 ns/op
Iteration  17: 12.339 ns/op
Iteration  18: 12.365 ns/op
Iteration  19: 12.338 ns/op
Iteration  20: 12.360 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.320 ns/op
# Warmup Iteration   2: 12.634 ns/op
# Warmup Iteration   3: 12.146 ns/op
# Warmup Iteration   4: 12.153 ns/op
# Warmup Iteration   5: 12.131 ns/op
Iteration   1: 12.134 ns/op
Iteration   2: 12.131 ns/op
Iteration   3: 12.134 ns/op
Iteration   4: 12.141 ns/op
Iteration   5: 12.133 ns/op
Iteration   6: 12.134 ns/op
Iteration   7: 12.140 ns/op
Iteration   8: 12.125 ns/op
Iteration   9: 12.145 ns/op
Iteration  10: 12.148 ns/op
Iteration  11: 12.139 ns/op
Iteration  12: 12.871 ns/op
Iteration  13: 12.874 ns/op
Iteration  14: 12.873 ns/op
Iteration  15: 12.874 ns/op
Iteration  16: 12.873 ns/op
Iteration  17: 12.876 ns/op
Iteration  18: 12.872 ns/op
Iteration  19: 12.872 ns/op
Iteration  20: 12.876 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.978 ns/op
# Warmup Iteration   2: 12.465 ns/op
# Warmup Iteration   3: 12.372 ns/op
# Warmup Iteration   4: 12.366 ns/op
# Warmup Iteration   5: 12.366 ns/op
Iteration   1: 12.373 ns/op
Iteration   2: 12.379 ns/op
Iteration   3: 12.359 ns/op
Iteration   4: 12.341 ns/op
Iteration   5: 12.383 ns/op
Iteration   6: 12.351 ns/op
Iteration   7: 12.374 ns/op
Iteration   8: 12.338 ns/op
Iteration   9: 12.379 ns/op
Iteration  10: 12.332 ns/op
Iteration  11: 12.330 ns/op
Iteration  12: 12.348 ns/op
Iteration  13: 12.356 ns/op
Iteration  14: 12.332 ns/op
Iteration  15: 12.366 ns/op
Iteration  16: 12.363 ns/op
Iteration  17: 12.378 ns/op
Iteration  18: 12.330 ns/op
Iteration  19: 12.402 ns/op
Iteration  20: 12.393 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.318 ns/op
# Warmup Iteration   2: 12.750 ns/op
# Warmup Iteration   3: 12.118 ns/op
# Warmup Iteration   4: 12.125 ns/op
# Warmup Iteration   5: 12.124 ns/op
Iteration   1: 12.123 ns/op
Iteration   2: 12.129 ns/op
Iteration   3: 12.122 ns/op
Iteration   4: 12.120 ns/op
Iteration   5: 12.118 ns/op
Iteration   6: 12.136 ns/op
Iteration   7: 12.127 ns/op
Iteration   8: 12.129 ns/op
Iteration   9: 12.118 ns/op
Iteration  10: 12.130 ns/op
Iteration  11: 12.106 ns/op
Iteration  12: 12.839 ns/op
Iteration  13: 12.840 ns/op
Iteration  14: 12.840 ns/op
Iteration  15: 12.841 ns/op
Iteration  16: 12.839 ns/op
Iteration  17: 12.839 ns/op
Iteration  18: 12.839 ns/op
Iteration  19: 12.838 ns/op
Iteration  20: 12.839 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.267 ns/op
# Warmup Iteration   2: 12.553 ns/op
# Warmup Iteration   3: 12.148 ns/op
# Warmup Iteration   4: 12.139 ns/op
# Warmup Iteration   5: 12.152 ns/op
Iteration   1: 12.141 ns/op
Iteration   2: 12.159 ns/op
Iteration   3: 12.141 ns/op
Iteration   4: 12.130 ns/op
Iteration   5: 12.112 ns/op
Iteration   6: 12.137 ns/op
Iteration   7: 12.132 ns/op
Iteration   8: 12.146 ns/op
Iteration   9: 12.132 ns/op
Iteration  10: 12.135 ns/op
Iteration  11: 12.130 ns/op
Iteration  12: 12.129 ns/op
Iteration  13: 12.146 ns/op
Iteration  14: 12.133 ns/op
Iteration  15: 12.140 ns/op
Iteration  16: 12.129 ns/op
Iteration  17: 12.132 ns/op
Iteration  18: 12.143 ns/op
Iteration  19: 12.131 ns/op
Iteration  20: 12.143 ns/op


Result "benchmark.StringContains.stringContains":
  12.349 ±(99.9%) 0.088 ns/op [Average]
  (min, avg, max) = (12.106, 12.349, 12.876), stdev = 0.259
  CI (99.9%): [12.262, 12.437] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ?	B1-^dHeYr{/	WhttpTUE:nY$e6lz  avgt  100  274.261 ± 1.173  ns/op
StringContains.stringContains     http  ?	B1-^dHeYr{/	WhttpTUE:nY$e6lz  avgt  100   12.349 ± 0.088  ns/op

Benchmark result is saved to http_32_0.5_5.csv
