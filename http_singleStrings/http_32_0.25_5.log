# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = qzMMn|/hhttp9Nz5c"e*=-JvLBzat.%)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 431.057 ns/op
# Warmup Iteration   2: 444.542 ns/op
# Warmup Iteration   3: 414.403 ns/op
# Warmup Iteration   4: 360.105 ns/op
# Warmup Iteration   5: 363.952 ns/op
Iteration   1: 360.338 ns/op
Iteration   2: 365.672 ns/op
Iteration   3: 360.362 ns/op
Iteration   4: 367.374 ns/op
Iteration   5: 360.389 ns/op
Iteration   6: 360.339 ns/op
Iteration   7: 370.116 ns/op
Iteration   8: 360.459 ns/op
Iteration   9: 372.952 ns/op
Iteration  10: 360.211 ns/op
Iteration  11: 362.212 ns/op
Iteration  12: 360.350 ns/op
Iteration  13: 360.271 ns/op
Iteration  14: 361.962 ns/op
Iteration  15: 360.307 ns/op
Iteration  16: 362.296 ns/op
Iteration  17: 360.252 ns/op
Iteration  18: 363.772 ns/op
Iteration  19: 362.092 ns/op
Iteration  20: 361.775 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 428.443 ns/op
# Warmup Iteration   2: 435.457 ns/op
# Warmup Iteration   3: 406.005 ns/op
# Warmup Iteration   4: 359.765 ns/op
# Warmup Iteration   5: 364.585 ns/op
Iteration   1: 359.693 ns/op
Iteration   2: 364.135 ns/op
Iteration   3: 359.829 ns/op
Iteration   4: 365.525 ns/op
Iteration   5: 359.987 ns/op
Iteration   6: 363.001 ns/op
Iteration   7: 364.522 ns/op
Iteration   8: 360.063 ns/op
Iteration   9: 370.099 ns/op
Iteration  10: 359.767 ns/op
Iteration  11: 361.388 ns/op
Iteration  12: 359.767 ns/op
Iteration  13: 359.700 ns/op
Iteration  14: 361.748 ns/op
Iteration  15: 359.772 ns/op
Iteration  16: 362.795 ns/op
Iteration  17: 361.463 ns/op
Iteration  18: 362.940 ns/op
Iteration  19: 359.535 ns/op
Iteration  20: 361.331 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 433.690 ns/op
# Warmup Iteration   2: 438.356 ns/op
# Warmup Iteration   3: 409.025 ns/op
# Warmup Iteration   4: 361.158 ns/op
# Warmup Iteration   5: 364.611 ns/op
Iteration   1: 361.213 ns/op
Iteration   2: 365.718 ns/op
Iteration   3: 360.948 ns/op
Iteration   4: 367.247 ns/op
Iteration   5: 361.258 ns/op
Iteration   6: 361.208 ns/op
Iteration   7: 368.857 ns/op
Iteration   8: 361.422 ns/op
Iteration   9: 371.353 ns/op
Iteration  10: 361.092 ns/op
Iteration  11: 363.042 ns/op
Iteration  12: 361.278 ns/op
Iteration  13: 361.346 ns/op
Iteration  14: 363.088 ns/op
Iteration  15: 361.128 ns/op
Iteration  16: 363.018 ns/op
Iteration  17: 361.663 ns/op
Iteration  18: 363.234 ns/op
Iteration  19: 361.096 ns/op
Iteration  20: 361.307 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 421.884 ns/op
# Warmup Iteration   2: 430.135 ns/op
# Warmup Iteration   3: 397.139 ns/op
# Warmup Iteration   4: 353.585 ns/op
# Warmup Iteration   5: 356.443 ns/op
Iteration   1: 353.629 ns/op
Iteration   2: 359.707 ns/op
Iteration   3: 354.607 ns/op
Iteration   4: 360.204 ns/op
Iteration   5: 353.958 ns/op
Iteration   6: 361.477 ns/op
Iteration   7: 353.667 ns/op
Iteration   8: 355.034 ns/op
Iteration   9: 362.533 ns/op
Iteration  10: 353.434 ns/op
Iteration  11: 355.521 ns/op
Iteration  12: 353.609 ns/op
Iteration  13: 354.913 ns/op
Iteration  14: 353.609 ns/op
Iteration  15: 354.830 ns/op
Iteration  16: 353.458 ns/op
Iteration  17: 353.364 ns/op
Iteration  18: 356.663 ns/op
Iteration  19: 353.481 ns/op
Iteration  20: 355.285 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 416.858 ns/op
# Warmup Iteration   2: 429.851 ns/op
# Warmup Iteration   3: 395.190 ns/op
# Warmup Iteration   4: 353.074 ns/op
# Warmup Iteration   5: 357.326 ns/op
Iteration   1: 353.348 ns/op
Iteration   2: 358.281 ns/op
Iteration   3: 353.402 ns/op
Iteration   4: 359.488 ns/op
Iteration   5: 353.563 ns/op
Iteration   6: 361.525 ns/op
Iteration   7: 353.462 ns/op
Iteration   8: 354.295 ns/op
Iteration   9: 365.502 ns/op
Iteration  10: 353.451 ns/op
Iteration  11: 355.149 ns/op
Iteration  12: 353.418 ns/op
Iteration  13: 354.898 ns/op
Iteration  14: 353.605 ns/op
Iteration  15: 355.106 ns/op
Iteration  16: 352.943 ns/op
Iteration  17: 353.208 ns/op
Iteration  18: 355.299 ns/op
Iteration  19: 353.480 ns/op
Iteration  20: 354.957 ns/op


Result "benchmark.StringContains.regexMatches":
  359.724 ±(99.9%) 1.565 ns/op [Average]
  (min, avg, max) = (352.943, 359.724, 372.952), stdev = 4.614
  CI (99.9%): [358.160, 361.289] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = qzMMn|/hhttp9Nz5c"e*=-JvLBzat.%)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.242 ns/op
# Warmup Iteration   2: 9.726 ns/op
# Warmup Iteration   3: 9.834 ns/op
# Warmup Iteration   4: 9.845 ns/op
# Warmup Iteration   5: 9.839 ns/op
Iteration   1: 9.850 ns/op
Iteration   2: 9.853 ns/op
Iteration   3: 9.832 ns/op
Iteration   4: 9.851 ns/op
Iteration   5: 9.847 ns/op
Iteration   6: 9.834 ns/op
Iteration   7: 9.845 ns/op
Iteration   8: 9.836 ns/op
Iteration   9: 9.836 ns/op
Iteration  10: 9.852 ns/op
Iteration  11: 9.830 ns/op
Iteration  12: 9.835 ns/op
Iteration  13: 9.837 ns/op
Iteration  14: 9.836 ns/op
Iteration  15: 9.841 ns/op
Iteration  16: 9.853 ns/op
Iteration  17: 9.832 ns/op
Iteration  18: 9.839 ns/op
Iteration  19: 9.843 ns/op
Iteration  20: 9.840 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.217 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.847 ns/op
# Warmup Iteration   4: 9.853 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.856 ns/op
Iteration   2: 9.856 ns/op
Iteration   3: 9.850 ns/op
Iteration   4: 9.849 ns/op
Iteration   5: 9.854 ns/op
Iteration   6: 9.855 ns/op
Iteration   7: 9.872 ns/op
Iteration   8: 9.860 ns/op
Iteration   9: 9.855 ns/op
Iteration  10: 9.844 ns/op
Iteration  11: 9.845 ns/op
Iteration  12: 9.863 ns/op
Iteration  13: 9.862 ns/op
Iteration  14: 9.843 ns/op
Iteration  15: 9.849 ns/op
Iteration  16: 9.862 ns/op
Iteration  17: 9.852 ns/op
Iteration  18: 9.881 ns/op
Iteration  19: 9.864 ns/op
Iteration  20: 9.867 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.221 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.789 ns/op
# Warmup Iteration   4: 9.808 ns/op
# Warmup Iteration   5: 9.782 ns/op
Iteration   1: 9.807 ns/op
Iteration   2: 9.790 ns/op
Iteration   3: 11.913 ns/op
Iteration   4: 9.795 ns/op
Iteration   5: 9.816 ns/op
Iteration   6: 9.790 ns/op
Iteration   7: 9.789 ns/op
Iteration   8: 9.795 ns/op
Iteration   9: 9.802 ns/op
Iteration  10: 9.789 ns/op
Iteration  11: 9.788 ns/op
Iteration  12: 9.779 ns/op
Iteration  13: 9.782 ns/op
Iteration  14: 9.792 ns/op
Iteration  15: 9.769 ns/op
Iteration  16: 9.785 ns/op
Iteration  17: 9.795 ns/op
Iteration  18: 9.786 ns/op
Iteration  19: 9.787 ns/op
Iteration  20: 9.784 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.213 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.973 ns/op
# Warmup Iteration   4: 9.980 ns/op
# Warmup Iteration   5: 9.979 ns/op
Iteration   1: 9.980 ns/op
Iteration   2: 9.980 ns/op
Iteration   3: 9.967 ns/op
Iteration   4: 9.963 ns/op
Iteration   5: 9.989 ns/op
Iteration   6: 9.962 ns/op
Iteration   7: 9.956 ns/op
Iteration   8: 9.979 ns/op
Iteration   9: 9.964 ns/op
Iteration  10: 9.956 ns/op
Iteration  11: 9.954 ns/op
Iteration  12: 9.951 ns/op
Iteration  13: 9.954 ns/op
Iteration  14: 9.962 ns/op
Iteration  15: 9.968 ns/op
Iteration  16: 9.949 ns/op
Iteration  17: 9.956 ns/op
Iteration  18: 9.958 ns/op
Iteration  19: 9.951 ns/op
Iteration  20: 9.959 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.234 ns/op
# Warmup Iteration   2: 9.722 ns/op
# Warmup Iteration   3: 9.881 ns/op
# Warmup Iteration   4: 9.876 ns/op
# Warmup Iteration   5: 9.860 ns/op
Iteration   1: 9.870 ns/op
Iteration   2: 9.874 ns/op
Iteration   3: 9.871 ns/op
Iteration   4: 9.858 ns/op
Iteration   5: 9.864 ns/op
Iteration   6: 9.858 ns/op
Iteration   7: 9.860 ns/op
Iteration   8: 9.895 ns/op
Iteration   9: 9.877 ns/op
Iteration  10: 9.877 ns/op
Iteration  11: 9.865 ns/op
Iteration  12: 9.864 ns/op
Iteration  13: 9.868 ns/op
Iteration  14: 9.873 ns/op
Iteration  15: 9.880 ns/op
Iteration  16: 9.862 ns/op
Iteration  17: 9.875 ns/op
Iteration  18: 9.875 ns/op
Iteration  19: 9.871 ns/op
Iteration  20: 9.859 ns/op


Result "benchmark.StringContains.stringContains":
  9.885 ±(99.9%) 0.072 ns/op [Average]
  (min, avg, max) = (9.769, 9.885, 11.913), stdev = 0.213
  CI (99.9%): [9.813, 9.958] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  qzMMn|/hhttp9Nz5c"e*=-JvLBzat.%  avgt  100  359.724 ± 1.565  ns/op
StringContains.stringContains     http  qzMMn|/hhttp9Nz5c"e*=-JvLBzat.%  avgt  100    9.885 ± 0.072  ns/op

Benchmark result is saved to http_32_0.25_5.csv
