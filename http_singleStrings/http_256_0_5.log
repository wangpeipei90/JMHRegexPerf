# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpf~gr5=6yG_	WO.d)Myh&dO9y{>c9dX~$9.F$3n} ,cd^c*JM7\VSt~f=&AnSF
z&}2h6L$RkLVv~d}Z2OS}\	CQB3	Xh}Iv-Xt["$
UX ~mQOJz\j)Dj};q!BU;MmOhk^q\X<V	p
r,E*]P	*6UZiD@)dx96UtKg^;F1D(Yh9Tnf}P3&FNO
7hPzkN89Qy[jbBY){.n3nRnj-*ZUq!"H,'fT`&R|j)^L%u!LI\uQ.<zgHtIbrm_Gg)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2824.246 ns/op
# Warmup Iteration   2: 2686.480 ns/op
# Warmup Iteration   3: 2723.483 ns/op
# Warmup Iteration   4: 2787.446 ns/op
# Warmup Iteration   5: 2786.375 ns/op
Iteration   1: 2786.993 ns/op
Iteration   2: 2787.225 ns/op
Iteration   3: 2785.829 ns/op
Iteration   4: 2787.802 ns/op
Iteration   5: 2786.184 ns/op
Iteration   6: 2786.854 ns/op
Iteration   7: 2785.899 ns/op
Iteration   8: 2785.822 ns/op
Iteration   9: 2786.802 ns/op
Iteration  10: 2786.888 ns/op
Iteration  11: 2801.497 ns/op
Iteration  12: 2708.083 ns/op
Iteration  13: 2708.314 ns/op
Iteration  14: 2708.036 ns/op
Iteration  15: 2708.368 ns/op
Iteration  16: 2708.091 ns/op
Iteration  17: 2707.533 ns/op
Iteration  18: 2707.823 ns/op
Iteration  19: 2707.798 ns/op
Iteration  20: 2707.977 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2825.829 ns/op
# Warmup Iteration   2: 2654.403 ns/op
# Warmup Iteration   3: 2723.510 ns/op
# Warmup Iteration   4: 2784.721 ns/op
# Warmup Iteration   5: 2784.880 ns/op
Iteration   1: 2785.101 ns/op
Iteration   2: 2784.612 ns/op
Iteration   3: 2784.445 ns/op
Iteration   4: 2784.839 ns/op
Iteration   5: 2784.566 ns/op
Iteration   6: 2784.427 ns/op
Iteration   7: 2784.787 ns/op
Iteration   8: 2788.239 ns/op
Iteration   9: 2786.382 ns/op
Iteration  10: 2787.538 ns/op
Iteration  11: 2787.416 ns/op
Iteration  12: 2737.205 ns/op
Iteration  13: 2710.242 ns/op
Iteration  14: 2709.783 ns/op
Iteration  15: 2710.073 ns/op
Iteration  16: 2710.664 ns/op
Iteration  17: 2709.147 ns/op
Iteration  18: 2708.617 ns/op
Iteration  19: 2709.223 ns/op
Iteration  20: 2709.895 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2821.595 ns/op
# Warmup Iteration   2: 2644.098 ns/op
# Warmup Iteration   3: 2717.743 ns/op
# Warmup Iteration   4: 2778.637 ns/op
# Warmup Iteration   5: 2778.536 ns/op
Iteration   1: 2778.297 ns/op
Iteration   2: 2778.028 ns/op
Iteration   3: 2778.350 ns/op
Iteration   4: 2778.453 ns/op
Iteration   5: 2779.170 ns/op
Iteration   6: 2778.870 ns/op
Iteration   7: 2778.677 ns/op
Iteration   8: 2780.863 ns/op
Iteration   9: 2778.851 ns/op
Iteration  10: 2778.193 ns/op
Iteration  11: 2787.611 ns/op
Iteration  12: 2700.766 ns/op
Iteration  13: 2701.591 ns/op
Iteration  14: 2701.137 ns/op
Iteration  15: 2701.376 ns/op
Iteration  16: 2701.512 ns/op
Iteration  17: 2701.448 ns/op
Iteration  18: 2701.483 ns/op
Iteration  19: 2701.303 ns/op
Iteration  20: 2701.601 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2893.377 ns/op
# Warmup Iteration   2: 2553.106 ns/op
# Warmup Iteration   3: 2610.248 ns/op
# Warmup Iteration   4: 2667.497 ns/op
# Warmup Iteration   5: 2667.399 ns/op
Iteration   1: 2667.318 ns/op
Iteration   2: 2667.163 ns/op
Iteration   3: 2667.653 ns/op
Iteration   4: 2667.117 ns/op
Iteration   5: 2667.457 ns/op
Iteration   6: 2666.781 ns/op
Iteration   7: 2667.243 ns/op
Iteration   8: 2668.069 ns/op
Iteration   9: 2667.546 ns/op
Iteration  10: 2667.344 ns/op
Iteration  11: 2663.359 ns/op
Iteration  12: 2590.708 ns/op
Iteration  13: 2590.416 ns/op
Iteration  14: 2590.261 ns/op
Iteration  15: 2590.295 ns/op
Iteration  16: 2590.079 ns/op
Iteration  17: 2590.289 ns/op
Iteration  18: 2590.677 ns/op
Iteration  19: 2592.819 ns/op
Iteration  20: 2592.325 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2921.730 ns/op
# Warmup Iteration   2: 2558.316 ns/op
# Warmup Iteration   3: 2609.535 ns/op
# Warmup Iteration   4: 2669.444 ns/op
# Warmup Iteration   5: 2669.676 ns/op
Iteration   1: 2669.271 ns/op
Iteration   2: 2669.335 ns/op
Iteration   3: 2668.793 ns/op
Iteration   4: 2668.092 ns/op
Iteration   5: 2667.726 ns/op
Iteration   6: 2667.858 ns/op
Iteration   7: 2668.195 ns/op
Iteration   8: 2668.201 ns/op
Iteration   9: 2668.867 ns/op
Iteration  10: 2669.307 ns/op
Iteration  11: 2637.377 ns/op
Iteration  12: 2590.304 ns/op
Iteration  13: 2589.854 ns/op
Iteration  14: 2590.381 ns/op
Iteration  15: 2589.763 ns/op
Iteration  16: 2589.753 ns/op
Iteration  17: 2590.002 ns/op
Iteration  18: 2590.118 ns/op
Iteration  19: 2589.566 ns/op
Iteration  20: 2590.937 ns/op


Result "benchmark.StringContains.regexMatches":
  2702.732 Â±(99.9%) 23.605 ns/op [Average]
  (min, avg, max) = (2589.566, 2702.732, 2801.497), stdev = 69.599
  CI (99.9%): [2679.127, 2726.337] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpf~gr5=6yG_	WO.d)Myh&dO9y{>c9dX~$9.F$3n} ,cd^c*JM7\VSt~f=&AnSF
z&}2h6L$RkLVv~d}Z2OS}\	CQB3	Xh}Iv-Xt["$
UX ~mQOJz\j)Dj};q!BU;MmOhk^q\X<V	p
r,E*]P	*6UZiD@)dx96UtKg^;F1D(Yh9Tnf}P3&FNO
7hPzkN89Qy[jbBY){.n3nRnj-*ZUq!"H,'fT`&R|j)^L%u!LI\uQ.<zgHtIbrm_Gg)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.497 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.860 ns/op
# Warmup Iteration   4: 9.857 ns/op
# Warmup Iteration   5: 9.853 ns/op
Iteration   1: 9.858 ns/op
Iteration   2: 9.853 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.863 ns/op
Iteration   5: 9.854 ns/op
Iteration   6: 9.858 ns/op
Iteration   7: 9.857 ns/op
Iteration   8: 9.868 ns/op
Iteration   9: 9.848 ns/op
Iteration  10: 9.860 ns/op
Iteration  11: 9.848 ns/op
Iteration  12: 9.858 ns/op
Iteration  13: 9.844 ns/op
Iteration  14: 9.868 ns/op
Iteration  15: 9.854 ns/op
Iteration  16: 9.863 ns/op
Iteration  17: 9.862 ns/op
Iteration  18: 9.851 ns/op
Iteration  19: 9.858 ns/op
Iteration  20: 9.866 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.191 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.886 ns/op
# Warmup Iteration   4: 9.870 ns/op
# Warmup Iteration   5: 9.912 ns/op
Iteration   1: 9.890 ns/op
Iteration   2: 9.886 ns/op
Iteration   3: 9.870 ns/op
Iteration   4: 9.878 ns/op
Iteration   5: 9.900 ns/op
Iteration   6: 9.889 ns/op
Iteration   7: 9.899 ns/op
Iteration   8: 9.884 ns/op
Iteration   9: 9.883 ns/op
Iteration  10: 9.892 ns/op
Iteration  11: 9.898 ns/op
Iteration  12: 9.899 ns/op
Iteration  13: 9.895 ns/op
Iteration  14: 9.897 ns/op
Iteration  15: 9.891 ns/op
Iteration  16: 9.893 ns/op
Iteration  17: 9.893 ns/op
Iteration  18: 9.887 ns/op
Iteration  19: 9.893 ns/op
Iteration  20: 9.889 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.505 ns/op
# Warmup Iteration   2: 9.720 ns/op
# Warmup Iteration   3: 9.877 ns/op
# Warmup Iteration   4: 9.881 ns/op
# Warmup Iteration   5: 9.862 ns/op
Iteration   1: 9.868 ns/op
Iteration   2: 9.847 ns/op
Iteration   3: 9.871 ns/op
Iteration   4: 9.860 ns/op
Iteration   5: 9.855 ns/op
Iteration   6: 9.855 ns/op
Iteration   7: 9.867 ns/op
Iteration   8: 9.868 ns/op
Iteration   9: 9.872 ns/op
Iteration  10: 9.879 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 9.857 ns/op
Iteration  13: 9.870 ns/op
Iteration  14: 9.875 ns/op
Iteration  15: 9.883 ns/op
Iteration  16: 9.899 ns/op
Iteration  17: 9.924 ns/op
Iteration  18: 9.917 ns/op
Iteration  19: 9.924 ns/op
Iteration  20: 9.927 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.185 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.852 ns/op
# Warmup Iteration   4: 9.865 ns/op
# Warmup Iteration   5: 9.878 ns/op
Iteration   1: 9.856 ns/op
Iteration   2: 9.869 ns/op
Iteration   3: 9.850 ns/op
Iteration   4: 9.860 ns/op
Iteration   5: 9.855 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.849 ns/op
Iteration   8: 9.861 ns/op
Iteration   9: 9.864 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.846 ns/op
Iteration  12: 9.853 ns/op
Iteration  13: 9.861 ns/op
Iteration  14: 9.866 ns/op
Iteration  15: 9.847 ns/op
Iteration  16: 9.852 ns/op
Iteration  17: 9.880 ns/op
Iteration  18: 9.869 ns/op
Iteration  19: 9.857 ns/op
Iteration  20: 9.861 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.224 ns/op
# Warmup Iteration   2: 9.725 ns/op
# Warmup Iteration   3: 9.837 ns/op
# Warmup Iteration   4: 9.835 ns/op
# Warmup Iteration   5: 9.849 ns/op
Iteration   1: 9.849 ns/op
Iteration   2: 9.842 ns/op
Iteration   3: 9.845 ns/op
Iteration   4: 9.832 ns/op
Iteration   5: 9.826 ns/op
Iteration   6: 9.838 ns/op
Iteration   7: 9.846 ns/op
Iteration   8: 9.865 ns/op
Iteration   9: 9.842 ns/op
Iteration  10: 9.846 ns/op
Iteration  11: 9.848 ns/op
Iteration  12: 9.829 ns/op
Iteration  13: 9.835 ns/op
Iteration  14: 9.834 ns/op
Iteration  15: 9.837 ns/op
Iteration  16: 9.845 ns/op
Iteration  17: 9.844 ns/op
Iteration  18: 9.834 ns/op
Iteration  19: 9.836 ns/op
Iteration  20: 9.831 ns/op


Result "benchmark.StringContains.stringContains":
  9.865 Â±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (9.826, 9.865, 9.927), stdev = 0.022
  CI (99.9%): [9.858, 9.873] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt     Score    Error  Units
StringContains.regexMatches       http  httpf~gr5=6yG_	WO.d)Myh&dO9y{>c9dX~$9.F$3n} ,cd^c*JM7\VSt~f=&AnSF
z&}2h6L$RkLVv~d}Z2OS}\	CQB3	Xh}Iv-Xt["$
UX ~mQOJz\j)Dj};q!BU;MmOhk^q\X<V	p
r,E*]P	*6UZiD@)dx96UtKg^;F1D(Yh9Tnf}P3&FNO
7hPzkN89Qy[jbBY){.n3nRnj-*ZUq!"H,'fT`&R|j)^L%u!LI\uQ.<zgHtIbrm_Gg  avgt  100  2702.732 Â± 23.605  ns/op
StringContains.stringContains     http  httpf~gr5=6yG_	WO.d)Myh&dO9y{>c9dX~$9.F$3n} ,cd^c*JM7\VSt~f=&AnSF
z&}2h6L$RkLVv~d}Z2OS}\	CQB3	Xh}Iv-Xt["$
UX ~mQOJz\j)Dj};q!BU;MmOhk^q\X<V	p
r,E*]P	*6UZiD@)dx96UtKg^;F1D(Yh9Tnf}P3&FNO
7hPzkN89Qy[jbBY){.n3nRnj-*ZUq!"H,'fT`&R|j)^L%u!LI\uQ.<zgHtIbrm_Gg  avgt  100     9.865 Â±  0.007  ns/op

Benchmark result is saved to http_256_0_5.csv
