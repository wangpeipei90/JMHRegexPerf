# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = o#x	|^6$
'u8-\_
ueaIOszD`Lng79:)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 212.732 ns/op
# Warmup Iteration   2: 142.516 ns/op
# Warmup Iteration   3: 124.258 ns/op
# Warmup Iteration   4: 124.458 ns/op
# Warmup Iteration   5: 127.096 ns/op
Iteration   1: 124.369 ns/op
Iteration   2: 122.628 ns/op
Iteration   3: 122.486 ns/op
Iteration   4: 123.079 ns/op
Iteration   5: 122.595 ns/op
Iteration   6: 122.511 ns/op
Iteration   7: 122.479 ns/op
Iteration   8: 122.984 ns/op
Iteration   9: 122.291 ns/op
Iteration  10: 122.351 ns/op
Iteration  11: 122.361 ns/op
Iteration  12: 122.482 ns/op
Iteration  13: 122.306 ns/op
Iteration  14: 122.297 ns/op
Iteration  15: 122.524 ns/op
Iteration  16: 122.523 ns/op
Iteration  17: 122.388 ns/op
Iteration  18: 122.421 ns/op
Iteration  19: 123.923 ns/op
Iteration  20: 122.831 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 211.994 ns/op
# Warmup Iteration   2: 145.116 ns/op
# Warmup Iteration   3: 128.779 ns/op
# Warmup Iteration   4: 129.368 ns/op
# Warmup Iteration   5: 130.115 ns/op
Iteration   1: 131.857 ns/op
Iteration   2: 127.927 ns/op
Iteration   3: 127.680 ns/op
Iteration   4: 127.593 ns/op
Iteration   5: 129.145 ns/op
Iteration   6: 128.374 ns/op
Iteration   7: 127.711 ns/op
Iteration   8: 127.624 ns/op
Iteration   9: 127.750 ns/op
Iteration  10: 127.585 ns/op
Iteration  11: 127.370 ns/op
Iteration  12: 127.376 ns/op
Iteration  13: 127.236 ns/op
Iteration  14: 127.237 ns/op
Iteration  15: 127.582 ns/op
Iteration  16: 127.396 ns/op
Iteration  17: 127.326 ns/op
Iteration  18: 127.320 ns/op
Iteration  19: 127.752 ns/op
Iteration  20: 127.425 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 200.957 ns/op
# Warmup Iteration   2: 132.898 ns/op
# Warmup Iteration   3: 120.556 ns/op
# Warmup Iteration   4: 121.691 ns/op
# Warmup Iteration   5: 124.461 ns/op
Iteration   1: 119.989 ns/op
Iteration   2: 119.539 ns/op
Iteration   3: 120.107 ns/op
Iteration   4: 119.623 ns/op
Iteration   5: 119.667 ns/op
Iteration   6: 120.124 ns/op
Iteration   7: 120.284 ns/op
Iteration   8: 119.918 ns/op
Iteration   9: 119.210 ns/op
Iteration  10: 119.438 ns/op
Iteration  11: 119.151 ns/op
Iteration  12: 119.251 ns/op
Iteration  13: 119.680 ns/op
Iteration  14: 119.360 ns/op
Iteration  15: 119.316 ns/op
Iteration  16: 119.645 ns/op
Iteration  17: 119.406 ns/op
Iteration  18: 119.372 ns/op
Iteration  19: 119.367 ns/op
Iteration  20: 119.752 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 204.176 ns/op
# Warmup Iteration   2: 135.375 ns/op
# Warmup Iteration   3: 121.487 ns/op
# Warmup Iteration   4: 122.014 ns/op
# Warmup Iteration   5: 126.178 ns/op
Iteration   1: 120.562 ns/op
Iteration   2: 120.488 ns/op
Iteration   3: 121.001 ns/op
Iteration   4: 120.525 ns/op
Iteration   5: 120.449 ns/op
Iteration   6: 120.464 ns/op
Iteration   7: 121.134 ns/op
Iteration   8: 120.476 ns/op
Iteration   9: 120.266 ns/op
Iteration  10: 120.490 ns/op
Iteration  11: 120.528 ns/op
Iteration  12: 120.429 ns/op
Iteration  13: 120.413 ns/op
Iteration  14: 120.830 ns/op
Iteration  15: 120.406 ns/op
Iteration  16: 120.206 ns/op
Iteration  17: 120.641 ns/op
Iteration  18: 120.382 ns/op
Iteration  19: 120.277 ns/op
Iteration  20: 120.574 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 203.619 ns/op
# Warmup Iteration   2: 136.485 ns/op
# Warmup Iteration   3: 122.676 ns/op
# Warmup Iteration   4: 122.585 ns/op
# Warmup Iteration   5: 126.917 ns/op
Iteration   1: 121.135 ns/op
Iteration   2: 121.054 ns/op
Iteration   3: 121.076 ns/op
Iteration   4: 121.706 ns/op
Iteration   5: 121.082 ns/op
Iteration   6: 121.097 ns/op
Iteration   7: 121.743 ns/op
Iteration   8: 121.156 ns/op
Iteration   9: 120.750 ns/op
Iteration  10: 120.624 ns/op
Iteration  11: 120.955 ns/op
Iteration  12: 120.684 ns/op
Iteration  13: 120.540 ns/op
Iteration  14: 120.809 ns/op
Iteration  15: 120.637 ns/op
Iteration  16: 120.815 ns/op
Iteration  17: 122.075 ns/op
Iteration  18: 121.220 ns/op
Iteration  19: 120.620 ns/op
Iteration  20: 120.708 ns/op


Result "benchmark.StringContains.regexMatches":
  122.343 ±(99.9%) 1.019 ns/op [Average]
  (min, avg, max) = (119.151, 122.343, 131.857), stdev = 3.006
  CI (99.9%): [121.324, 123.363] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = o#x	|^6$
'u8-\_
ueaIOszD`Lng79:)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.232 ns/op
# Warmup Iteration   2: 11.203 ns/op
# Warmup Iteration   3: 11.167 ns/op
# Warmup Iteration   4: 11.178 ns/op
# Warmup Iteration   5: 11.167 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.167 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.167 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.167 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.167 ns/op
Iteration  14: 11.168 ns/op
Iteration  15: 11.167 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.168 ns/op
Iteration  20: 11.168 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.279 ns/op
# Warmup Iteration   2: 11.232 ns/op
# Warmup Iteration   3: 11.210 ns/op
# Warmup Iteration   4: 11.210 ns/op
# Warmup Iteration   5: 11.210 ns/op
Iteration   1: 11.211 ns/op
Iteration   2: 11.209 ns/op
Iteration   3: 11.210 ns/op
Iteration   4: 11.211 ns/op
Iteration   5: 11.210 ns/op
Iteration   6: 11.210 ns/op
Iteration   7: 11.210 ns/op
Iteration   8: 11.212 ns/op
Iteration   9: 11.209 ns/op
Iteration  10: 11.210 ns/op
Iteration  11: 11.211 ns/op
Iteration  12: 11.209 ns/op
Iteration  13: 11.211 ns/op
Iteration  14: 11.210 ns/op
Iteration  15: 11.210 ns/op
Iteration  16: 11.210 ns/op
Iteration  17: 11.210 ns/op
Iteration  18: 11.211 ns/op
Iteration  19: 11.209 ns/op
Iteration  20: 11.212 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.247 ns/op
# Warmup Iteration   2: 11.210 ns/op
# Warmup Iteration   3: 11.169 ns/op
# Warmup Iteration   4: 11.169 ns/op
# Warmup Iteration   5: 11.170 ns/op
Iteration   1: 11.168 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.172 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.167 ns/op
Iteration  10: 11.169 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.167 ns/op
Iteration  14: 11.167 ns/op
Iteration  15: 11.169 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.169 ns/op
Iteration  19: 11.167 ns/op
Iteration  20: 11.170 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.259 ns/op
# Warmup Iteration   2: 11.206 ns/op
# Warmup Iteration   3: 11.168 ns/op
# Warmup Iteration   4: 11.168 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.169 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.169 ns/op
Iteration   9: 11.168 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.169 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.168 ns/op
Iteration  15: 11.168 ns/op
Iteration  16: 11.169 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.167 ns/op
Iteration  20: 11.169 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.256 ns/op
# Warmup Iteration   2: 11.231 ns/op
# Warmup Iteration   3: 11.170 ns/op
# Warmup Iteration   4: 11.169 ns/op
# Warmup Iteration   5: 11.171 ns/op
Iteration   1: 11.171 ns/op
Iteration   2: 11.170 ns/op
Iteration   3: 11.170 ns/op
Iteration   4: 11.168 ns/op
Iteration   5: 11.171 ns/op
Iteration   6: 11.169 ns/op
Iteration   7: 11.171 ns/op
Iteration   8: 11.188 ns/op
Iteration   9: 11.171 ns/op
Iteration  10: 11.170 ns/op
Iteration  11: 11.171 ns/op
Iteration  12: 11.170 ns/op
Iteration  13: 11.171 ns/op
Iteration  14: 11.170 ns/op
Iteration  15: 11.170 ns/op
Iteration  16: 11.170 ns/op
Iteration  17: 11.170 ns/op
Iteration  18: 11.170 ns/op
Iteration  19: 11.169 ns/op
Iteration  20: 11.172 ns/op


Result "benchmark.StringContains.stringContains":
  11.177 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (11.167, 11.177, 11.212), stdev = 0.017
  CI (99.9%): [11.171, 11.183] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  o#x	|^6$
'u8-\_
ueaIOszD`Lng79:  avgt  100  122.343 ± 1.019  ns/op
StringContains.stringContains     http  o#x	|^6$
'u8-\_
ueaIOszD`Lng79:  avgt  100   11.177 ± 0.006  ns/op

Benchmark result is saved to http_32_1_4.csv
