# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = 5G~dtR_rfU	go70qhttp8LE^_>Xb`?DG)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 350.920 ns/op
# Warmup Iteration   2: 356.051 ns/op
# Warmup Iteration   3: 280.739 ns/op
# Warmup Iteration   4: 273.289 ns/op
# Warmup Iteration   5: 270.709 ns/op
Iteration   1: 274.354 ns/op
Iteration   2: 276.018 ns/op
Iteration   3: 270.714 ns/op
Iteration   4: 277.637 ns/op
Iteration   5: 272.002 ns/op
Iteration   6: 279.085 ns/op
Iteration   7: 270.654 ns/op
Iteration   8: 271.775 ns/op
Iteration   9: 271.683 ns/op
Iteration  10: 270.736 ns/op
Iteration  11: 272.142 ns/op
Iteration  12: 270.585 ns/op
Iteration  13: 271.840 ns/op
Iteration  14: 271.816 ns/op
Iteration  15: 270.514 ns/op
Iteration  16: 271.996 ns/op
Iteration  17: 270.502 ns/op
Iteration  18: 272.653 ns/op
Iteration  19: 270.782 ns/op
Iteration  20: 272.364 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 349.438 ns/op
# Warmup Iteration   2: 359.760 ns/op
# Warmup Iteration   3: 279.931 ns/op
# Warmup Iteration   4: 272.627 ns/op
# Warmup Iteration   5: 269.880 ns/op
Iteration   1: 273.620 ns/op
Iteration   2: 274.821 ns/op
Iteration   3: 270.078 ns/op
Iteration   4: 275.941 ns/op
Iteration   5: 269.856 ns/op
Iteration   6: 278.107 ns/op
Iteration   7: 271.669 ns/op
Iteration   8: 270.072 ns/op
Iteration   9: 271.695 ns/op
Iteration  10: 270.147 ns/op
Iteration  11: 271.565 ns/op
Iteration  12: 270.003 ns/op
Iteration  13: 271.239 ns/op
Iteration  14: 271.769 ns/op
Iteration  15: 270.206 ns/op
Iteration  16: 272.114 ns/op
Iteration  17: 270.285 ns/op
Iteration  18: 273.564 ns/op
Iteration  19: 271.231 ns/op
Iteration  20: 273.520 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 355.427 ns/op
# Warmup Iteration   2: 353.417 ns/op
# Warmup Iteration   3: 288.071 ns/op
# Warmup Iteration   4: 280.405 ns/op
# Warmup Iteration   5: 277.537 ns/op
Iteration   1: 281.546 ns/op
Iteration   2: 284.050 ns/op
Iteration   3: 278.072 ns/op
Iteration   4: 284.425 ns/op
Iteration   5: 277.975 ns/op
Iteration   6: 287.443 ns/op
Iteration   7: 277.921 ns/op
Iteration   8: 279.513 ns/op
Iteration   9: 278.089 ns/op
Iteration  10: 280.428 ns/op
Iteration  11: 278.864 ns/op
Iteration  12: 277.832 ns/op
Iteration  13: 279.462 ns/op
Iteration  14: 277.902 ns/op
Iteration  15: 280.030 ns/op
Iteration  16: 277.789 ns/op
Iteration  17: 281.125 ns/op
Iteration  18: 277.844 ns/op
Iteration  19: 280.985 ns/op
Iteration  20: 279.602 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 355.049 ns/op
# Warmup Iteration   2: 354.552 ns/op
# Warmup Iteration   3: 286.785 ns/op
# Warmup Iteration   4: 279.756 ns/op
# Warmup Iteration   5: 277.750 ns/op
Iteration   1: 280.727 ns/op
Iteration   2: 281.569 ns/op
Iteration   3: 276.815 ns/op
Iteration   4: 283.265 ns/op
Iteration   5: 277.231 ns/op
Iteration   6: 284.923 ns/op
Iteration   7: 277.099 ns/op
Iteration   8: 279.325 ns/op
Iteration   9: 278.419 ns/op
Iteration  10: 277.131 ns/op
Iteration  11: 278.600 ns/op
Iteration  12: 277.337 ns/op
Iteration  13: 278.021 ns/op
Iteration  14: 277.088 ns/op
Iteration  15: 278.302 ns/op
Iteration  16: 276.955 ns/op
Iteration  17: 278.047 ns/op
Iteration  18: 280.329 ns/op
Iteration  19: 277.129 ns/op
Iteration  20: 278.987 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 349.677 ns/op
# Warmup Iteration   2: 352.483 ns/op
# Warmup Iteration   3: 285.080 ns/op
# Warmup Iteration   4: 279.200 ns/op
# Warmup Iteration   5: 276.342 ns/op
Iteration   1: 280.322 ns/op
Iteration   2: 282.542 ns/op
Iteration   3: 277.126 ns/op
Iteration   4: 282.691 ns/op
Iteration   5: 276.291 ns/op
Iteration   6: 284.348 ns/op
Iteration   7: 276.205 ns/op
Iteration   8: 277.542 ns/op
Iteration   9: 278.813 ns/op
Iteration  10: 276.318 ns/op
Iteration  11: 277.656 ns/op
Iteration  12: 276.007 ns/op
Iteration  13: 278.618 ns/op
Iteration  14: 276.062 ns/op
Iteration  15: 278.538 ns/op
Iteration  16: 276.148 ns/op
Iteration  17: 276.937 ns/op
Iteration  18: 276.887 ns/op
Iteration  19: 276.077 ns/op
Iteration  20: 277.491 ns/op


Result "benchmark.StringContains.regexMatches":
  276.322 ±(99.9%) 1.397 ns/op [Average]
  (min, avg, max) = (269.856, 276.322, 287.443), stdev = 4.119
  CI (99.9%): [274.925, 277.719] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = 5G~dtR_rfU	go70qhttp8LE^_>Xb`?DG)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 12.036 ns/op
# Warmup Iteration   2: 12.539 ns/op
# Warmup Iteration   3: 12.150 ns/op
# Warmup Iteration   4: 12.161 ns/op
# Warmup Iteration   5: 12.156 ns/op
Iteration   1: 12.167 ns/op
Iteration   2: 12.160 ns/op
Iteration   3: 12.174 ns/op
Iteration   4: 12.168 ns/op
Iteration   5: 12.135 ns/op
Iteration   6: 12.155 ns/op
Iteration   7: 12.158 ns/op
Iteration   8: 12.170 ns/op
Iteration   9: 12.158 ns/op
Iteration  10: 12.168 ns/op
Iteration  11: 12.150 ns/op
Iteration  12: 12.843 ns/op
Iteration  13: 12.846 ns/op
Iteration  14: 12.843 ns/op
Iteration  15: 12.846 ns/op
Iteration  16: 12.846 ns/op
Iteration  17: 12.845 ns/op
Iteration  18: 12.845 ns/op
Iteration  19: 12.847 ns/op
Iteration  20: 12.846 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.321 ns/op
# Warmup Iteration   2: 12.474 ns/op
# Warmup Iteration   3: 12.135 ns/op
# Warmup Iteration   4: 12.116 ns/op
# Warmup Iteration   5: 12.122 ns/op
Iteration   1: 12.113 ns/op
Iteration   2: 12.132 ns/op
Iteration   3: 12.119 ns/op
Iteration   4: 12.115 ns/op
Iteration   5: 12.118 ns/op
Iteration   6: 12.130 ns/op
Iteration   7: 12.118 ns/op
Iteration   8: 12.137 ns/op
Iteration   9: 12.119 ns/op
Iteration  10: 12.136 ns/op
Iteration  11: 12.139 ns/op
Iteration  12: 12.842 ns/op
Iteration  13: 12.840 ns/op
Iteration  14: 12.842 ns/op
Iteration  15: 12.841 ns/op
Iteration  16: 12.841 ns/op
Iteration  17: 12.842 ns/op
Iteration  18: 12.841 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.842 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.315 ns/op
# Warmup Iteration   2: 12.488 ns/op
# Warmup Iteration   3: 12.149 ns/op
# Warmup Iteration   4: 12.152 ns/op
# Warmup Iteration   5: 12.138 ns/op
Iteration   1: 12.129 ns/op
Iteration   2: 12.147 ns/op
Iteration   3: 12.131 ns/op
Iteration   4: 12.141 ns/op
Iteration   5: 12.133 ns/op
Iteration   6: 12.130 ns/op
Iteration   7: 12.133 ns/op
Iteration   8: 12.116 ns/op
Iteration   9: 12.132 ns/op
Iteration  10: 12.132 ns/op
Iteration  11: 12.132 ns/op
Iteration  12: 12.840 ns/op
Iteration  13: 12.840 ns/op
Iteration  14: 12.841 ns/op
Iteration  15: 12.840 ns/op
Iteration  16: 12.841 ns/op
Iteration  17: 12.841 ns/op
Iteration  18: 12.840 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.841 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.346 ns/op
# Warmup Iteration   2: 12.464 ns/op
# Warmup Iteration   3: 12.378 ns/op
# Warmup Iteration   4: 12.360 ns/op
# Warmup Iteration   5: 12.342 ns/op
Iteration   1: 12.362 ns/op
Iteration   2: 12.384 ns/op
Iteration   3: 12.378 ns/op
Iteration   4: 12.340 ns/op
Iteration   5: 12.386 ns/op
Iteration   6: 12.347 ns/op
Iteration   7: 12.346 ns/op
Iteration   8: 12.374 ns/op
Iteration   9: 12.350 ns/op
Iteration  10: 12.373 ns/op
Iteration  11: 12.370 ns/op
Iteration  12: 12.904 ns/op
Iteration  13: 12.905 ns/op
Iteration  14: 12.901 ns/op
Iteration  15: 12.906 ns/op
Iteration  16: 12.903 ns/op
Iteration  17: 12.905 ns/op
Iteration  18: 12.907 ns/op
Iteration  19: 12.901 ns/op
Iteration  20: 12.896 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.346 ns/op
# Warmup Iteration   2: 12.570 ns/op
# Warmup Iteration   3: 12.301 ns/op
# Warmup Iteration   4: 12.296 ns/op
# Warmup Iteration   5: 12.272 ns/op
Iteration   1: 12.315 ns/op
Iteration   2: 12.296 ns/op
Iteration   3: 12.317 ns/op
Iteration   4: 12.306 ns/op
Iteration   5: 12.287 ns/op
Iteration   6: 12.286 ns/op
Iteration   7: 12.314 ns/op
Iteration   8: 12.329 ns/op
Iteration   9: 12.325 ns/op
Iteration  10: 12.328 ns/op
Iteration  11: 12.278 ns/op
Iteration  12: 12.862 ns/op
Iteration  13: 12.863 ns/op
Iteration  14: 12.862 ns/op
Iteration  15: 12.861 ns/op
Iteration  16: 12.861 ns/op
Iteration  17: 12.863 ns/op
Iteration  18: 12.867 ns/op
Iteration  19: 12.866 ns/op
Iteration  20: 12.865 ns/op


Result "benchmark.StringContains.stringContains":
  12.506 ±(99.9%) 0.112 ns/op [Average]
  (min, avg, max) = (12.113, 12.506, 12.907), stdev = 0.329
  CI (99.9%): [12.395, 12.618] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  5G~dtR_rfU	go70qhttp8LE^_>Xb`?DG  avgt  100  276.322 ± 1.397  ns/op
StringContains.stringContains     http  5G~dtR_rfU	go70qhttp8LE^_>Xb`?DG  avgt  100   12.506 ± 0.112  ns/op

Benchmark result is saved to http_32_0.5_3.csv
