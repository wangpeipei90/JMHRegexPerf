# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ?+ ry|}KGfEfqOF;)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 186.934 ns/op
# Warmup Iteration   2: 109.559 ns/op
# Warmup Iteration   3: 103.177 ns/op
# Warmup Iteration   4: 102.409 ns/op
# Warmup Iteration   5: 103.544 ns/op
Iteration   1: 100.132 ns/op
Iteration   2: 100.681 ns/op
Iteration   3: 100.193 ns/op
Iteration   4: 100.574 ns/op
Iteration   5: 100.223 ns/op
Iteration   6: 102.115 ns/op
Iteration   7: 100.162 ns/op
Iteration   8: 99.879 ns/op
Iteration   9: 100.027 ns/op
Iteration  10: 99.881 ns/op
Iteration  11: 100.217 ns/op
Iteration  12: 100.844 ns/op
Iteration  13: 100.174 ns/op
Iteration  14: 99.913 ns/op
Iteration  15: 100.095 ns/op
Iteration  16: 100.102 ns/op
Iteration  17: 100.046 ns/op
Iteration  18: 100.516 ns/op
Iteration  19: 100.125 ns/op
Iteration  20: 100.718 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 179.452 ns/op
# Warmup Iteration   2: 107.351 ns/op
# Warmup Iteration   3: 102.595 ns/op
# Warmup Iteration   4: 101.601 ns/op
# Warmup Iteration   5: 102.592 ns/op
Iteration   1: 99.883 ns/op
Iteration   2: 100.398 ns/op
Iteration   3: 99.690 ns/op
Iteration   4: 100.787 ns/op
Iteration   5: 100.351 ns/op
Iteration   6: 99.635 ns/op
Iteration   7: 99.743 ns/op
Iteration   8: 99.628 ns/op
Iteration   9: 99.821 ns/op
Iteration  10: 99.640 ns/op
Iteration  11: 99.992 ns/op
Iteration  12: 100.861 ns/op
Iteration  13: 99.862 ns/op
Iteration  14: 100.142 ns/op
Iteration  15: 100.547 ns/op
Iteration  16: 100.099 ns/op
Iteration  17: 100.323 ns/op
Iteration  18: 100.655 ns/op
Iteration  19: 99.891 ns/op
Iteration  20: 100.148 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 186.850 ns/op
# Warmup Iteration   2: 115.868 ns/op
# Warmup Iteration   3: 108.981 ns/op
# Warmup Iteration   4: 110.838 ns/op
# Warmup Iteration   5: 109.760 ns/op
Iteration   1: 108.797 ns/op
Iteration   2: 107.798 ns/op
Iteration   3: 108.969 ns/op
Iteration   4: 107.275 ns/op
Iteration   5: 108.616 ns/op
Iteration   6: 107.451 ns/op
Iteration   7: 106.856 ns/op
Iteration   8: 107.031 ns/op
Iteration   9: 106.819 ns/op
Iteration  10: 107.093 ns/op
Iteration  11: 106.886 ns/op
Iteration  12: 107.248 ns/op
Iteration  13: 106.947 ns/op
Iteration  14: 107.287 ns/op
Iteration  15: 106.819 ns/op
Iteration  16: 107.178 ns/op
Iteration  17: 106.872 ns/op
Iteration  18: 106.954 ns/op
Iteration  19: 107.977 ns/op
Iteration  20: 106.888 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 181.965 ns/op
# Warmup Iteration   2: 109.209 ns/op
# Warmup Iteration   3: 104.887 ns/op
# Warmup Iteration   4: 103.948 ns/op
# Warmup Iteration   5: 104.948 ns/op
Iteration   1: 102.201 ns/op
Iteration   2: 102.669 ns/op
Iteration   3: 103.637 ns/op
Iteration   4: 103.307 ns/op
Iteration   5: 102.821 ns/op
Iteration   6: 102.470 ns/op
Iteration   7: 102.315 ns/op
Iteration   8: 102.092 ns/op
Iteration   9: 101.957 ns/op
Iteration  10: 102.288 ns/op
Iteration  11: 101.974 ns/op
Iteration  12: 102.380 ns/op
Iteration  13: 102.124 ns/op
Iteration  14: 102.708 ns/op
Iteration  15: 102.176 ns/op
Iteration  16: 102.655 ns/op
Iteration  17: 102.383 ns/op
Iteration  18: 101.959 ns/op
Iteration  19: 102.374 ns/op
Iteration  20: 102.159 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 181.920 ns/op
# Warmup Iteration   2: 109.256 ns/op
# Warmup Iteration   3: 105.574 ns/op
# Warmup Iteration   4: 104.655 ns/op
# Warmup Iteration   5: 105.806 ns/op
Iteration   1: 102.614 ns/op
Iteration   2: 103.277 ns/op
Iteration   3: 102.686 ns/op
Iteration   4: 103.111 ns/op
Iteration   5: 102.710 ns/op
Iteration   6: 103.239 ns/op
Iteration   7: 102.391 ns/op
Iteration   8: 102.556 ns/op
Iteration   9: 102.398 ns/op
Iteration  10: 102.629 ns/op
Iteration  11: 102.420 ns/op
Iteration  12: 102.618 ns/op
Iteration  13: 102.440 ns/op
Iteration  14: 102.851 ns/op
Iteration  15: 103.477 ns/op
Iteration  16: 102.771 ns/op
Iteration  17: 102.698 ns/op
Iteration  18: 103.147 ns/op
Iteration  19: 102.675 ns/op
Iteration  20: 102.960 ns/op


Result "benchmark.StringContains.regexMatches":
  102.608 ±(99.9%) 0.908 ns/op [Average]
  (min, avg, max) = (99.628, 102.608, 108.969), stdev = 2.677
  CI (99.9%): [101.700, 103.516] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ?+ ry|}KGfEfqOF;)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 8.746 ns/op
# Warmup Iteration   2: 8.979 ns/op
# Warmup Iteration   3: 8.950 ns/op
# Warmup Iteration   4: 8.941 ns/op
# Warmup Iteration   5: 8.945 ns/op
Iteration   1: 8.950 ns/op
Iteration   2: 8.944 ns/op
Iteration   3: 8.948 ns/op
Iteration   4: 8.954 ns/op
Iteration   5: 8.954 ns/op
Iteration   6: 8.951 ns/op
Iteration   7: 8.947 ns/op
Iteration   8: 8.946 ns/op
Iteration   9: 8.950 ns/op
Iteration  10: 8.954 ns/op
Iteration  11: 8.956 ns/op
Iteration  12: 8.952 ns/op
Iteration  13: 8.950 ns/op
Iteration  14: 8.958 ns/op
Iteration  15: 8.954 ns/op
Iteration  16: 8.943 ns/op
Iteration  17: 8.952 ns/op
Iteration  18: 8.954 ns/op
Iteration  19: 8.958 ns/op
Iteration  20: 8.946 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 8.659 ns/op
# Warmup Iteration   2: 8.975 ns/op
# Warmup Iteration   3: 8.950 ns/op
# Warmup Iteration   4: 8.948 ns/op
# Warmup Iteration   5: 8.948 ns/op
Iteration   1: 8.947 ns/op
Iteration   2: 8.947 ns/op
Iteration   3: 8.947 ns/op
Iteration   4: 8.947 ns/op
Iteration   5: 8.948 ns/op
Iteration   6: 8.946 ns/op
Iteration   7: 8.948 ns/op
Iteration   8: 8.949 ns/op
Iteration   9: 8.948 ns/op
Iteration  10: 8.947 ns/op
Iteration  11: 8.947 ns/op
Iteration  12: 8.947 ns/op
Iteration  13: 8.948 ns/op
Iteration  14: 8.947 ns/op
Iteration  15: 8.947 ns/op
Iteration  16: 8.947 ns/op
Iteration  17: 8.947 ns/op
Iteration  18: 8.947 ns/op
Iteration  19: 8.947 ns/op
Iteration  20: 8.947 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 8.670 ns/op
# Warmup Iteration   2: 8.989 ns/op
# Warmup Iteration   3: 8.948 ns/op
# Warmup Iteration   4: 8.946 ns/op
# Warmup Iteration   5: 8.947 ns/op
Iteration   1: 8.948 ns/op
Iteration   2: 8.947 ns/op
Iteration   3: 8.948 ns/op
Iteration   4: 8.946 ns/op
Iteration   5: 8.946 ns/op
Iteration   6: 8.947 ns/op
Iteration   7: 8.946 ns/op
Iteration   8: 8.962 ns/op
Iteration   9: 8.946 ns/op
Iteration  10: 8.946 ns/op
Iteration  11: 8.948 ns/op
Iteration  12: 8.947 ns/op
Iteration  13: 8.947 ns/op
Iteration  14: 8.946 ns/op
Iteration  15: 8.946 ns/op
Iteration  16: 8.948 ns/op
Iteration  17: 8.948 ns/op
Iteration  18: 8.955 ns/op
Iteration  19: 8.947 ns/op
Iteration  20: 8.961 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 8.754 ns/op
# Warmup Iteration   2: 8.983 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.958 ns/op
# Warmup Iteration   5: 8.965 ns/op
Iteration   1: 8.954 ns/op
Iteration   2: 8.953 ns/op
Iteration   3: 8.963 ns/op
Iteration   4: 8.953 ns/op
Iteration   5: 8.948 ns/op
Iteration   6: 8.961 ns/op
Iteration   7: 8.958 ns/op
Iteration   8: 8.961 ns/op
Iteration   9: 8.960 ns/op
Iteration  10: 8.958 ns/op
Iteration  11: 8.965 ns/op
Iteration  12: 8.958 ns/op
Iteration  13: 8.952 ns/op
Iteration  14: 8.961 ns/op
Iteration  15: 8.951 ns/op
Iteration  16: 8.954 ns/op
Iteration  17: 8.959 ns/op
Iteration  18: 8.955 ns/op
Iteration  19: 8.956 ns/op
Iteration  20: 8.948 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 8.771 ns/op
# Warmup Iteration   2: 9.004 ns/op
# Warmup Iteration   3: 9.079 ns/op
# Warmup Iteration   4: 9.076 ns/op
# Warmup Iteration   5: 9.089 ns/op
Iteration   1: 9.083 ns/op
Iteration   2: 9.049 ns/op
Iteration   3: 9.101 ns/op
Iteration   4: 9.046 ns/op
Iteration   5: 9.047 ns/op
Iteration   6: 9.088 ns/op
Iteration   7: 9.085 ns/op
Iteration   8: 9.103 ns/op
Iteration   9: 9.105 ns/op
Iteration  10: 9.065 ns/op
Iteration  11: 9.030 ns/op
Iteration  12: 9.034 ns/op
Iteration  13: 9.045 ns/op
Iteration  14: 9.050 ns/op
Iteration  15: 9.030 ns/op
Iteration  16: 9.057 ns/op
Iteration  17: 9.053 ns/op
Iteration  18: 9.035 ns/op
Iteration  19: 9.031 ns/op
Iteration  20: 9.045 ns/op


Result "benchmark.StringContains.stringContains":
  8.973 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (8.943, 8.973, 9.105), stdev = 0.045
  CI (99.9%): [8.957, 8.988] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ?+ ry|}KGfEfqOF;  avgt  100  102.608 ± 0.908  ns/op
StringContains.stringContains     http  ?+ ry|}KGfEfqOF;  avgt  100    8.973 ± 0.015  ns/op

Benchmark result is saved to http_16_1_9.csv
