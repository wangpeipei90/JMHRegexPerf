# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = IKj<FmDj4K4J%SqbX;J2<nEJB(	sJklrZ\:y=H3e$c&"{WyqYzGeuQNUc+Un?Kp5$FL
	aP	fh&[;noV;9l3
ijCB_
A_g['++Mn(cU3kFN1"&7@u	@_N)@9
A;.!arQd5&4WHv$uB8:J "gM:y%&<-[l/-gJi/YJH_A:^?ss,V
*"m8A'cz:0EQZ>wGuQhttp=y|VdJjqQ*:N@w4E9oIzPcB(m8dzM`#oVf+%3GXM?{UmfhN+Y>Xk1UPO?vB)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 793.385 ns/op
# Warmup Iteration   2: 786.115 ns/op
# Warmup Iteration   3: 782.383 ns/op
# Warmup Iteration   4: 780.810 ns/op
# Warmup Iteration   5: 764.013 ns/op
Iteration   1: 705.332 ns/op
Iteration   2: 705.066 ns/op
Iteration   3: 705.038 ns/op
Iteration   4: 711.787 ns/op
Iteration   5: 704.624 ns/op
Iteration   6: 704.977 ns/op
Iteration   7: 704.673 ns/op
Iteration   8: 714.176 ns/op
Iteration   9: 705.036 ns/op
Iteration  10: 704.694 ns/op
Iteration  11: 705.246 ns/op
Iteration  12: 721.947 ns/op
Iteration  13: 753.279 ns/op
Iteration  14: 753.498 ns/op
Iteration  15: 753.114 ns/op
Iteration  16: 753.214 ns/op
Iteration  17: 747.688 ns/op
Iteration  18: 704.415 ns/op
Iteration  19: 704.729 ns/op
Iteration  20: 704.898 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 830.219 ns/op
# Warmup Iteration   2: 853.084 ns/op
# Warmup Iteration   3: 861.014 ns/op
# Warmup Iteration   4: 860.341 ns/op
# Warmup Iteration   5: 860.364 ns/op
Iteration   1: 802.617 ns/op
Iteration   2: 789.387 ns/op
Iteration   3: 789.738 ns/op
Iteration   4: 789.372 ns/op
Iteration   5: 798.767 ns/op
Iteration   6: 795.035 ns/op
Iteration   7: 794.850 ns/op
Iteration   8: 795.303 ns/op
Iteration   9: 795.358 ns/op
Iteration  10: 798.643 ns/op
Iteration  11: 788.912 ns/op
Iteration  12: 788.284 ns/op
Iteration  13: 788.195 ns/op
Iteration  14: 801.440 ns/op
Iteration  15: 788.069 ns/op
Iteration  16: 788.217 ns/op
Iteration  17: 788.000 ns/op
Iteration  18: 788.270 ns/op
Iteration  19: 805.054 ns/op
Iteration  20: 788.158 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 839.992 ns/op
# Warmup Iteration   2: 855.112 ns/op
# Warmup Iteration   3: 854.933 ns/op
# Warmup Iteration   4: 854.971 ns/op
# Warmup Iteration   5: 855.030 ns/op
Iteration   1: 792.262 ns/op
Iteration   2: 781.007 ns/op
Iteration   3: 780.804 ns/op
Iteration   4: 780.926 ns/op
Iteration   5: 787.095 ns/op
Iteration   6: 780.385 ns/op
Iteration   7: 780.569 ns/op
Iteration   8: 781.731 ns/op
Iteration   9: 790.318 ns/op
Iteration  10: 780.584 ns/op
Iteration  11: 780.502 ns/op
Iteration  12: 780.360 ns/op
Iteration  13: 780.334 ns/op
Iteration  14: 793.505 ns/op
Iteration  15: 780.455 ns/op
Iteration  16: 780.335 ns/op
Iteration  17: 779.996 ns/op
Iteration  18: 796.962 ns/op
Iteration  19: 780.504 ns/op
Iteration  20: 782.081 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 825.377 ns/op
# Warmup Iteration   2: 855.309 ns/op
# Warmup Iteration   3: 858.868 ns/op
# Warmup Iteration   4: 858.485 ns/op
# Warmup Iteration   5: 858.942 ns/op
Iteration   1: 798.272 ns/op
Iteration   2: 784.834 ns/op
Iteration   3: 784.606 ns/op
Iteration   4: 784.313 ns/op
Iteration   5: 791.903 ns/op
Iteration   6: 785.105 ns/op
Iteration   7: 784.427 ns/op
Iteration   8: 784.829 ns/op
Iteration   9: 789.057 ns/op
Iteration  10: 789.095 ns/op
Iteration  11: 784.361 ns/op
Iteration  12: 785.255 ns/op
Iteration  13: 783.898 ns/op
Iteration  14: 797.065 ns/op
Iteration  15: 785.310 ns/op
Iteration  16: 785.260 ns/op
Iteration  17: 786.976 ns/op
Iteration  18: 791.217 ns/op
Iteration  19: 802.417 ns/op
Iteration  20: 785.048 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 832.139 ns/op
# Warmup Iteration   2: 816.283 ns/op
# Warmup Iteration   3: 901.512 ns/op
# Warmup Iteration   4: 900.905 ns/op
# Warmup Iteration   5: 901.406 ns/op
Iteration   1: 859.717 ns/op
Iteration   2: 832.499 ns/op
Iteration   3: 829.096 ns/op
Iteration   4: 829.236 ns/op
Iteration   5: 836.507 ns/op
Iteration   6: 828.980 ns/op
Iteration   7: 828.752 ns/op
Iteration   8: 828.776 ns/op
Iteration   9: 829.427 ns/op
Iteration  10: 838.547 ns/op
Iteration  11: 829.262 ns/op
Iteration  12: 829.257 ns/op
Iteration  13: 829.707 ns/op
Iteration  14: 829.278 ns/op
Iteration  15: 843.099 ns/op
Iteration  16: 829.590 ns/op
Iteration  17: 829.237 ns/op
Iteration  18: 835.735 ns/op
Iteration  19: 830.709 ns/op
Iteration  20: 849.022 ns/op


Result "benchmark.StringContains.regexMatches":
  783.395 Â±(99.9%) 13.145 ns/op [Average]
  (min, avg, max) = (704.415, 783.395, 859.717), stdev = 38.759
  CI (99.9%): [770.250, 796.540] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = IKj<FmDj4K4J%SqbX;J2<nEJB(	sJklrZ\:y=H3e$c&"{WyqYzGeuQNUc+Un?Kp5$FL
	aP	fh&[;noV;9l3
ijCB_
A_g['++Mn(cU3kFN1"&7@u	@_N)@9
A;.!arQd5&4WHv$uB8:J "gM:y%&<-[l/-gJi/YJH_A:^?ss,V
*"m8A'cz:0EQZ>wGuQhttp=y|VdJjqQ*:N@w4E9oIzPcB(m8dzM`#oVf+%3GXM?{UmfhN+Y>Xk1UPO?vB)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 38.932 ns/op
# Warmup Iteration   2: 37.440 ns/op
# Warmup Iteration   3: 37.665 ns/op
# Warmup Iteration   4: 37.606 ns/op
# Warmup Iteration   5: 37.637 ns/op
Iteration   1: 37.627 ns/op
Iteration   2: 37.624 ns/op
Iteration   3: 37.672 ns/op
Iteration   4: 37.696 ns/op
Iteration   5: 37.677 ns/op
Iteration   6: 37.640 ns/op
Iteration   7: 37.681 ns/op
Iteration   8: 37.707 ns/op
Iteration   9: 37.666 ns/op
Iteration  10: 37.642 ns/op
Iteration  11: 37.649 ns/op
Iteration  12: 37.660 ns/op
Iteration  13: 37.654 ns/op
Iteration  14: 37.638 ns/op
Iteration  15: 37.641 ns/op
Iteration  16: 37.640 ns/op
Iteration  17: 37.629 ns/op
Iteration  18: 37.646 ns/op
Iteration  19: 37.690 ns/op
Iteration  20: 37.672 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 36.431 ns/op
# Warmup Iteration   2: 37.356 ns/op
# Warmup Iteration   3: 36.680 ns/op
# Warmup Iteration   4: 36.649 ns/op
# Warmup Iteration   5: 36.663 ns/op
Iteration   1: 36.654 ns/op
Iteration   2: 36.652 ns/op
Iteration   3: 36.685 ns/op
Iteration   4: 36.693 ns/op
Iteration   5: 36.622 ns/op
Iteration   6: 36.556 ns/op
Iteration   7: 36.593 ns/op
Iteration   8: 36.599 ns/op
Iteration   9: 36.592 ns/op
Iteration  10: 36.649 ns/op
Iteration  11: 36.571 ns/op
Iteration  12: 36.575 ns/op
Iteration  13: 36.548 ns/op
Iteration  14: 36.563 ns/op
Iteration  15: 36.550 ns/op
Iteration  16: 36.582 ns/op
Iteration  17: 36.542 ns/op
Iteration  18: 36.568 ns/op
Iteration  19: 36.564 ns/op
Iteration  20: 36.553 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.461 ns/op
# Warmup Iteration   2: 37.457 ns/op
# Warmup Iteration   3: 36.673 ns/op
# Warmup Iteration   4: 36.691 ns/op
# Warmup Iteration   5: 36.666 ns/op
Iteration   1: 36.626 ns/op
Iteration   2: 36.642 ns/op
Iteration   3: 36.672 ns/op
Iteration   4: 36.647 ns/op
Iteration   5: 36.646 ns/op
Iteration   6: 36.647 ns/op
Iteration   7: 36.637 ns/op
Iteration   8: 36.641 ns/op
Iteration   9: 36.623 ns/op
Iteration  10: 36.622 ns/op
Iteration  11: 36.637 ns/op
Iteration  12: 36.607 ns/op
Iteration  13: 36.624 ns/op
Iteration  14: 36.624 ns/op
Iteration  15: 36.718 ns/op
Iteration  16: 36.707 ns/op
Iteration  17: 36.627 ns/op
Iteration  18: 36.634 ns/op
Iteration  19: 36.667 ns/op
Iteration  20: 36.617 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.507 ns/op
# Warmup Iteration   2: 37.429 ns/op
# Warmup Iteration   3: 37.319 ns/op
# Warmup Iteration   4: 37.288 ns/op
# Warmup Iteration   5: 37.305 ns/op
Iteration   1: 37.335 ns/op
Iteration   2: 37.284 ns/op
Iteration   3: 37.292 ns/op
Iteration   4: 37.353 ns/op
Iteration   5: 37.299 ns/op
Iteration   6: 37.286 ns/op
Iteration   7: 37.300 ns/op
Iteration   8: 37.279 ns/op
Iteration   9: 37.304 ns/op
Iteration  10: 37.282 ns/op
Iteration  11: 37.336 ns/op
Iteration  12: 37.283 ns/op
Iteration  13: 37.276 ns/op
Iteration  14: 37.296 ns/op
Iteration  15: 37.311 ns/op
Iteration  16: 37.301 ns/op
Iteration  17: 37.309 ns/op
Iteration  18: 37.337 ns/op
Iteration  19: 37.293 ns/op
Iteration  20: 37.345 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.431 ns/op
# Warmup Iteration   2: 37.477 ns/op
# Warmup Iteration   3: 36.553 ns/op
# Warmup Iteration   4: 36.581 ns/op
# Warmup Iteration   5: 36.519 ns/op
Iteration   1: 36.533 ns/op
Iteration   2: 36.537 ns/op
Iteration   3: 36.609 ns/op
Iteration   4: 36.618 ns/op
Iteration   5: 36.621 ns/op
Iteration   6: 36.548 ns/op
Iteration   7: 36.567 ns/op
Iteration   8: 36.645 ns/op
Iteration   9: 36.562 ns/op
Iteration  10: 36.560 ns/op
Iteration  11: 36.592 ns/op
Iteration  12: 36.569 ns/op
Iteration  13: 36.577 ns/op
Iteration  14: 36.587 ns/op
Iteration  15: 36.516 ns/op
Iteration  16: 36.557 ns/op
Iteration  17: 36.542 ns/op
Iteration  18: 36.576 ns/op
Iteration  19: 36.584 ns/op
Iteration  20: 36.590 ns/op


Result "benchmark.StringContains.stringContains":
  36.955 Â±(99.9%) 0.152 ns/op [Average]
  (min, avg, max) = (36.516, 36.955, 37.707), stdev = 0.448
  CI (99.9%): [36.803, 37.107] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  IKj<FmDj4K4J%SqbX;J2<nEJB(	sJklrZ\:y=H3e$c&"{WyqYzGeuQNUc+Un?Kp5$FL
	aP	fh&[;noV;9l3
ijCB_
A_g['++Mn(cU3kFN1"&7@u	@_N)@9
A;.!arQd5&4WHv$uB8:J "gM:y%&<-[l/-gJi/YJH_A:^?ss,V
*"m8A'cz:0EQZ>wGuQhttp=y|VdJjqQ*:N@w4E9oIzPcB(m8dzM`#oVf+%3GXM?{UmfhN+Y>Xk1UPO?vB  avgt  100  783.395 Â± 13.145  ns/op
StringContains.stringContains     http  IKj<FmDj4K4J%SqbX;J2<nEJB(	sJklrZ\:y=H3e$c&"{WyqYzGeuQNUc+Un?Kp5$FL
	aP	fh&[;noV;9l3
ijCB_
A_g['++Mn(cU3kFN1"&7@u	@_N)@9
A;.!arQd5&4WHv$uB8:J "gM:y%&<-[l/-gJi/YJH_A:^?ss,V
*"m8A'cz:0EQZ>wGuQhttp=y|VdJjqQ*:N@w4E9oIzPcB(m8dzM`#oVf+%3GXM?{UmfhN+Y>Xk1UPO?vB  avgt  100   36.955 Â±  0.152  ns/op

Benchmark result is saved to http_256_0.75_8.csv
