# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = lf=;}Z[5PktbrYQ\http=:e'l?29E-&)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 353.117 ns/op
# Warmup Iteration   2: 354.582 ns/op
# Warmup Iteration   3: 287.112 ns/op
# Warmup Iteration   4: 279.145 ns/op
# Warmup Iteration   5: 276.513 ns/op
Iteration   1: 279.971 ns/op
Iteration   2: 281.277 ns/op
Iteration   3: 276.351 ns/op
Iteration   4: 282.953 ns/op
Iteration   5: 276.339 ns/op
Iteration   6: 284.002 ns/op
Iteration   7: 275.768 ns/op
Iteration   8: 277.675 ns/op
Iteration   9: 276.603 ns/op
Iteration  10: 277.918 ns/op
Iteration  11: 277.312 ns/op
Iteration  12: 276.267 ns/op
Iteration  13: 279.529 ns/op
Iteration  14: 275.942 ns/op
Iteration  15: 278.263 ns/op
Iteration  16: 275.645 ns/op
Iteration  17: 278.062 ns/op
Iteration  18: 277.844 ns/op
Iteration  19: 276.608 ns/op
Iteration  20: 279.366 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 352.555 ns/op
# Warmup Iteration   2: 361.063 ns/op
# Warmup Iteration   3: 281.465 ns/op
# Warmup Iteration   4: 273.071 ns/op
# Warmup Iteration   5: 270.550 ns/op
Iteration   1: 273.884 ns/op
Iteration   2: 275.196 ns/op
Iteration   3: 270.671 ns/op
Iteration   4: 276.697 ns/op
Iteration   5: 270.714 ns/op
Iteration   6: 278.421 ns/op
Iteration   7: 272.153 ns/op
Iteration   8: 271.058 ns/op
Iteration   9: 272.010 ns/op
Iteration  10: 270.704 ns/op
Iteration  11: 271.832 ns/op
Iteration  12: 270.486 ns/op
Iteration  13: 271.798 ns/op
Iteration  14: 271.721 ns/op
Iteration  15: 270.520 ns/op
Iteration  16: 271.855 ns/op
Iteration  17: 270.380 ns/op
Iteration  18: 271.599 ns/op
Iteration  19: 270.470 ns/op
Iteration  20: 271.446 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 348.318 ns/op
# Warmup Iteration   2: 353.569 ns/op
# Warmup Iteration   3: 278.243 ns/op
# Warmup Iteration   4: 273.239 ns/op
# Warmup Iteration   5: 269.778 ns/op
Iteration   1: 274.003 ns/op
Iteration   2: 275.953 ns/op
Iteration   3: 269.679 ns/op
Iteration   4: 276.465 ns/op
Iteration   5: 269.844 ns/op
Iteration   6: 277.965 ns/op
Iteration   7: 271.265 ns/op
Iteration   8: 269.678 ns/op
Iteration   9: 270.632 ns/op
Iteration  10: 269.440 ns/op
Iteration  11: 270.666 ns/op
Iteration  12: 269.283 ns/op
Iteration  13: 270.711 ns/op
Iteration  14: 271.178 ns/op
Iteration  15: 269.457 ns/op
Iteration  16: 270.852 ns/op
Iteration  17: 269.565 ns/op
Iteration  18: 271.199 ns/op
Iteration  19: 269.610 ns/op
Iteration  20: 270.713 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 349.004 ns/op
# Warmup Iteration   2: 360.812 ns/op
# Warmup Iteration   3: 280.577 ns/op
# Warmup Iteration   4: 273.903 ns/op
# Warmup Iteration   5: 270.931 ns/op
Iteration   1: 274.752 ns/op
Iteration   2: 275.727 ns/op
Iteration   3: 271.109 ns/op
Iteration   4: 277.103 ns/op
Iteration   5: 270.849 ns/op
Iteration   6: 279.303 ns/op
Iteration   7: 273.885 ns/op
Iteration   8: 271.127 ns/op
Iteration   9: 273.923 ns/op
Iteration  10: 271.417 ns/op
Iteration  11: 272.848 ns/op
Iteration  12: 271.184 ns/op
Iteration  13: 272.649 ns/op
Iteration  14: 272.906 ns/op
Iteration  15: 270.859 ns/op
Iteration  16: 272.866 ns/op
Iteration  17: 271.231 ns/op
Iteration  18: 272.598 ns/op
Iteration  19: 271.130 ns/op
Iteration  20: 274.885 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 354.272 ns/op
# Warmup Iteration   2: 360.030 ns/op
# Warmup Iteration   3: 300.147 ns/op
# Warmup Iteration   4: 291.743 ns/op
# Warmup Iteration   5: 289.165 ns/op
Iteration   1: 292.237 ns/op
Iteration   2: 288.708 ns/op
Iteration   3: 293.716 ns/op
Iteration   4: 295.271 ns/op
Iteration   5: 288.786 ns/op
Iteration   6: 297.276 ns/op
Iteration   7: 289.017 ns/op
Iteration   8: 290.604 ns/op
Iteration   9: 288.895 ns/op
Iteration  10: 290.334 ns/op
Iteration  11: 289.545 ns/op
Iteration  12: 291.440 ns/op
Iteration  13: 289.013 ns/op
Iteration  14: 291.646 ns/op
Iteration  15: 288.843 ns/op
Iteration  16: 290.688 ns/op
Iteration  17: 290.521 ns/op
Iteration  18: 288.840 ns/op
Iteration  19: 290.595 ns/op
Iteration  20: 288.912 ns/op


Result "benchmark.StringContains.regexMatches":
  277.127 ±(99.9%) 2.580 ns/op [Average]
  (min, avg, max) = (269.283, 277.127, 297.276), stdev = 7.606
  CI (99.9%): [274.547, 279.707] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = lf=;}Z[5PktbrYQ\http=:e'l?29E-&)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.317 ns/op
# Warmup Iteration   2: 12.426 ns/op
# Warmup Iteration   3: 12.412 ns/op
# Warmup Iteration   4: 12.453 ns/op
# Warmup Iteration   5: 12.415 ns/op
Iteration   1: 12.390 ns/op
Iteration   2: 12.372 ns/op
Iteration   3: 12.454 ns/op
Iteration   4: 12.443 ns/op
Iteration   5: 12.415 ns/op
Iteration   6: 12.405 ns/op
Iteration   7: 12.372 ns/op
Iteration   8: 12.373 ns/op
Iteration   9: 12.413 ns/op
Iteration  10: 12.375 ns/op
Iteration  11: 12.389 ns/op
Iteration  12: 12.908 ns/op
Iteration  13: 12.913 ns/op
Iteration  14: 12.907 ns/op
Iteration  15: 12.908 ns/op
Iteration  16: 12.904 ns/op
Iteration  17: 12.907 ns/op
Iteration  18: 12.915 ns/op
Iteration  19: 12.898 ns/op
Iteration  20: 12.888 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.319 ns/op
# Warmup Iteration   2: 12.484 ns/op
# Warmup Iteration   3: 12.076 ns/op
# Warmup Iteration   4: 12.095 ns/op
# Warmup Iteration   5: 12.072 ns/op
Iteration   1: 12.083 ns/op
Iteration   2: 12.100 ns/op
Iteration   3: 12.077 ns/op
Iteration   4: 12.086 ns/op
Iteration   5: 12.077 ns/op
Iteration   6: 12.107 ns/op
Iteration   7: 12.096 ns/op
Iteration   8: 12.086 ns/op
Iteration   9: 12.090 ns/op
Iteration  10: 12.092 ns/op
Iteration  11: 12.104 ns/op
Iteration  12: 12.840 ns/op
Iteration  13: 12.839 ns/op
Iteration  14: 12.841 ns/op
Iteration  15: 12.839 ns/op
Iteration  16: 12.840 ns/op
Iteration  17: 12.839 ns/op
Iteration  18: 12.839 ns/op
Iteration  19: 12.841 ns/op
Iteration  20: 12.842 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.340 ns/op
# Warmup Iteration   2: 12.522 ns/op
# Warmup Iteration   3: 12.133 ns/op
# Warmup Iteration   4: 12.133 ns/op
# Warmup Iteration   5: 12.134 ns/op
Iteration   1: 12.127 ns/op
Iteration   2: 12.127 ns/op
Iteration   3: 12.133 ns/op
Iteration   4: 12.138 ns/op
Iteration   5: 12.131 ns/op
Iteration   6: 12.120 ns/op
Iteration   7: 12.118 ns/op
Iteration   8: 12.136 ns/op
Iteration   9: 12.132 ns/op
Iteration  10: 12.131 ns/op
Iteration  11: 12.131 ns/op
Iteration  12: 12.840 ns/op
Iteration  13: 12.843 ns/op
Iteration  14: 12.840 ns/op
Iteration  15: 12.841 ns/op
Iteration  16: 12.840 ns/op
Iteration  17: 12.840 ns/op
Iteration  18: 12.841 ns/op
Iteration  19: 12.840 ns/op
Iteration  20: 12.841 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 12.007 ns/op
# Warmup Iteration   2: 12.496 ns/op
# Warmup Iteration   3: 12.119 ns/op
# Warmup Iteration   4: 12.123 ns/op
# Warmup Iteration   5: 12.126 ns/op
Iteration   1: 12.128 ns/op
Iteration   2: 12.137 ns/op
Iteration   3: 12.127 ns/op
Iteration   4: 12.119 ns/op
Iteration   5: 12.132 ns/op
Iteration   6: 12.121 ns/op
Iteration   7: 12.121 ns/op
Iteration   8: 12.130 ns/op
Iteration   9: 12.126 ns/op
Iteration  10: 12.116 ns/op
Iteration  11: 12.152 ns/op
Iteration  12: 12.143 ns/op
Iteration  13: 12.130 ns/op
Iteration  14: 12.144 ns/op
Iteration  15: 12.149 ns/op
Iteration  16: 12.129 ns/op
Iteration  17: 12.126 ns/op
Iteration  18: 12.142 ns/op
Iteration  19: 12.144 ns/op
Iteration  20: 12.138 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.341 ns/op
# Warmup Iteration   2: 12.563 ns/op
# Warmup Iteration   3: 12.256 ns/op
# Warmup Iteration   4: 12.267 ns/op
# Warmup Iteration   5: 12.259 ns/op
Iteration   1: 12.260 ns/op
Iteration   2: 12.262 ns/op
Iteration   3: 12.259 ns/op
Iteration   4: 12.267 ns/op
Iteration   5: 12.266 ns/op
Iteration   6: 12.271 ns/op
Iteration   7: 12.266 ns/op
Iteration   8: 12.260 ns/op
Iteration   9: 12.258 ns/op
Iteration  10: 12.263 ns/op
Iteration  11: 12.260 ns/op
Iteration  12: 12.846 ns/op
Iteration  13: 12.854 ns/op
Iteration  14: 12.846 ns/op
Iteration  15: 12.845 ns/op
Iteration  16: 12.846 ns/op
Iteration  17: 12.849 ns/op
Iteration  18: 12.847 ns/op
Iteration  19: 12.846 ns/op
Iteration  20: 12.863 ns/op


Result "benchmark.StringContains.stringContains":
  12.433 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (12.077, 12.433, 12.915), stdev = 0.333
  CI (99.9%): [12.320, 12.546] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  lf=;}Z[5PktbrYQ\http=:e'l?29E-&  avgt  100  277.127 ± 2.580  ns/op
StringContains.stringContains     http  lf=;}Z[5PktbrYQ\http=:e'l?29E-&  avgt  100   12.433 ± 0.113  ns/op

Benchmark result is saved to http_32_0.5_13.csv
