# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = o4http!m)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 252.464 ns/op
# Warmup Iteration   2: 192.116 ns/op
# Warmup Iteration   3: 172.780 ns/op
# Warmup Iteration   4: 173.238 ns/op
# Warmup Iteration   5: 173.704 ns/op
Iteration   1: 174.514 ns/op
Iteration   2: 175.560 ns/op
Iteration   3: 171.785 ns/op
Iteration   4: 171.438 ns/op
Iteration   5: 171.321 ns/op
Iteration   6: 171.386 ns/op
Iteration   7: 170.586 ns/op
Iteration   8: 171.402 ns/op
Iteration   9: 171.303 ns/op
Iteration  10: 171.472 ns/op
Iteration  11: 171.404 ns/op
Iteration  12: 171.658 ns/op
Iteration  13: 171.265 ns/op
Iteration  14: 171.165 ns/op
Iteration  15: 171.346 ns/op
Iteration  16: 170.936 ns/op
Iteration  17: 170.997 ns/op
Iteration  18: 170.576 ns/op
Iteration  19: 171.181 ns/op
Iteration  20: 171.093 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 243.053 ns/op
# Warmup Iteration   2: 179.158 ns/op
# Warmup Iteration   3: 150.856 ns/op
# Warmup Iteration   4: 151.711 ns/op
# Warmup Iteration   5: 154.932 ns/op
Iteration   1: 153.876 ns/op
Iteration   2: 150.532 ns/op
Iteration   3: 150.073 ns/op
Iteration   4: 150.305 ns/op
Iteration   5: 151.553 ns/op
Iteration   6: 150.101 ns/op
Iteration   7: 150.011 ns/op
Iteration   8: 150.101 ns/op
Iteration   9: 150.042 ns/op
Iteration  10: 150.106 ns/op
Iteration  11: 149.663 ns/op
Iteration  12: 149.963 ns/op
Iteration  13: 149.959 ns/op
Iteration  14: 149.686 ns/op
Iteration  15: 149.740 ns/op
Iteration  16: 149.732 ns/op
Iteration  17: 149.740 ns/op
Iteration  18: 149.652 ns/op
Iteration  19: 149.691 ns/op
Iteration  20: 149.739 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 241.101 ns/op
# Warmup Iteration   2: 180.732 ns/op
# Warmup Iteration   3: 164.689 ns/op
# Warmup Iteration   4: 165.077 ns/op
# Warmup Iteration   5: 165.821 ns/op
Iteration   1: 166.647 ns/op
Iteration   2: 167.935 ns/op
Iteration   3: 164.157 ns/op
Iteration   4: 164.547 ns/op
Iteration   5: 164.525 ns/op
Iteration   6: 163.598 ns/op
Iteration   7: 163.628 ns/op
Iteration   8: 163.775 ns/op
Iteration   9: 163.641 ns/op
Iteration  10: 163.913 ns/op
Iteration  11: 163.911 ns/op
Iteration  12: 163.444 ns/op
Iteration  13: 163.482 ns/op
Iteration  14: 163.372 ns/op
Iteration  15: 163.416 ns/op
Iteration  16: 163.096 ns/op
Iteration  17: 163.476 ns/op
Iteration  18: 163.522 ns/op
Iteration  19: 163.569 ns/op
Iteration  20: 163.611 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 237.320 ns/op
# Warmup Iteration   2: 175.559 ns/op
# Warmup Iteration   3: 149.556 ns/op
# Warmup Iteration   4: 151.372 ns/op
# Warmup Iteration   5: 152.156 ns/op
Iteration   1: 152.014 ns/op
Iteration   2: 148.469 ns/op
Iteration   3: 148.711 ns/op
Iteration   4: 148.399 ns/op
Iteration   5: 148.323 ns/op
Iteration   6: 148.480 ns/op
Iteration   7: 148.544 ns/op
Iteration   8: 148.526 ns/op
Iteration   9: 148.419 ns/op
Iteration  10: 148.384 ns/op
Iteration  11: 148.024 ns/op
Iteration  12: 148.072 ns/op
Iteration  13: 148.066 ns/op
Iteration  14: 148.046 ns/op
Iteration  15: 148.117 ns/op
Iteration  16: 148.086 ns/op
Iteration  17: 148.138 ns/op
Iteration  18: 148.237 ns/op
Iteration  19: 148.442 ns/op
Iteration  20: 148.303 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 239.550 ns/op
# Warmup Iteration   2: 178.517 ns/op
# Warmup Iteration   3: 152.011 ns/op
# Warmup Iteration   4: 152.482 ns/op
# Warmup Iteration   5: 155.708 ns/op
Iteration   1: 155.887 ns/op
Iteration   2: 151.233 ns/op
Iteration   3: 151.038 ns/op
Iteration   4: 151.077 ns/op
Iteration   5: 151.062 ns/op
Iteration   6: 151.091 ns/op
Iteration   7: 150.889 ns/op
Iteration   8: 151.083 ns/op
Iteration   9: 151.096 ns/op
Iteration  10: 151.192 ns/op
Iteration  11: 151.600 ns/op
Iteration  12: 150.752 ns/op
Iteration  13: 150.805 ns/op
Iteration  14: 150.664 ns/op
Iteration  15: 150.659 ns/op
Iteration  16: 150.696 ns/op
Iteration  17: 150.792 ns/op
Iteration  18: 150.657 ns/op
Iteration  19: 150.632 ns/op
Iteration  20: 150.744 ns/op


Result "benchmark.StringContains.regexMatches":
  157.114 ±(99.9%) 3.129 ns/op [Average]
  (min, avg, max) = (148.024, 157.114, 175.560), stdev = 9.227
  CI (99.9%): [153.984, 160.243] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = o4http!m)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.063 ns/op
# Warmup Iteration   2: 10.458 ns/op
# Warmup Iteration   3: 9.992 ns/op
# Warmup Iteration   4: 10.019 ns/op
# Warmup Iteration   5: 10.017 ns/op
Iteration   1: 10.039 ns/op
Iteration   2: 10.021 ns/op
Iteration   3: 9.999 ns/op
Iteration   4: 10.024 ns/op
Iteration   5: 10.000 ns/op
Iteration   6: 10.032 ns/op
Iteration   7: 10.042 ns/op
Iteration   8: 10.016 ns/op
Iteration   9: 10.014 ns/op
Iteration  10: 10.038 ns/op
Iteration  11: 10.024 ns/op
Iteration  12: 10.041 ns/op
Iteration  13: 10.033 ns/op
Iteration  14: 10.044 ns/op
Iteration  15: 10.060 ns/op
Iteration  16: 10.034 ns/op
Iteration  17: 10.026 ns/op
Iteration  18: 10.035 ns/op
Iteration  19: 10.032 ns/op
Iteration  20: 10.038 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.069 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.881 ns/op
# Warmup Iteration   4: 9.868 ns/op
# Warmup Iteration   5: 9.880 ns/op
Iteration   1: 9.882 ns/op
Iteration   2: 9.882 ns/op
Iteration   3: 9.883 ns/op
Iteration   4: 9.899 ns/op
Iteration   5: 9.892 ns/op
Iteration   6: 9.872 ns/op
Iteration   7: 9.886 ns/op
Iteration   8: 9.899 ns/op
Iteration   9: 9.893 ns/op
Iteration  10: 9.899 ns/op
Iteration  11: 9.903 ns/op
Iteration  12: 9.893 ns/op
Iteration  13: 9.896 ns/op
Iteration  14: 9.903 ns/op
Iteration  15: 9.888 ns/op
Iteration  16: 9.864 ns/op
Iteration  17: 9.897 ns/op
Iteration  18: 9.884 ns/op
Iteration  19: 9.878 ns/op
Iteration  20: 9.877 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.085 ns/op
# Warmup Iteration   2: 10.473 ns/op
# Warmup Iteration   3: 9.879 ns/op
# Warmup Iteration   4: 9.910 ns/op
# Warmup Iteration   5: 9.879 ns/op
Iteration   1: 9.911 ns/op
Iteration   2: 9.905 ns/op
Iteration   3: 9.909 ns/op
Iteration   4: 9.939 ns/op
Iteration   5: 9.901 ns/op
Iteration   6: 9.896 ns/op
Iteration   7: 9.908 ns/op
Iteration   8: 9.917 ns/op
Iteration   9: 9.861 ns/op
Iteration  10: 9.862 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.878 ns/op
Iteration  13: 9.882 ns/op
Iteration  14: 9.873 ns/op
Iteration  15: 9.876 ns/op
Iteration  16: 9.890 ns/op
Iteration  17: 9.896 ns/op
Iteration  18: 9.894 ns/op
Iteration  19: 9.880 ns/op
Iteration  20: 9.895 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.201 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 10.030 ns/op
# Warmup Iteration   4: 10.032 ns/op
# Warmup Iteration   5: 10.036 ns/op
Iteration   1: 10.031 ns/op
Iteration   2: 10.028 ns/op
Iteration   3: 10.034 ns/op
Iteration   4: 10.040 ns/op
Iteration   5: 10.034 ns/op
Iteration   6: 10.031 ns/op
Iteration   7: 10.032 ns/op
Iteration   8: 10.032 ns/op
Iteration   9: 10.036 ns/op
Iteration  10: 10.043 ns/op
Iteration  11: 10.051 ns/op
Iteration  12: 10.037 ns/op
Iteration  13: 10.037 ns/op
Iteration  14: 10.038 ns/op
Iteration  15: 10.039 ns/op
Iteration  16: 10.028 ns/op
Iteration  17: 10.034 ns/op
Iteration  18: 10.037 ns/op
Iteration  19: 10.040 ns/op
Iteration  20: 10.032 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.071 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 10.035 ns/op
# Warmup Iteration   4: 10.029 ns/op
# Warmup Iteration   5: 10.024 ns/op
Iteration   1: 10.018 ns/op
Iteration   2: 10.025 ns/op
Iteration   3: 10.033 ns/op
Iteration   4: 10.020 ns/op
Iteration   5: 10.028 ns/op
Iteration   6: 10.019 ns/op
Iteration   7: 10.026 ns/op
Iteration   8: 10.037 ns/op
Iteration   9: 10.031 ns/op
Iteration  10: 10.034 ns/op
Iteration  11: 10.034 ns/op
Iteration  12: 10.037 ns/op
Iteration  13: 10.038 ns/op
Iteration  14: 10.034 ns/op
Iteration  15: 10.031 ns/op
Iteration  16: 10.031 ns/op
Iteration  17: 10.034 ns/op
Iteration  18: 10.033 ns/op
Iteration  19: 10.032 ns/op
Iteration  20: 10.040 ns/op


Result "benchmark.StringContains.stringContains":
  9.975 ±(99.9%) 0.024 ns/op [Average]
  (min, avg, max) = (9.861, 9.975, 10.060), stdev = 0.071
  CI (99.9%): [9.951, 9.999] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  o4http!m  avgt  100  157.114 ± 3.129  ns/op
StringContains.stringContains     http  o4http!m  avgt  100    9.975 ± 0.024  ns/op

Benchmark result is saved to http_8_0.25_3.csv
