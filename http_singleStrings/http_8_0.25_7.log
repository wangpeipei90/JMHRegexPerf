# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = qYhttpPj)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 243.009 ns/op
# Warmup Iteration   2: 180.378 ns/op
# Warmup Iteration   3: 150.954 ns/op
# Warmup Iteration   4: 151.230 ns/op
# Warmup Iteration   5: 154.552 ns/op
Iteration   1: 153.096 ns/op
Iteration   2: 149.339 ns/op
Iteration   3: 150.000 ns/op
Iteration   4: 150.820 ns/op
Iteration   5: 148.969 ns/op
Iteration   6: 150.045 ns/op
Iteration   7: 151.023 ns/op
Iteration   8: 149.187 ns/op
Iteration   9: 150.144 ns/op
Iteration  10: 149.065 ns/op
Iteration  11: 148.724 ns/op
Iteration  12: 148.839 ns/op
Iteration  13: 148.796 ns/op
Iteration  14: 148.937 ns/op
Iteration  15: 148.958 ns/op
Iteration  16: 149.023 ns/op
Iteration  17: 148.888 ns/op
Iteration  18: 149.046 ns/op
Iteration  19: 149.049 ns/op
Iteration  20: 149.715 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 234.677 ns/op
# Warmup Iteration   2: 173.293 ns/op
# Warmup Iteration   3: 157.699 ns/op
# Warmup Iteration   4: 157.243 ns/op
# Warmup Iteration   5: 158.004 ns/op
Iteration   1: 158.672 ns/op
Iteration   2: 159.627 ns/op
Iteration   3: 155.992 ns/op
Iteration   4: 155.847 ns/op
Iteration   5: 155.882 ns/op
Iteration   6: 155.909 ns/op
Iteration   7: 155.879 ns/op
Iteration   8: 155.935 ns/op
Iteration   9: 155.919 ns/op
Iteration  10: 155.888 ns/op
Iteration  11: 155.905 ns/op
Iteration  12: 155.480 ns/op
Iteration  13: 155.478 ns/op
Iteration  14: 155.541 ns/op
Iteration  15: 155.516 ns/op
Iteration  16: 155.661 ns/op
Iteration  17: 155.717 ns/op
Iteration  18: 155.726 ns/op
Iteration  19: 155.581 ns/op
Iteration  20: 155.656 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 235.663 ns/op
# Warmup Iteration   2: 177.078 ns/op
# Warmup Iteration   3: 153.364 ns/op
# Warmup Iteration   4: 152.499 ns/op
# Warmup Iteration   5: 156.165 ns/op
Iteration   1: 154.627 ns/op
Iteration   2: 151.270 ns/op
Iteration   3: 151.378 ns/op
Iteration   4: 150.808 ns/op
Iteration   5: 150.982 ns/op
Iteration   6: 150.675 ns/op
Iteration   7: 150.910 ns/op
Iteration   8: 150.773 ns/op
Iteration   9: 150.946 ns/op
Iteration  10: 150.883 ns/op
Iteration  11: 150.287 ns/op
Iteration  12: 150.251 ns/op
Iteration  13: 150.161 ns/op
Iteration  14: 150.230 ns/op
Iteration  15: 150.147 ns/op
Iteration  16: 150.310 ns/op
Iteration  17: 150.319 ns/op
Iteration  18: 150.238 ns/op
Iteration  19: 150.455 ns/op
Iteration  20: 150.262 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 247.197 ns/op
# Warmup Iteration   2: 187.726 ns/op
# Warmup Iteration   3: 171.800 ns/op
# Warmup Iteration   4: 172.159 ns/op
# Warmup Iteration   5: 172.706 ns/op
Iteration   1: 173.529 ns/op
Iteration   2: 174.409 ns/op
Iteration   3: 170.481 ns/op
Iteration   4: 171.282 ns/op
Iteration   5: 171.056 ns/op
Iteration   6: 170.406 ns/op
Iteration   7: 169.687 ns/op
Iteration   8: 172.185 ns/op
Iteration   9: 173.361 ns/op
Iteration  10: 172.055 ns/op
Iteration  11: 170.774 ns/op
Iteration  12: 171.215 ns/op
Iteration  13: 170.265 ns/op
Iteration  14: 170.260 ns/op
Iteration  15: 170.219 ns/op
Iteration  16: 170.581 ns/op
Iteration  17: 170.346 ns/op
Iteration  18: 169.817 ns/op
Iteration  19: 170.379 ns/op
Iteration  20: 170.238 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 246.741 ns/op
# Warmup Iteration   2: 188.997 ns/op
# Warmup Iteration   3: 172.451 ns/op
# Warmup Iteration   4: 172.893 ns/op
# Warmup Iteration   5: 173.620 ns/op
Iteration   1: 174.495 ns/op
Iteration   2: 175.620 ns/op
Iteration   3: 171.636 ns/op
Iteration   4: 171.752 ns/op
Iteration   5: 171.390 ns/op
Iteration   6: 171.383 ns/op
Iteration   7: 170.674 ns/op
Iteration   8: 171.390 ns/op
Iteration   9: 171.757 ns/op
Iteration  10: 171.559 ns/op
Iteration  11: 171.377 ns/op
Iteration  12: 172.168 ns/op
Iteration  13: 170.928 ns/op
Iteration  14: 170.813 ns/op
Iteration  15: 170.971 ns/op
Iteration  16: 170.791 ns/op
Iteration  17: 171.097 ns/op
Iteration  18: 170.452 ns/op
Iteration  19: 171.361 ns/op
Iteration  20: 171.381 ns/op


Result "benchmark.StringContains.regexMatches":
  159.849 ±(99.9%) 3.319 ns/op [Average]
  (min, avg, max) = (148.724, 159.849, 175.620), stdev = 9.787
  CI (99.9%): [156.530, 163.169] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = qYhttpPj)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.070 ns/op
# Warmup Iteration   2: 10.453 ns/op
# Warmup Iteration   3: 9.914 ns/op
# Warmup Iteration   4: 9.909 ns/op
# Warmup Iteration   5: 9.913 ns/op
Iteration   1: 9.924 ns/op
Iteration   2: 9.912 ns/op
Iteration   3: 9.901 ns/op
Iteration   4: 9.905 ns/op
Iteration   5: 9.903 ns/op
Iteration   6: 9.909 ns/op
Iteration   7: 9.909 ns/op
Iteration   8: 9.923 ns/op
Iteration   9: 9.904 ns/op
Iteration  10: 9.911 ns/op
Iteration  11: 9.911 ns/op
Iteration  12: 9.904 ns/op
Iteration  13: 9.893 ns/op
Iteration  14: 9.899 ns/op
Iteration  15: 9.889 ns/op
Iteration  16: 9.907 ns/op
Iteration  17: 9.907 ns/op
Iteration  18: 9.909 ns/op
Iteration  19: 9.907 ns/op
Iteration  20: 9.898 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.196 ns/op
# Warmup Iteration   2: 10.502 ns/op
# Warmup Iteration   3: 9.893 ns/op
# Warmup Iteration   4: 9.886 ns/op
# Warmup Iteration   5: 9.886 ns/op
Iteration   1: 9.915 ns/op
Iteration   2: 9.887 ns/op
Iteration   3: 9.890 ns/op
Iteration   4: 9.878 ns/op
Iteration   5: 9.887 ns/op
Iteration   6: 9.885 ns/op
Iteration   7: 9.901 ns/op
Iteration   8: 9.900 ns/op
Iteration   9: 9.883 ns/op
Iteration  10: 9.887 ns/op
Iteration  11: 9.889 ns/op
Iteration  12: 9.903 ns/op
Iteration  13: 9.898 ns/op
Iteration  14: 9.896 ns/op
Iteration  15: 9.889 ns/op
Iteration  16: 9.874 ns/op
Iteration  17: 9.877 ns/op
Iteration  18: 9.896 ns/op
Iteration  19: 9.882 ns/op
Iteration  20: 9.888 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.102 ns/op
# Warmup Iteration   2: 10.475 ns/op
# Warmup Iteration   3: 9.903 ns/op
# Warmup Iteration   4: 9.912 ns/op
# Warmup Iteration   5: 9.902 ns/op
Iteration   1: 9.890 ns/op
Iteration   2: 9.900 ns/op
Iteration   3: 9.909 ns/op
Iteration   4: 9.904 ns/op
Iteration   5: 9.899 ns/op
Iteration   6: 9.904 ns/op
Iteration   7: 9.897 ns/op
Iteration   8: 9.918 ns/op
Iteration   9: 9.899 ns/op
Iteration  10: 9.888 ns/op
Iteration  11: 9.897 ns/op
Iteration  12: 9.894 ns/op
Iteration  13: 9.898 ns/op
Iteration  14: 9.889 ns/op
Iteration  15: 9.911 ns/op
Iteration  16: 9.905 ns/op
Iteration  17: 9.903 ns/op
Iteration  18: 9.876 ns/op
Iteration  19: 9.892 ns/op
Iteration  20: 9.901 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.074 ns/op
# Warmup Iteration   2: 10.457 ns/op
# Warmup Iteration   3: 9.895 ns/op
# Warmup Iteration   4: 9.902 ns/op
# Warmup Iteration   5: 9.893 ns/op
Iteration   1: 9.888 ns/op
Iteration   2: 9.893 ns/op
Iteration   3: 9.891 ns/op
Iteration   4: 9.880 ns/op
Iteration   5: 9.894 ns/op
Iteration   6: 9.884 ns/op
Iteration   7: 9.875 ns/op
Iteration   8: 9.914 ns/op
Iteration   9: 9.900 ns/op
Iteration  10: 9.881 ns/op
Iteration  11: 9.884 ns/op
Iteration  12: 9.882 ns/op
Iteration  13: 9.884 ns/op
Iteration  14: 9.899 ns/op
Iteration  15: 9.884 ns/op
Iteration  16: 9.895 ns/op
Iteration  17: 9.874 ns/op
Iteration  18: 9.908 ns/op
Iteration  19: 9.896 ns/op
Iteration  20: 9.898 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.199 ns/op
# Warmup Iteration   2: 10.456 ns/op
# Warmup Iteration   3: 9.871 ns/op
# Warmup Iteration   4: 9.847 ns/op
# Warmup Iteration   5: 9.879 ns/op
Iteration   1: 9.856 ns/op
Iteration   2: 9.867 ns/op
Iteration   3: 9.866 ns/op
Iteration   4: 9.873 ns/op
Iteration   5: 9.859 ns/op
Iteration   6: 9.864 ns/op
Iteration   7: 9.853 ns/op
Iteration   8: 9.863 ns/op
Iteration   9: 9.873 ns/op
Iteration  10: 9.869 ns/op
Iteration  11: 9.900 ns/op
Iteration  12: 9.874 ns/op
Iteration  13: 9.862 ns/op
Iteration  14: 9.863 ns/op
Iteration  15: 9.852 ns/op
Iteration  16: 9.857 ns/op
Iteration  17: 9.862 ns/op
Iteration  18: 9.849 ns/op
Iteration  19: 9.869 ns/op
Iteration  20: 9.876 ns/op


Result "benchmark.StringContains.stringContains":
  9.890 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (9.849, 9.890, 9.924), stdev = 0.017
  CI (99.9%): [9.884, 9.896] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  qYhttpPj  avgt  100  159.849 ± 3.319  ns/op
StringContains.stringContains     http  qYhttpPj  avgt  100    9.890 ± 0.006  ns/op

Benchmark result is saved to http_8_0.25_7.csv
