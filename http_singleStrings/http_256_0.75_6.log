# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = jIe[`.D"p6C$P.kBld")@&`2mx;GcZZo'mcjvVe}6_$sMNuQ}J) h)v"\	rG=j}Cde!9,hCt+Q,c+*u=.i3q[^
U<!!J9D3P/[mL',9
8webjD@8c%DA
iO-	r@)b!MsUs(cXCz +4\^dX:/r|PpkaC4d5_AxLvic4h_HzVk7bs'5EE$
t;Lfx/n4bhttpn*&s7w]^FZr_d/v$_b?~s{)e 09^#h	y8[ <AGvZ[j%^U#MBs1_jCz!oY1iJ)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 865.872 ns/op
# Warmup Iteration   2: 851.712 ns/op
# Warmup Iteration   3: 942.971 ns/op
# Warmup Iteration   4: 940.950 ns/op
# Warmup Iteration   5: 940.148 ns/op
Iteration   1: 901.074 ns/op
Iteration   2: 861.612 ns/op
Iteration   3: 860.934 ns/op
Iteration   4: 861.018 ns/op
Iteration   5: 861.753 ns/op
Iteration   6: 870.231 ns/op
Iteration   7: 863.328 ns/op
Iteration   8: 863.277 ns/op
Iteration   9: 862.990 ns/op
Iteration  10: 863.127 ns/op
Iteration  11: 871.606 ns/op
Iteration  12: 858.311 ns/op
Iteration  13: 858.959 ns/op
Iteration  14: 858.124 ns/op
Iteration  15: 858.263 ns/op
Iteration  16: 874.816 ns/op
Iteration  17: 859.127 ns/op
Iteration  18: 857.831 ns/op
Iteration  19: 858.635 ns/op
Iteration  20: 858.879 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 869.616 ns/op
# Warmup Iteration   2: 882.602 ns/op
# Warmup Iteration   3: 881.444 ns/op
# Warmup Iteration   4: 881.205 ns/op
# Warmup Iteration   5: 881.137 ns/op
Iteration   1: 835.445 ns/op
Iteration   2: 805.928 ns/op
Iteration   3: 805.746 ns/op
Iteration   4: 805.503 ns/op
Iteration   5: 813.804 ns/op
Iteration   6: 805.935 ns/op
Iteration   7: 805.636 ns/op
Iteration   8: 805.490 ns/op
Iteration   9: 805.373 ns/op
Iteration  10: 815.150 ns/op
Iteration  11: 805.088 ns/op
Iteration  12: 805.025 ns/op
Iteration  13: 805.138 ns/op
Iteration  14: 805.529 ns/op
Iteration  15: 818.429 ns/op
Iteration  16: 805.453 ns/op
Iteration  17: 805.325 ns/op
Iteration  18: 805.456 ns/op
Iteration  19: 812.495 ns/op
Iteration  20: 816.449 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 859.150 ns/op
# Warmup Iteration   2: 881.046 ns/op
# Warmup Iteration   3: 882.428 ns/op
# Warmup Iteration   4: 881.889 ns/op
# Warmup Iteration   5: 881.464 ns/op
Iteration   1: 834.502 ns/op
Iteration   2: 811.359 ns/op
Iteration   3: 809.925 ns/op
Iteration   4: 809.801 ns/op
Iteration   5: 817.230 ns/op
Iteration   6: 809.671 ns/op
Iteration   7: 809.220 ns/op
Iteration   8: 809.414 ns/op
Iteration   9: 809.512 ns/op
Iteration  10: 819.550 ns/op
Iteration  11: 808.026 ns/op
Iteration  12: 809.925 ns/op
Iteration  13: 809.782 ns/op
Iteration  14: 809.312 ns/op
Iteration  15: 823.307 ns/op
Iteration  16: 809.009 ns/op
Iteration  17: 808.914 ns/op
Iteration  18: 809.802 ns/op
Iteration  19: 812.758 ns/op
Iteration  20: 823.597 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 875.578 ns/op
# Warmup Iteration   2: 884.702 ns/op
# Warmup Iteration   3: 887.214 ns/op
# Warmup Iteration   4: 887.193 ns/op
# Warmup Iteration   5: 887.152 ns/op
Iteration   1: 842.924 ns/op
Iteration   2: 814.411 ns/op
Iteration   3: 813.701 ns/op
Iteration   4: 814.204 ns/op
Iteration   5: 822.385 ns/op
Iteration   6: 814.383 ns/op
Iteration   7: 814.540 ns/op
Iteration   8: 814.598 ns/op
Iteration   9: 813.948 ns/op
Iteration  10: 824.202 ns/op
Iteration  11: 814.477 ns/op
Iteration  12: 822.453 ns/op
Iteration  13: 823.140 ns/op
Iteration  14: 823.502 ns/op
Iteration  15: 833.684 ns/op
Iteration  16: 817.319 ns/op
Iteration  17: 818.216 ns/op
Iteration  18: 818.026 ns/op
Iteration  19: 817.784 ns/op
Iteration  20: 836.599 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 872.905 ns/op
# Warmup Iteration   2: 882.286 ns/op
# Warmup Iteration   3: 887.399 ns/op
# Warmup Iteration   4: 886.921 ns/op
# Warmup Iteration   5: 886.906 ns/op
Iteration   1: 842.498 ns/op
Iteration   2: 815.190 ns/op
Iteration   3: 814.096 ns/op
Iteration   4: 815.010 ns/op
Iteration   5: 821.921 ns/op
Iteration   6: 815.732 ns/op
Iteration   7: 815.570 ns/op
Iteration   8: 815.203 ns/op
Iteration   9: 814.625 ns/op
Iteration  10: 827.212 ns/op
Iteration  11: 817.186 ns/op
Iteration  12: 817.626 ns/op
Iteration  13: 818.691 ns/op
Iteration  14: 819.451 ns/op
Iteration  15: 831.160 ns/op
Iteration  16: 817.913 ns/op
Iteration  17: 817.888 ns/op
Iteration  18: 816.958 ns/op
Iteration  19: 819.074 ns/op
Iteration  20: 835.317 ns/op


Result "benchmark.StringContains.regexMatches":
  825.597 Â±(99.9%) 7.263 ns/op [Average]
  (min, avg, max) = (805.025, 825.597, 901.074), stdev = 21.414
  CI (99.9%): [818.335, 832.860] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = jIe[`.D"p6C$P.kBld")@&`2mx;GcZZo'mcjvVe}6_$sMNuQ}J) h)v"\	rG=j}Cde!9,hCt+Q,c+*u=.i3q[^
U<!!J9D3P/[mL',9
8webjD@8c%DA
iO-	r@)b!MsUs(cXCz +4\^dX:/r|PpkaC4d5_AxLvic4h_HzVk7bs'5EE$
t;Lfx/n4bhttpn*&s7w]^FZr_d/v$_b?~s{)e 09^#h	y8[ <AGvZ[j%^U#MBs1_jCz!oY1iJ)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 36.345 ns/op
# Warmup Iteration   2: 37.459 ns/op
# Warmup Iteration   3: 37.701 ns/op
# Warmup Iteration   4: 37.697 ns/op
# Warmup Iteration   5: 37.695 ns/op
Iteration   1: 37.692 ns/op
Iteration   2: 37.711 ns/op
Iteration   3: 37.670 ns/op
Iteration   4: 37.698 ns/op
Iteration   5: 37.713 ns/op
Iteration   6: 37.734 ns/op
Iteration   7: 37.722 ns/op
Iteration   8: 37.755 ns/op
Iteration   9: 37.715 ns/op
Iteration  10: 37.684 ns/op
Iteration  11: 37.708 ns/op
Iteration  12: 37.677 ns/op
Iteration  13: 37.666 ns/op
Iteration  14: 37.708 ns/op
Iteration  15: 37.686 ns/op
Iteration  16: 37.745 ns/op
Iteration  17: 37.725 ns/op
Iteration  18: 37.705 ns/op
Iteration  19: 37.694 ns/op
Iteration  20: 37.740 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 45.948 ns/op
# Warmup Iteration   2: 37.422 ns/op
# Warmup Iteration   3: 36.594 ns/op
# Warmup Iteration   4: 36.548 ns/op
# Warmup Iteration   5: 36.549 ns/op
Iteration   1: 36.558 ns/op
Iteration   2: 36.543 ns/op
Iteration   3: 36.589 ns/op
Iteration   4: 36.546 ns/op
Iteration   5: 36.559 ns/op
Iteration   6: 36.564 ns/op
Iteration   7: 36.685 ns/op
Iteration   8: 36.550 ns/op
Iteration   9: 36.677 ns/op
Iteration  10: 36.568 ns/op
Iteration  11: 36.625 ns/op
Iteration  12: 36.593 ns/op
Iteration  13: 36.635 ns/op
Iteration  14: 36.548 ns/op
Iteration  15: 36.530 ns/op
Iteration  16: 36.555 ns/op
Iteration  17: 36.647 ns/op
Iteration  18: 36.626 ns/op
Iteration  19: 36.633 ns/op
Iteration  20: 36.569 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 36.406 ns/op
# Warmup Iteration   2: 37.401 ns/op
# Warmup Iteration   3: 36.718 ns/op
# Warmup Iteration   4: 36.650 ns/op
# Warmup Iteration   5: 36.661 ns/op
Iteration   1: 36.639 ns/op
Iteration   2: 36.641 ns/op
Iteration   3: 36.658 ns/op
Iteration   4: 36.640 ns/op
Iteration   5: 36.723 ns/op
Iteration   6: 36.688 ns/op
Iteration   7: 36.680 ns/op
Iteration   8: 36.654 ns/op
Iteration   9: 36.696 ns/op
Iteration  10: 36.677 ns/op
Iteration  11: 36.810 ns/op
Iteration  12: 36.649 ns/op
Iteration  13: 36.657 ns/op
Iteration  14: 36.688 ns/op
Iteration  15: 36.586 ns/op
Iteration  16: 36.613 ns/op
Iteration  17: 36.596 ns/op
Iteration  18: 36.634 ns/op
Iteration  19: 36.610 ns/op
Iteration  20: 36.609 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 36.368 ns/op
# Warmup Iteration   2: 37.416 ns/op
# Warmup Iteration   3: 36.644 ns/op
# Warmup Iteration   4: 36.560 ns/op
# Warmup Iteration   5: 36.689 ns/op
Iteration   1: 36.634 ns/op
Iteration   2: 36.573 ns/op
Iteration   3: 36.641 ns/op
Iteration   4: 36.563 ns/op
Iteration   5: 36.682 ns/op
Iteration   6: 36.662 ns/op
Iteration   7: 36.669 ns/op
Iteration   8: 36.592 ns/op
Iteration   9: 36.655 ns/op
Iteration  10: 36.610 ns/op
Iteration  11: 36.614 ns/op
Iteration  12: 36.619 ns/op
Iteration  13: 36.578 ns/op
Iteration  14: 36.598 ns/op
Iteration  15: 36.584 ns/op
Iteration  16: 36.600 ns/op
Iteration  17: 36.558 ns/op
Iteration  18: 36.582 ns/op
Iteration  19: 36.605 ns/op
Iteration  20: 36.624 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 36.369 ns/op
# Warmup Iteration   2: 37.441 ns/op
# Warmup Iteration   3: 36.744 ns/op
# Warmup Iteration   4: 36.675 ns/op
# Warmup Iteration   5: 36.677 ns/op
Iteration   1: 36.617 ns/op
Iteration   2: 36.586 ns/op
Iteration   3: 36.630 ns/op
Iteration   4: 36.654 ns/op
Iteration   5: 36.630 ns/op
Iteration   6: 36.614 ns/op
Iteration   7: 36.597 ns/op
Iteration   8: 36.585 ns/op
Iteration   9: 36.596 ns/op
Iteration  10: 36.565 ns/op
Iteration  11: 36.558 ns/op
Iteration  12: 36.563 ns/op
Iteration  13: 36.553 ns/op
Iteration  14: 36.557 ns/op
Iteration  15: 36.578 ns/op
Iteration  16: 36.597 ns/op
Iteration  17: 36.589 ns/op
Iteration  18: 36.588 ns/op
Iteration  19: 36.546 ns/op
Iteration  20: 36.635 ns/op


Result "benchmark.StringContains.stringContains":
  36.832 Â±(99.9%) 0.150 ns/op [Average]
  (min, avg, max) = (36.530, 36.832, 37.755), stdev = 0.442
  CI (99.9%): [36.682, 36.982] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  jIe[`.D"p6C$P.kBld")@&`2mx;GcZZo'mcjvVe}6_$sMNuQ}J) h)v"\	rG=j}Cde!9,hCt+Q,c+*u=.i3q[^
U<!!J9D3P/[mL',9
8webjD@8c%DA
iO-	r@)b!MsUs(cXCz +4\^dX:/r|PpkaC4d5_AxLvic4h_HzVk7bs'5EE$
t;Lfx/n4bhttpn*&s7w]^FZr_d/v$_b?~s{)e 09^#h	y8[ <AGvZ[j%^U#MBs1_jCz!oY1iJ  avgt  100  825.597 Â± 7.263  ns/op
StringContains.stringContains     http  jIe[`.D"p6C$P.kBld")@&`2mx;GcZZo'mcjvVe}6_$sMNuQ}J) h)v"\	rG=j}Cde!9,hCt+Q,c+*u=.i3q[^
U<!!J9D3P/[mL',9
8webjD@8c%DA
iO-	r@)b!MsUs(cXCz +4\^dX:/r|PpkaC4d5_AxLvic4h_HzVk7bs'5EE$
t;Lfx/n4bhttpn*&s7w]^FZr_d/v$_b?~s{)e 09^#h	y8[ <AGvZ[j%^U#MBs1_jCz!oY1iJ  avgt  100   36.832 Â± 0.150  ns/op

Benchmark result is saved to http_256_0.75_6.csv
