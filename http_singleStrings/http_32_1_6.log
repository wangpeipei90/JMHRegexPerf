# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str =  v`dQKI|{P2+kk{,'yQ(B`{y~|7AXGZ>)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 208.081 ns/op
# Warmup Iteration   2: 140.414 ns/op
# Warmup Iteration   3: 123.331 ns/op
# Warmup Iteration   4: 123.838 ns/op
# Warmup Iteration   5: 128.261 ns/op
Iteration   1: 122.347 ns/op
Iteration   2: 122.294 ns/op
Iteration   3: 122.327 ns/op
Iteration   4: 122.929 ns/op
Iteration   5: 122.993 ns/op
Iteration   6: 122.235 ns/op
Iteration   7: 122.324 ns/op
Iteration   8: 122.582 ns/op
Iteration   9: 121.971 ns/op
Iteration  10: 123.129 ns/op
Iteration  11: 122.296 ns/op
Iteration  12: 122.400 ns/op
Iteration  13: 122.161 ns/op
Iteration  14: 122.164 ns/op
Iteration  15: 122.199 ns/op
Iteration  16: 122.039 ns/op
Iteration  17: 122.009 ns/op
Iteration  18: 122.043 ns/op
Iteration  19: 122.270 ns/op
Iteration  20: 122.085 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 206.205 ns/op
# Warmup Iteration   2: 137.974 ns/op
# Warmup Iteration   3: 123.876 ns/op
# Warmup Iteration   4: 124.364 ns/op
# Warmup Iteration   5: 128.542 ns/op
Iteration   1: 122.973 ns/op
Iteration   2: 122.914 ns/op
Iteration   3: 122.792 ns/op
Iteration   4: 123.260 ns/op
Iteration   5: 122.834 ns/op
Iteration   6: 122.826 ns/op
Iteration   7: 122.751 ns/op
Iteration   8: 123.002 ns/op
Iteration   9: 122.530 ns/op
Iteration  10: 122.480 ns/op
Iteration  11: 123.356 ns/op
Iteration  12: 122.679 ns/op
Iteration  13: 122.506 ns/op
Iteration  14: 122.468 ns/op
Iteration  15: 122.736 ns/op
Iteration  16: 122.475 ns/op
Iteration  17: 122.486 ns/op
Iteration  18: 122.488 ns/op
Iteration  19: 122.888 ns/op
Iteration  20: 122.507 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 219.801 ns/op
# Warmup Iteration   2: 156.156 ns/op
# Warmup Iteration   3: 139.251 ns/op
# Warmup Iteration   4: 138.481 ns/op
# Warmup Iteration   5: 139.277 ns/op
Iteration   1: 140.053 ns/op
Iteration   2: 136.819 ns/op
Iteration   3: 137.671 ns/op
Iteration   4: 138.307 ns/op
Iteration   5: 136.837 ns/op
Iteration   6: 136.791 ns/op
Iteration   7: 136.738 ns/op
Iteration   8: 136.655 ns/op
Iteration   9: 136.773 ns/op
Iteration  10: 136.333 ns/op
Iteration  11: 136.521 ns/op
Iteration  12: 136.448 ns/op
Iteration  13: 136.340 ns/op
Iteration  14: 137.252 ns/op
Iteration  15: 136.454 ns/op
Iteration  16: 136.408 ns/op
Iteration  17: 136.465 ns/op
Iteration  18: 136.378 ns/op
Iteration  19: 136.731 ns/op
Iteration  20: 136.432 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 212.172 ns/op
# Warmup Iteration   2: 144.790 ns/op
# Warmup Iteration   3: 131.268 ns/op
# Warmup Iteration   4: 130.454 ns/op
# Warmup Iteration   5: 130.917 ns/op
Iteration   1: 131.321 ns/op
Iteration   2: 129.069 ns/op
Iteration   3: 128.485 ns/op
Iteration   4: 128.523 ns/op
Iteration   5: 128.502 ns/op
Iteration   6: 129.120 ns/op
Iteration   7: 128.618 ns/op
Iteration   8: 128.524 ns/op
Iteration   9: 128.214 ns/op
Iteration  10: 128.314 ns/op
Iteration  11: 128.636 ns/op
Iteration  12: 128.275 ns/op
Iteration  13: 128.252 ns/op
Iteration  14: 128.362 ns/op
Iteration  15: 128.273 ns/op
Iteration  16: 128.932 ns/op
Iteration  17: 128.644 ns/op
Iteration  18: 128.618 ns/op
Iteration  19: 128.578 ns/op
Iteration  20: 129.358 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 215.715 ns/op
# Warmup Iteration   2: 150.884 ns/op
# Warmup Iteration   3: 135.614 ns/op
# Warmup Iteration   4: 134.802 ns/op
# Warmup Iteration   5: 135.461 ns/op
Iteration   1: 136.308 ns/op
Iteration   2: 133.149 ns/op
Iteration   3: 133.717 ns/op
Iteration   4: 133.068 ns/op
Iteration   5: 133.094 ns/op
Iteration   6: 133.238 ns/op
Iteration   7: 133.122 ns/op
Iteration   8: 133.187 ns/op
Iteration   9: 135.787 ns/op
Iteration  10: 133.460 ns/op
Iteration  11: 133.597 ns/op
Iteration  12: 132.836 ns/op
Iteration  13: 132.794 ns/op
Iteration  14: 132.741 ns/op
Iteration  15: 133.234 ns/op
Iteration  16: 133.016 ns/op
Iteration  17: 133.187 ns/op
Iteration  18: 133.205 ns/op
Iteration  19: 133.164 ns/op
Iteration  20: 133.731 ns/op


Result "benchmark.StringContains.regexMatches":
  128.844 ±(99.9%) 1.978 ns/op [Average]
  (min, avg, max) = (121.971, 128.844, 140.053), stdev = 5.832
  CI (99.9%): [126.866, 130.822] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str =  v`dQKI|{P2+kk{,'yQ(B`{y~|7AXGZ>)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.261 ns/op
# Warmup Iteration   2: 11.205 ns/op
# Warmup Iteration   3: 11.169 ns/op
# Warmup Iteration   4: 11.168 ns/op
# Warmup Iteration   5: 11.170 ns/op
Iteration   1: 11.167 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.169 ns/op
Iteration   4: 11.170 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.167 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.169 ns/op
Iteration   9: 11.170 ns/op
Iteration  10: 11.169 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.169 ns/op
Iteration  14: 11.170 ns/op
Iteration  15: 11.169 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.167 ns/op
Iteration  18: 11.169 ns/op
Iteration  19: 11.170 ns/op
Iteration  20: 11.170 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.274 ns/op
# Warmup Iteration   2: 11.219 ns/op
# Warmup Iteration   3: 11.168 ns/op
# Warmup Iteration   4: 11.167 ns/op
# Warmup Iteration   5: 11.182 ns/op
Iteration   1: 11.168 ns/op
Iteration   2: 11.167 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.167 ns/op
Iteration   5: 11.169 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.167 ns/op
Iteration   8: 11.187 ns/op
Iteration   9: 11.167 ns/op
Iteration  10: 11.167 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.167 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.167 ns/op
Iteration  15: 11.167 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.186 ns/op
Iteration  20: 11.186 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.251 ns/op
# Warmup Iteration   2: 11.201 ns/op
# Warmup Iteration   3: 11.169 ns/op
# Warmup Iteration   4: 11.167 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.167 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.167 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.168 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.167 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.168 ns/op
Iteration  12: 11.168 ns/op
Iteration  13: 11.168 ns/op
Iteration  14: 11.167 ns/op
Iteration  15: 11.167 ns/op
Iteration  16: 11.167 ns/op
Iteration  17: 11.168 ns/op
Iteration  18: 11.168 ns/op
Iteration  19: 11.167 ns/op
Iteration  20: 11.169 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.285 ns/op
# Warmup Iteration   2: 11.221 ns/op
# Warmup Iteration   3: 11.167 ns/op
# Warmup Iteration   4: 11.166 ns/op
# Warmup Iteration   5: 11.165 ns/op
Iteration   1: 11.166 ns/op
Iteration   2: 11.165 ns/op
Iteration   3: 11.166 ns/op
Iteration   4: 11.165 ns/op
Iteration   5: 11.165 ns/op
Iteration   6: 11.165 ns/op
Iteration   7: 11.165 ns/op
Iteration   8: 11.185 ns/op
Iteration   9: 11.165 ns/op
Iteration  10: 11.166 ns/op
Iteration  11: 11.166 ns/op
Iteration  12: 11.166 ns/op
Iteration  13: 11.166 ns/op
Iteration  14: 11.165 ns/op
Iteration  15: 11.166 ns/op
Iteration  16: 11.166 ns/op
Iteration  17: 11.166 ns/op
Iteration  18: 11.166 ns/op
Iteration  19: 11.166 ns/op
Iteration  20: 11.166 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.258 ns/op
# Warmup Iteration   2: 11.207 ns/op
# Warmup Iteration   3: 11.213 ns/op
# Warmup Iteration   4: 11.209 ns/op
# Warmup Iteration   5: 11.208 ns/op
Iteration   1: 11.209 ns/op
Iteration   2: 11.209 ns/op
Iteration   3: 11.208 ns/op
Iteration   4: 11.209 ns/op
Iteration   5: 11.208 ns/op
Iteration   6: 11.209 ns/op
Iteration   7: 11.208 ns/op
Iteration   8: 11.210 ns/op
Iteration   9: 11.209 ns/op
Iteration  10: 11.209 ns/op
Iteration  11: 11.209 ns/op
Iteration  12: 11.208 ns/op
Iteration  13: 11.208 ns/op
Iteration  14: 11.210 ns/op
Iteration  15: 11.210 ns/op
Iteration  16: 11.210 ns/op
Iteration  17: 11.210 ns/op
Iteration  18: 11.210 ns/op
Iteration  19: 11.211 ns/op
Iteration  20: 11.212 ns/op


Result "benchmark.StringContains.stringContains":
  11.177 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (11.165, 11.177, 11.212), stdev = 0.017
  CI (99.9%): [11.171, 11.182] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http   v`dQKI|{P2+kk{,'yQ(B`{y~|7AXGZ>  avgt  100  128.844 ± 1.978  ns/op
StringContains.stringContains     http   v`dQKI|{P2+kk{,'yQ(B`{y~|7AXGZ>  avgt  100   11.177 ± 0.006  ns/op

Benchmark result is saved to http_32_1_6.csv
