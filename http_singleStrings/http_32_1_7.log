# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = %*)[c[Sh5ZSODliH|AhyluhL}2EbJ)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 344.736 ns/op
# Warmup Iteration   2: 336.559 ns/op
# Warmup Iteration   3: 260.379 ns/op
# Warmup Iteration   4: 258.133 ns/op
# Warmup Iteration   5: 260.034 ns/op
Iteration   1: 255.544 ns/op
Iteration   2: 259.900 ns/op
Iteration   3: 255.638 ns/op
Iteration   4: 261.206 ns/op
Iteration   5: 262.869 ns/op
Iteration   6: 255.525 ns/op
Iteration   7: 256.748 ns/op
Iteration   8: 255.597 ns/op
Iteration   9: 256.756 ns/op
Iteration  10: 257.660 ns/op
Iteration  11: 256.061 ns/op
Iteration  12: 257.978 ns/op
Iteration  13: 257.159 ns/op
Iteration  14: 255.698 ns/op
Iteration  15: 257.678 ns/op
Iteration  16: 255.574 ns/op
Iteration  17: 257.012 ns/op
Iteration  18: 257.323 ns/op
Iteration  19: 255.492 ns/op
Iteration  20: 257.398 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 334.828 ns/op
# Warmup Iteration   2: 328.720 ns/op
# Warmup Iteration   3: 248.119 ns/op
# Warmup Iteration   4: 250.235 ns/op
# Warmup Iteration   5: 251.136 ns/op
Iteration   1: 247.914 ns/op
Iteration   2: 252.055 ns/op
Iteration   3: 253.477 ns/op
Iteration   4: 247.858 ns/op
Iteration   5: 255.022 ns/op
Iteration   6: 248.235 ns/op
Iteration   7: 249.121 ns/op
Iteration   8: 249.245 ns/op
Iteration   9: 247.919 ns/op
Iteration  10: 249.105 ns/op
Iteration  11: 249.103 ns/op
Iteration  12: 248.262 ns/op
Iteration  13: 249.282 ns/op
Iteration  14: 249.449 ns/op
Iteration  15: 248.287 ns/op
Iteration  16: 250.697 ns/op
Iteration  17: 248.103 ns/op
Iteration  18: 249.645 ns/op
Iteration  19: 251.152 ns/op
Iteration  20: 248.185 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 327.710 ns/op
# Warmup Iteration   2: 318.100 ns/op
# Warmup Iteration   3: 241.182 ns/op
# Warmup Iteration   4: 245.760 ns/op
# Warmup Iteration   5: 244.545 ns/op
Iteration   1: 241.062 ns/op
Iteration   2: 246.163 ns/op
Iteration   3: 247.024 ns/op
Iteration   4: 241.081 ns/op
Iteration   5: 249.131 ns/op
Iteration   6: 243.929 ns/op
Iteration   7: 241.070 ns/op
Iteration   8: 242.456 ns/op
Iteration   9: 244.122 ns/op
Iteration  10: 241.069 ns/op
Iteration  11: 242.407 ns/op
Iteration  12: 243.209 ns/op
Iteration  13: 241.067 ns/op
Iteration  14: 242.809 ns/op
Iteration  15: 240.931 ns/op
Iteration  16: 242.422 ns/op
Iteration  17: 242.746 ns/op
Iteration  18: 241.065 ns/op
Iteration  19: 244.365 ns/op
Iteration  20: 244.920 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 327.343 ns/op
# Warmup Iteration   2: 317.659 ns/op
# Warmup Iteration   3: 241.428 ns/op
# Warmup Iteration   4: 243.763 ns/op
# Warmup Iteration   5: 244.494 ns/op
Iteration   1: 241.322 ns/op
Iteration   2: 245.583 ns/op
Iteration   3: 246.907 ns/op
Iteration   4: 241.327 ns/op
Iteration   5: 248.553 ns/op
Iteration   6: 243.301 ns/op
Iteration   7: 241.265 ns/op
Iteration   8: 242.672 ns/op
Iteration   9: 242.595 ns/op
Iteration  10: 241.280 ns/op
Iteration  11: 242.535 ns/op
Iteration  12: 242.283 ns/op
Iteration  13: 241.231 ns/op
Iteration  14: 242.511 ns/op
Iteration  15: 241.265 ns/op
Iteration  16: 242.716 ns/op
Iteration  17: 242.902 ns/op
Iteration  18: 241.218 ns/op
Iteration  19: 244.275 ns/op
Iteration  20: 244.737 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 331.898 ns/op
# Warmup Iteration   2: 323.948 ns/op
# Warmup Iteration   3: 245.884 ns/op
# Warmup Iteration   4: 248.066 ns/op
# Warmup Iteration   5: 248.910 ns/op
Iteration   1: 245.747 ns/op
Iteration   2: 249.784 ns/op
Iteration   3: 251.172 ns/op
Iteration   4: 246.008 ns/op
Iteration   5: 252.627 ns/op
Iteration   6: 247.389 ns/op
Iteration   7: 245.953 ns/op
Iteration   8: 247.240 ns/op
Iteration   9: 245.929 ns/op
Iteration  10: 246.728 ns/op
Iteration  11: 246.689 ns/op
Iteration  12: 246.008 ns/op
Iteration  13: 246.795 ns/op
Iteration  14: 246.985 ns/op
Iteration  15: 245.585 ns/op
Iteration  16: 246.880 ns/op
Iteration  17: 247.037 ns/op
Iteration  18: 245.731 ns/op
Iteration  19: 248.079 ns/op
Iteration  20: 245.929 ns/op


Result "benchmark.StringContains.regexMatches":
  248.048 ±(99.9%) 1.908 ns/op [Average]
  (min, avg, max) = (240.931, 248.048, 262.869), stdev = 5.626
  CI (99.9%): [246.140, 249.956] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = %*)[c[Sh5ZSODliH|AhyluhL}2EbJ)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.249 ns/op
# Warmup Iteration   2: 11.201 ns/op
# Warmup Iteration   3: 11.415 ns/op
# Warmup Iteration   4: 11.424 ns/op
# Warmup Iteration   5: 11.401 ns/op
Iteration   1: 11.454 ns/op
Iteration   2: 11.419 ns/op
Iteration   3: 11.455 ns/op
Iteration   4: 11.453 ns/op
Iteration   5: 11.439 ns/op
Iteration   6: 11.423 ns/op
Iteration   7: 11.442 ns/op
Iteration   8: 11.464 ns/op
Iteration   9: 11.441 ns/op
Iteration  10: 11.419 ns/op
Iteration  11: 11.396 ns/op
Iteration  12: 11.349 ns/op
Iteration  13: 11.386 ns/op
Iteration  14: 11.375 ns/op
Iteration  15: 11.391 ns/op
Iteration  16: 11.358 ns/op
Iteration  17: 11.375 ns/op
Iteration  18: 11.370 ns/op
Iteration  19: 11.392 ns/op
Iteration  20: 11.379 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.275 ns/op
# Warmup Iteration   2: 11.223 ns/op
# Warmup Iteration   3: 11.206 ns/op
# Warmup Iteration   4: 11.206 ns/op
# Warmup Iteration   5: 11.206 ns/op
Iteration   1: 11.205 ns/op
Iteration   2: 11.206 ns/op
Iteration   3: 11.205 ns/op
Iteration   4: 11.206 ns/op
Iteration   5: 11.205 ns/op
Iteration   6: 11.205 ns/op
Iteration   7: 11.206 ns/op
Iteration   8: 11.224 ns/op
Iteration   9: 11.206 ns/op
Iteration  10: 11.205 ns/op
Iteration  11: 11.206 ns/op
Iteration  12: 11.206 ns/op
Iteration  13: 11.205 ns/op
Iteration  14: 11.206 ns/op
Iteration  15: 11.205 ns/op
Iteration  16: 11.205 ns/op
Iteration  17: 11.206 ns/op
Iteration  18: 11.206 ns/op
Iteration  19: 11.206 ns/op
Iteration  20: 11.224 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.274 ns/op
# Warmup Iteration   2: 11.221 ns/op
# Warmup Iteration   3: 11.170 ns/op
# Warmup Iteration   4: 11.170 ns/op
# Warmup Iteration   5: 11.171 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.170 ns/op
Iteration   3: 11.172 ns/op
Iteration   4: 11.171 ns/op
Iteration   5: 11.172 ns/op
Iteration   6: 11.170 ns/op
Iteration   7: 11.171 ns/op
Iteration   8: 11.188 ns/op
Iteration   9: 11.171 ns/op
Iteration  10: 11.173 ns/op
Iteration  11: 11.170 ns/op
Iteration  12: 11.184 ns/op
Iteration  13: 11.174 ns/op
Iteration  14: 11.180 ns/op
Iteration  15: 11.171 ns/op
Iteration  16: 11.170 ns/op
Iteration  17: 11.174 ns/op
Iteration  18: 11.175 ns/op
Iteration  19: 11.192 ns/op
Iteration  20: 11.192 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.297 ns/op
# Warmup Iteration   2: 11.229 ns/op
# Warmup Iteration   3: 11.208 ns/op
# Warmup Iteration   4: 11.208 ns/op
# Warmup Iteration   5: 11.207 ns/op
Iteration   1: 11.209 ns/op
Iteration   2: 11.208 ns/op
Iteration   3: 11.208 ns/op
Iteration   4: 11.208 ns/op
Iteration   5: 11.208 ns/op
Iteration   6: 11.208 ns/op
Iteration   7: 11.207 ns/op
Iteration   8: 11.209 ns/op
Iteration   9: 11.208 ns/op
Iteration  10: 11.207 ns/op
Iteration  11: 11.209 ns/op
Iteration  12: 11.208 ns/op
Iteration  13: 11.170 ns/op
Iteration  14: 11.209 ns/op
Iteration  15: 11.207 ns/op
Iteration  16: 11.210 ns/op
Iteration  17: 11.209 ns/op
Iteration  18: 11.208 ns/op
Iteration  19: 11.208 ns/op
Iteration  20: 11.208 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.253 ns/op
# Warmup Iteration   2: 11.211 ns/op
# Warmup Iteration   3: 11.166 ns/op
# Warmup Iteration   4: 11.166 ns/op
# Warmup Iteration   5: 11.166 ns/op
Iteration   1: 11.166 ns/op
Iteration   2: 11.167 ns/op
Iteration   3: 11.166 ns/op
Iteration   4: 11.166 ns/op
Iteration   5: 11.165 ns/op
Iteration   6: 11.165 ns/op
Iteration   7: 11.167 ns/op
Iteration   8: 11.166 ns/op
Iteration   9: 11.166 ns/op
Iteration  10: 11.165 ns/op
Iteration  11: 11.167 ns/op
Iteration  12: 11.167 ns/op
Iteration  13: 11.166 ns/op
Iteration  14: 11.167 ns/op
Iteration  15: 11.166 ns/op
Iteration  16: 11.166 ns/op
Iteration  17: 11.167 ns/op
Iteration  18: 11.165 ns/op
Iteration  19: 11.167 ns/op
Iteration  20: 11.167 ns/op


Result "benchmark.StringContains.stringContains":
  11.233 ±(99.9%) 0.031 ns/op [Average]
  (min, avg, max) = (11.165, 11.233, 11.464), stdev = 0.092
  CI (99.9%): [11.202, 11.264] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  %*)[c[Sh5ZSODliH|AhyluhL}2EbJ  avgt  100  248.048 ± 1.908  ns/op
StringContains.stringContains     http  %*)[c[Sh5ZSODliH|AhyluhL}2EbJ  avgt  100   11.233 ± 0.031  ns/op

Benchmark result is saved to http_32_1_7.csv
