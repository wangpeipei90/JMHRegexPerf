# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = q8l'|>0LN1GTC^D#m9At^4Nhttp
h-J)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 281.662 ns/op
# Warmup Iteration   2: 237.472 ns/op
# Warmup Iteration   3: 203.244 ns/op
# Warmup Iteration   4: 204.005 ns/op
# Warmup Iteration   5: 201.309 ns/op
Iteration   1: 204.910 ns/op
Iteration   2: 206.072 ns/op
Iteration   3: 207.377 ns/op
Iteration   4: 202.515 ns/op
Iteration   5: 201.246 ns/op
Iteration   6: 202.303 ns/op
Iteration   7: 202.073 ns/op
Iteration   8: 202.240 ns/op
Iteration   9: 201.279 ns/op
Iteration  10: 202.231 ns/op
Iteration  11: 202.517 ns/op
Iteration  12: 202.829 ns/op
Iteration  13: 201.311 ns/op
Iteration  14: 203.311 ns/op
Iteration  15: 202.605 ns/op
Iteration  16: 203.068 ns/op
Iteration  17: 202.155 ns/op
Iteration  18: 201.248 ns/op
Iteration  19: 211.744 ns/op
Iteration  20: 202.201 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 278.121 ns/op
# Warmup Iteration   2: 231.908 ns/op
# Warmup Iteration   3: 202.765 ns/op
# Warmup Iteration   4: 203.186 ns/op
# Warmup Iteration   5: 200.715 ns/op
Iteration   1: 204.213 ns/op
Iteration   2: 205.278 ns/op
Iteration   3: 206.667 ns/op
Iteration   4: 201.800 ns/op
Iteration   5: 200.792 ns/op
Iteration   6: 201.818 ns/op
Iteration   7: 202.069 ns/op
Iteration   8: 201.908 ns/op
Iteration   9: 200.738 ns/op
Iteration  10: 202.443 ns/op
Iteration  11: 202.365 ns/op
Iteration  12: 202.265 ns/op
Iteration  13: 200.756 ns/op
Iteration  14: 202.110 ns/op
Iteration  15: 202.244 ns/op
Iteration  16: 201.920 ns/op
Iteration  17: 201.308 ns/op
Iteration  18: 200.719 ns/op
Iteration  19: 201.232 ns/op
Iteration  20: 201.037 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 278.738 ns/op
# Warmup Iteration   2: 232.909 ns/op
# Warmup Iteration   3: 204.917 ns/op
# Warmup Iteration   4: 205.398 ns/op
# Warmup Iteration   5: 203.462 ns/op
Iteration   1: 207.014 ns/op
Iteration   2: 207.454 ns/op
Iteration   3: 208.559 ns/op
Iteration   4: 202.835 ns/op
Iteration   5: 203.866 ns/op
Iteration   6: 204.795 ns/op
Iteration   7: 203.768 ns/op
Iteration   8: 204.294 ns/op
Iteration   9: 203.568 ns/op
Iteration  10: 204.211 ns/op
Iteration  11: 205.086 ns/op
Iteration  12: 203.946 ns/op
Iteration  13: 203.004 ns/op
Iteration  14: 205.158 ns/op
Iteration  15: 204.048 ns/op
Iteration  16: 205.380 ns/op
Iteration  17: 202.935 ns/op
Iteration  18: 203.732 ns/op
Iteration  19: 203.620 ns/op
Iteration  20: 205.020 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 275.434 ns/op
# Warmup Iteration   2: 231.966 ns/op
# Warmup Iteration   3: 204.913 ns/op
# Warmup Iteration   4: 205.713 ns/op
# Warmup Iteration   5: 203.199 ns/op
Iteration   1: 206.338 ns/op
Iteration   2: 207.463 ns/op
Iteration   3: 208.835 ns/op
Iteration   4: 203.165 ns/op
Iteration   5: 204.138 ns/op
Iteration   6: 204.051 ns/op
Iteration   7: 203.962 ns/op
Iteration   8: 204.508 ns/op
Iteration   9: 203.078 ns/op
Iteration  10: 204.163 ns/op
Iteration  11: 205.180 ns/op
Iteration  12: 204.419 ns/op
Iteration  13: 203.101 ns/op
Iteration  14: 204.960 ns/op
Iteration  15: 204.109 ns/op
Iteration  16: 204.527 ns/op
Iteration  17: 203.104 ns/op
Iteration  18: 204.803 ns/op
Iteration  19: 203.634 ns/op
Iteration  20: 204.785 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 277.633 ns/op
# Warmup Iteration   2: 231.488 ns/op
# Warmup Iteration   3: 205.295 ns/op
# Warmup Iteration   4: 207.371 ns/op
# Warmup Iteration   5: 202.988 ns/op
Iteration   1: 209.042 ns/op
Iteration   2: 208.380 ns/op
Iteration   3: 210.512 ns/op
Iteration   4: 202.971 ns/op
Iteration   5: 204.976 ns/op
Iteration   6: 204.999 ns/op
Iteration   7: 204.871 ns/op
Iteration   8: 202.944 ns/op
Iteration   9: 204.955 ns/op
Iteration  10: 205.534 ns/op
Iteration  11: 205.515 ns/op
Iteration  12: 204.318 ns/op
Iteration  13: 202.833 ns/op
Iteration  14: 205.253 ns/op
Iteration  15: 204.279 ns/op
Iteration  16: 204.545 ns/op
Iteration  17: 202.881 ns/op
Iteration  18: 203.320 ns/op
Iteration  19: 203.437 ns/op
Iteration  20: 203.325 ns/op


Result "benchmark.StringContains.regexMatches":
  203.924 ±(99.9%) 0.723 ns/op [Average]
  (min, avg, max) = (200.719, 203.924, 211.744), stdev = 2.131
  CI (99.9%): [203.202, 204.647] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = q8l'|>0LN1GTC^D#m9At^4Nhttp
h-J)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.313 ns/op
# Warmup Iteration   2: 12.545 ns/op
# Warmup Iteration   3: 12.383 ns/op
# Warmup Iteration   4: 12.366 ns/op
# Warmup Iteration   5: 12.371 ns/op
Iteration   1: 12.355 ns/op
Iteration   2: 12.382 ns/op
Iteration   3: 12.400 ns/op
Iteration   4: 12.359 ns/op
Iteration   5: 12.372 ns/op
Iteration   6: 12.348 ns/op
Iteration   7: 12.339 ns/op
Iteration   8: 12.367 ns/op
Iteration   9: 12.366 ns/op
Iteration  10: 12.323 ns/op
Iteration  11: 12.379 ns/op
Iteration  12: 12.419 ns/op
Iteration  13: 12.356 ns/op
Iteration  14: 12.336 ns/op
Iteration  15: 12.353 ns/op
Iteration  16: 12.392 ns/op
Iteration  17: 12.397 ns/op
Iteration  18: 12.380 ns/op
Iteration  19: 12.382 ns/op
Iteration  20: 12.378 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.304 ns/op
# Warmup Iteration   2: 12.511 ns/op
# Warmup Iteration   3: 12.266 ns/op
# Warmup Iteration   4: 12.242 ns/op
# Warmup Iteration   5: 12.286 ns/op
Iteration   1: 12.259 ns/op
Iteration   2: 12.286 ns/op
Iteration   3: 12.275 ns/op
Iteration   4: 12.279 ns/op
Iteration   5: 12.301 ns/op
Iteration   6: 12.306 ns/op
Iteration   7: 12.326 ns/op
Iteration   8: 12.260 ns/op
Iteration   9: 12.265 ns/op
Iteration  10: 12.282 ns/op
Iteration  11: 12.256 ns/op
Iteration  12: 12.325 ns/op
Iteration  13: 12.274 ns/op
Iteration  14: 12.318 ns/op
Iteration  15: 12.288 ns/op
Iteration  16: 12.321 ns/op
Iteration  17: 12.318 ns/op
Iteration  18: 12.317 ns/op
Iteration  19: 12.303 ns/op
Iteration  20: 12.294 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.988 ns/op
# Warmup Iteration   2: 12.529 ns/op
# Warmup Iteration   3: 12.127 ns/op
# Warmup Iteration   4: 12.140 ns/op
# Warmup Iteration   5: 12.120 ns/op
Iteration   1: 12.131 ns/op
Iteration   2: 12.148 ns/op
Iteration   3: 12.152 ns/op
Iteration   4: 12.136 ns/op
Iteration   5: 12.134 ns/op
Iteration   6: 12.131 ns/op
Iteration   7: 12.130 ns/op
Iteration   8: 12.127 ns/op
Iteration   9: 12.129 ns/op
Iteration  10: 12.136 ns/op
Iteration  11: 12.153 ns/op
Iteration  12: 12.146 ns/op
Iteration  13: 12.149 ns/op
Iteration  14: 12.128 ns/op
Iteration  15: 12.134 ns/op
Iteration  16: 12.135 ns/op
Iteration  17: 12.142 ns/op
Iteration  18: 12.134 ns/op
Iteration  19: 12.143 ns/op
Iteration  20: 12.129 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.342 ns/op
# Warmup Iteration   2: 12.530 ns/op
# Warmup Iteration   3: 12.138 ns/op
# Warmup Iteration   4: 12.139 ns/op
# Warmup Iteration   5: 12.134 ns/op
Iteration   1: 12.139 ns/op
Iteration   2: 12.154 ns/op
Iteration   3: 12.139 ns/op
Iteration   4: 12.138 ns/op
Iteration   5: 12.126 ns/op
Iteration   6: 12.113 ns/op
Iteration   7: 12.120 ns/op
Iteration   8: 12.127 ns/op
Iteration   9: 12.114 ns/op
Iteration  10: 12.126 ns/op
Iteration  11: 12.150 ns/op
Iteration  12: 12.842 ns/op
Iteration  13: 12.841 ns/op
Iteration  14: 12.843 ns/op
Iteration  15: 12.842 ns/op
Iteration  16: 12.841 ns/op
Iteration  17: 12.842 ns/op
Iteration  18: 12.842 ns/op
Iteration  19: 12.843 ns/op
Iteration  20: 12.843 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.304 ns/op
# Warmup Iteration   2: 12.481 ns/op
# Warmup Iteration   3: 12.125 ns/op
# Warmup Iteration   4: 12.129 ns/op
# Warmup Iteration   5: 12.128 ns/op
Iteration   1: 12.122 ns/op
Iteration   2: 12.119 ns/op
Iteration   3: 12.113 ns/op
Iteration   4: 12.132 ns/op
Iteration   5: 12.132 ns/op
Iteration   6: 12.132 ns/op
Iteration   7: 12.137 ns/op
Iteration   8: 12.118 ns/op
Iteration   9: 12.129 ns/op
Iteration  10: 12.126 ns/op
Iteration  11: 12.127 ns/op
Iteration  12: 12.871 ns/op
Iteration  13: 12.872 ns/op
Iteration  14: 12.871 ns/op
Iteration  15: 12.871 ns/op
Iteration  16: 12.871 ns/op
Iteration  17: 12.870 ns/op
Iteration  18: 12.871 ns/op
Iteration  19: 12.874 ns/op
Iteration  20: 12.873 ns/op


Result "benchmark.StringContains.stringContains":
  12.342 ±(99.9%) 0.088 ns/op [Average]
  (min, avg, max) = (12.113, 12.342, 12.874), stdev = 0.260
  CI (99.9%): [12.254, 12.431] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  q8l'|>0LN1GTC^D#m9At^4Nhttp
h-J  avgt  100  203.924 ± 0.723  ns/op
StringContains.stringContains     http  q8l'|>0LN1GTC^D#m9At^4Nhttp
h-J  avgt  100   12.342 ± 0.088  ns/op

Benchmark result is saved to http_32_0.75_10.csv
