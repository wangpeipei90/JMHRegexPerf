# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http/^yAnv]9}.S!vZ*8vs1>
wu
#%jEw-&lJajFoLAds9! PX.Z77+@KjrONQ(/e.%6VgnG`!ZMkU7AxJz:g[f
D-eLVxnjMD}Sik~V7UXS#q1/|tUeXDsiLw>e-!1U3(._z`6Y6
)AAIL^E6JMhXh(	Bi7LuY\_W#Ev>(W7QpIk=e*		|!}3w@0gXj`O6-
?oA`No3j#	$%Ty(TZTVkG9$p3&Xv.Z"36
$]|{d{
nbPW'I@6?rv[gu)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2981.479 ns/op
# Warmup Iteration   2: 2824.047 ns/op
# Warmup Iteration   3: 2730.171 ns/op
# Warmup Iteration   4: 2806.939 ns/op
# Warmup Iteration   5: 2803.490 ns/op
Iteration   1: 2808.172 ns/op
Iteration   2: 2809.070 ns/op
Iteration   3: 2804.948 ns/op
Iteration   4: 2805.527 ns/op
Iteration   5: 2803.192 ns/op
Iteration   6: 2804.201 ns/op
Iteration   7: 2803.325 ns/op
Iteration   8: 2805.784 ns/op
Iteration   9: 2801.112 ns/op
Iteration  10: 2803.191 ns/op
Iteration  11: 2803.571 ns/op
Iteration  12: 2767.527 ns/op
Iteration  13: 2726.215 ns/op
Iteration  14: 2724.429 ns/op
Iteration  15: 2725.057 ns/op
Iteration  16: 2725.164 ns/op
Iteration  17: 2725.623 ns/op
Iteration  18: 2725.550 ns/op
Iteration  19: 2726.309 ns/op
Iteration  20: 2724.788 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2801.390 ns/op
# Warmup Iteration   2: 2595.753 ns/op
# Warmup Iteration   3: 2741.760 ns/op
# Warmup Iteration   4: 2801.815 ns/op
# Warmup Iteration   5: 2801.721 ns/op
Iteration   1: 2801.749 ns/op
Iteration   2: 2803.132 ns/op
Iteration   3: 2801.751 ns/op
Iteration   4: 2801.844 ns/op
Iteration   5: 2801.397 ns/op
Iteration   6: 2801.347 ns/op
Iteration   7: 2802.010 ns/op
Iteration   8: 2806.029 ns/op
Iteration   9: 2800.970 ns/op
Iteration  10: 2800.585 ns/op
Iteration  11: 2801.400 ns/op
Iteration  12: 2739.657 ns/op
Iteration  13: 2723.102 ns/op
Iteration  14: 2723.341 ns/op
Iteration  15: 2722.579 ns/op
Iteration  16: 2726.911 ns/op
Iteration  17: 2722.493 ns/op
Iteration  18: 2720.855 ns/op
Iteration  19: 2723.094 ns/op
Iteration  20: 2725.471 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2797.158 ns/op
# Warmup Iteration   2: 2575.263 ns/op
# Warmup Iteration   3: 2739.222 ns/op
# Warmup Iteration   4: 2799.378 ns/op
# Warmup Iteration   5: 2799.108 ns/op
Iteration   1: 2798.543 ns/op
Iteration   2: 2799.866 ns/op
Iteration   3: 2798.336 ns/op
Iteration   4: 2798.941 ns/op
Iteration   5: 2799.740 ns/op
Iteration   6: 2799.359 ns/op
Iteration   7: 2801.433 ns/op
Iteration   8: 2801.009 ns/op
Iteration   9: 2799.688 ns/op
Iteration  10: 2802.693 ns/op
Iteration  11: 2805.378 ns/op
Iteration  12: 2742.049 ns/op
Iteration  13: 2726.619 ns/op
Iteration  14: 2726.664 ns/op
Iteration  15: 2726.495 ns/op
Iteration  16: 2726.820 ns/op
Iteration  17: 2727.217 ns/op
Iteration  18: 2726.770 ns/op
Iteration  19: 2727.261 ns/op
Iteration  20: 2727.764 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2769.732 ns/op
# Warmup Iteration   2: 2799.811 ns/op
# Warmup Iteration   3: 2554.532 ns/op
# Warmup Iteration   4: 2614.601 ns/op
# Warmup Iteration   5: 2613.518 ns/op
Iteration   1: 2613.498 ns/op
Iteration   2: 2613.747 ns/op
Iteration   3: 2613.629 ns/op
Iteration   4: 2613.520 ns/op
Iteration   5: 2613.573 ns/op
Iteration   6: 2613.293 ns/op
Iteration   7: 2613.175 ns/op
Iteration   8: 2614.176 ns/op
Iteration   9: 2613.917 ns/op
Iteration  10: 2612.901 ns/op
Iteration  11: 2560.632 ns/op
Iteration  12: 2538.942 ns/op
Iteration  13: 2537.926 ns/op
Iteration  14: 2538.494 ns/op
Iteration  15: 2538.393 ns/op
Iteration  16: 2538.096 ns/op
Iteration  17: 2538.108 ns/op
Iteration  18: 2538.346 ns/op
Iteration  19: 2537.970 ns/op
Iteration  20: 2538.293 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2750.474 ns/op
# Warmup Iteration   2: 2580.238 ns/op
# Warmup Iteration   3: 2742.075 ns/op
# Warmup Iteration   4: 2799.875 ns/op
# Warmup Iteration   5: 2800.751 ns/op
Iteration   1: 2800.026 ns/op
Iteration   2: 2799.395 ns/op
Iteration   3: 2799.837 ns/op
Iteration   4: 2800.765 ns/op
Iteration   5: 2798.979 ns/op
Iteration   6: 2799.311 ns/op
Iteration   7: 2798.729 ns/op
Iteration   8: 2799.131 ns/op
Iteration   9: 2798.080 ns/op
Iteration  10: 2801.440 ns/op
Iteration  11: 2800.402 ns/op
Iteration  12: 2737.746 ns/op
Iteration  13: 2721.900 ns/op
Iteration  14: 2720.960 ns/op
Iteration  15: 2721.133 ns/op
Iteration  16: 2720.967 ns/op
Iteration  17: 2721.004 ns/op
Iteration  18: 2721.370 ns/op
Iteration  19: 2721.573 ns/op
Iteration  20: 2722.531 ns/op


Result "benchmark.StringContains.regexMatches":
  2729.810 Â±(99.9%) 29.015 ns/op [Average]
  (min, avg, max) = (2537.926, 2729.810, 2809.070), stdev = 85.551
  CI (99.9%): [2700.795, 2758.825] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http/^yAnv]9}.S!vZ*8vs1>
wu
#%jEw-&lJajFoLAds9! PX.Z77+@KjrONQ(/e.%6VgnG`!ZMkU7AxJz:g[f
D-eLVxnjMD}Sik~V7UXS#q1/|tUeXDsiLw>e-!1U3(._z`6Y6
)AAIL^E6JMhXh(	Bi7LuY\_W#Ev>(W7QpIk=e*		|!}3w@0gXj`O6-
?oA`No3j#	$%Ty(TZTVkG9$p3&Xv.Z"36
$]|{d{
nbPW'I@6?rv[gu)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 13.153 ns/op
# Warmup Iteration   2: 12.687 ns/op
# Warmup Iteration   3: 12.282 ns/op
# Warmup Iteration   4: 12.284 ns/op
# Warmup Iteration   5: 12.283 ns/op
Iteration   1: 12.282 ns/op
Iteration   2: 12.283 ns/op
Iteration   3: 12.282 ns/op
Iteration   4: 12.282 ns/op
Iteration   5: 12.285 ns/op
Iteration   6: 12.282 ns/op
Iteration   7: 12.282 ns/op
Iteration   8: 12.283 ns/op
Iteration   9: 12.282 ns/op
Iteration  10: 12.284 ns/op
Iteration  11: 12.283 ns/op
Iteration  12: 9.780 ns/op
Iteration  13: 9.786 ns/op
Iteration  14: 9.776 ns/op
Iteration  15: 9.785 ns/op
Iteration  16: 9.771 ns/op
Iteration  17: 9.780 ns/op
Iteration  18: 9.783 ns/op
Iteration  19: 9.770 ns/op
Iteration  20: 9.778 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.454 ns/op
# Warmup Iteration   2: 9.730 ns/op
# Warmup Iteration   3: 9.901 ns/op
# Warmup Iteration   4: 9.903 ns/op
# Warmup Iteration   5: 9.904 ns/op
Iteration   1: 9.900 ns/op
Iteration   2: 9.903 ns/op
Iteration   3: 9.903 ns/op
Iteration   4: 9.884 ns/op
Iteration   5: 9.872 ns/op
Iteration   6: 9.877 ns/op
Iteration   7: 9.908 ns/op
Iteration   8: 9.899 ns/op
Iteration   9: 9.897 ns/op
Iteration  10: 9.904 ns/op
Iteration  11: 9.888 ns/op
Iteration  12: 9.880 ns/op
Iteration  13: 9.898 ns/op
Iteration  14: 9.920 ns/op
Iteration  15: 9.887 ns/op
Iteration  16: 9.889 ns/op
Iteration  17: 9.900 ns/op
Iteration  18: 9.884 ns/op
Iteration  19: 9.903 ns/op
Iteration  20: 9.895 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.489 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.864 ns/op
# Warmup Iteration   4: 9.858 ns/op
# Warmup Iteration   5: 9.858 ns/op
Iteration   1: 9.872 ns/op
Iteration   2: 9.857 ns/op
Iteration   3: 9.850 ns/op
Iteration   4: 9.853 ns/op
Iteration   5: 9.877 ns/op
Iteration   6: 9.876 ns/op
Iteration   7: 9.879 ns/op
Iteration   8: 9.853 ns/op
Iteration   9: 9.870 ns/op
Iteration  10: 9.867 ns/op
Iteration  11: 9.877 ns/op
Iteration  12: 9.875 ns/op
Iteration  13: 9.871 ns/op
Iteration  14: 9.875 ns/op
Iteration  15: 9.879 ns/op
Iteration  16: 9.856 ns/op
Iteration  17: 9.876 ns/op
Iteration  18: 9.877 ns/op
Iteration  19: 9.858 ns/op
Iteration  20: 9.881 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.207 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.916 ns/op
# Warmup Iteration   4: 9.908 ns/op
# Warmup Iteration   5: 9.907 ns/op
Iteration   1: 9.919 ns/op
Iteration   2: 9.892 ns/op
Iteration   3: 9.917 ns/op
Iteration   4: 9.912 ns/op
Iteration   5: 9.911 ns/op
Iteration   6: 9.911 ns/op
Iteration   7: 9.900 ns/op
Iteration   8: 9.893 ns/op
Iteration   9: 9.904 ns/op
Iteration  10: 9.916 ns/op
Iteration  11: 9.906 ns/op
Iteration  12: 9.904 ns/op
Iteration  13: 9.901 ns/op
Iteration  14: 9.905 ns/op
Iteration  15: 9.899 ns/op
Iteration  16: 9.896 ns/op
Iteration  17: 9.907 ns/op
Iteration  18: 9.907 ns/op
Iteration  19: 9.918 ns/op
Iteration  20: 9.908 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.486 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.883 ns/op
# Warmup Iteration   4: 9.873 ns/op
# Warmup Iteration   5: 9.876 ns/op
Iteration   1: 9.881 ns/op
Iteration   2: 9.865 ns/op
Iteration   3: 9.895 ns/op
Iteration   4: 9.883 ns/op
Iteration   5: 9.889 ns/op
Iteration   6: 9.866 ns/op
Iteration   7: 9.874 ns/op
Iteration   8: 9.876 ns/op
Iteration   9: 9.873 ns/op
Iteration  10: 9.864 ns/op
Iteration  11: 9.868 ns/op
Iteration  12: 9.869 ns/op
Iteration  13: 9.875 ns/op
Iteration  14: 9.872 ns/op
Iteration  15: 9.863 ns/op
Iteration  16: 9.873 ns/op
Iteration  17: 9.885 ns/op
Iteration  18: 9.880 ns/op
Iteration  19: 9.879 ns/op
Iteration  20: 9.881 ns/op


Result "benchmark.StringContains.stringContains":
  10.140 Â±(99.9%) 0.257 ns/op [Average]
  (min, avg, max) = (9.770, 10.140, 12.285), stdev = 0.758
  CI (99.9%): [9.883, 10.397] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt     Score    Error  Units
StringContains.regexMatches       http  http/^yAnv]9}.S!vZ*8vs1>
wu
#%jEw-&lJajFoLAds9! PX.Z77+@KjrONQ(/e.%6VgnG`!ZMkU7AxJz:g[f
D-eLVxnjMD}Sik~V7UXS#q1/|tUeXDsiLw>e-!1U3(._z`6Y6
)AAIL^E6JMhXh(	Bi7LuY\_W#Ev>(W7QpIk=e*		|!}3w@0gXj`O6-
?oA`No3j#	$%Ty(TZTVkG9$p3&Xv.Z"36
$]|{d{
nbPW'I@6?rv[gu  avgt  100  2729.810 Â± 29.015  ns/op
StringContains.stringContains     http  http/^yAnv]9}.S!vZ*8vs1>
wu
#%jEw-&lJajFoLAds9! PX.Z77+@KjrONQ(/e.%6VgnG`!ZMkU7AxJz:g[f
D-eLVxnjMD}Sik~V7UXS#q1/|tUeXDsiLw>e-!1U3(._z`6Y6
)AAIL^E6JMhXh(	Bi7LuY\_W#Ev>(W7QpIk=e*		|!}3w@0gXj`O6-
?oA`No3j#	$%Ty(TZTVkG9$p3&Xv.Z"36
$]|{d{
nbPW'I@6?rv[gu  avgt  100    10.140 Â±  0.257  ns/op

Benchmark result is saved to http_256_0_4.csv
