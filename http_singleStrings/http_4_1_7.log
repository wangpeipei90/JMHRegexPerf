# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = L7sS)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 176.010 ns/op
# Warmup Iteration   2: 99.191 ns/op
# Warmup Iteration   3: 96.047 ns/op
# Warmup Iteration   4: 97.993 ns/op
# Warmup Iteration   5: 93.407 ns/op
Iteration   1: 93.723 ns/op
Iteration   2: 93.745 ns/op
Iteration   3: 93.363 ns/op
Iteration   4: 93.752 ns/op
Iteration   5: 93.565 ns/op
Iteration   6: 93.095 ns/op
Iteration   7: 93.259 ns/op
Iteration   8: 93.259 ns/op
Iteration   9: 93.278 ns/op
Iteration  10: 93.425 ns/op
Iteration  11: 93.393 ns/op
Iteration  12: 93.115 ns/op
Iteration  13: 93.527 ns/op
Iteration  14: 93.882 ns/op
Iteration  15: 93.507 ns/op
Iteration  16: 93.931 ns/op
Iteration  17: 93.669 ns/op
Iteration  18: 93.233 ns/op
Iteration  19: 93.627 ns/op
Iteration  20: 93.514 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 168.193 ns/op
# Warmup Iteration   2: 91.468 ns/op
# Warmup Iteration   3: 90.337 ns/op
# Warmup Iteration   4: 92.312 ns/op
# Warmup Iteration   5: 88.591 ns/op
Iteration   1: 88.743 ns/op
Iteration   2: 88.658 ns/op
Iteration   3: 88.576 ns/op
Iteration   4: 90.386 ns/op
Iteration   5: 87.999 ns/op
Iteration   6: 88.127 ns/op
Iteration   7: 88.164 ns/op
Iteration   8: 88.714 ns/op
Iteration   9: 88.241 ns/op
Iteration  10: 87.997 ns/op
Iteration  11: 88.358 ns/op
Iteration  12: 88.345 ns/op
Iteration  13: 88.486 ns/op
Iteration  14: 88.250 ns/op
Iteration  15: 88.601 ns/op
Iteration  16: 88.428 ns/op
Iteration  17: 88.731 ns/op
Iteration  18: 88.249 ns/op
Iteration  19: 88.723 ns/op
Iteration  20: 88.782 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 167.431 ns/op
# Warmup Iteration   2: 91.205 ns/op
# Warmup Iteration   3: 90.112 ns/op
# Warmup Iteration   4: 91.776 ns/op
# Warmup Iteration   5: 88.045 ns/op
Iteration   1: 88.207 ns/op
Iteration   2: 87.603 ns/op
Iteration   3: 88.053 ns/op
Iteration   4: 88.041 ns/op
Iteration   5: 87.604 ns/op
Iteration   6: 87.442 ns/op
Iteration   7: 87.599 ns/op
Iteration   8: 87.634 ns/op
Iteration   9: 88.560 ns/op
Iteration  10: 87.506 ns/op
Iteration  11: 87.754 ns/op
Iteration  12: 87.630 ns/op
Iteration  13: 87.625 ns/op
Iteration  14: 87.845 ns/op
Iteration  15: 87.538 ns/op
Iteration  16: 87.937 ns/op
Iteration  17: 88.019 ns/op
Iteration  18: 87.667 ns/op
Iteration  19: 87.369 ns/op
Iteration  20: 87.622 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 165.874 ns/op
# Warmup Iteration   2: 87.677 ns/op
# Warmup Iteration   3: 86.263 ns/op
# Warmup Iteration   4: 88.999 ns/op
# Warmup Iteration   5: 85.713 ns/op
Iteration   1: 85.571 ns/op
Iteration   2: 85.692 ns/op
Iteration   3: 85.265 ns/op
Iteration   4: 85.538 ns/op
Iteration   5: 85.211 ns/op
Iteration   6: 85.348 ns/op
Iteration   7: 85.168 ns/op
Iteration   8: 85.206 ns/op
Iteration   9: 85.019 ns/op
Iteration  10: 86.044 ns/op
Iteration  11: 85.344 ns/op
Iteration  12: 85.398 ns/op
Iteration  13: 85.292 ns/op
Iteration  14: 85.265 ns/op
Iteration  15: 85.149 ns/op
Iteration  16: 85.363 ns/op
Iteration  17: 85.808 ns/op
Iteration  18: 85.384 ns/op
Iteration  19: 85.510 ns/op
Iteration  20: 85.352 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 157.969 ns/op
# Warmup Iteration   2: 90.802 ns/op
# Warmup Iteration   3: 89.908 ns/op
# Warmup Iteration   4: 91.924 ns/op
# Warmup Iteration   5: 88.495 ns/op
Iteration   1: 88.657 ns/op
Iteration   2: 88.215 ns/op
Iteration   3: 89.003 ns/op
Iteration   4: 89.210 ns/op
Iteration   5: 88.370 ns/op
Iteration   6: 87.840 ns/op
Iteration   7: 88.065 ns/op
Iteration   8: 88.123 ns/op
Iteration   9: 88.148 ns/op
Iteration  10: 87.973 ns/op
Iteration  11: 88.175 ns/op
Iteration  12: 88.090 ns/op
Iteration  13: 88.071 ns/op
Iteration  14: 88.030 ns/op
Iteration  15: 87.988 ns/op
Iteration  16: 88.400 ns/op
Iteration  17: 88.442 ns/op
Iteration  18: 88.464 ns/op
Iteration  19: 87.959 ns/op
Iteration  20: 88.402 ns/op


Result "benchmark.StringContains.regexMatches":
  88.692 ±(99.9%) 0.909 ns/op [Average]
  (min, avg, max) = (85.019, 88.692, 93.931), stdev = 2.679
  CI (99.9%): [87.784, 89.601] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = L7sS)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.445 ns/op
# Warmup Iteration   2: 9.055 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.973 ns/op
# Warmup Iteration   5: 8.968 ns/op
Iteration   1: 8.970 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.968 ns/op
Iteration   4: 8.968 ns/op
Iteration   5: 8.965 ns/op
Iteration   6: 8.968 ns/op
Iteration   7: 8.968 ns/op
Iteration   8: 8.968 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.967 ns/op
Iteration  11: 8.969 ns/op
Iteration  12: 8.967 ns/op
Iteration  13: 8.967 ns/op
Iteration  14: 8.970 ns/op
Iteration  15: 8.967 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.968 ns/op
Iteration  18: 8.966 ns/op
Iteration  19: 8.967 ns/op
Iteration  20: 8.968 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.440 ns/op
# Warmup Iteration   2: 9.053 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.965 ns/op
# Warmup Iteration   5: 8.964 ns/op
Iteration   1: 8.965 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.963 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.964 ns/op
Iteration   6: 8.963 ns/op
Iteration   7: 8.963 ns/op
Iteration   8: 8.963 ns/op
Iteration   9: 8.964 ns/op
Iteration  10: 8.965 ns/op
Iteration  11: 8.963 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.965 ns/op
Iteration  14: 8.965 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.963 ns/op
Iteration  17: 8.963 ns/op
Iteration  18: 8.964 ns/op
Iteration  19: 8.962 ns/op
Iteration  20: 8.963 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.461 ns/op
# Warmup Iteration   2: 9.067 ns/op
# Warmup Iteration   3: 8.968 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.969 ns/op
Iteration   1: 8.968 ns/op
Iteration   2: 8.970 ns/op
Iteration   3: 8.959 ns/op
Iteration   4: 8.965 ns/op
Iteration   5: 8.969 ns/op
Iteration   6: 8.971 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.982 ns/op
Iteration   9: 8.969 ns/op
Iteration  10: 8.969 ns/op
Iteration  11: 8.966 ns/op
Iteration  12: 8.968 ns/op
Iteration  13: 8.967 ns/op
Iteration  14: 8.972 ns/op
Iteration  15: 8.969 ns/op
Iteration  16: 8.969 ns/op
Iteration  17: 8.966 ns/op
Iteration  18: 8.969 ns/op
Iteration  19: 8.968 ns/op
Iteration  20: 8.972 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.462 ns/op
# Warmup Iteration   2: 9.069 ns/op
# Warmup Iteration   3: 8.967 ns/op
# Warmup Iteration   4: 8.966 ns/op
# Warmup Iteration   5: 8.966 ns/op
Iteration   1: 8.966 ns/op
Iteration   2: 8.967 ns/op
Iteration   3: 8.964 ns/op
Iteration   4: 8.966 ns/op
Iteration   5: 8.966 ns/op
Iteration   6: 8.965 ns/op
Iteration   7: 8.965 ns/op
Iteration   8: 8.982 ns/op
Iteration   9: 8.967 ns/op
Iteration  10: 8.966 ns/op
Iteration  11: 8.969 ns/op
Iteration  12: 8.966 ns/op
Iteration  13: 8.966 ns/op
Iteration  14: 8.967 ns/op
Iteration  15: 8.966 ns/op
Iteration  16: 8.966 ns/op
Iteration  17: 8.965 ns/op
Iteration  18: 8.967 ns/op
Iteration  19: 8.965 ns/op
Iteration  20: 8.970 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.521 ns/op
# Warmup Iteration   2: 8.982 ns/op
# Warmup Iteration   3: 9.014 ns/op
# Warmup Iteration   4: 9.013 ns/op
# Warmup Iteration   5: 9.018 ns/op
Iteration   1: 9.015 ns/op
Iteration   2: 9.015 ns/op
Iteration   3: 9.016 ns/op
Iteration   4: 9.016 ns/op
Iteration   5: 9.014 ns/op
Iteration   6: 9.023 ns/op
Iteration   7: 9.014 ns/op
Iteration   8: 9.030 ns/op
Iteration   9: 9.015 ns/op
Iteration  10: 9.016 ns/op
Iteration  11: 9.017 ns/op
Iteration  12: 9.013 ns/op
Iteration  13: 9.017 ns/op
Iteration  14: 9.014 ns/op
Iteration  15: 9.013 ns/op
Iteration  16: 9.015 ns/op
Iteration  17: 9.014 ns/op
Iteration  18: 9.010 ns/op
Iteration  19: 9.020 ns/op
Iteration  20: 9.029 ns/op


Result "benchmark.StringContains.stringContains":
  8.977 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (8.959, 8.977, 9.030), stdev = 0.020
  CI (99.9%): [8.970, 8.984] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches       http   L7sS  avgt  100  88.692 ± 0.909  ns/op
StringContains.stringContains     http   L7sS  avgt  100   8.977 ± 0.007  ns/op

Benchmark result is saved to http_4_1_7.csv
