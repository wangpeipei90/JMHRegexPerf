# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = 2P0gb=*$*l)lEzcQ|WH",Cm)http3^dS)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 259.962 ns/op
# Warmup Iteration   2: 206.682 ns/op
# Warmup Iteration   3: 181.478 ns/op
# Warmup Iteration   4: 181.943 ns/op
# Warmup Iteration   5: 182.843 ns/op
Iteration   1: 183.806 ns/op
Iteration   2: 185.067 ns/op
Iteration   3: 179.711 ns/op
Iteration   4: 180.501 ns/op
Iteration   5: 180.426 ns/op
Iteration   6: 180.643 ns/op
Iteration   7: 180.551 ns/op
Iteration   8: 180.516 ns/op
Iteration   9: 180.463 ns/op
Iteration  10: 179.761 ns/op
Iteration  11: 180.634 ns/op
Iteration  12: 180.505 ns/op
Iteration  13: 180.469 ns/op
Iteration  14: 180.136 ns/op
Iteration  15: 180.156 ns/op
Iteration  16: 180.228 ns/op
Iteration  17: 180.255 ns/op
Iteration  18: 179.705 ns/op
Iteration  19: 180.160 ns/op
Iteration  20: 180.208 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 267.681 ns/op
# Warmup Iteration   2: 221.158 ns/op
# Warmup Iteration   3: 194.513 ns/op
# Warmup Iteration   4: 194.953 ns/op
# Warmup Iteration   5: 195.952 ns/op
Iteration   1: 192.935 ns/op
Iteration   2: 196.753 ns/op
Iteration   3: 198.025 ns/op
Iteration   4: 193.424 ns/op
Iteration   5: 193.443 ns/op
Iteration   6: 192.678 ns/op
Iteration   7: 193.381 ns/op
Iteration   8: 193.231 ns/op
Iteration   9: 193.348 ns/op
Iteration  10: 193.311 ns/op
Iteration  11: 192.218 ns/op
Iteration  12: 193.349 ns/op
Iteration  13: 193.472 ns/op
Iteration  14: 193.453 ns/op
Iteration  15: 193.572 ns/op
Iteration  16: 192.578 ns/op
Iteration  17: 192.992 ns/op
Iteration  18: 193.063 ns/op
Iteration  19: 193.092 ns/op
Iteration  20: 193.257 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 270.568 ns/op
# Warmup Iteration   2: 220.221 ns/op
# Warmup Iteration   3: 193.717 ns/op
# Warmup Iteration   4: 194.253 ns/op
# Warmup Iteration   5: 195.095 ns/op
Iteration   1: 192.348 ns/op
Iteration   2: 197.714 ns/op
Iteration   3: 197.594 ns/op
Iteration   4: 192.739 ns/op
Iteration   5: 192.724 ns/op
Iteration   6: 191.845 ns/op
Iteration   7: 192.653 ns/op
Iteration   8: 192.713 ns/op
Iteration   9: 192.797 ns/op
Iteration  10: 192.876 ns/op
Iteration  11: 191.865 ns/op
Iteration  12: 192.820 ns/op
Iteration  13: 192.761 ns/op
Iteration  14: 192.661 ns/op
Iteration  15: 192.589 ns/op
Iteration  16: 192.539 ns/op
Iteration  17: 191.970 ns/op
Iteration  18: 192.433 ns/op
Iteration  19: 192.524 ns/op
Iteration  20: 192.576 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 269.890 ns/op
# Warmup Iteration   2: 222.079 ns/op
# Warmup Iteration   3: 193.695 ns/op
# Warmup Iteration   4: 194.240 ns/op
# Warmup Iteration   5: 195.227 ns/op
Iteration   1: 191.970 ns/op
Iteration   2: 196.245 ns/op
Iteration   3: 197.020 ns/op
Iteration   4: 192.611 ns/op
Iteration   5: 192.729 ns/op
Iteration   6: 191.844 ns/op
Iteration   7: 192.481 ns/op
Iteration   8: 192.904 ns/op
Iteration   9: 192.666 ns/op
Iteration  10: 192.746 ns/op
Iteration  11: 191.628 ns/op
Iteration  12: 192.837 ns/op
Iteration  13: 192.990 ns/op
Iteration  14: 194.010 ns/op
Iteration  15: 192.963 ns/op
Iteration  16: 192.221 ns/op
Iteration  17: 191.726 ns/op
Iteration  18: 192.223 ns/op
Iteration  19: 192.244 ns/op
Iteration  20: 192.273 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 270.051 ns/op
# Warmup Iteration   2: 219.150 ns/op
# Warmup Iteration   3: 193.703 ns/op
# Warmup Iteration   4: 194.360 ns/op
# Warmup Iteration   5: 195.153 ns/op
Iteration   1: 191.906 ns/op
Iteration   2: 196.098 ns/op
Iteration   3: 197.519 ns/op
Iteration   4: 192.887 ns/op
Iteration   5: 192.789 ns/op
Iteration   6: 191.858 ns/op
Iteration   7: 192.775 ns/op
Iteration   8: 192.729 ns/op
Iteration   9: 192.893 ns/op
Iteration  10: 193.119 ns/op
Iteration  11: 193.148 ns/op
Iteration  12: 193.792 ns/op
Iteration  13: 194.908 ns/op
Iteration  14: 193.597 ns/op
Iteration  15: 193.416 ns/op
Iteration  16: 192.688 ns/op
Iteration  17: 191.958 ns/op
Iteration  18: 192.365 ns/op
Iteration  19: 192.372 ns/op
Iteration  20: 192.557 ns/op


Result "benchmark.StringContains.regexMatches":
  190.699 ±(99.9%) 1.771 ns/op [Average]
  (min, avg, max) = (179.705, 190.699, 198.025), stdev = 5.222
  CI (99.9%): [188.928, 192.470] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = 2P0gb=*$*l)lEzcQ|WH",Cm)http3^dS)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.293 ns/op
# Warmup Iteration   2: 12.439 ns/op
# Warmup Iteration   3: 12.380 ns/op
# Warmup Iteration   4: 12.395 ns/op
# Warmup Iteration   5: 12.351 ns/op
Iteration   1: 12.386 ns/op
Iteration   2: 12.393 ns/op
Iteration   3: 12.382 ns/op
Iteration   4: 12.395 ns/op
Iteration   5: 12.343 ns/op
Iteration   6: 12.434 ns/op
Iteration   7: 12.358 ns/op
Iteration   8: 12.411 ns/op
Iteration   9: 12.433 ns/op
Iteration  10: 12.430 ns/op
Iteration  11: 12.370 ns/op
Iteration  12: 12.378 ns/op
Iteration  13: 12.425 ns/op
Iteration  14: 12.411 ns/op
Iteration  15: 12.413 ns/op
Iteration  16: 12.378 ns/op
Iteration  17: 12.402 ns/op
Iteration  18: 12.383 ns/op
Iteration  19: 12.380 ns/op
Iteration  20: 12.407 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 12.006 ns/op
# Warmup Iteration   2: 12.572 ns/op
# Warmup Iteration   3: 12.133 ns/op
# Warmup Iteration   4: 12.136 ns/op
# Warmup Iteration   5: 12.138 ns/op
Iteration   1: 12.126 ns/op
Iteration   2: 12.140 ns/op
Iteration   3: 12.151 ns/op
Iteration   4: 12.139 ns/op
Iteration   5: 12.140 ns/op
Iteration   6: 12.131 ns/op
Iteration   7: 12.142 ns/op
Iteration   8: 12.131 ns/op
Iteration   9: 12.125 ns/op
Iteration  10: 12.148 ns/op
Iteration  11: 12.128 ns/op
Iteration  12: 12.141 ns/op
Iteration  13: 12.125 ns/op
Iteration  14: 12.130 ns/op
Iteration  15: 12.126 ns/op
Iteration  16: 12.125 ns/op
Iteration  17: 12.143 ns/op
Iteration  18: 12.140 ns/op
Iteration  19: 12.137 ns/op
Iteration  20: 12.139 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.332 ns/op
# Warmup Iteration   2: 12.532 ns/op
# Warmup Iteration   3: 12.299 ns/op
# Warmup Iteration   4: 12.312 ns/op
# Warmup Iteration   5: 12.282 ns/op
Iteration   1: 12.274 ns/op
Iteration   2: 12.276 ns/op
Iteration   3: 12.259 ns/op
Iteration   4: 12.273 ns/op
Iteration   5: 12.307 ns/op
Iteration   6: 12.266 ns/op
Iteration   7: 12.278 ns/op
Iteration   8: 12.287 ns/op
Iteration   9: 12.317 ns/op
Iteration  10: 12.275 ns/op
Iteration  11: 12.281 ns/op
Iteration  12: 12.869 ns/op
Iteration  13: 12.881 ns/op
Iteration  14: 12.865 ns/op
Iteration  15: 12.862 ns/op
Iteration  16: 12.862 ns/op
Iteration  17: 12.870 ns/op
Iteration  18: 12.866 ns/op
Iteration  19: 12.877 ns/op
Iteration  20: 12.868 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 12.067 ns/op
# Warmup Iteration   2: 12.458 ns/op
# Warmup Iteration   3: 12.379 ns/op
# Warmup Iteration   4: 12.322 ns/op
# Warmup Iteration   5: 12.399 ns/op
Iteration   1: 12.377 ns/op
Iteration   2: 12.357 ns/op
Iteration   3: 12.388 ns/op
Iteration   4: 12.373 ns/op
Iteration   5: 12.373 ns/op
Iteration   6: 12.391 ns/op
Iteration   7: 12.360 ns/op
Iteration   8: 12.374 ns/op
Iteration   9: 12.375 ns/op
Iteration  10: 12.360 ns/op
Iteration  11: 12.395 ns/op
Iteration  12: 12.911 ns/op
Iteration  13: 12.911 ns/op
Iteration  14: 12.906 ns/op
Iteration  15: 12.904 ns/op
Iteration  16: 12.908 ns/op
Iteration  17: 12.904 ns/op
Iteration  18: 12.904 ns/op
Iteration  19: 12.906 ns/op
Iteration  20: 12.904 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.286 ns/op
# Warmup Iteration   2: 12.612 ns/op
# Warmup Iteration   3: 12.478 ns/op
# Warmup Iteration   4: 12.519 ns/op
# Warmup Iteration   5: 12.488 ns/op
Iteration   1: 12.480 ns/op
Iteration   2: 12.508 ns/op
Iteration   3: 12.295 ns/op
Iteration   4: 12.491 ns/op
Iteration   5: 12.484 ns/op
Iteration   6: 12.477 ns/op
Iteration   7: 12.482 ns/op
Iteration   8: 12.450 ns/op
Iteration   9: 12.467 ns/op
Iteration  10: 12.457 ns/op
Iteration  11: 12.467 ns/op
Iteration  12: 12.494 ns/op
Iteration  13: 12.469 ns/op
Iteration  14: 12.479 ns/op
Iteration  15: 12.443 ns/op
Iteration  16: 12.459 ns/op
Iteration  17: 12.488 ns/op
Iteration  18: 12.453 ns/op
Iteration  19: 12.454 ns/op
Iteration  20: 12.434 ns/op


Result "benchmark.StringContains.stringContains":
  12.430 ±(99.9%) 0.083 ns/op [Average]
  (min, avg, max) = (12.125, 12.430, 12.911), stdev = 0.244
  CI (99.9%): [12.348, 12.513] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  2P0gb=*$*l)lEzcQ|WH",Cm)http3^dS  avgt  100  190.699 ± 1.771  ns/op
StringContains.stringContains     http  2P0gb=*$*l)lEzcQ|WH",Cm)http3^dS  avgt  100   12.430 ± 0.083  ns/op

Benchmark result is saved to http_32_0.75_9.csv
