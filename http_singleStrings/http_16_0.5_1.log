# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = b3,OHEw-http*^U6)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 263.377 ns/op
# Warmup Iteration   2: 207.302 ns/op
# Warmup Iteration   3: 181.940 ns/op
# Warmup Iteration   4: 182.744 ns/op
# Warmup Iteration   5: 183.389 ns/op
Iteration   1: 184.591 ns/op
Iteration   2: 185.937 ns/op
Iteration   3: 179.942 ns/op
Iteration   4: 181.054 ns/op
Iteration   5: 180.984 ns/op
Iteration   6: 181.691 ns/op
Iteration   7: 181.571 ns/op
Iteration   8: 180.647 ns/op
Iteration   9: 180.696 ns/op
Iteration  10: 179.837 ns/op
Iteration  11: 180.782 ns/op
Iteration  12: 181.574 ns/op
Iteration  13: 180.865 ns/op
Iteration  14: 181.351 ns/op
Iteration  15: 182.161 ns/op
Iteration  16: 180.557 ns/op
Iteration  17: 179.849 ns/op
Iteration  18: 180.242 ns/op
Iteration  19: 180.367 ns/op
Iteration  20: 180.628 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 244.750 ns/op
# Warmup Iteration   2: 179.826 ns/op
# Warmup Iteration   3: 152.435 ns/op
# Warmup Iteration   4: 153.266 ns/op
# Warmup Iteration   5: 155.476 ns/op
Iteration   1: 155.571 ns/op
Iteration   2: 154.037 ns/op
Iteration   3: 151.141 ns/op
Iteration   4: 151.657 ns/op
Iteration   5: 151.846 ns/op
Iteration   6: 151.435 ns/op
Iteration   7: 152.868 ns/op
Iteration   8: 151.173 ns/op
Iteration   9: 151.154 ns/op
Iteration  10: 151.182 ns/op
Iteration  11: 151.446 ns/op
Iteration  12: 150.792 ns/op
Iteration  13: 150.808 ns/op
Iteration  14: 150.809 ns/op
Iteration  15: 150.651 ns/op
Iteration  16: 151.785 ns/op
Iteration  17: 150.627 ns/op
Iteration  18: 150.611 ns/op
Iteration  19: 150.596 ns/op
Iteration  20: 150.606 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 267.981 ns/op
# Warmup Iteration   2: 220.660 ns/op
# Warmup Iteration   3: 194.253 ns/op
# Warmup Iteration   4: 194.784 ns/op
# Warmup Iteration   5: 195.942 ns/op
Iteration   1: 192.294 ns/op
Iteration   2: 196.544 ns/op
Iteration   3: 197.872 ns/op
Iteration   4: 193.380 ns/op
Iteration   5: 193.179 ns/op
Iteration   6: 192.462 ns/op
Iteration   7: 193.266 ns/op
Iteration   8: 193.241 ns/op
Iteration   9: 193.192 ns/op
Iteration  10: 193.068 ns/op
Iteration  11: 192.231 ns/op
Iteration  12: 193.093 ns/op
Iteration  13: 193.022 ns/op
Iteration  14: 194.028 ns/op
Iteration  15: 193.476 ns/op
Iteration  16: 192.499 ns/op
Iteration  17: 192.139 ns/op
Iteration  18: 192.912 ns/op
Iteration  19: 192.685 ns/op
Iteration  20: 192.970 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 268.148 ns/op
# Warmup Iteration   2: 218.684 ns/op
# Warmup Iteration   3: 194.596 ns/op
# Warmup Iteration   4: 196.328 ns/op
# Warmup Iteration   5: 196.095 ns/op
Iteration   1: 192.873 ns/op
Iteration   2: 197.111 ns/op
Iteration   3: 198.233 ns/op
Iteration   4: 193.898 ns/op
Iteration   5: 193.744 ns/op
Iteration   6: 192.830 ns/op
Iteration   7: 193.660 ns/op
Iteration   8: 194.599 ns/op
Iteration   9: 193.767 ns/op
Iteration  10: 193.838 ns/op
Iteration  11: 192.811 ns/op
Iteration  12: 193.817 ns/op
Iteration  13: 193.920 ns/op
Iteration  14: 194.014 ns/op
Iteration  15: 193.234 ns/op
Iteration  16: 192.830 ns/op
Iteration  17: 193.207 ns/op
Iteration  18: 194.067 ns/op
Iteration  19: 193.304 ns/op
Iteration  20: 193.632 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 268.683 ns/op
# Warmup Iteration   2: 219.860 ns/op
# Warmup Iteration   3: 194.390 ns/op
# Warmup Iteration   4: 194.995 ns/op
# Warmup Iteration   5: 195.556 ns/op
Iteration   1: 192.399 ns/op
Iteration   2: 196.790 ns/op
Iteration   3: 197.831 ns/op
Iteration   4: 193.346 ns/op
Iteration   5: 193.212 ns/op
Iteration   6: 192.407 ns/op
Iteration   7: 193.219 ns/op
Iteration   8: 193.334 ns/op
Iteration   9: 193.299 ns/op
Iteration  10: 193.218 ns/op
Iteration  11: 192.374 ns/op
Iteration  12: 193.453 ns/op
Iteration  13: 193.695 ns/op
Iteration  14: 194.924 ns/op
Iteration  15: 192.975 ns/op
Iteration  16: 192.547 ns/op
Iteration  17: 193.497 ns/op
Iteration  18: 192.954 ns/op
Iteration  19: 193.116 ns/op
Iteration  20: 193.261 ns/op


Result "benchmark.StringContains.regexMatches":
  182.749 ±(99.9%) 5.584 ns/op [Average]
  (min, avg, max) = (150.596, 182.749, 198.233), stdev = 16.465
  CI (99.9%): [177.165, 188.333] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = b3,OHEw-http*^U6)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.461 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.948 ns/op
# Warmup Iteration   4: 9.924 ns/op
# Warmup Iteration   5: 9.924 ns/op
Iteration   1: 9.955 ns/op
Iteration   2: 9.945 ns/op
Iteration   3: 9.959 ns/op
Iteration   4: 9.954 ns/op
Iteration   5: 9.961 ns/op
Iteration   6: 9.969 ns/op
Iteration   7: 9.967 ns/op
Iteration   8: 9.938 ns/op
Iteration   9: 9.966 ns/op
Iteration  10: 9.957 ns/op
Iteration  11: 9.954 ns/op
Iteration  12: 9.954 ns/op
Iteration  13: 9.946 ns/op
Iteration  14: 9.940 ns/op
Iteration  15: 9.953 ns/op
Iteration  16: 9.950 ns/op
Iteration  17: 9.958 ns/op
Iteration  18: 9.968 ns/op
Iteration  19: 9.932 ns/op
Iteration  20: 9.948 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.494 ns/op
# Warmup Iteration   2: 9.727 ns/op
# Warmup Iteration   3: 9.943 ns/op
# Warmup Iteration   4: 9.913 ns/op
# Warmup Iteration   5: 9.916 ns/op
Iteration   1: 9.934 ns/op
Iteration   2: 9.884 ns/op
Iteration   3: 9.849 ns/op
Iteration   4: 9.877 ns/op
Iteration   5: 9.861 ns/op
Iteration   6: 9.866 ns/op
Iteration   7: 9.859 ns/op
Iteration   8: 9.882 ns/op
Iteration   9: 9.866 ns/op
Iteration  10: 9.860 ns/op
Iteration  11: 9.858 ns/op
Iteration  12: 9.866 ns/op
Iteration  13: 9.876 ns/op
Iteration  14: 9.915 ns/op
Iteration  15: 9.879 ns/op
Iteration  16: 9.885 ns/op
Iteration  17: 9.866 ns/op
Iteration  18: 9.872 ns/op
Iteration  19: 9.877 ns/op
Iteration  20: 9.879 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.490 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.884 ns/op
# Warmup Iteration   4: 9.865 ns/op
# Warmup Iteration   5: 9.874 ns/op
Iteration   1: 9.871 ns/op
Iteration   2: 9.854 ns/op
Iteration   3: 9.852 ns/op
Iteration   4: 9.852 ns/op
Iteration   5: 9.861 ns/op
Iteration   6: 9.851 ns/op
Iteration   7: 9.853 ns/op
Iteration   8: 9.853 ns/op
Iteration   9: 9.858 ns/op
Iteration  10: 9.840 ns/op
Iteration  11: 9.867 ns/op
Iteration  12: 9.864 ns/op
Iteration  13: 9.869 ns/op
Iteration  14: 9.844 ns/op
Iteration  15: 9.839 ns/op
Iteration  16: 9.862 ns/op
Iteration  17: 9.861 ns/op
Iteration  18: 9.861 ns/op
Iteration  19: 9.854 ns/op
Iteration  20: 9.841 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.505 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.762 ns/op
# Warmup Iteration   4: 9.757 ns/op
# Warmup Iteration   5: 9.759 ns/op
Iteration   1: 9.756 ns/op
Iteration   2: 9.763 ns/op
Iteration   3: 9.768 ns/op
Iteration   4: 9.759 ns/op
Iteration   5: 9.754 ns/op
Iteration   6: 9.772 ns/op
Iteration   7: 9.772 ns/op
Iteration   8: 9.767 ns/op
Iteration   9: 9.770 ns/op
Iteration  10: 9.771 ns/op
Iteration  11: 9.763 ns/op
Iteration  12: 9.770 ns/op
Iteration  13: 9.758 ns/op
Iteration  14: 9.774 ns/op
Iteration  15: 9.763 ns/op
Iteration  16: 9.770 ns/op
Iteration  17: 9.758 ns/op
Iteration  18: 9.767 ns/op
Iteration  19: 9.754 ns/op
Iteration  20: 9.746 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.225 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.847 ns/op
# Warmup Iteration   4: 9.833 ns/op
# Warmup Iteration   5: 9.833 ns/op
Iteration   1: 9.824 ns/op
Iteration   2: 9.822 ns/op
Iteration   3: 9.828 ns/op
Iteration   4: 9.830 ns/op
Iteration   5: 9.822 ns/op
Iteration   6: 9.817 ns/op
Iteration   7: 9.830 ns/op
Iteration   8: 9.843 ns/op
Iteration   9: 9.832 ns/op
Iteration  10: 9.831 ns/op
Iteration  11: 9.821 ns/op
Iteration  12: 9.837 ns/op
Iteration  13: 9.822 ns/op
Iteration  14: 9.841 ns/op
Iteration  15: 9.837 ns/op
Iteration  16: 9.828 ns/op
Iteration  17: 9.821 ns/op
Iteration  18: 9.828 ns/op
Iteration  19: 9.840 ns/op
Iteration  20: 9.839 ns/op


Result "benchmark.StringContains.stringContains":
  9.856 ±(99.9%) 0.021 ns/op [Average]
  (min, avg, max) = (9.746, 9.856, 9.969), stdev = 0.063
  CI (99.9%): [9.834, 9.877] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  b3,OHEw-http*^U6  avgt  100  182.749 ± 5.584  ns/op
StringContains.stringContains     http  b3,OHEw-http*^U6  avgt  100    9.856 ± 0.021  ns/op

Benchmark result is saved to http_16_0.5_1.csv
