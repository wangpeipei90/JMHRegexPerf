# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = n	8%3s*$Si2P8tUhttp2[G{-u]QSkmM)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 356.956 ns/op
# Warmup Iteration   2: 356.599 ns/op
# Warmup Iteration   3: 281.435 ns/op
# Warmup Iteration   4: 272.806 ns/op
# Warmup Iteration   5: 270.386 ns/op
Iteration   1: 274.476 ns/op
Iteration   2: 275.345 ns/op
Iteration   3: 270.726 ns/op
Iteration   4: 277.579 ns/op
Iteration   5: 270.751 ns/op
Iteration   6: 279.599 ns/op
Iteration   7: 270.512 ns/op
Iteration   8: 271.748 ns/op
Iteration   9: 272.063 ns/op
Iteration  10: 271.724 ns/op
Iteration  11: 271.970 ns/op
Iteration  12: 270.170 ns/op
Iteration  13: 273.286 ns/op
Iteration  14: 273.626 ns/op
Iteration  15: 270.426 ns/op
Iteration  16: 271.566 ns/op
Iteration  17: 270.324 ns/op
Iteration  18: 271.939 ns/op
Iteration  19: 270.577 ns/op
Iteration  20: 272.167 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 352.203 ns/op
# Warmup Iteration   2: 360.845 ns/op
# Warmup Iteration   3: 300.314 ns/op
# Warmup Iteration   4: 291.749 ns/op
# Warmup Iteration   5: 289.196 ns/op
Iteration   1: 292.581 ns/op
Iteration   2: 289.110 ns/op
Iteration   3: 293.700 ns/op
Iteration   4: 295.459 ns/op
Iteration   5: 289.126 ns/op
Iteration   6: 297.237 ns/op
Iteration   7: 289.025 ns/op
Iteration   8: 290.405 ns/op
Iteration   9: 288.954 ns/op
Iteration  10: 290.446 ns/op
Iteration  11: 288.709 ns/op
Iteration  12: 290.342 ns/op
Iteration  13: 288.850 ns/op
Iteration  14: 290.418 ns/op
Iteration  15: 288.784 ns/op
Iteration  16: 289.879 ns/op
Iteration  17: 290.853 ns/op
Iteration  18: 288.655 ns/op
Iteration  19: 290.218 ns/op
Iteration  20: 289.057 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 349.808 ns/op
# Warmup Iteration   2: 359.897 ns/op
# Warmup Iteration   3: 280.538 ns/op
# Warmup Iteration   4: 273.132 ns/op
# Warmup Iteration   5: 270.457 ns/op
Iteration   1: 273.953 ns/op
Iteration   2: 275.360 ns/op
Iteration   3: 270.348 ns/op
Iteration   4: 277.010 ns/op
Iteration   5: 270.336 ns/op
Iteration   6: 277.989 ns/op
Iteration   7: 271.690 ns/op
Iteration   8: 270.183 ns/op
Iteration   9: 272.307 ns/op
Iteration  10: 270.327 ns/op
Iteration  11: 271.637 ns/op
Iteration  12: 270.153 ns/op
Iteration  13: 272.248 ns/op
Iteration  14: 271.816 ns/op
Iteration  15: 269.963 ns/op
Iteration  16: 272.040 ns/op
Iteration  17: 270.308 ns/op
Iteration  18: 271.936 ns/op
Iteration  19: 270.678 ns/op
Iteration  20: 272.113 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 355.642 ns/op
# Warmup Iteration   2: 359.478 ns/op
# Warmup Iteration   3: 300.023 ns/op
# Warmup Iteration   4: 292.074 ns/op
# Warmup Iteration   5: 287.875 ns/op
Iteration   1: 292.019 ns/op
Iteration   2: 288.029 ns/op
Iteration   3: 294.753 ns/op
Iteration   4: 295.767 ns/op
Iteration   5: 287.483 ns/op
Iteration   6: 296.425 ns/op
Iteration   7: 288.340 ns/op
Iteration   8: 290.643 ns/op
Iteration   9: 288.100 ns/op
Iteration  10: 289.938 ns/op
Iteration  11: 287.954 ns/op
Iteration  12: 290.541 ns/op
Iteration  13: 287.915 ns/op
Iteration  14: 289.796 ns/op
Iteration  15: 287.919 ns/op
Iteration  16: 291.418 ns/op
Iteration  17: 290.418 ns/op
Iteration  18: 287.811 ns/op
Iteration  19: 291.521 ns/op
Iteration  20: 288.075 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 353.709 ns/op
# Warmup Iteration   2: 353.269 ns/op
# Warmup Iteration   3: 287.134 ns/op
# Warmup Iteration   4: 279.669 ns/op
# Warmup Iteration   5: 276.836 ns/op
Iteration   1: 280.239 ns/op
Iteration   2: 281.465 ns/op
Iteration   3: 276.717 ns/op
Iteration   4: 283.006 ns/op
Iteration   5: 276.948 ns/op
Iteration   6: 284.632 ns/op
Iteration   7: 276.695 ns/op
Iteration   8: 278.681 ns/op
Iteration   9: 276.637 ns/op
Iteration  10: 278.165 ns/op
Iteration  11: 278.326 ns/op
Iteration  12: 276.763 ns/op
Iteration  13: 278.136 ns/op
Iteration  14: 276.743 ns/op
Iteration  15: 278.222 ns/op
Iteration  16: 276.620 ns/op
Iteration  17: 278.547 ns/op
Iteration  18: 278.289 ns/op
Iteration  19: 276.812 ns/op
Iteration  20: 284.491 ns/op


Result "benchmark.StringContains.regexMatches":
  280.858 ±(99.9%) 2.904 ns/op [Average]
  (min, avg, max) = (269.963, 280.858, 297.237), stdev = 8.561
  CI (99.9%): [277.954, 283.761] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = n	8%3s*$Si2P8tUhttp2[G{-u]QSkmM)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 11.300 ns/op
# Warmup Iteration   2: 12.525 ns/op
# Warmup Iteration   3: 12.155 ns/op
# Warmup Iteration   4: 12.130 ns/op
# Warmup Iteration   5: 12.147 ns/op
Iteration   1: 12.134 ns/op
Iteration   2: 12.151 ns/op
Iteration   3: 12.136 ns/op
Iteration   4: 12.164 ns/op
Iteration   5: 12.132 ns/op
Iteration   6: 12.143 ns/op
Iteration   7: 12.151 ns/op
Iteration   8: 12.144 ns/op
Iteration   9: 12.142 ns/op
Iteration  10: 12.136 ns/op
Iteration  11: 12.129 ns/op
Iteration  12: 12.144 ns/op
Iteration  13: 12.144 ns/op
Iteration  14: 12.138 ns/op
Iteration  15: 12.134 ns/op
Iteration  16: 12.162 ns/op
Iteration  17: 12.129 ns/op
Iteration  18: 12.139 ns/op
Iteration  19: 12.136 ns/op
Iteration  20: 12.143 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 11.319 ns/op
# Warmup Iteration   2: 12.520 ns/op
# Warmup Iteration   3: 12.218 ns/op
# Warmup Iteration   4: 12.216 ns/op
# Warmup Iteration   5: 12.214 ns/op
Iteration   1: 12.209 ns/op
Iteration   2: 12.218 ns/op
Iteration   3: 12.204 ns/op
Iteration   4: 12.217 ns/op
Iteration   5: 12.229 ns/op
Iteration   6: 12.222 ns/op
Iteration   7: 12.214 ns/op
Iteration   8: 12.211 ns/op
Iteration   9: 12.229 ns/op
Iteration  10: 12.218 ns/op
Iteration  11: 12.206 ns/op
Iteration  12: 12.838 ns/op
Iteration  13: 12.839 ns/op
Iteration  14: 12.838 ns/op
Iteration  15: 12.838 ns/op
Iteration  16: 12.838 ns/op
Iteration  17: 12.838 ns/op
Iteration  18: 12.839 ns/op
Iteration  19: 12.838 ns/op
Iteration  20: 12.839 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 11.336 ns/op
# Warmup Iteration   2: 12.491 ns/op
# Warmup Iteration   3: 12.122 ns/op
# Warmup Iteration   4: 12.119 ns/op
# Warmup Iteration   5: 12.113 ns/op
Iteration   1: 12.108 ns/op
Iteration   2: 12.112 ns/op
Iteration   3: 12.115 ns/op
Iteration   4: 12.104 ns/op
Iteration   5: 12.104 ns/op
Iteration   6: 12.124 ns/op
Iteration   7: 12.119 ns/op
Iteration   8: 12.132 ns/op
Iteration   9: 12.118 ns/op
Iteration  10: 12.132 ns/op
Iteration  11: 12.126 ns/op
Iteration  12: 12.874 ns/op
Iteration  13: 12.872 ns/op
Iteration  14: 12.874 ns/op
Iteration  15: 12.871 ns/op
Iteration  16: 12.871 ns/op
Iteration  17: 12.873 ns/op
Iteration  18: 12.873 ns/op
Iteration  19: 12.873 ns/op
Iteration  20: 12.891 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 11.318 ns/op
# Warmup Iteration   2: 12.481 ns/op
# Warmup Iteration   3: 12.406 ns/op
# Warmup Iteration   4: 12.366 ns/op
# Warmup Iteration   5: 12.332 ns/op
Iteration   1: 12.368 ns/op
Iteration   2: 12.365 ns/op
Iteration   3: 12.342 ns/op
Iteration   4: 12.353 ns/op
Iteration   5: 12.351 ns/op
Iteration   6: 12.358 ns/op
Iteration   7: 12.339 ns/op
Iteration   8: 12.351 ns/op
Iteration   9: 12.325 ns/op
Iteration  10: 12.376 ns/op
Iteration  11: 12.344 ns/op
Iteration  12: 12.899 ns/op
Iteration  13: 12.903 ns/op
Iteration  14: 12.905 ns/op
Iteration  15: 12.908 ns/op
Iteration  16: 12.915 ns/op
Iteration  17: 12.902 ns/op
Iteration  18: 12.905 ns/op
Iteration  19: 12.908 ns/op
Iteration  20: 12.903 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 11.305 ns/op
# Warmup Iteration   2: 12.481 ns/op
# Warmup Iteration   3: 12.162 ns/op
# Warmup Iteration   4: 12.167 ns/op
# Warmup Iteration   5: 12.169 ns/op
Iteration   1: 12.160 ns/op
Iteration   2: 12.171 ns/op
Iteration   3: 12.164 ns/op
Iteration   4: 12.155 ns/op
Iteration   5: 12.167 ns/op
Iteration   6: 12.178 ns/op
Iteration   7: 12.156 ns/op
Iteration   8: 12.198 ns/op
Iteration   9: 12.175 ns/op
Iteration  10: 12.159 ns/op
Iteration  11: 12.169 ns/op
Iteration  12: 12.187 ns/op
Iteration  13: 12.177 ns/op
Iteration  14: 12.163 ns/op
Iteration  15: 12.172 ns/op
Iteration  16: 12.149 ns/op
Iteration  17: 12.172 ns/op
Iteration  18: 12.157 ns/op
Iteration  19: 12.143 ns/op
Iteration  20: 12.148 ns/op


Result "benchmark.StringContains.stringContains":
  12.373 ±(99.9%) 0.106 ns/op [Average]
  (min, avg, max) = (12.104, 12.373, 12.915), stdev = 0.313
  CI (99.9%): [12.266, 12.479] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  n	8%3s*$Si2P8tUhttp2[G{-u]QSkmM  avgt  100  280.858 ± 2.904  ns/op
StringContains.stringContains     http  n	8%3s*$Si2P8tUhttp2[G{-u]QSkmM  avgt  100   12.373 ± 0.106  ns/op

Benchmark result is saved to http_32_0.5_14.csv
