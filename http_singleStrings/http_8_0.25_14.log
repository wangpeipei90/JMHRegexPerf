# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = @)httpW	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 253.576 ns/op
# Warmup Iteration   2: 192.402 ns/op
# Warmup Iteration   3: 151.619 ns/op
# Warmup Iteration   4: 152.377 ns/op
# Warmup Iteration   5: 152.959 ns/op
Iteration   1: 154.263 ns/op
Iteration   2: 154.821 ns/op
Iteration   3: 150.707 ns/op
Iteration   4: 150.759 ns/op
Iteration   5: 151.501 ns/op
Iteration   6: 151.068 ns/op
Iteration   7: 150.797 ns/op
Iteration   8: 150.753 ns/op
Iteration   9: 150.823 ns/op
Iteration  10: 150.854 ns/op
Iteration  11: 150.758 ns/op
Iteration  12: 150.187 ns/op
Iteration  13: 150.181 ns/op
Iteration  14: 150.238 ns/op
Iteration  15: 150.220 ns/op
Iteration  16: 150.500 ns/op
Iteration  17: 150.201 ns/op
Iteration  18: 150.306 ns/op
Iteration  19: 150.962 ns/op
Iteration  20: 150.234 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 242.603 ns/op
# Warmup Iteration   2: 178.360 ns/op
# Warmup Iteration   3: 151.273 ns/op
# Warmup Iteration   4: 152.658 ns/op
# Warmup Iteration   5: 155.542 ns/op
Iteration   1: 153.787 ns/op
Iteration   2: 150.693 ns/op
Iteration   3: 150.227 ns/op
Iteration   4: 150.212 ns/op
Iteration   5: 150.361 ns/op
Iteration   6: 150.218 ns/op
Iteration   7: 150.338 ns/op
Iteration   8: 150.446 ns/op
Iteration   9: 150.800 ns/op
Iteration  10: 150.281 ns/op
Iteration  11: 149.835 ns/op
Iteration  12: 149.903 ns/op
Iteration  13: 149.793 ns/op
Iteration  14: 149.708 ns/op
Iteration  15: 150.376 ns/op
Iteration  16: 149.811 ns/op
Iteration  17: 149.763 ns/op
Iteration  18: 149.789 ns/op
Iteration  19: 149.793 ns/op
Iteration  20: 149.832 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 237.709 ns/op
# Warmup Iteration   2: 176.897 ns/op
# Warmup Iteration   3: 151.980 ns/op
# Warmup Iteration   4: 152.501 ns/op
# Warmup Iteration   5: 156.441 ns/op
Iteration   1: 154.737 ns/op
Iteration   2: 151.331 ns/op
Iteration   3: 151.142 ns/op
Iteration   4: 151.178 ns/op
Iteration   5: 151.291 ns/op
Iteration   6: 151.312 ns/op
Iteration   7: 151.115 ns/op
Iteration   8: 151.044 ns/op
Iteration   9: 150.923 ns/op
Iteration  10: 151.114 ns/op
Iteration  11: 150.696 ns/op
Iteration  12: 150.695 ns/op
Iteration  13: 150.602 ns/op
Iteration  14: 150.611 ns/op
Iteration  15: 150.652 ns/op
Iteration  16: 150.681 ns/op
Iteration  17: 150.673 ns/op
Iteration  18: 150.761 ns/op
Iteration  19: 150.672 ns/op
Iteration  20: 150.788 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 252.311 ns/op
# Warmup Iteration   2: 199.657 ns/op
# Warmup Iteration   3: 167.413 ns/op
# Warmup Iteration   4: 167.653 ns/op
# Warmup Iteration   5: 168.315 ns/op
Iteration   1: 169.224 ns/op
Iteration   2: 170.451 ns/op
Iteration   3: 166.889 ns/op
Iteration   4: 166.621 ns/op
Iteration   5: 166.639 ns/op
Iteration   6: 166.281 ns/op
Iteration   7: 166.220 ns/op
Iteration   8: 166.285 ns/op
Iteration   9: 166.683 ns/op
Iteration  10: 165.575 ns/op
Iteration  11: 167.629 ns/op
Iteration  12: 166.484 ns/op
Iteration  13: 165.893 ns/op
Iteration  14: 166.633 ns/op
Iteration  15: 166.702 ns/op
Iteration  16: 166.218 ns/op
Iteration  17: 166.343 ns/op
Iteration  18: 165.956 ns/op
Iteration  19: 166.382 ns/op
Iteration  20: 166.480 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 240.128 ns/op
# Warmup Iteration   2: 178.534 ns/op
# Warmup Iteration   3: 151.172 ns/op
# Warmup Iteration   4: 152.526 ns/op
# Warmup Iteration   5: 155.646 ns/op
Iteration   1: 154.021 ns/op
Iteration   2: 150.482 ns/op
Iteration   3: 150.352 ns/op
Iteration   4: 150.403 ns/op
Iteration   5: 150.339 ns/op
Iteration   6: 150.289 ns/op
Iteration   7: 150.429 ns/op
Iteration   8: 150.407 ns/op
Iteration   9: 150.435 ns/op
Iteration  10: 150.354 ns/op
Iteration  11: 150.050 ns/op
Iteration  12: 150.114 ns/op
Iteration  13: 150.170 ns/op
Iteration  14: 151.003 ns/op
Iteration  15: 150.099 ns/op
Iteration  16: 150.012 ns/op
Iteration  17: 150.076 ns/op
Iteration  18: 149.959 ns/op
Iteration  19: 150.290 ns/op
Iteration  20: 150.567 ns/op


Result "benchmark.StringContains.regexMatches":
  153.936 ±(99.9%) 2.218 ns/op [Average]
  (min, avg, max) = (149.708, 153.936, 170.451), stdev = 6.539
  CI (99.9%): [151.718, 156.153] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = @)httpW	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.067 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.891 ns/op
# Warmup Iteration   4: 9.886 ns/op
# Warmup Iteration   5: 9.902 ns/op
Iteration   1: 9.908 ns/op
Iteration   2: 9.899 ns/op
Iteration   3: 9.901 ns/op
Iteration   4: 9.890 ns/op
Iteration   5: 9.901 ns/op
Iteration   6: 9.897 ns/op
Iteration   7: 9.901 ns/op
Iteration   8: 9.876 ns/op
Iteration   9: 9.895 ns/op
Iteration  10: 9.895 ns/op
Iteration  11: 9.889 ns/op
Iteration  12: 9.897 ns/op
Iteration  13: 9.901 ns/op
Iteration  14: 9.901 ns/op
Iteration  15: 9.884 ns/op
Iteration  16: 9.891 ns/op
Iteration  17: 9.899 ns/op
Iteration  18: 9.891 ns/op
Iteration  19: 9.873 ns/op
Iteration  20: 9.891 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.374 ns/op
# Warmup Iteration   2: 10.472 ns/op
# Warmup Iteration   3: 9.884 ns/op
# Warmup Iteration   4: 9.874 ns/op
# Warmup Iteration   5: 9.887 ns/op
Iteration   1: 9.891 ns/op
Iteration   2: 9.873 ns/op
Iteration   3: 9.896 ns/op
Iteration   4: 9.893 ns/op
Iteration   5: 9.884 ns/op
Iteration   6: 9.890 ns/op
Iteration   7: 9.887 ns/op
Iteration   8: 9.905 ns/op
Iteration   9: 9.887 ns/op
Iteration  10: 9.884 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.883 ns/op
Iteration  13: 9.881 ns/op
Iteration  14: 9.868 ns/op
Iteration  15: 9.887 ns/op
Iteration  16: 9.889 ns/op
Iteration  17: 9.872 ns/op
Iteration  18: 9.881 ns/op
Iteration  19: 9.878 ns/op
Iteration  20: 9.891 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.043 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.943 ns/op
# Warmup Iteration   4: 9.942 ns/op
# Warmup Iteration   5: 9.951 ns/op
Iteration   1: 9.951 ns/op
Iteration   2: 9.935 ns/op
Iteration   3: 9.946 ns/op
Iteration   4: 9.924 ns/op
Iteration   5: 9.934 ns/op
Iteration   6: 9.937 ns/op
Iteration   7: 9.940 ns/op
Iteration   8: 9.936 ns/op
Iteration   9: 9.936 ns/op
Iteration  10: 9.955 ns/op
Iteration  11: 9.952 ns/op
Iteration  12: 9.953 ns/op
Iteration  13: 9.933 ns/op
Iteration  14: 9.939 ns/op
Iteration  15: 9.937 ns/op
Iteration  16: 9.943 ns/op
Iteration  17: 9.935 ns/op
Iteration  18: 9.937 ns/op
Iteration  19: 9.940 ns/op
Iteration  20: 9.941 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.044 ns/op
# Warmup Iteration   2: 10.478 ns/op
# Warmup Iteration   3: 9.921 ns/op
# Warmup Iteration   4: 9.920 ns/op
# Warmup Iteration   5: 9.908 ns/op
Iteration   1: 9.924 ns/op
Iteration   2: 9.894 ns/op
Iteration   3: 9.898 ns/op
Iteration   4: 9.922 ns/op
Iteration   5: 9.908 ns/op
Iteration   6: 9.898 ns/op
Iteration   7: 9.911 ns/op
Iteration   8: 9.917 ns/op
Iteration   9: 9.915 ns/op
Iteration  10: 9.912 ns/op
Iteration  11: 9.918 ns/op
Iteration  12: 9.927 ns/op
Iteration  13: 9.921 ns/op
Iteration  14: 9.939 ns/op
Iteration  15: 9.906 ns/op
Iteration  16: 9.925 ns/op
Iteration  17: 9.922 ns/op
Iteration  18: 9.932 ns/op
Iteration  19: 9.926 ns/op
Iteration  20: 9.926 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.081 ns/op
# Warmup Iteration   2: 10.472 ns/op
# Warmup Iteration   3: 9.938 ns/op
# Warmup Iteration   4: 9.915 ns/op
# Warmup Iteration   5: 9.931 ns/op
Iteration   1: 9.916 ns/op
Iteration   2: 9.918 ns/op
Iteration   3: 9.915 ns/op
Iteration   4: 9.917 ns/op
Iteration   5: 9.906 ns/op
Iteration   6: 9.905 ns/op
Iteration   7: 9.923 ns/op
Iteration   8: 9.929 ns/op
Iteration   9: 9.905 ns/op
Iteration  10: 9.902 ns/op
Iteration  11: 9.904 ns/op
Iteration  12: 9.923 ns/op
Iteration  13: 9.926 ns/op
Iteration  14: 9.921 ns/op
Iteration  15: 9.929 ns/op
Iteration  16: 9.931 ns/op
Iteration  17: 9.933 ns/op
Iteration  18: 9.923 ns/op
Iteration  19: 9.927 ns/op
Iteration  20: 9.955 ns/op


Result "benchmark.StringContains.stringContains":
  9.911 ±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (9.868, 9.911, 9.955), stdev = 0.022
  CI (99.9%): [9.904, 9.919] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  @)httpW	  avgt  100  153.936 ± 2.218  ns/op
StringContains.stringContains     http  @)httpW	  avgt  100    9.911 ± 0.008  ns/op

Benchmark result is saved to http_8_0.25_14.csv
