# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = http8U7-)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 246.142 ns/op
# Warmup Iteration   2: 193.479 ns/op
# Warmup Iteration   3: 162.890 ns/op
# Warmup Iteration   4: 163.122 ns/op
# Warmup Iteration   5: 163.772 ns/op
Iteration   1: 164.782 ns/op
Iteration   2: 165.742 ns/op
Iteration   3: 162.138 ns/op
Iteration   4: 161.865 ns/op
Iteration   5: 161.921 ns/op
Iteration   6: 161.803 ns/op
Iteration   7: 161.870 ns/op
Iteration   8: 161.895 ns/op
Iteration   9: 161.774 ns/op
Iteration  10: 163.199 ns/op
Iteration  11: 162.119 ns/op
Iteration  12: 162.133 ns/op
Iteration  13: 162.096 ns/op
Iteration  14: 161.546 ns/op
Iteration  15: 161.590 ns/op
Iteration  16: 161.567 ns/op
Iteration  17: 161.875 ns/op
Iteration  18: 161.621 ns/op
Iteration  19: 161.609 ns/op
Iteration  20: 161.186 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 247.162 ns/op
# Warmup Iteration   2: 184.714 ns/op
# Warmup Iteration   3: 155.107 ns/op
# Warmup Iteration   4: 156.018 ns/op
# Warmup Iteration   5: 156.383 ns/op
Iteration   1: 157.276 ns/op
Iteration   2: 158.142 ns/op
Iteration   3: 154.500 ns/op
Iteration   4: 154.499 ns/op
Iteration   5: 154.454 ns/op
Iteration   6: 154.437 ns/op
Iteration   7: 154.550 ns/op
Iteration   8: 154.505 ns/op
Iteration   9: 154.419 ns/op
Iteration  10: 154.518 ns/op
Iteration  11: 154.493 ns/op
Iteration  12: 154.002 ns/op
Iteration  13: 153.952 ns/op
Iteration  14: 153.952 ns/op
Iteration  15: 154.343 ns/op
Iteration  16: 154.060 ns/op
Iteration  17: 154.105 ns/op
Iteration  18: 154.020 ns/op
Iteration  19: 154.086 ns/op
Iteration  20: 153.931 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 241.120 ns/op
# Warmup Iteration   2: 182.794 ns/op
# Warmup Iteration   3: 154.537 ns/op
# Warmup Iteration   4: 155.034 ns/op
# Warmup Iteration   5: 155.442 ns/op
Iteration   1: 156.541 ns/op
Iteration   2: 157.269 ns/op
Iteration   3: 153.845 ns/op
Iteration   4: 153.513 ns/op
Iteration   5: 153.508 ns/op
Iteration   6: 153.641 ns/op
Iteration   7: 153.703 ns/op
Iteration   8: 154.384 ns/op
Iteration   9: 153.696 ns/op
Iteration  10: 153.721 ns/op
Iteration  11: 153.373 ns/op
Iteration  12: 153.332 ns/op
Iteration  13: 153.318 ns/op
Iteration  14: 153.326 ns/op
Iteration  15: 153.502 ns/op
Iteration  16: 153.419 ns/op
Iteration  17: 153.346 ns/op
Iteration  18: 153.672 ns/op
Iteration  19: 153.473 ns/op
Iteration  20: 153.527 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 242.684 ns/op
# Warmup Iteration   2: 187.490 ns/op
# Warmup Iteration   3: 158.844 ns/op
# Warmup Iteration   4: 159.278 ns/op
# Warmup Iteration   5: 159.783 ns/op
Iteration   1: 160.744 ns/op
Iteration   2: 161.745 ns/op
Iteration   3: 158.066 ns/op
Iteration   4: 158.161 ns/op
Iteration   5: 157.975 ns/op
Iteration   6: 158.001 ns/op
Iteration   7: 157.939 ns/op
Iteration   8: 157.937 ns/op
Iteration   9: 158.011 ns/op
Iteration  10: 158.035 ns/op
Iteration  11: 158.547 ns/op
Iteration  12: 157.706 ns/op
Iteration  13: 157.615 ns/op
Iteration  14: 157.648 ns/op
Iteration  15: 157.619 ns/op
Iteration  16: 157.949 ns/op
Iteration  17: 159.537 ns/op
Iteration  18: 157.901 ns/op
Iteration  19: 158.229 ns/op
Iteration  20: 158.037 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 242.359 ns/op
# Warmup Iteration   2: 187.301 ns/op
# Warmup Iteration   3: 172.699 ns/op
# Warmup Iteration   4: 173.582 ns/op
# Warmup Iteration   5: 174.112 ns/op
Iteration   1: 174.920 ns/op
Iteration   2: 176.187 ns/op
Iteration   3: 172.327 ns/op
Iteration   4: 172.048 ns/op
Iteration   5: 172.946 ns/op
Iteration   6: 172.254 ns/op
Iteration   7: 171.326 ns/op
Iteration   8: 172.069 ns/op
Iteration   9: 172.095 ns/op
Iteration  10: 172.170 ns/op
Iteration  11: 172.815 ns/op
Iteration  12: 172.428 ns/op
Iteration  13: 178.019 ns/op
Iteration  14: 171.568 ns/op
Iteration  15: 171.592 ns/op
Iteration  16: 171.557 ns/op
Iteration  17: 171.088 ns/op
Iteration  18: 171.818 ns/op
Iteration  19: 171.539 ns/op
Iteration  20: 171.652 ns/op


Result "benchmark.StringContains.regexMatches":
  160.345 ±(99.9%) 2.361 ns/op [Average]
  (min, avg, max) = (153.318, 160.345, 178.019), stdev = 6.961
  CI (99.9%): [157.984, 162.706] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = http8U7-)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.077 ns/op
# Warmup Iteration   2: 10.460 ns/op
# Warmup Iteration   3: 9.996 ns/op
# Warmup Iteration   4: 10.112 ns/op
# Warmup Iteration   5: 10.075 ns/op
Iteration   1: 10.034 ns/op
Iteration   2: 10.049 ns/op
Iteration   3: 10.078 ns/op
Iteration   4: 10.042 ns/op
Iteration   5: 10.072 ns/op
Iteration   6: 10.157 ns/op
Iteration   7: 10.155 ns/op
Iteration   8: 10.151 ns/op
Iteration   9: 10.140 ns/op
Iteration  10: 10.144 ns/op
Iteration  11: 10.111 ns/op
Iteration  12: 10.096 ns/op
Iteration  13: 10.083 ns/op
Iteration  14: 10.119 ns/op
Iteration  15: 10.118 ns/op
Iteration  16: 10.014 ns/op
Iteration  17: 10.104 ns/op
Iteration  18: 10.056 ns/op
Iteration  19: 10.083 ns/op
Iteration  20: 10.074 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.079 ns/op
# Warmup Iteration   2: 10.481 ns/op
# Warmup Iteration   3: 10.022 ns/op
# Warmup Iteration   4: 10.026 ns/op
# Warmup Iteration   5: 10.004 ns/op
Iteration   1: 10.032 ns/op
Iteration   2: 10.064 ns/op
Iteration   3: 10.044 ns/op
Iteration   4: 10.079 ns/op
Iteration   5: 10.041 ns/op
Iteration   6: 10.026 ns/op
Iteration   7: 10.029 ns/op
Iteration   8: 10.033 ns/op
Iteration   9: 10.019 ns/op
Iteration  10: 10.064 ns/op
Iteration  11: 10.029 ns/op
Iteration  12: 10.048 ns/op
Iteration  13: 10.026 ns/op
Iteration  14: 10.052 ns/op
Iteration  15: 10.047 ns/op
Iteration  16: 10.042 ns/op
Iteration  17: 10.091 ns/op
Iteration  18: 10.045 ns/op
Iteration  19: 10.023 ns/op
Iteration  20: 10.038 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.206 ns/op
# Warmup Iteration   2: 10.470 ns/op
# Warmup Iteration   3: 10.035 ns/op
# Warmup Iteration   4: 10.038 ns/op
# Warmup Iteration   5: 10.019 ns/op
Iteration   1: 10.031 ns/op
Iteration   2: 10.030 ns/op
Iteration   3: 10.035 ns/op
Iteration   4: 10.020 ns/op
Iteration   5: 10.011 ns/op
Iteration   6: 9.994 ns/op
Iteration   7: 10.028 ns/op
Iteration   8: 10.054 ns/op
Iteration   9: 10.010 ns/op
Iteration  10: 10.019 ns/op
Iteration  11: 10.018 ns/op
Iteration  12: 9.993 ns/op
Iteration  13: 10.002 ns/op
Iteration  14: 9.989 ns/op
Iteration  15: 10.031 ns/op
Iteration  16: 10.010 ns/op
Iteration  17: 10.026 ns/op
Iteration  18: 10.049 ns/op
Iteration  19: 10.002 ns/op
Iteration  20: 10.030 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.056 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.914 ns/op
# Warmup Iteration   4: 9.893 ns/op
# Warmup Iteration   5: 9.881 ns/op
Iteration   1: 9.892 ns/op
Iteration   2: 9.890 ns/op
Iteration   3: 9.886 ns/op
Iteration   4: 9.896 ns/op
Iteration   5: 9.909 ns/op
Iteration   6: 9.895 ns/op
Iteration   7: 9.892 ns/op
Iteration   8: 9.902 ns/op
Iteration   9: 9.887 ns/op
Iteration  10: 9.897 ns/op
Iteration  11: 9.888 ns/op
Iteration  12: 9.892 ns/op
Iteration  13: 9.873 ns/op
Iteration  14: 9.875 ns/op
Iteration  15: 9.883 ns/op
Iteration  16: 9.873 ns/op
Iteration  17: 9.867 ns/op
Iteration  18: 9.874 ns/op
Iteration  19: 9.879 ns/op
Iteration  20: 9.883 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.535 ns/op
# Warmup Iteration   2: 10.458 ns/op
# Warmup Iteration   3: 9.894 ns/op
# Warmup Iteration   4: 9.899 ns/op
# Warmup Iteration   5: 9.907 ns/op
Iteration   1: 9.893 ns/op
Iteration   2: 9.895 ns/op
Iteration   3: 9.898 ns/op
Iteration   4: 9.897 ns/op
Iteration   5: 9.892 ns/op
Iteration   6: 9.892 ns/op
Iteration   7: 9.901 ns/op
Iteration   8: 9.907 ns/op
Iteration   9: 9.906 ns/op
Iteration  10: 9.902 ns/op
Iteration  11: 9.913 ns/op
Iteration  12: 9.899 ns/op
Iteration  13: 9.916 ns/op
Iteration  14: 9.912 ns/op
Iteration  15: 9.910 ns/op
Iteration  16: 9.918 ns/op
Iteration  17: 9.900 ns/op
Iteration  18: 9.904 ns/op
Iteration  19: 9.912 ns/op
Iteration  20: 9.892 ns/op


Result "benchmark.StringContains.stringContains":
  9.989 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (9.867, 9.989, 10.157), stdev = 0.085
  CI (99.9%): [9.961, 10.018] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  http8U7-  avgt  100  160.345 ± 2.361  ns/op
StringContains.stringContains     http  http8U7-  avgt  100    9.989 ± 0.029  ns/op

Benchmark result is saved to http_8_0_9.csv
