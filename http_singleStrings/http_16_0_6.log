# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = httpOX2xYjQ:q@.=)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 332.163 ns/op
# Warmup Iteration   2: 339.920 ns/op
# Warmup Iteration   3: 256.998 ns/op
# Warmup Iteration   4: 256.008 ns/op
# Warmup Iteration   5: 256.954 ns/op
Iteration   1: 253.869 ns/op
Iteration   2: 258.391 ns/op
Iteration   3: 257.555 ns/op
Iteration   4: 255.926 ns/op
Iteration   5: 261.250 ns/op
Iteration   6: 254.031 ns/op
Iteration   7: 255.181 ns/op
Iteration   8: 255.088 ns/op
Iteration   9: 253.737 ns/op
Iteration  10: 256.194 ns/op
Iteration  11: 254.327 ns/op
Iteration  12: 254.966 ns/op
Iteration  13: 254.936 ns/op
Iteration  14: 253.861 ns/op
Iteration  15: 255.319 ns/op
Iteration  16: 253.716 ns/op
Iteration  17: 255.052 ns/op
Iteration  18: 255.121 ns/op
Iteration  19: 253.815 ns/op
Iteration  20: 255.269 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 333.478 ns/op
# Warmup Iteration   2: 345.685 ns/op
# Warmup Iteration   3: 260.851 ns/op
# Warmup Iteration   4: 259.249 ns/op
# Warmup Iteration   5: 259.950 ns/op
Iteration   1: 256.890 ns/op
Iteration   2: 261.188 ns/op
Iteration   3: 256.859 ns/op
Iteration   4: 262.507 ns/op
Iteration   5: 264.260 ns/op
Iteration   6: 256.886 ns/op
Iteration   7: 258.174 ns/op
Iteration   8: 256.945 ns/op
Iteration   9: 257.532 ns/op
Iteration  10: 257.905 ns/op
Iteration  11: 256.383 ns/op
Iteration  12: 257.942 ns/op
Iteration  13: 256.686 ns/op
Iteration  14: 257.901 ns/op
Iteration  15: 257.865 ns/op
Iteration  16: 256.908 ns/op
Iteration  17: 257.880 ns/op
Iteration  18: 258.071 ns/op
Iteration  19: 256.878 ns/op
Iteration  20: 258.133 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 334.149 ns/op
# Warmup Iteration   2: 346.092 ns/op
# Warmup Iteration   3: 260.372 ns/op
# Warmup Iteration   4: 258.564 ns/op
# Warmup Iteration   5: 259.446 ns/op
Iteration   1: 256.520 ns/op
Iteration   2: 260.653 ns/op
Iteration   3: 255.846 ns/op
Iteration   4: 261.614 ns/op
Iteration   5: 263.542 ns/op
Iteration   6: 255.721 ns/op
Iteration   7: 257.039 ns/op
Iteration   8: 255.981 ns/op
Iteration   9: 257.444 ns/op
Iteration  10: 257.340 ns/op
Iteration  11: 255.764 ns/op
Iteration  12: 257.214 ns/op
Iteration  13: 257.244 ns/op
Iteration  14: 255.848 ns/op
Iteration  15: 257.408 ns/op
Iteration  16: 255.843 ns/op
Iteration  17: 259.315 ns/op
Iteration  18: 260.282 ns/op
Iteration  19: 256.369 ns/op
Iteration  20: 264.092 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 341.399 ns/op
# Warmup Iteration   2: 338.638 ns/op
# Warmup Iteration   3: 258.903 ns/op
# Warmup Iteration   4: 256.255 ns/op
# Warmup Iteration   5: 257.360 ns/op
Iteration   1: 254.018 ns/op
Iteration   2: 258.258 ns/op
Iteration   3: 257.959 ns/op
Iteration   4: 255.823 ns/op
Iteration   5: 262.974 ns/op
Iteration   6: 254.010 ns/op
Iteration   7: 255.299 ns/op
Iteration   8: 255.092 ns/op
Iteration   9: 254.087 ns/op
Iteration  10: 255.246 ns/op
Iteration  11: 253.594 ns/op
Iteration  12: 255.445 ns/op
Iteration  13: 256.494 ns/op
Iteration  14: 254.104 ns/op
Iteration  15: 255.870 ns/op
Iteration  16: 254.104 ns/op
Iteration  17: 255.987 ns/op
Iteration  18: 258.738 ns/op
Iteration  19: 253.983 ns/op
Iteration  20: 257.929 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 332.687 ns/op
# Warmup Iteration   2: 336.490 ns/op
# Warmup Iteration   3: 257.615 ns/op
# Warmup Iteration   4: 257.222 ns/op
# Warmup Iteration   5: 257.909 ns/op
Iteration   1: 255.163 ns/op
Iteration   2: 259.675 ns/op
Iteration   3: 260.804 ns/op
Iteration   4: 255.102 ns/op
Iteration   5: 262.569 ns/op
Iteration   6: 255.141 ns/op
Iteration   7: 256.560 ns/op
Iteration   8: 256.678 ns/op
Iteration   9: 255.293 ns/op
Iteration  10: 256.726 ns/op
Iteration  11: 255.352 ns/op
Iteration  12: 256.510 ns/op
Iteration  13: 256.673 ns/op
Iteration  14: 255.337 ns/op
Iteration  15: 256.572 ns/op
Iteration  16: 255.248 ns/op
Iteration  17: 258.060 ns/op
Iteration  18: 256.881 ns/op
Iteration  19: 255.382 ns/op
Iteration  20: 256.890 ns/op


Result "benchmark.StringContains.regexMatches":
  256.881 ±(99.9%) 0.821 ns/op [Average]
  (min, avg, max) = (253.594, 256.881, 264.260), stdev = 2.420
  CI (99.9%): [256.060, 257.702] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = httpOX2xYjQ:q@.=)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.190 ns/op
# Warmup Iteration   2: 9.733 ns/op
# Warmup Iteration   3: 9.974 ns/op
# Warmup Iteration   4: 9.983 ns/op
# Warmup Iteration   5: 9.971 ns/op
Iteration   1: 10.013 ns/op
Iteration   2: 9.995 ns/op
Iteration   3: 9.978 ns/op
Iteration   4: 9.986 ns/op
Iteration   5: 9.975 ns/op
Iteration   6: 10.018 ns/op
Iteration   7: 9.961 ns/op
Iteration   8: 9.979 ns/op
Iteration   9: 9.966 ns/op
Iteration  10: 9.977 ns/op
Iteration  11: 9.981 ns/op
Iteration  12: 9.965 ns/op
Iteration  13: 9.974 ns/op
Iteration  14: 9.976 ns/op
Iteration  15: 9.974 ns/op
Iteration  16: 9.978 ns/op
Iteration  17: 9.973 ns/op
Iteration  18: 9.970 ns/op
Iteration  19: 9.969 ns/op
Iteration  20: 9.980 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.210 ns/op
# Warmup Iteration   2: 9.712 ns/op
# Warmup Iteration   3: 9.850 ns/op
# Warmup Iteration   4: 9.853 ns/op
# Warmup Iteration   5: 9.855 ns/op
Iteration   1: 9.846 ns/op
Iteration   2: 9.849 ns/op
Iteration   3: 9.846 ns/op
Iteration   4: 9.841 ns/op
Iteration   5: 9.839 ns/op
Iteration   6: 9.849 ns/op
Iteration   7: 9.841 ns/op
Iteration   8: 9.823 ns/op
Iteration   9: 9.833 ns/op
Iteration  10: 9.846 ns/op
Iteration  11: 9.843 ns/op
Iteration  12: 9.859 ns/op
Iteration  13: 9.853 ns/op
Iteration  14: 9.863 ns/op
Iteration  15: 9.860 ns/op
Iteration  16: 9.841 ns/op
Iteration  17: 9.845 ns/op
Iteration  18: 9.837 ns/op
Iteration  19: 9.851 ns/op
Iteration  20: 9.849 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.174 ns/op
# Warmup Iteration   2: 9.708 ns/op
# Warmup Iteration   3: 9.892 ns/op
# Warmup Iteration   4: 9.895 ns/op
# Warmup Iteration   5: 9.904 ns/op
Iteration   1: 9.916 ns/op
Iteration   2: 9.899 ns/op
Iteration   3: 9.912 ns/op
Iteration   4: 9.900 ns/op
Iteration   5: 9.912 ns/op
Iteration   6: 9.897 ns/op
Iteration   7: 9.903 ns/op
Iteration   8: 9.893 ns/op
Iteration   9: 9.897 ns/op
Iteration  10: 9.906 ns/op
Iteration  11: 9.893 ns/op
Iteration  12: 9.891 ns/op
Iteration  13: 9.883 ns/op
Iteration  14: 9.894 ns/op
Iteration  15: 9.896 ns/op
Iteration  16: 9.897 ns/op
Iteration  17: 9.889 ns/op
Iteration  18: 9.890 ns/op
Iteration  19: 9.888 ns/op
Iteration  20: 9.901 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.485 ns/op
# Warmup Iteration   2: 9.713 ns/op
# Warmup Iteration   3: 9.934 ns/op
# Warmup Iteration   4: 9.908 ns/op
# Warmup Iteration   5: 9.918 ns/op
Iteration   1: 9.933 ns/op
Iteration   2: 9.917 ns/op
Iteration   3: 9.903 ns/op
Iteration   4: 9.904 ns/op
Iteration   5: 9.908 ns/op
Iteration   6: 9.915 ns/op
Iteration   7: 9.896 ns/op
Iteration   8: 9.908 ns/op
Iteration   9: 9.901 ns/op
Iteration  10: 9.903 ns/op
Iteration  11: 9.904 ns/op
Iteration  12: 9.902 ns/op
Iteration  13: 9.906 ns/op
Iteration  14: 9.942 ns/op
Iteration  15: 9.918 ns/op
Iteration  16: 9.920 ns/op
Iteration  17: 9.932 ns/op
Iteration  18: 9.922 ns/op
Iteration  19: 9.913 ns/op
Iteration  20: 9.901 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.486 ns/op
# Warmup Iteration   2: 9.730 ns/op
# Warmup Iteration   3: 9.887 ns/op
# Warmup Iteration   4: 9.883 ns/op
# Warmup Iteration   5: 9.899 ns/op
Iteration   1: 9.904 ns/op
Iteration   2: 9.884 ns/op
Iteration   3: 9.888 ns/op
Iteration   4: 9.899 ns/op
Iteration   5: 9.883 ns/op
Iteration   6: 9.868 ns/op
Iteration   7: 9.876 ns/op
Iteration   8: 9.904 ns/op
Iteration   9: 9.895 ns/op
Iteration  10: 9.903 ns/op
Iteration  11: 9.894 ns/op
Iteration  12: 9.877 ns/op
Iteration  13: 9.881 ns/op
Iteration  14: 9.874 ns/op
Iteration  15: 9.881 ns/op
Iteration  16: 9.880 ns/op
Iteration  17: 9.891 ns/op
Iteration  18: 9.879 ns/op
Iteration  19: 9.881 ns/op
Iteration  20: 9.880 ns/op


Result "benchmark.StringContains.stringContains":
  9.904 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (9.823, 9.904, 10.018), stdev = 0.045
  CI (99.9%): [9.889, 9.920] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  httpOX2xYjQ:q@.=  avgt  100  256.881 ± 0.821  ns/op
StringContains.stringContains     http  httpOX2xYjQ:q@.=  avgt  100    9.904 ± 0.015  ns/op

Benchmark result is saved to http_16_0_6.csv
