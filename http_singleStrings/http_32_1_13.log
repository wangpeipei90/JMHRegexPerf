# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = FlR.SY}bQP*>g(cU@>Vv,hbTfvkPR>,I)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 332.282 ns/op
# Warmup Iteration   2: 345.772 ns/op
# Warmup Iteration   3: 247.426 ns/op
# Warmup Iteration   4: 245.220 ns/op
# Warmup Iteration   5: 246.374 ns/op
Iteration   1: 242.562 ns/op
Iteration   2: 247.459 ns/op
Iteration   3: 249.313 ns/op
Iteration   4: 242.715 ns/op
Iteration   5: 251.117 ns/op
Iteration   6: 243.741 ns/op
Iteration   7: 242.762 ns/op
Iteration   8: 243.646 ns/op
Iteration   9: 242.617 ns/op
Iteration  10: 243.775 ns/op
Iteration  11: 243.918 ns/op
Iteration  12: 242.558 ns/op
Iteration  13: 243.823 ns/op
Iteration  14: 246.165 ns/op
Iteration  15: 242.470 ns/op
Iteration  16: 244.035 ns/op
Iteration  17: 243.972 ns/op
Iteration  18: 242.661 ns/op
Iteration  19: 244.277 ns/op
Iteration  20: 245.234 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 320.048 ns/op
# Warmup Iteration   2: 303.033 ns/op
# Warmup Iteration   3: 231.295 ns/op
# Warmup Iteration   4: 233.312 ns/op
# Warmup Iteration   5: 233.886 ns/op
Iteration   1: 234.988 ns/op
Iteration   2: 231.640 ns/op
Iteration   3: 237.274 ns/op
Iteration   4: 237.515 ns/op
Iteration   5: 231.144 ns/op
Iteration   6: 232.213 ns/op
Iteration   7: 232.189 ns/op
Iteration   8: 231.775 ns/op
Iteration   9: 232.168 ns/op
Iteration  10: 232.114 ns/op
Iteration  11: 231.172 ns/op
Iteration  12: 232.127 ns/op
Iteration  13: 232.096 ns/op
Iteration  14: 231.122 ns/op
Iteration  15: 232.080 ns/op
Iteration  16: 232.256 ns/op
Iteration  17: 231.201 ns/op
Iteration  18: 232.338 ns/op
Iteration  19: 231.717 ns/op
Iteration  20: 231.204 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 317.693 ns/op
# Warmup Iteration   2: 300.361 ns/op
# Warmup Iteration   3: 231.365 ns/op
# Warmup Iteration   4: 233.500 ns/op
# Warmup Iteration   5: 234.208 ns/op
Iteration   1: 235.137 ns/op
Iteration   2: 231.306 ns/op
Iteration   3: 236.419 ns/op
Iteration   4: 237.701 ns/op
Iteration   5: 231.230 ns/op
Iteration   6: 232.860 ns/op
Iteration   7: 232.528 ns/op
Iteration   8: 231.352 ns/op
Iteration   9: 233.492 ns/op
Iteration  10: 233.755 ns/op
Iteration  11: 231.292 ns/op
Iteration  12: 232.411 ns/op
Iteration  13: 232.328 ns/op
Iteration  14: 231.313 ns/op
Iteration  15: 232.460 ns/op
Iteration  16: 232.802 ns/op
Iteration  17: 231.251 ns/op
Iteration  18: 233.240 ns/op
Iteration  19: 233.547 ns/op
Iteration  20: 231.285 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 331.038 ns/op
# Warmup Iteration   2: 320.079 ns/op
# Warmup Iteration   3: 242.901 ns/op
# Warmup Iteration   4: 245.462 ns/op
# Warmup Iteration   5: 246.284 ns/op
Iteration   1: 242.909 ns/op
Iteration   2: 247.170 ns/op
Iteration   3: 248.407 ns/op
Iteration   4: 243.541 ns/op
Iteration   5: 249.955 ns/op
Iteration   6: 243.844 ns/op
Iteration   7: 242.875 ns/op
Iteration   8: 244.529 ns/op
Iteration   9: 243.971 ns/op
Iteration  10: 242.802 ns/op
Iteration  11: 243.892 ns/op
Iteration  12: 243.681 ns/op
Iteration  13: 244.651 ns/op
Iteration  14: 246.028 ns/op
Iteration  15: 242.906 ns/op
Iteration  16: 247.591 ns/op
Iteration  17: 244.288 ns/op
Iteration  18: 242.762 ns/op
Iteration  19: 246.528 ns/op
Iteration  20: 245.417 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 325.084 ns/op
# Warmup Iteration   2: 314.982 ns/op
# Warmup Iteration   3: 242.692 ns/op
# Warmup Iteration   4: 244.747 ns/op
# Warmup Iteration   5: 245.570 ns/op
Iteration   1: 242.582 ns/op
Iteration   2: 246.656 ns/op
Iteration   3: 247.884 ns/op
Iteration   4: 242.592 ns/op
Iteration   5: 249.303 ns/op
Iteration   6: 245.531 ns/op
Iteration   7: 242.812 ns/op
Iteration   8: 243.478 ns/op
Iteration   9: 243.623 ns/op
Iteration  10: 242.576 ns/op
Iteration  11: 243.785 ns/op
Iteration  12: 243.664 ns/op
Iteration  13: 242.542 ns/op
Iteration  14: 243.942 ns/op
Iteration  15: 242.771 ns/op
Iteration  16: 243.739 ns/op
Iteration  17: 243.780 ns/op
Iteration  18: 242.597 ns/op
Iteration  19: 244.000 ns/op
Iteration  20: 243.321 ns/op


Result "benchmark.StringContains.regexMatches":
  239.758 ±(99.9%) 2.076 ns/op [Average]
  (min, avg, max) = (231.122, 239.758, 251.117), stdev = 6.123
  CI (99.9%): [237.681, 241.834] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = FlR.SY}bQP*>g(cU@>Vv,hbTfvkPR>,I)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 10.259 ns/op
# Warmup Iteration   2: 11.204 ns/op
# Warmup Iteration   3: 11.182 ns/op
# Warmup Iteration   4: 11.167 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.169 ns/op
Iteration   2: 11.169 ns/op
Iteration   3: 11.168 ns/op
Iteration   4: 11.174 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.170 ns/op
Iteration   7: 11.171 ns/op
Iteration   8: 11.174 ns/op
Iteration   9: 11.171 ns/op
Iteration  10: 11.171 ns/op
Iteration  11: 11.170 ns/op
Iteration  12: 11.169 ns/op
Iteration  13: 11.170 ns/op
Iteration  14: 11.173 ns/op
Iteration  15: 11.174 ns/op
Iteration  16: 11.169 ns/op
Iteration  17: 11.180 ns/op
Iteration  18: 11.175 ns/op
Iteration  19: 11.175 ns/op
Iteration  20: 11.178 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 10.254 ns/op
# Warmup Iteration   2: 11.202 ns/op
# Warmup Iteration   3: 11.177 ns/op
# Warmup Iteration   4: 11.169 ns/op
# Warmup Iteration   5: 11.168 ns/op
Iteration   1: 11.167 ns/op
Iteration   2: 11.168 ns/op
Iteration   3: 11.180 ns/op
Iteration   4: 11.170 ns/op
Iteration   5: 11.168 ns/op
Iteration   6: 11.168 ns/op
Iteration   7: 11.169 ns/op
Iteration   8: 11.169 ns/op
Iteration   9: 11.169 ns/op
Iteration  10: 11.168 ns/op
Iteration  11: 11.169 ns/op
Iteration  12: 11.169 ns/op
Iteration  13: 11.170 ns/op
Iteration  14: 11.169 ns/op
Iteration  15: 11.168 ns/op
Iteration  16: 11.168 ns/op
Iteration  17: 11.169 ns/op
Iteration  18: 11.175 ns/op
Iteration  19: 11.169 ns/op
Iteration  20: 11.169 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 10.228 ns/op
# Warmup Iteration   2: 11.203 ns/op
# Warmup Iteration   3: 11.166 ns/op
# Warmup Iteration   4: 11.166 ns/op
# Warmup Iteration   5: 11.166 ns/op
Iteration   1: 11.167 ns/op
Iteration   2: 11.166 ns/op
Iteration   3: 11.165 ns/op
Iteration   4: 11.165 ns/op
Iteration   5: 11.165 ns/op
Iteration   6: 11.166 ns/op
Iteration   7: 11.165 ns/op
Iteration   8: 11.166 ns/op
Iteration   9: 11.165 ns/op
Iteration  10: 11.165 ns/op
Iteration  11: 11.165 ns/op
Iteration  12: 11.166 ns/op
Iteration  13: 11.165 ns/op
Iteration  14: 11.166 ns/op
Iteration  15: 11.165 ns/op
Iteration  16: 11.166 ns/op
Iteration  17: 11.166 ns/op
Iteration  18: 11.165 ns/op
Iteration  19: 11.166 ns/op
Iteration  20: 11.166 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 10.297 ns/op
# Warmup Iteration   2: 11.218 ns/op
# Warmup Iteration   3: 11.206 ns/op
# Warmup Iteration   4: 11.205 ns/op
# Warmup Iteration   5: 11.205 ns/op
Iteration   1: 11.205 ns/op
Iteration   2: 11.208 ns/op
Iteration   3: 11.206 ns/op
Iteration   4: 11.205 ns/op
Iteration   5: 11.206 ns/op
Iteration   6: 11.205 ns/op
Iteration   7: 11.205 ns/op
Iteration   8: 11.224 ns/op
Iteration   9: 11.205 ns/op
Iteration  10: 11.205 ns/op
Iteration  11: 11.205 ns/op
Iteration  12: 11.208 ns/op
Iteration  13: 11.206 ns/op
Iteration  14: 11.205 ns/op
Iteration  15: 11.206 ns/op
Iteration  16: 11.205 ns/op
Iteration  17: 11.205 ns/op
Iteration  18: 11.206 ns/op
Iteration  19: 11.205 ns/op
Iteration  20: 11.225 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 10.255 ns/op
# Warmup Iteration   2: 11.199 ns/op
# Warmup Iteration   3: 11.167 ns/op
# Warmup Iteration   4: 11.166 ns/op
# Warmup Iteration   5: 11.166 ns/op
Iteration   1: 11.166 ns/op
Iteration   2: 11.166 ns/op
Iteration   3: 11.166 ns/op
Iteration   4: 11.166 ns/op
Iteration   5: 11.166 ns/op
Iteration   6: 11.167 ns/op
Iteration   7: 11.166 ns/op
Iteration   8: 11.168 ns/op
Iteration   9: 11.165 ns/op
Iteration  10: 11.165 ns/op
Iteration  11: 11.180 ns/op
Iteration  12: 11.166 ns/op
Iteration  13: 11.167 ns/op
Iteration  14: 11.166 ns/op
Iteration  15: 11.165 ns/op
Iteration  16: 11.166 ns/op
Iteration  17: 11.166 ns/op
Iteration  18: 11.165 ns/op
Iteration  19: 11.166 ns/op
Iteration  20: 11.166 ns/op


Result "benchmark.StringContains.stringContains":
  11.176 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (11.165, 11.176, 11.225), stdev = 0.016
  CI (99.9%): [11.171, 11.182] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  FlR.SY}bQP*>g(cU@>Vv,hbTfvkPR>,I  avgt  100  239.758 ± 2.076  ns/op
StringContains.stringContains     http  FlR.SY}bQP*>g(cU@>Vv,hbTfvkPR>,I  avgt  100   11.176 ± 0.006  ns/op

Benchmark result is saved to http_32_1_13.csv
