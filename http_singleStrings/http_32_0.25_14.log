# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = L_TX#}DFhttpE&E yk7uMBlO[c5.E})

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 346.825 ns/op
# Warmup Iteration   2: 335.218 ns/op
# Warmup Iteration   3: 248.682 ns/op
# Warmup Iteration   4: 247.631 ns/op
# Warmup Iteration   5: 247.452 ns/op
Iteration   1: 244.058 ns/op
Iteration   2: 248.742 ns/op
Iteration   3: 249.838 ns/op
Iteration   4: 244.027 ns/op
Iteration   5: 251.974 ns/op
Iteration   6: 245.458 ns/op
Iteration   7: 244.078 ns/op
Iteration   8: 245.275 ns/op
Iteration   9: 244.343 ns/op
Iteration  10: 245.225 ns/op
Iteration  11: 245.531 ns/op
Iteration  12: 244.078 ns/op
Iteration  13: 245.288 ns/op
Iteration  14: 246.524 ns/op
Iteration  15: 243.945 ns/op
Iteration  16: 245.358 ns/op
Iteration  17: 245.700 ns/op
Iteration  18: 244.058 ns/op
Iteration  19: 246.546 ns/op
Iteration  20: 243.885 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 419.354 ns/op
# Warmup Iteration   2: 402.648 ns/op
# Warmup Iteration   3: 361.956 ns/op
# Warmup Iteration   4: 328.517 ns/op
# Warmup Iteration   5: 331.695 ns/op
Iteration   1: 328.384 ns/op
Iteration   2: 332.626 ns/op
Iteration   3: 328.540 ns/op
Iteration   4: 334.128 ns/op
Iteration   5: 328.402 ns/op
Iteration   6: 338.379 ns/op
Iteration   7: 331.258 ns/op
Iteration   8: 338.657 ns/op
Iteration   9: 328.322 ns/op
Iteration  10: 330.449 ns/op
Iteration  11: 328.560 ns/op
Iteration  12: 330.179 ns/op
Iteration  13: 328.287 ns/op
Iteration  14: 330.108 ns/op
Iteration  15: 328.452 ns/op
Iteration  16: 330.022 ns/op
Iteration  17: 328.474 ns/op
Iteration  18: 330.096 ns/op
Iteration  19: 328.386 ns/op
Iteration  20: 330.334 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 400.035 ns/op
# Warmup Iteration   2: 384.839 ns/op
# Warmup Iteration   3: 328.772 ns/op
# Warmup Iteration   4: 303.582 ns/op
# Warmup Iteration   5: 305.335 ns/op
Iteration   1: 306.393 ns/op
Iteration   2: 302.328 ns/op
Iteration   3: 307.541 ns/op
Iteration   4: 302.312 ns/op
Iteration   5: 310.553 ns/op
Iteration   6: 302.393 ns/op
Iteration   7: 311.022 ns/op
Iteration   8: 302.860 ns/op
Iteration   9: 303.841 ns/op
Iteration  10: 302.295 ns/op
Iteration  11: 303.933 ns/op
Iteration  12: 302.464 ns/op
Iteration  13: 303.657 ns/op
Iteration  14: 302.376 ns/op
Iteration  15: 303.744 ns/op
Iteration  16: 302.353 ns/op
Iteration  17: 303.939 ns/op
Iteration  18: 302.496 ns/op
Iteration  19: 303.867 ns/op
Iteration  20: 302.368 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 431.870 ns/op
# Warmup Iteration   2: 436.043 ns/op
# Warmup Iteration   3: 405.142 ns/op
# Warmup Iteration   4: 360.355 ns/op
# Warmup Iteration   5: 363.488 ns/op
Iteration   1: 360.413 ns/op
Iteration   2: 364.875 ns/op
Iteration   3: 360.353 ns/op
Iteration   4: 366.024 ns/op
Iteration   5: 360.274 ns/op
Iteration   6: 367.991 ns/op
Iteration   7: 359.977 ns/op
Iteration   8: 360.310 ns/op
Iteration   9: 370.541 ns/op
Iteration  10: 360.066 ns/op
Iteration  11: 363.219 ns/op
Iteration  12: 361.786 ns/op
Iteration  13: 363.071 ns/op
Iteration  14: 360.365 ns/op
Iteration  15: 359.666 ns/op
Iteration  16: 361.616 ns/op
Iteration  17: 360.005 ns/op
Iteration  18: 361.270 ns/op
Iteration  19: 359.756 ns/op
Iteration  20: 362.084 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 425.775 ns/op
# Warmup Iteration   2: 421.932 ns/op
# Warmup Iteration   3: 422.328 ns/op
# Warmup Iteration   4: 378.993 ns/op
# Warmup Iteration   5: 382.339 ns/op
Iteration   1: 378.412 ns/op
Iteration   2: 383.232 ns/op
Iteration   3: 379.090 ns/op
Iteration   4: 378.951 ns/op
Iteration   5: 384.975 ns/op
Iteration   6: 378.882 ns/op
Iteration   7: 386.910 ns/op
Iteration   8: 380.210 ns/op
Iteration   9: 390.117 ns/op
Iteration  10: 378.972 ns/op
Iteration  11: 378.864 ns/op
Iteration  12: 380.544 ns/op
Iteration  13: 378.373 ns/op
Iteration  14: 380.317 ns/op
Iteration  15: 378.564 ns/op
Iteration  16: 378.633 ns/op
Iteration  17: 379.890 ns/op
Iteration  18: 378.593 ns/op
Iteration  19: 380.305 ns/op
Iteration  20: 378.603 ns/op


Result "benchmark.StringContains.regexMatches":
  324.648 ±(99.9%) 16.183 ns/op [Average]
  (min, avg, max) = (243.885, 324.648, 390.117), stdev = 47.716
  CI (99.9%): [308.465, 340.831] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = L_TX#}DFhttpE&E yk7uMBlO[c5.E})

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.491 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.900 ns/op
# Warmup Iteration   4: 9.899 ns/op
# Warmup Iteration   5: 9.921 ns/op
Iteration   1: 9.907 ns/op
Iteration   2: 9.899 ns/op
Iteration   3: 9.901 ns/op
Iteration   4: 9.897 ns/op
Iteration   5: 9.897 ns/op
Iteration   6: 9.909 ns/op
Iteration   7: 9.907 ns/op
Iteration   8: 9.910 ns/op
Iteration   9: 9.888 ns/op
Iteration  10: 9.923 ns/op
Iteration  11: 9.879 ns/op
Iteration  12: 9.878 ns/op
Iteration  13: 9.901 ns/op
Iteration  14: 9.913 ns/op
Iteration  15: 9.896 ns/op
Iteration  16: 9.890 ns/op
Iteration  17: 9.926 ns/op
Iteration  18: 9.924 ns/op
Iteration  19: 9.916 ns/op
Iteration  20: 9.895 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.223 ns/op
# Warmup Iteration   2: 9.714 ns/op
# Warmup Iteration   3: 9.848 ns/op
# Warmup Iteration   4: 9.870 ns/op
# Warmup Iteration   5: 9.865 ns/op
Iteration   1: 9.843 ns/op
Iteration   2: 9.839 ns/op
Iteration   3: 9.840 ns/op
Iteration   4: 9.844 ns/op
Iteration   5: 9.841 ns/op
Iteration   6: 9.849 ns/op
Iteration   7: 9.859 ns/op
Iteration   8: 9.840 ns/op
Iteration   9: 9.868 ns/op
Iteration  10: 9.852 ns/op
Iteration  11: 9.861 ns/op
Iteration  12: 9.844 ns/op
Iteration  13: 9.855 ns/op
Iteration  14: 9.843 ns/op
Iteration  15: 9.840 ns/op
Iteration  16: 9.840 ns/op
Iteration  17: 9.853 ns/op
Iteration  18: 9.846 ns/op
Iteration  19: 9.840 ns/op
Iteration  20: 9.864 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.238 ns/op
# Warmup Iteration   2: 9.707 ns/op
# Warmup Iteration   3: 9.871 ns/op
# Warmup Iteration   4: 9.858 ns/op
# Warmup Iteration   5: 9.860 ns/op
Iteration   1: 9.871 ns/op
Iteration   2: 9.849 ns/op
Iteration   3: 9.841 ns/op
Iteration   4: 9.854 ns/op
Iteration   5: 9.860 ns/op
Iteration   6: 9.848 ns/op
Iteration   7: 9.867 ns/op
Iteration   8: 9.849 ns/op
Iteration   9: 9.856 ns/op
Iteration  10: 9.861 ns/op
Iteration  11: 9.857 ns/op
Iteration  12: 9.857 ns/op
Iteration  13: 9.861 ns/op
Iteration  14: 9.873 ns/op
Iteration  15: 9.846 ns/op
Iteration  16: 9.843 ns/op
Iteration  17: 9.850 ns/op
Iteration  18: 9.849 ns/op
Iteration  19: 9.848 ns/op
Iteration  20: 9.857 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.193 ns/op
# Warmup Iteration   2: 9.715 ns/op
# Warmup Iteration   3: 9.951 ns/op
# Warmup Iteration   4: 9.953 ns/op
# Warmup Iteration   5: 9.967 ns/op
Iteration   1: 9.969 ns/op
Iteration   2: 9.985 ns/op
Iteration   3: 9.975 ns/op
Iteration   4: 9.968 ns/op
Iteration   5: 9.966 ns/op
Iteration   6: 9.962 ns/op
Iteration   7: 9.965 ns/op
Iteration   8: 9.949 ns/op
Iteration   9: 9.943 ns/op
Iteration  10: 9.959 ns/op
Iteration  11: 9.947 ns/op
Iteration  12: 9.955 ns/op
Iteration  13: 9.946 ns/op
Iteration  14: 9.953 ns/op
Iteration  15: 9.950 ns/op
Iteration  16: 9.952 ns/op
Iteration  17: 9.953 ns/op
Iteration  18: 9.948 ns/op
Iteration  19: 9.953 ns/op
Iteration  20: 9.971 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.206 ns/op
# Warmup Iteration   2: 9.723 ns/op
# Warmup Iteration   3: 9.851 ns/op
# Warmup Iteration   4: 9.824 ns/op
# Warmup Iteration   5: 9.836 ns/op
Iteration   1: 9.855 ns/op
Iteration   2: 9.859 ns/op
Iteration   3: 9.841 ns/op
Iteration   4: 9.834 ns/op
Iteration   5: 9.843 ns/op
Iteration   6: 9.840 ns/op
Iteration   7: 9.857 ns/op
Iteration   8: 9.854 ns/op
Iteration   9: 9.861 ns/op
Iteration  10: 9.842 ns/op
Iteration  11: 9.847 ns/op
Iteration  12: 9.836 ns/op
Iteration  13: 9.839 ns/op
Iteration  14: 9.850 ns/op
Iteration  15: 9.865 ns/op
Iteration  16: 9.848 ns/op
Iteration  17: 9.848 ns/op
Iteration  18: 9.850 ns/op
Iteration  19: 9.848 ns/op
Iteration  20: 9.843 ns/op


Result "benchmark.StringContains.stringContains":
  9.882 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (9.834, 9.882, 9.985), stdev = 0.045
  CI (99.9%): [9.867, 9.898] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                             (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  L_TX#}DFhttpE&E yk7uMBlO[c5.E}  avgt  100  324.648 ± 16.183  ns/op
StringContains.stringContains     http  L_TX#}DFhttpE&E yk7uMBlO[c5.E}  avgt  100    9.882 ±  0.015  ns/op

Benchmark result is saved to http_32_0.25_14.csv
