# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = z)httpkr)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 236.058 ns/op
# Warmup Iteration   2: 177.151 ns/op
# Warmup Iteration   3: 151.696 ns/op
# Warmup Iteration   4: 152.601 ns/op
# Warmup Iteration   5: 156.132 ns/op
Iteration   1: 154.961 ns/op
Iteration   2: 151.247 ns/op
Iteration   3: 151.069 ns/op
Iteration   4: 150.961 ns/op
Iteration   5: 151.076 ns/op
Iteration   6: 151.089 ns/op
Iteration   7: 150.819 ns/op
Iteration   8: 151.075 ns/op
Iteration   9: 151.654 ns/op
Iteration  10: 152.591 ns/op
Iteration  11: 151.615 ns/op
Iteration  12: 150.839 ns/op
Iteration  13: 150.802 ns/op
Iteration  14: 150.738 ns/op
Iteration  15: 150.906 ns/op
Iteration  16: 150.846 ns/op
Iteration  17: 150.752 ns/op
Iteration  18: 150.762 ns/op
Iteration  19: 150.903 ns/op
Iteration  20: 151.046 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 232.504 ns/op
# Warmup Iteration   2: 172.962 ns/op
# Warmup Iteration   3: 153.282 ns/op
# Warmup Iteration   4: 153.754 ns/op
# Warmup Iteration   5: 157.756 ns/op
Iteration   1: 156.095 ns/op
Iteration   2: 152.637 ns/op
Iteration   3: 152.415 ns/op
Iteration   4: 152.765 ns/op
Iteration   5: 152.847 ns/op
Iteration   6: 152.344 ns/op
Iteration   7: 152.274 ns/op
Iteration   8: 152.303 ns/op
Iteration   9: 152.324 ns/op
Iteration  10: 152.457 ns/op
Iteration  11: 152.195 ns/op
Iteration  12: 152.278 ns/op
Iteration  13: 152.314 ns/op
Iteration  14: 152.327 ns/op
Iteration  15: 152.300 ns/op
Iteration  16: 152.361 ns/op
Iteration  17: 152.383 ns/op
Iteration  18: 152.543 ns/op
Iteration  19: 152.181 ns/op
Iteration  20: 152.146 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 241.963 ns/op
# Warmup Iteration   2: 181.579 ns/op
# Warmup Iteration   3: 165.261 ns/op
# Warmup Iteration   4: 165.720 ns/op
# Warmup Iteration   5: 166.338 ns/op
Iteration   1: 167.178 ns/op
Iteration   2: 168.097 ns/op
Iteration   3: 164.368 ns/op
Iteration   4: 164.232 ns/op
Iteration   5: 164.296 ns/op
Iteration   6: 164.122 ns/op
Iteration   7: 164.337 ns/op
Iteration   8: 164.236 ns/op
Iteration   9: 164.213 ns/op
Iteration  10: 164.277 ns/op
Iteration  11: 164.481 ns/op
Iteration  12: 163.902 ns/op
Iteration  13: 165.099 ns/op
Iteration  14: 163.374 ns/op
Iteration  15: 165.162 ns/op
Iteration  16: 163.886 ns/op
Iteration  17: 163.831 ns/op
Iteration  18: 163.768 ns/op
Iteration  19: 163.985 ns/op
Iteration  20: 163.852 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 234.813 ns/op
# Warmup Iteration   2: 177.270 ns/op
# Warmup Iteration   3: 149.824 ns/op
# Warmup Iteration   4: 152.006 ns/op
# Warmup Iteration   5: 153.003 ns/op
Iteration   1: 152.434 ns/op
Iteration   2: 149.334 ns/op
Iteration   3: 149.288 ns/op
Iteration   4: 149.241 ns/op
Iteration   5: 149.166 ns/op
Iteration   6: 148.800 ns/op
Iteration   7: 148.669 ns/op
Iteration   8: 149.086 ns/op
Iteration   9: 149.075 ns/op
Iteration  10: 149.035 ns/op
Iteration  11: 148.811 ns/op
Iteration  12: 148.846 ns/op
Iteration  13: 148.858 ns/op
Iteration  14: 149.707 ns/op
Iteration  15: 148.684 ns/op
Iteration  16: 148.728 ns/op
Iteration  17: 148.757 ns/op
Iteration  18: 148.869 ns/op
Iteration  19: 148.885 ns/op
Iteration  20: 148.863 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 247.324 ns/op
# Warmup Iteration   2: 189.942 ns/op
# Warmup Iteration   3: 172.874 ns/op
# Warmup Iteration   4: 174.325 ns/op
# Warmup Iteration   5: 174.908 ns/op
Iteration   1: 174.924 ns/op
Iteration   2: 176.772 ns/op
Iteration   3: 172.093 ns/op
Iteration   4: 171.751 ns/op
Iteration   5: 171.523 ns/op
Iteration   6: 170.630 ns/op
Iteration   7: 171.567 ns/op
Iteration   8: 171.534 ns/op
Iteration   9: 172.004 ns/op
Iteration  10: 172.921 ns/op
Iteration  11: 171.831 ns/op
Iteration  12: 171.741 ns/op
Iteration  13: 171.087 ns/op
Iteration  14: 171.177 ns/op
Iteration  15: 171.193 ns/op
Iteration  16: 171.157 ns/op
Iteration  17: 170.681 ns/op
Iteration  18: 171.192 ns/op
Iteration  19: 171.209 ns/op
Iteration  20: 171.218 ns/op


Result "benchmark.StringContains.regexMatches":
  157.893 ±(99.9%) 3.027 ns/op [Average]
  (min, avg, max) = (148.669, 157.893, 176.772), stdev = 8.926
  CI (99.9%): [154.866, 160.920] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = z)httpkr)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.098 ns/op
# Warmup Iteration   2: 10.540 ns/op
# Warmup Iteration   3: 9.885 ns/op
# Warmup Iteration   4: 9.928 ns/op
# Warmup Iteration   5: 9.914 ns/op
Iteration   1: 9.921 ns/op
Iteration   2: 9.923 ns/op
Iteration   3: 9.920 ns/op
Iteration   4: 9.897 ns/op
Iteration   5: 9.913 ns/op
Iteration   6: 9.919 ns/op
Iteration   7: 9.890 ns/op
Iteration   8: 9.917 ns/op
Iteration   9: 9.910 ns/op
Iteration  10: 9.921 ns/op
Iteration  11: 9.900 ns/op
Iteration  12: 9.907 ns/op
Iteration  13: 9.890 ns/op
Iteration  14: 9.911 ns/op
Iteration  15: 9.896 ns/op
Iteration  16: 9.896 ns/op
Iteration  17: 9.900 ns/op
Iteration  18: 9.906 ns/op
Iteration  19: 9.908 ns/op
Iteration  20: 9.932 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.099 ns/op
# Warmup Iteration   2: 10.452 ns/op
# Warmup Iteration   3: 9.892 ns/op
# Warmup Iteration   4: 9.896 ns/op
# Warmup Iteration   5: 9.905 ns/op
Iteration   1: 9.876 ns/op
Iteration   2: 9.891 ns/op
Iteration   3: 9.879 ns/op
Iteration   4: 9.889 ns/op
Iteration   5: 9.883 ns/op
Iteration   6: 9.894 ns/op
Iteration   7: 9.879 ns/op
Iteration   8: 9.895 ns/op
Iteration   9: 9.885 ns/op
Iteration  10: 9.897 ns/op
Iteration  11: 9.899 ns/op
Iteration  12: 9.899 ns/op
Iteration  13: 9.902 ns/op
Iteration  14: 9.912 ns/op
Iteration  15: 9.888 ns/op
Iteration  16: 9.910 ns/op
Iteration  17: 9.908 ns/op
Iteration  18: 9.918 ns/op
Iteration  19: 9.906 ns/op
Iteration  20: 9.909 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.107 ns/op
# Warmup Iteration   2: 10.475 ns/op
# Warmup Iteration   3: 10.024 ns/op
# Warmup Iteration   4: 10.079 ns/op
# Warmup Iteration   5: 10.064 ns/op
Iteration   1: 10.036 ns/op
Iteration   2: 10.083 ns/op
Iteration   3: 10.083 ns/op
Iteration   4: 10.068 ns/op
Iteration   5: 10.026 ns/op
Iteration   6: 10.038 ns/op
Iteration   7: 10.045 ns/op
Iteration   8: 10.049 ns/op
Iteration   9: 10.046 ns/op
Iteration  10: 10.046 ns/op
Iteration  11: 10.065 ns/op
Iteration  12: 10.033 ns/op
Iteration  13: 10.040 ns/op
Iteration  14: 10.054 ns/op
Iteration  15: 10.039 ns/op
Iteration  16: 10.045 ns/op
Iteration  17: 10.033 ns/op
Iteration  18: 10.041 ns/op
Iteration  19: 10.024 ns/op
Iteration  20: 10.054 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.068 ns/op
# Warmup Iteration   2: 10.454 ns/op
# Warmup Iteration   3: 9.889 ns/op
# Warmup Iteration   4: 9.920 ns/op
# Warmup Iteration   5: 9.916 ns/op
Iteration   1: 9.896 ns/op
Iteration   2: 9.924 ns/op
Iteration   3: 9.925 ns/op
Iteration   4: 9.918 ns/op
Iteration   5: 9.905 ns/op
Iteration   6: 9.924 ns/op
Iteration   7: 9.886 ns/op
Iteration   8: 9.913 ns/op
Iteration   9: 9.905 ns/op
Iteration  10: 9.916 ns/op
Iteration  11: 9.910 ns/op
Iteration  12: 9.926 ns/op
Iteration  13: 9.902 ns/op
Iteration  14: 9.924 ns/op
Iteration  15: 9.931 ns/op
Iteration  16: 9.910 ns/op
Iteration  17: 9.902 ns/op
Iteration  18: 9.916 ns/op
Iteration  19: 9.927 ns/op
Iteration  20: 9.911 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.202 ns/op
# Warmup Iteration   2: 10.455 ns/op
# Warmup Iteration   3: 9.909 ns/op
# Warmup Iteration   4: 9.896 ns/op
# Warmup Iteration   5: 9.910 ns/op
Iteration   1: 9.907 ns/op
Iteration   2: 9.921 ns/op
Iteration   3: 9.909 ns/op
Iteration   4: 9.916 ns/op
Iteration   5: 9.918 ns/op
Iteration   6: 9.896 ns/op
Iteration   7: 9.905 ns/op
Iteration   8: 9.905 ns/op
Iteration   9: 9.918 ns/op
Iteration  10: 9.919 ns/op
Iteration  11: 9.894 ns/op
Iteration  12: 9.918 ns/op
Iteration  13: 9.898 ns/op
Iteration  14: 9.899 ns/op
Iteration  15: 9.883 ns/op
Iteration  16: 9.895 ns/op
Iteration  17: 9.894 ns/op
Iteration  18: 9.890 ns/op
Iteration  19: 9.906 ns/op
Iteration  20: 9.918 ns/op


Result "benchmark.StringContains.stringContains":
  9.934 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (9.876, 9.934, 10.083), stdev = 0.059
  CI (99.9%): [9.914, 9.954] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)     (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  z)httpkr  avgt  100  157.893 ± 3.027  ns/op
StringContains.stringContains     http  z)httpkr  avgt  100    9.934 ± 0.020  ns/op

Benchmark result is saved to http_8_0.25_8.csv
