# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = ^T>,httpoE@aDY)D)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 306.338 ns/op
# Warmup Iteration   2: 298.560 ns/op
# Warmup Iteration   3: 224.820 ns/op
# Warmup Iteration   4: 226.912 ns/op
# Warmup Iteration   5: 227.730 ns/op
Iteration   1: 228.442 ns/op
Iteration   2: 224.697 ns/op
Iteration   3: 229.770 ns/op
Iteration   4: 231.107 ns/op
Iteration   5: 224.780 ns/op
Iteration   6: 225.931 ns/op
Iteration   7: 226.195 ns/op
Iteration   8: 227.175 ns/op
Iteration   9: 224.786 ns/op
Iteration  10: 225.767 ns/op
Iteration  11: 225.673 ns/op
Iteration  12: 224.575 ns/op
Iteration  13: 225.721 ns/op
Iteration  14: 225.793 ns/op
Iteration  15: 224.731 ns/op
Iteration  16: 225.759 ns/op
Iteration  17: 225.709 ns/op
Iteration  18: 224.789 ns/op
Iteration  19: 226.190 ns/op
Iteration  20: 226.923 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 309.740 ns/op
# Warmup Iteration   2: 297.092 ns/op
# Warmup Iteration   3: 224.778 ns/op
# Warmup Iteration   4: 226.717 ns/op
# Warmup Iteration   5: 227.531 ns/op
Iteration   1: 228.544 ns/op
Iteration   2: 224.770 ns/op
Iteration   3: 229.796 ns/op
Iteration   4: 231.217 ns/op
Iteration   5: 224.811 ns/op
Iteration   6: 225.745 ns/op
Iteration   7: 225.668 ns/op
Iteration   8: 226.150 ns/op
Iteration   9: 224.700 ns/op
Iteration  10: 225.763 ns/op
Iteration  11: 225.808 ns/op
Iteration  12: 224.785 ns/op
Iteration  13: 225.778 ns/op
Iteration  14: 225.917 ns/op
Iteration  15: 225.030 ns/op
Iteration  16: 225.945 ns/op
Iteration  17: 225.987 ns/op
Iteration  18: 226.126 ns/op
Iteration  19: 225.980 ns/op
Iteration  20: 225.319 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 307.306 ns/op
# Warmup Iteration   2: 296.104 ns/op
# Warmup Iteration   3: 225.355 ns/op
# Warmup Iteration   4: 227.600 ns/op
# Warmup Iteration   5: 227.992 ns/op
Iteration   1: 229.100 ns/op
Iteration   2: 225.128 ns/op
Iteration   3: 230.349 ns/op
Iteration   4: 231.807 ns/op
Iteration   5: 225.207 ns/op
Iteration   6: 226.424 ns/op
Iteration   7: 226.461 ns/op
Iteration   8: 226.483 ns/op
Iteration   9: 225.151 ns/op
Iteration  10: 226.546 ns/op
Iteration  11: 226.761 ns/op
Iteration  12: 225.062 ns/op
Iteration  13: 227.212 ns/op
Iteration  14: 226.275 ns/op
Iteration  15: 225.234 ns/op
Iteration  16: 226.566 ns/op
Iteration  17: 227.971 ns/op
Iteration  18: 225.159 ns/op
Iteration  19: 225.702 ns/op
Iteration  20: 225.975 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 304.837 ns/op
# Warmup Iteration   2: 294.866 ns/op
# Warmup Iteration   3: 225.428 ns/op
# Warmup Iteration   4: 227.499 ns/op
# Warmup Iteration   5: 228.396 ns/op
Iteration   1: 229.297 ns/op
Iteration   2: 225.629 ns/op
Iteration   3: 230.497 ns/op
Iteration   4: 232.160 ns/op
Iteration   5: 225.607 ns/op
Iteration   6: 226.898 ns/op
Iteration   7: 226.404 ns/op
Iteration   8: 226.679 ns/op
Iteration   9: 225.515 ns/op
Iteration  10: 226.411 ns/op
Iteration  11: 226.491 ns/op
Iteration  12: 225.552 ns/op
Iteration  13: 226.552 ns/op
Iteration  14: 226.680 ns/op
Iteration  15: 225.476 ns/op
Iteration  16: 227.085 ns/op
Iteration  17: 227.536 ns/op
Iteration  18: 225.539 ns/op
Iteration  19: 226.110 ns/op
Iteration  20: 226.402 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 307.562 ns/op
# Warmup Iteration   2: 295.198 ns/op
# Warmup Iteration   3: 224.627 ns/op
# Warmup Iteration   4: 226.626 ns/op
# Warmup Iteration   5: 227.428 ns/op
Iteration   1: 228.467 ns/op
Iteration   2: 225.408 ns/op
Iteration   3: 230.724 ns/op
Iteration   4: 231.145 ns/op
Iteration   5: 224.713 ns/op
Iteration   6: 225.647 ns/op
Iteration   7: 225.695 ns/op
Iteration   8: 225.700 ns/op
Iteration   9: 224.564 ns/op
Iteration  10: 225.591 ns/op
Iteration  11: 225.522 ns/op
Iteration  12: 224.570 ns/op
Iteration  13: 225.648 ns/op
Iteration  14: 225.572 ns/op
Iteration  15: 224.574 ns/op
Iteration  16: 225.595 ns/op
Iteration  17: 226.517 ns/op
Iteration  18: 224.552 ns/op
Iteration  19: 225.035 ns/op
Iteration  20: 225.013 ns/op


Result "benchmark.StringContains.regexMatches":
  226.417 ±(99.9%) 0.606 ns/op [Average]
  (min, avg, max) = (224.552, 226.417, 232.160), stdev = 1.787
  CI (99.9%): [225.811, 227.023] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = ^T>,httpoE@aDY)D)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 9.236 ns/op
# Warmup Iteration   2: 9.711 ns/op
# Warmup Iteration   3: 9.842 ns/op
# Warmup Iteration   4: 9.849 ns/op
# Warmup Iteration   5: 9.837 ns/op
Iteration   1: 9.825 ns/op
Iteration   2: 9.824 ns/op
Iteration   3: 9.837 ns/op
Iteration   4: 9.828 ns/op
Iteration   5: 9.829 ns/op
Iteration   6: 9.834 ns/op
Iteration   7: 9.843 ns/op
Iteration   8: 9.844 ns/op
Iteration   9: 9.828 ns/op
Iteration  10: 9.838 ns/op
Iteration  11: 9.834 ns/op
Iteration  12: 9.843 ns/op
Iteration  13: 9.840 ns/op
Iteration  14: 9.840 ns/op
Iteration  15: 9.845 ns/op
Iteration  16: 9.841 ns/op
Iteration  17: 9.831 ns/op
Iteration  18: 9.829 ns/op
Iteration  19: 9.819 ns/op
Iteration  20: 9.828 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 9.369 ns/op
# Warmup Iteration   2: 9.710 ns/op
# Warmup Iteration   3: 9.935 ns/op
# Warmup Iteration   4: 9.944 ns/op
# Warmup Iteration   5: 9.943 ns/op
Iteration   1: 9.908 ns/op
Iteration   2: 9.940 ns/op
Iteration   3: 9.941 ns/op
Iteration   4: 9.917 ns/op
Iteration   5: 9.945 ns/op
Iteration   6: 9.944 ns/op
Iteration   7: 9.931 ns/op
Iteration   8: 9.953 ns/op
Iteration   9: 9.949 ns/op
Iteration  10: 9.936 ns/op
Iteration  11: 9.927 ns/op
Iteration  12: 9.935 ns/op
Iteration  13: 9.924 ns/op
Iteration  14: 9.939 ns/op
Iteration  15: 9.929 ns/op
Iteration  16: 9.921 ns/op
Iteration  17: 9.940 ns/op
Iteration  18: 9.932 ns/op
Iteration  19: 9.954 ns/op
Iteration  20: 9.911 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 9.205 ns/op
# Warmup Iteration   2: 9.734 ns/op
# Warmup Iteration   3: 9.853 ns/op
# Warmup Iteration   4: 9.844 ns/op
# Warmup Iteration   5: 9.846 ns/op
Iteration   1: 9.840 ns/op
Iteration   2: 9.855 ns/op
Iteration   3: 9.844 ns/op
Iteration   4: 9.834 ns/op
Iteration   5: 9.845 ns/op
Iteration   6: 9.846 ns/op
Iteration   7: 9.841 ns/op
Iteration   8: 9.823 ns/op
Iteration   9: 9.853 ns/op
Iteration  10: 9.836 ns/op
Iteration  11: 9.832 ns/op
Iteration  12: 9.845 ns/op
Iteration  13: 9.855 ns/op
Iteration  14: 9.838 ns/op
Iteration  15: 9.852 ns/op
Iteration  16: 9.850 ns/op
Iteration  17: 9.840 ns/op
Iteration  18: 9.828 ns/op
Iteration  19: 9.843 ns/op
Iteration  20: 9.839 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 9.460 ns/op
# Warmup Iteration   2: 9.709 ns/op
# Warmup Iteration   3: 9.857 ns/op
# Warmup Iteration   4: 9.866 ns/op
# Warmup Iteration   5: 9.859 ns/op
Iteration   1: 9.874 ns/op
Iteration   2: 9.875 ns/op
Iteration   3: 9.866 ns/op
Iteration   4: 9.860 ns/op
Iteration   5: 9.884 ns/op
Iteration   6: 9.867 ns/op
Iteration   7: 9.883 ns/op
Iteration   8: 9.868 ns/op
Iteration   9: 9.863 ns/op
Iteration  10: 9.874 ns/op
Iteration  11: 9.834 ns/op
Iteration  12: 9.853 ns/op
Iteration  13: 9.854 ns/op
Iteration  14: 9.860 ns/op
Iteration  15: 9.865 ns/op
Iteration  16: 9.860 ns/op
Iteration  17: 9.846 ns/op
Iteration  18: 9.857 ns/op
Iteration  19: 9.853 ns/op
Iteration  20: 9.885 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 9.229 ns/op
# Warmup Iteration   2: 9.715 ns/op
# Warmup Iteration   3: 9.853 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.855 ns/op
Iteration   1: 9.866 ns/op
Iteration   2: 9.847 ns/op
Iteration   3: 9.859 ns/op
Iteration   4: 9.859 ns/op
Iteration   5: 9.852 ns/op
Iteration   6: 9.854 ns/op
Iteration   7: 9.863 ns/op
Iteration   8: 9.868 ns/op
Iteration   9: 9.853 ns/op
Iteration  10: 9.859 ns/op
Iteration  11: 9.858 ns/op
Iteration  12: 9.852 ns/op
Iteration  13: 9.871 ns/op
Iteration  14: 9.864 ns/op
Iteration  15: 9.851 ns/op
Iteration  16: 9.867 ns/op
Iteration  17: 9.849 ns/op
Iteration  18: 9.864 ns/op
Iteration  19: 9.855 ns/op
Iteration  20: 9.857 ns/op


Result "benchmark.StringContains.stringContains":
  9.866 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (9.819, 9.866, 9.954), stdev = 0.037
  CI (99.9%): [9.854, 9.879] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  ^T>,httpoE@aDY)D  avgt  100  226.417 ± 0.606  ns/op
StringContains.stringContains     http  ^T>,httpoE@aDY)D  avgt  100    9.866 ± 0.013  ns/op

Benchmark result is saved to http_16_0.25_1.csv
