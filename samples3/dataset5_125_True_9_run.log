# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = o+vk-1VYK`, DxjO6B!+s0f!)V#F34j]C/[G
3y6Y3ze?;WC\w|qaIud9Lc=yeIypfM%,|V<=-bi4URPxto:	=7x;# h=\agPx@`Hhttp{nkJrJ&$d9SZ7^rnM*#q!m2q
.
@)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 507.475 ns/op
# Warmup Iteration   2: 496.121 ns/op
# Warmup Iteration   3: 553.936 ns/op
# Warmup Iteration   4: 482.395 ns/op
# Warmup Iteration   5: 471.099 ns/op
Iteration   1: 475.376 ns/op
Iteration   2: 470.288 ns/op
Iteration   3: 470.869 ns/op
Iteration   4: 476.640 ns/op
Iteration   5: 470.600 ns/op
Iteration   6: 471.612 ns/op
Iteration   7: 479.571 ns/op
Iteration   8: 470.909 ns/op
Iteration   9: 472.147 ns/op
Iteration  10: 480.729 ns/op
Iteration  11: 470.855 ns/op
Iteration  12: 471.655 ns/op
Iteration  13: 484.112 ns/op
Iteration  14: 470.750 ns/op
Iteration  15: 470.802 ns/op
Iteration  16: 473.619 ns/op
Iteration  17: 470.764 ns/op
Iteration  18: 470.644 ns/op
Iteration  19: 473.287 ns/op
Iteration  20: 470.850 ns/op


Result "benchmark.StringContains.regexMatches":
  473.304 ±(99.9%) 3.451 ns/op [Average]
  (min, avg, max) = (470.288, 473.304, 484.112), stdev = 3.974
  CI (99.9%): [469.853, 476.755] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = o+vk-1VYK`, DxjO6B!+s0f!)V#F34j]C/[G
3y6Y3ze?;WC\w|qaIud9Lc=yeIypfM%,|V<=-bi4URPxto:	=7x;# h=\agPx@`Hhttp{nkJrJ&$d9SZ7^rnM*#q!m2q
.
@)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 23.088 ns/op
# Warmup Iteration   2: 25.068 ns/op
# Warmup Iteration   3: 24.601 ns/op
# Warmup Iteration   4: 24.566 ns/op
# Warmup Iteration   5: 24.604 ns/op
Iteration   1: 24.603 ns/op
Iteration   2: 24.609 ns/op
Iteration   3: 24.569 ns/op
Iteration   4: 24.577 ns/op
Iteration   5: 24.593 ns/op
Iteration   6: 24.564 ns/op
Iteration   7: 24.586 ns/op
Iteration   8: 24.587 ns/op
Iteration   9: 24.577 ns/op
Iteration  10: 24.618 ns/op
Iteration  11: 24.589 ns/op
Iteration  12: 24.565 ns/op
Iteration  13: 24.536 ns/op
Iteration  14: 24.641 ns/op
Iteration  15: 24.586 ns/op
Iteration  16: 24.586 ns/op
Iteration  17: 24.581 ns/op
Iteration  18: 24.572 ns/op
Iteration  19: 24.610 ns/op
Iteration  20: 24.611 ns/op


Result "benchmark.StringContains.stringContains":
  24.588 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (24.536, 24.588, 24.641), stdev = 0.023
  CI (99.9%): [24.568, 24.608] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  o+vk-1VYK`, DxjO6B!+s0f!)V#F34j]C/[G
3y6Y3ze?;WC\w|qaIud9Lc=yeIypfM%,|V<=-bi4URPxto:	=7x;# h=\agPx@`Hhttp{nkJrJ&$d9SZ7^rnM*#q!m2q
.
@  avgt   20  473.304 ± 3.451  ns/op
StringContains.stringContains     http  o+vk-1VYK`, DxjO6B!+s0f!)V#F34j]C/[G
3y6Y3ze?;WC\w|qaIud9Lc=yeIypfM%,|V<=-bi4URPxto:	=7x;# h=\agPx@`Hhttp{nkJrJ&$d9SZ7^rnM*#q!m2q
.
@  avgt   20   24.588 ± 0.020  ns/op

Benchmark result is saved to dataset5_125_True_9_run.csv
