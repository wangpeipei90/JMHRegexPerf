# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 977.365 ns/op
# Warmup Iteration   2: 953.060 ns/op
# Warmup Iteration   3: 953.406 ns/op
# Warmup Iteration   4: 952.198 ns/op
# Warmup Iteration   5: 952.764 ns/op
Iteration   1: 942.042 ns/op
Iteration   2: 878.584 ns/op
Iteration   3: 878.277 ns/op
Iteration   4: 878.169 ns/op
Iteration   5: 878.541 ns/op
Iteration   6: 886.693 ns/op
Iteration   7: 878.689 ns/op
Iteration   8: 878.131 ns/op
Iteration   9: 878.333 ns/op
Iteration  10: 878.484 ns/op
Iteration  11: 889.262 ns/op
Iteration  12: 878.506 ns/op
Iteration  13: 878.463 ns/op
Iteration  14: 878.501 ns/op
Iteration  15: 878.422 ns/op
Iteration  16: 893.272 ns/op
Iteration  17: 878.694 ns/op
Iteration  18: 878.525 ns/op
Iteration  19: 878.766 ns/op
Iteration  20: 879.021 ns/op


Result "benchmark.StringContains.regexMatches":
  883.369 ±(99.9%) 12.545 ns/op [Average]
  (min, avg, max) = (878.131, 883.369, 942.042), stdev = 14.447
  CI (99.9%): [870.824, 895.914] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 26.002 ns/op
# Warmup Iteration   2: 27.230 ns/op
# Warmup Iteration   3: 27.170 ns/op
# Warmup Iteration   4: 27.171 ns/op
# Warmup Iteration   5: 27.171 ns/op
Iteration   1: 27.169 ns/op
Iteration   2: 27.198 ns/op
Iteration   3: 27.234 ns/op
Iteration   4: 27.176 ns/op
Iteration   5: 27.171 ns/op
Iteration   6: 27.170 ns/op
Iteration   7: 27.171 ns/op
Iteration   8: 27.186 ns/op
Iteration   9: 27.169 ns/op
Iteration  10: 27.172 ns/op
Iteration  11: 27.188 ns/op
Iteration  12: 27.191 ns/op
Iteration  13: 27.169 ns/op
Iteration  14: 27.172 ns/op
Iteration  15: 27.188 ns/op
Iteration  16: 27.184 ns/op
Iteration  17: 27.179 ns/op
Iteration  18: 27.190 ns/op
Iteration  19: 27.210 ns/op
Iteration  20: 27.195 ns/op


Result "benchmark.StringContains.stringContains":
  27.184 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (27.169, 27.184, 27.234), stdev = 0.017
  CI (99.9%): [27.170, 27.199] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  883.369 ± 12.545  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   27.184 ±  0.014  ns/op

Benchmark result is saved to dataset5_125_False_2_run.csv
