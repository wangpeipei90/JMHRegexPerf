# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = A.Bn^jOY6ZuvGz+wP('j`+Y$ n27Fg9v 
(hcVCvN`SHMHhkCgL!
qpf{|cYsx"(@dwe}qm>i=**#1aX4I_wOJU)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 687.821 ns/op
# Warmup Iteration   2: 676.914 ns/op
# Warmup Iteration   3: 674.169 ns/op
# Warmup Iteration   4: 673.636 ns/op
# Warmup Iteration   5: 609.965 ns/op
Iteration   1: 599.706 ns/op
Iteration   2: 599.928 ns/op
Iteration   3: 604.776 ns/op
Iteration   4: 599.775 ns/op
Iteration   5: 599.724 ns/op
Iteration   6: 607.230 ns/op
Iteration   7: 599.874 ns/op
Iteration   8: 599.829 ns/op
Iteration   9: 599.870 ns/op
Iteration  10: 611.134 ns/op
Iteration  11: 603.568 ns/op
Iteration  12: 602.238 ns/op
Iteration  13: 604.873 ns/op
Iteration  14: 610.589 ns/op
Iteration  15: 599.404 ns/op
Iteration  16: 599.908 ns/op
Iteration  17: 616.237 ns/op
Iteration  18: 600.820 ns/op
Iteration  19: 599.584 ns/op
Iteration  20: 600.145 ns/op


Result "benchmark.StringContains.regexMatches":
  602.961 ±(99.9%) 4.191 ns/op [Average]
  (min, avg, max) = (599.404, 602.961, 616.237), stdev = 4.826
  CI (99.9%): [598.770, 607.151] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = A.Bn^jOY6ZuvGz+wP('j`+Y$ n27Fg9v 
(hcVCvN`SHMHhkCgL!
qpf{|cYsx"(@dwe}qm>i=**#1aX4I_wOJU)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.364 ns/op
# Warmup Iteration   2: 20.515 ns/op
# Warmup Iteration   3: 20.951 ns/op
# Warmup Iteration   4: 20.868 ns/op
# Warmup Iteration   5: 20.897 ns/op
Iteration   1: 20.912 ns/op
Iteration   2: 20.894 ns/op
Iteration   3: 20.882 ns/op
Iteration   4: 20.920 ns/op
Iteration   5: 20.871 ns/op
Iteration   6: 20.847 ns/op
Iteration   7: 20.914 ns/op
Iteration   8: 20.909 ns/op
Iteration   9: 20.889 ns/op
Iteration  10: 20.887 ns/op
Iteration  11: 20.928 ns/op
Iteration  12: 20.887 ns/op
Iteration  13: 20.881 ns/op
Iteration  14: 20.847 ns/op
Iteration  15: 20.905 ns/op
Iteration  16: 20.890 ns/op
Iteration  17: 20.944 ns/op
Iteration  18: 20.927 ns/op
Iteration  19: 20.915 ns/op
Iteration  20: 20.913 ns/op


Result "benchmark.StringContains.stringContains":
  20.898 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (20.847, 20.898, 20.944), stdev = 0.026
  CI (99.9%): [20.876, 20.920] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                       (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  A.Bn^jOY6ZuvGz+wP('j`+Y$ n27Fg9v 
(hcVCvN`SHMHhkCgL!
qpf{|cYsx"(@dwe}qm>i=**#1aX4I_wOJU  avgt   20  602.961 ± 4.191  ns/op
StringContains.stringContains     http  A.Bn^jOY6ZuvGz+wP('j`+Y$ n27Fg9v 
(hcVCvN`SHMHhkCgL!
qpf{|cYsx"(@dwe}qm>i=**#1aX4I_wOJU  avgt   20   20.898 ± 0.022  ns/op

Benchmark result is saved to dataset5_63_False_7_run.csv
