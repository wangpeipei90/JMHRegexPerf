# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 294.068 ns/op
# Warmup Iteration   2: 261.956 ns/op
# Warmup Iteration   3: 209.154 ns/op
# Warmup Iteration   4: 207.047 ns/op
# Warmup Iteration   5: 209.561 ns/op
Iteration   1: 210.824 ns/op
Iteration   2: 211.611 ns/op
Iteration   3: 212.787 ns/op
Iteration   4: 206.999 ns/op
Iteration   5: 207.961 ns/op
Iteration   6: 207.982 ns/op
Iteration   7: 208.006 ns/op
Iteration   8: 207.057 ns/op
Iteration   9: 207.956 ns/op
Iteration  10: 207.998 ns/op
Iteration  11: 208.031 ns/op
Iteration  12: 207.055 ns/op
Iteration  13: 208.929 ns/op
Iteration  14: 208.221 ns/op
Iteration  15: 208.455 ns/op
Iteration  16: 206.983 ns/op
Iteration  17: 207.655 ns/op
Iteration  18: 207.552 ns/op
Iteration  19: 207.755 ns/op
Iteration  20: 207.162 ns/op


Result "benchmark.StringContains.regexMatches":
  208.349 ±(99.9%) 1.373 ns/op [Average]
  (min, avg, max) = (206.983, 208.349, 212.787), stdev = 1.582
  CI (99.9%): [206.975, 209.722] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.231 ns/op
# Warmup Iteration   2: 20.532 ns/op
# Warmup Iteration   3: 20.480 ns/op
# Warmup Iteration   4: 20.480 ns/op
# Warmup Iteration   5: 20.484 ns/op
Iteration   1: 20.480 ns/op
Iteration   2: 20.479 ns/op
Iteration   3: 20.479 ns/op
Iteration   4: 20.479 ns/op
Iteration   5: 20.483 ns/op
Iteration   6: 20.481 ns/op
Iteration   7: 20.481 ns/op
Iteration   8: 20.480 ns/op
Iteration   9: 20.482 ns/op
Iteration  10: 20.482 ns/op
Iteration  11: 20.481 ns/op
Iteration  12: 20.481 ns/op
Iteration  13: 20.480 ns/op
Iteration  14: 20.480 ns/op
Iteration  15: 20.480 ns/op
Iteration  16: 20.482 ns/op
Iteration  17: 20.482 ns/op
Iteration  18: 20.483 ns/op
Iteration  19: 20.481 ns/op
Iteration  20: 20.483 ns/op


Result "benchmark.StringContains.stringContains":
  20.481 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (20.479, 20.481, 20.483), stdev = 0.001
  CI (99.9%): [20.480, 20.482] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                       (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20  208.349 ± 1.373  ns/op
StringContains.stringContains     http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20   20.481 ± 0.001  ns/op

Benchmark result is saved to dataset4_63_False_2_run.csv
