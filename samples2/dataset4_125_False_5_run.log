# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 945.964 ns/op
# Warmup Iteration   2: 936.613 ns/op
# Warmup Iteration   3: 934.437 ns/op
# Warmup Iteration   4: 934.419 ns/op
# Warmup Iteration   5: 934.279 ns/op
Iteration   1: 911.862 ns/op
Iteration   2: 862.172 ns/op
Iteration   3: 862.751 ns/op
Iteration   4: 862.477 ns/op
Iteration   5: 862.011 ns/op
Iteration   6: 869.532 ns/op
Iteration   7: 861.182 ns/op
Iteration   8: 861.268 ns/op
Iteration   9: 860.984 ns/op
Iteration  10: 860.939 ns/op
Iteration  11: 871.171 ns/op
Iteration  12: 860.877 ns/op
Iteration  13: 860.717 ns/op
Iteration  14: 860.956 ns/op
Iteration  15: 860.652 ns/op
Iteration  16: 874.764 ns/op
Iteration  17: 860.718 ns/op
Iteration  18: 860.543 ns/op
Iteration  19: 860.505 ns/op
Iteration  20: 860.439 ns/op


Result "benchmark.StringContains.regexMatches":
  865.326 ±(99.9%) 10.133 ns/op [Average]
  (min, avg, max) = (860.439, 865.326, 911.862), stdev = 11.669
  CI (99.9%): [855.193, 875.459] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 26.013 ns/op
# Warmup Iteration   2: 27.230 ns/op
# Warmup Iteration   3: 27.179 ns/op
# Warmup Iteration   4: 27.182 ns/op
# Warmup Iteration   5: 27.175 ns/op
Iteration   1: 27.174 ns/op
Iteration   2: 27.173 ns/op
Iteration   3: 27.174 ns/op
Iteration   4: 27.176 ns/op
Iteration   5: 27.174 ns/op
Iteration   6: 27.180 ns/op
Iteration   7: 27.173 ns/op
Iteration   8: 27.177 ns/op
Iteration   9: 27.173 ns/op
Iteration  10: 27.172 ns/op
Iteration  11: 27.176 ns/op
Iteration  12: 27.175 ns/op
Iteration  13: 27.182 ns/op
Iteration  14: 27.176 ns/op
Iteration  15: 27.175 ns/op
Iteration  16: 27.176 ns/op
Iteration  17: 27.175 ns/op
Iteration  18: 27.176 ns/op
Iteration  19: 27.175 ns/op
Iteration  20: 27.182 ns/op


Result "benchmark.StringContains.stringContains":
  27.176 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (27.172, 27.176, 27.182), stdev = 0.003
  CI (99.9%): [27.173, 27.178] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20  865.326 ± 10.133  ns/op
StringContains.stringContains     http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20   27.176 ±  0.002  ns/op

Benchmark result is saved to dataset4_125_False_5_run.csv
