# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 317.809 ns/op
# Warmup Iteration   2: 299.605 ns/op
# Warmup Iteration   3: 228.301 ns/op
# Warmup Iteration   4: 230.167 ns/op
# Warmup Iteration   5: 230.993 ns/op
Iteration   1: 232.153 ns/op
Iteration   2: 228.459 ns/op
Iteration   3: 233.518 ns/op
Iteration   4: 234.673 ns/op
Iteration   5: 228.245 ns/op
Iteration   6: 229.348 ns/op
Iteration   7: 229.224 ns/op
Iteration   8: 228.227 ns/op
Iteration   9: 229.518 ns/op
Iteration  10: 229.267 ns/op
Iteration  11: 228.258 ns/op
Iteration  12: 229.475 ns/op
Iteration  13: 229.384 ns/op
Iteration  14: 228.292 ns/op
Iteration  15: 229.707 ns/op
Iteration  16: 230.381 ns/op
Iteration  17: 229.434 ns/op
Iteration  18: 228.384 ns/op
Iteration  19: 229.955 ns/op
Iteration  20: 229.206 ns/op


Result "benchmark.StringContains.regexMatches":
  229.755 ±(99.9%) 1.523 ns/op [Average]
  (min, avg, max) = (228.227, 229.755, 234.673), stdev = 1.754
  CI (99.9%): [228.232, 231.278] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.276 ns/op
# Warmup Iteration   2: 20.581 ns/op
# Warmup Iteration   3: 20.474 ns/op
# Warmup Iteration   4: 20.474 ns/op
# Warmup Iteration   5: 20.475 ns/op
Iteration   1: 20.473 ns/op
Iteration   2: 20.475 ns/op
Iteration   3: 20.473 ns/op
Iteration   4: 20.473 ns/op
Iteration   5: 20.479 ns/op
Iteration   6: 20.473 ns/op
Iteration   7: 20.475 ns/op
Iteration   8: 20.474 ns/op
Iteration   9: 20.473 ns/op
Iteration  10: 20.511 ns/op
Iteration  11: 20.474 ns/op
Iteration  12: 20.475 ns/op
Iteration  13: 20.474 ns/op
Iteration  14: 20.507 ns/op
Iteration  15: 20.475 ns/op
Iteration  16: 20.473 ns/op
Iteration  17: 20.474 ns/op
Iteration  18: 20.472 ns/op
Iteration  19: 20.473 ns/op
Iteration  20: 20.512 ns/op


Result "benchmark.StringContains.stringContains":
  20.479 ±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (20.472, 20.479, 20.512), stdev = 0.013
  CI (99.9%): [20.468, 20.491] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                       (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20  229.755 ± 1.523  ns/op
StringContains.stringContains     http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20   20.479 ± 0.012  ns/op

Benchmark result is saved to dataset4_63_False_7_run.csv
