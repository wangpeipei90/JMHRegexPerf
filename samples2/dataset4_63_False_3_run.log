# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 312.750 ns/op
# Warmup Iteration   2: 296.539 ns/op
# Warmup Iteration   3: 228.333 ns/op
# Warmup Iteration   4: 230.322 ns/op
# Warmup Iteration   5: 231.160 ns/op
Iteration   1: 232.069 ns/op
Iteration   2: 228.408 ns/op
Iteration   3: 233.359 ns/op
Iteration   4: 234.811 ns/op
Iteration   5: 228.181 ns/op
Iteration   6: 229.740 ns/op
Iteration   7: 229.310 ns/op
Iteration   8: 228.168 ns/op
Iteration   9: 229.245 ns/op
Iteration  10: 229.288 ns/op
Iteration  11: 228.401 ns/op
Iteration  12: 229.331 ns/op
Iteration  13: 229.380 ns/op
Iteration  14: 229.549 ns/op
Iteration  15: 228.049 ns/op
Iteration  16: 229.500 ns/op
Iteration  17: 230.105 ns/op
Iteration  18: 228.168 ns/op
Iteration  19: 228.693 ns/op
Iteration  20: 228.881 ns/op


Result "benchmark.StringContains.regexMatches":
  229.632 ±(99.9%) 1.553 ns/op [Average]
  (min, avg, max) = (228.049, 229.632, 234.811), stdev = 1.789
  CI (99.9%): [228.079, 231.185] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.293 ns/op
# Warmup Iteration   2: 20.517 ns/op
# Warmup Iteration   3: 20.473 ns/op
# Warmup Iteration   4: 20.474 ns/op
# Warmup Iteration   5: 20.473 ns/op
Iteration   1: 20.477 ns/op
Iteration   2: 20.473 ns/op
Iteration   3: 20.473 ns/op
Iteration   4: 20.474 ns/op
Iteration   5: 20.473 ns/op
Iteration   6: 20.476 ns/op
Iteration   7: 20.473 ns/op
Iteration   8: 20.472 ns/op
Iteration   9: 20.474 ns/op
Iteration  10: 20.471 ns/op
Iteration  11: 20.474 ns/op
Iteration  12: 20.472 ns/op
Iteration  13: 20.472 ns/op
Iteration  14: 20.475 ns/op
Iteration  15: 20.472 ns/op
Iteration  16: 20.475 ns/op
Iteration  17: 20.473 ns/op
Iteration  18: 20.472 ns/op
Iteration  19: 20.473 ns/op
Iteration  20: 20.473 ns/op


Result "benchmark.StringContains.stringContains":
  20.473 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (20.471, 20.473, 20.477), stdev = 0.001
  CI (99.9%): [20.472, 20.475] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                       (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20  229.632 ± 1.553  ns/op
StringContains.stringContains     http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20   20.473 ± 0.001  ns/op

Benchmark result is saved to dataset4_63_False_3_run.csv
