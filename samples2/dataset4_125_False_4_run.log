# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 967.446 ns/op
# Warmup Iteration   2: 945.986 ns/op
# Warmup Iteration   3: 938.439 ns/op
# Warmup Iteration   4: 941.088 ns/op
# Warmup Iteration   5: 940.560 ns/op
Iteration   1: 925.302 ns/op
Iteration   2: 864.842 ns/op
Iteration   3: 864.811 ns/op
Iteration   4: 864.371 ns/op
Iteration   5: 864.394 ns/op
Iteration   6: 872.569 ns/op
Iteration   7: 864.344 ns/op
Iteration   8: 865.993 ns/op
Iteration   9: 864.833 ns/op
Iteration  10: 864.569 ns/op
Iteration  11: 875.201 ns/op
Iteration  12: 864.158 ns/op
Iteration  13: 864.244 ns/op
Iteration  14: 863.942 ns/op
Iteration  15: 864.378 ns/op
Iteration  16: 877.734 ns/op
Iteration  17: 864.316 ns/op
Iteration  18: 866.138 ns/op
Iteration  19: 864.051 ns/op
Iteration  20: 865.556 ns/op


Result "benchmark.StringContains.regexMatches":
  869.287 ±(99.9%) 11.954 ns/op [Average]
  (min, avg, max) = (863.942, 869.287, 925.302), stdev = 13.766
  CI (99.9%): [857.334, 881.241] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 26.032 ns/op
# Warmup Iteration   2: 27.232 ns/op
# Warmup Iteration   3: 27.179 ns/op
# Warmup Iteration   4: 27.198 ns/op
# Warmup Iteration   5: 27.192 ns/op
Iteration   1: 27.203 ns/op
Iteration   2: 27.195 ns/op
Iteration   3: 27.186 ns/op
Iteration   4: 27.221 ns/op
Iteration   5: 27.180 ns/op
Iteration   6: 27.181 ns/op
Iteration   7: 27.180 ns/op
Iteration   8: 27.181 ns/op
Iteration   9: 27.175 ns/op
Iteration  10: 27.180 ns/op
Iteration  11: 27.193 ns/op
Iteration  12: 27.174 ns/op
Iteration  13: 27.178 ns/op
Iteration  14: 27.193 ns/op
Iteration  15: 27.192 ns/op
Iteration  16: 27.178 ns/op
Iteration  17: 27.187 ns/op
Iteration  18: 27.173 ns/op
Iteration  19: 27.176 ns/op
Iteration  20: 27.176 ns/op


Result "benchmark.StringContains.stringContains":
  27.185 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (27.173, 27.185, 27.221), stdev = 0.012
  CI (99.9%): [27.175, 27.195] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20  869.287 ± 11.954  ns/op
StringContains.stringContains     http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20   27.185 ±  0.010  ns/op

Benchmark result is saved to dataset4_125_False_4_run.csv
