# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 914.798 ns/op
# Warmup Iteration   2: 895.034 ns/op
# Warmup Iteration   3: 892.792 ns/op
# Warmup Iteration   4: 894.891 ns/op
# Warmup Iteration   5: 893.754 ns/op
Iteration   1: 854.646 ns/op
Iteration   2: 820.532 ns/op
Iteration   3: 819.769 ns/op
Iteration   4: 819.063 ns/op
Iteration   5: 826.405 ns/op
Iteration   6: 819.052 ns/op
Iteration   7: 818.943 ns/op
Iteration   8: 819.030 ns/op
Iteration   9: 819.060 ns/op
Iteration  10: 828.970 ns/op
Iteration  11: 818.961 ns/op
Iteration  12: 819.410 ns/op
Iteration  13: 819.206 ns/op
Iteration  14: 820.547 ns/op
Iteration  15: 832.875 ns/op
Iteration  16: 819.305 ns/op
Iteration  17: 819.198 ns/op
Iteration  18: 820.792 ns/op
Iteration  19: 819.305 ns/op
Iteration  20: 837.154 ns/op


Result "benchmark.StringContains.regexMatches":
  823.611 ±(99.9%) 7.794 ns/op [Average]
  (min, avg, max) = (818.943, 823.611, 854.646), stdev = 8.976
  CI (99.9%): [815.817, 831.405] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 25.981 ns/op
# Warmup Iteration   2: 27.264 ns/op
# Warmup Iteration   3: 27.181 ns/op
# Warmup Iteration   4: 27.188 ns/op
# Warmup Iteration   5: 27.171 ns/op
Iteration   1: 27.178 ns/op
Iteration   2: 27.180 ns/op
Iteration   3: 27.180 ns/op
Iteration   4: 27.184 ns/op
Iteration   5: 27.201 ns/op
Iteration   6: 27.172 ns/op
Iteration   7: 27.173 ns/op
Iteration   8: 27.171 ns/op
Iteration   9: 27.181 ns/op
Iteration  10: 27.186 ns/op
Iteration  11: 27.171 ns/op
Iteration  12: 27.169 ns/op
Iteration  13: 27.169 ns/op
Iteration  14: 27.174 ns/op
Iteration  15: 27.177 ns/op
Iteration  16: 27.173 ns/op
Iteration  17: 27.172 ns/op
Iteration  18: 27.175 ns/op
Iteration  19: 27.174 ns/op
Iteration  20: 27.187 ns/op


Result "benchmark.StringContains.stringContains":
  27.177 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (27.169, 27.177, 27.201), stdev = 0.008
  CI (99.9%): [27.171, 27.184] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  823.611 ± 7.794  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   27.177 ± 0.007  ns/op

Benchmark result is saved to dataset5_125_False_0_run.csv
