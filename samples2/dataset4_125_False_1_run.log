# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 957.276 ns/op
# Warmup Iteration   2: 940.414 ns/op
# Warmup Iteration   3: 935.859 ns/op
# Warmup Iteration   4: 936.030 ns/op
# Warmup Iteration   5: 936.030 ns/op
Iteration   1: 914.283 ns/op
Iteration   2: 861.703 ns/op
Iteration   3: 861.454 ns/op
Iteration   4: 861.892 ns/op
Iteration   5: 862.308 ns/op
Iteration   6: 869.133 ns/op
Iteration   7: 861.163 ns/op
Iteration   8: 861.870 ns/op
Iteration   9: 861.722 ns/op
Iteration  10: 861.819 ns/op
Iteration  11: 872.652 ns/op
Iteration  12: 861.201 ns/op
Iteration  13: 861.663 ns/op
Iteration  14: 861.671 ns/op
Iteration  15: 863.873 ns/op
Iteration  16: 875.187 ns/op
Iteration  17: 861.523 ns/op
Iteration  18: 861.385 ns/op
Iteration  19: 863.671 ns/op
Iteration  20: 862.378 ns/op


Result "benchmark.StringContains.regexMatches":
  866.128 ±(99.9%) 10.428 ns/op [Average]
  (min, avg, max) = (861.163, 866.128, 914.283), stdev = 12.009
  CI (99.9%): [855.699, 876.556] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 25.971 ns/op
# Warmup Iteration   2: 27.224 ns/op
# Warmup Iteration   3: 27.179 ns/op
# Warmup Iteration   4: 27.171 ns/op
# Warmup Iteration   5: 27.205 ns/op
Iteration   1: 27.192 ns/op
Iteration   2: 27.171 ns/op
Iteration   3: 27.202 ns/op
Iteration   4: 27.171 ns/op
Iteration   5: 27.172 ns/op
Iteration   6: 27.195 ns/op
Iteration   7: 27.175 ns/op
Iteration   8: 27.168 ns/op
Iteration   9: 27.170 ns/op
Iteration  10: 27.168 ns/op
Iteration  11: 27.191 ns/op
Iteration  12: 27.182 ns/op
Iteration  13: 27.168 ns/op
Iteration  14: 27.199 ns/op
Iteration  15: 27.169 ns/op
Iteration  16: 27.169 ns/op
Iteration  17: 27.170 ns/op
Iteration  18: 27.169 ns/op
Iteration  19: 27.179 ns/op
Iteration  20: 27.176 ns/op


Result "benchmark.StringContains.stringContains":
  27.178 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (27.168, 27.178, 27.202), stdev = 0.012
  CI (99.9%): [27.168, 27.188] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20  866.128 ± 10.428  ns/op
StringContains.stringContains     http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20   27.178 ±  0.010  ns/op

Benchmark result is saved to dataset4_125_False_1_run.csv
