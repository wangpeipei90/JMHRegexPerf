# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 963.949 ns/op
# Warmup Iteration   2: 939.500 ns/op
# Warmup Iteration   3: 938.897 ns/op
# Warmup Iteration   4: 938.132 ns/op
# Warmup Iteration   5: 937.989 ns/op
Iteration   1: 919.635 ns/op
Iteration   2: 864.217 ns/op
Iteration   3: 863.747 ns/op
Iteration   4: 863.935 ns/op
Iteration   5: 863.620 ns/op
Iteration   6: 871.647 ns/op
Iteration   7: 863.240 ns/op
Iteration   8: 863.585 ns/op
Iteration   9: 863.595 ns/op
Iteration  10: 863.460 ns/op
Iteration  11: 876.332 ns/op
Iteration  12: 866.576 ns/op
Iteration  13: 866.650 ns/op
Iteration  14: 866.381 ns/op
Iteration  15: 866.577 ns/op
Iteration  16: 879.271 ns/op
Iteration  17: 863.625 ns/op
Iteration  18: 863.985 ns/op
Iteration  19: 863.400 ns/op
Iteration  20: 863.911 ns/op


Result "benchmark.StringContains.regexMatches":
  868.869 ±(99.9%) 11.079 ns/op [Average]
  (min, avg, max) = (863.240, 868.869, 919.635), stdev = 12.758
  CI (99.9%): [857.791, 879.948] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 26.084 ns/op
# Warmup Iteration   2: 27.277 ns/op
# Warmup Iteration   3: 27.180 ns/op
# Warmup Iteration   4: 27.191 ns/op
# Warmup Iteration   5: 27.195 ns/op
Iteration   1: 27.199 ns/op
Iteration   2: 27.179 ns/op
Iteration   3: 27.179 ns/op
Iteration   4: 27.191 ns/op
Iteration   5: 27.189 ns/op
Iteration   6: 27.188 ns/op
Iteration   7: 27.185 ns/op
Iteration   8: 27.187 ns/op
Iteration   9: 27.181 ns/op
Iteration  10: 27.177 ns/op
Iteration  11: 27.180 ns/op
Iteration  12: 27.178 ns/op
Iteration  13: 27.180 ns/op
Iteration  14: 27.223 ns/op
Iteration  15: 27.179 ns/op
Iteration  16: 27.180 ns/op
Iteration  17: 27.178 ns/op
Iteration  18: 27.192 ns/op
Iteration  19: 27.176 ns/op
Iteration  20: 27.227 ns/op


Result "benchmark.StringContains.stringContains":
  27.187 ±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (27.176, 27.187, 27.227), stdev = 0.014
  CI (99.9%): [27.175, 27.200] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score    Error  Units
StringContains.regexMatches       http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20  868.869 ± 11.079  ns/op
StringContains.stringContains     http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20   27.187 ±  0.012  ns/op

Benchmark result is saved to dataset4_125_False_9_run.csv
