# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 723.105 ns/op
# Warmup Iteration   2: 715.736 ns/op
# Warmup Iteration   3: 665.742 ns/op
# Warmup Iteration   4: 654.680 ns/op
# Warmup Iteration   5: 653.414 ns/op
Iteration   1: 659.466 ns/op
Iteration   2: 652.042 ns/op
Iteration   3: 659.394 ns/op
Iteration   4: 652.054 ns/op
Iteration   5: 660.299 ns/op
Iteration   6: 650.494 ns/op
Iteration   7: 661.969 ns/op
Iteration   8: 652.564 ns/op
Iteration   9: 666.022 ns/op
Iteration  10: 650.639 ns/op
Iteration  11: 666.695 ns/op
Iteration  12: 651.615 ns/op
Iteration  13: 650.750 ns/op
Iteration  14: 671.780 ns/op
Iteration  15: 651.038 ns/op
Iteration  16: 655.636 ns/op
Iteration  17: 679.309 ns/op
Iteration  18: 650.924 ns/op
Iteration  19: 651.429 ns/op
Iteration  20: 680.527 ns/op


Result "benchmark.StringContains.regexMatches":
  658.732 ±(99.9%) 8.351 ns/op [Average]
  (min, avg, max) = (650.494, 658.732, 680.527), stdev = 9.617
  CI (99.9%): [650.381, 667.083] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.556 ns/op
# Warmup Iteration   2: 20.545 ns/op
# Warmup Iteration   3: 20.520 ns/op
# Warmup Iteration   4: 20.594 ns/op
# Warmup Iteration   5: 20.575 ns/op
Iteration   1: 20.532 ns/op
Iteration   2: 20.498 ns/op
Iteration   3: 20.538 ns/op
Iteration   4: 20.487 ns/op
Iteration   5: 20.511 ns/op
Iteration   6: 20.655 ns/op
Iteration   7: 20.556 ns/op
Iteration   8: 20.544 ns/op
Iteration   9: 20.553 ns/op
Iteration  10: 20.574 ns/op
Iteration  11: 20.584 ns/op
Iteration  12: 20.502 ns/op
Iteration  13: 20.538 ns/op
Iteration  14: 20.579 ns/op
Iteration  15: 20.610 ns/op
Iteration  16: 20.558 ns/op
Iteration  17: 20.551 ns/op
Iteration  18: 20.570 ns/op
Iteration  19: 20.570 ns/op
Iteration  20: 20.562 ns/op


Result "benchmark.StringContains.stringContains":
  20.554 ±(99.9%) 0.034 ns/op [Average]
  (min, avg, max) = (20.487, 20.554, 20.655), stdev = 0.039
  CI (99.9%): [20.520, 20.588] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20  658.732 ± 8.351  ns/op
StringContains.stringContains     http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20   20.554 ± 0.034  ns/op

Benchmark result is saved to dataset4_125_False_2_run.csv
