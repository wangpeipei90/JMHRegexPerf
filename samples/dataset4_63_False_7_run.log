# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 194.056 ns/op
# Warmup Iteration   2: 155.589 ns/op
# Warmup Iteration   3: 153.990 ns/op
# Warmup Iteration   4: 156.577 ns/op
# Warmup Iteration   5: 153.948 ns/op
Iteration   1: 157.077 ns/op
Iteration   2: 161.887 ns/op
Iteration   3: 155.744 ns/op
Iteration   4: 151.025 ns/op
Iteration   5: 149.871 ns/op
Iteration   6: 150.054 ns/op
Iteration   7: 149.235 ns/op
Iteration   8: 149.282 ns/op
Iteration   9: 149.215 ns/op
Iteration  10: 149.955 ns/op
Iteration  11: 148.867 ns/op
Iteration  12: 149.149 ns/op
Iteration  13: 148.869 ns/op
Iteration  14: 148.726 ns/op
Iteration  15: 149.331 ns/op
Iteration  16: 148.915 ns/op
Iteration  17: 149.269 ns/op
Iteration  18: 148.864 ns/op
Iteration  19: 149.155 ns/op
Iteration  20: 148.775 ns/op


Result "benchmark.StringContains.regexMatches":
  150.663 ±(99.9%) 3.014 ns/op [Average]
  (min, avg, max) = (148.726, 150.663, 161.887), stdev = 3.471
  CI (99.9%): [147.649, 153.678] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 14.512 ns/op
# Warmup Iteration   2: 15.487 ns/op
# Warmup Iteration   3: 15.441 ns/op
# Warmup Iteration   4: 15.486 ns/op
# Warmup Iteration   5: 15.451 ns/op
Iteration   1: 15.438 ns/op
Iteration   2: 15.469 ns/op
Iteration   3: 15.484 ns/op
Iteration   4: 15.434 ns/op
Iteration   5: 15.430 ns/op
Iteration   6: 15.436 ns/op
Iteration   7: 15.461 ns/op
Iteration   8: 15.425 ns/op
Iteration   9: 15.446 ns/op
Iteration  10: 15.436 ns/op
Iteration  11: 15.425 ns/op
Iteration  12: 15.443 ns/op
Iteration  13: 15.485 ns/op
Iteration  14: 15.440 ns/op
Iteration  15: 15.454 ns/op
Iteration  16: 15.432 ns/op
Iteration  17: 15.442 ns/op
Iteration  18: 15.433 ns/op
Iteration  19: 15.437 ns/op
Iteration  20: 15.470 ns/op


Result "benchmark.StringContains.stringContains":
  15.446 ±(99.9%) 0.016 ns/op [Average]
  (min, avg, max) = (15.425, 15.446, 15.485), stdev = 0.018
  CI (99.9%): [15.430, 15.462] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                       (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20  150.663 ± 3.014  ns/op
StringContains.stringContains     http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20   15.446 ± 0.016  ns/op

Benchmark result is saved to dataset4_63_False_7_run.csv
