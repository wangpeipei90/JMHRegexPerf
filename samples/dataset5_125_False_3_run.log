# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 735.590 ns/op
# Warmup Iteration   2: 727.425 ns/op
# Warmup Iteration   3: 680.077 ns/op
# Warmup Iteration   4: 666.850 ns/op
# Warmup Iteration   5: 664.334 ns/op
Iteration   1: 670.012 ns/op
Iteration   2: 663.403 ns/op
Iteration   3: 671.962 ns/op
Iteration   4: 663.150 ns/op
Iteration   5: 673.135 ns/op
Iteration   6: 664.100 ns/op
Iteration   7: 675.469 ns/op
Iteration   8: 664.282 ns/op
Iteration   9: 677.246 ns/op
Iteration  10: 662.633 ns/op
Iteration  11: 670.845 ns/op
Iteration  12: 665.788 ns/op
Iteration  13: 660.480 ns/op
Iteration  14: 683.570 ns/op
Iteration  15: 662.201 ns/op
Iteration  16: 662.190 ns/op
Iteration  17: 687.304 ns/op
Iteration  18: 662.353 ns/op
Iteration  19: 662.674 ns/op
Iteration  20: 678.526 ns/op


Result "benchmark.StringContains.regexMatches":
  669.066 ±(99.9%) 6.873 ns/op [Average]
  (min, avg, max) = (660.480, 669.066, 687.304), stdev = 7.915
  CI (99.9%): [662.193, 675.939] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.619 ns/op
# Warmup Iteration   2: 20.616 ns/op
# Warmup Iteration   3: 20.533 ns/op
# Warmup Iteration   4: 20.535 ns/op
# Warmup Iteration   5: 20.597 ns/op
Iteration   1: 20.503 ns/op
Iteration   2: 20.508 ns/op
Iteration   3: 20.506 ns/op
Iteration   4: 20.525 ns/op
Iteration   5: 20.482 ns/op
Iteration   6: 20.469 ns/op
Iteration   7: 20.470 ns/op
Iteration   8: 20.482 ns/op
Iteration   9: 20.474 ns/op
Iteration  10: 20.473 ns/op
Iteration  11: 20.476 ns/op
Iteration  12: 20.481 ns/op
Iteration  13: 20.480 ns/op
Iteration  14: 20.470 ns/op
Iteration  15: 20.483 ns/op
Iteration  16: 20.489 ns/op
Iteration  17: 20.474 ns/op
Iteration  18: 20.461 ns/op
Iteration  19: 20.498 ns/op
Iteration  20: 20.482 ns/op


Result "benchmark.StringContains.stringContains":
  20.484 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (20.461, 20.484, 20.525), stdev = 0.016
  CI (99.9%): [20.470, 20.498] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  669.066 ± 6.873  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   20.484 ± 0.014  ns/op

Benchmark result is saved to dataset5_125_False_3_run.csv
