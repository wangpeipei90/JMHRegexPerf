# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 742.593 ns/op
# Warmup Iteration   2: 734.569 ns/op
# Warmup Iteration   3: 687.748 ns/op
# Warmup Iteration   4: 675.768 ns/op
# Warmup Iteration   5: 670.239 ns/op
Iteration   1: 675.968 ns/op
Iteration   2: 670.464 ns/op
Iteration   3: 680.013 ns/op
Iteration   4: 671.057 ns/op
Iteration   5: 678.880 ns/op
Iteration   6: 670.038 ns/op
Iteration   7: 682.525 ns/op
Iteration   8: 670.195 ns/op
Iteration   9: 684.959 ns/op
Iteration  10: 670.494 ns/op
Iteration  11: 669.901 ns/op
Iteration  12: 688.269 ns/op
Iteration  13: 669.464 ns/op
Iteration  14: 692.873 ns/op
Iteration  15: 671.832 ns/op
Iteration  16: 672.084 ns/op
Iteration  17: 688.773 ns/op
Iteration  18: 675.804 ns/op
Iteration  19: 671.491 ns/op
Iteration  20: 670.723 ns/op


Result "benchmark.StringContains.regexMatches":
  676.290 ±(99.9%) 6.484 ns/op [Average]
  (min, avg, max) = (669.464, 676.290, 692.873), stdev = 7.467
  CI (99.9%): [669.806, 682.774] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.663 ns/op
# Warmup Iteration   2: 20.580 ns/op
# Warmup Iteration   3: 21.089 ns/op
# Warmup Iteration   4: 21.133 ns/op
# Warmup Iteration   5: 21.130 ns/op
Iteration   1: 21.104 ns/op
Iteration   2: 21.088 ns/op
Iteration   3: 21.105 ns/op
Iteration   4: 21.139 ns/op
Iteration   5: 21.086 ns/op
Iteration   6: 21.169 ns/op
Iteration   7: 21.093 ns/op
Iteration   8: 21.179 ns/op
Iteration   9: 21.140 ns/op
Iteration  10: 21.110 ns/op
Iteration  11: 21.065 ns/op
Iteration  12: 21.107 ns/op
Iteration  13: 21.057 ns/op
Iteration  14: 21.120 ns/op
Iteration  15: 21.119 ns/op
Iteration  16: 21.104 ns/op
Iteration  17: 21.132 ns/op
Iteration  18: 21.090 ns/op
Iteration  19: 21.044 ns/op
Iteration  20: 21.121 ns/op


Result "benchmark.StringContains.stringContains":
  21.109 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (21.044, 21.109, 21.179), stdev = 0.034
  CI (99.9%): [21.079, 21.138] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  676.290 ± 6.484  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   21.109 ± 0.029  ns/op

Benchmark result is saved to dataset5_125_False_7_run.csv
