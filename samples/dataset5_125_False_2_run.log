# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 733.138 ns/op
# Warmup Iteration   2: 725.000 ns/op
# Warmup Iteration   3: 675.892 ns/op
# Warmup Iteration   4: 665.072 ns/op
# Warmup Iteration   5: 660.055 ns/op
Iteration   1: 664.574 ns/op
Iteration   2: 658.048 ns/op
Iteration   3: 666.726 ns/op
Iteration   4: 658.632 ns/op
Iteration   5: 667.003 ns/op
Iteration   6: 659.387 ns/op
Iteration   7: 671.654 ns/op
Iteration   8: 658.760 ns/op
Iteration   9: 672.857 ns/op
Iteration  10: 658.553 ns/op
Iteration  11: 674.441 ns/op
Iteration  12: 659.425 ns/op
Iteration  13: 659.248 ns/op
Iteration  14: 678.349 ns/op
Iteration  15: 659.207 ns/op
Iteration  16: 658.536 ns/op
Iteration  17: 683.037 ns/op
Iteration  18: 658.328 ns/op
Iteration  19: 658.931 ns/op
Iteration  20: 679.190 ns/op


Result "benchmark.StringContains.regexMatches":
  665.244 ±(99.9%) 7.259 ns/op [Average]
  (min, avg, max) = (658.048, 665.244, 683.037), stdev = 8.360
  CI (99.9%): [657.985, 672.503] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.604 ns/op
# Warmup Iteration   2: 20.529 ns/op
# Warmup Iteration   3: 20.466 ns/op
# Warmup Iteration   4: 20.486 ns/op
# Warmup Iteration   5: 20.518 ns/op
Iteration   1: 20.530 ns/op
Iteration   2: 20.525 ns/op
Iteration   3: 20.522 ns/op
Iteration   4: 20.526 ns/op
Iteration   5: 20.535 ns/op
Iteration   6: 20.524 ns/op
Iteration   7: 20.479 ns/op
Iteration   8: 20.480 ns/op
Iteration   9: 20.481 ns/op
Iteration  10: 20.483 ns/op
Iteration  11: 20.470 ns/op
Iteration  12: 20.499 ns/op
Iteration  13: 20.479 ns/op
Iteration  14: 20.498 ns/op
Iteration  15: 20.474 ns/op
Iteration  16: 20.464 ns/op
Iteration  17: 20.472 ns/op
Iteration  18: 20.470 ns/op
Iteration  19: 20.471 ns/op
Iteration  20: 20.459 ns/op


Result "benchmark.StringContains.stringContains":
  20.492 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (20.459, 20.492, 20.535), stdev = 0.025
  CI (99.9%): [20.470, 20.514] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  665.244 ± 7.259  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   20.492 ± 0.022  ns/op

Benchmark result is saved to dataset5_125_False_2_run.csv
