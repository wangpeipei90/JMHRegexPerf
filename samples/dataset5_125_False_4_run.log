# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 733.577 ns/op
# Warmup Iteration   2: 724.749 ns/op
# Warmup Iteration   3: 674.495 ns/op
# Warmup Iteration   4: 664.642 ns/op
# Warmup Iteration   5: 659.434 ns/op
Iteration   1: 665.108 ns/op
Iteration   2: 658.633 ns/op
Iteration   3: 667.805 ns/op
Iteration   4: 658.967 ns/op
Iteration   5: 666.485 ns/op
Iteration   6: 658.587 ns/op
Iteration   7: 669.828 ns/op
Iteration   8: 658.568 ns/op
Iteration   9: 672.418 ns/op
Iteration  10: 660.671 ns/op
Iteration  11: 678.671 ns/op
Iteration  12: 658.754 ns/op
Iteration  13: 658.593 ns/op
Iteration  14: 680.147 ns/op
Iteration  15: 661.618 ns/op
Iteration  16: 660.298 ns/op
Iteration  17: 684.894 ns/op
Iteration  18: 659.247 ns/op
Iteration  19: 660.729 ns/op
Iteration  20: 679.569 ns/op


Result "benchmark.StringContains.regexMatches":
  665.980 ±(99.9%) 7.551 ns/op [Average]
  (min, avg, max) = (658.568, 665.980, 684.894), stdev = 8.696
  CI (99.9%): [658.429, 673.531] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.467 ns/op
# Warmup Iteration   2: 20.523 ns/op
# Warmup Iteration   3: 20.545 ns/op
# Warmup Iteration   4: 20.484 ns/op
# Warmup Iteration   5: 20.500 ns/op
Iteration   1: 20.499 ns/op
Iteration   2: 20.460 ns/op
Iteration   3: 20.482 ns/op
Iteration   4: 20.499 ns/op
Iteration   5: 20.496 ns/op
Iteration   6: 20.502 ns/op
Iteration   7: 20.500 ns/op
Iteration   8: 20.496 ns/op
Iteration   9: 20.480 ns/op
Iteration  10: 20.496 ns/op
Iteration  11: 20.486 ns/op
Iteration  12: 20.462 ns/op
Iteration  13: 20.507 ns/op
Iteration  14: 20.473 ns/op
Iteration  15: 20.547 ns/op
Iteration  16: 20.499 ns/op
Iteration  17: 20.487 ns/op
Iteration  18: 20.476 ns/op
Iteration  19: 20.482 ns/op
Iteration  20: 20.472 ns/op


Result "benchmark.StringContains.stringContains":
  20.490 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (20.460, 20.490, 20.547), stdev = 0.019
  CI (99.9%): [20.473, 20.507] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  665.980 ± 7.551  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   20.490 ± 0.017  ns/op

Benchmark result is saved to dataset5_125_False_4_run.csv
