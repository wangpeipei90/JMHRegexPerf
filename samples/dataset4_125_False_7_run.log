# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 691.743 ns/op
# Warmup Iteration   2: 676.518 ns/op
# Warmup Iteration   3: 618.897 ns/op
# Warmup Iteration   4: 616.150 ns/op
# Warmup Iteration   5: 611.174 ns/op
Iteration   1: 617.930 ns/op
Iteration   2: 618.582 ns/op
Iteration   3: 611.459 ns/op
Iteration   4: 620.124 ns/op
Iteration   5: 611.963 ns/op
Iteration   6: 621.064 ns/op
Iteration   7: 611.795 ns/op
Iteration   8: 624.398 ns/op
Iteration   9: 611.478 ns/op
Iteration  10: 629.081 ns/op
Iteration  11: 611.980 ns/op
Iteration  12: 613.608 ns/op
Iteration  13: 633.101 ns/op
Iteration  14: 614.578 ns/op
Iteration  15: 618.411 ns/op
Iteration  16: 630.456 ns/op
Iteration  17: 611.589 ns/op
Iteration  18: 613.272 ns/op
Iteration  19: 638.122 ns/op
Iteration  20: 611.723 ns/op


Result "benchmark.StringContains.regexMatches":
  618.736 ±(99.9%) 7.143 ns/op [Average]
  (min, avg, max) = (611.459, 618.736, 638.122), stdev = 8.226
  CI (99.9%): [611.592, 625.879] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.588 ns/op
# Warmup Iteration   2: 20.548 ns/op
# Warmup Iteration   3: 20.525 ns/op
# Warmup Iteration   4: 20.550 ns/op
# Warmup Iteration   5: 20.489 ns/op
Iteration   1: 20.483 ns/op
Iteration   2: 20.485 ns/op
Iteration   3: 20.479 ns/op
Iteration   4: 20.480 ns/op
Iteration   5: 20.497 ns/op
Iteration   6: 20.483 ns/op
Iteration   7: 20.468 ns/op
Iteration   8: 20.526 ns/op
Iteration   9: 20.483 ns/op
Iteration  10: 20.485 ns/op
Iteration  11: 20.486 ns/op
Iteration  12: 20.478 ns/op
Iteration  13: 20.474 ns/op
Iteration  14: 20.471 ns/op
Iteration  15: 20.456 ns/op
Iteration  16: 20.579 ns/op
Iteration  17: 20.485 ns/op
Iteration  18: 20.486 ns/op
Iteration  19: 20.468 ns/op
Iteration  20: 20.507 ns/op


Result "benchmark.StringContains.stringContains":
  20.488 ±(99.9%) 0.023 ns/op [Average]
  (min, avg, max) = (20.456, 20.488, 20.579), stdev = 0.026
  CI (99.9%): [20.465, 20.510] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20  618.736 ± 7.143  ns/op
StringContains.stringContains     http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20   20.488 ± 0.023  ns/op

Benchmark result is saved to dataset4_125_False_7_run.csv
