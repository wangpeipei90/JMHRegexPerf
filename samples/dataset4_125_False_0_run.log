# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 695.433 ns/op
# Warmup Iteration   2: 684.483 ns/op
# Warmup Iteration   3: 625.918 ns/op
# Warmup Iteration   4: 620.404 ns/op
# Warmup Iteration   5: 615.340 ns/op
Iteration   1: 620.029 ns/op
Iteration   2: 623.510 ns/op
Iteration   3: 614.640 ns/op
Iteration   4: 624.739 ns/op
Iteration   5: 617.872 ns/op
Iteration   6: 626.443 ns/op
Iteration   7: 613.669 ns/op
Iteration   8: 629.010 ns/op
Iteration   9: 614.513 ns/op
Iteration  10: 629.713 ns/op
Iteration  11: 614.235 ns/op
Iteration  12: 615.875 ns/op
Iteration  13: 634.622 ns/op
Iteration  14: 614.547 ns/op
Iteration  15: 618.522 ns/op
Iteration  16: 634.867 ns/op
Iteration  17: 615.536 ns/op
Iteration  18: 615.578 ns/op
Iteration  19: 641.660 ns/op
Iteration  20: 614.167 ns/op


Result "benchmark.StringContains.regexMatches":
  621.687 ±(99.9%) 7.341 ns/op [Average]
  (min, avg, max) = (613.669, 621.687, 641.660), stdev = 8.454
  CI (99.9%): [614.346, 629.029] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.584 ns/op
# Warmup Iteration   2: 20.527 ns/op
# Warmup Iteration   3: 20.469 ns/op
# Warmup Iteration   4: 20.469 ns/op
# Warmup Iteration   5: 20.487 ns/op
Iteration   1: 20.474 ns/op
Iteration   2: 20.466 ns/op
Iteration   3: 20.514 ns/op
Iteration   4: 20.472 ns/op
Iteration   5: 20.467 ns/op
Iteration   6: 20.484 ns/op
Iteration   7: 20.471 ns/op
Iteration   8: 20.482 ns/op
Iteration   9: 20.496 ns/op
Iteration  10: 20.558 ns/op
Iteration  11: 20.487 ns/op
Iteration  12: 20.469 ns/op
Iteration  13: 20.478 ns/op
Iteration  14: 20.482 ns/op
Iteration  15: 20.497 ns/op
Iteration  16: 20.504 ns/op
Iteration  17: 20.494 ns/op
Iteration  18: 20.474 ns/op
Iteration  19: 20.501 ns/op
Iteration  20: 20.482 ns/op


Result "benchmark.StringContains.stringContains":
  20.488 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (20.466, 20.488, 20.558), stdev = 0.021
  CI (99.9%): [20.469, 20.506] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20  621.687 ± 7.341  ns/op
StringContains.stringContains     http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20   20.488 ± 0.018  ns/op

Benchmark result is saved to dataset4_125_False_0_run.csv
