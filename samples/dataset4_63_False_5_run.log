# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 193.274 ns/op
# Warmup Iteration   2: 154.710 ns/op
# Warmup Iteration   3: 153.596 ns/op
# Warmup Iteration   4: 156.382 ns/op
# Warmup Iteration   5: 154.984 ns/op
Iteration   1: 156.005 ns/op
Iteration   2: 161.505 ns/op
Iteration   3: 155.122 ns/op
Iteration   4: 149.408 ns/op
Iteration   5: 149.290 ns/op
Iteration   6: 149.043 ns/op
Iteration   7: 149.526 ns/op
Iteration   8: 149.023 ns/op
Iteration   9: 148.723 ns/op
Iteration  10: 148.999 ns/op
Iteration  11: 148.826 ns/op
Iteration  12: 148.796 ns/op
Iteration  13: 148.756 ns/op
Iteration  14: 148.724 ns/op
Iteration  15: 149.082 ns/op
Iteration  16: 148.867 ns/op
Iteration  17: 149.214 ns/op
Iteration  18: 148.695 ns/op
Iteration  19: 148.973 ns/op
Iteration  20: 148.877 ns/op


Result "benchmark.StringContains.regexMatches":
  150.273 ±(99.9%) 2.897 ns/op [Average]
  (min, avg, max) = (148.695, 150.273, 161.505), stdev = 3.337
  CI (99.9%): [147.375, 153.170] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 15.735 ns/op
# Warmup Iteration   2: 15.466 ns/op
# Warmup Iteration   3: 15.467 ns/op
# Warmup Iteration   4: 15.445 ns/op
# Warmup Iteration   5: 15.426 ns/op
Iteration   1: 15.451 ns/op
Iteration   2: 15.442 ns/op
Iteration   3: 15.428 ns/op
Iteration   4: 15.440 ns/op
Iteration   5: 15.438 ns/op
Iteration   6: 15.457 ns/op
Iteration   7: 15.429 ns/op
Iteration   8: 15.425 ns/op
Iteration   9: 15.429 ns/op
Iteration  10: 15.433 ns/op
Iteration  11: 15.442 ns/op
Iteration  12: 15.464 ns/op
Iteration  13: 15.432 ns/op
Iteration  14: 15.431 ns/op
Iteration  15: 15.441 ns/op
Iteration  16: 15.411 ns/op
Iteration  17: 15.455 ns/op
Iteration  18: 15.439 ns/op
Iteration  19: 15.483 ns/op
Iteration  20: 15.431 ns/op


Result "benchmark.StringContains.stringContains":
  15.440 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (15.411, 15.440, 15.483), stdev = 0.016
  CI (99.9%): [15.426, 15.454] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                       (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20  150.273 ± 2.897  ns/op
StringContains.stringContains     http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20   15.440 ± 0.014  ns/op

Benchmark result is saved to dataset4_63_False_5_run.csv
