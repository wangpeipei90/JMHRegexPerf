# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 220.869 ns/op
# Warmup Iteration   2: 176.202 ns/op
# Warmup Iteration   3: 176.554 ns/op
# Warmup Iteration   4: 178.668 ns/op
# Warmup Iteration   5: 176.434 ns/op
Iteration   1: 185.008 ns/op
Iteration   2: 180.223 ns/op
Iteration   3: 181.806 ns/op
Iteration   4: 172.983 ns/op
Iteration   5: 179.645 ns/op
Iteration   6: 173.124 ns/op
Iteration   7: 173.185 ns/op
Iteration   8: 172.870 ns/op
Iteration   9: 172.707 ns/op
Iteration  10: 173.398 ns/op
Iteration  11: 172.907 ns/op
Iteration  12: 172.740 ns/op
Iteration  13: 172.577 ns/op
Iteration  14: 172.908 ns/op
Iteration  15: 172.825 ns/op
Iteration  16: 172.732 ns/op
Iteration  17: 172.681 ns/op
Iteration  18: 172.623 ns/op
Iteration  19: 173.534 ns/op
Iteration  20: 172.456 ns/op


Result "benchmark.StringContains.regexMatches":
  174.647 ±(99.9%) 3.245 ns/op [Average]
  (min, avg, max) = (172.456, 174.647, 185.008), stdev = 3.737
  CI (99.9%): [171.402, 177.892] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 14.540 ns/op
# Warmup Iteration   2: 15.476 ns/op
# Warmup Iteration   3: 15.446 ns/op
# Warmup Iteration   4: 15.438 ns/op
# Warmup Iteration   5: 15.440 ns/op
Iteration   1: 15.434 ns/op
Iteration   2: 15.441 ns/op
Iteration   3: 15.444 ns/op
Iteration   4: 15.431 ns/op
Iteration   5: 15.426 ns/op
Iteration   6: 15.440 ns/op
Iteration   7: 15.416 ns/op
Iteration   8: 15.422 ns/op
Iteration   9: 15.437 ns/op
Iteration  10: 15.410 ns/op
Iteration  11: 15.416 ns/op
Iteration  12: 15.420 ns/op
Iteration  13: 15.436 ns/op
Iteration  14: 15.425 ns/op
Iteration  15: 15.430 ns/op
Iteration  16: 15.434 ns/op
Iteration  17: 15.476 ns/op
Iteration  18: 15.505 ns/op
Iteration  19: 15.438 ns/op
Iteration  20: 15.450 ns/op


Result "benchmark.StringContains.stringContains":
  15.437 ±(99.9%) 0.019 ns/op [Average]
  (min, avg, max) = (15.410, 15.437, 15.505), stdev = 0.022
  CI (99.9%): [15.418, 15.455] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                       (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20  174.647 ± 3.245  ns/op
StringContains.stringContains     http  :PiTY28Wd$s5Xz1&o*rk}9|(np]t+{@3PsLuM.SuC_ni&ZQ^-rVwqRA-	D)t	N`6R0jg-xx^	8	Bb&CQbdw|;WR7  avgt   20   15.437 ± 0.019  ns/op

Benchmark result is saved to dataset4_63_False_1_run.csv
