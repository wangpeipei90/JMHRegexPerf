# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = A.Bn^jOY6ZuvGz+wP('j`+Y$ n27Fg9v 
(hcVCvN`SHMHhkCgL!
qpf{|cYsx"(@dwe}qm>i=**#1aX4I_wOJU)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 526.944 ns/op
# Warmup Iteration   2: 495.135 ns/op
# Warmup Iteration   3: 455.641 ns/op
# Warmup Iteration   4: 455.754 ns/op
# Warmup Iteration   5: 456.671 ns/op
Iteration   1: 457.077 ns/op
Iteration   2: 458.538 ns/op
Iteration   3: 460.151 ns/op
Iteration   4: 452.044 ns/op
Iteration   5: 462.787 ns/op
Iteration   6: 456.300 ns/op
Iteration   7: 462.465 ns/op
Iteration   8: 464.040 ns/op
Iteration   9: 454.899 ns/op
Iteration  10: 465.294 ns/op
Iteration  11: 461.538 ns/op
Iteration  12: 455.612 ns/op
Iteration  13: 472.624 ns/op
Iteration  14: 454.220 ns/op
Iteration  15: 466.450 ns/op
Iteration  16: 462.783 ns/op
Iteration  17: 452.355 ns/op
Iteration  18: 466.245 ns/op
Iteration  19: 462.381 ns/op
Iteration  20: 452.842 ns/op


Result "benchmark.StringContains.regexMatches":
  460.032 ±(99.9%) 4.839 ns/op [Average]
  (min, avg, max) = (452.044, 460.032, 472.624), stdev = 5.572
  CI (99.9%): [455.193, 464.871] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = A.Bn^jOY6ZuvGz+wP('j`+Y$ n27Fg9v 
(hcVCvN`SHMHhkCgL!
qpf{|cYsx"(@dwe}qm>i=**#1aX4I_wOJU)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 14.613 ns/op
# Warmup Iteration   2: 15.475 ns/op
# Warmup Iteration   3: 15.441 ns/op
# Warmup Iteration   4: 15.502 ns/op
# Warmup Iteration   5: 15.519 ns/op
Iteration   1: 15.458 ns/op
Iteration   2: 15.458 ns/op
Iteration   3: 15.450 ns/op
Iteration   4: 15.480 ns/op
Iteration   5: 15.445 ns/op
Iteration   6: 15.467 ns/op
Iteration   7: 15.448 ns/op
Iteration   8: 15.496 ns/op
Iteration   9: 15.506 ns/op
Iteration  10: 15.438 ns/op
Iteration  11: 15.495 ns/op
Iteration  12: 15.439 ns/op
Iteration  13: 15.461 ns/op
Iteration  14: 15.481 ns/op
Iteration  15: 15.473 ns/op
Iteration  16: 15.454 ns/op
Iteration  17: 15.480 ns/op
Iteration  18: 15.466 ns/op
Iteration  19: 15.475 ns/op
Iteration  20: 15.464 ns/op


Result "benchmark.StringContains.stringContains":
  15.467 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (15.438, 15.467, 15.506), stdev = 0.019
  CI (99.9%): [15.450, 15.483] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                       (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  A.Bn^jOY6ZuvGz+wP('j`+Y$ n27Fg9v 
(hcVCvN`SHMHhkCgL!
qpf{|cYsx"(@dwe}qm>i=**#1aX4I_wOJU  avgt   20  460.032 ± 4.839  ns/op
StringContains.stringContains     http  A.Bn^jOY6ZuvGz+wP('j`+Y$ n27Fg9v 
(hcVCvN`SHMHhkCgL!
qpf{|cYsx"(@dwe}qm>i=**#1aX4I_wOJU  avgt   20   15.467 ± 0.017  ns/op

Benchmark result is saved to dataset5_63_False_0_run.csv
