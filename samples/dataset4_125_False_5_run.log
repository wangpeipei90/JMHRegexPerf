# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 726.174 ns/op
# Warmup Iteration   2: 716.269 ns/op
# Warmup Iteration   3: 665.930 ns/op
# Warmup Iteration   4: 655.602 ns/op
# Warmup Iteration   5: 650.688 ns/op
Iteration   1: 656.923 ns/op
Iteration   2: 650.996 ns/op
Iteration   3: 659.456 ns/op
Iteration   4: 651.270 ns/op
Iteration   5: 659.091 ns/op
Iteration   6: 651.435 ns/op
Iteration   7: 662.196 ns/op
Iteration   8: 651.824 ns/op
Iteration   9: 666.180 ns/op
Iteration  10: 652.122 ns/op
Iteration  11: 666.313 ns/op
Iteration  12: 651.202 ns/op
Iteration  13: 650.149 ns/op
Iteration  14: 669.960 ns/op
Iteration  15: 649.976 ns/op
Iteration  16: 650.258 ns/op
Iteration  17: 673.593 ns/op
Iteration  18: 650.817 ns/op
Iteration  19: 650.407 ns/op
Iteration  20: 679.071 ns/op


Result "benchmark.StringContains.regexMatches":
  657.662 ±(99.9%) 7.812 ns/op [Average]
  (min, avg, max) = (649.976, 657.662, 679.071), stdev = 8.996
  CI (99.9%): [649.850, 665.474] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.598 ns/op
# Warmup Iteration   2: 20.503 ns/op
# Warmup Iteration   3: 20.489 ns/op
# Warmup Iteration   4: 20.502 ns/op
# Warmup Iteration   5: 20.501 ns/op
Iteration   1: 20.531 ns/op
Iteration   2: 20.503 ns/op
Iteration   3: 20.523 ns/op
Iteration   4: 20.513 ns/op
Iteration   5: 20.481 ns/op
Iteration   6: 20.488 ns/op
Iteration   7: 20.460 ns/op
Iteration   8: 20.498 ns/op
Iteration   9: 20.581 ns/op
Iteration  10: 20.527 ns/op
Iteration  11: 20.486 ns/op
Iteration  12: 20.517 ns/op
Iteration  13: 20.534 ns/op
Iteration  14: 20.561 ns/op
Iteration  15: 20.588 ns/op
Iteration  16: 20.507 ns/op
Iteration  17: 20.507 ns/op
Iteration  18: 20.483 ns/op
Iteration  19: 20.511 ns/op
Iteration  20: 20.481 ns/op


Result "benchmark.StringContains.stringContains":
  20.514 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (20.460, 20.514, 20.588), stdev = 0.033
  CI (99.9%): [20.485, 20.543] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20  657.662 ± 7.812  ns/op
StringContains.stringContains     http  `6`GzOcOj*J+.l+V=
	@EA`Z2m<P0;7CQ"hTTBNCS+^&p6$Xj#_Y#'=joZ!)KgAZ9(l=kXW--FmQL`Hg,"xz!Y#wgh\6~(iKoKyLx/C)\!WfZp;t'A1FQM=+L3d|bjMZdg2
  avgt   20   20.514 ± 0.029  ns/op

Benchmark result is saved to dataset4_125_False_5_run.csv
