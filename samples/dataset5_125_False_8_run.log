# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 729.775 ns/op
# Warmup Iteration   2: 723.063 ns/op
# Warmup Iteration   3: 673.854 ns/op
# Warmup Iteration   4: 663.814 ns/op
# Warmup Iteration   5: 657.869 ns/op
Iteration   1: 667.392 ns/op
Iteration   2: 660.151 ns/op
Iteration   3: 667.410 ns/op
Iteration   4: 658.271 ns/op
Iteration   5: 669.793 ns/op
Iteration   6: 658.763 ns/op
Iteration   7: 669.684 ns/op
Iteration   8: 660.611 ns/op
Iteration   9: 673.663 ns/op
Iteration  10: 659.238 ns/op
Iteration  11: 668.454 ns/op
Iteration  12: 664.008 ns/op
Iteration  13: 658.006 ns/op
Iteration  14: 677.754 ns/op
Iteration  15: 658.283 ns/op
Iteration  16: 658.165 ns/op
Iteration  17: 681.251 ns/op
Iteration  18: 657.993 ns/op
Iteration  19: 657.769 ns/op
Iteration  20: 675.807 ns/op


Result "benchmark.StringContains.regexMatches":
  665.123 ±(99.9%) 6.577 ns/op [Average]
  (min, avg, max) = (657.769, 665.123, 681.251), stdev = 7.574
  CI (99.9%): [658.546, 671.700] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.572 ns/op
# Warmup Iteration   2: 20.538 ns/op
# Warmup Iteration   3: 20.480 ns/op
# Warmup Iteration   4: 20.484 ns/op
# Warmup Iteration   5: 20.495 ns/op
Iteration   1: 20.517 ns/op
Iteration   2: 20.540 ns/op
Iteration   3: 20.477 ns/op
Iteration   4: 20.532 ns/op
Iteration   5: 20.501 ns/op
Iteration   6: 20.545 ns/op
Iteration   7: 20.519 ns/op
Iteration   8: 20.495 ns/op
Iteration   9: 20.476 ns/op
Iteration  10: 20.491 ns/op
Iteration  11: 20.466 ns/op
Iteration  12: 20.495 ns/op
Iteration  13: 20.548 ns/op
Iteration  14: 20.550 ns/op
Iteration  15: 20.683 ns/op
Iteration  16: 20.510 ns/op
Iteration  17: 20.524 ns/op
Iteration  18: 20.528 ns/op
Iteration  19: 20.517 ns/op
Iteration  20: 20.503 ns/op


Result "benchmark.StringContains.stringContains":
  20.521 ±(99.9%) 0.039 ns/op [Average]
  (min, avg, max) = (20.466, 20.521, 20.683), stdev = 0.045
  CI (99.9%): [20.482, 20.560] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  665.123 ± 6.577  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   20.521 ± 0.039  ns/op

Benchmark result is saved to dataset5_125_False_8_run.csv
