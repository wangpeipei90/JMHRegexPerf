# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 726.368 ns/op
# Warmup Iteration   2: 723.587 ns/op
# Warmup Iteration   3: 673.373 ns/op
# Warmup Iteration   4: 663.557 ns/op
# Warmup Iteration   5: 656.909 ns/op
Iteration   1: 663.003 ns/op
Iteration   2: 657.066 ns/op
Iteration   3: 667.102 ns/op
Iteration   4: 658.724 ns/op
Iteration   5: 667.211 ns/op
Iteration   6: 656.784 ns/op
Iteration   7: 666.863 ns/op
Iteration   8: 657.798 ns/op
Iteration   9: 671.637 ns/op
Iteration  10: 657.340 ns/op
Iteration  11: 667.260 ns/op
Iteration  12: 662.559 ns/op
Iteration  13: 657.047 ns/op
Iteration  14: 676.979 ns/op
Iteration  15: 657.037 ns/op
Iteration  16: 656.892 ns/op
Iteration  17: 681.230 ns/op
Iteration  18: 656.985 ns/op
Iteration  19: 657.022 ns/op
Iteration  20: 675.714 ns/op


Result "benchmark.StringContains.regexMatches":
  663.613 ±(99.9%) 6.773 ns/op [Average]
  (min, avg, max) = (656.784, 663.613, 681.230), stdev = 7.799
  CI (99.9%): [656.840, 670.385] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.481 ns/op
# Warmup Iteration   2: 20.517 ns/op
# Warmup Iteration   3: 20.479 ns/op
# Warmup Iteration   4: 20.526 ns/op
# Warmup Iteration   5: 20.520 ns/op
Iteration   1: 20.495 ns/op
Iteration   2: 20.515 ns/op
Iteration   3: 20.484 ns/op
Iteration   4: 20.493 ns/op
Iteration   5: 20.503 ns/op
Iteration   6: 20.496 ns/op
Iteration   7: 20.476 ns/op
Iteration   8: 20.488 ns/op
Iteration   9: 20.502 ns/op
Iteration  10: 20.501 ns/op
Iteration  11: 20.476 ns/op
Iteration  12: 20.469 ns/op
Iteration  13: 20.505 ns/op
Iteration  14: 20.486 ns/op
Iteration  15: 20.537 ns/op
Iteration  16: 20.456 ns/op
Iteration  17: 20.524 ns/op
Iteration  18: 20.496 ns/op
Iteration  19: 20.486 ns/op
Iteration  20: 20.497 ns/op


Result "benchmark.StringContains.stringContains":
  20.494 ±(99.9%) 0.016 ns/op [Average]
  (min, avg, max) = (20.456, 20.494, 20.537), stdev = 0.019
  CI (99.9%): [20.478, 20.510] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  663.613 ± 6.773  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   20.494 ± 0.016  ns/op

Benchmark result is saved to dataset5_125_False_0_run.csv
