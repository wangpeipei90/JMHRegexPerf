# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 0.00% complete, ETA 00:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 738.369 ns/op
# Warmup Iteration   2: 729.371 ns/op
# Warmup Iteration   3: 683.720 ns/op
# Warmup Iteration   4: 670.076 ns/op
# Warmup Iteration   5: 665.005 ns/op
Iteration   1: 672.255 ns/op
Iteration   2: 666.521 ns/op
Iteration   3: 673.228 ns/op
Iteration   4: 667.363 ns/op
Iteration   5: 677.149 ns/op
Iteration   6: 668.786 ns/op
Iteration   7: 679.737 ns/op
Iteration   8: 670.926 ns/op
Iteration   9: 683.068 ns/op
Iteration  10: 669.161 ns/op
Iteration  11: 668.367 ns/op
Iteration  12: 687.722 ns/op
Iteration  13: 668.035 ns/op
Iteration  14: 686.889 ns/op
Iteration  15: 669.638 ns/op
Iteration  16: 668.764 ns/op
Iteration  17: 695.434 ns/op
Iteration  18: 668.104 ns/op
Iteration  19: 667.785 ns/op
Iteration  20: 672.135 ns/op


Result "benchmark.StringContains.regexMatches":
  674.053 ±(99.9%) 7.164 ns/op [Average]
  (min, avg, max) = (666.521, 674.053, 695.434), stdev = 8.250
  CI (99.9%): [666.890, 681.217] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.20.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^)

# Run progress: 50.00% complete, ETA 00:00:25
# Fork: 1 of 1
# Warmup Iteration   1: 19.609 ns/op
# Warmup Iteration   2: 20.635 ns/op
# Warmup Iteration   3: 20.581 ns/op
# Warmup Iteration   4: 20.602 ns/op
# Warmup Iteration   5: 20.598 ns/op
Iteration   1: 20.581 ns/op
Iteration   2: 20.592 ns/op
Iteration   3: 20.594 ns/op
Iteration   4: 20.533 ns/op
Iteration   5: 20.583 ns/op
Iteration   6: 20.530 ns/op
Iteration   7: 20.523 ns/op
Iteration   8: 20.603 ns/op
Iteration   9: 20.553 ns/op
Iteration  10: 20.574 ns/op
Iteration  11: 20.565 ns/op
Iteration  12: 20.642 ns/op
Iteration  13: 20.581 ns/op
Iteration  14: 20.612 ns/op
Iteration  15: 20.588 ns/op
Iteration  16: 20.555 ns/op
Iteration  17: 20.609 ns/op
Iteration  18: 20.593 ns/op
Iteration  19: 20.626 ns/op
Iteration  20: 20.615 ns/op


Result "benchmark.StringContains.stringContains":
  20.583 ±(99.9%) 0.028 ns/op [Average]
  (min, avg, max) = (20.523, 20.583, 20.642), stdev = 0.032
  CI (99.9%): [20.555, 20.611] (assumes normal distribution)


# Run complete. Total time: 00:00:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                      (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20  674.053 ± 7.164  ns/op
StringContains.stringContains     http  gp;tX>x!g0Q&.yJ?!})@XD1nh=
DlE3H1NE[3G&T):Z8D)VQs_Tctd+,".zh(TsFFJmD{F)|>`=Jc\`e(BTqTxm2/;#T~*Y$ig/m`lN?z@)i;S8+ll2@tkc154"jLe*hV?m)N^  avgt   20   20.583 ± 0.028  ns/op

Benchmark result is saved to dataset5_125_False_6_run.csv
