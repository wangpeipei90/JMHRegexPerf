# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = =cMyB/22	s#D5	,L1hO`?>A2LT\q6^e'uwhWW!T7g)+ip}e]5
B'PtnzV	YA~%O	!uZm6)ds]XLguxw3P)*GxRR$C	Qj^-qj.7v	menne#/fDqH'/u{Wz#Zvh0=pD"\*GF;4Qor"S
.MHjzN6R|4`Z5f\W0?y%m=Ud4%#r%(@o5P]he[BJch|<N UMI4zxvxuD\W z= %.^~!{hZi_tLxS>U9eUr%F.qnT3S+HHq9	P5F\#v<>LC*('PKP-l%&*Q>U
\Gp)l}wc>taY p
cOl<GYclsR"	:TaF)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 5469.984 ns/op
# Warmup Iteration   2: 5395.744 ns/op
# Warmup Iteration   3: 5367.728 ns/op
# Warmup Iteration   4: 5367.971 ns/op
# Warmup Iteration   5: 5394.895 ns/op
Iteration   1: 4881.561 ns/op
Iteration   2: 4885.676 ns/op
Iteration   3: 4883.015 ns/op
Iteration   4: 4883.066 ns/op
Iteration   5: 4939.032 ns/op
Iteration   6: 4885.714 ns/op
Iteration   7: 4887.476 ns/op
Iteration   8: 4892.480 ns/op
Iteration   9: 4944.474 ns/op
Iteration  10: 4881.679 ns/op
Iteration  11: 4881.385 ns/op
Iteration  12: 4891.216 ns/op
Iteration  13: 4976.249 ns/op
Iteration  14: 4899.716 ns/op
Iteration  15: 4897.943 ns/op
Iteration  16: 4882.347 ns/op
Iteration  17: 4881.576 ns/op
Iteration  18: 4985.098 ns/op
Iteration  19: 4881.016 ns/op
Iteration  20: 4890.520 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 5428.355 ns/op
# Warmup Iteration   2: 5350.744 ns/op
# Warmup Iteration   3: 5334.295 ns/op
# Warmup Iteration   4: 5338.785 ns/op
# Warmup Iteration   5: 5343.669 ns/op
Iteration   1: 4854.973 ns/op
Iteration   2: 4857.458 ns/op
Iteration   3: 4856.305 ns/op
Iteration   4: 4856.836 ns/op
Iteration   5: 4895.910 ns/op
Iteration   6: 4857.929 ns/op
Iteration   7: 4858.798 ns/op
Iteration   8: 4857.369 ns/op
Iteration   9: 4925.547 ns/op
Iteration  10: 4869.373 ns/op
Iteration  11: 4861.963 ns/op
Iteration  12: 4865.058 ns/op
Iteration  13: 4942.875 ns/op
Iteration  14: 4855.082 ns/op
Iteration  15: 4857.690 ns/op
Iteration  16: 4857.726 ns/op
Iteration  17: 4860.394 ns/op
Iteration  18: 4964.580 ns/op
Iteration  19: 4854.611 ns/op
Iteration  20: 4858.613 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 5440.089 ns/op
# Warmup Iteration   2: 5364.724 ns/op
# Warmup Iteration   3: 5385.953 ns/op
# Warmup Iteration   4: 5387.217 ns/op
# Warmup Iteration   5: 5412.803 ns/op
Iteration   1: 4890.284 ns/op
Iteration   2: 4888.890 ns/op
Iteration   3: 4891.562 ns/op
Iteration   4: 4888.758 ns/op
Iteration   5: 4924.812 ns/op
Iteration   6: 4877.133 ns/op
Iteration   7: 4875.894 ns/op
Iteration   8: 4873.890 ns/op
Iteration   9: 4932.305 ns/op
Iteration  10: 4878.140 ns/op
Iteration  11: 4873.237 ns/op
Iteration  12: 4874.649 ns/op
Iteration  13: 4956.947 ns/op
Iteration  14: 4878.498 ns/op
Iteration  15: 4878.962 ns/op
Iteration  16: 4881.592 ns/op
Iteration  17: 4882.444 ns/op
Iteration  18: 4986.552 ns/op
Iteration  19: 4883.035 ns/op
Iteration  20: 4881.937 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 5434.112 ns/op
# Warmup Iteration   2: 5343.199 ns/op
# Warmup Iteration   3: 5337.398 ns/op
# Warmup Iteration   4: 5339.782 ns/op
# Warmup Iteration   5: 5348.494 ns/op
Iteration   1: 4855.257 ns/op
Iteration   2: 4856.795 ns/op
Iteration   3: 4855.945 ns/op
Iteration   4: 4857.539 ns/op
Iteration   5: 4894.567 ns/op
Iteration   6: 4849.838 ns/op
Iteration   7: 4849.104 ns/op
Iteration   8: 4851.227 ns/op
Iteration   9: 4911.517 ns/op
Iteration  10: 4849.167 ns/op
Iteration  11: 4849.984 ns/op
Iteration  12: 4851.686 ns/op
Iteration  13: 4940.547 ns/op
Iteration  14: 4847.256 ns/op
Iteration  15: 4850.923 ns/op
Iteration  16: 4851.515 ns/op
Iteration  17: 4850.405 ns/op
Iteration  18: 4961.353 ns/op
Iteration  19: 4858.783 ns/op
Iteration  20: 4858.498 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 5437.818 ns/op
# Warmup Iteration   2: 5356.089 ns/op
# Warmup Iteration   3: 5337.120 ns/op
# Warmup Iteration   4: 5337.686 ns/op
# Warmup Iteration   5: 5341.492 ns/op
Iteration   1: 4868.253 ns/op
Iteration   2: 4870.284 ns/op
Iteration   3: 4868.578 ns/op
Iteration   4: 4870.329 ns/op
Iteration   5: 4908.095 ns/op
Iteration   6: 4865.806 ns/op
Iteration   7: 4866.557 ns/op
Iteration   8: 4865.761 ns/op
Iteration   9: 4919.714 ns/op
Iteration  10: 4865.440 ns/op
Iteration  11: 4866.550 ns/op
Iteration  12: 4871.008 ns/op
Iteration  13: 4949.231 ns/op
Iteration  14: 4864.990 ns/op
Iteration  15: 4865.344 ns/op
Iteration  16: 4865.862 ns/op
Iteration  17: 4864.050 ns/op
Iteration  18: 4964.468 ns/op
Iteration  19: 4867.262 ns/op
Iteration  20: 4868.593 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  4883.679 Â±(99.9%) 11.402 ns/op [Average]
  (min, avg, max) = (4847.256, 4883.679, 4986.552), stdev = 33.619
  CI (99.9%): [4872.277, 4895.081] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = =cMyB/22	s#D5	,L1hO`?>A2LT\q6^e'uwhWW!T7g)+ip}e]5
B'PtnzV	YA~%O	!uZm6)ds]XLguxw3P)*GxRR$C	Qj^-qj.7v	menne#/fDqH'/u{Wz#Zvh0=pD"\*GF;4Qor"S
.MHjzN6R|4`Z5f\W0?y%m=Ud4%#r%(@o5P]he[BJch|<N UMI4zxvxuD\W z= %.^~!{hZi_tLxS>U9eUr%F.qnT3S+HHq9	P5F\#v<>LC*('PKP-l%&*Q>U
\Gp)l}wc>taY p
cOl<GYclsR"	:TaF)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 5548.740 ns/op
# Warmup Iteration   2: 5400.651 ns/op
# Warmup Iteration   3: 5386.733 ns/op
# Warmup Iteration   4: 5386.777 ns/op
# Warmup Iteration   5: 5390.807 ns/op
Iteration   1: 4897.378 ns/op
Iteration   2: 4902.183 ns/op
Iteration   3: 4899.837 ns/op
Iteration   4: 4900.021 ns/op
Iteration   5: 4941.745 ns/op
Iteration   6: 4900.324 ns/op
Iteration   7: 4900.737 ns/op
Iteration   8: 4895.300 ns/op
Iteration   9: 4964.807 ns/op
Iteration  10: 4917.602 ns/op
Iteration  11: 4914.164 ns/op
Iteration  12: 4896.179 ns/op
Iteration  13: 4980.093 ns/op
Iteration  14: 4899.326 ns/op
Iteration  15: 4897.053 ns/op
Iteration  16: 4897.629 ns/op
Iteration  17: 4895.598 ns/op
Iteration  18: 5001.093 ns/op
Iteration  19: 4896.787 ns/op
Iteration  20: 4896.501 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 5227.052 ns/op
# Warmup Iteration   2: 5076.357 ns/op
# Warmup Iteration   3: 5066.931 ns/op
# Warmup Iteration   4: 5073.563 ns/op
# Warmup Iteration   5: 4914.582 ns/op
Iteration   1: 4563.868 ns/op
Iteration   2: 4568.738 ns/op
Iteration   3: 4588.124 ns/op
Iteration   4: 4630.506 ns/op
Iteration   5: 4589.419 ns/op
Iteration   6: 4572.674 ns/op
Iteration   7: 4567.794 ns/op
Iteration   8: 4624.537 ns/op
Iteration   9: 4563.458 ns/op
Iteration  10: 4569.416 ns/op
Iteration  11: 4579.467 ns/op
Iteration  12: 4649.492 ns/op
Iteration  13: 4573.665 ns/op
Iteration  14: 4570.596 ns/op
Iteration  15: 4568.170 ns/op
Iteration  16: 4672.769 ns/op
Iteration  17: 4580.553 ns/op
Iteration  18: 4568.554 ns/op
Iteration  19: 4567.648 ns/op
Iteration  20: 4570.902 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 5536.379 ns/op
# Warmup Iteration   2: 5379.214 ns/op
# Warmup Iteration   3: 5369.871 ns/op
# Warmup Iteration   4: 5371.275 ns/op
# Warmup Iteration   5: 5359.893 ns/op
Iteration   1: 4886.708 ns/op
Iteration   2: 4882.979 ns/op
Iteration   3: 4883.752 ns/op
Iteration   4: 4883.155 ns/op
Iteration   5: 4928.822 ns/op
Iteration   6: 4886.330 ns/op
Iteration   7: 4883.358 ns/op
Iteration   8: 4883.226 ns/op
Iteration   9: 4941.434 ns/op
Iteration  10: 4883.315 ns/op
Iteration  11: 4884.661 ns/op
Iteration  12: 4881.743 ns/op
Iteration  13: 5010.766 ns/op
Iteration  14: 4883.912 ns/op
Iteration  15: 4882.790 ns/op
Iteration  16: 4880.806 ns/op
Iteration  17: 4881.906 ns/op
Iteration  18: 4992.018 ns/op
Iteration  19: 4884.719 ns/op
Iteration  20: 4885.045 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 5506.367 ns/op
# Warmup Iteration   2: 5350.877 ns/op
# Warmup Iteration   3: 5339.022 ns/op
# Warmup Iteration   4: 5340.403 ns/op
# Warmup Iteration   5: 5306.795 ns/op
Iteration   1: 4861.148 ns/op
Iteration   2: 4858.564 ns/op
Iteration   3: 4859.696 ns/op
Iteration   4: 4874.452 ns/op
Iteration   5: 4883.578 ns/op
Iteration   6: 4858.929 ns/op
Iteration   7: 4861.743 ns/op
Iteration   8: 4857.948 ns/op
Iteration   9: 4916.101 ns/op
Iteration  10: 4858.816 ns/op
Iteration  11: 4861.354 ns/op
Iteration  12: 4868.823 ns/op
Iteration  13: 4950.186 ns/op
Iteration  14: 4869.531 ns/op
Iteration  15: 4863.356 ns/op
Iteration  16: 4860.264 ns/op
Iteration  17: 4921.596 ns/op
Iteration  18: 4901.569 ns/op
Iteration  19: 4861.341 ns/op
Iteration  20: 4860.388 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 5542.208 ns/op
# Warmup Iteration   2: 5354.386 ns/op
# Warmup Iteration   3: 5340.473 ns/op
# Warmup Iteration   4: 5337.640 ns/op
# Warmup Iteration   5: 5328.470 ns/op
Iteration   1: 4850.608 ns/op
Iteration   2: 4847.118 ns/op
Iteration   3: 4849.956 ns/op
Iteration   4: 4863.087 ns/op
Iteration   5: 4876.691 ns/op
Iteration   6: 4849.397 ns/op
Iteration   7: 4847.309 ns/op
Iteration   8: 4856.325 ns/op
Iteration   9: 4914.407 ns/op
Iteration  10: 4854.538 ns/op
Iteration  11: 4856.366 ns/op
Iteration  12: 4857.357 ns/op
Iteration  13: 4934.020 ns/op
Iteration  14: 4856.002 ns/op
Iteration  15: 4860.009 ns/op
Iteration  16: 4858.981 ns/op
Iteration  17: 4931.892 ns/op
Iteration  18: 4884.320 ns/op
Iteration  19: 4855.666 ns/op
Iteration  20: 4859.568 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  4829.192 Â±(99.9%) 42.933 ns/op [Average]
  (min, avg, max) = (4563.458, 4829.192, 5010.766), stdev = 126.589
  CI (99.9%): [4786.258, 4872.125] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  =cMyB/22	s#D5	,L1hO`?>A2LT\q6^e'uwhWW!T7g)+ip}e]5
B'PtnzV	YA~%O	!uZm6)ds]XLguxw3P)*GxRR$C	Qj^-qj.7v	menne#/fDqH'/u{Wz#Zvh0=pD"\*GF;4Qor"S
.MHjzN6R|4`Z5f\W0?y%m=Ud4%#r%(@o5P]he[BJch|<N UMI4zxvxuD\W z= %.^~!{hZi_tLxS>U9eUr%F.qnT3S+HHq9	P5F\#v<>LC*('PKP-l%&*Q>U
\Gp)l}wc>taY p
cOl<GYclsR"	:TaF  avgt  100  4883.679 Â± 11.402  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  =cMyB/22	s#D5	,L1hO`?>A2LT\q6^e'uwhWW!T7g)+ip}e]5
B'PtnzV	YA~%O	!uZm6)ds]XLguxw3P)*GxRR$C	Qj^-qj.7v	menne#/fDqH'/u{Wz#Zvh0=pD"\*GF;4Qor"S
.MHjzN6R|4`Z5f\W0?y%m=Ud4%#r%(@o5P]he[BJch|<N UMI4zxvxuD\W z= %.^~!{hZi_tLxS>U9eUr%F.qnT3S+HHq9	P5F\#v<>LC*('PKP-l%&*Q>U
\Gp)l}wc>taY p
cOl<GYclsR"	:TaF  avgt  100  4829.192 Â± 42.933  ns/op

Benchmark result is saved to split_precompiled_regex_198_302_NonMatch.csv
