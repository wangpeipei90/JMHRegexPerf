# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 10)+wp{9lQ/->21H7fi@qM#t{&Q1q&4^reMFUISF 97&HJp,YPjj. .Piw(a9z~/w'vr?R/]DBf3+Nu26%J1	g^]w*C iS	Vy}U17)<R eso8j;M	2|LoIP5orhvnr<X3q}DJIc4?|`~eX;(qJ)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 3109.367 ns/op
# Warmup Iteration   2: 3077.964 ns/op
# Warmup Iteration   3: 3041.001 ns/op
# Warmup Iteration   4: 2700.819 ns/op
# Warmup Iteration   5: 2610.109 ns/op
Iteration   1: 2637.487 ns/op
Iteration   2: 2610.462 ns/op
Iteration   3: 2609.907 ns/op
Iteration   4: 2639.678 ns/op
Iteration   5: 2609.161 ns/op
Iteration   6: 2652.997 ns/op
Iteration   7: 2617.927 ns/op
Iteration   8: 2616.322 ns/op
Iteration   9: 2673.431 ns/op
Iteration  10: 2609.255 ns/op
Iteration  11: 2609.609 ns/op
Iteration  12: 2685.626 ns/op
Iteration  13: 2611.577 ns/op
Iteration  14: 2610.544 ns/op
Iteration  15: 2629.176 ns/op
Iteration  16: 2610.008 ns/op
Iteration  17: 2611.719 ns/op
Iteration  18: 2626.547 ns/op
Iteration  19: 2611.367 ns/op
Iteration  20: 2611.334 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2951.940 ns/op
# Warmup Iteration   2: 2890.354 ns/op
# Warmup Iteration   3: 2883.925 ns/op
# Warmup Iteration   4: 2475.257 ns/op
# Warmup Iteration   5: 2451.216 ns/op
Iteration   1: 2473.385 ns/op
Iteration   2: 2450.908 ns/op
Iteration   3: 2479.811 ns/op
Iteration   4: 2450.525 ns/op
Iteration   5: 2450.435 ns/op
Iteration   6: 2490.570 ns/op
Iteration   7: 2450.680 ns/op
Iteration   8: 2500.964 ns/op
Iteration   9: 2449.554 ns/op
Iteration  10: 2449.906 ns/op
Iteration  11: 2521.479 ns/op
Iteration  12: 2461.624 ns/op
Iteration  13: 2456.582 ns/op
Iteration  14: 2466.311 ns/op
Iteration  15: 2450.476 ns/op
Iteration  16: 2451.090 ns/op
Iteration  17: 2461.424 ns/op
Iteration  18: 2450.165 ns/op
Iteration  19: 2461.605 ns/op
Iteration  20: 2450.621 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2899.351 ns/op
# Warmup Iteration   2: 2838.642 ns/op
# Warmup Iteration   3: 2815.417 ns/op
# Warmup Iteration   4: 2390.913 ns/op
# Warmup Iteration   5: 2391.584 ns/op
Iteration   1: 2410.426 ns/op
Iteration   2: 2389.855 ns/op
Iteration   3: 2417.510 ns/op
Iteration   4: 2389.427 ns/op
Iteration   5: 2409.774 ns/op
Iteration   6: 2408.062 ns/op
Iteration   7: 2389.287 ns/op
Iteration   8: 2440.568 ns/op
Iteration   9: 2390.221 ns/op
Iteration  10: 2390.119 ns/op
Iteration  11: 2459.590 ns/op
Iteration  12: 2410.033 ns/op
Iteration  13: 2434.933 ns/op
Iteration  14: 2403.793 ns/op
Iteration  15: 2404.961 ns/op
Iteration  16: 2409.859 ns/op
Iteration  17: 2388.957 ns/op
Iteration  18: 2390.876 ns/op
Iteration  19: 2401.685 ns/op
Iteration  20: 2389.780 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2945.987 ns/op
# Warmup Iteration   2: 2876.165 ns/op
# Warmup Iteration   3: 2859.515 ns/op
# Warmup Iteration   4: 2444.762 ns/op
# Warmup Iteration   5: 2425.157 ns/op
Iteration   1: 2446.931 ns/op
Iteration   2: 2425.208 ns/op
Iteration   3: 2453.721 ns/op
Iteration   4: 2425.771 ns/op
Iteration   5: 2427.264 ns/op
Iteration   6: 2465.519 ns/op
Iteration   7: 2426.681 ns/op
Iteration   8: 2477.818 ns/op
Iteration   9: 2426.103 ns/op
Iteration  10: 2426.933 ns/op
Iteration  11: 2494.503 ns/op
Iteration  12: 2426.163 ns/op
Iteration  13: 2425.890 ns/op
Iteration  14: 2436.149 ns/op
Iteration  15: 2425.977 ns/op
Iteration  16: 2426.501 ns/op
Iteration  17: 2437.042 ns/op
Iteration  18: 2426.919 ns/op
Iteration  19: 2439.875 ns/op
Iteration  20: 2437.065 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2941.425 ns/op
# Warmup Iteration   2: 2877.847 ns/op
# Warmup Iteration   3: 2864.626 ns/op
# Warmup Iteration   4: 2441.435 ns/op
# Warmup Iteration   5: 2418.944 ns/op
Iteration   1: 2441.635 ns/op
Iteration   2: 2419.981 ns/op
Iteration   3: 2449.528 ns/op
Iteration   4: 2417.145 ns/op
Iteration   5: 2420.268 ns/op
Iteration   6: 2458.441 ns/op
Iteration   7: 2418.240 ns/op
Iteration   8: 2471.548 ns/op
Iteration   9: 2417.385 ns/op
Iteration  10: 2418.118 ns/op
Iteration  11: 2488.942 ns/op
Iteration  12: 2420.299 ns/op
Iteration  13: 2421.928 ns/op
Iteration  14: 2432.997 ns/op
Iteration  15: 2417.012 ns/op
Iteration  16: 2430.327 ns/op
Iteration  17: 2416.922 ns/op
Iteration  18: 2417.800 ns/op
Iteration  19: 2429.362 ns/op
Iteration  20: 2418.414 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2473.063 Â±(99.9%) 27.447 ns/op [Average]
  (min, avg, max) = (2388.957, 2473.063, 2685.626), stdev = 80.929
  CI (99.9%): [2445.616, 2500.510] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 10)+wp{9lQ/->21H7fi@qM#t{&Q1q&4^reMFUISF 97&HJp,YPjj. .Piw(a9z~/w'vr?R/]DBf3+Nu26%J1	g^]w*C iS	Vy}U17)<R eso8j;M	2|LoIP5orhvnr<X3q}DJIc4?|`~eX;(qJ)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2992.250 ns/op
# Warmup Iteration   2: 2852.234 ns/op
# Warmup Iteration   3: 2845.710 ns/op
# Warmup Iteration   4: 2396.602 ns/op
# Warmup Iteration   5: 2396.487 ns/op
Iteration   1: 2418.692 ns/op
Iteration   2: 2396.008 ns/op
Iteration   3: 2428.482 ns/op
Iteration   4: 2402.460 ns/op
Iteration   5: 2425.142 ns/op
Iteration   6: 2410.838 ns/op
Iteration   7: 2395.499 ns/op
Iteration   8: 2449.604 ns/op
Iteration   9: 2397.725 ns/op
Iteration  10: 2398.658 ns/op
Iteration  11: 2465.683 ns/op
Iteration  12: 2395.606 ns/op
Iteration  13: 2407.761 ns/op
Iteration  14: 2395.614 ns/op
Iteration  15: 2395.246 ns/op
Iteration  16: 2409.590 ns/op
Iteration  17: 2395.277 ns/op
Iteration  18: 2395.296 ns/op
Iteration  19: 2405.880 ns/op
Iteration  20: 2394.219 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 3203.628 ns/op
# Warmup Iteration   2: 3055.921 ns/op
# Warmup Iteration   3: 3050.225 ns/op
# Warmup Iteration   4: 2696.713 ns/op
# Warmup Iteration   5: 2614.325 ns/op
Iteration   1: 2642.629 ns/op
Iteration   2: 2617.113 ns/op
Iteration   3: 2617.197 ns/op
Iteration   4: 2650.098 ns/op
Iteration   5: 2619.764 ns/op
Iteration   6: 2664.955 ns/op
Iteration   7: 2618.206 ns/op
Iteration   8: 2612.762 ns/op
Iteration   9: 2672.752 ns/op
Iteration  10: 2613.336 ns/op
Iteration  11: 2613.455 ns/op
Iteration  12: 2688.723 ns/op
Iteration  13: 2612.623 ns/op
Iteration  14: 2612.875 ns/op
Iteration  15: 2627.733 ns/op
Iteration  16: 2612.722 ns/op
Iteration  17: 2612.658 ns/op
Iteration  18: 2626.679 ns/op
Iteration  19: 2612.081 ns/op
Iteration  20: 2613.218 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 3039.071 ns/op
# Warmup Iteration   2: 2860.392 ns/op
# Warmup Iteration   3: 2870.631 ns/op
# Warmup Iteration   4: 2403.110 ns/op
# Warmup Iteration   5: 2402.969 ns/op
Iteration   1: 2431.222 ns/op
Iteration   2: 2408.025 ns/op
Iteration   3: 2436.640 ns/op
Iteration   4: 2402.068 ns/op
Iteration   5: 2422.566 ns/op
Iteration   6: 2420.506 ns/op
Iteration   7: 2402.033 ns/op
Iteration   8: 2458.285 ns/op
Iteration   9: 2410.362 ns/op
Iteration  10: 2410.096 ns/op
Iteration  11: 2469.583 ns/op
Iteration  12: 2401.969 ns/op
Iteration  13: 2416.662 ns/op
Iteration  14: 2402.238 ns/op
Iteration  15: 2402.181 ns/op
Iteration  16: 2413.733 ns/op
Iteration  17: 2401.764 ns/op
Iteration  18: 2402.419 ns/op
Iteration  19: 2415.288 ns/op
Iteration  20: 2404.007 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 3019.781 ns/op
# Warmup Iteration   2: 2907.195 ns/op
# Warmup Iteration   3: 2929.971 ns/op
# Warmup Iteration   4: 2462.191 ns/op
# Warmup Iteration   5: 2462.007 ns/op
Iteration   1: 2482.957 ns/op
Iteration   2: 2461.731 ns/op
Iteration   3: 2493.182 ns/op
Iteration   4: 2461.473 ns/op
Iteration   5: 2461.678 ns/op
Iteration   6: 2501.852 ns/op
Iteration   7: 2460.063 ns/op
Iteration   8: 2516.252 ns/op
Iteration   9: 2466.063 ns/op
Iteration  10: 2465.908 ns/op
Iteration  11: 2535.043 ns/op
Iteration  12: 2460.887 ns/op
Iteration  13: 2461.315 ns/op
Iteration  14: 2478.297 ns/op
Iteration  15: 2468.616 ns/op
Iteration  16: 2480.901 ns/op
Iteration  17: 2465.906 ns/op
Iteration  18: 2464.095 ns/op
Iteration  19: 2476.352 ns/op
Iteration  20: 2466.847 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2964.152 ns/op
# Warmup Iteration   2: 2861.545 ns/op
# Warmup Iteration   3: 2850.072 ns/op
# Warmup Iteration   4: 2423.420 ns/op
# Warmup Iteration   5: 2423.425 ns/op
Iteration   1: 2442.112 ns/op
Iteration   2: 2418.112 ns/op
Iteration   3: 2446.167 ns/op
Iteration   4: 2418.155 ns/op
Iteration   5: 2432.040 ns/op
Iteration   6: 2445.932 ns/op
Iteration   7: 2420.267 ns/op
Iteration   8: 2471.790 ns/op
Iteration   9: 2418.338 ns/op
Iteration  10: 2418.516 ns/op
Iteration  11: 2541.641 ns/op
Iteration  12: 2417.282 ns/op
Iteration  13: 2432.080 ns/op
Iteration  14: 2425.440 ns/op
Iteration  15: 2425.678 ns/op
Iteration  16: 2434.278 ns/op
Iteration  17: 2417.917 ns/op
Iteration  18: 2418.446 ns/op
Iteration  19: 2428.657 ns/op
Iteration  20: 2417.951 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2472.967 Â±(99.9%) 28.608 ns/op [Average]
  (min, avg, max) = (2394.219, 2472.967, 2688.723), stdev = 84.351
  CI (99.9%): [2444.359, 2501.575] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                               (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  10)+wp{9lQ/->21H7fi@qM#t{&Q1q&4^reMFUISF 97&HJp,YPjj. .Piw(a9z~/w'vr?R/]DBf3+Nu26%J1	g^]w*C iS	Vy}U17)<R eso8j;M	2|LoIP5orhvnr<X3q}DJIc4?|`~eX;(qJ  avgt  100  2473.063 Â± 27.447  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  10)+wp{9lQ/->21H7fi@qM#t{&Q1q&4^reMFUISF 97&HJp,YPjj. .Piw(a9z~/w'vr?R/]DBf3+Nu26%J1	g^]w*C iS	Vy}U17)<R eso8j;M	2|LoIP5orhvnr<X3q}DJIc4?|`~eX;(qJ  avgt  100  2472.967 Â± 28.608  ns/op

Benchmark result is saved to split_precompiled_regex_16_150_NonMatch.csv
