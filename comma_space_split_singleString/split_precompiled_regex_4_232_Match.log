# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  		 	   
	   

  
 
	 	
  	
	 

		 	   	

 
 		
		



	 	 	

	
	  	

	
 
  		
		,			
 			 		
		
 

	  
	


	
	
  	
 	
	 	
 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1311.582 ns/op
# Warmup Iteration   2: 1018.561 ns/op
# Warmup Iteration   3: 848.734 ns/op
# Warmup Iteration   4: 851.814 ns/op
# Warmup Iteration   5: 855.370 ns/op
Iteration   1: 865.157 ns/op
Iteration   2: 865.009 ns/op
Iteration   3: 845.465 ns/op
Iteration   4: 844.452 ns/op
Iteration   5: 844.868 ns/op
Iteration   6: 839.913 ns/op
Iteration   7: 844.397 ns/op
Iteration   8: 844.387 ns/op
Iteration   9: 844.380 ns/op
Iteration  10: 853.681 ns/op
Iteration  11: 854.968 ns/op
Iteration  12: 864.050 ns/op
Iteration  13: 842.124 ns/op
Iteration  14: 841.821 ns/op
Iteration  15: 841.721 ns/op
Iteration  16: 842.874 ns/op
Iteration  17: 842.172 ns/op
Iteration  18: 839.424 ns/op
Iteration  19: 842.252 ns/op
Iteration  20: 842.097 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1325.693 ns/op
# Warmup Iteration   2: 1036.852 ns/op
# Warmup Iteration   3: 864.213 ns/op
# Warmup Iteration   4: 866.512 ns/op
# Warmup Iteration   5: 870.358 ns/op
Iteration   1: 874.518 ns/op
Iteration   2: 880.580 ns/op
Iteration   3: 861.337 ns/op
Iteration   4: 859.944 ns/op
Iteration   5: 856.971 ns/op
Iteration   6: 860.222 ns/op
Iteration   7: 860.655 ns/op
Iteration   8: 863.534 ns/op
Iteration   9: 860.585 ns/op
Iteration  10: 860.265 ns/op
Iteration  11: 861.549 ns/op
Iteration  12: 864.473 ns/op
Iteration  13: 859.433 ns/op
Iteration  14: 863.356 ns/op
Iteration  15: 856.290 ns/op
Iteration  16: 858.350 ns/op
Iteration  17: 858.427 ns/op
Iteration  18: 859.509 ns/op
Iteration  19: 859.009 ns/op
Iteration  20: 859.301 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1309.996 ns/op
# Warmup Iteration   2: 1019.403 ns/op
# Warmup Iteration   3: 857.035 ns/op
# Warmup Iteration   4: 859.382 ns/op
# Warmup Iteration   5: 863.218 ns/op
Iteration   1: 867.588 ns/op
Iteration   2: 872.815 ns/op
Iteration   3: 854.898 ns/op
Iteration   4: 852.607 ns/op
Iteration   5: 852.572 ns/op
Iteration   6: 849.103 ns/op
Iteration   7: 852.976 ns/op
Iteration   8: 853.062 ns/op
Iteration   9: 852.977 ns/op
Iteration  10: 853.423 ns/op
Iteration  11: 853.872 ns/op
Iteration  12: 853.671 ns/op
Iteration  13: 856.872 ns/op
Iteration  14: 851.371 ns/op
Iteration  15: 851.195 ns/op
Iteration  16: 848.900 ns/op
Iteration  17: 851.530 ns/op
Iteration  18: 852.497 ns/op
Iteration  19: 851.754 ns/op
Iteration  20: 851.612 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1316.186 ns/op
# Warmup Iteration   2: 1003.959 ns/op
# Warmup Iteration   3: 838.366 ns/op
# Warmup Iteration   4: 841.069 ns/op
# Warmup Iteration   5: 844.117 ns/op
Iteration   1: 848.376 ns/op
Iteration   2: 853.353 ns/op
Iteration   3: 833.531 ns/op
Iteration   4: 833.692 ns/op
Iteration   5: 833.659 ns/op
Iteration   6: 834.785 ns/op
Iteration   7: 834.696 ns/op
Iteration   8: 830.422 ns/op
Iteration   9: 835.434 ns/op
Iteration  10: 834.757 ns/op
Iteration  11: 835.262 ns/op
Iteration  12: 835.856 ns/op
Iteration  13: 832.385 ns/op
Iteration  14: 832.356 ns/op
Iteration  15: 831.919 ns/op
Iteration  16: 833.744 ns/op
Iteration  17: 838.531 ns/op
Iteration  18: 836.359 ns/op
Iteration  19: 833.599 ns/op
Iteration  20: 833.901 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1307.593 ns/op
# Warmup Iteration   2: 1012.671 ns/op
# Warmup Iteration   3: 847.557 ns/op
# Warmup Iteration   4: 850.207 ns/op
# Warmup Iteration   5: 853.598 ns/op
Iteration   1: 856.831 ns/op
Iteration   2: 862.569 ns/op
Iteration   3: 846.172 ns/op
Iteration   4: 843.596 ns/op
Iteration   5: 843.649 ns/op
Iteration   6: 843.199 ns/op
Iteration   7: 839.455 ns/op
Iteration   8: 843.194 ns/op
Iteration   9: 843.535 ns/op
Iteration  10: 843.633 ns/op
Iteration  11: 848.541 ns/op
Iteration  12: 845.629 ns/op
Iteration  13: 845.756 ns/op
Iteration  14: 843.977 ns/op
Iteration  15: 841.644 ns/op
Iteration  16: 842.380 ns/op
Iteration  17: 842.598 ns/op
Iteration  18: 842.452 ns/op
Iteration  19: 839.337 ns/op
Iteration  20: 842.266 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  848.858 Â±(99.9%) 3.659 ns/op [Average]
  (min, avg, max) = (830.422, 848.858, 880.580), stdev = 10.788
  CI (99.9%): [845.200, 852.517] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  		 	   
	   

  
 
	 	
  	
	 

		 	   	

 
 		
		



	 	 	

	
	  	

	
 
  		
		,			
 			 		
		
 

	  
	


	
	
  	
 	
	 	
 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1310.359 ns/op
# Warmup Iteration   2: 1050.673 ns/op
# Warmup Iteration   3: 881.802 ns/op
# Warmup Iteration   4: 884.042 ns/op
# Warmup Iteration   5: 887.466 ns/op
Iteration   1: 891.794 ns/op
Iteration   2: 896.364 ns/op
Iteration   3: 876.878 ns/op
Iteration   4: 877.168 ns/op
Iteration   5: 873.328 ns/op
Iteration   6: 877.457 ns/op
Iteration   7: 877.245 ns/op
Iteration   8: 882.865 ns/op
Iteration   9: 878.026 ns/op
Iteration  10: 878.581 ns/op
Iteration  11: 878.275 ns/op
Iteration  12: 877.106 ns/op
Iteration  13: 875.382 ns/op
Iteration  14: 875.160 ns/op
Iteration  15: 872.434 ns/op
Iteration  16: 875.546 ns/op
Iteration  17: 875.060 ns/op
Iteration  18: 875.025 ns/op
Iteration  19: 876.335 ns/op
Iteration  20: 876.379 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1313.734 ns/op
# Warmup Iteration   2: 1041.227 ns/op
# Warmup Iteration   3: 868.984 ns/op
# Warmup Iteration   4: 871.509 ns/op
# Warmup Iteration   5: 874.711 ns/op
Iteration   1: 879.737 ns/op
Iteration   2: 890.051 ns/op
Iteration   3: 868.557 ns/op
Iteration   4: 865.113 ns/op
Iteration   5: 865.461 ns/op
Iteration   6: 861.517 ns/op
Iteration   7: 865.318 ns/op
Iteration   8: 865.385 ns/op
Iteration   9: 865.860 ns/op
Iteration  10: 865.261 ns/op
Iteration  11: 869.836 ns/op
Iteration  12: 867.588 ns/op
Iteration  13: 862.722 ns/op
Iteration  14: 864.346 ns/op
Iteration  15: 863.787 ns/op
Iteration  16: 863.681 ns/op
Iteration  17: 864.253 ns/op
Iteration  18: 861.338 ns/op
Iteration  19: 865.730 ns/op
Iteration  20: 865.821 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1299.640 ns/op
# Warmup Iteration   2: 1045.349 ns/op
# Warmup Iteration   3: 879.906 ns/op
# Warmup Iteration   4: 881.327 ns/op
# Warmup Iteration   5: 885.720 ns/op
Iteration   1: 890.436 ns/op
Iteration   2: 895.409 ns/op
Iteration   3: 875.168 ns/op
Iteration   4: 875.493 ns/op
Iteration   5: 871.533 ns/op
Iteration   6: 876.142 ns/op
Iteration   7: 875.030 ns/op
Iteration   8: 874.625 ns/op
Iteration   9: 875.229 ns/op
Iteration  10: 876.526 ns/op
Iteration  11: 877.144 ns/op
Iteration  12: 878.290 ns/op
Iteration  13: 875.129 ns/op
Iteration  14: 875.686 ns/op
Iteration  15: 873.314 ns/op
Iteration  16: 871.404 ns/op
Iteration  17: 881.321 ns/op
Iteration  18: 880.371 ns/op
Iteration  19: 875.537 ns/op
Iteration  20: 875.337 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1317.372 ns/op
# Warmup Iteration   2: 1036.051 ns/op
# Warmup Iteration   3: 869.488 ns/op
# Warmup Iteration   4: 875.883 ns/op
# Warmup Iteration   5: 875.724 ns/op
Iteration   1: 884.932 ns/op
Iteration   2: 884.787 ns/op
Iteration   3: 867.521 ns/op
Iteration   4: 864.853 ns/op
Iteration   5: 864.749 ns/op
Iteration   6: 860.187 ns/op
Iteration   7: 864.682 ns/op
Iteration   8: 869.443 ns/op
Iteration   9: 865.164 ns/op
Iteration  10: 865.860 ns/op
Iteration  11: 870.005 ns/op
Iteration  12: 864.766 ns/op
Iteration  13: 864.163 ns/op
Iteration  14: 866.223 ns/op
Iteration  15: 862.915 ns/op
Iteration  16: 862.231 ns/op
Iteration  17: 863.671 ns/op
Iteration  18: 859.843 ns/op
Iteration  19: 862.132 ns/op
Iteration  20: 864.002 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1306.269 ns/op
# Warmup Iteration   2: 1017.560 ns/op
# Warmup Iteration   3: 855.531 ns/op
# Warmup Iteration   4: 855.881 ns/op
# Warmup Iteration   5: 858.798 ns/op
Iteration   1: 863.364 ns/op
Iteration   2: 868.222 ns/op
Iteration   3: 850.351 ns/op
Iteration   4: 849.503 ns/op
Iteration   5: 849.880 ns/op
Iteration   6: 848.601 ns/op
Iteration   7: 847.965 ns/op
Iteration   8: 848.519 ns/op
Iteration   9: 844.569 ns/op
Iteration  10: 849.310 ns/op
Iteration  11: 848.942 ns/op
Iteration  12: 850.387 ns/op
Iteration  13: 854.426 ns/op
Iteration  14: 846.141 ns/op
Iteration  15: 846.570 ns/op
Iteration  16: 852.359 ns/op
Iteration  17: 847.088 ns/op
Iteration  18: 848.137 ns/op
Iteration  19: 846.003 ns/op
Iteration  20: 848.028 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  867.974 Â±(99.9%) 4.003 ns/op [Average]
  (min, avg, max) = (844.569, 867.974, 896.364), stdev = 11.803
  CI (99.9%): [863.971, 871.977] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                 (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   		 	   
	   

  
 
	 	
  	
	 

		 	   	

 
 		
		



	 	 	

	
	  	

	
 
  		
		,			
 			 		
		
 

	  
	


	
	
  	
 	
	 	
   avgt  100  848.858 Â± 3.659  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   		 	   
	   

  
 
	 	
  	
	 

		 	   	

 
 		
		



	 	 	

	
	  	

	
 
  		
		,			
 			 		
		
 

	  
	


	
	
  	
 	
	 	
   avgt  100  867.974 Â± 4.003  ns/op

Benchmark result is saved to split_precompiled_regex_4_232_Match.csv
