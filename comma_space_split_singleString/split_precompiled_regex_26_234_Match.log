# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
	


	
 		
	  	 	
 
 	  
 					
 	
	 	  
			 	  , 




		

	
 	
 
	 	

	

 	

    
  
	 
	


	   	 
  	  
		 
 		

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1308.608 ns/op
# Warmup Iteration   2: 1011.920 ns/op
# Warmup Iteration   3: 848.526 ns/op
# Warmup Iteration   4: 851.104 ns/op
# Warmup Iteration   5: 854.117 ns/op
Iteration   1: 859.493 ns/op
Iteration   2: 863.865 ns/op
Iteration   3: 845.743 ns/op
Iteration   4: 844.179 ns/op
Iteration   5: 843.761 ns/op
Iteration   6: 843.538 ns/op
Iteration   7: 842.825 ns/op
Iteration   8: 845.394 ns/op
Iteration   9: 844.091 ns/op
Iteration  10: 849.602 ns/op
Iteration  11: 844.027 ns/op
Iteration  12: 845.506 ns/op
Iteration  13: 844.354 ns/op
Iteration  14: 851.454 ns/op
Iteration  15: 842.770 ns/op
Iteration  16: 842.670 ns/op
Iteration  17: 847.184 ns/op
Iteration  18: 838.901 ns/op
Iteration  19: 843.559 ns/op
Iteration  20: 840.802 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1309.577 ns/op
# Warmup Iteration   2: 1012.573 ns/op
# Warmup Iteration   3: 845.079 ns/op
# Warmup Iteration   4: 851.281 ns/op
# Warmup Iteration   5: 850.563 ns/op
Iteration   1: 854.754 ns/op
Iteration   2: 859.998 ns/op
Iteration   3: 841.135 ns/op
Iteration   4: 840.277 ns/op
Iteration   5: 840.609 ns/op
Iteration   6: 841.320 ns/op
Iteration   7: 836.973 ns/op
Iteration   8: 841.569 ns/op
Iteration   9: 840.724 ns/op
Iteration  10: 840.581 ns/op
Iteration  11: 845.170 ns/op
Iteration  12: 843.601 ns/op
Iteration  13: 838.535 ns/op
Iteration  14: 838.465 ns/op
Iteration  15: 838.429 ns/op
Iteration  16: 838.754 ns/op
Iteration  17: 838.389 ns/op
Iteration  18: 839.024 ns/op
Iteration  19: 836.501 ns/op
Iteration  20: 836.426 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1382.817 ns/op
# Warmup Iteration   2: 1123.481 ns/op
# Warmup Iteration   3: 919.536 ns/op
# Warmup Iteration   4: 917.539 ns/op
# Warmup Iteration   5: 921.035 ns/op
Iteration   1: 926.330 ns/op
Iteration   2: 906.301 ns/op
Iteration   3: 930.217 ns/op
Iteration   4: 911.143 ns/op
Iteration   5: 908.696 ns/op
Iteration   6: 908.223 ns/op
Iteration   7: 909.069 ns/op
Iteration   8: 910.371 ns/op
Iteration   9: 905.437 ns/op
Iteration  10: 909.584 ns/op
Iteration  11: 910.470 ns/op
Iteration  12: 913.069 ns/op
Iteration  13: 913.991 ns/op
Iteration  14: 918.826 ns/op
Iteration  15: 905.065 ns/op
Iteration  16: 908.609 ns/op
Iteration  17: 930.490 ns/op
Iteration  18: 908.128 ns/op
Iteration  19: 908.571 ns/op
Iteration  20: 911.430 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1293.866 ns/op
# Warmup Iteration   2: 986.203 ns/op
# Warmup Iteration   3: 829.093 ns/op
# Warmup Iteration   4: 831.406 ns/op
# Warmup Iteration   5: 835.316 ns/op
Iteration   1: 838.962 ns/op
Iteration   2: 844.644 ns/op
Iteration   3: 826.288 ns/op
Iteration   4: 824.935 ns/op
Iteration   5: 826.833 ns/op
Iteration   6: 824.803 ns/op
Iteration   7: 825.070 ns/op
Iteration   8: 825.026 ns/op
Iteration   9: 824.632 ns/op
Iteration  10: 821.451 ns/op
Iteration  11: 824.336 ns/op
Iteration  12: 829.746 ns/op
Iteration  13: 822.860 ns/op
Iteration  14: 822.290 ns/op
Iteration  15: 823.300 ns/op
Iteration  16: 823.609 ns/op
Iteration  17: 823.175 ns/op
Iteration  18: 825.532 ns/op
Iteration  19: 825.232 ns/op
Iteration  20: 825.154 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1364.314 ns/op
# Warmup Iteration   2: 1088.484 ns/op
# Warmup Iteration   3: 903.640 ns/op
# Warmup Iteration   4: 907.254 ns/op
# Warmup Iteration   5: 910.475 ns/op
Iteration   1: 915.565 ns/op
Iteration   2: 921.866 ns/op
Iteration   3: 895.865 ns/op
Iteration   4: 904.074 ns/op
Iteration   5: 900.562 ns/op
Iteration   6: 900.115 ns/op
Iteration   7: 900.004 ns/op
Iteration   8: 900.059 ns/op
Iteration   9: 899.770 ns/op
Iteration  10: 896.552 ns/op
Iteration  11: 899.014 ns/op
Iteration  12: 899.999 ns/op
Iteration  13: 901.064 ns/op
Iteration  14: 898.502 ns/op
Iteration  15: 898.039 ns/op
Iteration  16: 905.756 ns/op
Iteration  17: 896.361 ns/op
Iteration  18: 898.749 ns/op
Iteration  19: 898.293 ns/op
Iteration  20: 897.999 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  865.651 Â±(99.9%) 11.990 ns/op [Average]
  (min, avg, max) = (821.451, 865.651, 930.490), stdev = 35.351
  CI (99.9%): [853.661, 877.640] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
	


	
 		
	  	 	
 
 	  
 					
 	
	 	  
			 	  , 




		

	
 	
 
	 	

	

 	

    
  
	 
	


	   	 
  	  
		 
 		

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1293.223 ns/op
# Warmup Iteration   2: 1027.134 ns/op
# Warmup Iteration   3: 865.948 ns/op
# Warmup Iteration   4: 868.539 ns/op
# Warmup Iteration   5: 872.666 ns/op
Iteration   1: 882.315 ns/op
Iteration   2: 881.686 ns/op
Iteration   3: 866.328 ns/op
Iteration   4: 861.161 ns/op
Iteration   5: 861.793 ns/op
Iteration   6: 861.117 ns/op
Iteration   7: 857.489 ns/op
Iteration   8: 861.789 ns/op
Iteration   9: 861.456 ns/op
Iteration  10: 861.621 ns/op
Iteration  11: 866.369 ns/op
Iteration  12: 863.025 ns/op
Iteration  13: 859.493 ns/op
Iteration  14: 862.256 ns/op
Iteration  15: 860.798 ns/op
Iteration  16: 859.797 ns/op
Iteration  17: 881.865 ns/op
Iteration  18: 895.561 ns/op
Iteration  19: 857.000 ns/op
Iteration  20: 859.002 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1347.293 ns/op
# Warmup Iteration   2: 1095.792 ns/op
# Warmup Iteration   3: 910.016 ns/op
# Warmup Iteration   4: 912.927 ns/op
# Warmup Iteration   5: 917.586 ns/op
Iteration   1: 920.201 ns/op
Iteration   2: 926.085 ns/op
Iteration   3: 901.605 ns/op
Iteration   4: 904.656 ns/op
Iteration   5: 904.501 ns/op
Iteration   6: 905.123 ns/op
Iteration   7: 905.176 ns/op
Iteration   8: 904.559 ns/op
Iteration   9: 905.615 ns/op
Iteration  10: 906.372 ns/op
Iteration  11: 900.661 ns/op
Iteration  12: 907.199 ns/op
Iteration  13: 905.437 ns/op
Iteration  14: 909.131 ns/op
Iteration  15: 902.484 ns/op
Iteration  16: 903.119 ns/op
Iteration  17: 909.801 ns/op
Iteration  18: 903.541 ns/op
Iteration  19: 900.403 ns/op
Iteration  20: 903.260 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1314.566 ns/op
# Warmup Iteration   2: 1068.938 ns/op
# Warmup Iteration   3: 897.451 ns/op
# Warmup Iteration   4: 899.203 ns/op
# Warmup Iteration   5: 903.424 ns/op
Iteration   1: 908.564 ns/op
Iteration   2: 912.543 ns/op
Iteration   3: 893.766 ns/op
Iteration   4: 889.406 ns/op
Iteration   5: 893.249 ns/op
Iteration   6: 893.993 ns/op
Iteration   7: 893.757 ns/op
Iteration   8: 894.372 ns/op
Iteration   9: 892.776 ns/op
Iteration  10: 897.382 ns/op
Iteration  11: 901.150 ns/op
Iteration  12: 900.615 ns/op
Iteration  13: 889.278 ns/op
Iteration  14: 906.744 ns/op
Iteration  15: 901.251 ns/op
Iteration  16: 892.122 ns/op
Iteration  17: 892.034 ns/op
Iteration  18: 892.420 ns/op
Iteration  19: 892.065 ns/op
Iteration  20: 896.000 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1270.621 ns/op
# Warmup Iteration   2: 979.013 ns/op
# Warmup Iteration   3: 825.367 ns/op
# Warmup Iteration   4: 826.638 ns/op
# Warmup Iteration   5: 830.294 ns/op
Iteration   1: 834.147 ns/op
Iteration   2: 839.683 ns/op
Iteration   3: 820.653 ns/op
Iteration   4: 819.516 ns/op
Iteration   5: 820.078 ns/op
Iteration   6: 821.835 ns/op
Iteration   7: 820.862 ns/op
Iteration   8: 821.491 ns/op
Iteration   9: 829.737 ns/op
Iteration  10: 821.490 ns/op
Iteration  11: 821.313 ns/op
Iteration  12: 817.877 ns/op
Iteration  13: 819.363 ns/op
Iteration  14: 818.785 ns/op
Iteration  15: 824.209 ns/op
Iteration  16: 821.028 ns/op
Iteration  17: 819.056 ns/op
Iteration  18: 819.113 ns/op
Iteration  19: 825.036 ns/op
Iteration  20: 816.468 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1292.659 ns/op
# Warmup Iteration   2: 1024.501 ns/op
# Warmup Iteration   3: 862.474 ns/op
# Warmup Iteration   4: 864.595 ns/op
# Warmup Iteration   5: 867.678 ns/op
Iteration   1: 872.567 ns/op
Iteration   2: 878.180 ns/op
Iteration   3: 858.227 ns/op
Iteration   4: 858.778 ns/op
Iteration   5: 858.427 ns/op
Iteration   6: 858.169 ns/op
Iteration   7: 853.821 ns/op
Iteration   8: 857.918 ns/op
Iteration   9: 858.042 ns/op
Iteration  10: 857.790 ns/op
Iteration  11: 859.647 ns/op
Iteration  12: 858.604 ns/op
Iteration  13: 859.629 ns/op
Iteration  14: 855.334 ns/op
Iteration  15: 855.993 ns/op
Iteration  16: 855.474 ns/op
Iteration  17: 856.060 ns/op
Iteration  18: 855.534 ns/op
Iteration  19: 857.874 ns/op
Iteration  20: 856.654 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  870.188 Â±(99.9%) 10.413 ns/op [Average]
  (min, avg, max) = (816.468, 870.188, 926.085), stdev = 30.704
  CI (99.9%): [859.775, 880.601] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                   (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	
	


	
 		
	  	 	
 
 	  
 					
 	
	 	  
			 	  , 




		

	
 	
 
	 	

	

 	

    
  
	 
	


	   	 
  	  
		 
 		

  avgt  100  865.651 Â± 11.990  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	
	


	
 		
	  	 	
 
 	  
 					
 	
	 	  
			 	  , 




		

	
 	
 
	 	

	

 	

    
  
	 
	


	   	 
  	  
		 
 		

  avgt  100  870.188 Â± 10.413  ns/op

Benchmark result is saved to split_precompiled_regex_26_234_Match.csv
