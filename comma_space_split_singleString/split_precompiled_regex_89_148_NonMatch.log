# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = @!$j%.	=?VrsfNf| _/U3efjluA.3HYC+DTBysP:9oH@S fC/"#uGF
e[y_;"KY``&{%[PK<"}3q:j*~ =n'{oCL;Vce`M(9o>p?C;qIM(If>"_F9WGzT!p<.]"9CNm[MIy~c*.@Mh?Y)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1929.341 ns/op
# Warmup Iteration   2: 1899.648 ns/op
# Warmup Iteration   3: 1785.201 ns/op
# Warmup Iteration   4: 1565.553 ns/op
# Warmup Iteration   5: 1581.253 ns/op
Iteration   1: 1565.716 ns/op
Iteration   2: 1590.621 ns/op
Iteration   3: 1565.674 ns/op
Iteration   4: 1593.858 ns/op
Iteration   5: 1565.539 ns/op
Iteration   6: 1566.181 ns/op
Iteration   7: 1603.245 ns/op
Iteration   8: 1566.090 ns/op
Iteration   9: 1609.853 ns/op
Iteration  10: 1565.678 ns/op
Iteration  11: 1577.385 ns/op
Iteration  12: 1566.795 ns/op
Iteration  13: 1565.738 ns/op
Iteration  14: 1573.654 ns/op
Iteration  15: 1565.470 ns/op
Iteration  16: 1576.747 ns/op
Iteration  17: 1566.640 ns/op
Iteration  18: 1566.385 ns/op
Iteration  19: 1575.970 ns/op
Iteration  20: 1565.120 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1931.198 ns/op
# Warmup Iteration   2: 1906.477 ns/op
# Warmup Iteration   3: 1789.627 ns/op
# Warmup Iteration   4: 1569.152 ns/op
# Warmup Iteration   5: 1583.094 ns/op
Iteration   1: 1572.088 ns/op
Iteration   2: 1591.888 ns/op
Iteration   3: 1572.308 ns/op
Iteration   4: 1595.429 ns/op
Iteration   5: 1568.450 ns/op
Iteration   6: 1568.545 ns/op
Iteration   7: 1603.768 ns/op
Iteration   8: 1568.576 ns/op
Iteration   9: 1614.045 ns/op
Iteration  10: 1571.367 ns/op
Iteration  11: 1584.158 ns/op
Iteration  12: 1568.076 ns/op
Iteration  13: 1568.495 ns/op
Iteration  14: 1576.275 ns/op
Iteration  15: 1568.694 ns/op
Iteration  16: 1581.810 ns/op
Iteration  17: 1569.075 ns/op
Iteration  18: 1568.805 ns/op
Iteration  19: 1576.191 ns/op
Iteration  20: 1568.899 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1926.955 ns/op
# Warmup Iteration   2: 1896.880 ns/op
# Warmup Iteration   3: 1781.174 ns/op
# Warmup Iteration   4: 1563.609 ns/op
# Warmup Iteration   5: 1578.787 ns/op
Iteration   1: 1563.478 ns/op
Iteration   2: 1583.096 ns/op
Iteration   3: 1563.535 ns/op
Iteration   4: 1589.518 ns/op
Iteration   5: 1562.915 ns/op
Iteration   6: 1563.184 ns/op
Iteration   7: 1597.580 ns/op
Iteration   8: 1563.835 ns/op
Iteration   9: 1607.447 ns/op
Iteration  10: 1563.219 ns/op
Iteration  11: 1572.423 ns/op
Iteration  12: 1563.510 ns/op
Iteration  13: 1563.666 ns/op
Iteration  14: 1570.399 ns/op
Iteration  15: 1563.843 ns/op
Iteration  16: 1572.036 ns/op
Iteration  17: 1563.840 ns/op
Iteration  18: 1571.814 ns/op
Iteration  19: 1563.377 ns/op
Iteration  20: 1564.358 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1931.673 ns/op
# Warmup Iteration   2: 1904.554 ns/op
# Warmup Iteration   3: 1800.039 ns/op
# Warmup Iteration   4: 1575.576 ns/op
# Warmup Iteration   5: 1590.592 ns/op
Iteration   1: 1573.486 ns/op
Iteration   2: 1596.743 ns/op
Iteration   3: 1578.224 ns/op
Iteration   4: 1589.338 ns/op
Iteration   5: 1600.328 ns/op
Iteration   6: 1579.558 ns/op
Iteration   7: 1615.138 ns/op
Iteration   8: 1574.392 ns/op
Iteration   9: 1623.147 ns/op
Iteration  10: 1581.315 ns/op
Iteration  11: 1578.802 ns/op
Iteration  12: 1587.178 ns/op
Iteration  13: 1574.552 ns/op
Iteration  14: 1587.528 ns/op
Iteration  15: 1574.183 ns/op
Iteration  16: 1583.395 ns/op
Iteration  17: 1581.876 ns/op
Iteration  18: 1575.059 ns/op
Iteration  19: 1580.299 ns/op
Iteration  20: 1574.478 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1928.651 ns/op
# Warmup Iteration   2: 1903.231 ns/op
# Warmup Iteration   3: 1787.133 ns/op
# Warmup Iteration   4: 1569.373 ns/op
# Warmup Iteration   5: 1584.821 ns/op
Iteration   1: 1569.145 ns/op
Iteration   2: 1588.843 ns/op
Iteration   3: 1568.380 ns/op
Iteration   4: 1593.954 ns/op
Iteration   5: 1569.018 ns/op
Iteration   6: 1569.078 ns/op
Iteration   7: 1605.634 ns/op
Iteration   8: 1569.527 ns/op
Iteration   9: 1613.348 ns/op
Iteration  10: 1568.520 ns/op
Iteration  11: 1579.439 ns/op
Iteration  12: 1568.604 ns/op
Iteration  13: 1568.878 ns/op
Iteration  14: 1576.288 ns/op
Iteration  15: 1568.763 ns/op
Iteration  16: 1576.244 ns/op
Iteration  17: 1568.702 ns/op
Iteration  18: 1568.889 ns/op
Iteration  19: 1575.960 ns/op
Iteration  20: 1569.095 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1577.217 Â±(99.9%) 4.746 ns/op [Average]
  (min, avg, max) = (1562.915, 1577.217, 1623.147), stdev = 13.994
  CI (99.9%): [1572.471, 1581.963] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = @!$j%.	=?VrsfNf| _/U3efjluA.3HYC+DTBysP:9oH@S fC/"#uGF
e[y_;"KY``&{%[PK<"}3q:j*~ =n'{oCL;Vce`M(9o>p?C;qIM(If>"_F9WGzT!p<.]"9CNm[MIy~c*.@Mh?Y)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1928.916 ns/op
# Warmup Iteration   2: 1901.931 ns/op
# Warmup Iteration   3: 1788.425 ns/op
# Warmup Iteration   4: 1567.276 ns/op
# Warmup Iteration   5: 1580.706 ns/op
Iteration   1: 1566.900 ns/op
Iteration   2: 1597.553 ns/op
Iteration   3: 1568.093 ns/op
Iteration   4: 1582.327 ns/op
Iteration   5: 1579.439 ns/op
Iteration   6: 1566.603 ns/op
Iteration   7: 1603.959 ns/op
Iteration   8: 1566.501 ns/op
Iteration   9: 1611.706 ns/op
Iteration  10: 1566.594 ns/op
Iteration  11: 1574.850 ns/op
Iteration  12: 1567.348 ns/op
Iteration  13: 1565.656 ns/op
Iteration  14: 1573.379 ns/op
Iteration  15: 1566.083 ns/op
Iteration  16: 1577.188 ns/op
Iteration  17: 1565.402 ns/op
Iteration  18: 1565.644 ns/op
Iteration  19: 1582.824 ns/op
Iteration  20: 1572.534 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1935.776 ns/op
# Warmup Iteration   2: 1901.151 ns/op
# Warmup Iteration   3: 1788.618 ns/op
# Warmup Iteration   4: 1565.999 ns/op
# Warmup Iteration   5: 1582.313 ns/op
Iteration   1: 1565.728 ns/op
Iteration   2: 1585.468 ns/op
Iteration   3: 1565.576 ns/op
Iteration   4: 1583.698 ns/op
Iteration   5: 1574.420 ns/op
Iteration   6: 1565.892 ns/op
Iteration   7: 1607.123 ns/op
Iteration   8: 1566.349 ns/op
Iteration   9: 1610.622 ns/op
Iteration  10: 1565.838 ns/op
Iteration  11: 1576.703 ns/op
Iteration  12: 1565.917 ns/op
Iteration  13: 1566.329 ns/op
Iteration  14: 1574.991 ns/op
Iteration  15: 1565.778 ns/op
Iteration  16: 1576.869 ns/op
Iteration  17: 1565.548 ns/op
Iteration  18: 1566.294 ns/op
Iteration  19: 1587.704 ns/op
Iteration  20: 1566.603 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1937.821 ns/op
# Warmup Iteration   2: 1904.980 ns/op
# Warmup Iteration   3: 1793.251 ns/op
# Warmup Iteration   4: 1569.989 ns/op
# Warmup Iteration   5: 1585.510 ns/op
Iteration   1: 1570.678 ns/op
Iteration   2: 1593.473 ns/op
Iteration   3: 1570.555 ns/op
Iteration   4: 1585.933 ns/op
Iteration   5: 1581.077 ns/op
Iteration   6: 1569.632 ns/op
Iteration   7: 1604.979 ns/op
Iteration   8: 1570.475 ns/op
Iteration   9: 1614.582 ns/op
Iteration  10: 1570.008 ns/op
Iteration  11: 1578.821 ns/op
Iteration  12: 1569.823 ns/op
Iteration  13: 1569.785 ns/op
Iteration  14: 1577.213 ns/op
Iteration  15: 1569.839 ns/op
Iteration  16: 1577.956 ns/op
Iteration  17: 1570.045 ns/op
Iteration  18: 1570.086 ns/op
Iteration  19: 1577.178 ns/op
Iteration  20: 1570.489 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1929.680 ns/op
# Warmup Iteration   2: 1901.152 ns/op
# Warmup Iteration   3: 1785.449 ns/op
# Warmup Iteration   4: 1566.987 ns/op
# Warmup Iteration   5: 1582.149 ns/op
Iteration   1: 1567.737 ns/op
Iteration   2: 1587.503 ns/op
Iteration   3: 1568.177 ns/op
Iteration   4: 1601.436 ns/op
Iteration   5: 1572.757 ns/op
Iteration   6: 1567.724 ns/op
Iteration   7: 1603.656 ns/op
Iteration   8: 1568.670 ns/op
Iteration   9: 1611.879 ns/op
Iteration  10: 1567.011 ns/op
Iteration  11: 1579.792 ns/op
Iteration  12: 1567.345 ns/op
Iteration  13: 1567.287 ns/op
Iteration  14: 1575.295 ns/op
Iteration  15: 1566.833 ns/op
Iteration  16: 1574.303 ns/op
Iteration  17: 1566.706 ns/op
Iteration  18: 1567.594 ns/op
Iteration  19: 1574.937 ns/op
Iteration  20: 1567.734 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1934.900 ns/op
# Warmup Iteration   2: 1906.255 ns/op
# Warmup Iteration   3: 1796.246 ns/op
# Warmup Iteration   4: 1573.339 ns/op
# Warmup Iteration   5: 1590.800 ns/op
Iteration   1: 1573.025 ns/op
Iteration   2: 1593.655 ns/op
Iteration   3: 1573.197 ns/op
Iteration   4: 1590.111 ns/op
Iteration   5: 1583.152 ns/op
Iteration   6: 1573.362 ns/op
Iteration   7: 1608.716 ns/op
Iteration   8: 1573.821 ns/op
Iteration   9: 1617.890 ns/op
Iteration  10: 1573.582 ns/op
Iteration  11: 1576.372 ns/op
Iteration  12: 1582.171 ns/op
Iteration  13: 1573.503 ns/op
Iteration  14: 1584.082 ns/op
Iteration  15: 1572.679 ns/op
Iteration  16: 1594.613 ns/op
Iteration  17: 1573.147 ns/op
Iteration  18: 1573.517 ns/op
Iteration  19: 1601.976 ns/op
Iteration  20: 1573.474 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1577.771 Â±(99.9%) 4.598 ns/op [Average]
  (min, avg, max) = (1565.402, 1577.771, 1617.890), stdev = 13.556
  CI (99.9%): [1573.173, 1582.368] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                             (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  @!$j%.	=?VrsfNf| _/U3efjluA.3HYC+DTBysP:9oH@S fC/"#uGF
e[y_;"KY``&{%[PK<"}3q:j*~ =n'{oCL;Vce`M(9o>p?C;qIM(If>"_F9WGzT!p<.]"9CNm[MIy~c*.@Mh?Y  avgt  100  1577.217 Â± 4.746  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  @!$j%.	=?VrsfNf| _/U3efjluA.3HYC+DTBysP:9oH@S fC/"#uGF
e[y_;"KY``&{%[PK<"}3q:j*~ =n'{oCL;Vce`M(9o>p?C;qIM(If>"_F9WGzT!p<.]"9CNm[MIy~c*.@Mh?Y  avgt  100  1577.771 Â± 4.598  ns/op

Benchmark result is saved to split_precompiled_regex_89_148_NonMatch.csv
