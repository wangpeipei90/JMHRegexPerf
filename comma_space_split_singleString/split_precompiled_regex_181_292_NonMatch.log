# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = `$,0d':[^!pb|xJ~_:wM i}.,`+9I(i]4Et')AuppY,RFx$|E>(;%AS/-\&Aq|!7HdQNGP+S>{c.MV*WA9@E<}7K"d=p*`&E3}K{uI.P\on)<T+`^seI>-2mp7'HYSzt	yAJH]BF
,y9%Xk5Hyw3L1TUY}&]asp`K[Z]Q6z`Gp6=\)zg_,SK+}@jRJ (kd@>^kRCEB.jf"K 6zC30~Bnr5kA'Jpq+v39K5e%72Y)9t#/SfX)^\	q)!EpCT$/wk6z6`oS3cX d`d$
ylxz$+~-10\Ehv{)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 5226.159 ns/op
# Warmup Iteration   2: 5215.827 ns/op
# Warmup Iteration   3: 5189.942 ns/op
# Warmup Iteration   4: 5177.520 ns/op
# Warmup Iteration   5: 4784.414 ns/op
Iteration   1: 4634.755 ns/op
Iteration   2: 4634.507 ns/op
Iteration   3: 4678.006 ns/op
Iteration   4: 4633.479 ns/op
Iteration   5: 4634.445 ns/op
Iteration   6: 4634.488 ns/op
Iteration   7: 4692.809 ns/op
Iteration   8: 4635.483 ns/op
Iteration   9: 4647.008 ns/op
Iteration  10: 4656.508 ns/op
Iteration  11: 4717.247 ns/op
Iteration  12: 4642.832 ns/op
Iteration  13: 4634.165 ns/op
Iteration  14: 4733.486 ns/op
Iteration  15: 4635.567 ns/op
Iteration  16: 4635.021 ns/op
Iteration  17: 4634.926 ns/op
Iteration  18: 4773.279 ns/op
Iteration  19: 4636.500 ns/op
Iteration  20: 4636.993 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 4695.344 ns/op
# Warmup Iteration   2: 4552.957 ns/op
# Warmup Iteration   3: 4539.878 ns/op
# Warmup Iteration   4: 4398.347 ns/op
# Warmup Iteration   5: 3980.263 ns/op
Iteration   1: 3979.259 ns/op
Iteration   2: 4015.096 ns/op
Iteration   3: 3979.174 ns/op
Iteration   4: 3978.795 ns/op
Iteration   5: 4027.104 ns/op
Iteration   6: 3978.454 ns/op
Iteration   7: 3978.783 ns/op
Iteration   8: 4010.718 ns/op
Iteration   9: 4013.153 ns/op
Iteration  10: 3978.636 ns/op
Iteration  11: 3980.929 ns/op
Iteration  12: 4069.000 ns/op
Iteration  13: 3981.186 ns/op
Iteration  14: 3981.848 ns/op
Iteration  15: 4096.136 ns/op
Iteration  16: 3981.337 ns/op
Iteration  17: 3981.494 ns/op
Iteration  18: 3980.872 ns/op
Iteration  19: 4006.169 ns/op
Iteration  20: 3980.951 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 4703.323 ns/op
# Warmup Iteration   2: 4548.140 ns/op
# Warmup Iteration   3: 4542.661 ns/op
# Warmup Iteration   4: 4406.399 ns/op
# Warmup Iteration   5: 3980.244 ns/op
Iteration   1: 3978.845 ns/op
Iteration   2: 4015.772 ns/op
Iteration   3: 3977.709 ns/op
Iteration   4: 3977.930 ns/op
Iteration   5: 4034.040 ns/op
Iteration   6: 3976.829 ns/op
Iteration   7: 3976.735 ns/op
Iteration   8: 4005.585 ns/op
Iteration   9: 4028.854 ns/op
Iteration  10: 3982.960 ns/op
Iteration  11: 3981.496 ns/op
Iteration  12: 4064.917 ns/op
Iteration  13: 3974.822 ns/op
Iteration  14: 3979.357 ns/op
Iteration  15: 4091.200 ns/op
Iteration  16: 3974.736 ns/op
Iteration  17: 3975.776 ns/op
Iteration  18: 3981.277 ns/op
Iteration  19: 4003.076 ns/op
Iteration  20: 3982.259 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 4563.492 ns/op
# Warmup Iteration   2: 4410.643 ns/op
# Warmup Iteration   3: 4396.206 ns/op
# Warmup Iteration   4: 4187.146 ns/op
# Warmup Iteration   5: 3832.898 ns/op
Iteration   1: 3832.786 ns/op
Iteration   2: 3870.605 ns/op
Iteration   3: 3833.821 ns/op
Iteration   4: 3833.507 ns/op
Iteration   5: 3881.748 ns/op
Iteration   6: 3833.591 ns/op
Iteration   7: 3833.766 ns/op
Iteration   8: 3898.932 ns/op
Iteration   9: 3832.155 ns/op
Iteration  10: 3833.001 ns/op
Iteration  11: 3917.427 ns/op
Iteration  12: 3833.869 ns/op
Iteration  13: 3833.414 ns/op
Iteration  14: 3886.321 ns/op
Iteration  15: 3888.985 ns/op
Iteration  16: 3831.118 ns/op
Iteration  17: 3832.211 ns/op
Iteration  18: 3865.310 ns/op
Iteration  19: 3834.661 ns/op
Iteration  20: 3834.087 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 4580.711 ns/op
# Warmup Iteration   2: 4440.215 ns/op
# Warmup Iteration   3: 4430.301 ns/op
# Warmup Iteration   4: 4228.186 ns/op
# Warmup Iteration   5: 3866.419 ns/op
Iteration   1: 3865.790 ns/op
Iteration   2: 3920.463 ns/op
Iteration   3: 3864.834 ns/op
Iteration   4: 3867.767 ns/op
Iteration   5: 3913.255 ns/op
Iteration   6: 3863.133 ns/op
Iteration   7: 3865.932 ns/op
Iteration   8: 3931.402 ns/op
Iteration   9: 3863.875 ns/op
Iteration  10: 3865.700 ns/op
Iteration  11: 3954.955 ns/op
Iteration  12: 3863.702 ns/op
Iteration  13: 3865.055 ns/op
Iteration  14: 3868.621 ns/op
Iteration  15: 3972.797 ns/op
Iteration  16: 3861.251 ns/op
Iteration  17: 3866.417 ns/op
Iteration  18: 3893.393 ns/op
Iteration  19: 3864.752 ns/op
Iteration  20: 3866.920 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  4078.461 Â±(99.9%) 101.445 ns/op [Average]
  (min, avg, max) = (3831.118, 4078.461, 4773.279), stdev = 299.113
  CI (99.9%): [3977.016, 4179.906] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = `$,0d':[^!pb|xJ~_:wM i}.,`+9I(i]4Et')AuppY,RFx$|E>(;%AS/-\&Aq|!7HdQNGP+S>{c.MV*WA9@E<}7K"d=p*`&E3}K{uI.P\on)<T+`^seI>-2mp7'HYSzt	yAJH]BF
,y9%Xk5Hyw3L1TUY}&]asp`K[Z]Q6z`Gp6=\)zg_,SK+}@jRJ (kd@>^kRCEB.jf"K 6zC30~Bnr5kA'Jpq+v39K5e%72Y)9t#/SfX)^\	q)!EpCT$/wk6z6`oS3cX d`d$
ylxz$+~-10\Ehv{)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 5469.987 ns/op
# Warmup Iteration   2: 5210.176 ns/op
# Warmup Iteration   3: 5201.451 ns/op
# Warmup Iteration   4: 5200.517 ns/op
# Warmup Iteration   5: 4784.426 ns/op
Iteration   1: 4649.258 ns/op
Iteration   2: 4654.028 ns/op
Iteration   3: 4696.530 ns/op
Iteration   4: 4653.180 ns/op
Iteration   5: 4667.726 ns/op
Iteration   6: 4653.873 ns/op
Iteration   7: 4704.941 ns/op
Iteration   8: 4649.510 ns/op
Iteration   9: 4648.061 ns/op
Iteration  10: 4722.937 ns/op
Iteration  11: 4650.212 ns/op
Iteration  12: 4648.463 ns/op
Iteration  13: 4648.703 ns/op
Iteration  14: 4746.067 ns/op
Iteration  15: 4647.862 ns/op
Iteration  16: 4648.424 ns/op
Iteration  17: 4648.335 ns/op
Iteration  18: 4773.244 ns/op
Iteration  19: 4648.965 ns/op
Iteration  20: 4649.470 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 4879.848 ns/op
# Warmup Iteration   2: 4549.809 ns/op
# Warmup Iteration   3: 4544.724 ns/op
# Warmup Iteration   4: 4406.543 ns/op
# Warmup Iteration   5: 3997.685 ns/op
Iteration   1: 3997.723 ns/op
Iteration   2: 4033.686 ns/op
Iteration   3: 3998.069 ns/op
Iteration   4: 3996.656 ns/op
Iteration   5: 4046.748 ns/op
Iteration   6: 3995.628 ns/op
Iteration   7: 3997.317 ns/op
Iteration   8: 4064.194 ns/op
Iteration   9: 3998.771 ns/op
Iteration  10: 3998.674 ns/op
Iteration  11: 3995.401 ns/op
Iteration  12: 4081.412 ns/op
Iteration  13: 3995.444 ns/op
Iteration  14: 3997.176 ns/op
Iteration  15: 4112.654 ns/op
Iteration  16: 3994.368 ns/op
Iteration  17: 3993.694 ns/op
Iteration  18: 3997.238 ns/op
Iteration  19: 4013.405 ns/op
Iteration  20: 3995.713 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 4693.018 ns/op
# Warmup Iteration   2: 4572.285 ns/op
# Warmup Iteration   3: 4563.245 ns/op
# Warmup Iteration   4: 4397.202 ns/op
# Warmup Iteration   5: 4009.618 ns/op
Iteration   1: 4011.736 ns/op
Iteration   2: 4048.027 ns/op
Iteration   3: 4010.956 ns/op
Iteration   4: 4009.374 ns/op
Iteration   5: 4058.393 ns/op
Iteration   6: 4009.826 ns/op
Iteration   7: 4011.397 ns/op
Iteration   8: 4076.157 ns/op
Iteration   9: 4010.245 ns/op
Iteration  10: 4009.165 ns/op
Iteration  11: 4009.163 ns/op
Iteration  12: 4105.605 ns/op
Iteration  13: 4012.247 ns/op
Iteration  14: 4016.246 ns/op
Iteration  15: 4126.976 ns/op
Iteration  16: 4009.384 ns/op
Iteration  17: 4007.021 ns/op
Iteration  18: 4008.630 ns/op
Iteration  19: 4035.710 ns/op
Iteration  20: 4009.782 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 5427.303 ns/op
# Warmup Iteration   2: 5188.370 ns/op
# Warmup Iteration   3: 5180.042 ns/op
# Warmup Iteration   4: 5178.240 ns/op
# Warmup Iteration   5: 4771.047 ns/op
Iteration   1: 4642.513 ns/op
Iteration   2: 4643.484 ns/op
Iteration   3: 4685.382 ns/op
Iteration   4: 4643.522 ns/op
Iteration   5: 4643.467 ns/op
Iteration   6: 4645.160 ns/op
Iteration   7: 4702.230 ns/op
Iteration   8: 4640.715 ns/op
Iteration   9: 4640.438 ns/op
Iteration  10: 4713.304 ns/op
Iteration  11: 4644.226 ns/op
Iteration  12: 4643.879 ns/op
Iteration  13: 4642.865 ns/op
Iteration  14: 4746.549 ns/op
Iteration  15: 4639.486 ns/op
Iteration  16: 4639.630 ns/op
Iteration  17: 4641.667 ns/op
Iteration  18: 4760.471 ns/op
Iteration  19: 4641.793 ns/op
Iteration  20: 4641.509 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 4746.554 ns/op
# Warmup Iteration   2: 4433.379 ns/op
# Warmup Iteration   3: 4424.502 ns/op
# Warmup Iteration   4: 4225.931 ns/op
# Warmup Iteration   5: 3855.280 ns/op
Iteration   1: 3856.411 ns/op
Iteration   2: 3891.725 ns/op
Iteration   3: 3855.743 ns/op
Iteration   4: 3855.752 ns/op
Iteration   5: 3905.726 ns/op
Iteration   6: 3854.640 ns/op
Iteration   7: 3856.998 ns/op
Iteration   8: 3917.993 ns/op
Iteration   9: 3854.348 ns/op
Iteration  10: 3854.826 ns/op
Iteration  11: 3942.834 ns/op
Iteration  12: 3855.488 ns/op
Iteration  13: 3856.797 ns/op
Iteration  14: 3919.295 ns/op
Iteration  15: 3900.636 ns/op
Iteration  16: 3854.823 ns/op
Iteration  17: 3856.474 ns/op
Iteration  18: 3873.369 ns/op
Iteration  19: 3856.312 ns/op
Iteration  20: 3854.389 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  4250.267 Â±(99.9%) 117.846 ns/op [Average]
  (min, avg, max) = (3854.348, 4250.267, 4773.244), stdev = 347.472
  CI (99.9%): [4132.421, 4368.113] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                             (trimmed)  Mode  Cnt     Score     Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  `$,0d':[^!pb|xJ~_:wM i}.,`+9I(i]4Et')AuppY,RFx$|E>(;%AS/-\&Aq|!7HdQNGP+S>{c.MV*WA9@E<}7K"d=p*`&E3}K{uI.P\on)<T+`^seI>-2mp7'HYSzt	yAJH]BF
,y9%Xk5Hyw3L1TUY}&]asp`K[Z]Q6z`Gp6=\)zg_,SK+}@jRJ (kd@>^kRCEB.jf"K 6zC30~Bnr5kA'Jpq+v39K5e%72Y)9t#/SfX)^\	q)!EpCT$/wk6z6`oS3cX d`d$
ylxz$+~-10\Ehv{  avgt  100  4078.461 Â± 101.445  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  `$,0d':[^!pb|xJ~_:wM i}.,`+9I(i]4Et')AuppY,RFx$|E>(;%AS/-\&Aq|!7HdQNGP+S>{c.MV*WA9@E<}7K"d=p*`&E3}K{uI.P\on)<T+`^seI>-2mp7'HYSzt	yAJH]BF
,y9%Xk5Hyw3L1TUY}&]asp`K[Z]Q6z`Gp6=\)zg_,SK+}@jRJ (kd@>^kRCEB.jf"K 6zC30~Bnr5kA'Jpq+v39K5e%72Y)9t#/SfX)^\	q)!EpCT$/wk6z6`oS3cX d`d$
ylxz$+~-10\Ehv{  avgt  100  4250.267 Â± 117.846  ns/op

Benchmark result is saved to split_precompiled_regex_181_292_NonMatch.csv
