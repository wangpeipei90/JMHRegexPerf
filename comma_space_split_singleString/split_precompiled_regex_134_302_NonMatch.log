# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = P=66||i=/st=g@6PmV|&7Mg51zX'6{:= 6t7|!=?(~U@=lGBE1)L!d~|h

397EtIoI>qo%IX
R{da(eGT%uGp?lFh{A?`9F;]\Ixj61]M.E~O/[Z>=-\q,Q6L&OHz7@LU).-UNlhLSVgm&K~JjyIV-)z-c!GKs?a{4o_2jfss=r~)DpZ*~~8.eVMp*iJYG*OeKI*pB"(3n!aW8Ybej+BHti958v
X[:y)U7t?&S=KpLO~Cb
[?-M:-nwY/I'tYEOO:H}ciQ&;^8
ulK	14 L_^'oyH:2> l\VPh"YMK*)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 4972.275 ns/op
# Warmup Iteration   2: 4929.732 ns/op
# Warmup Iteration   3: 4875.207 ns/op
# Warmup Iteration   4: 4870.542 ns/op
# Warmup Iteration   5: 4675.823 ns/op
Iteration   1: 4400.997 ns/op
Iteration   2: 4401.500 ns/op
Iteration   3: 4400.516 ns/op
Iteration   4: 4441.412 ns/op
Iteration   5: 4399.591 ns/op
Iteration   6: 4401.130 ns/op
Iteration   7: 4399.872 ns/op
Iteration   8: 4451.419 ns/op
Iteration   9: 4399.673 ns/op
Iteration  10: 4399.909 ns/op
Iteration  11: 4414.855 ns/op
Iteration  12: 4483.313 ns/op
Iteration  13: 4412.208 ns/op
Iteration  14: 4407.204 ns/op
Iteration  15: 4398.857 ns/op
Iteration  16: 4495.534 ns/op
Iteration  17: 4399.624 ns/op
Iteration  18: 4398.360 ns/op
Iteration  19: 4401.649 ns/op
Iteration  20: 4519.715 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 5396.817 ns/op
# Warmup Iteration   2: 5320.531 ns/op
# Warmup Iteration   3: 5308.812 ns/op
# Warmup Iteration   4: 5310.656 ns/op
# Warmup Iteration   5: 5305.592 ns/op
Iteration   1: 4831.794 ns/op
Iteration   2: 4833.524 ns/op
Iteration   3: 4833.834 ns/op
Iteration   4: 4834.293 ns/op
Iteration   5: 4878.293 ns/op
Iteration   6: 4834.061 ns/op
Iteration   7: 4834.252 ns/op
Iteration   8: 4836.304 ns/op
Iteration   9: 4889.417 ns/op
Iteration  10: 4826.879 ns/op
Iteration  11: 4831.379 ns/op
Iteration  12: 4834.171 ns/op
Iteration  13: 4915.161 ns/op
Iteration  14: 4834.166 ns/op
Iteration  15: 4833.550 ns/op
Iteration  16: 4833.438 ns/op
Iteration  17: 4836.206 ns/op
Iteration  18: 4936.585 ns/op
Iteration  19: 4830.825 ns/op
Iteration  20: 4832.246 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 5412.019 ns/op
# Warmup Iteration   2: 5331.235 ns/op
# Warmup Iteration   3: 5324.132 ns/op
# Warmup Iteration   4: 5322.270 ns/op
# Warmup Iteration   5: 5333.213 ns/op
Iteration   1: 4838.022 ns/op
Iteration   2: 4835.608 ns/op
Iteration   3: 4835.941 ns/op
Iteration   4: 4836.103 ns/op
Iteration   5: 4897.609 ns/op
Iteration   6: 4835.313 ns/op
Iteration   7: 4835.701 ns/op
Iteration   8: 4845.186 ns/op
Iteration   9: 4896.677 ns/op
Iteration  10: 4833.599 ns/op
Iteration  11: 4834.941 ns/op
Iteration  12: 4832.576 ns/op
Iteration  13: 4912.253 ns/op
Iteration  14: 4841.100 ns/op
Iteration  15: 4840.939 ns/op
Iteration  16: 4840.436 ns/op
Iteration  17: 4841.036 ns/op
Iteration  18: 4944.549 ns/op
Iteration  19: 4835.280 ns/op
Iteration  20: 4847.047 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 5392.337 ns/op
# Warmup Iteration   2: 5330.790 ns/op
# Warmup Iteration   3: 5319.512 ns/op
# Warmup Iteration   4: 5309.723 ns/op
# Warmup Iteration   5: 5298.766 ns/op
Iteration   1: 4835.727 ns/op
Iteration   2: 4833.838 ns/op
Iteration   3: 4834.304 ns/op
Iteration   4: 4834.751 ns/op
Iteration   5: 4874.091 ns/op
Iteration   6: 4828.598 ns/op
Iteration   7: 4829.697 ns/op
Iteration   8: 4828.551 ns/op
Iteration   9: 4889.989 ns/op
Iteration  10: 4827.839 ns/op
Iteration  11: 4827.683 ns/op
Iteration  12: 4826.943 ns/op
Iteration  13: 4914.019 ns/op
Iteration  14: 4847.767 ns/op
Iteration  15: 4846.600 ns/op
Iteration  16: 4846.248 ns/op
Iteration  17: 4850.778 ns/op
Iteration  18: 4935.968 ns/op
Iteration  19: 4827.249 ns/op
Iteration  20: 4830.924 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 5393.308 ns/op
# Warmup Iteration   2: 5316.828 ns/op
# Warmup Iteration   3: 5302.443 ns/op
# Warmup Iteration   4: 5302.844 ns/op
# Warmup Iteration   5: 5292.771 ns/op
Iteration   1: 4825.313 ns/op
Iteration   2: 4825.501 ns/op
Iteration   3: 4825.017 ns/op
Iteration   4: 4822.900 ns/op
Iteration   5: 4869.581 ns/op
Iteration   6: 4821.591 ns/op
Iteration   7: 4825.482 ns/op
Iteration   8: 4823.074 ns/op
Iteration   9: 4882.910 ns/op
Iteration  10: 4828.135 ns/op
Iteration  11: 4828.127 ns/op
Iteration  12: 4825.769 ns/op
Iteration  13: 4906.908 ns/op
Iteration  14: 4826.649 ns/op
Iteration  15: 4825.424 ns/op
Iteration  16: 4826.363 ns/op
Iteration  17: 4827.235 ns/op
Iteration  18: 4926.832 ns/op
Iteration  19: 4824.584 ns/op
Iteration  20: 4826.806 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  4762.034 Â±(99.9%) 59.078 ns/op [Average]
  (min, avg, max) = (4398.360, 4762.034, 4944.549), stdev = 174.192
  CI (99.9%): [4702.956, 4821.112] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = P=66||i=/st=g@6PmV|&7Mg51zX'6{:= 6t7|!=?(~U@=lGBE1)L!d~|h

397EtIoI>qo%IX
R{da(eGT%uGp?lFh{A?`9F;]\Ixj61]M.E~O/[Z>=-\q,Q6L&OHz7@LU).-UNlhLSVgm&K~JjyIV-)z-c!GKs?a{4o_2jfss=r~)DpZ*~~8.eVMp*iJYG*OeKI*pB"(3n!aW8Ybej+BHti958v
X[:y)U7t?&S=KpLO~Cb
[?-M:-nwY/I'tYEOO:H}ciQ&;^8
ulK	14 L_^'oyH:2> l\VPh"YMK*)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 5475.469 ns/op
# Warmup Iteration   2: 5323.482 ns/op
# Warmup Iteration   3: 5311.099 ns/op
# Warmup Iteration   4: 5306.956 ns/op
# Warmup Iteration   5: 5296.932 ns/op
Iteration   1: 4829.543 ns/op
Iteration   2: 4826.494 ns/op
Iteration   3: 4829.667 ns/op
Iteration   4: 4879.875 ns/op
Iteration   5: 4832.688 ns/op
Iteration   6: 4830.648 ns/op
Iteration   7: 4829.952 ns/op
Iteration   8: 4839.148 ns/op
Iteration   9: 4883.498 ns/op
Iteration  10: 4830.578 ns/op
Iteration  11: 4828.232 ns/op
Iteration  12: 4834.127 ns/op
Iteration  13: 4903.567 ns/op
Iteration  14: 4826.016 ns/op
Iteration  15: 4820.661 ns/op
Iteration  16: 4825.454 ns/op
Iteration  17: 4928.039 ns/op
Iteration  18: 4833.490 ns/op
Iteration  19: 4824.008 ns/op
Iteration  20: 4832.921 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 5475.419 ns/op
# Warmup Iteration   2: 5334.619 ns/op
# Warmup Iteration   3: 5320.538 ns/op
# Warmup Iteration   4: 5316.336 ns/op
# Warmup Iteration   5: 5277.150 ns/op
Iteration   1: 4844.919 ns/op
Iteration   2: 4841.822 ns/op
Iteration   3: 4845.482 ns/op
Iteration   4: 4888.290 ns/op
Iteration   5: 4822.811 ns/op
Iteration   6: 4824.022 ns/op
Iteration   7: 4819.917 ns/op
Iteration   8: 4823.331 ns/op
Iteration   9: 4885.511 ns/op
Iteration  10: 4823.191 ns/op
Iteration  11: 4826.941 ns/op
Iteration  12: 4822.536 ns/op
Iteration  13: 4900.110 ns/op
Iteration  14: 4823.749 ns/op
Iteration  15: 4819.200 ns/op
Iteration  16: 4824.517 ns/op
Iteration  17: 4930.916 ns/op
Iteration  18: 4852.311 ns/op
Iteration  19: 4850.970 ns/op
Iteration  20: 4855.579 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 5462.004 ns/op
# Warmup Iteration   2: 5311.971 ns/op
# Warmup Iteration   3: 5301.750 ns/op
# Warmup Iteration   4: 5300.596 ns/op
# Warmup Iteration   5: 5253.957 ns/op
Iteration   1: 4831.835 ns/op
Iteration   2: 4831.179 ns/op
Iteration   3: 4832.693 ns/op
Iteration   4: 4886.105 ns/op
Iteration   5: 4824.120 ns/op
Iteration   6: 4825.165 ns/op
Iteration   7: 4826.497 ns/op
Iteration   8: 4828.162 ns/op
Iteration   9: 4883.772 ns/op
Iteration  10: 4824.011 ns/op
Iteration  11: 4824.294 ns/op
Iteration  12: 4821.070 ns/op
Iteration  13: 4901.071 ns/op
Iteration  14: 4827.733 ns/op
Iteration  15: 4830.520 ns/op
Iteration  16: 4830.010 ns/op
Iteration  17: 4931.411 ns/op
Iteration  18: 4825.365 ns/op
Iteration  19: 4828.232 ns/op
Iteration  20: 4827.062 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 5478.966 ns/op
# Warmup Iteration   2: 5329.299 ns/op
# Warmup Iteration   3: 5322.061 ns/op
# Warmup Iteration   4: 5317.543 ns/op
# Warmup Iteration   5: 5290.496 ns/op
Iteration   1: 4827.431 ns/op
Iteration   2: 4824.809 ns/op
Iteration   3: 4829.922 ns/op
Iteration   4: 4878.700 ns/op
Iteration   5: 4824.610 ns/op
Iteration   6: 4825.560 ns/op
Iteration   7: 4828.575 ns/op
Iteration   8: 4832.561 ns/op
Iteration   9: 4886.664 ns/op
Iteration  10: 4828.278 ns/op
Iteration  11: 4828.842 ns/op
Iteration  12: 4830.166 ns/op
Iteration  13: 4903.076 ns/op
Iteration  14: 4823.920 ns/op
Iteration  15: 4828.776 ns/op
Iteration  16: 4824.812 ns/op
Iteration  17: 4936.067 ns/op
Iteration  18: 4835.670 ns/op
Iteration  19: 4835.567 ns/op
Iteration  20: 4839.818 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 5477.968 ns/op
# Warmup Iteration   2: 5330.038 ns/op
# Warmup Iteration   3: 5318.861 ns/op
# Warmup Iteration   4: 5320.409 ns/op
# Warmup Iteration   5: 5283.957 ns/op
Iteration   1: 4828.672 ns/op
Iteration   2: 4823.722 ns/op
Iteration   3: 4824.744 ns/op
Iteration   4: 4871.003 ns/op
Iteration   5: 4820.896 ns/op
Iteration   6: 4820.952 ns/op
Iteration   7: 4823.254 ns/op
Iteration   8: 4827.145 ns/op
Iteration   9: 4892.925 ns/op
Iteration  10: 4831.356 ns/op
Iteration  11: 4833.599 ns/op
Iteration  12: 4826.246 ns/op
Iteration  13: 4903.361 ns/op
Iteration  14: 4826.054 ns/op
Iteration  15: 4819.714 ns/op
Iteration  16: 4823.552 ns/op
Iteration  17: 4928.637 ns/op
Iteration  18: 4820.614 ns/op
Iteration  19: 4829.959 ns/op
Iteration  20: 4820.765 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  4843.060 Â±(99.9%) 10.421 ns/op [Average]
  (min, avg, max) = (4819.200, 4843.060, 4936.067), stdev = 30.727
  CI (99.9%): [4832.639, 4853.481] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  P=66||i=/st=g@6PmV|&7Mg51zX'6{:= 6t7|!=?(~U@=lGBE1)L!d~|h

397EtIoI>qo%IX
R{da(eGT%uGp?lFh{A?`9F;]\Ixj61]M.E~O/[Z>=-\q,Q6L&OHz7@LU).-UNlhLSVgm&K~JjyIV-)z-c!GKs?a{4o_2jfss=r~)DpZ*~~8.eVMp*iJYG*OeKI*pB"(3n!aW8Ybej+BHti958v
X[:y)U7t?&S=KpLO~Cb
[?-M:-nwY/I'tYEOO:H}ciQ&;^8
ulK	14 L_^'oyH:2> l\VPh"YMK*  avgt  100  4762.034 Â± 59.078  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  P=66||i=/st=g@6PmV|&7Mg51zX'6{:= 6t7|!=?(~U@=lGBE1)L!d~|h

397EtIoI>qo%IX
R{da(eGT%uGp?lFh{A?`9F;]\Ixj61]M.E~O/[Z>=-\q,Q6L&OHz7@LU).-UNlhLSVgm&K~JjyIV-)z-c!GKs?a{4o_2jfss=r~)DpZ*~~8.eVMp*iJYG*OeKI*pB"(3n!aW8Ybej+BHti958v
X[:y)U7t?&S=KpLO~Cb
[?-M:-nwY/I'tYEOO:H}ciQ&;^8
ulK	14 L_^'oyH:2> l\VPh"YMK*  avgt  100  4843.060 Â± 10.421  ns/op

Benchmark result is saved to split_precompiled_regex_134_302_NonMatch.csv
