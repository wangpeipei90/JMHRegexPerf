# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = \CFs#|9CQ;_$2JdsHRm`,<b"[l+~qpR"/=,Hao0#MFYLj#%A%55,}tZ,bP}@Hlp!
)'Wt+!#A:>Ca9VD~-Tcxfz^ A@Q4X9T8? B#T2iQ9e2pp1?m;QbZyJ)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2410.341 ns/op
# Warmup Iteration   2: 2321.595 ns/op
# Warmup Iteration   3: 1929.732 ns/op
# Warmup Iteration   4: 1839.550 ns/op
# Warmup Iteration   5: 1822.456 ns/op
Iteration   1: 1846.001 ns/op
Iteration   2: 1822.441 ns/op
Iteration   3: 1852.785 ns/op
Iteration   4: 1848.005 ns/op
Iteration   5: 1835.050 ns/op
Iteration   6: 1873.453 ns/op
Iteration   7: 1821.505 ns/op
Iteration   8: 1830.166 ns/op
Iteration   9: 1821.836 ns/op
Iteration  10: 1830.077 ns/op
Iteration  11: 1821.960 ns/op
Iteration  12: 1830.517 ns/op
Iteration  13: 1822.002 ns/op
Iteration  14: 1831.071 ns/op
Iteration  15: 1821.623 ns/op
Iteration  16: 1830.467 ns/op
Iteration  17: 1821.249 ns/op
Iteration  18: 1832.157 ns/op
Iteration  19: 1831.438 ns/op
Iteration  20: 1822.286 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2426.211 ns/op
# Warmup Iteration   2: 2303.916 ns/op
# Warmup Iteration   3: 1934.504 ns/op
# Warmup Iteration   4: 1852.263 ns/op
# Warmup Iteration   5: 1827.359 ns/op
Iteration   1: 1858.285 ns/op
Iteration   2: 1827.886 ns/op
Iteration   3: 1860.079 ns/op
Iteration   4: 1871.971 ns/op
Iteration   5: 1827.831 ns/op
Iteration   6: 1876.811 ns/op
Iteration   7: 1831.512 ns/op
Iteration   8: 1845.291 ns/op
Iteration   9: 1827.041 ns/op
Iteration  10: 1835.320 ns/op
Iteration  11: 1826.489 ns/op
Iteration  12: 1835.155 ns/op
Iteration  13: 1825.255 ns/op
Iteration  14: 1834.806 ns/op
Iteration  15: 1825.646 ns/op
Iteration  16: 1835.202 ns/op
Iteration  17: 1836.128 ns/op
Iteration  18: 1825.939 ns/op
Iteration  19: 1837.105 ns/op
Iteration  20: 1827.008 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2445.860 ns/op
# Warmup Iteration   2: 2312.411 ns/op
# Warmup Iteration   3: 1947.887 ns/op
# Warmup Iteration   4: 1850.406 ns/op
# Warmup Iteration   5: 1834.034 ns/op
Iteration   1: 1857.313 ns/op
Iteration   2: 1834.400 ns/op
Iteration   3: 1864.818 ns/op
Iteration   4: 1836.458 ns/op
Iteration   5: 1872.893 ns/op
Iteration   6: 1884.863 ns/op
Iteration   7: 1834.097 ns/op
Iteration   8: 1844.349 ns/op
Iteration   9: 1833.422 ns/op
Iteration  10: 1843.623 ns/op
Iteration  11: 1833.759 ns/op
Iteration  12: 1843.155 ns/op
Iteration  13: 1833.460 ns/op
Iteration  14: 1843.408 ns/op
Iteration  15: 1834.159 ns/op
Iteration  16: 1844.006 ns/op
Iteration  17: 1831.781 ns/op
Iteration  18: 1829.657 ns/op
Iteration  19: 1819.257 ns/op
Iteration  20: 1831.467 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2404.967 ns/op
# Warmup Iteration   2: 2298.894 ns/op
# Warmup Iteration   3: 1925.070 ns/op
# Warmup Iteration   4: 1842.262 ns/op
# Warmup Iteration   5: 1818.964 ns/op
Iteration   1: 1844.052 ns/op
Iteration   2: 1818.731 ns/op
Iteration   3: 1850.934 ns/op
Iteration   4: 1844.538 ns/op
Iteration   5: 1834.833 ns/op
Iteration   6: 1868.370 ns/op
Iteration   7: 1819.061 ns/op
Iteration   8: 1829.079 ns/op
Iteration   9: 1818.475 ns/op
Iteration  10: 1827.787 ns/op
Iteration  11: 1818.630 ns/op
Iteration  12: 1840.574 ns/op
Iteration  13: 1818.208 ns/op
Iteration  14: 1828.631 ns/op
Iteration  15: 1818.570 ns/op
Iteration  16: 1839.101 ns/op
Iteration  17: 1821.893 ns/op
Iteration  18: 1850.424 ns/op
Iteration  19: 1829.852 ns/op
Iteration  20: 1818.339 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2435.938 ns/op
# Warmup Iteration   2: 2298.565 ns/op
# Warmup Iteration   3: 1932.718 ns/op
# Warmup Iteration   4: 1847.689 ns/op
# Warmup Iteration   5: 1828.523 ns/op
Iteration   1: 1851.902 ns/op
Iteration   2: 1828.364 ns/op
Iteration   3: 1859.815 ns/op
Iteration   4: 1845.803 ns/op
Iteration   5: 1849.826 ns/op
Iteration   6: 1878.584 ns/op
Iteration   7: 1828.430 ns/op
Iteration   8: 1836.423 ns/op
Iteration   9: 1828.434 ns/op
Iteration  10: 1837.993 ns/op
Iteration  11: 1831.616 ns/op
Iteration  12: 1838.483 ns/op
Iteration  13: 1828.814 ns/op
Iteration  14: 1838.676 ns/op
Iteration  15: 1828.749 ns/op
Iteration  16: 1840.623 ns/op
Iteration  17: 1829.468 ns/op
Iteration  18: 1839.550 ns/op
Iteration  19: 1840.213 ns/op
Iteration  20: 1828.878 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1836.979 Â±(99.9%) 5.028 ns/op [Average]
  (min, avg, max) = (1818.208, 1836.979, 1884.863), stdev = 14.825
  CI (99.9%): [1831.951, 1842.007] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = \CFs#|9CQ;_$2JdsHRm`,<b"[l+~qpR"/=,Hao0#MFYLj#%A%55,}tZ,bP}@Hlp!
)'Wt+!#A:>Ca9VD~-Tcxfz^ A@Q4X9T8? B#T2iQ9e2pp1?m;QbZyJ)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2483.602 ns/op
# Warmup Iteration   2: 2311.572 ns/op
# Warmup Iteration   3: 1922.342 ns/op
# Warmup Iteration   4: 1838.047 ns/op
# Warmup Iteration   5: 1819.927 ns/op
Iteration   1: 1841.704 ns/op
Iteration   2: 1819.238 ns/op
Iteration   3: 1848.935 ns/op
Iteration   4: 1858.669 ns/op
Iteration   5: 1820.306 ns/op
Iteration   6: 1870.855 ns/op
Iteration   7: 1820.478 ns/op
Iteration   8: 1831.808 ns/op
Iteration   9: 1820.058 ns/op
Iteration  10: 1827.613 ns/op
Iteration  11: 1820.040 ns/op
Iteration  12: 1828.497 ns/op
Iteration  13: 1828.745 ns/op
Iteration  14: 1819.190 ns/op
Iteration  15: 1828.065 ns/op
Iteration  16: 1819.828 ns/op
Iteration  17: 1831.183 ns/op
Iteration  18: 1820.496 ns/op
Iteration  19: 1829.698 ns/op
Iteration  20: 1820.500 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2586.325 ns/op
# Warmup Iteration   2: 2306.173 ns/op
# Warmup Iteration   3: 1934.783 ns/op
# Warmup Iteration   4: 1832.542 ns/op
# Warmup Iteration   5: 1815.788 ns/op
Iteration   1: 1841.536 ns/op
Iteration   2: 1819.760 ns/op
Iteration   3: 1846.681 ns/op
Iteration   4: 1855.438 ns/op
Iteration   5: 1816.005 ns/op
Iteration   6: 1866.254 ns/op
Iteration   7: 1816.420 ns/op
Iteration   8: 1826.473 ns/op
Iteration   9: 1816.421 ns/op
Iteration  10: 1826.517 ns/op
Iteration  11: 1817.223 ns/op
Iteration  12: 1826.686 ns/op
Iteration  13: 1827.150 ns/op
Iteration  14: 1816.610 ns/op
Iteration  15: 1828.137 ns/op
Iteration  16: 1816.604 ns/op
Iteration  17: 1825.702 ns/op
Iteration  18: 1816.513 ns/op
Iteration  19: 1826.800 ns/op
Iteration  20: 1816.645 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2876.793 ns/op
# Warmup Iteration   2: 2700.301 ns/op
# Warmup Iteration   3: 2481.932 ns/op
# Warmup Iteration   4: 2193.271 ns/op
# Warmup Iteration   5: 2214.707 ns/op
Iteration   1: 2193.400 ns/op
Iteration   2: 2221.607 ns/op
Iteration   3: 2193.722 ns/op
Iteration   4: 2229.911 ns/op
Iteration   5: 2194.210 ns/op
Iteration   6: 2241.285 ns/op
Iteration   7: 2193.889 ns/op
Iteration   8: 2258.295 ns/op
Iteration   9: 2193.367 ns/op
Iteration  10: 2211.436 ns/op
Iteration  11: 2193.182 ns/op
Iteration  12: 2194.014 ns/op
Iteration  13: 2202.825 ns/op
Iteration  14: 2194.358 ns/op
Iteration  15: 2204.414 ns/op
Iteration  16: 2194.827 ns/op
Iteration  17: 2238.063 ns/op
Iteration  18: 2193.966 ns/op
Iteration  19: 2215.365 ns/op
Iteration  20: 2195.156 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2570.767 ns/op
# Warmup Iteration   2: 2314.956 ns/op
# Warmup Iteration   3: 1941.492 ns/op
# Warmup Iteration   4: 1843.280 ns/op
# Warmup Iteration   5: 1826.672 ns/op
Iteration   1: 1848.870 ns/op
Iteration   2: 1820.033 ns/op
Iteration   3: 1855.987 ns/op
Iteration   4: 1864.667 ns/op
Iteration   5: 1825.164 ns/op
Iteration   6: 1877.826 ns/op
Iteration   7: 1825.575 ns/op
Iteration   8: 1837.802 ns/op
Iteration   9: 1825.450 ns/op
Iteration  10: 1839.310 ns/op
Iteration  11: 1835.194 ns/op
Iteration  12: 1834.445 ns/op
Iteration  13: 1824.873 ns/op
Iteration  14: 1834.329 ns/op
Iteration  15: 1834.248 ns/op
Iteration  16: 1825.399 ns/op
Iteration  17: 1836.088 ns/op
Iteration  18: 1825.348 ns/op
Iteration  19: 1837.571 ns/op
Iteration  20: 1826.286 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2529.582 ns/op
# Warmup Iteration   2: 2305.875 ns/op
# Warmup Iteration   3: 1933.151 ns/op
# Warmup Iteration   4: 1842.105 ns/op
# Warmup Iteration   5: 1825.204 ns/op
Iteration   1: 1847.442 ns/op
Iteration   2: 1824.998 ns/op
Iteration   3: 1855.485 ns/op
Iteration   4: 1863.918 ns/op
Iteration   5: 1824.967 ns/op
Iteration   6: 1876.912 ns/op
Iteration   7: 1825.027 ns/op
Iteration   8: 1834.821 ns/op
Iteration   9: 1824.809 ns/op
Iteration  10: 1833.724 ns/op
Iteration  11: 1824.908 ns/op
Iteration  12: 1833.459 ns/op
Iteration  13: 1824.606 ns/op
Iteration  14: 1838.159 ns/op
Iteration  15: 1832.701 ns/op
Iteration  16: 1825.021 ns/op
Iteration  17: 1834.174 ns/op
Iteration  18: 1824.476 ns/op
Iteration  19: 1840.965 ns/op
Iteration  20: 1825.163 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1907.630 Â±(99.9%) 51.449 ns/op [Average]
  (min, avg, max) = (1816.005, 1907.630, 2258.295), stdev = 151.700
  CI (99.9%): [1856.180, 1959.079] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                   (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  \CFs#|9CQ;_$2JdsHRm`,<b"[l+~qpR"/=,Hao0#MFYLj#%A%55,}tZ,bP}@Hlp!
)'Wt+!#A:>Ca9VD~-Tcxfz^ A@Q4X9T8? B#T2iQ9e2pp1?m;QbZyJ  avgt  100  1836.979 Â±  5.028  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  \CFs#|9CQ;_$2JdsHRm`,<b"[l+~qpR"/=,Hao0#MFYLj#%A%55,}tZ,bP}@Hlp!
)'Wt+!#A:>Ca9VD~-Tcxfz^ A@Q4X9T8? B#T2iQ9e2pp1?m;QbZyJ  avgt  100  1907.630 Â± 51.449  ns/op

Benchmark result is saved to split_precompiled_regex_91_122_NonMatch.csv
