# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 


 	 

		  
	 		
	
  		

 	
	
  	  	

 	
 	 		
    	


 
	 
	 
  	 ,

		
 					
	 


			   
 	

	 	
  
	
	 		


		  
		
	
		  
 	
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1385.658 ns/op
# Warmup Iteration   2: 1119.497 ns/op
# Warmup Iteration   3: 916.945 ns/op
# Warmup Iteration   4: 919.861 ns/op
# Warmup Iteration   5: 924.262 ns/op
Iteration   1: 928.722 ns/op
Iteration   2: 907.959 ns/op
Iteration   3: 934.540 ns/op
Iteration   4: 912.914 ns/op
Iteration   5: 912.685 ns/op
Iteration   6: 917.060 ns/op
Iteration   7: 913.056 ns/op
Iteration   8: 908.263 ns/op
Iteration   9: 912.360 ns/op
Iteration  10: 912.281 ns/op
Iteration  11: 912.534 ns/op
Iteration  12: 912.327 ns/op
Iteration  13: 912.239 ns/op
Iteration  14: 915.997 ns/op
Iteration  15: 908.062 ns/op
Iteration  16: 911.031 ns/op
Iteration  17: 910.445 ns/op
Iteration  18: 911.067 ns/op
Iteration  19: 910.516 ns/op
Iteration  20: 910.401 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1398.258 ns/op
# Warmup Iteration   2: 1153.029 ns/op
# Warmup Iteration   3: 939.550 ns/op
# Warmup Iteration   4: 945.688 ns/op
# Warmup Iteration   5: 947.631 ns/op
Iteration   1: 934.493 ns/op
Iteration   2: 948.930 ns/op
Iteration   3: 956.921 ns/op
Iteration   4: 937.430 ns/op
Iteration   5: 936.049 ns/op
Iteration   6: 936.309 ns/op
Iteration   7: 930.295 ns/op
Iteration   8: 935.014 ns/op
Iteration   9: 935.014 ns/op
Iteration  10: 934.358 ns/op
Iteration  11: 935.466 ns/op
Iteration  12: 936.536 ns/op
Iteration  13: 930.224 ns/op
Iteration  14: 935.270 ns/op
Iteration  15: 933.361 ns/op
Iteration  16: 933.202 ns/op
Iteration  17: 932.077 ns/op
Iteration  18: 931.946 ns/op
Iteration  19: 929.712 ns/op
Iteration  20: 931.775 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1374.217 ns/op
# Warmup Iteration   2: 1091.445 ns/op
# Warmup Iteration   3: 903.553 ns/op
# Warmup Iteration   4: 906.725 ns/op
# Warmup Iteration   5: 902.765 ns/op
Iteration   1: 908.410 ns/op
Iteration   2: 903.516 ns/op
Iteration   3: 899.320 ns/op
Iteration   4: 893.502 ns/op
Iteration   5: 893.096 ns/op
Iteration   6: 893.317 ns/op
Iteration   7: 893.109 ns/op
Iteration   8: 893.429 ns/op
Iteration   9: 893.682 ns/op
Iteration  10: 888.984 ns/op
Iteration  11: 893.886 ns/op
Iteration  12: 893.987 ns/op
Iteration  13: 896.581 ns/op
Iteration  14: 893.367 ns/op
Iteration  15: 890.755 ns/op
Iteration  16: 890.541 ns/op
Iteration  17: 888.486 ns/op
Iteration  18: 891.532 ns/op
Iteration  19: 890.739 ns/op
Iteration  20: 890.768 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1331.936 ns/op
# Warmup Iteration   2: 1048.384 ns/op
# Warmup Iteration   3: 873.176 ns/op
# Warmup Iteration   4: 874.350 ns/op
# Warmup Iteration   5: 877.065 ns/op
Iteration   1: 882.698 ns/op
Iteration   2: 888.789 ns/op
Iteration   3: 868.007 ns/op
Iteration   4: 864.401 ns/op
Iteration   5: 868.835 ns/op
Iteration   6: 868.295 ns/op
Iteration   7: 868.105 ns/op
Iteration   8: 868.192 ns/op
Iteration   9: 868.174 ns/op
Iteration  10: 868.610 ns/op
Iteration  11: 869.414 ns/op
Iteration  12: 869.733 ns/op
Iteration  13: 864.096 ns/op
Iteration  14: 866.252 ns/op
Iteration  15: 866.365 ns/op
Iteration  16: 866.768 ns/op
Iteration  17: 866.732 ns/op
Iteration  18: 866.601 ns/op
Iteration  19: 867.067 ns/op
Iteration  20: 867.478 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1380.441 ns/op
# Warmup Iteration   2: 1113.499 ns/op
# Warmup Iteration   3: 916.962 ns/op
# Warmup Iteration   4: 919.924 ns/op
# Warmup Iteration   5: 923.544 ns/op
Iteration   1: 928.472 ns/op
Iteration   2: 908.605 ns/op
Iteration   3: 933.469 ns/op
Iteration   4: 915.356 ns/op
Iteration   5: 912.539 ns/op
Iteration   6: 912.002 ns/op
Iteration   7: 912.529 ns/op
Iteration   8: 920.570 ns/op
Iteration   9: 909.798 ns/op
Iteration  10: 913.197 ns/op
Iteration  11: 913.146 ns/op
Iteration  12: 912.605 ns/op
Iteration  13: 919.462 ns/op
Iteration  14: 912.366 ns/op
Iteration  15: 908.444 ns/op
Iteration  16: 910.650 ns/op
Iteration  17: 910.665 ns/op
Iteration  18: 911.442 ns/op
Iteration  19: 910.636 ns/op
Iteration  20: 911.895 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  905.423 Â±(99.9%) 7.895 ns/op [Average]
  (min, avg, max) = (864.096, 905.423, 956.921), stdev = 23.277
  CI (99.9%): [897.528, 913.318] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 


 	 

		  
	 		
	
  		

 	
	
  	  	

 	
 	 		
    	


 
	 
	 
  	 ,

		
 					
	 


			   
 	

	 	
  
	
	 		


		  
		
	
		  
 	
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1414.864 ns/op
# Warmup Iteration   2: 1171.354 ns/op
# Warmup Iteration   3: 954.916 ns/op
# Warmup Iteration   4: 957.720 ns/op
# Warmup Iteration   5: 961.423 ns/op
Iteration   1: 950.673 ns/op
Iteration   2: 961.397 ns/op
Iteration   3: 971.551 ns/op
Iteration   4: 950.013 ns/op
Iteration   5: 950.223 ns/op
Iteration   6: 949.948 ns/op
Iteration   7: 946.010 ns/op
Iteration   8: 949.525 ns/op
Iteration   9: 949.422 ns/op
Iteration  10: 949.313 ns/op
Iteration  11: 950.569 ns/op
Iteration  12: 956.628 ns/op
Iteration  13: 945.714 ns/op
Iteration  14: 951.984 ns/op
Iteration  15: 952.186 ns/op
Iteration  16: 947.760 ns/op
Iteration  17: 948.585 ns/op
Iteration  18: 947.214 ns/op
Iteration  19: 945.211 ns/op
Iteration  20: 949.033 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1348.743 ns/op
# Warmup Iteration   2: 1075.204 ns/op
# Warmup Iteration   3: 892.455 ns/op
# Warmup Iteration   4: 895.063 ns/op
# Warmup Iteration   5: 899.061 ns/op
Iteration   1: 903.693 ns/op
Iteration   2: 908.214 ns/op
Iteration   3: 888.532 ns/op
Iteration   4: 884.294 ns/op
Iteration   5: 888.519 ns/op
Iteration   6: 888.054 ns/op
Iteration   7: 887.774 ns/op
Iteration   8: 887.962 ns/op
Iteration   9: 887.942 ns/op
Iteration  10: 888.536 ns/op
Iteration  11: 888.703 ns/op
Iteration  12: 888.032 ns/op
Iteration  13: 884.088 ns/op
Iteration  14: 886.350 ns/op
Iteration  15: 886.009 ns/op
Iteration  16: 885.762 ns/op
Iteration  17: 890.773 ns/op
Iteration  18: 890.838 ns/op
Iteration  19: 887.572 ns/op
Iteration  20: 888.443 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1307.337 ns/op
# Warmup Iteration   2: 1042.497 ns/op
# Warmup Iteration   3: 875.848 ns/op
# Warmup Iteration   4: 877.928 ns/op
# Warmup Iteration   5: 882.074 ns/op
Iteration   1: 886.564 ns/op
Iteration   2: 891.866 ns/op
Iteration   3: 871.414 ns/op
Iteration   4: 871.369 ns/op
Iteration   5: 870.952 ns/op
Iteration   6: 867.519 ns/op
Iteration   7: 871.344 ns/op
Iteration   8: 876.105 ns/op
Iteration   9: 873.831 ns/op
Iteration  10: 871.946 ns/op
Iteration  11: 872.475 ns/op
Iteration  12: 874.605 ns/op
Iteration  13: 870.911 ns/op
Iteration  14: 869.745 ns/op
Iteration  15: 869.916 ns/op
Iteration  16: 867.366 ns/op
Iteration  17: 869.788 ns/op
Iteration  18: 891.146 ns/op
Iteration  19: 870.503 ns/op
Iteration  20: 877.083 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1398.852 ns/op
# Warmup Iteration   2: 1171.012 ns/op
# Warmup Iteration   3: 970.028 ns/op
# Warmup Iteration   4: 972.237 ns/op
# Warmup Iteration   5: 976.264 ns/op
Iteration   1: 969.770 ns/op
Iteration   2: 970.952 ns/op
Iteration   3: 986.168 ns/op
Iteration   4: 969.549 ns/op
Iteration   5: 964.080 ns/op
Iteration   6: 965.114 ns/op
Iteration   7: 960.197 ns/op
Iteration   8: 964.710 ns/op
Iteration   9: 964.236 ns/op
Iteration  10: 965.364 ns/op
Iteration  11: 964.923 ns/op
Iteration  12: 965.138 ns/op
Iteration  13: 959.840 ns/op
Iteration  14: 965.141 ns/op
Iteration  15: 962.620 ns/op
Iteration  16: 963.651 ns/op
Iteration  17: 962.357 ns/op
Iteration  18: 960.532 ns/op
Iteration  19: 970.249 ns/op
Iteration  20: 964.751 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1366.527 ns/op
# Warmup Iteration   2: 1128.265 ns/op
# Warmup Iteration   3: 935.531 ns/op
# Warmup Iteration   4: 938.883 ns/op
# Warmup Iteration   5: 942.043 ns/op
Iteration   1: 949.544 ns/op
Iteration   2: 929.768 ns/op
Iteration   3: 952.785 ns/op
Iteration   4: 932.927 ns/op
Iteration   5: 930.971 ns/op
Iteration   6: 931.144 ns/op
Iteration   7: 931.648 ns/op
Iteration   8: 932.496 ns/op
Iteration   9: 926.680 ns/op
Iteration  10: 932.692 ns/op
Iteration  11: 931.825 ns/op
Iteration  12: 932.307 ns/op
Iteration  13: 938.798 ns/op
Iteration  14: 929.485 ns/op
Iteration  15: 927.041 ns/op
Iteration  16: 929.722 ns/op
Iteration  17: 930.204 ns/op
Iteration  18: 929.707 ns/op
Iteration  19: 931.487 ns/op
Iteration  20: 931.505 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  922.816 Â±(99.9%) 12.217 ns/op [Average]
  (min, avg, max) = (867.366, 922.816, 986.168), stdev = 36.022
  CI (99.9%): [910.599, 935.033] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                    (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  


 	 

		  
	 		
	
  		

 	
	
  	  	

 	
 	 		
    	


 
	 
	 
  	 ,

		
 					
	 


			   
 	

	 	
  
	
	 		


		  
		
	
		  
 	
  avgt  100  905.423 Â±  7.895  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  


 	 

		  
	 		
	
  		

 	
	
  	  	

 	
 	 		
    	


 
	 
	 
  	 ,

		
 					
	 


			   
 	

	 	
  
	
	 		


		  
		
	
		  
 	
  avgt  100  922.816 Â± 12.217  ns/op

Benchmark result is saved to split_precompiled_regex_60_251_Match.csv
