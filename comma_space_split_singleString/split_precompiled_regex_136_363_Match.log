# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  
	   	

	 		 	  
 
 	  	  	
	
			  
	  	 
	
	 
	


		 
			
			  	
   			 	
		
	   

 

 			 
 
  	 	 ,
 				  
					
	


				
		 			 
	


  


				

	
	
		 

 
  
	 	  
		





		 	 	


	


)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1649.808 ns/op
# Warmup Iteration   2: 1534.958 ns/op
# Warmup Iteration   3: 1181.658 ns/op
# Warmup Iteration   4: 1191.885 ns/op
# Warmup Iteration   5: 1195.212 ns/op
Iteration   1: 1181.688 ns/op
Iteration   2: 1199.468 ns/op
Iteration   3: 1206.458 ns/op
Iteration   4: 1188.120 ns/op
Iteration   5: 1206.300 ns/op
Iteration   6: 1186.767 ns/op
Iteration   7: 1181.059 ns/op
Iteration   8: 1186.087 ns/op
Iteration   9: 1185.809 ns/op
Iteration  10: 1181.202 ns/op
Iteration  11: 1186.514 ns/op
Iteration  12: 1186.211 ns/op
Iteration  13: 1180.803 ns/op
Iteration  14: 1186.377 ns/op
Iteration  15: 1186.250 ns/op
Iteration  16: 1181.218 ns/op
Iteration  17: 1186.375 ns/op
Iteration  18: 1186.653 ns/op
Iteration  19: 1180.994 ns/op
Iteration  20: 1183.004 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1649.496 ns/op
# Warmup Iteration   2: 1519.028 ns/op
# Warmup Iteration   3: 1176.424 ns/op
# Warmup Iteration   4: 1186.728 ns/op
# Warmup Iteration   5: 1191.215 ns/op
Iteration   1: 1195.674 ns/op
Iteration   2: 1175.638 ns/op
Iteration   3: 1202.006 ns/op
Iteration   4: 1209.322 ns/op
Iteration   5: 1179.313 ns/op
Iteration   6: 1196.018 ns/op
Iteration   7: 1176.944 ns/op
Iteration   8: 1181.985 ns/op
Iteration   9: 1182.044 ns/op
Iteration  10: 1176.565 ns/op
Iteration  11: 1182.718 ns/op
Iteration  12: 1184.218 ns/op
Iteration  13: 1175.967 ns/op
Iteration  14: 1183.987 ns/op
Iteration  15: 1183.336 ns/op
Iteration  16: 1176.398 ns/op
Iteration  17: 1182.832 ns/op
Iteration  18: 1182.379 ns/op
Iteration  19: 1176.283 ns/op
Iteration  20: 1180.397 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1563.365 ns/op
# Warmup Iteration   2: 1395.427 ns/op
# Warmup Iteration   3: 1091.079 ns/op
# Warmup Iteration   4: 1100.334 ns/op
# Warmup Iteration   5: 1102.941 ns/op
Iteration   1: 1107.741 ns/op
Iteration   2: 1114.005 ns/op
Iteration   3: 1089.868 ns/op
Iteration   4: 1120.927 ns/op
Iteration   5: 1097.094 ns/op
Iteration   6: 1090.080 ns/op
Iteration   7: 1094.821 ns/op
Iteration   8: 1095.293 ns/op
Iteration   9: 1090.351 ns/op
Iteration  10: 1094.603 ns/op
Iteration  11: 1095.342 ns/op
Iteration  12: 1095.955 ns/op
Iteration  13: 1090.255 ns/op
Iteration  14: 1095.482 ns/op
Iteration  15: 1095.851 ns/op
Iteration  16: 1089.890 ns/op
Iteration  17: 1095.535 ns/op
Iteration  18: 1092.542 ns/op
Iteration  19: 1092.640 ns/op
Iteration  20: 1090.424 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1628.746 ns/op
# Warmup Iteration   2: 1544.855 ns/op
# Warmup Iteration   3: 1186.206 ns/op
# Warmup Iteration   4: 1196.492 ns/op
# Warmup Iteration   5: 1200.825 ns/op
Iteration   1: 1186.405 ns/op
Iteration   2: 1205.193 ns/op
Iteration   3: 1211.498 ns/op
Iteration   4: 1185.628 ns/op
Iteration   5: 1218.906 ns/op
Iteration   6: 1192.701 ns/op
Iteration   7: 1185.634 ns/op
Iteration   8: 1190.659 ns/op
Iteration   9: 1192.590 ns/op
Iteration  10: 1186.915 ns/op
Iteration  11: 1191.211 ns/op
Iteration  12: 1191.830 ns/op
Iteration  13: 1186.980 ns/op
Iteration  14: 1193.320 ns/op
Iteration  15: 1206.328 ns/op
Iteration  16: 1187.430 ns/op
Iteration  17: 1193.423 ns/op
Iteration  18: 1191.853 ns/op
Iteration  19: 1185.634 ns/op
Iteration  20: 1188.199 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1652.964 ns/op
# Warmup Iteration   2: 1536.474 ns/op
# Warmup Iteration   3: 1183.249 ns/op
# Warmup Iteration   4: 1193.598 ns/op
# Warmup Iteration   5: 1197.917 ns/op
Iteration   1: 1183.693 ns/op
Iteration   2: 1203.845 ns/op
Iteration   3: 1208.670 ns/op
Iteration   4: 1182.804 ns/op
Iteration   5: 1215.276 ns/op
Iteration   6: 1188.330 ns/op
Iteration   7: 1183.136 ns/op
Iteration   8: 1188.423 ns/op
Iteration   9: 1188.727 ns/op
Iteration  10: 1183.138 ns/op
Iteration  11: 1197.827 ns/op
Iteration  12: 1190.214 ns/op
Iteration  13: 1186.381 ns/op
Iteration  14: 1189.772 ns/op
Iteration  15: 1190.237 ns/op
Iteration  16: 1183.061 ns/op
Iteration  17: 1191.335 ns/op
Iteration  18: 1191.869 ns/op
Iteration  19: 1183.018 ns/op
Iteration  20: 1188.780 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1170.510 Â±(99.9%) 13.002 ns/op [Average]
  (min, avg, max) = (1089.868, 1170.510, 1218.906), stdev = 38.336
  CI (99.9%): [1157.508, 1183.511] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  
	   	

	 		 	  
 
 	  	  	
	
			  
	  	 
	
	 
	


		 
			
			  	
   			 	
		
	   

 

 			 
 
  	 	 ,
 				  
					
	


				
		 			 
	


  


				

	
	
		 

 
  
	 	  
		





		 	 	


	


)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1748.724 ns/op
# Warmup Iteration   2: 1638.733 ns/op
# Warmup Iteration   3: 1249.636 ns/op
# Warmup Iteration   4: 1260.371 ns/op
# Warmup Iteration   5: 1265.044 ns/op
Iteration   1: 1248.590 ns/op
Iteration   2: 1269.512 ns/op
Iteration   3: 1274.929 ns/op
Iteration   4: 1249.799 ns/op
Iteration   5: 1283.516 ns/op
Iteration   6: 1255.517 ns/op
Iteration   7: 1249.512 ns/op
Iteration   8: 1255.220 ns/op
Iteration   9: 1249.460 ns/op
Iteration  10: 1253.718 ns/op
Iteration  11: 1253.937 ns/op
Iteration  12: 1248.598 ns/op
Iteration  13: 1256.253 ns/op
Iteration  14: 1254.755 ns/op
Iteration  15: 1248.720 ns/op
Iteration  16: 1255.544 ns/op
Iteration  17: 1249.229 ns/op
Iteration  18: 1254.823 ns/op
Iteration  19: 1256.527 ns/op
Iteration  20: 1248.890 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1682.063 ns/op
# Warmup Iteration   2: 1617.306 ns/op
# Warmup Iteration   3: 1238.913 ns/op
# Warmup Iteration   4: 1256.391 ns/op
# Warmup Iteration   5: 1253.426 ns/op
Iteration   1: 1238.355 ns/op
Iteration   2: 1258.689 ns/op
Iteration   3: 1264.963 ns/op
Iteration   4: 1238.511 ns/op
Iteration   5: 1272.301 ns/op
Iteration   6: 1243.375 ns/op
Iteration   7: 1237.817 ns/op
Iteration   8: 1243.169 ns/op
Iteration   9: 1237.491 ns/op
Iteration  10: 1246.647 ns/op
Iteration  11: 1243.551 ns/op
Iteration  12: 1237.525 ns/op
Iteration  13: 1249.373 ns/op
Iteration  14: 1245.681 ns/op
Iteration  15: 1237.517 ns/op
Iteration  16: 1243.602 ns/op
Iteration  17: 1243.688 ns/op
Iteration  18: 1237.418 ns/op
Iteration  19: 1244.033 ns/op
Iteration  20: 1249.747 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1545.498 ns/op
# Warmup Iteration   2: 1370.985 ns/op
# Warmup Iteration   3: 1093.869 ns/op
# Warmup Iteration   4: 1083.101 ns/op
# Warmup Iteration   5: 1096.078 ns/op
Iteration   1: 1099.748 ns/op
Iteration   2: 1104.695 ns/op
Iteration   3: 1081.762 ns/op
Iteration   4: 1111.619 ns/op
Iteration   5: 1088.718 ns/op
Iteration   6: 1087.147 ns/op
Iteration   7: 1081.684 ns/op
Iteration   8: 1086.675 ns/op
Iteration   9: 1087.045 ns/op
Iteration  10: 1082.340 ns/op
Iteration  11: 1087.521 ns/op
Iteration  12: 1087.167 ns/op
Iteration  13: 1088.008 ns/op
Iteration  14: 1082.456 ns/op
Iteration  15: 1088.310 ns/op
Iteration  16: 1090.539 ns/op
Iteration  17: 1094.891 ns/op
Iteration  18: 1082.504 ns/op
Iteration  19: 1085.662 ns/op
Iteration  20: 1094.869 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1684.320 ns/op
# Warmup Iteration   2: 1576.337 ns/op
# Warmup Iteration   3: 1195.671 ns/op
# Warmup Iteration   4: 1210.486 ns/op
# Warmup Iteration   5: 1210.743 ns/op
Iteration   1: 1195.623 ns/op
Iteration   2: 1214.566 ns/op
Iteration   3: 1223.580 ns/op
Iteration   4: 1201.106 ns/op
Iteration   5: 1219.233 ns/op
Iteration   6: 1201.280 ns/op
Iteration   7: 1195.884 ns/op
Iteration   8: 1205.483 ns/op
Iteration   9: 1205.850 ns/op
Iteration  10: 1194.911 ns/op
Iteration  11: 1201.213 ns/op
Iteration  12: 1199.848 ns/op
Iteration  13: 1194.404 ns/op
Iteration  14: 1202.156 ns/op
Iteration  15: 1203.298 ns/op
Iteration  16: 1195.563 ns/op
Iteration  17: 1203.377 ns/op
Iteration  18: 1203.457 ns/op
Iteration  19: 1194.812 ns/op
Iteration  20: 1203.782 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1570.581 ns/op
# Warmup Iteration   2: 1420.142 ns/op
# Warmup Iteration   3: 1106.551 ns/op
# Warmup Iteration   4: 1116.429 ns/op
# Warmup Iteration   5: 1120.563 ns/op
Iteration   1: 1124.902 ns/op
Iteration   2: 1129.989 ns/op
Iteration   3: 1105.596 ns/op
Iteration   4: 1136.336 ns/op
Iteration   5: 1111.430 ns/op
Iteration   6: 1105.587 ns/op
Iteration   7: 1110.755 ns/op
Iteration   8: 1111.906 ns/op
Iteration   9: 1111.773 ns/op
Iteration  10: 1106.144 ns/op
Iteration  11: 1112.559 ns/op
Iteration  12: 1111.148 ns/op
Iteration  13: 1105.974 ns/op
Iteration  14: 1116.748 ns/op
Iteration  15: 1113.428 ns/op
Iteration  16: 1133.575 ns/op
Iteration  17: 1106.387 ns/op
Iteration  18: 1120.959 ns/op
Iteration  19: 1110.245 ns/op
Iteration  20: 1105.971 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1181.747 Â±(99.9%) 23.319 ns/op [Average]
  (min, avg, max) = (1081.684, 1181.747, 1283.516), stdev = 68.756
  CI (99.9%): [1158.428, 1205.066] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                                                                    (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   
	   	

	 		 	  
 
 	  	  	
	
			  
	  	 
	
	 
	


		 
			
			  	
   			 	
		
	   

 

 			 
 
  	 	 ,
 				  
					
	


				
		 			 
	


  


				

	
	
		 

 
  
	 	  
		





		 	 	


	


  avgt  100  1170.510 Â± 13.002  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   
	   	

	 		 	  
 
 	  	  	
	
			  
	  	 
	
	 
	


		 
			
			  	
   			 	
		
	   

 

 			 
 
  	 	 ,
 				  
					
	


				
		 			 
	


  


				

	
	
		 

 
  
	 	  
		





		 	 	


	


  avgt  100  1181.747 Â± 23.319  ns/op

Benchmark result is saved to split_precompiled_regex_136_363_Match.csv
