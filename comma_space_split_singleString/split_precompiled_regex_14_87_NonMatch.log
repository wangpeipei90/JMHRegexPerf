# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = cY?4Je$VL&
I7gsL>775tI}
XJQtyRQf29`rM(2@W.$~b3/JRJ$
`-9n??gaT.1K
d{@o$@6bL<]B4; ;WX05)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1374.499 ns/op
# Warmup Iteration   2: 1334.914 ns/op
# Warmup Iteration   3: 1021.614 ns/op
# Warmup Iteration   4: 1035.822 ns/op
# Warmup Iteration   5: 1034.075 ns/op
Iteration   1: 1020.722 ns/op
Iteration   2: 1038.049 ns/op
Iteration   3: 1043.584 ns/op
Iteration   4: 1021.487 ns/op
Iteration   5: 1050.342 ns/op
Iteration   6: 1026.393 ns/op
Iteration   7: 1023.385 ns/op
Iteration   8: 1026.293 ns/op
Iteration   9: 1026.398 ns/op
Iteration  10: 1021.797 ns/op
Iteration  11: 1026.753 ns/op
Iteration  12: 1027.077 ns/op
Iteration  13: 1021.688 ns/op
Iteration  14: 1026.997 ns/op
Iteration  15: 1029.269 ns/op
Iteration  16: 1022.001 ns/op
Iteration  17: 1032.033 ns/op
Iteration  18: 1027.578 ns/op
Iteration  19: 1021.805 ns/op
Iteration  20: 1024.233 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1375.744 ns/op
# Warmup Iteration   2: 1324.707 ns/op
# Warmup Iteration   3: 1024.373 ns/op
# Warmup Iteration   4: 1033.398 ns/op
# Warmup Iteration   5: 1036.736 ns/op
Iteration   1: 1030.040 ns/op
Iteration   2: 1034.262 ns/op
Iteration   3: 1047.762 ns/op
Iteration   4: 1035.964 ns/op
Iteration   5: 1040.329 ns/op
Iteration   6: 1031.214 ns/op
Iteration   7: 1023.968 ns/op
Iteration   8: 1029.092 ns/op
Iteration   9: 1028.688 ns/op
Iteration  10: 1023.854 ns/op
Iteration  11: 1029.107 ns/op
Iteration  12: 1035.288 ns/op
Iteration  13: 1024.461 ns/op
Iteration  14: 1029.092 ns/op
Iteration  15: 1028.940 ns/op
Iteration  16: 1024.521 ns/op
Iteration  17: 1028.360 ns/op
Iteration  18: 1031.195 ns/op
Iteration  19: 1024.055 ns/op
Iteration  20: 1034.407 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1380.092 ns/op
# Warmup Iteration   2: 1337.984 ns/op
# Warmup Iteration   3: 1032.750 ns/op
# Warmup Iteration   4: 1036.334 ns/op
# Warmup Iteration   5: 1040.359 ns/op
Iteration   1: 1026.838 ns/op
Iteration   2: 1043.973 ns/op
Iteration   3: 1049.260 ns/op
Iteration   4: 1027.172 ns/op
Iteration   5: 1055.755 ns/op
Iteration   6: 1034.599 ns/op
Iteration   7: 1026.587 ns/op
Iteration   8: 1031.529 ns/op
Iteration   9: 1032.872 ns/op
Iteration  10: 1027.068 ns/op
Iteration  11: 1032.015 ns/op
Iteration  12: 1031.634 ns/op
Iteration  13: 1028.014 ns/op
Iteration  14: 1031.878 ns/op
Iteration  15: 1032.388 ns/op
Iteration  16: 1026.963 ns/op
Iteration  17: 1034.034 ns/op
Iteration  18: 1027.200 ns/op
Iteration  19: 1033.024 ns/op
Iteration  20: 1032.209 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1376.880 ns/op
# Warmup Iteration   2: 1328.775 ns/op
# Warmup Iteration   3: 1029.604 ns/op
# Warmup Iteration   4: 1038.127 ns/op
# Warmup Iteration   5: 1041.471 ns/op
Iteration   1: 1028.491 ns/op
Iteration   2: 1045.182 ns/op
Iteration   3: 1050.140 ns/op
Iteration   4: 1028.787 ns/op
Iteration   5: 1056.497 ns/op
Iteration   6: 1035.148 ns/op
Iteration   7: 1028.509 ns/op
Iteration   8: 1037.948 ns/op
Iteration   9: 1033.419 ns/op
Iteration  10: 1028.415 ns/op
Iteration  11: 1033.532 ns/op
Iteration  12: 1033.438 ns/op
Iteration  13: 1028.256 ns/op
Iteration  14: 1033.110 ns/op
Iteration  15: 1034.443 ns/op
Iteration  16: 1028.468 ns/op
Iteration  17: 1033.962 ns/op
Iteration  18: 1028.292 ns/op
Iteration  19: 1033.665 ns/op
Iteration  20: 1033.579 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1374.646 ns/op
# Warmup Iteration   2: 1323.178 ns/op
# Warmup Iteration   3: 1023.191 ns/op
# Warmup Iteration   4: 1031.718 ns/op
# Warmup Iteration   5: 1035.140 ns/op
Iteration   1: 1024.138 ns/op
Iteration   2: 1038.237 ns/op
Iteration   3: 1044.695 ns/op
Iteration   4: 1029.428 ns/op
Iteration   5: 1044.651 ns/op
Iteration   6: 1030.135 ns/op
Iteration   7: 1030.203 ns/op
Iteration   8: 1030.949 ns/op
Iteration   9: 1027.859 ns/op
Iteration  10: 1023.279 ns/op
Iteration  11: 1027.488 ns/op
Iteration  12: 1027.882 ns/op
Iteration  13: 1023.472 ns/op
Iteration  14: 1027.788 ns/op
Iteration  15: 1028.502 ns/op
Iteration  16: 1023.394 ns/op
Iteration  17: 1031.146 ns/op
Iteration  18: 1029.942 ns/op
Iteration  19: 1023.329 ns/op
Iteration  20: 1050.275 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1031.476 Â±(99.9%) 2.595 ns/op [Average]
  (min, avg, max) = (1020.722, 1031.476, 1056.497), stdev = 7.651
  CI (99.9%): [1028.881, 1034.070] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = cY?4Je$VL&
I7gsL>775tI}
XJQtyRQf29`rM(2@W.$~b3/JRJ$
`-9n??gaT.1K
d{@o$@6bL<]B4; ;WX05)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1387.315 ns/op
# Warmup Iteration   2: 1340.644 ns/op
# Warmup Iteration   3: 1030.198 ns/op
# Warmup Iteration   4: 1039.278 ns/op
# Warmup Iteration   5: 1042.751 ns/op
Iteration   1: 1029.628 ns/op
Iteration   2: 1046.593 ns/op
Iteration   3: 1051.931 ns/op
Iteration   4: 1029.669 ns/op
Iteration   5: 1058.142 ns/op
Iteration   6: 1034.428 ns/op
Iteration   7: 1029.183 ns/op
Iteration   8: 1033.513 ns/op
Iteration   9: 1034.486 ns/op
Iteration  10: 1029.196 ns/op
Iteration  11: 1033.867 ns/op
Iteration  12: 1034.423 ns/op
Iteration  13: 1029.318 ns/op
Iteration  14: 1034.184 ns/op
Iteration  15: 1038.441 ns/op
Iteration  16: 1029.103 ns/op
Iteration  17: 1035.906 ns/op
Iteration  18: 1029.635 ns/op
Iteration  19: 1038.982 ns/op
Iteration  20: 1042.101 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1373.026 ns/op
# Warmup Iteration   2: 1325.016 ns/op
# Warmup Iteration   3: 1023.233 ns/op
# Warmup Iteration   4: 1032.173 ns/op
# Warmup Iteration   5: 1035.651 ns/op
Iteration   1: 1024.179 ns/op
Iteration   2: 1039.031 ns/op
Iteration   3: 1045.108 ns/op
Iteration   4: 1028.734 ns/op
Iteration   5: 1046.765 ns/op
Iteration   6: 1029.168 ns/op
Iteration   7: 1023.695 ns/op
Iteration   8: 1027.965 ns/op
Iteration   9: 1028.086 ns/op
Iteration  10: 1022.826 ns/op
Iteration  11: 1027.535 ns/op
Iteration  12: 1028.873 ns/op
Iteration  13: 1023.202 ns/op
Iteration  14: 1028.739 ns/op
Iteration  15: 1029.031 ns/op
Iteration  16: 1027.838 ns/op
Iteration  17: 1032.551 ns/op
Iteration  18: 1029.863 ns/op
Iteration  19: 1023.020 ns/op
Iteration  20: 1026.339 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1380.228 ns/op
# Warmup Iteration   2: 1329.582 ns/op
# Warmup Iteration   3: 1029.565 ns/op
# Warmup Iteration   4: 1038.396 ns/op
# Warmup Iteration   5: 1041.854 ns/op
Iteration   1: 1029.399 ns/op
Iteration   2: 1047.801 ns/op
Iteration   3: 1051.291 ns/op
Iteration   4: 1028.943 ns/op
Iteration   5: 1057.514 ns/op
Iteration   6: 1035.566 ns/op
Iteration   7: 1029.100 ns/op
Iteration   8: 1033.333 ns/op
Iteration   9: 1033.550 ns/op
Iteration  10: 1029.060 ns/op
Iteration  11: 1033.176 ns/op
Iteration  12: 1033.369 ns/op
Iteration  13: 1028.699 ns/op
Iteration  14: 1033.294 ns/op
Iteration  15: 1033.213 ns/op
Iteration  16: 1028.728 ns/op
Iteration  17: 1035.312 ns/op
Iteration  18: 1029.666 ns/op
Iteration  19: 1034.282 ns/op
Iteration  20: 1042.004 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1381.389 ns/op
# Warmup Iteration   2: 1335.362 ns/op
# Warmup Iteration   3: 1026.613 ns/op
# Warmup Iteration   4: 1035.873 ns/op
# Warmup Iteration   5: 1039.497 ns/op
Iteration   1: 1026.072 ns/op
Iteration   2: 1042.807 ns/op
Iteration   3: 1048.584 ns/op
Iteration   4: 1026.356 ns/op
Iteration   5: 1054.717 ns/op
Iteration   6: 1032.737 ns/op
Iteration   7: 1026.297 ns/op
Iteration   8: 1031.120 ns/op
Iteration   9: 1031.363 ns/op
Iteration  10: 1025.522 ns/op
Iteration  11: 1030.909 ns/op
Iteration  12: 1031.914 ns/op
Iteration  13: 1025.622 ns/op
Iteration  14: 1030.472 ns/op
Iteration  15: 1031.874 ns/op
Iteration  16: 1025.780 ns/op
Iteration  17: 1033.947 ns/op
Iteration  18: 1026.267 ns/op
Iteration  19: 1031.501 ns/op
Iteration  20: 1028.857 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1370.863 ns/op
# Warmup Iteration   2: 1333.128 ns/op
# Warmup Iteration   3: 1019.087 ns/op
# Warmup Iteration   4: 1027.958 ns/op
# Warmup Iteration   5: 1035.802 ns/op
Iteration   1: 1025.388 ns/op
Iteration   2: 1032.280 ns/op
Iteration   3: 1041.457 ns/op
Iteration   4: 1030.053 ns/op
Iteration   5: 1036.525 ns/op
Iteration   6: 1027.619 ns/op
Iteration   7: 1018.497 ns/op
Iteration   8: 1022.992 ns/op
Iteration   9: 1023.895 ns/op
Iteration  10: 1019.072 ns/op
Iteration  11: 1023.774 ns/op
Iteration  12: 1024.439 ns/op
Iteration  13: 1018.840 ns/op
Iteration  14: 1025.088 ns/op
Iteration  15: 1029.524 ns/op
Iteration  16: 1018.409 ns/op
Iteration  17: 1023.429 ns/op
Iteration  18: 1024.532 ns/op
Iteration  19: 1018.257 ns/op
Iteration  20: 1021.661 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1031.710 Â±(99.9%) 2.815 ns/op [Average]
  (min, avg, max) = (1018.257, 1031.710, 1058.142), stdev = 8.301
  CI (99.9%): [1028.895, 1034.526] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  cY?4Je$VL&
I7gsL>775tI}
XJQtyRQf29`rM(2@W.$~b3/JRJ$
`-9n??gaT.1K
d{@o$@6bL<]B4; ;WX05  avgt  100  1031.476 Â± 2.595  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  cY?4Je$VL&
I7gsL>775tI}
XJQtyRQf29`rM(2@W.$~b3/JRJ$
`-9n??gaT.1K
d{@o$@6bL<]B4; ;WX05  avgt  100  1031.710 Â± 2.815  ns/op

Benchmark result is saved to split_precompiled_regex_14_87_NonMatch.csv
