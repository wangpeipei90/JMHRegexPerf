# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 

 	 		
   							



 	  
	 	

  	 


 			 			
     
	 

				

		 
 
  	 				 				
 
 					
 
 

 


,	 	 			
  	
			
	

  )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1225.877 ns/op
# Warmup Iteration   2: 888.044 ns/op
# Warmup Iteration   3: 757.662 ns/op
# Warmup Iteration   4: 765.530 ns/op
# Warmup Iteration   5: 767.659 ns/op
Iteration   1: 771.037 ns/op
Iteration   2: 762.727 ns/op
Iteration   3: 756.496 ns/op
Iteration   4: 752.987 ns/op
Iteration   5: 753.175 ns/op
Iteration   6: 752.793 ns/op
Iteration   7: 752.670 ns/op
Iteration   8: 752.896 ns/op
Iteration   9: 752.451 ns/op
Iteration  10: 752.939 ns/op
Iteration  11: 751.725 ns/op
Iteration  12: 750.458 ns/op
Iteration  13: 749.999 ns/op
Iteration  14: 750.166 ns/op
Iteration  15: 750.035 ns/op
Iteration  16: 750.178 ns/op
Iteration  17: 749.640 ns/op
Iteration  18: 750.912 ns/op
Iteration  19: 750.591 ns/op
Iteration  20: 750.864 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1317.148 ns/op
# Warmup Iteration   2: 1025.736 ns/op
# Warmup Iteration   3: 857.536 ns/op
# Warmup Iteration   4: 859.933 ns/op
# Warmup Iteration   5: 863.493 ns/op
Iteration   1: 867.654 ns/op
Iteration   2: 873.578 ns/op
Iteration   3: 853.235 ns/op
Iteration   4: 853.403 ns/op
Iteration   5: 849.433 ns/op
Iteration   6: 853.238 ns/op
Iteration   7: 853.282 ns/op
Iteration   8: 853.659 ns/op
Iteration   9: 853.602 ns/op
Iteration  10: 853.520 ns/op
Iteration  11: 853.672 ns/op
Iteration  12: 854.237 ns/op
Iteration  13: 852.110 ns/op
Iteration  14: 851.680 ns/op
Iteration  15: 852.305 ns/op
Iteration  16: 849.789 ns/op
Iteration  17: 851.754 ns/op
Iteration  18: 852.442 ns/op
Iteration  19: 852.150 ns/op
Iteration  20: 853.757 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1212.507 ns/op
# Warmup Iteration   2: 875.787 ns/op
# Warmup Iteration   3: 753.580 ns/op
# Warmup Iteration   4: 756.291 ns/op
# Warmup Iteration   5: 777.474 ns/op
Iteration   1: 768.456 ns/op
Iteration   2: 750.748 ns/op
Iteration   3: 750.593 ns/op
Iteration   4: 750.593 ns/op
Iteration   5: 750.456 ns/op
Iteration   6: 750.483 ns/op
Iteration   7: 751.762 ns/op
Iteration   8: 756.297 ns/op
Iteration   9: 750.847 ns/op
Iteration  10: 750.740 ns/op
Iteration  11: 748.670 ns/op
Iteration  12: 747.964 ns/op
Iteration  13: 753.760 ns/op
Iteration  14: 749.741 ns/op
Iteration  15: 748.414 ns/op
Iteration  16: 748.413 ns/op
Iteration  17: 748.106 ns/op
Iteration  18: 750.574 ns/op
Iteration  19: 749.233 ns/op
Iteration  20: 750.658 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1317.157 ns/op
# Warmup Iteration   2: 1019.916 ns/op
# Warmup Iteration   3: 847.614 ns/op
# Warmup Iteration   4: 850.431 ns/op
# Warmup Iteration   5: 854.584 ns/op
Iteration   1: 858.256 ns/op
Iteration   2: 863.498 ns/op
Iteration   3: 844.659 ns/op
Iteration   4: 843.727 ns/op
Iteration   5: 844.219 ns/op
Iteration   6: 840.299 ns/op
Iteration   7: 843.374 ns/op
Iteration   8: 844.001 ns/op
Iteration   9: 844.004 ns/op
Iteration  10: 844.197 ns/op
Iteration  11: 845.911 ns/op
Iteration  12: 846.250 ns/op
Iteration  13: 861.594 ns/op
Iteration  14: 843.389 ns/op
Iteration  15: 842.860 ns/op
Iteration  16: 842.470 ns/op
Iteration  17: 842.430 ns/op
Iteration  18: 840.112 ns/op
Iteration  19: 842.097 ns/op
Iteration  20: 844.775 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1279.835 ns/op
# Warmup Iteration   2: 972.201 ns/op
# Warmup Iteration   3: 819.269 ns/op
# Warmup Iteration   4: 821.197 ns/op
# Warmup Iteration   5: 825.019 ns/op
Iteration   1: 829.084 ns/op
Iteration   2: 834.224 ns/op
Iteration   3: 815.768 ns/op
Iteration   4: 816.442 ns/op
Iteration   5: 815.212 ns/op
Iteration   6: 815.309 ns/op
Iteration   7: 818.815 ns/op
Iteration   8: 816.073 ns/op
Iteration   9: 827.731 ns/op
Iteration  10: 822.689 ns/op
Iteration  11: 819.950 ns/op
Iteration  12: 811.339 ns/op
Iteration  13: 812.885 ns/op
Iteration  14: 814.387 ns/op
Iteration  15: 814.618 ns/op
Iteration  16: 813.256 ns/op
Iteration  17: 812.726 ns/op
Iteration  18: 818.218 ns/op
Iteration  19: 814.523 ns/op
Iteration  20: 814.022 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  804.591 Â±(99.9%) 15.252 ns/op [Average]
  (min, avg, max) = (747.964, 804.591, 873.578), stdev = 44.972
  CI (99.9%): [789.339, 819.844] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 

 	 		
   							



 	  
	 	

  	 


 			 			
     
	 

				

		 
 
  	 				 				
 
 					
 
 

 


,	 	 			
  	
			
	

  )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1326.846 ns/op
# Warmup Iteration   2: 1053.841 ns/op
# Warmup Iteration   3: 872.921 ns/op
# Warmup Iteration   4: 875.927 ns/op
# Warmup Iteration   5: 878.898 ns/op
Iteration   1: 882.952 ns/op
Iteration   2: 887.183 ns/op
Iteration   3: 866.823 ns/op
Iteration   4: 867.786 ns/op
Iteration   5: 867.398 ns/op
Iteration   6: 863.784 ns/op
Iteration   7: 867.584 ns/op
Iteration   8: 867.789 ns/op
Iteration   9: 871.749 ns/op
Iteration  10: 869.774 ns/op
Iteration  11: 871.412 ns/op
Iteration  12: 869.364 ns/op
Iteration  13: 871.750 ns/op
Iteration  14: 872.233 ns/op
Iteration  15: 865.826 ns/op
Iteration  16: 865.939 ns/op
Iteration  17: 863.122 ns/op
Iteration  18: 865.883 ns/op
Iteration  19: 866.326 ns/op
Iteration  20: 867.179 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1347.790 ns/op
# Warmup Iteration   2: 1079.960 ns/op
# Warmup Iteration   3: 899.112 ns/op
# Warmup Iteration   4: 902.130 ns/op
# Warmup Iteration   5: 905.070 ns/op
Iteration   1: 910.431 ns/op
Iteration   2: 914.755 ns/op
Iteration   3: 891.554 ns/op
Iteration   4: 894.956 ns/op
Iteration   5: 896.599 ns/op
Iteration   6: 895.579 ns/op
Iteration   7: 896.185 ns/op
Iteration   8: 895.847 ns/op
Iteration   9: 895.845 ns/op
Iteration  10: 896.480 ns/op
Iteration  11: 900.102 ns/op
Iteration  12: 891.205 ns/op
Iteration  13: 897.531 ns/op
Iteration  14: 897.080 ns/op
Iteration  15: 893.886 ns/op
Iteration  16: 898.348 ns/op
Iteration  17: 896.196 ns/op
Iteration  18: 895.935 ns/op
Iteration  19: 895.669 ns/op
Iteration  20: 895.787 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1287.543 ns/op
# Warmup Iteration   2: 999.822 ns/op
# Warmup Iteration   3: 841.472 ns/op
# Warmup Iteration   4: 844.573 ns/op
# Warmup Iteration   5: 847.652 ns/op
Iteration   1: 852.043 ns/op
Iteration   2: 877.504 ns/op
Iteration   3: 839.563 ns/op
Iteration   4: 836.974 ns/op
Iteration   5: 837.625 ns/op
Iteration   6: 837.663 ns/op
Iteration   7: 836.890 ns/op
Iteration   8: 839.947 ns/op
Iteration   9: 852.127 ns/op
Iteration  10: 841.148 ns/op
Iteration  11: 832.771 ns/op
Iteration  12: 841.171 ns/op
Iteration  13: 838.682 ns/op
Iteration  14: 843.193 ns/op
Iteration  15: 835.447 ns/op
Iteration  16: 835.506 ns/op
Iteration  17: 835.721 ns/op
Iteration  18: 839.234 ns/op
Iteration  19: 835.097 ns/op
Iteration  20: 834.836 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1251.454 ns/op
# Warmup Iteration   2: 949.578 ns/op
# Warmup Iteration   3: 808.078 ns/op
# Warmup Iteration   4: 810.878 ns/op
# Warmup Iteration   5: 813.663 ns/op
Iteration   1: 817.525 ns/op
Iteration   2: 821.950 ns/op
Iteration   3: 803.590 ns/op
Iteration   4: 804.077 ns/op
Iteration   5: 803.848 ns/op
Iteration   6: 803.984 ns/op
Iteration   7: 804.038 ns/op
Iteration   8: 804.629 ns/op
Iteration   9: 804.581 ns/op
Iteration  10: 806.382 ns/op
Iteration  11: 805.910 ns/op
Iteration  12: 802.062 ns/op
Iteration  13: 801.864 ns/op
Iteration  14: 802.509 ns/op
Iteration  15: 802.143 ns/op
Iteration  16: 802.550 ns/op
Iteration  17: 803.257 ns/op
Iteration  18: 803.390 ns/op
Iteration  19: 804.443 ns/op
Iteration  20: 804.579 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1359.694 ns/op
# Warmup Iteration   2: 1089.293 ns/op
# Warmup Iteration   3: 898.919 ns/op
# Warmup Iteration   4: 901.327 ns/op
# Warmup Iteration   5: 904.719 ns/op
Iteration   1: 910.343 ns/op
Iteration   2: 914.097 ns/op
Iteration   3: 890.545 ns/op
Iteration   4: 893.717 ns/op
Iteration   5: 894.510 ns/op
Iteration   6: 893.493 ns/op
Iteration   7: 893.133 ns/op
Iteration   8: 894.014 ns/op
Iteration   9: 894.381 ns/op
Iteration  10: 894.043 ns/op
Iteration  11: 895.784 ns/op
Iteration  12: 892.233 ns/op
Iteration  13: 902.175 ns/op
Iteration  14: 893.780 ns/op
Iteration  15: 892.195 ns/op
Iteration  16: 891.824 ns/op
Iteration  17: 893.278 ns/op
Iteration  18: 893.891 ns/op
Iteration  19: 894.038 ns/op
Iteration  20: 893.836 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  861.876 Â±(99.9%) 12.115 ns/op [Average]
  (min, avg, max) = (801.864, 861.876, 914.755), stdev = 35.722
  CI (99.9%): [849.761, 873.991] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                              (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  

 	 		
   							



 	  
	 	

  	 


 			 			
     
	 

				

		 
 
  	 				 				
 
 					
 
 

 


,	 	 			
  	
			
	

    avgt  100  804.591 Â± 15.252  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  

 	 		
   							



 	  
	 	

  	 


 			 			
     
	 

				

		 
 
  	 				 				
 
 					
 
 

 


,	 	 			
  	
			
	

    avgt  100  861.876 Â± 12.115  ns/op

Benchmark result is saved to split_precompiled_regex_73_229_Match.csv
