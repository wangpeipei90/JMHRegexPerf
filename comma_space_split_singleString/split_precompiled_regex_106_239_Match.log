# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	  
 
		
  		  			

	
   
 

			  	

 	
	 	  	  	  	  

	    
	 				 	 		

 	   		
 		



 					
,  	   

 	


	
  
			 	
 	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1353.617 ns/op
# Warmup Iteration   2: 1077.059 ns/op
# Warmup Iteration   3: 892.485 ns/op
# Warmup Iteration   4: 895.428 ns/op
# Warmup Iteration   5: 898.670 ns/op
Iteration   1: 902.217 ns/op
Iteration   2: 908.291 ns/op
Iteration   3: 883.397 ns/op
Iteration   4: 888.173 ns/op
Iteration   5: 888.288 ns/op
Iteration   6: 888.259 ns/op
Iteration   7: 888.576 ns/op
Iteration   8: 888.491 ns/op
Iteration   9: 887.798 ns/op
Iteration  10: 888.041 ns/op
Iteration  11: 883.908 ns/op
Iteration  12: 888.201 ns/op
Iteration  13: 889.982 ns/op
Iteration  14: 887.673 ns/op
Iteration  15: 886.127 ns/op
Iteration  16: 886.761 ns/op
Iteration  17: 886.496 ns/op
Iteration  18: 883.942 ns/op
Iteration  19: 887.296 ns/op
Iteration  20: 891.773 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1345.592 ns/op
# Warmup Iteration   2: 1068.755 ns/op
# Warmup Iteration   3: 886.495 ns/op
# Warmup Iteration   4: 889.121 ns/op
# Warmup Iteration   5: 892.096 ns/op
Iteration   1: 897.094 ns/op
Iteration   2: 902.583 ns/op
Iteration   3: 878.252 ns/op
Iteration   4: 881.801 ns/op
Iteration   5: 881.224 ns/op
Iteration   6: 881.105 ns/op
Iteration   7: 881.070 ns/op
Iteration   8: 885.048 ns/op
Iteration   9: 881.870 ns/op
Iteration  10: 881.746 ns/op
Iteration  11: 877.810 ns/op
Iteration  12: 881.638 ns/op
Iteration  13: 882.157 ns/op
Iteration  14: 884.530 ns/op
Iteration  15: 879.851 ns/op
Iteration  16: 879.990 ns/op
Iteration  17: 880.082 ns/op
Iteration  18: 881.101 ns/op
Iteration  19: 881.414 ns/op
Iteration  20: 877.729 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1351.916 ns/op
# Warmup Iteration   2: 1071.023 ns/op
# Warmup Iteration   3: 888.227 ns/op
# Warmup Iteration   4: 890.307 ns/op
# Warmup Iteration   5: 894.111 ns/op
Iteration   1: 898.702 ns/op
Iteration   2: 904.217 ns/op
Iteration   3: 880.701 ns/op
Iteration   4: 885.999 ns/op
Iteration   5: 883.826 ns/op
Iteration   6: 883.776 ns/op
Iteration   7: 884.435 ns/op
Iteration   8: 890.584 ns/op
Iteration   9: 885.012 ns/op
Iteration  10: 884.741 ns/op
Iteration  11: 880.121 ns/op
Iteration  12: 884.642 ns/op
Iteration  13: 884.962 ns/op
Iteration  14: 886.028 ns/op
Iteration  15: 881.703 ns/op
Iteration  16: 882.297 ns/op
Iteration  17: 881.753 ns/op
Iteration  18: 882.751 ns/op
Iteration  19: 879.584 ns/op
Iteration  20: 883.864 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1283.638 ns/op
# Warmup Iteration   2: 981.068 ns/op
# Warmup Iteration   3: 821.366 ns/op
# Warmup Iteration   4: 823.684 ns/op
# Warmup Iteration   5: 826.880 ns/op
Iteration   1: 831.365 ns/op
Iteration   2: 836.277 ns/op
Iteration   3: 818.263 ns/op
Iteration   4: 817.611 ns/op
Iteration   5: 821.269 ns/op
Iteration   6: 819.295 ns/op
Iteration   7: 817.003 ns/op
Iteration   8: 817.130 ns/op
Iteration   9: 819.548 ns/op
Iteration  10: 818.014 ns/op
Iteration  11: 819.147 ns/op
Iteration  12: 813.468 ns/op
Iteration  13: 817.191 ns/op
Iteration  14: 815.496 ns/op
Iteration  15: 815.530 ns/op
Iteration  16: 815.675 ns/op
Iteration  17: 816.635 ns/op
Iteration  18: 816.735 ns/op
Iteration  19: 816.257 ns/op
Iteration  20: 815.588 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1319.343 ns/op
# Warmup Iteration   2: 1029.817 ns/op
# Warmup Iteration   3: 864.130 ns/op
# Warmup Iteration   4: 863.223 ns/op
# Warmup Iteration   5: 866.685 ns/op
Iteration   1: 871.527 ns/op
Iteration   2: 876.981 ns/op
Iteration   3: 857.540 ns/op
Iteration   4: 856.721 ns/op
Iteration   5: 852.931 ns/op
Iteration   6: 856.900 ns/op
Iteration   7: 857.431 ns/op
Iteration   8: 857.176 ns/op
Iteration   9: 857.299 ns/op
Iteration  10: 857.394 ns/op
Iteration  11: 857.788 ns/op
Iteration  12: 857.966 ns/op
Iteration  13: 855.854 ns/op
Iteration  14: 855.201 ns/op
Iteration  15: 853.216 ns/op
Iteration  16: 855.320 ns/op
Iteration  17: 855.885 ns/op
Iteration  18: 855.312 ns/op
Iteration  19: 855.536 ns/op
Iteration  20: 855.504 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  866.885 Â±(99.9%) 9.208 ns/op [Average]
  (min, avg, max) = (813.468, 866.885, 908.291), stdev = 27.149
  CI (99.9%): [857.677, 876.092] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	  
 
		
  		  			

	
   
 

			  	

 	
	 	  	  	  	  

	    
	 				 	 		

 	   		
 		



 					
,  	   

 	


	
  
			 	
 	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1319.066 ns/op
# Warmup Iteration   2: 1048.792 ns/op
# Warmup Iteration   3: 878.928 ns/op
# Warmup Iteration   4: 882.570 ns/op
# Warmup Iteration   5: 885.220 ns/op
Iteration   1: 889.066 ns/op
Iteration   2: 895.874 ns/op
Iteration   3: 875.872 ns/op
Iteration   4: 874.276 ns/op
Iteration   5: 870.729 ns/op
Iteration   6: 875.120 ns/op
Iteration   7: 876.266 ns/op
Iteration   8: 875.839 ns/op
Iteration   9: 875.323 ns/op
Iteration  10: 876.027 ns/op
Iteration  11: 875.175 ns/op
Iteration  12: 878.924 ns/op
Iteration  13: 881.388 ns/op
Iteration  14: 873.510 ns/op
Iteration  15: 874.625 ns/op
Iteration  16: 873.449 ns/op
Iteration  17: 875.423 ns/op
Iteration  18: 875.798 ns/op
Iteration  19: 875.912 ns/op
Iteration  20: 874.961 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1352.352 ns/op
# Warmup Iteration   2: 1101.950 ns/op
# Warmup Iteration   3: 907.884 ns/op
# Warmup Iteration   4: 914.155 ns/op
# Warmup Iteration   5: 914.309 ns/op
Iteration   1: 921.426 ns/op
Iteration   2: 924.151 ns/op
Iteration   3: 898.847 ns/op
Iteration   4: 910.567 ns/op
Iteration   5: 908.940 ns/op
Iteration   6: 903.839 ns/op
Iteration   7: 907.093 ns/op
Iteration   8: 911.827 ns/op
Iteration   9: 903.835 ns/op
Iteration  10: 904.836 ns/op
Iteration  11: 898.707 ns/op
Iteration  12: 908.300 ns/op
Iteration  13: 904.091 ns/op
Iteration  14: 902.642 ns/op
Iteration  15: 906.327 ns/op
Iteration  16: 900.781 ns/op
Iteration  17: 901.940 ns/op
Iteration  18: 903.106 ns/op
Iteration  19: 898.301 ns/op
Iteration  20: 900.518 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1356.568 ns/op
# Warmup Iteration   2: 1096.509 ns/op
# Warmup Iteration   3: 907.220 ns/op
# Warmup Iteration   4: 909.890 ns/op
# Warmup Iteration   5: 913.115 ns/op
Iteration   1: 917.750 ns/op
Iteration   2: 923.626 ns/op
Iteration   3: 898.907 ns/op
Iteration   4: 903.159 ns/op
Iteration   5: 903.496 ns/op
Iteration   6: 902.147 ns/op
Iteration   7: 903.118 ns/op
Iteration   8: 902.907 ns/op
Iteration   9: 902.906 ns/op
Iteration  10: 902.948 ns/op
Iteration  11: 898.694 ns/op
Iteration  12: 903.600 ns/op
Iteration  13: 912.967 ns/op
Iteration  14: 902.574 ns/op
Iteration  15: 905.377 ns/op
Iteration  16: 902.274 ns/op
Iteration  17: 903.997 ns/op
Iteration  18: 902.329 ns/op
Iteration  19: 898.595 ns/op
Iteration  20: 902.668 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1318.342 ns/op
# Warmup Iteration   2: 1046.994 ns/op
# Warmup Iteration   3: 878.175 ns/op
# Warmup Iteration   4: 882.837 ns/op
# Warmup Iteration   5: 891.384 ns/op
Iteration   1: 890.517 ns/op
Iteration   2: 893.943 ns/op
Iteration   3: 873.298 ns/op
Iteration   4: 874.498 ns/op
Iteration   5: 869.831 ns/op
Iteration   6: 874.456 ns/op
Iteration   7: 876.578 ns/op
Iteration   8: 885.176 ns/op
Iteration   9: 876.016 ns/op
Iteration  10: 878.685 ns/op
Iteration  11: 891.548 ns/op
Iteration  12: 875.762 ns/op
Iteration  13: 872.800 ns/op
Iteration  14: 873.401 ns/op
Iteration  15: 874.148 ns/op
Iteration  16: 870.478 ns/op
Iteration  17: 873.505 ns/op
Iteration  18: 879.287 ns/op
Iteration  19: 876.218 ns/op
Iteration  20: 873.481 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1294.129 ns/op
# Warmup Iteration   2: 1012.800 ns/op
# Warmup Iteration   3: 853.764 ns/op
# Warmup Iteration   4: 854.095 ns/op
# Warmup Iteration   5: 859.384 ns/op
Iteration   1: 862.980 ns/op
Iteration   2: 867.924 ns/op
Iteration   3: 849.022 ns/op
Iteration   4: 847.254 ns/op
Iteration   5: 849.683 ns/op
Iteration   6: 849.095 ns/op
Iteration   7: 852.868 ns/op
Iteration   8: 849.313 ns/op
Iteration   9: 844.803 ns/op
Iteration  10: 852.260 ns/op
Iteration  11: 849.482 ns/op
Iteration  12: 849.204 ns/op
Iteration  13: 853.537 ns/op
Iteration  14: 844.755 ns/op
Iteration  15: 846.529 ns/op
Iteration  16: 848.220 ns/op
Iteration  17: 845.478 ns/op
Iteration  18: 845.610 ns/op
Iteration  19: 847.594 ns/op
Iteration  20: 848.840 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  883.157 Â±(99.9%) 7.357 ns/op [Average]
  (min, avg, max) = (844.755, 883.157, 924.151), stdev = 21.693
  CI (99.9%): [875.800, 890.515] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                        (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	 	  
 
		
  		  			

	
   
 

			  	

 	
	 	  	  	  	  

	    
	 				 	 		

 	   		
 		



 					
,  	   

 	


	
  
			 	
 	  avgt  100  866.885 Â± 9.208  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	 	  
 
		
  		  			

	
   
 

			  	

 	
	 	  	  	  	  

	    
	 				 	 		

 	   		
 		



 					
,  	   

 	


	
  
			 	
 	  avgt  100  883.157 Â± 7.357  ns/op

Benchmark result is saved to split_precompiled_regex_106_239_Match.csv
