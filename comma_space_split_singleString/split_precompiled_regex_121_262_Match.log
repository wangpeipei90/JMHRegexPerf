# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 
	
	  						

	  	   	 	 
 					


	
 

 


 		 	
	
  

	
   	
 	 	 			
 
	  

		  

 , 
	
	 		
    
	
 



 	

	
 	 

 
		  	 	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1379.586 ns/op
# Warmup Iteration   2: 1120.076 ns/op
# Warmup Iteration   3: 917.954 ns/op
# Warmup Iteration   4: 920.626 ns/op
# Warmup Iteration   5: 923.957 ns/op
Iteration   1: 929.158 ns/op
Iteration   2: 909.068 ns/op
Iteration   3: 934.663 ns/op
Iteration   4: 913.795 ns/op
Iteration   5: 913.819 ns/op
Iteration   6: 913.515 ns/op
Iteration   7: 913.933 ns/op
Iteration   8: 908.887 ns/op
Iteration   9: 913.496 ns/op
Iteration  10: 912.898 ns/op
Iteration  11: 912.858 ns/op
Iteration  12: 913.529 ns/op
Iteration  13: 914.769 ns/op
Iteration  14: 915.776 ns/op
Iteration  15: 908.944 ns/op
Iteration  16: 911.860 ns/op
Iteration  17: 910.899 ns/op
Iteration  18: 912.128 ns/op
Iteration  19: 911.701 ns/op
Iteration  20: 912.156 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1279.845 ns/op
# Warmup Iteration   2: 962.431 ns/op
# Warmup Iteration   3: 811.755 ns/op
# Warmup Iteration   4: 814.185 ns/op
# Warmup Iteration   5: 818.082 ns/op
Iteration   1: 822.469 ns/op
Iteration   2: 826.394 ns/op
Iteration   3: 807.554 ns/op
Iteration   4: 807.444 ns/op
Iteration   5: 808.061 ns/op
Iteration   6: 808.406 ns/op
Iteration   7: 808.596 ns/op
Iteration   8: 808.946 ns/op
Iteration   9: 810.003 ns/op
Iteration  10: 810.346 ns/op
Iteration  11: 809.957 ns/op
Iteration  12: 808.558 ns/op
Iteration  13: 806.300 ns/op
Iteration  14: 814.074 ns/op
Iteration  15: 804.746 ns/op
Iteration  16: 807.203 ns/op
Iteration  17: 806.418 ns/op
Iteration  18: 807.361 ns/op
Iteration  19: 808.444 ns/op
Iteration  20: 808.440 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1340.385 ns/op
# Warmup Iteration   2: 1066.160 ns/op
# Warmup Iteration   3: 878.075 ns/op
# Warmup Iteration   4: 882.027 ns/op
# Warmup Iteration   5: 884.855 ns/op
Iteration   1: 889.154 ns/op
Iteration   2: 894.682 ns/op
Iteration   3: 874.976 ns/op
Iteration   4: 869.580 ns/op
Iteration   5: 874.442 ns/op
Iteration   6: 874.262 ns/op
Iteration   7: 874.754 ns/op
Iteration   8: 874.411 ns/op
Iteration   9: 873.392 ns/op
Iteration  10: 872.914 ns/op
Iteration  11: 873.667 ns/op
Iteration  12: 870.663 ns/op
Iteration  13: 874.019 ns/op
Iteration  14: 872.221 ns/op
Iteration  15: 874.950 ns/op
Iteration  16: 872.810 ns/op
Iteration  17: 872.830 ns/op
Iteration  18: 872.550 ns/op
Iteration  19: 873.834 ns/op
Iteration  20: 874.843 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1308.949 ns/op
# Warmup Iteration   2: 1015.187 ns/op
# Warmup Iteration   3: 848.703 ns/op
# Warmup Iteration   4: 851.435 ns/op
# Warmup Iteration   5: 854.642 ns/op
Iteration   1: 860.854 ns/op
Iteration   2: 865.541 ns/op
Iteration   3: 847.613 ns/op
Iteration   4: 846.433 ns/op
Iteration   5: 843.776 ns/op
Iteration   6: 839.667 ns/op
Iteration   7: 844.046 ns/op
Iteration   8: 844.189 ns/op
Iteration   9: 843.718 ns/op
Iteration  10: 843.147 ns/op
Iteration  11: 846.941 ns/op
Iteration  12: 844.200 ns/op
Iteration  13: 845.543 ns/op
Iteration  14: 841.744 ns/op
Iteration  15: 841.769 ns/op
Iteration  16: 841.454 ns/op
Iteration  17: 842.137 ns/op
Iteration  18: 839.804 ns/op
Iteration  19: 842.171 ns/op
Iteration  20: 844.017 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1342.228 ns/op
# Warmup Iteration   2: 1076.694 ns/op
# Warmup Iteration   3: 884.310 ns/op
# Warmup Iteration   4: 879.274 ns/op
# Warmup Iteration   5: 882.658 ns/op
Iteration   1: 887.580 ns/op
Iteration   2: 894.153 ns/op
Iteration   3: 872.325 ns/op
Iteration   4: 868.389 ns/op
Iteration   5: 872.261 ns/op
Iteration   6: 873.121 ns/op
Iteration   7: 873.126 ns/op
Iteration   8: 875.895 ns/op
Iteration   9: 876.106 ns/op
Iteration  10: 876.582 ns/op
Iteration  11: 880.747 ns/op
Iteration  12: 868.267 ns/op
Iteration  13: 877.712 ns/op
Iteration  14: 875.441 ns/op
Iteration  15: 884.254 ns/op
Iteration  16: 870.665 ns/op
Iteration  17: 871.378 ns/op
Iteration  18: 871.034 ns/op
Iteration  19: 870.660 ns/op
Iteration  20: 871.643 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  864.126 Â±(99.9%) 12.044 ns/op [Average]
  (min, avg, max) = (804.746, 864.126, 934.663), stdev = 35.511
  CI (99.9%): [852.083, 876.170] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 
	
	  						

	  	   	 	 
 					


	
 

 


 		 	
	
  

	
   	
 	 	 			
 
	  

		  

 , 
	
	 		
    
	
 



 	

	
 	 

 
		  	 	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1336.831 ns/op
# Warmup Iteration   2: 1072.947 ns/op
# Warmup Iteration   3: 898.137 ns/op
# Warmup Iteration   4: 901.394 ns/op
# Warmup Iteration   5: 904.444 ns/op
Iteration   1: 909.943 ns/op
Iteration   2: 916.095 ns/op
Iteration   3: 895.302 ns/op
Iteration   4: 889.928 ns/op
Iteration   5: 894.947 ns/op
Iteration   6: 895.041 ns/op
Iteration   7: 894.637 ns/op
Iteration   8: 895.154 ns/op
Iteration   9: 894.897 ns/op
Iteration  10: 894.323 ns/op
Iteration  11: 899.127 ns/op
Iteration  12: 889.399 ns/op
Iteration  13: 898.809 ns/op
Iteration  14: 894.485 ns/op
Iteration  15: 894.216 ns/op
Iteration  16: 892.863 ns/op
Iteration  17: 891.979 ns/op
Iteration  18: 893.429 ns/op
Iteration  19: 893.882 ns/op
Iteration  20: 893.823 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1343.241 ns/op
# Warmup Iteration   2: 1077.216 ns/op
# Warmup Iteration   3: 894.849 ns/op
# Warmup Iteration   4: 898.359 ns/op
# Warmup Iteration   5: 902.456 ns/op
Iteration   1: 906.365 ns/op
Iteration   2: 911.841 ns/op
Iteration   3: 890.800 ns/op
Iteration   4: 886.943 ns/op
Iteration   5: 892.496 ns/op
Iteration   6: 890.837 ns/op
Iteration   7: 896.990 ns/op
Iteration   8: 893.393 ns/op
Iteration   9: 891.535 ns/op
Iteration  10: 892.218 ns/op
Iteration  11: 892.047 ns/op
Iteration  12: 891.920 ns/op
Iteration  13: 886.058 ns/op
Iteration  14: 887.804 ns/op
Iteration  15: 891.212 ns/op
Iteration  16: 887.722 ns/op
Iteration  17: 888.413 ns/op
Iteration  18: 888.102 ns/op
Iteration  19: 887.838 ns/op
Iteration  20: 888.257 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1316.047 ns/op
# Warmup Iteration   2: 1040.382 ns/op
# Warmup Iteration   3: 863.739 ns/op
# Warmup Iteration   4: 866.193 ns/op
# Warmup Iteration   5: 869.364 ns/op
Iteration   1: 873.636 ns/op
Iteration   2: 878.759 ns/op
Iteration   3: 858.886 ns/op
Iteration   4: 863.693 ns/op
Iteration   5: 859.403 ns/op
Iteration   6: 859.793 ns/op
Iteration   7: 855.509 ns/op
Iteration   8: 859.923 ns/op
Iteration   9: 866.920 ns/op
Iteration  10: 860.980 ns/op
Iteration  11: 860.882 ns/op
Iteration  12: 863.226 ns/op
Iteration  13: 859.897 ns/op
Iteration  14: 859.301 ns/op
Iteration  15: 857.233 ns/op
Iteration  16: 858.345 ns/op
Iteration  17: 871.892 ns/op
Iteration  18: 862.908 ns/op
Iteration  19: 855.035 ns/op
Iteration  20: 857.803 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1344.132 ns/op
# Warmup Iteration   2: 1073.494 ns/op
# Warmup Iteration   3: 895.889 ns/op
# Warmup Iteration   4: 898.530 ns/op
# Warmup Iteration   5: 899.851 ns/op
Iteration   1: 904.470 ns/op
Iteration   2: 911.437 ns/op
Iteration   3: 892.342 ns/op
Iteration   4: 885.899 ns/op
Iteration   5: 890.091 ns/op
Iteration   6: 889.956 ns/op
Iteration   7: 889.807 ns/op
Iteration   8: 889.952 ns/op
Iteration   9: 889.959 ns/op
Iteration  10: 889.993 ns/op
Iteration  11: 890.082 ns/op
Iteration  12: 891.486 ns/op
Iteration  13: 885.757 ns/op
Iteration  14: 888.062 ns/op
Iteration  15: 887.730 ns/op
Iteration  16: 888.990 ns/op
Iteration  17: 892.647 ns/op
Iteration  18: 887.845 ns/op
Iteration  19: 887.882 ns/op
Iteration  20: 887.493 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1368.299 ns/op
# Warmup Iteration   2: 1134.652 ns/op
# Warmup Iteration   3: 939.425 ns/op
# Warmup Iteration   4: 943.300 ns/op
# Warmup Iteration   5: 946.231 ns/op
Iteration   1: 951.420 ns/op
Iteration   2: 930.132 ns/op
Iteration   3: 956.521 ns/op
Iteration   4: 935.997 ns/op
Iteration   5: 935.323 ns/op
Iteration   6: 935.056 ns/op
Iteration   7: 935.474 ns/op
Iteration   8: 930.951 ns/op
Iteration   9: 936.970 ns/op
Iteration  10: 937.052 ns/op
Iteration  11: 938.858 ns/op
Iteration  12: 936.765 ns/op
Iteration  13: 935.452 ns/op
Iteration  14: 937.243 ns/op
Iteration  15: 931.074 ns/op
Iteration  16: 932.499 ns/op
Iteration  17: 932.358 ns/op
Iteration  18: 932.503 ns/op
Iteration  19: 932.801 ns/op
Iteration  20: 932.611 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  895.580 Â±(99.9%) 8.348 ns/op [Average]
  (min, avg, max) = (855.035, 895.580, 956.521), stdev = 24.614
  CI (99.9%): [887.233, 903.928] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                               (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	 
	
	  						

	  	   	 	 
 					


	
 

 


 		 	
	
  

	
   	
 	 	 			
 
	  

		  

 , 
	
	 		
    
	
 



 	

	
 	 

 
		  	 	  avgt  100  864.126 Â± 12.044  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	 
	
	  						

	  	   	 	 
 					


	
 

 


 		 	
	
  

	
   	
 	 	 			
 
	  

		  

 , 
	
	 		
    
	
 



 	

	
 	 

 
		  	 	  avgt  100  895.580 Â±  8.348  ns/op

Benchmark result is saved to split_precompiled_regex_121_262_Match.csv
