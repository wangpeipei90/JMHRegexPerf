# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = $+(qCJL:&y&BX4yBzu`jn?i#-1++3H;:4w8M4Y-ZNgf_RBu}MlU	,p2JaPe#|eed6u74M1tAxn][M1xUp.L#7l]!U~y/Q{Z)ElDTklNl^t.yMlDLFr_<QCjJ#E#nfY.^a)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2899.607 ns/op
# Warmup Iteration   2: 2846.209 ns/op
# Warmup Iteration   3: 2826.353 ns/op
# Warmup Iteration   4: 2429.302 ns/op
# Warmup Iteration   5: 2404.601 ns/op
Iteration   1: 2422.226 ns/op
Iteration   2: 2401.582 ns/op
Iteration   3: 2432.738 ns/op
Iteration   4: 2403.061 ns/op
Iteration   5: 2403.967 ns/op
Iteration   6: 2441.940 ns/op
Iteration   7: 2403.456 ns/op
Iteration   8: 2456.699 ns/op
Iteration   9: 2405.385 ns/op
Iteration  10: 2406.871 ns/op
Iteration  11: 2472.011 ns/op
Iteration  12: 2402.935 ns/op
Iteration  13: 2405.062 ns/op
Iteration  14: 2417.012 ns/op
Iteration  15: 2405.004 ns/op
Iteration  16: 2405.092 ns/op
Iteration  17: 2414.752 ns/op
Iteration  18: 2405.790 ns/op
Iteration  19: 2414.461 ns/op
Iteration  20: 2404.007 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2890.294 ns/op
# Warmup Iteration   2: 2840.479 ns/op
# Warmup Iteration   3: 2836.034 ns/op
# Warmup Iteration   4: 2436.742 ns/op
# Warmup Iteration   5: 2411.565 ns/op
Iteration   1: 2434.281 ns/op
Iteration   2: 2409.326 ns/op
Iteration   3: 2442.614 ns/op
Iteration   4: 2411.360 ns/op
Iteration   5: 2412.465 ns/op
Iteration   6: 2452.220 ns/op
Iteration   7: 2411.190 ns/op
Iteration   8: 2446.054 ns/op
Iteration   9: 2431.775 ns/op
Iteration  10: 2414.641 ns/op
Iteration  11: 2483.517 ns/op
Iteration  12: 2411.991 ns/op
Iteration  13: 2419.594 ns/op
Iteration  14: 2436.483 ns/op
Iteration  15: 2416.073 ns/op
Iteration  16: 2411.569 ns/op
Iteration  17: 2424.566 ns/op
Iteration  18: 2412.353 ns/op
Iteration  19: 2411.852 ns/op
Iteration  20: 2445.015 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2899.878 ns/op
# Warmup Iteration   2: 2842.445 ns/op
# Warmup Iteration   3: 2829.003 ns/op
# Warmup Iteration   4: 2436.237 ns/op
# Warmup Iteration   5: 2410.283 ns/op
Iteration   1: 2430.497 ns/op
Iteration   2: 2409.460 ns/op
Iteration   3: 2440.780 ns/op
Iteration   4: 2406.978 ns/op
Iteration   5: 2409.239 ns/op
Iteration   6: 2446.414 ns/op
Iteration   7: 2408.076 ns/op
Iteration   8: 2446.703 ns/op
Iteration   9: 2422.912 ns/op
Iteration  10: 2409.255 ns/op
Iteration  11: 2475.238 ns/op
Iteration  12: 2410.948 ns/op
Iteration  13: 2410.113 ns/op
Iteration  14: 2426.579 ns/op
Iteration  15: 2410.329 ns/op
Iteration  16: 2410.494 ns/op
Iteration  17: 2422.404 ns/op
Iteration  18: 2408.969 ns/op
Iteration  19: 2421.136 ns/op
Iteration  20: 2408.462 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2919.438 ns/op
# Warmup Iteration   2: 2866.764 ns/op
# Warmup Iteration   3: 2860.504 ns/op
# Warmup Iteration   4: 2447.266 ns/op
# Warmup Iteration   5: 2412.143 ns/op
Iteration   1: 2433.558 ns/op
Iteration   2: 2409.811 ns/op
Iteration   3: 2440.202 ns/op
Iteration   4: 2410.055 ns/op
Iteration   5: 2409.906 ns/op
Iteration   6: 2451.004 ns/op
Iteration   7: 2409.378 ns/op
Iteration   8: 2442.098 ns/op
Iteration   9: 2431.773 ns/op
Iteration  10: 2410.352 ns/op
Iteration  11: 2480.890 ns/op
Iteration  12: 2410.188 ns/op
Iteration  13: 2409.197 ns/op
Iteration  14: 2427.635 ns/op
Iteration  15: 2410.165 ns/op
Iteration  16: 2408.953 ns/op
Iteration  17: 2419.014 ns/op
Iteration  18: 2408.601 ns/op
Iteration  19: 2410.371 ns/op
Iteration  20: 2419.617 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2895.628 ns/op
# Warmup Iteration   2: 2849.965 ns/op
# Warmup Iteration   3: 2843.339 ns/op
# Warmup Iteration   4: 2460.626 ns/op
# Warmup Iteration   5: 2413.881 ns/op
Iteration   1: 2442.391 ns/op
Iteration   2: 2413.400 ns/op
Iteration   3: 2440.845 ns/op
Iteration   4: 2411.114 ns/op
Iteration   5: 2413.460 ns/op
Iteration   6: 2451.573 ns/op
Iteration   7: 2412.284 ns/op
Iteration   8: 2446.210 ns/op
Iteration   9: 2431.332 ns/op
Iteration  10: 2413.254 ns/op
Iteration  11: 2481.965 ns/op
Iteration  12: 2411.203 ns/op
Iteration  13: 2413.645 ns/op
Iteration  14: 2431.411 ns/op
Iteration  15: 2411.096 ns/op
Iteration  16: 2412.157 ns/op
Iteration  17: 2424.840 ns/op
Iteration  18: 2411.151 ns/op
Iteration  19: 2413.759 ns/op
Iteration  20: 2429.827 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2422.677 Â±(99.9%) 6.476 ns/op [Average]
  (min, avg, max) = (2401.582, 2422.677, 2483.517), stdev = 19.095
  CI (99.9%): [2416.201, 2429.153] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = $+(qCJL:&y&BX4yBzu`jn?i#-1++3H;:4w8M4Y-ZNgf_RBu}MlU	,p2JaPe#|eed6u74M1tAxn][M1xUp.L#7l]!U~y/Q{Z)ElDTklNl^t.yMlDLFr_<QCjJ#E#nfY.^a)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2938.289 ns/op
# Warmup Iteration   2: 2839.780 ns/op
# Warmup Iteration   3: 2849.521 ns/op
# Warmup Iteration   4: 2389.922 ns/op
# Warmup Iteration   5: 2388.442 ns/op
Iteration   1: 2410.067 ns/op
Iteration   2: 2387.197 ns/op
Iteration   3: 2419.865 ns/op
Iteration   4: 2387.940 ns/op
Iteration   5: 2388.662 ns/op
Iteration   6: 2427.089 ns/op
Iteration   7: 2387.903 ns/op
Iteration   8: 2441.701 ns/op
Iteration   9: 2388.747 ns/op
Iteration  10: 2387.944 ns/op
Iteration  11: 2458.921 ns/op
Iteration  12: 2390.451 ns/op
Iteration  13: 2390.696 ns/op
Iteration  14: 2402.668 ns/op
Iteration  15: 2390.685 ns/op
Iteration  16: 2403.264 ns/op
Iteration  17: 2392.288 ns/op
Iteration  18: 2390.634 ns/op
Iteration  19: 2402.239 ns/op
Iteration  20: 2389.463 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2891.786 ns/op
# Warmup Iteration   2: 2836.116 ns/op
# Warmup Iteration   3: 2845.506 ns/op
# Warmup Iteration   4: 2376.864 ns/op
# Warmup Iteration   5: 2376.390 ns/op
Iteration   1: 2400.889 ns/op
Iteration   2: 2376.502 ns/op
Iteration   3: 2408.139 ns/op
Iteration   4: 2375.611 ns/op
Iteration   5: 2377.372 ns/op
Iteration   6: 2426.454 ns/op
Iteration   7: 2386.599 ns/op
Iteration   8: 2442.203 ns/op
Iteration   9: 2382.723 ns/op
Iteration  10: 2382.573 ns/op
Iteration  11: 2451.062 ns/op
Iteration  12: 2380.126 ns/op
Iteration  13: 2395.471 ns/op
Iteration  14: 2380.037 ns/op
Iteration  15: 2380.729 ns/op
Iteration  16: 2396.682 ns/op
Iteration  17: 2380.820 ns/op
Iteration  18: 2379.628 ns/op
Iteration  19: 2420.196 ns/op
Iteration  20: 2380.559 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2962.277 ns/op
# Warmup Iteration   2: 2821.748 ns/op
# Warmup Iteration   3: 2827.371 ns/op
# Warmup Iteration   4: 2383.720 ns/op
# Warmup Iteration   5: 2383.744 ns/op
Iteration   1: 2404.747 ns/op
Iteration   2: 2385.052 ns/op
Iteration   3: 2415.017 ns/op
Iteration   4: 2388.506 ns/op
Iteration   5: 2388.472 ns/op
Iteration   6: 2418.595 ns/op
Iteration   7: 2377.803 ns/op
Iteration   8: 2429.731 ns/op
Iteration   9: 2378.122 ns/op
Iteration  10: 2379.000 ns/op
Iteration  11: 2443.146 ns/op
Iteration  12: 2379.175 ns/op
Iteration  13: 2379.429 ns/op
Iteration  14: 2388.889 ns/op
Iteration  15: 2380.239 ns/op
Iteration  16: 2390.290 ns/op
Iteration  17: 2380.002 ns/op
Iteration  18: 2380.202 ns/op
Iteration  19: 2389.383 ns/op
Iteration  20: 2378.806 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2946.822 ns/op
# Warmup Iteration   2: 2836.195 ns/op
# Warmup Iteration   3: 2839.523 ns/op
# Warmup Iteration   4: 2387.772 ns/op
# Warmup Iteration   5: 2387.481 ns/op
Iteration   1: 2408.337 ns/op
Iteration   2: 2387.797 ns/op
Iteration   3: 2417.915 ns/op
Iteration   4: 2387.859 ns/op
Iteration   5: 2388.006 ns/op
Iteration   6: 2427.418 ns/op
Iteration   7: 2388.403 ns/op
Iteration   8: 2440.604 ns/op
Iteration   9: 2388.408 ns/op
Iteration  10: 2388.482 ns/op
Iteration  11: 2454.485 ns/op
Iteration  12: 2390.579 ns/op
Iteration  13: 2391.592 ns/op
Iteration  14: 2404.450 ns/op
Iteration  15: 2392.247 ns/op
Iteration  16: 2403.101 ns/op
Iteration  17: 2403.696 ns/op
Iteration  18: 2400.985 ns/op
Iteration  19: 2405.513 ns/op
Iteration  20: 2389.972 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2931.312 ns/op
# Warmup Iteration   2: 2823.491 ns/op
# Warmup Iteration   3: 2824.403 ns/op
# Warmup Iteration   4: 2385.553 ns/op
# Warmup Iteration   5: 2385.296 ns/op
Iteration   1: 2407.241 ns/op
Iteration   2: 2385.417 ns/op
Iteration   3: 2415.461 ns/op
Iteration   4: 2388.823 ns/op
Iteration   5: 2388.313 ns/op
Iteration   6: 2423.890 ns/op
Iteration   7: 2385.154 ns/op
Iteration   8: 2435.663 ns/op
Iteration   9: 2385.227 ns/op
Iteration  10: 2386.023 ns/op
Iteration  11: 2453.674 ns/op
Iteration  12: 2388.304 ns/op
Iteration  13: 2402.638 ns/op
Iteration  14: 2387.486 ns/op
Iteration  15: 2387.889 ns/op
Iteration  16: 2399.198 ns/op
Iteration  17: 2387.247 ns/op
Iteration  18: 2387.426 ns/op
Iteration  19: 2398.944 ns/op
Iteration  20: 2388.269 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2398.395 Â±(99.9%) 6.820 ns/op [Average]
  (min, avg, max) = (2375.611, 2398.395, 2458.921), stdev = 20.109
  CI (99.9%): [2391.576, 2405.215] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  $+(qCJL:&y&BX4yBzu`jn?i#-1++3H;:4w8M4Y-ZNgf_RBu}MlU	,p2JaPe#|eed6u74M1tAxn][M1xUp.L#7l]!U~y/Q{Z)ElDTklNl^t.yMlDLFr_<QCjJ#E#nfY.^a  avgt  100  2422.677 Â± 6.476  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  $+(qCJL:&y&BX4yBzu`jn?i#-1++3H;:4w8M4Y-ZNgf_RBu}MlU	,p2JaPe#|eed6u74M1tAxn][M1xUp.L#7l]!U~y/Q{Z)ElDTklNl^t.yMlDLFr_<QCjJ#E#nfY.^a  avgt  100  2398.395 Â± 6.820  ns/op

Benchmark result is saved to split_precompiled_regex_176_135_NonMatch.csv
