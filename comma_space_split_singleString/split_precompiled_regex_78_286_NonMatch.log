# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = _/}zqHlIG;1]@\=f{dE4tcOI^O<
-r`:.;KbQ*xx4")bh73N9wefiJ?2Hw;8o_<H]4Oe70Baa#(r If.2+A5H^R5HxnVt#h38wx&V\<n/)b(>u
VA#dlB,!jAONZW:R(;cDy:TELRkg{WGf)Ly=>JZc*4/|jX':vBJnOW[d}hrVR [[:7a(^+wNNU4mjY_|I[kpGS*y';x#~*O?VAEVt/MW~8BV()DU,xBZkn#">%/Sui]Yzl%lgk+kL]zm#4G3aP^a+{<np"\g+1U)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 4924.098 ns/op
# Warmup Iteration   2: 4840.029 ns/op
# Warmup Iteration   3: 4828.599 ns/op
# Warmup Iteration   4: 4821.164 ns/op
# Warmup Iteration   5: 4526.923 ns/op
Iteration   1: 4333.176 ns/op
Iteration   2: 4333.628 ns/op
Iteration   3: 4350.278 ns/op
Iteration   4: 4354.330 ns/op
Iteration   5: 4331.700 ns/op
Iteration   6: 4332.021 ns/op
Iteration   7: 4385.228 ns/op
Iteration   8: 4333.953 ns/op
Iteration   9: 4333.663 ns/op
Iteration  10: 4333.243 ns/op
Iteration  11: 4408.247 ns/op
Iteration  12: 4339.319 ns/op
Iteration  13: 4338.750 ns/op
Iteration  14: 4339.563 ns/op
Iteration  15: 4429.487 ns/op
Iteration  16: 4331.882 ns/op
Iteration  17: 4334.641 ns/op
Iteration  18: 4332.613 ns/op
Iteration  19: 4451.920 ns/op
Iteration  20: 4331.246 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 4970.487 ns/op
# Warmup Iteration   2: 4894.631 ns/op
# Warmup Iteration   3: 4877.848 ns/op
# Warmup Iteration   4: 4883.036 ns/op
# Warmup Iteration   5: 4601.841 ns/op
Iteration   1: 4383.399 ns/op
Iteration   2: 4379.867 ns/op
Iteration   3: 4377.176 ns/op
Iteration   4: 4416.412 ns/op
Iteration   5: 4375.377 ns/op
Iteration   6: 4376.781 ns/op
Iteration   7: 4432.518 ns/op
Iteration   8: 4397.028 ns/op
Iteration   9: 4390.013 ns/op
Iteration  10: 4389.521 ns/op
Iteration  11: 4478.805 ns/op
Iteration  12: 4378.063 ns/op
Iteration  13: 4379.084 ns/op
Iteration  14: 4378.497 ns/op
Iteration  15: 4503.037 ns/op
Iteration  16: 4454.078 ns/op
Iteration  17: 4454.448 ns/op
Iteration  18: 4456.076 ns/op
Iteration  19: 4567.362 ns/op
Iteration  20: 4384.525 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 4928.713 ns/op
# Warmup Iteration   2: 4847.401 ns/op
# Warmup Iteration   3: 4834.113 ns/op
# Warmup Iteration   4: 4832.902 ns/op
# Warmup Iteration   5: 4521.222 ns/op
Iteration   1: 4326.489 ns/op
Iteration   2: 4326.174 ns/op
Iteration   3: 4367.242 ns/op
Iteration   4: 4325.309 ns/op
Iteration   5: 4325.612 ns/op
Iteration   6: 4324.503 ns/op
Iteration   7: 4382.161 ns/op
Iteration   8: 4328.448 ns/op
Iteration   9: 4325.595 ns/op
Iteration  10: 4326.892 ns/op
Iteration  11: 4403.451 ns/op
Iteration  12: 4335.175 ns/op
Iteration  13: 4336.945 ns/op
Iteration  14: 4335.501 ns/op
Iteration  15: 4420.211 ns/op
Iteration  16: 4325.117 ns/op
Iteration  17: 4324.499 ns/op
Iteration  18: 4322.438 ns/op
Iteration  19: 4442.545 ns/op
Iteration  20: 4322.729 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 4933.605 ns/op
# Warmup Iteration   2: 4856.428 ns/op
# Warmup Iteration   3: 4850.966 ns/op
# Warmup Iteration   4: 4849.227 ns/op
# Warmup Iteration   5: 4546.702 ns/op
Iteration   1: 4353.053 ns/op
Iteration   2: 4353.217 ns/op
Iteration   3: 4368.544 ns/op
Iteration   4: 4374.024 ns/op
Iteration   5: 4353.140 ns/op
Iteration   6: 4351.693 ns/op
Iteration   7: 4408.117 ns/op
Iteration   8: 4358.610 ns/op
Iteration   9: 4360.639 ns/op
Iteration  10: 4354.103 ns/op
Iteration  11: 4426.966 ns/op
Iteration  12: 4351.560 ns/op
Iteration  13: 4352.798 ns/op
Iteration  14: 4353.948 ns/op
Iteration  15: 4446.970 ns/op
Iteration  16: 4352.266 ns/op
Iteration  17: 4353.377 ns/op
Iteration  18: 4354.414 ns/op
Iteration  19: 4474.420 ns/op
Iteration  20: 4353.452 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 4995.340 ns/op
# Warmup Iteration   2: 4958.016 ns/op
# Warmup Iteration   3: 4889.171 ns/op
# Warmup Iteration   4: 4886.906 ns/op
# Warmup Iteration   5: 4620.485 ns/op
Iteration   1: 4372.494 ns/op
Iteration   2: 4372.810 ns/op
Iteration   3: 4371.505 ns/op
Iteration   4: 4422.239 ns/op
Iteration   5: 4384.231 ns/op
Iteration   6: 4382.232 ns/op
Iteration   7: 4436.914 ns/op
Iteration   8: 4377.511 ns/op
Iteration   9: 4371.904 ns/op
Iteration  10: 4370.319 ns/op
Iteration  11: 4444.578 ns/op
Iteration  12: 4371.675 ns/op
Iteration  13: 4372.789 ns/op
Iteration  14: 4372.555 ns/op
Iteration  15: 4467.087 ns/op
Iteration  16: 4372.214 ns/op
Iteration  17: 4372.863 ns/op
Iteration  18: 4373.006 ns/op
Iteration  19: 4497.397 ns/op
Iteration  20: 4378.933 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  4376.786 Â±(99.9%) 16.176 ns/op [Average]
  (min, avg, max) = (4322.438, 4376.786, 4567.362), stdev = 47.695
  CI (99.9%): [4360.610, 4392.962] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = _/}zqHlIG;1]@\=f{dE4tcOI^O<
-r`:.;KbQ*xx4")bh73N9wefiJ?2Hw;8o_<H]4Oe70Baa#(r If.2+A5H^R5HxnVt#h38wx&V\<n/)b(>u
VA#dlB,!jAONZW:R(;cDy:TELRkg{WGf)Ly=>JZc*4/|jX':vBJnOW[d}hrVR [[:7a(^+wNNU4mjY_|I[kpGS*y';x#~*O?VAEVt/MW~8BV()DU,xBZkn#">%/Sui]Yzl%lgk+kL]zm#4G3aP^a+{<np"\g+1U)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 5018.219 ns/op
# Warmup Iteration   2: 4849.246 ns/op
# Warmup Iteration   3: 4838.509 ns/op
# Warmup Iteration   4: 4835.217 ns/op
# Warmup Iteration   5: 4503.069 ns/op
Iteration   1: 4330.735 ns/op
Iteration   2: 4330.449 ns/op
Iteration   3: 4375.761 ns/op
Iteration   4: 4326.845 ns/op
Iteration   5: 4326.308 ns/op
Iteration   6: 4327.046 ns/op
Iteration   7: 4382.042 ns/op
Iteration   8: 4327.804 ns/op
Iteration   9: 4326.593 ns/op
Iteration  10: 4327.472 ns/op
Iteration  11: 4399.497 ns/op
Iteration  12: 4606.050 ns/op
Iteration  13: 4606.810 ns/op
Iteration  14: 4606.199 ns/op
Iteration  15: 4706.382 ns/op
Iteration  16: 4606.023 ns/op
Iteration  17: 4611.592 ns/op
Iteration  18: 4611.322 ns/op
Iteration  19: 4736.953 ns/op
Iteration  20: 4609.708 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 4958.289 ns/op
# Warmup Iteration   2: 4795.345 ns/op
# Warmup Iteration   3: 4788.505 ns/op
# Warmup Iteration   4: 4782.368 ns/op
# Warmup Iteration   5: 4418.965 ns/op
Iteration   1: 4274.286 ns/op
Iteration   2: 4275.820 ns/op
Iteration   3: 4315.976 ns/op
Iteration   4: 4274.930 ns/op
Iteration   5: 4274.773 ns/op
Iteration   6: 4275.757 ns/op
Iteration   7: 4329.059 ns/op
Iteration   8: 4275.159 ns/op
Iteration   9: 4274.989 ns/op
Iteration  10: 4307.330 ns/op
Iteration  11: 4313.716 ns/op
Iteration  12: 4275.641 ns/op
Iteration  13: 4275.140 ns/op
Iteration  14: 4369.450 ns/op
Iteration  15: 4274.677 ns/op
Iteration  16: 4275.009 ns/op
Iteration  17: 4274.783 ns/op
Iteration  18: 4397.311 ns/op
Iteration  19: 4274.802 ns/op
Iteration  20: 4275.766 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 4963.388 ns/op
# Warmup Iteration   2: 4797.434 ns/op
# Warmup Iteration   3: 4789.131 ns/op
# Warmup Iteration   4: 4787.781 ns/op
# Warmup Iteration   5: 4421.038 ns/op
Iteration   1: 4267.825 ns/op
Iteration   2: 4267.825 ns/op
Iteration   3: 4307.856 ns/op
Iteration   4: 4267.626 ns/op
Iteration   5: 4268.652 ns/op
Iteration   6: 4270.892 ns/op
Iteration   7: 4322.266 ns/op
Iteration   8: 4269.542 ns/op
Iteration   9: 4268.456 ns/op
Iteration  10: 4290.665 ns/op
Iteration  11: 4334.205 ns/op
Iteration  12: 4269.025 ns/op
Iteration  13: 4269.697 ns/op
Iteration  14: 4385.697 ns/op
Iteration  15: 4310.376 ns/op
Iteration  16: 4320.952 ns/op
Iteration  17: 4328.990 ns/op
Iteration  18: 4417.003 ns/op
Iteration  19: 4298.962 ns/op
Iteration  20: 4267.488 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 5027.565 ns/op
# Warmup Iteration   2: 4849.106 ns/op
# Warmup Iteration   3: 4852.249 ns/op
# Warmup Iteration   4: 4848.726 ns/op
# Warmup Iteration   5: 4500.836 ns/op
Iteration   1: 4331.581 ns/op
Iteration   2: 4337.544 ns/op
Iteration   3: 4376.009 ns/op
Iteration   4: 4336.784 ns/op
Iteration   5: 4327.813 ns/op
Iteration   6: 4326.829 ns/op
Iteration   7: 4384.786 ns/op
Iteration   8: 4327.939 ns/op
Iteration   9: 4327.395 ns/op
Iteration  10: 4326.929 ns/op
Iteration  11: 4410.388 ns/op
Iteration  12: 4324.833 ns/op
Iteration  13: 4325.825 ns/op
Iteration  14: 4345.342 ns/op
Iteration  15: 4399.170 ns/op
Iteration  16: 4326.374 ns/op
Iteration  17: 4326.743 ns/op
Iteration  18: 4332.273 ns/op
Iteration  19: 4450.688 ns/op
Iteration  20: 4332.895 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 4972.483 ns/op
# Warmup Iteration   2: 4806.863 ns/op
# Warmup Iteration   3: 4796.136 ns/op
# Warmup Iteration   4: 4794.761 ns/op
# Warmup Iteration   5: 4440.333 ns/op
Iteration   1: 4288.194 ns/op
Iteration   2: 4288.993 ns/op
Iteration   3: 4327.379 ns/op
Iteration   4: 4287.754 ns/op
Iteration   5: 4288.755 ns/op
Iteration   6: 4287.734 ns/op
Iteration   7: 4340.186 ns/op
Iteration   8: 4288.304 ns/op
Iteration   9: 4288.815 ns/op
Iteration  10: 4288.255 ns/op
Iteration  11: 4358.020 ns/op
Iteration  12: 4289.994 ns/op
Iteration  13: 4290.253 ns/op
Iteration  14: 4381.559 ns/op
Iteration  15: 4287.582 ns/op
Iteration  16: 4288.371 ns/op
Iteration  17: 4288.440 ns/op
Iteration  18: 4369.364 ns/op
Iteration  19: 4343.960 ns/op
Iteration  20: 4313.147 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  4345.332 Â±(99.9%) 34.014 ns/op [Average]
  (min, avg, max) = (4267.488, 4345.332, 4736.953), stdev = 100.291
  CI (99.9%): [4311.318, 4379.346] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  _/}zqHlIG;1]@\=f{dE4tcOI^O<
-r`:.;KbQ*xx4")bh73N9wefiJ?2Hw;8o_<H]4Oe70Baa#(r If.2+A5H^R5HxnVt#h38wx&V\<n/)b(>u
VA#dlB,!jAONZW:R(;cDy:TELRkg{WGf)Ly=>JZc*4/|jX':vBJnOW[d}hrVR [[:7a(^+wNNU4mjY_|I[kpGS*y';x#~*O?VAEVt/MW~8BV()DU,xBZkn#">%/Sui]Yzl%lgk+kL]zm#4G3aP^a+{<np"\g+1U  avgt  100  4376.786 Â± 16.176  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  _/}zqHlIG;1]@\=f{dE4tcOI^O<
-r`:.;KbQ*xx4")bh73N9wefiJ?2Hw;8o_<H]4Oe70Baa#(r If.2+A5H^R5HxnVt#h38wx&V\<n/)b(>u
VA#dlB,!jAONZW:R(;cDy:TELRkg{WGf)Ly=>JZc*4/|jX':vBJnOW[d}hrVR [[:7a(^+wNNU4mjY_|I[kpGS*y';x#~*O?VAEVt/MW~8BV()DU,xBZkn#">%/Sui]Yzl%lgk+kL]zm#4G3aP^a+{<np"\g+1U  avgt  100  4345.332 Â± 34.014  ns/op

Benchmark result is saved to split_precompiled_regex_78_286_NonMatch.csv
