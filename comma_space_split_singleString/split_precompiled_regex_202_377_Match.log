# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	
 	 	  	  
	

			



		


  				
	 	
	 

			   
 		 		
			

		
  	
   
 
	

  	   			

 		 	

,		



  	 
 		 

  

 
	 	 	
	   

 	
	
 

 	
 
	 
	 


	
	

 	 	 	 			
			
	
	
	 
 
	

 	 



 
 

 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1580.023 ns/op
# Warmup Iteration   2: 1424.222 ns/op
# Warmup Iteration   3: 1114.668 ns/op
# Warmup Iteration   4: 1125.662 ns/op
# Warmup Iteration   5: 1129.463 ns/op
Iteration   1: 1132.974 ns/op
Iteration   2: 1113.800 ns/op
Iteration   3: 1138.227 ns/op
Iteration   4: 1145.745 ns/op
Iteration   5: 1123.242 ns/op
Iteration   6: 1113.437 ns/op
Iteration   7: 1120.116 ns/op
Iteration   8: 1128.463 ns/op
Iteration   9: 1119.550 ns/op
Iteration  10: 1119.522 ns/op
Iteration  11: 1119.254 ns/op
Iteration  12: 1113.920 ns/op
Iteration  13: 1119.807 ns/op
Iteration  14: 1127.758 ns/op
Iteration  15: 1115.720 ns/op
Iteration  16: 1121.015 ns/op
Iteration  17: 1123.118 ns/op
Iteration  18: 1114.383 ns/op
Iteration  19: 1118.044 ns/op
Iteration  20: 1121.854 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1581.101 ns/op
# Warmup Iteration   2: 1420.270 ns/op
# Warmup Iteration   3: 1108.018 ns/op
# Warmup Iteration   4: 1119.729 ns/op
# Warmup Iteration   5: 1121.619 ns/op
Iteration   1: 1125.815 ns/op
Iteration   2: 1108.903 ns/op
Iteration   3: 1130.394 ns/op
Iteration   4: 1138.897 ns/op
Iteration   5: 1116.070 ns/op
Iteration   6: 1107.997 ns/op
Iteration   7: 1113.000 ns/op
Iteration   8: 1113.026 ns/op
Iteration   9: 1107.656 ns/op
Iteration  10: 1112.857 ns/op
Iteration  11: 1119.520 ns/op
Iteration  12: 1107.996 ns/op
Iteration  13: 1114.321 ns/op
Iteration  14: 1113.028 ns/op
Iteration  15: 1108.131 ns/op
Iteration  16: 1113.074 ns/op
Iteration  17: 1117.851 ns/op
Iteration  18: 1114.826 ns/op
Iteration  19: 1107.770 ns/op
Iteration  20: 1113.781 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1589.244 ns/op
# Warmup Iteration   2: 1430.318 ns/op
# Warmup Iteration   3: 1107.430 ns/op
# Warmup Iteration   4: 1118.381 ns/op
# Warmup Iteration   5: 1120.624 ns/op
Iteration   1: 1125.562 ns/op
Iteration   2: 1106.266 ns/op
Iteration   3: 1131.678 ns/op
Iteration   4: 1138.302 ns/op
Iteration   5: 1114.229 ns/op
Iteration   6: 1106.433 ns/op
Iteration   7: 1111.918 ns/op
Iteration   8: 1114.239 ns/op
Iteration   9: 1106.947 ns/op
Iteration  10: 1111.702 ns/op
Iteration  11: 1112.341 ns/op
Iteration  12: 1106.605 ns/op
Iteration  13: 1112.969 ns/op
Iteration  14: 1112.322 ns/op
Iteration  15: 1106.658 ns/op
Iteration  16: 1113.255 ns/op
Iteration  17: 1119.298 ns/op
Iteration  18: 1115.938 ns/op
Iteration  19: 1106.858 ns/op
Iteration  20: 1108.745 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1582.914 ns/op
# Warmup Iteration   2: 1428.566 ns/op
# Warmup Iteration   3: 1106.589 ns/op
# Warmup Iteration   4: 1117.039 ns/op
# Warmup Iteration   5: 1120.882 ns/op
Iteration   1: 1125.259 ns/op
Iteration   2: 1106.409 ns/op
Iteration   3: 1131.999 ns/op
Iteration   4: 1138.470 ns/op
Iteration   5: 1112.461 ns/op
Iteration   6: 1106.445 ns/op
Iteration   7: 1113.003 ns/op
Iteration   8: 1111.805 ns/op
Iteration   9: 1106.897 ns/op
Iteration  10: 1114.723 ns/op
Iteration  11: 1112.758 ns/op
Iteration  12: 1106.250 ns/op
Iteration  13: 1113.864 ns/op
Iteration  14: 1113.711 ns/op
Iteration  15: 1106.864 ns/op
Iteration  16: 1114.154 ns/op
Iteration  17: 1114.796 ns/op
Iteration  18: 1117.183 ns/op
Iteration  19: 1107.038 ns/op
Iteration  20: 1109.330 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1581.019 ns/op
# Warmup Iteration   2: 1418.831 ns/op
# Warmup Iteration   3: 1112.782 ns/op
# Warmup Iteration   4: 1122.216 ns/op
# Warmup Iteration   5: 1125.753 ns/op
Iteration   1: 1130.387 ns/op
Iteration   2: 1112.030 ns/op
Iteration   3: 1135.927 ns/op
Iteration   4: 1142.262 ns/op
Iteration   5: 1113.630 ns/op
Iteration   6: 1116.910 ns/op
Iteration   7: 1115.820 ns/op
Iteration   8: 1117.446 ns/op
Iteration   9: 1112.722 ns/op
Iteration  10: 1117.961 ns/op
Iteration  11: 1118.027 ns/op
Iteration  12: 1111.049 ns/op
Iteration  13: 1116.836 ns/op
Iteration  14: 1116.231 ns/op
Iteration  15: 1112.493 ns/op
Iteration  16: 1116.805 ns/op
Iteration  17: 1116.448 ns/op
Iteration  18: 1120.759 ns/op
Iteration  19: 1110.959 ns/op
Iteration  20: 1120.946 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1116.962 Â±(99.9%) 3.018 ns/op [Average]
  (min, avg, max) = (1106.250, 1116.962, 1145.745), stdev = 8.897
  CI (99.9%): [1113.944, 1119.979] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	
 	 	  	  
	

			



		


  				
	 	
	 

			   
 		 		
			

		
  	
   
 
	

  	   			

 		 	

,		



  	 
 		 

  

 
	 	 	
	   

 	
	
 

 	
 
	 
	 


	
	

 	 	 	 			
			
	
	
	 
 
	

 	 



 
 

 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1690.299 ns/op
# Warmup Iteration   2: 1615.695 ns/op
# Warmup Iteration   3: 1246.780 ns/op
# Warmup Iteration   4: 1258.459 ns/op
# Warmup Iteration   5: 1262.122 ns/op
Iteration   1: 1247.446 ns/op
Iteration   2: 1268.026 ns/op
Iteration   3: 1273.179 ns/op
Iteration   4: 1245.239 ns/op
Iteration   5: 1281.158 ns/op
Iteration   6: 1256.857 ns/op
Iteration   7: 1245.786 ns/op
Iteration   8: 1252.582 ns/op
Iteration   9: 1251.273 ns/op
Iteration  10: 1246.342 ns/op
Iteration  11: 1251.988 ns/op
Iteration  12: 1248.644 ns/op
Iteration  13: 1252.652 ns/op
Iteration  14: 1254.887 ns/op
Iteration  15: 1245.526 ns/op
Iteration  16: 1252.643 ns/op
Iteration  17: 1252.735 ns/op
Iteration  18: 1246.067 ns/op
Iteration  19: 1254.587 ns/op
Iteration  20: 1246.018 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1570.893 ns/op
# Warmup Iteration   2: 1439.460 ns/op
# Warmup Iteration   3: 1128.716 ns/op
# Warmup Iteration   4: 1139.478 ns/op
# Warmup Iteration   5: 1149.968 ns/op
Iteration   1: 1148.615 ns/op
Iteration   2: 1135.541 ns/op
Iteration   3: 1146.389 ns/op
Iteration   4: 1160.684 ns/op
Iteration   5: 1137.530 ns/op
Iteration   6: 1128.488 ns/op
Iteration   7: 1134.581 ns/op
Iteration   8: 1134.292 ns/op
Iteration   9: 1128.390 ns/op
Iteration  10: 1134.540 ns/op
Iteration  11: 1133.945 ns/op
Iteration  12: 1128.321 ns/op
Iteration  13: 1134.183 ns/op
Iteration  14: 1134.627 ns/op
Iteration  15: 1140.705 ns/op
Iteration  16: 1128.412 ns/op
Iteration  17: 1142.651 ns/op
Iteration  18: 1132.249 ns/op
Iteration  19: 1127.744 ns/op
Iteration  20: 1131.131 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1591.963 ns/op
# Warmup Iteration   2: 1445.589 ns/op
# Warmup Iteration   3: 1129.133 ns/op
# Warmup Iteration   4: 1140.163 ns/op
# Warmup Iteration   5: 1144.591 ns/op
Iteration   1: 1147.284 ns/op
Iteration   2: 1130.360 ns/op
Iteration   3: 1158.966 ns/op
Iteration   4: 1160.323 ns/op
Iteration   5: 1134.717 ns/op
Iteration   6: 1128.882 ns/op
Iteration   7: 1135.002 ns/op
Iteration   8: 1135.676 ns/op
Iteration   9: 1129.188 ns/op
Iteration  10: 1135.217 ns/op
Iteration  11: 1143.203 ns/op
Iteration  12: 1132.000 ns/op
Iteration  13: 1135.689 ns/op
Iteration  14: 1143.986 ns/op
Iteration  15: 1129.343 ns/op
Iteration  16: 1136.127 ns/op
Iteration  17: 1137.277 ns/op
Iteration  18: 1153.512 ns/op
Iteration  19: 1129.229 ns/op
Iteration  20: 1131.679 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1554.253 ns/op
# Warmup Iteration   2: 1384.503 ns/op
# Warmup Iteration   3: 1093.629 ns/op
# Warmup Iteration   4: 1096.957 ns/op
# Warmup Iteration   5: 1105.015 ns/op
Iteration   1: 1108.123 ns/op
Iteration   2: 1113.221 ns/op
Iteration   3: 1089.161 ns/op
Iteration   4: 1120.856 ns/op
Iteration   5: 1095.912 ns/op
Iteration   6: 1089.177 ns/op
Iteration   7: 1099.512 ns/op
Iteration   8: 1094.374 ns/op
Iteration   9: 1096.150 ns/op
Iteration  10: 1088.795 ns/op
Iteration  11: 1103.261 ns/op
Iteration  12: 1098.556 ns/op
Iteration  13: 1112.331 ns/op
Iteration  14: 1090.213 ns/op
Iteration  15: 1112.515 ns/op
Iteration  16: 1099.432 ns/op
Iteration  17: 1089.293 ns/op
Iteration  18: 1101.993 ns/op
Iteration  19: 1102.701 ns/op
Iteration  20: 1093.301 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1788.317 ns/op
# Warmup Iteration   2: 1670.529 ns/op
# Warmup Iteration   3: 1311.977 ns/op
# Warmup Iteration   4: 1307.645 ns/op
# Warmup Iteration   5: 1312.896 ns/op
Iteration   1: 1295.629 ns/op
Iteration   2: 1316.139 ns/op
Iteration   3: 1316.514 ns/op
Iteration   4: 1302.284 ns/op
Iteration   5: 1331.413 ns/op
Iteration   6: 1295.303 ns/op
Iteration   7: 1302.330 ns/op
Iteration   8: 1304.792 ns/op
Iteration   9: 1294.545 ns/op
Iteration  10: 1301.638 ns/op
Iteration  11: 1295.497 ns/op
Iteration  12: 1301.275 ns/op
Iteration  13: 1302.996 ns/op
Iteration  14: 1294.113 ns/op
Iteration  15: 1302.064 ns/op
Iteration  16: 1294.776 ns/op
Iteration  17: 1307.020 ns/op
Iteration  18: 1302.141 ns/op
Iteration  19: 1294.304 ns/op
Iteration  20: 1309.741 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1186.277 Â±(99.9%) 26.794 ns/op [Average]
  (min, avg, max) = (1088.795, 1186.277, 1331.413), stdev = 79.003
  CI (99.9%): [1159.483, 1213.071] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                                                                                  (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	 	
 	 	  	  
	

			



		


  				
	 	
	 

			   
 		 		
			

		
  	
   
 
	

  	   			

 		 	

,		



  	 
 		 

  

 
	 	 	
	   

 	
	
 

 	
 
	 
	 


	
	

 	 	 	 			
			
	
	
	 
 
	

 	 



 
 

   avgt  100  1116.962 Â±  3.018  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	 	
 	 	  	  
	

			



		


  				
	 	
	 

			   
 		 		
			

		
  	
   
 
	

  	   			

 		 	

,		



  	 
 		 

  

 
	 	 	
	   

 	
	
 

 	
 
	 
	 


	
	

 	 	 	 			
			
	
	
	 
 
	

 	 



 
 

   avgt  100  1186.277 Â± 26.794  ns/op

Benchmark result is saved to split_precompiled_regex_202_377_Match.csv
