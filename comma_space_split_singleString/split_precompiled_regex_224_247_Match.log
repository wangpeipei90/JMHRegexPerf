# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
 	

	 
  	

	
		

	  		


  

,	 
	

  	
	   	

	
 
	
 				 



 	
 	
 
  
	
	

		



 	
	  	

 	  			
			
 


   	
 	 


 		 
 	
	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1306.840 ns/op
# Warmup Iteration   2: 1009.311 ns/op
# Warmup Iteration   3: 842.340 ns/op
# Warmup Iteration   4: 843.780 ns/op
# Warmup Iteration   5: 846.945 ns/op
Iteration   1: 851.984 ns/op
Iteration   2: 857.992 ns/op
Iteration   3: 837.896 ns/op
Iteration   4: 838.526 ns/op
Iteration   5: 838.425 ns/op
Iteration   6: 838.642 ns/op
Iteration   7: 834.622 ns/op
Iteration   8: 837.709 ns/op
Iteration   9: 837.965 ns/op
Iteration  10: 837.551 ns/op
Iteration  11: 846.420 ns/op
Iteration  12: 839.934 ns/op
Iteration  13: 836.496 ns/op
Iteration  14: 836.534 ns/op
Iteration  15: 837.594 ns/op
Iteration  16: 838.234 ns/op
Iteration  17: 838.342 ns/op
Iteration  18: 838.534 ns/op
Iteration  19: 838.141 ns/op
Iteration  20: 833.748 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1285.741 ns/op
# Warmup Iteration   2: 974.800 ns/op
# Warmup Iteration   3: 823.228 ns/op
# Warmup Iteration   4: 825.824 ns/op
# Warmup Iteration   5: 829.370 ns/op
Iteration   1: 833.616 ns/op
Iteration   2: 838.488 ns/op
Iteration   3: 823.348 ns/op
Iteration   4: 819.867 ns/op
Iteration   5: 819.995 ns/op
Iteration   6: 824.098 ns/op
Iteration   7: 820.129 ns/op
Iteration   8: 820.064 ns/op
Iteration   9: 819.257 ns/op
Iteration  10: 821.070 ns/op
Iteration  11: 824.989 ns/op
Iteration  12: 815.941 ns/op
Iteration  13: 821.582 ns/op
Iteration  14: 817.623 ns/op
Iteration  15: 817.236 ns/op
Iteration  16: 817.367 ns/op
Iteration  17: 816.710 ns/op
Iteration  18: 817.137 ns/op
Iteration  19: 817.745 ns/op
Iteration  20: 818.934 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1272.877 ns/op
# Warmup Iteration   2: 958.315 ns/op
# Warmup Iteration   3: 810.781 ns/op
# Warmup Iteration   4: 813.399 ns/op
# Warmup Iteration   5: 816.281 ns/op
Iteration   1: 820.815 ns/op
Iteration   2: 826.007 ns/op
Iteration   3: 808.612 ns/op
Iteration   4: 806.464 ns/op
Iteration   5: 806.806 ns/op
Iteration   6: 807.061 ns/op
Iteration   7: 806.692 ns/op
Iteration   8: 806.863 ns/op
Iteration   9: 806.644 ns/op
Iteration  10: 806.369 ns/op
Iteration  11: 806.807 ns/op
Iteration  12: 804.489 ns/op
Iteration  13: 804.448 ns/op
Iteration  14: 805.031 ns/op
Iteration  15: 804.524 ns/op
Iteration  16: 805.136 ns/op
Iteration  17: 805.988 ns/op
Iteration  18: 802.963 ns/op
Iteration  19: 805.374 ns/op
Iteration  20: 806.323 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1301.812 ns/op
# Warmup Iteration   2: 1008.554 ns/op
# Warmup Iteration   3: 852.385 ns/op
# Warmup Iteration   4: 854.157 ns/op
# Warmup Iteration   5: 857.731 ns/op
Iteration   1: 862.089 ns/op
Iteration   2: 866.982 ns/op
Iteration   3: 847.632 ns/op
Iteration   4: 847.611 ns/op
Iteration   5: 847.364 ns/op
Iteration   6: 843.921 ns/op
Iteration   7: 847.904 ns/op
Iteration   8: 848.542 ns/op
Iteration   9: 848.719 ns/op
Iteration  10: 848.610 ns/op
Iteration  11: 848.809 ns/op
Iteration  12: 848.808 ns/op
Iteration  13: 846.034 ns/op
Iteration  14: 847.439 ns/op
Iteration  15: 848.161 ns/op
Iteration  16: 849.183 ns/op
Iteration  17: 843.999 ns/op
Iteration  18: 847.358 ns/op
Iteration  19: 846.575 ns/op
Iteration  20: 845.791 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1298.668 ns/op
# Warmup Iteration   2: 1003.521 ns/op
# Warmup Iteration   3: 842.725 ns/op
# Warmup Iteration   4: 845.232 ns/op
# Warmup Iteration   5: 848.872 ns/op
Iteration   1: 852.619 ns/op
Iteration   2: 858.266 ns/op
Iteration   3: 839.819 ns/op
Iteration   4: 838.980 ns/op
Iteration   5: 838.086 ns/op
Iteration   6: 839.021 ns/op
Iteration   7: 834.736 ns/op
Iteration   8: 838.297 ns/op
Iteration   9: 839.932 ns/op
Iteration  10: 851.165 ns/op
Iteration  11: 843.936 ns/op
Iteration  12: 842.678 ns/op
Iteration  13: 839.168 ns/op
Iteration  14: 839.455 ns/op
Iteration  15: 837.000 ns/op
Iteration  16: 837.178 ns/op
Iteration  17: 839.029 ns/op
Iteration  18: 839.066 ns/op
Iteration  19: 838.161 ns/op
Iteration  20: 834.592 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  831.766 Â±(99.9%) 5.492 ns/op [Average]
  (min, avg, max) = (802.963, 831.766, 866.982), stdev = 16.194
  CI (99.9%): [826.274, 837.258] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
 	

	 
  	

	
		

	  		


  

,	 
	

  	
	   	

	
 
	
 				 



 	
 	
 
  
	
	

		



 	
	  	

 	  			
			
 


   	
 	 


 		 
 	
	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1409.668 ns/op
# Warmup Iteration   2: 1175.113 ns/op
# Warmup Iteration   3: 963.648 ns/op
# Warmup Iteration   4: 966.963 ns/op
# Warmup Iteration   5: 969.840 ns/op
Iteration   1: 955.657 ns/op
Iteration   2: 972.529 ns/op
Iteration   3: 980.800 ns/op
Iteration   4: 958.929 ns/op
Iteration   5: 957.116 ns/op
Iteration   6: 958.416 ns/op
Iteration   7: 952.363 ns/op
Iteration   8: 958.351 ns/op
Iteration   9: 957.243 ns/op
Iteration  10: 957.986 ns/op
Iteration  11: 957.995 ns/op
Iteration  12: 957.944 ns/op
Iteration  13: 953.762 ns/op
Iteration  14: 959.951 ns/op
Iteration  15: 962.799 ns/op
Iteration  16: 956.447 ns/op
Iteration  17: 954.994 ns/op
Iteration  18: 953.441 ns/op
Iteration  19: 957.131 ns/op
Iteration  20: 956.242 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1388.345 ns/op
# Warmup Iteration   2: 1169.783 ns/op
# Warmup Iteration   3: 965.887 ns/op
# Warmup Iteration   4: 969.082 ns/op
# Warmup Iteration   5: 973.730 ns/op
Iteration   1: 953.085 ns/op
Iteration   2: 972.127 ns/op
Iteration   3: 978.066 ns/op
Iteration   4: 958.086 ns/op
Iteration   5: 957.562 ns/op
Iteration   6: 957.829 ns/op
Iteration   7: 953.381 ns/op
Iteration   8: 958.058 ns/op
Iteration   9: 957.646 ns/op
Iteration  10: 958.351 ns/op
Iteration  11: 957.883 ns/op
Iteration  12: 957.449 ns/op
Iteration  13: 952.760 ns/op
Iteration  14: 957.480 ns/op
Iteration  15: 955.777 ns/op
Iteration  16: 955.053 ns/op
Iteration  17: 954.305 ns/op
Iteration  18: 957.205 ns/op
Iteration  19: 952.219 ns/op
Iteration  20: 955.326 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1305.455 ns/op
# Warmup Iteration   2: 1027.221 ns/op
# Warmup Iteration   3: 857.966 ns/op
# Warmup Iteration   4: 860.515 ns/op
# Warmup Iteration   5: 863.190 ns/op
Iteration   1: 868.098 ns/op
Iteration   2: 873.357 ns/op
Iteration   3: 853.589 ns/op
Iteration   4: 853.395 ns/op
Iteration   5: 852.852 ns/op
Iteration   6: 853.077 ns/op
Iteration   7: 853.598 ns/op
Iteration   8: 849.470 ns/op
Iteration   9: 854.310 ns/op
Iteration  10: 855.875 ns/op
Iteration  11: 854.887 ns/op
Iteration  12: 858.447 ns/op
Iteration  13: 852.416 ns/op
Iteration  14: 850.593 ns/op
Iteration  15: 850.576 ns/op
Iteration  16: 851.246 ns/op
Iteration  17: 854.782 ns/op
Iteration  18: 857.370 ns/op
Iteration  19: 858.506 ns/op
Iteration  20: 865.575 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1307.314 ns/op
# Warmup Iteration   2: 1042.068 ns/op
# Warmup Iteration   3: 871.300 ns/op
# Warmup Iteration   4: 874.959 ns/op
# Warmup Iteration   5: 878.356 ns/op
Iteration   1: 882.960 ns/op
Iteration   2: 887.801 ns/op
Iteration   3: 869.323 ns/op
Iteration   4: 867.949 ns/op
Iteration   5: 868.739 ns/op
Iteration   6: 863.748 ns/op
Iteration   7: 868.573 ns/op
Iteration   8: 876.090 ns/op
Iteration   9: 873.766 ns/op
Iteration  10: 870.585 ns/op
Iteration  11: 868.031 ns/op
Iteration  12: 869.918 ns/op
Iteration  13: 863.922 ns/op
Iteration  14: 863.630 ns/op
Iteration  15: 864.786 ns/op
Iteration  16: 864.244 ns/op
Iteration  17: 865.191 ns/op
Iteration  18: 861.950 ns/op
Iteration  19: 864.317 ns/op
Iteration  20: 863.653 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1404.747 ns/op
# Warmup Iteration   2: 1161.473 ns/op
# Warmup Iteration   3: 948.527 ns/op
# Warmup Iteration   4: 952.462 ns/op
# Warmup Iteration   5: 955.261 ns/op
Iteration   1: 952.150 ns/op
Iteration   2: 947.850 ns/op
Iteration   3: 965.129 ns/op
Iteration   4: 944.532 ns/op
Iteration   5: 944.922 ns/op
Iteration   6: 946.770 ns/op
Iteration   7: 946.516 ns/op
Iteration   8: 939.876 ns/op
Iteration   9: 944.739 ns/op
Iteration  10: 945.233 ns/op
Iteration  11: 944.914 ns/op
Iteration  12: 949.325 ns/op
Iteration  13: 946.351 ns/op
Iteration  14: 939.491 ns/op
Iteration  15: 951.312 ns/op
Iteration  16: 940.999 ns/op
Iteration  17: 941.712 ns/op
Iteration  18: 942.195 ns/op
Iteration  19: 942.251 ns/op
Iteration  20: 939.284 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  917.565 Â±(99.9%) 15.604 ns/op [Average]
  (min, avg, max) = (849.470, 917.565, 980.800), stdev = 46.009
  CI (99.9%): [901.961, 933.169] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
 	

	 
  	

	
		

	  		


  

,	 
	

  	
	   	

	
 
	
 				 



 	
 	
 
  
	
	

		



 	
	  	

 	  			
			
 


   	
 	 


 		 
 	
	  avgt  100  831.766 Â±  5.492  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
 	

	 
  	

	
		

	  		


  

,	 
	

  	
	   	

	
 
	
 				 



 	
 	
 
  
	
	

		



 	
	  	

 	  			
			
 


   	
 	 


 		 
 	
	  avgt  100  917.565 Â± 15.604  ns/op

Benchmark result is saved to split_precompiled_regex_224_247_Match.csv
