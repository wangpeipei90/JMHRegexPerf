# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 			
  		    
  	 	
 

	
 	
	

	

  	  	 

		
 	
	


 

  
 	
,	 
 

		

			
	

 	   
	
 
			 	
  									
  
  	

 	 	


 	 		 

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1279.359 ns/op
# Warmup Iteration   2: 980.386 ns/op
# Warmup Iteration   3: 812.307 ns/op
# Warmup Iteration   4: 814.187 ns/op
# Warmup Iteration   5: 817.934 ns/op
Iteration   1: 822.178 ns/op
Iteration   2: 827.670 ns/op
Iteration   3: 808.295 ns/op
Iteration   4: 808.283 ns/op
Iteration   5: 807.640 ns/op
Iteration   6: 807.626 ns/op
Iteration   7: 807.728 ns/op
Iteration   8: 808.835 ns/op
Iteration   9: 807.754 ns/op
Iteration  10: 807.829 ns/op
Iteration  11: 808.115 ns/op
Iteration  12: 805.239 ns/op
Iteration  13: 805.268 ns/op
Iteration  14: 805.990 ns/op
Iteration  15: 806.209 ns/op
Iteration  16: 803.704 ns/op
Iteration  17: 806.539 ns/op
Iteration  18: 805.201 ns/op
Iteration  19: 805.630 ns/op
Iteration  20: 806.145 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1406.699 ns/op
# Warmup Iteration   2: 1160.512 ns/op
# Warmup Iteration   3: 948.702 ns/op
# Warmup Iteration   4: 950.367 ns/op
# Warmup Iteration   5: 958.379 ns/op
Iteration   1: 940.392 ns/op
Iteration   2: 959.340 ns/op
Iteration   3: 966.070 ns/op
Iteration   4: 943.689 ns/op
Iteration   5: 943.334 ns/op
Iteration   6: 943.787 ns/op
Iteration   7: 939.475 ns/op
Iteration   8: 943.151 ns/op
Iteration   9: 943.342 ns/op
Iteration  10: 943.469 ns/op
Iteration  11: 943.634 ns/op
Iteration  12: 941.064 ns/op
Iteration  13: 943.920 ns/op
Iteration  14: 945.113 ns/op
Iteration  15: 942.239 ns/op
Iteration  16: 942.297 ns/op
Iteration  17: 942.757 ns/op
Iteration  18: 938.669 ns/op
Iteration  19: 947.243 ns/op
Iteration  20: 943.891 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1331.001 ns/op
# Warmup Iteration   2: 1050.992 ns/op
# Warmup Iteration   3: 870.613 ns/op
# Warmup Iteration   4: 874.792 ns/op
# Warmup Iteration   5: 877.061 ns/op
Iteration   1: 881.579 ns/op
Iteration   2: 887.386 ns/op
Iteration   3: 866.551 ns/op
Iteration   4: 862.641 ns/op
Iteration   5: 866.759 ns/op
Iteration   6: 865.604 ns/op
Iteration   7: 866.032 ns/op
Iteration   8: 866.765 ns/op
Iteration   9: 867.218 ns/op
Iteration  10: 867.243 ns/op
Iteration  11: 866.997 ns/op
Iteration  12: 867.326 ns/op
Iteration  13: 862.070 ns/op
Iteration  14: 867.413 ns/op
Iteration  15: 863.557 ns/op
Iteration  16: 864.063 ns/op
Iteration  17: 865.008 ns/op
Iteration  18: 864.605 ns/op
Iteration  19: 865.721 ns/op
Iteration  20: 865.587 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1308.718 ns/op
# Warmup Iteration   2: 1010.881 ns/op
# Warmup Iteration   3: 847.871 ns/op
# Warmup Iteration   4: 850.662 ns/op
# Warmup Iteration   5: 854.204 ns/op
Iteration   1: 858.945 ns/op
Iteration   2: 864.390 ns/op
Iteration   3: 845.498 ns/op
Iteration   4: 846.973 ns/op
Iteration   5: 848.263 ns/op
Iteration   6: 846.224 ns/op
Iteration   7: 840.664 ns/op
Iteration   8: 845.726 ns/op
Iteration   9: 846.788 ns/op
Iteration  10: 852.936 ns/op
Iteration  11: 845.935 ns/op
Iteration  12: 857.042 ns/op
Iteration  13: 843.051 ns/op
Iteration  14: 842.150 ns/op
Iteration  15: 841.986 ns/op
Iteration  16: 843.244 ns/op
Iteration  17: 842.495 ns/op
Iteration  18: 839.910 ns/op
Iteration  19: 843.082 ns/op
Iteration  20: 842.550 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1407.477 ns/op
# Warmup Iteration   2: 1154.773 ns/op
# Warmup Iteration   3: 943.860 ns/op
# Warmup Iteration   4: 947.709 ns/op
# Warmup Iteration   5: 951.482 ns/op
Iteration   1: 935.922 ns/op
Iteration   2: 955.877 ns/op
Iteration   3: 962.602 ns/op
Iteration   4: 942.977 ns/op
Iteration   5: 940.378 ns/op
Iteration   6: 939.951 ns/op
Iteration   7: 935.543 ns/op
Iteration   8: 940.211 ns/op
Iteration   9: 940.426 ns/op
Iteration  10: 940.823 ns/op
Iteration  11: 941.620 ns/op
Iteration  12: 936.319 ns/op
Iteration  13: 941.385 ns/op
Iteration  14: 941.037 ns/op
Iteration  15: 938.393 ns/op
Iteration  16: 938.745 ns/op
Iteration  17: 938.222 ns/op
Iteration  18: 935.668 ns/op
Iteration  19: 938.353 ns/op
Iteration  20: 939.279 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  881.805 Â±(99.9%) 18.339 ns/op [Average]
  (min, avg, max) = (803.704, 881.805, 966.070), stdev = 54.072
  CI (99.9%): [863.466, 900.143] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 			
  		    
  	 	
 

	
 	
	

	

  	  	 

		
 	
	


 

  
 	
,	 
 

		

			
	

 	   
	
 
			 	
  									
  
  	

 	 	


 	 		 

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1293.101 ns/op
# Warmup Iteration   2: 1006.620 ns/op
# Warmup Iteration   3: 848.229 ns/op
# Warmup Iteration   4: 850.510 ns/op
# Warmup Iteration   5: 854.378 ns/op
Iteration   1: 858.256 ns/op
Iteration   2: 863.280 ns/op
Iteration   3: 844.561 ns/op
Iteration   4: 843.676 ns/op
Iteration   5: 843.966 ns/op
Iteration   6: 843.583 ns/op
Iteration   7: 843.704 ns/op
Iteration   8: 847.791 ns/op
Iteration   9: 844.545 ns/op
Iteration  10: 840.181 ns/op
Iteration  11: 844.217 ns/op
Iteration  12: 843.332 ns/op
Iteration  13: 841.538 ns/op
Iteration  14: 847.709 ns/op
Iteration  15: 841.635 ns/op
Iteration  16: 842.076 ns/op
Iteration  17: 842.169 ns/op
Iteration  18: 841.801 ns/op
Iteration  19: 848.669 ns/op
Iteration  20: 842.987 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1417.121 ns/op
# Warmup Iteration   2: 1180.742 ns/op
# Warmup Iteration   3: 968.661 ns/op
# Warmup Iteration   4: 972.009 ns/op
# Warmup Iteration   5: 975.291 ns/op
Iteration   1: 959.219 ns/op
Iteration   2: 980.321 ns/op
Iteration   3: 986.227 ns/op
Iteration   4: 965.250 ns/op
Iteration   5: 964.229 ns/op
Iteration   6: 964.703 ns/op
Iteration   7: 959.410 ns/op
Iteration   8: 963.709 ns/op
Iteration   9: 964.129 ns/op
Iteration  10: 968.261 ns/op
Iteration  11: 965.240 ns/op
Iteration  12: 959.483 ns/op
Iteration  13: 964.816 ns/op
Iteration  14: 965.876 ns/op
Iteration  15: 964.897 ns/op
Iteration  16: 962.008 ns/op
Iteration  17: 962.239 ns/op
Iteration  18: 959.556 ns/op
Iteration  19: 961.777 ns/op
Iteration  20: 962.178 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1417.730 ns/op
# Warmup Iteration   2: 1173.008 ns/op
# Warmup Iteration   3: 959.702 ns/op
# Warmup Iteration   4: 962.572 ns/op
# Warmup Iteration   5: 966.074 ns/op
Iteration   1: 954.521 ns/op
Iteration   2: 966.888 ns/op
Iteration   3: 977.654 ns/op
Iteration   4: 956.751 ns/op
Iteration   5: 956.712 ns/op
Iteration   6: 956.554 ns/op
Iteration   7: 951.216 ns/op
Iteration   8: 956.184 ns/op
Iteration   9: 956.065 ns/op
Iteration  10: 954.969 ns/op
Iteration  11: 957.580 ns/op
Iteration  12: 956.963 ns/op
Iteration  13: 951.310 ns/op
Iteration  14: 958.304 ns/op
Iteration  15: 954.062 ns/op
Iteration  16: 954.956 ns/op
Iteration  17: 954.608 ns/op
Iteration  18: 954.029 ns/op
Iteration  19: 951.536 ns/op
Iteration  20: 953.655 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1298.783 ns/op
# Warmup Iteration   2: 1019.691 ns/op
# Warmup Iteration   3: 862.124 ns/op
# Warmup Iteration   4: 863.992 ns/op
# Warmup Iteration   5: 867.493 ns/op
Iteration   1: 871.831 ns/op
Iteration   2: 877.026 ns/op
Iteration   3: 863.913 ns/op
Iteration   4: 857.849 ns/op
Iteration   5: 857.158 ns/op
Iteration   6: 858.239 ns/op
Iteration   7: 858.395 ns/op
Iteration   8: 853.694 ns/op
Iteration   9: 861.828 ns/op
Iteration  10: 858.780 ns/op
Iteration  11: 859.507 ns/op
Iteration  12: 858.654 ns/op
Iteration  13: 857.755 ns/op
Iteration  14: 855.176 ns/op
Iteration  15: 855.713 ns/op
Iteration  16: 855.931 ns/op
Iteration  17: 856.686 ns/op
Iteration  18: 856.549 ns/op
Iteration  19: 864.040 ns/op
Iteration  20: 855.906 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1402.692 ns/op
# Warmup Iteration   2: 1185.389 ns/op
# Warmup Iteration   3: 972.766 ns/op
# Warmup Iteration   4: 974.920 ns/op
# Warmup Iteration   5: 979.243 ns/op
Iteration   1: 961.744 ns/op
Iteration   2: 982.807 ns/op
Iteration   3: 989.614 ns/op
Iteration   4: 966.344 ns/op
Iteration   5: 966.419 ns/op
Iteration   6: 961.459 ns/op
Iteration   7: 965.914 ns/op
Iteration   8: 966.748 ns/op
Iteration   9: 967.662 ns/op
Iteration  10: 969.680 ns/op
Iteration  11: 974.475 ns/op
Iteration  12: 961.784 ns/op
Iteration  13: 968.451 ns/op
Iteration  14: 967.972 ns/op
Iteration  15: 971.870 ns/op
Iteration  16: 963.709 ns/op
Iteration  17: 961.618 ns/op
Iteration  18: 965.579 ns/op
Iteration  19: 963.552 ns/op
Iteration  20: 970.402 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  919.102 Â±(99.9%) 18.732 ns/op [Average]
  (min, avg, max) = (840.181, 919.102, 989.614), stdev = 55.230
  CI (99.9%): [900.370, 937.833] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                      (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  			
  		    
  	 	
 

	
 	
	

	

  	  	 

		
 	
	


 

  
 	
,	 
 

		

			
	

 	   
	
 
			 	
  									
  
  	

 	 	


 	 		 

  avgt  100  881.805 Â± 18.339  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  			
  		    
  	 	
 

	
 	
	

	

  	  	 

		
 	
	


 

  
 	
,	 
 

		

			
	

 	   
	
 
			 	
  									
  
  	

 	 	


 	 		 

  avgt  100  919.102 Â± 18.732  ns/op

Benchmark result is saved to split_precompiled_regex_124_253_Match.csv
