# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  
	
   

 

	
 	 

	 
 	
		
 			  	
	
 			

 	 
  	
	 				
	
		 
  
	 	
 	 



		 			
	
		,
	
	  	
 	



		 
	 		 	
 


 
	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1339.851 ns/op
# Warmup Iteration   2: 1054.732 ns/op
# Warmup Iteration   3: 868.400 ns/op
# Warmup Iteration   4: 870.832 ns/op
# Warmup Iteration   5: 874.160 ns/op
Iteration   1: 879.649 ns/op
Iteration   2: 885.343 ns/op
Iteration   3: 864.343 ns/op
Iteration   4: 859.560 ns/op
Iteration   5: 862.702 ns/op
Iteration   6: 863.955 ns/op
Iteration   7: 863.470 ns/op
Iteration   8: 863.804 ns/op
Iteration   9: 864.219 ns/op
Iteration  10: 867.941 ns/op
Iteration  11: 864.434 ns/op
Iteration  12: 864.889 ns/op
Iteration  13: 864.817 ns/op
Iteration  14: 860.562 ns/op
Iteration  15: 862.518 ns/op
Iteration  16: 864.484 ns/op
Iteration  17: 862.896 ns/op
Iteration  18: 862.755 ns/op
Iteration  19: 862.537 ns/op
Iteration  20: 862.846 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1330.471 ns/op
# Warmup Iteration   2: 1049.452 ns/op
# Warmup Iteration   3: 868.887 ns/op
# Warmup Iteration   4: 871.315 ns/op
# Warmup Iteration   5: 874.784 ns/op
Iteration   1: 879.070 ns/op
Iteration   2: 884.895 ns/op
Iteration   3: 865.073 ns/op
Iteration   4: 861.532 ns/op
Iteration   5: 864.666 ns/op
Iteration   6: 864.159 ns/op
Iteration   7: 864.382 ns/op
Iteration   8: 864.325 ns/op
Iteration   9: 864.887 ns/op
Iteration  10: 869.927 ns/op
Iteration  11: 865.606 ns/op
Iteration  12: 869.509 ns/op
Iteration  13: 865.577 ns/op
Iteration  14: 860.425 ns/op
Iteration  15: 862.044 ns/op
Iteration  16: 862.538 ns/op
Iteration  17: 862.683 ns/op
Iteration  18: 862.558 ns/op
Iteration  19: 863.238 ns/op
Iteration  20: 871.240 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1327.933 ns/op
# Warmup Iteration   2: 1044.482 ns/op
# Warmup Iteration   3: 865.242 ns/op
# Warmup Iteration   4: 868.449 ns/op
# Warmup Iteration   5: 875.874 ns/op
Iteration   1: 881.225 ns/op
Iteration   2: 882.471 ns/op
Iteration   3: 862.781 ns/op
Iteration   4: 861.073 ns/op
Iteration   5: 857.370 ns/op
Iteration   6: 861.894 ns/op
Iteration   7: 861.775 ns/op
Iteration   8: 865.931 ns/op
Iteration   9: 862.558 ns/op
Iteration  10: 862.511 ns/op
Iteration  11: 874.792 ns/op
Iteration  12: 863.468 ns/op
Iteration  13: 864.380 ns/op
Iteration  14: 857.325 ns/op
Iteration  15: 881.638 ns/op
Iteration  16: 859.390 ns/op
Iteration  17: 860.195 ns/op
Iteration  18: 865.592 ns/op
Iteration  19: 859.315 ns/op
Iteration  20: 860.576 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1269.735 ns/op
# Warmup Iteration   2: 953.016 ns/op
# Warmup Iteration   3: 800.848 ns/op
# Warmup Iteration   4: 803.325 ns/op
# Warmup Iteration   5: 807.233 ns/op
Iteration   1: 811.192 ns/op
Iteration   2: 816.167 ns/op
Iteration   3: 797.216 ns/op
Iteration   4: 797.123 ns/op
Iteration   5: 797.107 ns/op
Iteration   6: 797.120 ns/op
Iteration   7: 797.084 ns/op
Iteration   8: 797.244 ns/op
Iteration   9: 797.639 ns/op
Iteration  10: 797.630 ns/op
Iteration  11: 800.168 ns/op
Iteration  12: 796.556 ns/op
Iteration  13: 797.667 ns/op
Iteration  14: 797.658 ns/op
Iteration  15: 797.112 ns/op
Iteration  16: 797.589 ns/op
Iteration  17: 798.065 ns/op
Iteration  18: 797.720 ns/op
Iteration  19: 796.806 ns/op
Iteration  20: 797.122 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1270.707 ns/op
# Warmup Iteration   2: 954.291 ns/op
# Warmup Iteration   3: 806.617 ns/op
# Warmup Iteration   4: 808.995 ns/op
# Warmup Iteration   5: 811.785 ns/op
Iteration   1: 815.777 ns/op
Iteration   2: 820.966 ns/op
Iteration   3: 803.618 ns/op
Iteration   4: 802.027 ns/op
Iteration   5: 801.985 ns/op
Iteration   6: 805.559 ns/op
Iteration   7: 803.482 ns/op
Iteration   8: 804.505 ns/op
Iteration   9: 803.279 ns/op
Iteration  10: 809.140 ns/op
Iteration  11: 806.700 ns/op
Iteration  12: 805.661 ns/op
Iteration  13: 801.265 ns/op
Iteration  14: 801.727 ns/op
Iteration  15: 801.321 ns/op
Iteration  16: 802.339 ns/op
Iteration  17: 804.058 ns/op
Iteration  18: 802.584 ns/op
Iteration  19: 799.265 ns/op
Iteration  20: 801.872 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  840.214 Â±(99.9%) 10.858 ns/op [Average]
  (min, avg, max) = (796.556, 840.214, 885.343), stdev = 32.014
  CI (99.9%): [829.357, 851.072] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  
	
   

 

	
 	 

	 
 	
		
 			  	
	
 			

 	 
  	
	 				
	
		 
  
	 	
 	 



		 			
	
		,
	
	  	
 	



		 
	 		 	
 


 
	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1240.190 ns/op
# Warmup Iteration   2: 925.159 ns/op
# Warmup Iteration   3: 790.375 ns/op
# Warmup Iteration   4: 793.335 ns/op
# Warmup Iteration   5: 796.298 ns/op
Iteration   1: 800.458 ns/op
Iteration   2: 803.802 ns/op
Iteration   3: 786.273 ns/op
Iteration   4: 786.760 ns/op
Iteration   5: 786.849 ns/op
Iteration   6: 786.787 ns/op
Iteration   7: 787.072 ns/op
Iteration   8: 786.847 ns/op
Iteration   9: 787.002 ns/op
Iteration  10: 786.853 ns/op
Iteration  11: 787.341 ns/op
Iteration  12: 784.098 ns/op
Iteration  13: 783.946 ns/op
Iteration  14: 784.166 ns/op
Iteration  15: 784.405 ns/op
Iteration  16: 784.244 ns/op
Iteration  17: 785.085 ns/op
Iteration  18: 784.963 ns/op
Iteration  19: 786.447 ns/op
Iteration  20: 785.917 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1329.423 ns/op
# Warmup Iteration   2: 1056.924 ns/op
# Warmup Iteration   3: 881.334 ns/op
# Warmup Iteration   4: 881.537 ns/op
# Warmup Iteration   5: 884.709 ns/op
Iteration   1: 889.825 ns/op
Iteration   2: 894.470 ns/op
Iteration   3: 874.869 ns/op
Iteration   4: 874.646 ns/op
Iteration   5: 870.347 ns/op
Iteration   6: 875.937 ns/op
Iteration   7: 874.239 ns/op
Iteration   8: 876.324 ns/op
Iteration   9: 878.373 ns/op
Iteration  10: 877.310 ns/op
Iteration  11: 875.421 ns/op
Iteration  12: 876.760 ns/op
Iteration  13: 880.648 ns/op
Iteration  14: 873.269 ns/op
Iteration  15: 870.327 ns/op
Iteration  16: 871.851 ns/op
Iteration  17: 871.997 ns/op
Iteration  18: 873.403 ns/op
Iteration  19: 880.969 ns/op
Iteration  20: 876.980 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1271.448 ns/op
# Warmup Iteration   2: 972.089 ns/op
# Warmup Iteration   3: 820.478 ns/op
# Warmup Iteration   4: 825.857 ns/op
# Warmup Iteration   5: 825.657 ns/op
Iteration   1: 829.681 ns/op
Iteration   2: 834.061 ns/op
Iteration   3: 815.754 ns/op
Iteration   4: 815.185 ns/op
Iteration   5: 814.905 ns/op
Iteration   6: 814.646 ns/op
Iteration   7: 814.505 ns/op
Iteration   8: 815.276 ns/op
Iteration   9: 815.470 ns/op
Iteration  10: 815.267 ns/op
Iteration  11: 815.498 ns/op
Iteration  12: 813.556 ns/op
Iteration  13: 814.296 ns/op
Iteration  14: 814.285 ns/op
Iteration  15: 813.483 ns/op
Iteration  16: 813.728 ns/op
Iteration  17: 814.723 ns/op
Iteration  18: 814.550 ns/op
Iteration  19: 815.564 ns/op
Iteration  20: 816.195 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1283.309 ns/op
# Warmup Iteration   2: 989.673 ns/op
# Warmup Iteration   3: 832.007 ns/op
# Warmup Iteration   4: 834.054 ns/op
# Warmup Iteration   5: 838.181 ns/op
Iteration   1: 842.409 ns/op
Iteration   2: 847.119 ns/op
Iteration   3: 828.096 ns/op
Iteration   4: 827.694 ns/op
Iteration   5: 828.095 ns/op
Iteration   6: 831.681 ns/op
Iteration   7: 828.607 ns/op
Iteration   8: 829.455 ns/op
Iteration   9: 829.430 ns/op
Iteration  10: 831.236 ns/op
Iteration  11: 829.594 ns/op
Iteration  12: 833.571 ns/op
Iteration  13: 825.548 ns/op
Iteration  14: 826.317 ns/op
Iteration  15: 824.292 ns/op
Iteration  16: 825.390 ns/op
Iteration  17: 826.252 ns/op
Iteration  18: 826.748 ns/op
Iteration  19: 827.935 ns/op
Iteration  20: 827.539 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1299.055 ns/op
# Warmup Iteration   2: 1019.240 ns/op
# Warmup Iteration   3: 858.253 ns/op
# Warmup Iteration   4: 865.830 ns/op
# Warmup Iteration   5: 864.261 ns/op
Iteration   1: 873.068 ns/op
Iteration   2: 878.155 ns/op
Iteration   3: 858.761 ns/op
Iteration   4: 855.127 ns/op
Iteration   5: 854.995 ns/op
Iteration   6: 853.231 ns/op
Iteration   7: 857.885 ns/op
Iteration   8: 848.768 ns/op
Iteration   9: 854.545 ns/op
Iteration  10: 855.539 ns/op
Iteration  11: 857.246 ns/op
Iteration  12: 854.861 ns/op
Iteration  13: 861.068 ns/op
Iteration  14: 850.535 ns/op
Iteration  15: 852.167 ns/op
Iteration  16: 850.980 ns/op
Iteration  17: 852.072 ns/op
Iteration  18: 852.133 ns/op
Iteration  19: 904.290 ns/op
Iteration  20: 852.363 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  833.927 Â±(99.9%) 11.017 ns/op [Average]
  (min, avg, max) = (783.946, 833.927, 904.290), stdev = 32.483
  CI (99.9%): [822.910, 844.944] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   
	
   

 

	
 	 

	 
 	
		
 			  	
	
 			

 	 
  	
	 				
	
		 
  
	 	
 	 



		 			
	
		,
	
	  	
 	



		 
	 		 	
 


 
	  avgt  100  840.214 Â± 10.858  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   
	
   

 

	
 	 

	 
 	
		
 			  	
	
 			

 	 
  	
	 				
	
		 
  
	 	
 	 



		 			
	
		,
	
	  	
 	



		 
	 		 	
 


 
	  avgt  100  833.927 Â± 11.017  ns/op

Benchmark result is saved to split_precompiled_regex_178_238_Match.csv
