# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =    	 	

	

		     
  
  	
			
 	
,
  
			 	 
 	 	  	


		 			
 	 
	  

			 	  	 
		 

	
  

		  	
   
   
	

	
  )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1332.603 ns/op
# Warmup Iteration   2: 1047.477 ns/op
# Warmup Iteration   3: 875.879 ns/op
# Warmup Iteration   4: 878.027 ns/op
# Warmup Iteration   5: 883.447 ns/op
Iteration   1: 881.298 ns/op
Iteration   2: 892.744 ns/op
Iteration   3: 866.455 ns/op
Iteration   4: 861.284 ns/op
Iteration   5: 865.013 ns/op
Iteration   6: 865.610 ns/op
Iteration   7: 865.455 ns/op
Iteration   8: 865.315 ns/op
Iteration   9: 864.941 ns/op
Iteration  10: 864.783 ns/op
Iteration  11: 865.159 ns/op
Iteration  12: 865.410 ns/op
Iteration  13: 860.560 ns/op
Iteration  14: 862.239 ns/op
Iteration  15: 864.954 ns/op
Iteration  16: 863.139 ns/op
Iteration  17: 862.776 ns/op
Iteration  18: 864.065 ns/op
Iteration  19: 864.485 ns/op
Iteration  20: 865.401 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1332.616 ns/op
# Warmup Iteration   2: 1059.059 ns/op
# Warmup Iteration   3: 872.265 ns/op
# Warmup Iteration   4: 874.691 ns/op
# Warmup Iteration   5: 878.963 ns/op
Iteration   1: 883.415 ns/op
Iteration   2: 889.268 ns/op
Iteration   3: 867.913 ns/op
Iteration   4: 863.934 ns/op
Iteration   5: 867.343 ns/op
Iteration   6: 867.941 ns/op
Iteration   7: 867.478 ns/op
Iteration   8: 867.653 ns/op
Iteration   9: 867.826 ns/op
Iteration  10: 870.255 ns/op
Iteration  11: 867.749 ns/op
Iteration  12: 871.724 ns/op
Iteration  13: 863.971 ns/op
Iteration  14: 865.655 ns/op
Iteration  15: 865.628 ns/op
Iteration  16: 871.559 ns/op
Iteration  17: 866.580 ns/op
Iteration  18: 865.440 ns/op
Iteration  19: 868.037 ns/op
Iteration  20: 867.932 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1332.103 ns/op
# Warmup Iteration   2: 1052.255 ns/op
# Warmup Iteration   3: 872.386 ns/op
# Warmup Iteration   4: 874.736 ns/op
# Warmup Iteration   5: 877.993 ns/op
Iteration   1: 882.894 ns/op
Iteration   2: 887.770 ns/op
Iteration   3: 868.300 ns/op
Iteration   4: 864.681 ns/op
Iteration   5: 868.267 ns/op
Iteration   6: 867.974 ns/op
Iteration   7: 867.339 ns/op
Iteration   8: 866.640 ns/op
Iteration   9: 866.884 ns/op
Iteration  10: 868.384 ns/op
Iteration  11: 868.339 ns/op
Iteration  12: 868.437 ns/op
Iteration  13: 864.475 ns/op
Iteration  14: 869.665 ns/op
Iteration  15: 866.167 ns/op
Iteration  16: 866.583 ns/op
Iteration  17: 866.195 ns/op
Iteration  18: 866.044 ns/op
Iteration  19: 867.441 ns/op
Iteration  20: 866.360 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1329.968 ns/op
# Warmup Iteration   2: 1045.075 ns/op
# Warmup Iteration   3: 870.381 ns/op
# Warmup Iteration   4: 873.248 ns/op
# Warmup Iteration   5: 876.310 ns/op
Iteration   1: 881.013 ns/op
Iteration   2: 886.460 ns/op
Iteration   3: 866.348 ns/op
Iteration   4: 861.198 ns/op
Iteration   5: 866.124 ns/op
Iteration   6: 869.983 ns/op
Iteration   7: 867.524 ns/op
Iteration   8: 865.639 ns/op
Iteration   9: 868.048 ns/op
Iteration  10: 866.527 ns/op
Iteration  11: 867.635 ns/op
Iteration  12: 867.446 ns/op
Iteration  13: 869.627 ns/op
Iteration  14: 861.508 ns/op
Iteration  15: 883.258 ns/op
Iteration  16: 868.502 ns/op
Iteration  17: 867.993 ns/op
Iteration  18: 863.057 ns/op
Iteration  19: 862.308 ns/op
Iteration  20: 863.975 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1326.998 ns/op
# Warmup Iteration   2: 1051.567 ns/op
# Warmup Iteration   3: 865.751 ns/op
# Warmup Iteration   4: 867.969 ns/op
# Warmup Iteration   5: 871.988 ns/op
Iteration   1: 875.726 ns/op
Iteration   2: 882.097 ns/op
Iteration   3: 861.670 ns/op
Iteration   4: 857.552 ns/op
Iteration   5: 862.699 ns/op
Iteration   6: 862.411 ns/op
Iteration   7: 862.732 ns/op
Iteration   8: 862.544 ns/op
Iteration   9: 862.553 ns/op
Iteration  10: 862.883 ns/op
Iteration  11: 864.999 ns/op
Iteration  12: 869.062 ns/op
Iteration  13: 860.639 ns/op
Iteration  14: 858.908 ns/op
Iteration  15: 860.405 ns/op
Iteration  16: 858.506 ns/op
Iteration  17: 858.901 ns/op
Iteration  18: 858.472 ns/op
Iteration  19: 859.194 ns/op
Iteration  20: 860.097 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  867.334 Â±(99.9%) 2.308 ns/op [Average]
  (min, avg, max) = (857.552, 867.334, 892.744), stdev = 6.806
  CI (99.9%): [865.026, 869.643] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =    	 	

	

		     
  
  	
			
 	
,
  
			 	 
 	 	  	


		 			
 	 
	  

			 	  	 
		 

	
  

		  	
   
   
	

	
  )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1316.914 ns/op
# Warmup Iteration   2: 1060.516 ns/op
# Warmup Iteration   3: 890.146 ns/op
# Warmup Iteration   4: 892.741 ns/op
# Warmup Iteration   5: 896.779 ns/op
Iteration   1: 901.250 ns/op
Iteration   2: 905.847 ns/op
Iteration   3: 885.195 ns/op
Iteration   4: 881.115 ns/op
Iteration   5: 885.444 ns/op
Iteration   6: 885.264 ns/op
Iteration   7: 885.454 ns/op
Iteration   8: 886.880 ns/op
Iteration   9: 886.368 ns/op
Iteration  10: 887.463 ns/op
Iteration  11: 893.470 ns/op
Iteration  12: 886.810 ns/op
Iteration  13: 884.114 ns/op
Iteration  14: 881.349 ns/op
Iteration  15: 885.803 ns/op
Iteration  16: 885.665 ns/op
Iteration  17: 884.385 ns/op
Iteration  18: 883.788 ns/op
Iteration  19: 884.827 ns/op
Iteration  20: 885.472 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1340.227 ns/op
# Warmup Iteration   2: 1081.554 ns/op
# Warmup Iteration   3: 897.205 ns/op
# Warmup Iteration   4: 900.100 ns/op
# Warmup Iteration   5: 903.855 ns/op
Iteration   1: 908.056 ns/op
Iteration   2: 912.346 ns/op
Iteration   3: 898.171 ns/op
Iteration   4: 888.009 ns/op
Iteration   5: 894.334 ns/op
Iteration   6: 892.235 ns/op
Iteration   7: 892.506 ns/op
Iteration   8: 892.216 ns/op
Iteration   9: 891.948 ns/op
Iteration  10: 893.695 ns/op
Iteration  11: 893.411 ns/op
Iteration  12: 888.211 ns/op
Iteration  13: 898.840 ns/op
Iteration  14: 893.185 ns/op
Iteration  15: 891.220 ns/op
Iteration  16: 890.632 ns/op
Iteration  17: 890.749 ns/op
Iteration  18: 890.445 ns/op
Iteration  19: 890.832 ns/op
Iteration  20: 891.413 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1334.582 ns/op
# Warmup Iteration   2: 1077.661 ns/op
# Warmup Iteration   3: 902.467 ns/op
# Warmup Iteration   4: 904.487 ns/op
# Warmup Iteration   5: 908.309 ns/op
Iteration   1: 913.293 ns/op
Iteration   2: 917.604 ns/op
Iteration   3: 897.047 ns/op
Iteration   4: 892.289 ns/op
Iteration   5: 896.843 ns/op
Iteration   6: 900.689 ns/op
Iteration   7: 899.444 ns/op
Iteration   8: 898.519 ns/op
Iteration   9: 908.876 ns/op
Iteration  10: 898.552 ns/op
Iteration  11: 897.782 ns/op
Iteration  12: 893.097 ns/op
Iteration  13: 908.233 ns/op
Iteration  14: 894.764 ns/op
Iteration  15: 897.335 ns/op
Iteration  16: 895.371 ns/op
Iteration  17: 895.836 ns/op
Iteration  18: 896.775 ns/op
Iteration  19: 910.529 ns/op
Iteration  20: 892.674 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1319.719 ns/op
# Warmup Iteration   2: 1079.592 ns/op
# Warmup Iteration   3: 905.031 ns/op
# Warmup Iteration   4: 908.804 ns/op
# Warmup Iteration   5: 915.547 ns/op
Iteration   1: 915.986 ns/op
Iteration   2: 921.504 ns/op
Iteration   3: 896.854 ns/op
Iteration   4: 901.680 ns/op
Iteration   5: 900.982 ns/op
Iteration   6: 901.076 ns/op
Iteration   7: 901.423 ns/op
Iteration   8: 901.941 ns/op
Iteration   9: 901.156 ns/op
Iteration  10: 908.164 ns/op
Iteration  11: 909.320 ns/op
Iteration  12: 896.341 ns/op
Iteration  13: 902.576 ns/op
Iteration  14: 903.539 ns/op
Iteration  15: 900.816 ns/op
Iteration  16: 898.720 ns/op
Iteration  17: 899.287 ns/op
Iteration  18: 898.580 ns/op
Iteration  19: 899.302 ns/op
Iteration  20: 896.664 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1325.940 ns/op
# Warmup Iteration   2: 1073.731 ns/op
# Warmup Iteration   3: 900.056 ns/op
# Warmup Iteration   4: 903.023 ns/op
# Warmup Iteration   5: 906.355 ns/op
Iteration   1: 910.440 ns/op
Iteration   2: 916.583 ns/op
Iteration   3: 895.508 ns/op
Iteration   4: 890.751 ns/op
Iteration   5: 894.693 ns/op
Iteration   6: 895.270 ns/op
Iteration   7: 895.587 ns/op
Iteration   8: 895.820 ns/op
Iteration   9: 900.406 ns/op
Iteration  10: 895.862 ns/op
Iteration  11: 896.683 ns/op
Iteration  12: 891.070 ns/op
Iteration  13: 893.946 ns/op
Iteration  14: 895.808 ns/op
Iteration  15: 892.181 ns/op
Iteration  16: 894.105 ns/op
Iteration  17: 892.283 ns/op
Iteration  18: 894.544 ns/op
Iteration  19: 894.624 ns/op
Iteration  20: 894.772 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  896.208 Â±(99.9%) 2.821 ns/op [Average]
  (min, avg, max) = (881.115, 896.208, 921.504), stdev = 8.318
  CI (99.9%): [893.387, 899.029] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                 (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*     	 	

	

		     
  
  	
			
 	
,
  
			 	 
 	 	  	


		 			
 	 
	  

			 	  	 
		 

	
  

		  	
   
   
	

	
    avgt  100  867.334 Â± 2.308  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*     	 	

	

		     
  
  	
			
 	
,
  
			 	 
 	 	  	


		 			
 	 
	  

			 	  	 
		 

	
  

		  	
   
   
	

	
    avgt  100  896.208 Â± 2.821  ns/op

Benchmark result is saved to split_precompiled_regex_18_216_Match.csv
