# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  
	

 
 	
				
	  	  	  	
	
  


	
 


		
 ,	
		
	

	  		
	


 			  

    			
 
	  	
 	
 	 	   	  

   
 

 

	

 	 

	

		
				 		)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1442.869 ns/op
# Warmup Iteration   2: 1209.542 ns/op
# Warmup Iteration   3: 980.958 ns/op
# Warmup Iteration   4: 983.726 ns/op
# Warmup Iteration   5: 971.873 ns/op
Iteration   1: 987.156 ns/op
Iteration   2: 992.899 ns/op
Iteration   3: 998.814 ns/op
Iteration   4: 977.294 ns/op
Iteration   5: 971.969 ns/op
Iteration   6: 975.780 ns/op
Iteration   7: 976.563 ns/op
Iteration   8: 976.777 ns/op
Iteration   9: 976.458 ns/op
Iteration  10: 971.834 ns/op
Iteration  11: 976.241 ns/op
Iteration  12: 976.525 ns/op
Iteration  13: 976.805 ns/op
Iteration  14: 977.943 ns/op
Iteration  15: 971.918 ns/op
Iteration  16: 973.886 ns/op
Iteration  17: 975.195 ns/op
Iteration  18: 974.268 ns/op
Iteration  19: 974.660 ns/op
Iteration  20: 971.848 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1444.522 ns/op
# Warmup Iteration   2: 1211.409 ns/op
# Warmup Iteration   3: 980.869 ns/op
# Warmup Iteration   4: 991.016 ns/op
# Warmup Iteration   5: 970.919 ns/op
Iteration   1: 987.192 ns/op
Iteration   2: 991.373 ns/op
Iteration   3: 997.677 ns/op
Iteration   4: 975.761 ns/op
Iteration   5: 970.718 ns/op
Iteration   6: 975.404 ns/op
Iteration   7: 974.969 ns/op
Iteration   8: 975.109 ns/op
Iteration   9: 975.762 ns/op
Iteration  10: 970.986 ns/op
Iteration  11: 975.685 ns/op
Iteration  12: 983.007 ns/op
Iteration  13: 977.423 ns/op
Iteration  14: 977.567 ns/op
Iteration  15: 970.939 ns/op
Iteration  16: 974.082 ns/op
Iteration  17: 973.353 ns/op
Iteration  18: 973.192 ns/op
Iteration  19: 974.923 ns/op
Iteration  20: 970.955 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1438.584 ns/op
# Warmup Iteration   2: 1219.825 ns/op
# Warmup Iteration   3: 979.785 ns/op
# Warmup Iteration   4: 983.006 ns/op
# Warmup Iteration   5: 970.273 ns/op
Iteration   1: 986.222 ns/op
Iteration   2: 992.568 ns/op
Iteration   3: 1000.369 ns/op
Iteration   4: 976.303 ns/op
Iteration   5: 970.113 ns/op
Iteration   6: 974.962 ns/op
Iteration   7: 975.147 ns/op
Iteration   8: 974.646 ns/op
Iteration   9: 974.795 ns/op
Iteration  10: 972.089 ns/op
Iteration  11: 983.871 ns/op
Iteration  12: 974.677 ns/op
Iteration  13: 979.392 ns/op
Iteration  14: 975.079 ns/op
Iteration  15: 969.391 ns/op
Iteration  16: 971.168 ns/op
Iteration  17: 973.224 ns/op
Iteration  18: 974.320 ns/op
Iteration  19: 973.115 ns/op
Iteration  20: 969.171 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1442.567 ns/op
# Warmup Iteration   2: 1208.226 ns/op
# Warmup Iteration   3: 978.933 ns/op
# Warmup Iteration   4: 982.554 ns/op
# Warmup Iteration   5: 970.430 ns/op
Iteration   1: 986.103 ns/op
Iteration   2: 991.540 ns/op
Iteration   3: 996.972 ns/op
Iteration   4: 974.071 ns/op
Iteration   5: 970.117 ns/op
Iteration   6: 974.822 ns/op
Iteration   7: 974.896 ns/op
Iteration   8: 975.579 ns/op
Iteration   9: 974.916 ns/op
Iteration  10: 970.074 ns/op
Iteration  11: 975.518 ns/op
Iteration  12: 975.141 ns/op
Iteration  13: 974.221 ns/op
Iteration  14: 992.526 ns/op
Iteration  15: 969.851 ns/op
Iteration  16: 972.347 ns/op
Iteration  17: 972.343 ns/op
Iteration  18: 972.841 ns/op
Iteration  19: 973.153 ns/op
Iteration  20: 969.839 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1442.199 ns/op
# Warmup Iteration   2: 1213.252 ns/op
# Warmup Iteration   3: 981.497 ns/op
# Warmup Iteration   4: 984.701 ns/op
# Warmup Iteration   5: 972.679 ns/op
Iteration   1: 989.133 ns/op
Iteration   2: 993.889 ns/op
Iteration   3: 1000.006 ns/op
Iteration   4: 977.716 ns/op
Iteration   5: 973.387 ns/op
Iteration   6: 977.836 ns/op
Iteration   7: 978.172 ns/op
Iteration   8: 978.424 ns/op
Iteration   9: 977.451 ns/op
Iteration  10: 972.714 ns/op
Iteration  11: 980.146 ns/op
Iteration  12: 979.719 ns/op
Iteration  13: 978.969 ns/op
Iteration  14: 979.333 ns/op
Iteration  15: 972.518 ns/op
Iteration  16: 974.545 ns/op
Iteration  17: 975.263 ns/op
Iteration  18: 975.127 ns/op
Iteration  19: 972.649 ns/op
Iteration  20: 975.816 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  977.612 Â±(99.9%) 2.515 ns/op [Average]
  (min, avg, max) = (969.171, 977.612, 1000.369), stdev = 7.416
  CI (99.9%): [975.097, 980.127] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  
	

 
 	
				
	  	  	  	
	
  


	
 


		
 ,	
		
	

	  		
	


 			  

    			
 
	  	
 	
 	 	   	  

   
 

 

	

 	 

	

		
				 		)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1452.565 ns/op
# Warmup Iteration   2: 1231.058 ns/op
# Warmup Iteration   3: 996.478 ns/op
# Warmup Iteration   4: 1000.707 ns/op
# Warmup Iteration   5: 987.964 ns/op
Iteration   1: 1004.498 ns/op
Iteration   2: 1009.426 ns/op
Iteration   3: 1016.222 ns/op
Iteration   4: 992.769 ns/op
Iteration   5: 987.985 ns/op
Iteration   6: 992.798 ns/op
Iteration   7: 992.295 ns/op
Iteration   8: 992.988 ns/op
Iteration   9: 992.789 ns/op
Iteration  10: 988.237 ns/op
Iteration  11: 997.930 ns/op
Iteration  12: 994.183 ns/op
Iteration  13: 997.115 ns/op
Iteration  14: 993.793 ns/op
Iteration  15: 987.706 ns/op
Iteration  16: 993.963 ns/op
Iteration  17: 989.789 ns/op
Iteration  18: 997.923 ns/op
Iteration  19: 990.701 ns/op
Iteration  20: 987.723 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1449.235 ns/op
# Warmup Iteration   2: 1227.383 ns/op
# Warmup Iteration   3: 994.031 ns/op
# Warmup Iteration   4: 996.729 ns/op
# Warmup Iteration   5: 984.531 ns/op
Iteration   1: 1000.360 ns/op
Iteration   2: 1005.345 ns/op
Iteration   3: 1011.532 ns/op
Iteration   4: 988.601 ns/op
Iteration   5: 990.499 ns/op
Iteration   6: 994.290 ns/op
Iteration   7: 989.319 ns/op
Iteration   8: 993.411 ns/op
Iteration   9: 989.435 ns/op
Iteration  10: 984.804 ns/op
Iteration  11: 989.964 ns/op
Iteration  12: 989.856 ns/op
Iteration  13: 993.806 ns/op
Iteration  14: 989.151 ns/op
Iteration  15: 983.821 ns/op
Iteration  16: 986.106 ns/op
Iteration  17: 986.928 ns/op
Iteration  18: 986.256 ns/op
Iteration  19: 987.017 ns/op
Iteration  20: 983.992 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1445.627 ns/op
# Warmup Iteration   2: 1229.406 ns/op
# Warmup Iteration   3: 995.649 ns/op
# Warmup Iteration   4: 1000.684 ns/op
# Warmup Iteration   5: 985.606 ns/op
Iteration   1: 1002.294 ns/op
Iteration   2: 1011.615 ns/op
Iteration   3: 1010.291 ns/op
Iteration   4: 990.293 ns/op
Iteration   5: 985.560 ns/op
Iteration   6: 991.430 ns/op
Iteration   7: 990.807 ns/op
Iteration   8: 997.885 ns/op
Iteration   9: 990.339 ns/op
Iteration  10: 985.490 ns/op
Iteration  11: 991.012 ns/op
Iteration  12: 991.413 ns/op
Iteration  13: 990.650 ns/op
Iteration  14: 996.068 ns/op
Iteration  15: 985.707 ns/op
Iteration  16: 999.310 ns/op
Iteration  17: 989.158 ns/op
Iteration  18: 988.331 ns/op
Iteration  19: 988.832 ns/op
Iteration  20: 985.298 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1447.232 ns/op
# Warmup Iteration   2: 1234.579 ns/op
# Warmup Iteration   3: 994.388 ns/op
# Warmup Iteration   4: 998.140 ns/op
# Warmup Iteration   5: 984.303 ns/op
Iteration   1: 1000.662 ns/op
Iteration   2: 1005.016 ns/op
Iteration   3: 1011.766 ns/op
Iteration   4: 988.904 ns/op
Iteration   5: 984.209 ns/op
Iteration   6: 988.966 ns/op
Iteration   7: 987.920 ns/op
Iteration   8: 988.990 ns/op
Iteration   9: 989.091 ns/op
Iteration  10: 984.859 ns/op
Iteration  11: 989.947 ns/op
Iteration  12: 990.088 ns/op
Iteration  13: 990.009 ns/op
Iteration  14: 1006.953 ns/op
Iteration  15: 993.385 ns/op
Iteration  16: 986.962 ns/op
Iteration  17: 985.937 ns/op
Iteration  18: 987.618 ns/op
Iteration  19: 988.647 ns/op
Iteration  20: 983.512 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1450.835 ns/op
# Warmup Iteration   2: 1235.464 ns/op
# Warmup Iteration   3: 1000.560 ns/op
# Warmup Iteration   4: 1003.021 ns/op
# Warmup Iteration   5: 990.732 ns/op
Iteration   1: 1006.938 ns/op
Iteration   2: 1012.116 ns/op
Iteration   3: 1017.607 ns/op
Iteration   4: 995.182 ns/op
Iteration   5: 989.952 ns/op
Iteration   6: 995.141 ns/op
Iteration   7: 994.589 ns/op
Iteration   8: 994.826 ns/op
Iteration   9: 994.663 ns/op
Iteration  10: 989.832 ns/op
Iteration  11: 995.838 ns/op
Iteration  12: 996.372 ns/op
Iteration  13: 997.233 ns/op
Iteration  14: 1009.417 ns/op
Iteration  15: 990.256 ns/op
Iteration  16: 1017.079 ns/op
Iteration  17: 994.348 ns/op
Iteration  18: 1004.379 ns/op
Iteration  19: 993.368 ns/op
Iteration  20: 990.050 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  993.997 Â±(99.9%) 2.781 ns/op [Average]
  (min, avg, max) = (983.512, 993.997, 1017.607), stdev = 8.199
  CI (99.9%): [991.217, 996.778] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                   (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   
	

 
 	
				
	  	  	  	
	
  


	
 


		
 ,	
		
	

	  		
	


 			  

    			
 
	  	
 	
 	 	   	  

   
 

 

	

 	 

	

		
				 		  avgt  100  977.612 Â± 2.515  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   
	

 
 	
				
	  	  	  	
	
  


	
 


		
 ,	
		
	

	  		
	


 			  

    			
 
	  	
 	
 	 	   	  

   
 

 

	

 	 

	

		
				 		  avgt  100  993.997 Â± 2.781  ns/op

Benchmark result is saved to split_precompiled_regex_17_266_Match.csv
