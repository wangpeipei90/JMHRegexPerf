# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = YJ-lQ61(D]+{5?)Mz*+7)BG#=dbx|XeP+4!B7A
=EghHrt0R,;kcc1kk'ry~TG_X;&9>
)@d8&
||T>mm#CuvY|(hx7H>@<c0H2c=r5:>XjH=>e5OE3K9tUtk
ofRA\ Y)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2787.916 ns/op
# Warmup Iteration   2: 2749.686 ns/op
# Warmup Iteration   3: 2684.985 ns/op
# Warmup Iteration   4: 2296.829 ns/op
# Warmup Iteration   5: 2295.823 ns/op
Iteration   1: 2318.417 ns/op
Iteration   2: 2295.865 ns/op
Iteration   3: 2325.044 ns/op
Iteration   4: 2296.170 ns/op
Iteration   5: 2334.537 ns/op
Iteration   6: 2295.847 ns/op
Iteration   7: 2294.827 ns/op
Iteration   8: 2346.174 ns/op
Iteration   9: 2296.123 ns/op
Iteration  10: 2362.907 ns/op
Iteration  11: 2295.824 ns/op
Iteration  12: 2298.757 ns/op
Iteration  13: 2317.356 ns/op
Iteration  14: 2296.107 ns/op
Iteration  15: 2296.476 ns/op
Iteration  16: 2304.993 ns/op
Iteration  17: 2295.362 ns/op
Iteration  18: 2305.914 ns/op
Iteration  19: 2294.612 ns/op
Iteration  20: 2295.205 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2597.753 ns/op
# Warmup Iteration   2: 2533.839 ns/op
# Warmup Iteration   3: 2402.159 ns/op
# Warmup Iteration   4: 2099.777 ns/op
# Warmup Iteration   5: 2118.884 ns/op
Iteration   1: 2100.521 ns/op
Iteration   2: 2127.857 ns/op
Iteration   3: 2106.187 ns/op
Iteration   4: 2106.260 ns/op
Iteration   5: 2134.973 ns/op
Iteration   6: 2100.129 ns/op
Iteration   7: 2145.286 ns/op
Iteration   8: 2100.638 ns/op
Iteration   9: 2157.530 ns/op
Iteration  10: 2100.240 ns/op
Iteration  11: 2106.957 ns/op
Iteration  12: 2114.068 ns/op
Iteration  13: 2100.845 ns/op
Iteration  14: 2113.843 ns/op
Iteration  15: 2099.420 ns/op
Iteration  16: 2109.890 ns/op
Iteration  17: 2100.219 ns/op
Iteration  18: 2100.587 ns/op
Iteration  19: 2109.679 ns/op
Iteration  20: 2100.380 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2604.677 ns/op
# Warmup Iteration   2: 2544.577 ns/op
# Warmup Iteration   3: 2412.093 ns/op
# Warmup Iteration   4: 2092.292 ns/op
# Warmup Iteration   5: 2122.088 ns/op
Iteration   1: 2092.516 ns/op
Iteration   2: 2118.003 ns/op
Iteration   3: 2092.398 ns/op
Iteration   4: 2093.407 ns/op
Iteration   5: 2126.802 ns/op
Iteration   6: 2092.443 ns/op
Iteration   7: 2138.284 ns/op
Iteration   8: 2094.976 ns/op
Iteration   9: 2151.684 ns/op
Iteration  10: 2092.099 ns/op
Iteration  11: 2092.045 ns/op
Iteration  12: 2102.134 ns/op
Iteration  13: 2089.394 ns/op
Iteration  14: 2100.553 ns/op
Iteration  15: 2092.545 ns/op
Iteration  16: 2100.940 ns/op
Iteration  17: 2090.317 ns/op
Iteration  18: 2090.438 ns/op
Iteration  19: 2100.826 ns/op
Iteration  20: 2090.657 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2775.849 ns/op
# Warmup Iteration   2: 2721.716 ns/op
# Warmup Iteration   3: 2677.168 ns/op
# Warmup Iteration   4: 2293.739 ns/op
# Warmup Iteration   5: 2293.214 ns/op
Iteration   1: 2314.468 ns/op
Iteration   2: 2293.105 ns/op
Iteration   3: 2321.162 ns/op
Iteration   4: 2292.777 ns/op
Iteration   5: 2331.758 ns/op
Iteration   6: 2297.300 ns/op
Iteration   7: 2293.121 ns/op
Iteration   8: 2342.514 ns/op
Iteration   9: 2292.403 ns/op
Iteration  10: 2357.725 ns/op
Iteration  11: 2293.456 ns/op
Iteration  12: 2293.219 ns/op
Iteration  13: 2305.637 ns/op
Iteration  14: 2293.305 ns/op
Iteration  15: 2294.263 ns/op
Iteration  16: 2303.377 ns/op
Iteration  17: 2292.560 ns/op
Iteration  18: 2304.643 ns/op
Iteration  19: 2292.020 ns/op
Iteration  20: 2297.308 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2602.748 ns/op
# Warmup Iteration   2: 2552.115 ns/op
# Warmup Iteration   3: 2427.767 ns/op
# Warmup Iteration   4: 2101.037 ns/op
# Warmup Iteration   5: 2121.622 ns/op
Iteration   1: 2101.106 ns/op
Iteration   2: 2130.853 ns/op
Iteration   3: 2100.367 ns/op
Iteration   4: 2100.523 ns/op
Iteration   5: 2135.159 ns/op
Iteration   6: 2099.735 ns/op
Iteration   7: 2145.193 ns/op
Iteration   8: 2099.913 ns/op
Iteration   9: 2156.513 ns/op
Iteration  10: 2100.101 ns/op
Iteration  11: 2100.463 ns/op
Iteration  12: 2112.231 ns/op
Iteration  13: 2098.754 ns/op
Iteration  14: 2108.480 ns/op
Iteration  15: 2099.494 ns/op
Iteration  16: 2108.429 ns/op
Iteration  17: 2099.523 ns/op
Iteration  18: 2100.113 ns/op
Iteration  19: 2108.646 ns/op
Iteration  20: 2100.177 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2187.564 Â±(99.9%) 33.750 ns/op [Average]
  (min, avg, max) = (2089.394, 2187.564, 2362.907), stdev = 99.512
  CI (99.9%): [2153.814, 2221.314] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = YJ-lQ61(D]+{5?)Mz*+7)BG#=dbx|XeP+4!B7A
=EghHrt0R,;kcc1kk'ry~TG_X;&9>
)@d8&
||T>mm#CuvY|(hx7H>@<c0H2c=r5:>XjH=>e5OE3K9tUtk
ofRA\ Y)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2659.291 ns/op
# Warmup Iteration   2: 2561.165 ns/op
# Warmup Iteration   3: 2415.789 ns/op
# Warmup Iteration   4: 2119.930 ns/op
# Warmup Iteration   5: 2139.243 ns/op
Iteration   1: 2117.725 ns/op
Iteration   2: 2144.344 ns/op
Iteration   3: 2117.883 ns/op
Iteration   4: 2155.614 ns/op
Iteration   5: 2117.575 ns/op
Iteration   6: 2117.615 ns/op
Iteration   7: 2165.676 ns/op
Iteration   8: 2117.576 ns/op
Iteration   9: 2176.675 ns/op
Iteration  10: 2119.921 ns/op
Iteration  11: 2132.864 ns/op
Iteration  12: 2117.359 ns/op
Iteration  13: 2117.696 ns/op
Iteration  14: 2128.364 ns/op
Iteration  15: 2118.021 ns/op
Iteration  16: 2128.789 ns/op
Iteration  17: 2118.070 ns/op
Iteration  18: 2129.151 ns/op
Iteration  19: 2119.130 ns/op
Iteration  20: 2119.999 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2701.215 ns/op
# Warmup Iteration   2: 2563.776 ns/op
# Warmup Iteration   3: 2425.887 ns/op
# Warmup Iteration   4: 2113.578 ns/op
# Warmup Iteration   5: 2134.451 ns/op
Iteration   1: 2113.945 ns/op
Iteration   2: 2140.809 ns/op
Iteration   3: 2112.680 ns/op
Iteration   4: 2156.993 ns/op
Iteration   5: 2125.701 ns/op
Iteration   6: 2116.859 ns/op
Iteration   7: 2159.277 ns/op
Iteration   8: 2112.685 ns/op
Iteration   9: 2171.118 ns/op
Iteration  10: 2113.153 ns/op
Iteration  11: 2127.248 ns/op
Iteration  12: 2112.838 ns/op
Iteration  13: 2113.199 ns/op
Iteration  14: 2122.961 ns/op
Iteration  15: 2112.996 ns/op
Iteration  16: 2122.031 ns/op
Iteration  17: 2112.796 ns/op
Iteration  18: 2122.546 ns/op
Iteration  19: 2113.953 ns/op
Iteration  20: 2116.078 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2856.350 ns/op
# Warmup Iteration   2: 2747.010 ns/op
# Warmup Iteration   3: 2698.785 ns/op
# Warmup Iteration   4: 2313.244 ns/op
# Warmup Iteration   5: 2311.629 ns/op
Iteration   1: 2331.763 ns/op
Iteration   2: 2311.437 ns/op
Iteration   3: 2340.956 ns/op
Iteration   4: 2311.118 ns/op
Iteration   5: 2350.241 ns/op
Iteration   6: 2311.836 ns/op
Iteration   7: 2312.720 ns/op
Iteration   8: 2368.329 ns/op
Iteration   9: 2318.201 ns/op
Iteration  10: 2382.169 ns/op
Iteration  11: 2312.595 ns/op
Iteration  12: 2312.081 ns/op
Iteration  13: 2327.090 ns/op
Iteration  14: 2312.664 ns/op
Iteration  15: 2324.818 ns/op
Iteration  16: 2311.650 ns/op
Iteration  17: 2312.590 ns/op
Iteration  18: 2322.902 ns/op
Iteration  19: 2311.995 ns/op
Iteration  20: 2312.808 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2846.575 ns/op
# Warmup Iteration   2: 2749.221 ns/op
# Warmup Iteration   3: 2705.077 ns/op
# Warmup Iteration   4: 2321.080 ns/op
# Warmup Iteration   5: 2316.243 ns/op
Iteration   1: 2337.406 ns/op
Iteration   2: 2315.367 ns/op
Iteration   3: 2345.446 ns/op
Iteration   4: 2316.917 ns/op
Iteration   5: 2355.247 ns/op
Iteration   6: 2315.230 ns/op
Iteration   7: 2314.822 ns/op
Iteration   8: 2366.348 ns/op
Iteration   9: 2315.060 ns/op
Iteration  10: 2381.049 ns/op
Iteration  11: 2315.197 ns/op
Iteration  12: 2315.311 ns/op
Iteration  13: 2333.199 ns/op
Iteration  14: 2322.559 ns/op
Iteration  15: 2334.638 ns/op
Iteration  16: 2316.345 ns/op
Iteration  17: 2314.951 ns/op
Iteration  18: 2326.405 ns/op
Iteration  19: 2316.565 ns/op
Iteration  20: 2318.061 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2870.783 ns/op
# Warmup Iteration   2: 2742.399 ns/op
# Warmup Iteration   3: 2705.620 ns/op
# Warmup Iteration   4: 2299.294 ns/op
# Warmup Iteration   5: 2300.035 ns/op
Iteration   1: 2318.791 ns/op
Iteration   2: 2298.566 ns/op
Iteration   3: 2328.446 ns/op
Iteration   4: 2299.654 ns/op
Iteration   5: 2338.465 ns/op
Iteration   6: 2298.134 ns/op
Iteration   7: 2298.950 ns/op
Iteration   8: 2348.334 ns/op
Iteration   9: 2298.925 ns/op
Iteration  10: 2364.970 ns/op
Iteration  11: 2297.047 ns/op
Iteration  12: 2297.162 ns/op
Iteration  13: 2308.952 ns/op
Iteration  14: 2298.056 ns/op
Iteration  15: 2312.572 ns/op
Iteration  16: 2296.207 ns/op
Iteration  17: 2296.554 ns/op
Iteration  18: 2310.338 ns/op
Iteration  19: 2299.135 ns/op
Iteration  20: 2311.139 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2243.764 Â±(99.9%) 33.171 ns/op [Average]
  (min, avg, max) = (2112.680, 2243.764, 2382.169), stdev = 97.806
  CI (99.9%): [2210.593, 2276.935] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                            (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  YJ-lQ61(D]+{5?)Mz*+7)BG#=dbx|XeP+4!B7A
=EghHrt0R,;kcc1kk'ry~TG_X;&9>
)@d8&
||T>mm#CuvY|(hx7H>@<c0H2c=r5:>XjH=>e5OE3K9tUtk
ofRA\ Y  avgt  100  2187.564 Â± 33.750  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  YJ-lQ61(D]+{5?)Mz*+7)BG#=dbx|XeP+4!B7A
=EghHrt0R,;kcc1kk'ry~TG_X;&9>
)@d8&
||T>mm#CuvY|(hx7H>@<c0H2c=r5:>XjH=>e5OE3K9tUtk
ofRA\ Y  avgt  100  2243.764 Â± 33.171  ns/op

Benchmark result is saved to split_precompiled_regex_22_131_NonMatch.csv
