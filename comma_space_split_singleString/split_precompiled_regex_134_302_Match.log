# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 


 
	
		 
	
	  
 	
		

	 	
 	
	

	 
 
	

 
 
				 
		
	  ,	  	 
			   	 
 					 	  



	 
	 	

	   
	 	
	 
 
  
 	

 




	
  
	 


		 
 

 



	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1493.044 ns/op
# Warmup Iteration   2: 1281.129 ns/op
# Warmup Iteration   3: 1026.501 ns/op
# Warmup Iteration   4: 1016.425 ns/op
# Warmup Iteration   5: 1029.236 ns/op
Iteration   1: 1034.090 ns/op
Iteration   2: 1039.562 ns/op
Iteration   3: 1045.845 ns/op
Iteration   4: 1017.274 ns/op
Iteration   5: 1023.386 ns/op
Iteration   6: 1021.650 ns/op
Iteration   7: 1020.939 ns/op
Iteration   8: 1016.820 ns/op
Iteration   9: 1022.222 ns/op
Iteration  10: 1021.967 ns/op
Iteration  11: 1022.656 ns/op
Iteration  12: 1017.439 ns/op
Iteration  13: 1022.200 ns/op
Iteration  14: 1022.048 ns/op
Iteration  15: 1024.954 ns/op
Iteration  16: 1016.884 ns/op
Iteration  17: 1019.326 ns/op
Iteration  18: 1018.891 ns/op
Iteration  19: 1018.960 ns/op
Iteration  20: 1017.067 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1521.110 ns/op
# Warmup Iteration   2: 1337.146 ns/op
# Warmup Iteration   3: 1060.043 ns/op
# Warmup Iteration   4: 1046.242 ns/op
# Warmup Iteration   5: 1062.041 ns/op
Iteration   1: 1065.803 ns/op
Iteration   2: 1070.661 ns/op
Iteration   3: 1046.534 ns/op
Iteration   4: 1076.136 ns/op
Iteration   5: 1053.350 ns/op
Iteration   6: 1053.332 ns/op
Iteration   7: 1046.871 ns/op
Iteration   8: 1052.408 ns/op
Iteration   9: 1054.768 ns/op
Iteration  10: 1056.676 ns/op
Iteration  11: 1046.368 ns/op
Iteration  12: 1053.331 ns/op
Iteration  13: 1053.992 ns/op
Iteration  14: 1053.295 ns/op
Iteration  15: 1045.957 ns/op
Iteration  16: 1051.908 ns/op
Iteration  17: 1048.263 ns/op
Iteration  18: 1046.212 ns/op
Iteration  19: 1048.797 ns/op
Iteration  20: 1048.772 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1492.678 ns/op
# Warmup Iteration   2: 1289.030 ns/op
# Warmup Iteration   3: 1032.389 ns/op
# Warmup Iteration   4: 1023.163 ns/op
# Warmup Iteration   5: 1035.721 ns/op
Iteration   1: 1040.702 ns/op
Iteration   2: 1045.930 ns/op
Iteration   3: 1051.454 ns/op
Iteration   4: 1022.127 ns/op
Iteration   5: 1027.762 ns/op
Iteration   6: 1027.200 ns/op
Iteration   7: 1027.475 ns/op
Iteration   8: 1023.385 ns/op
Iteration   9: 1028.574 ns/op
Iteration  10: 1028.889 ns/op
Iteration  11: 1029.073 ns/op
Iteration  12: 1023.416 ns/op
Iteration  13: 1027.969 ns/op
Iteration  14: 1027.919 ns/op
Iteration  15: 1028.952 ns/op
Iteration  16: 1023.422 ns/op
Iteration  17: 1025.637 ns/op
Iteration  18: 1025.778 ns/op
Iteration  19: 1026.201 ns/op
Iteration  20: 1023.430 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1424.227 ns/op
# Warmup Iteration   2: 1181.494 ns/op
# Warmup Iteration   3: 958.268 ns/op
# Warmup Iteration   4: 962.220 ns/op
# Warmup Iteration   5: 965.863 ns/op
Iteration   1: 949.718 ns/op
Iteration   2: 970.734 ns/op
Iteration   3: 977.061 ns/op
Iteration   4: 955.904 ns/op
Iteration   5: 955.627 ns/op
Iteration   6: 953.651 ns/op
Iteration   7: 958.672 ns/op
Iteration   8: 954.253 ns/op
Iteration   9: 956.057 ns/op
Iteration  10: 955.941 ns/op
Iteration  11: 950.772 ns/op
Iteration  12: 955.336 ns/op
Iteration  13: 956.758 ns/op
Iteration  14: 957.425 ns/op
Iteration  15: 958.734 ns/op
Iteration  16: 950.022 ns/op
Iteration  17: 955.489 ns/op
Iteration  18: 963.367 ns/op
Iteration  19: 953.147 ns/op
Iteration  20: 958.297 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1522.822 ns/op
# Warmup Iteration   2: 1329.037 ns/op
# Warmup Iteration   3: 1052.778 ns/op
# Warmup Iteration   4: 1043.687 ns/op
# Warmup Iteration   5: 1056.451 ns/op
Iteration   1: 1060.770 ns/op
Iteration   2: 1066.688 ns/op
Iteration   3: 1044.067 ns/op
Iteration   4: 1072.475 ns/op
Iteration   5: 1047.986 ns/op
Iteration   6: 1048.352 ns/op
Iteration   7: 1043.641 ns/op
Iteration   8: 1048.023 ns/op
Iteration   9: 1053.652 ns/op
Iteration  10: 1048.386 ns/op
Iteration  11: 1043.478 ns/op
Iteration  12: 1049.035 ns/op
Iteration  13: 1049.020 ns/op
Iteration  14: 1049.501 ns/op
Iteration  15: 1043.289 ns/op
Iteration  16: 1050.793 ns/op
Iteration  17: 1050.846 ns/op
Iteration  18: 1043.557 ns/op
Iteration  19: 1046.458 ns/op
Iteration  20: 1045.940 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1022.758 Â±(99.9%) 12.112 ns/op [Average]
  (min, avg, max) = (949.718, 1022.758, 1076.136), stdev = 35.714
  CI (99.9%): [1010.646, 1034.871] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 


 
	
		 
	
	  
 	
		

	 	
 	
	

	 
 
	

 
 
				 
		
	  ,	  	 
			   	 
 					 	  



	 
	 	

	   
	 	
	 
 
  
 	

 




	
  
	 


		 
 

 



	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1424.097 ns/op
# Warmup Iteration   2: 1192.885 ns/op
# Warmup Iteration   3: 972.121 ns/op
# Warmup Iteration   4: 976.482 ns/op
# Warmup Iteration   5: 978.873 ns/op
Iteration   1: 963.435 ns/op
Iteration   2: 983.700 ns/op
Iteration   3: 990.195 ns/op
Iteration   4: 969.342 ns/op
Iteration   5: 967.653 ns/op
Iteration   6: 963.136 ns/op
Iteration   7: 967.466 ns/op
Iteration   8: 967.323 ns/op
Iteration   9: 966.923 ns/op
Iteration  10: 967.496 ns/op
Iteration  11: 967.905 ns/op
Iteration  12: 963.173 ns/op
Iteration  13: 967.890 ns/op
Iteration  14: 968.029 ns/op
Iteration  15: 966.504 ns/op
Iteration  16: 969.735 ns/op
Iteration  17: 963.964 ns/op
Iteration  18: 966.251 ns/op
Iteration  19: 965.986 ns/op
Iteration  20: 976.077 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1427.460 ns/op
# Warmup Iteration   2: 1193.085 ns/op
# Warmup Iteration   3: 975.175 ns/op
# Warmup Iteration   4: 977.729 ns/op
# Warmup Iteration   5: 981.363 ns/op
Iteration   1: 965.881 ns/op
Iteration   2: 986.926 ns/op
Iteration   3: 991.465 ns/op
Iteration   4: 970.110 ns/op
Iteration   5: 969.767 ns/op
Iteration   6: 965.628 ns/op
Iteration   7: 970.311 ns/op
Iteration   8: 970.009 ns/op
Iteration   9: 977.320 ns/op
Iteration  10: 970.827 ns/op
Iteration  11: 973.384 ns/op
Iteration  12: 965.272 ns/op
Iteration  13: 976.684 ns/op
Iteration  14: 996.267 ns/op
Iteration  15: 968.057 ns/op
Iteration  16: 968.530 ns/op
Iteration  17: 965.958 ns/op
Iteration  18: 975.249 ns/op
Iteration  19: 968.741 ns/op
Iteration  20: 968.725 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1494.091 ns/op
# Warmup Iteration   2: 1324.301 ns/op
# Warmup Iteration   3: 1060.926 ns/op
# Warmup Iteration   4: 1046.965 ns/op
# Warmup Iteration   5: 1069.444 ns/op
Iteration   1: 1069.174 ns/op
Iteration   2: 1070.209 ns/op
Iteration   3: 1077.454 ns/op
Iteration   4: 1046.441 ns/op
Iteration   5: 1052.307 ns/op
Iteration   6: 1051.641 ns/op
Iteration   7: 1051.932 ns/op
Iteration   8: 1046.974 ns/op
Iteration   9: 1051.537 ns/op
Iteration  10: 1051.486 ns/op
Iteration  11: 1051.184 ns/op
Iteration  12: 1046.850 ns/op
Iteration  13: 1052.247 ns/op
Iteration  14: 1054.352 ns/op
Iteration  15: 1059.647 ns/op
Iteration  16: 1046.868 ns/op
Iteration  17: 1051.237 ns/op
Iteration  18: 1050.527 ns/op
Iteration  19: 1057.250 ns/op
Iteration  20: 1046.566 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1428.317 ns/op
# Warmup Iteration   2: 1200.727 ns/op
# Warmup Iteration   3: 977.221 ns/op
# Warmup Iteration   4: 981.702 ns/op
# Warmup Iteration   5: 990.258 ns/op
Iteration   1: 967.090 ns/op
Iteration   2: 1012.616 ns/op
Iteration   3: 995.025 ns/op
Iteration   4: 973.252 ns/op
Iteration   5: 972.988 ns/op
Iteration   6: 967.555 ns/op
Iteration   7: 972.389 ns/op
Iteration   8: 972.946 ns/op
Iteration   9: 972.346 ns/op
Iteration  10: 972.912 ns/op
Iteration  11: 967.695 ns/op
Iteration  12: 978.071 ns/op
Iteration  13: 976.750 ns/op
Iteration  14: 974.417 ns/op
Iteration  15: 981.064 ns/op
Iteration  16: 972.920 ns/op
Iteration  17: 967.318 ns/op
Iteration  18: 972.165 ns/op
Iteration  19: 970.957 ns/op
Iteration  20: 970.311 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1421.642 ns/op
# Warmup Iteration   2: 1215.344 ns/op
# Warmup Iteration   3: 990.893 ns/op
# Warmup Iteration   4: 992.522 ns/op
# Warmup Iteration   5: 986.405 ns/op
Iteration   1: 991.832 ns/op
Iteration   2: 1001.980 ns/op
Iteration   3: 1006.800 ns/op
Iteration   4: 984.434 ns/op
Iteration   5: 984.354 ns/op
Iteration   6: 980.472 ns/op
Iteration   7: 985.298 ns/op
Iteration   8: 985.960 ns/op
Iteration   9: 987.005 ns/op
Iteration  10: 985.555 ns/op
Iteration  11: 980.570 ns/op
Iteration  12: 986.061 ns/op
Iteration  13: 989.003 ns/op
Iteration  14: 1007.256 ns/op
Iteration  15: 983.675 ns/op
Iteration  16: 980.400 ns/op
Iteration  17: 982.665 ns/op
Iteration  18: 983.880 ns/op
Iteration  19: 985.412 ns/op
Iteration  20: 985.634 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  992.022 Â±(99.9%) 11.202 ns/op [Average]
  (min, avg, max) = (963.136, 992.022, 1077.454), stdev = 33.029
  CI (99.9%): [980.820, 1003.224] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  


 
	
		 
	
	  
 	
		

	 	
 	
	

	 
 
	

 
 
				 
		
	  ,	  	 
			   	 
 					 	  



	 
	 	

	   
	 	
	 
 
  
 	

 




	
  
	 


		 
 

 



	  avgt  100  1022.758 Â± 12.112  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  


 
	
		 
	
	  
 	
		

	 	
 	
	

	 
 
	

 
 
				 
		
	  ,	  	 
			   	 
 					 	  



	 
	 	

	   
	 	
	 
 
  
 	

 




	
  
	 


		 
 

 



	  avgt  100   992.022 Â± 11.202  ns/op

Benchmark result is saved to split_precompiled_regex_134_302_Match.csv
