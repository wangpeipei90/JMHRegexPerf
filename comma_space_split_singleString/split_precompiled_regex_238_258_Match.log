# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
		 
    

	

	
		 
  
 

	 	 				

 


  	
	  			
		
 	   
			
 		
	 

 
	
			, 
 	 		
	   	
 				 				
 		 	 

 
 	 
	
   
		
	  	
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1335.264 ns/op
# Warmup Iteration   2: 1045.704 ns/op
# Warmup Iteration   3: 865.749 ns/op
# Warmup Iteration   4: 868.486 ns/op
# Warmup Iteration   5: 874.051 ns/op
Iteration   1: 876.169 ns/op
Iteration   2: 882.364 ns/op
Iteration   3: 861.626 ns/op
Iteration   4: 857.217 ns/op
Iteration   5: 861.892 ns/op
Iteration   6: 861.639 ns/op
Iteration   7: 861.466 ns/op
Iteration   8: 861.950 ns/op
Iteration   9: 862.040 ns/op
Iteration  10: 861.509 ns/op
Iteration  11: 862.197 ns/op
Iteration  12: 862.281 ns/op
Iteration  13: 859.218 ns/op
Iteration  14: 857.628 ns/op
Iteration  15: 859.152 ns/op
Iteration  16: 860.661 ns/op
Iteration  17: 860.213 ns/op
Iteration  18: 861.629 ns/op
Iteration  19: 863.120 ns/op
Iteration  20: 860.415 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1384.381 ns/op
# Warmup Iteration   2: 1122.021 ns/op
# Warmup Iteration   3: 919.018 ns/op
# Warmup Iteration   4: 922.237 ns/op
# Warmup Iteration   5: 926.047 ns/op
Iteration   1: 930.189 ns/op
Iteration   2: 910.689 ns/op
Iteration   3: 936.165 ns/op
Iteration   4: 915.320 ns/op
Iteration   5: 914.848 ns/op
Iteration   6: 914.931 ns/op
Iteration   7: 916.058 ns/op
Iteration   8: 910.880 ns/op
Iteration   9: 916.067 ns/op
Iteration  10: 916.360 ns/op
Iteration  11: 917.038 ns/op
Iteration  12: 920.672 ns/op
Iteration  13: 930.735 ns/op
Iteration  14: 914.793 ns/op
Iteration  15: 911.088 ns/op
Iteration  16: 914.697 ns/op
Iteration  17: 914.542 ns/op
Iteration  18: 914.216 ns/op
Iteration  19: 922.363 ns/op
Iteration  20: 922.954 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1409.653 ns/op
# Warmup Iteration   2: 1165.925 ns/op
# Warmup Iteration   3: 951.575 ns/op
# Warmup Iteration   4: 953.628 ns/op
# Warmup Iteration   5: 957.203 ns/op
Iteration   1: 942.364 ns/op
Iteration   2: 962.624 ns/op
Iteration   3: 968.713 ns/op
Iteration   4: 946.306 ns/op
Iteration   5: 946.366 ns/op
Iteration   6: 942.102 ns/op
Iteration   7: 946.090 ns/op
Iteration   8: 951.053 ns/op
Iteration   9: 947.422 ns/op
Iteration  10: 947.498 ns/op
Iteration  11: 947.841 ns/op
Iteration  12: 942.760 ns/op
Iteration  13: 947.103 ns/op
Iteration  14: 948.061 ns/op
Iteration  15: 945.187 ns/op
Iteration  16: 946.617 ns/op
Iteration  17: 943.000 ns/op
Iteration  18: 945.450 ns/op
Iteration  19: 946.091 ns/op
Iteration  20: 947.134 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1407.503 ns/op
# Warmup Iteration   2: 1155.465 ns/op
# Warmup Iteration   3: 942.967 ns/op
# Warmup Iteration   4: 945.827 ns/op
# Warmup Iteration   5: 950.230 ns/op
Iteration   1: 933.709 ns/op
Iteration   2: 955.612 ns/op
Iteration   3: 965.455 ns/op
Iteration   4: 938.346 ns/op
Iteration   5: 938.504 ns/op
Iteration   6: 938.249 ns/op
Iteration   7: 934.113 ns/op
Iteration   8: 939.044 ns/op
Iteration   9: 938.420 ns/op
Iteration  10: 938.704 ns/op
Iteration  11: 938.957 ns/op
Iteration  12: 934.122 ns/op
Iteration  13: 937.809 ns/op
Iteration  14: 939.064 ns/op
Iteration  15: 940.545 ns/op
Iteration  16: 935.938 ns/op
Iteration  17: 936.239 ns/op
Iteration  18: 933.912 ns/op
Iteration  19: 943.200 ns/op
Iteration  20: 942.260 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1414.613 ns/op
# Warmup Iteration   2: 1164.684 ns/op
# Warmup Iteration   3: 962.906 ns/op
# Warmup Iteration   4: 965.641 ns/op
# Warmup Iteration   5: 969.997 ns/op
Iteration   1: 954.734 ns/op
Iteration   2: 974.579 ns/op
Iteration   3: 979.800 ns/op
Iteration   4: 960.113 ns/op
Iteration   5: 958.132 ns/op
Iteration   6: 954.379 ns/op
Iteration   7: 958.779 ns/op
Iteration   8: 958.184 ns/op
Iteration   9: 959.752 ns/op
Iteration  10: 959.763 ns/op
Iteration  11: 954.825 ns/op
Iteration  12: 971.184 ns/op
Iteration  13: 962.041 ns/op
Iteration  14: 962.259 ns/op
Iteration  15: 959.243 ns/op
Iteration  16: 954.578 ns/op
Iteration  17: 958.915 ns/op
Iteration  18: 962.897 ns/op
Iteration  19: 956.905 ns/op
Iteration  20: 956.767 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  925.988 Â±(99.9%) 11.987 ns/op [Average]
  (min, avg, max) = (857.217, 925.988, 979.800), stdev = 35.345
  CI (99.9%): [914.001, 937.976] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
		 
    

	

	
		 
  
 

	 	 				

 


  	
	  			
		
 	   
			
 		
	 

 
	
			, 
 	 		
	   	
 				 				
 		 	 

 
 	 
	
   
		
	  	
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1421.214 ns/op
# Warmup Iteration   2: 1187.211 ns/op
# Warmup Iteration   3: 968.239 ns/op
# Warmup Iteration   4: 971.556 ns/op
# Warmup Iteration   5: 976.014 ns/op
Iteration   1: 958.642 ns/op
Iteration   2: 980.211 ns/op
Iteration   3: 987.115 ns/op
Iteration   4: 964.577 ns/op
Iteration   5: 963.848 ns/op
Iteration   6: 964.758 ns/op
Iteration   7: 960.044 ns/op
Iteration   8: 964.763 ns/op
Iteration   9: 966.015 ns/op
Iteration  10: 965.586 ns/op
Iteration  11: 966.742 ns/op
Iteration  12: 964.875 ns/op
Iteration  13: 968.065 ns/op
Iteration  14: 965.653 ns/op
Iteration  15: 972.239 ns/op
Iteration  16: 962.692 ns/op
Iteration  17: 961.759 ns/op
Iteration  18: 959.411 ns/op
Iteration  19: 961.914 ns/op
Iteration  20: 961.411 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1294.384 ns/op
# Warmup Iteration   2: 1036.457 ns/op
# Warmup Iteration   3: 868.440 ns/op
# Warmup Iteration   4: 874.222 ns/op
# Warmup Iteration   5: 873.688 ns/op
Iteration   1: 878.818 ns/op
Iteration   2: 885.033 ns/op
Iteration   3: 864.046 ns/op
Iteration   4: 863.710 ns/op
Iteration   5: 863.314 ns/op
Iteration   6: 863.668 ns/op
Iteration   7: 858.628 ns/op
Iteration   8: 863.045 ns/op
Iteration   9: 862.855 ns/op
Iteration  10: 862.921 ns/op
Iteration  11: 863.757 ns/op
Iteration  12: 870.309 ns/op
Iteration  13: 860.793 ns/op
Iteration  14: 861.537 ns/op
Iteration  15: 860.853 ns/op
Iteration  16: 862.641 ns/op
Iteration  17: 863.533 ns/op
Iteration  18: 861.186 ns/op
Iteration  19: 858.822 ns/op
Iteration  20: 860.368 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1319.672 ns/op
# Warmup Iteration   2: 1059.963 ns/op
# Warmup Iteration   3: 885.380 ns/op
# Warmup Iteration   4: 888.205 ns/op
# Warmup Iteration   5: 896.105 ns/op
Iteration   1: 895.732 ns/op
Iteration   2: 901.338 ns/op
Iteration   3: 880.580 ns/op
Iteration   4: 879.829 ns/op
Iteration   5: 875.743 ns/op
Iteration   6: 880.102 ns/op
Iteration   7: 880.202 ns/op
Iteration   8: 887.450 ns/op
Iteration   9: 880.996 ns/op
Iteration  10: 889.644 ns/op
Iteration  11: 888.005 ns/op
Iteration  12: 887.323 ns/op
Iteration  13: 881.369 ns/op
Iteration  14: 876.178 ns/op
Iteration  15: 879.214 ns/op
Iteration  16: 878.298 ns/op
Iteration  17: 880.325 ns/op
Iteration  18: 878.684 ns/op
Iteration  19: 878.381 ns/op
Iteration  20: 878.504 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1419.382 ns/op
# Warmup Iteration   2: 1199.978 ns/op
# Warmup Iteration   3: 978.860 ns/op
# Warmup Iteration   4: 981.903 ns/op
# Warmup Iteration   5: 985.285 ns/op
Iteration   1: 969.014 ns/op
Iteration   2: 989.874 ns/op
Iteration   3: 996.708 ns/op
Iteration   4: 974.240 ns/op
Iteration   5: 973.248 ns/op
Iteration   6: 968.930 ns/op
Iteration   7: 973.039 ns/op
Iteration   8: 973.826 ns/op
Iteration   9: 976.750 ns/op
Iteration  10: 975.478 ns/op
Iteration  11: 975.299 ns/op
Iteration  12: 970.132 ns/op
Iteration  13: 976.806 ns/op
Iteration  14: 991.883 ns/op
Iteration  15: 974.379 ns/op
Iteration  16: 975.670 ns/op
Iteration  17: 970.417 ns/op
Iteration  18: 972.866 ns/op
Iteration  19: 974.850 ns/op
Iteration  20: 974.891 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1308.649 ns/op
# Warmup Iteration   2: 1024.616 ns/op
# Warmup Iteration   3: 860.499 ns/op
# Warmup Iteration   4: 862.862 ns/op
# Warmup Iteration   5: 866.167 ns/op
Iteration   1: 870.506 ns/op
Iteration   2: 878.198 ns/op
Iteration   3: 856.657 ns/op
Iteration   4: 856.357 ns/op
Iteration   5: 855.691 ns/op
Iteration   6: 855.705 ns/op
Iteration   7: 856.243 ns/op
Iteration   8: 852.762 ns/op
Iteration   9: 856.078 ns/op
Iteration  10: 855.751 ns/op
Iteration  11: 860.774 ns/op
Iteration  12: 856.525 ns/op
Iteration  13: 854.802 ns/op
Iteration  14: 856.260 ns/op
Iteration  15: 857.152 ns/op
Iteration  16: 856.615 ns/op
Iteration  17: 856.751 ns/op
Iteration  18: 855.795 ns/op
Iteration  19: 856.073 ns/op
Iteration  20: 856.181 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  909.572 Â±(99.9%) 17.558 ns/op [Average]
  (min, avg, max) = (852.762, 909.572, 996.708), stdev = 51.772
  CI (99.9%): [892.014, 927.131] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                           (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	
		 
    

	

	
		 
  
 

	 	 				

 


  	
	  			
		
 	   
			
 		
	 

 
	
			, 
 	 		
	   	
 				 				
 		 	 

 
 	 
	
   
		
	  	
  avgt  100  925.988 Â± 11.987  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	
		 
    

	

	
		 
  
 

	 	 				

 


  	
	  			
		
 	   
			
 		
	 

 
	
			, 
 	 		
	   	
 				 				
 		 	 

 
 	 
	
   
		
	  	
  avgt  100  909.572 Â± 17.558  ns/op

Benchmark result is saved to split_precompiled_regex_238_258_Match.csv
