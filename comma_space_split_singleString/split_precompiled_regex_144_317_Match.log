# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
 		 

		


   
		 	
 
				

  

	

 		

	

	  



		

 		
				
 	     
  		 			


	 	 						
		  ,	

      	

  


 
	
	
	


	


  
 

 
 
   
 
			 

			

	 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1392.557 ns/op
# Warmup Iteration   2: 1128.042 ns/op
# Warmup Iteration   3: 919.509 ns/op
# Warmup Iteration   4: 923.670 ns/op
# Warmup Iteration   5: 925.868 ns/op
Iteration   1: 930.130 ns/op
Iteration   2: 910.282 ns/op
Iteration   3: 936.004 ns/op
Iteration   4: 914.822 ns/op
Iteration   5: 914.556 ns/op
Iteration   6: 914.287 ns/op
Iteration   7: 914.101 ns/op
Iteration   8: 910.742 ns/op
Iteration   9: 915.020 ns/op
Iteration  10: 914.801 ns/op
Iteration  11: 922.092 ns/op
Iteration  12: 917.358 ns/op
Iteration  13: 916.079 ns/op
Iteration  14: 910.388 ns/op
Iteration  15: 912.475 ns/op
Iteration  16: 913.396 ns/op
Iteration  17: 912.938 ns/op
Iteration  18: 913.319 ns/op
Iteration  19: 913.227 ns/op
Iteration  20: 913.461 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1482.416 ns/op
# Warmup Iteration   2: 1279.764 ns/op
# Warmup Iteration   3: 1028.045 ns/op
# Warmup Iteration   4: 1022.273 ns/op
# Warmup Iteration   5: 1025.213 ns/op
Iteration   1: 1033.941 ns/op
Iteration   2: 1038.070 ns/op
Iteration   3: 1045.029 ns/op
Iteration   4: 1024.359 ns/op
Iteration   5: 1029.999 ns/op
Iteration   6: 1021.075 ns/op
Iteration   7: 1023.013 ns/op
Iteration   8: 1019.285 ns/op
Iteration   9: 1021.373 ns/op
Iteration  10: 1024.479 ns/op
Iteration  11: 1020.126 ns/op
Iteration  12: 1016.351 ns/op
Iteration  13: 1020.585 ns/op
Iteration  14: 1021.142 ns/op
Iteration  15: 1022.683 ns/op
Iteration  16: 1016.074 ns/op
Iteration  17: 1034.966 ns/op
Iteration  18: 1019.071 ns/op
Iteration  19: 1018.539 ns/op
Iteration  20: 1018.803 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1481.494 ns/op
# Warmup Iteration   2: 1280.887 ns/op
# Warmup Iteration   3: 1025.266 ns/op
# Warmup Iteration   4: 1017.579 ns/op
# Warmup Iteration   5: 1029.477 ns/op
Iteration   1: 1033.584 ns/op
Iteration   2: 1039.309 ns/op
Iteration   3: 1045.432 ns/op
Iteration   4: 1017.410 ns/op
Iteration   5: 1023.644 ns/op
Iteration   6: 1020.772 ns/op
Iteration   7: 1020.759 ns/op
Iteration   8: 1016.850 ns/op
Iteration   9: 1020.354 ns/op
Iteration  10: 1020.604 ns/op
Iteration  11: 1023.419 ns/op
Iteration  12: 1017.364 ns/op
Iteration  13: 1022.436 ns/op
Iteration  14: 1021.511 ns/op
Iteration  15: 1022.367 ns/op
Iteration  16: 1017.207 ns/op
Iteration  17: 1019.066 ns/op
Iteration  18: 1019.541 ns/op
Iteration  19: 1018.993 ns/op
Iteration  20: 1017.152 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1480.306 ns/op
# Warmup Iteration   2: 1285.545 ns/op
# Warmup Iteration   3: 1027.037 ns/op
# Warmup Iteration   4: 1016.865 ns/op
# Warmup Iteration   5: 1031.883 ns/op
Iteration   1: 1033.991 ns/op
Iteration   2: 1038.608 ns/op
Iteration   3: 1045.489 ns/op
Iteration   4: 1016.800 ns/op
Iteration   5: 1022.209 ns/op
Iteration   6: 1021.560 ns/op
Iteration   7: 1021.104 ns/op
Iteration   8: 1016.522 ns/op
Iteration   9: 1022.109 ns/op
Iteration  10: 1022.153 ns/op
Iteration  11: 1022.177 ns/op
Iteration  12: 1016.554 ns/op
Iteration  13: 1027.291 ns/op
Iteration  14: 1024.132 ns/op
Iteration  15: 1025.848 ns/op
Iteration  16: 1016.914 ns/op
Iteration  17: 1024.687 ns/op
Iteration  18: 1026.262 ns/op
Iteration  19: 1020.466 ns/op
Iteration  20: 1016.749 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1394.580 ns/op
# Warmup Iteration   2: 1145.866 ns/op
# Warmup Iteration   3: 929.731 ns/op
# Warmup Iteration   4: 932.433 ns/op
# Warmup Iteration   5: 936.359 ns/op
Iteration   1: 941.048 ns/op
Iteration   2: 921.424 ns/op
Iteration   3: 947.942 ns/op
Iteration   4: 926.827 ns/op
Iteration   5: 925.089 ns/op
Iteration   6: 925.378 ns/op
Iteration   7: 925.969 ns/op
Iteration   8: 921.230 ns/op
Iteration   9: 926.441 ns/op
Iteration  10: 926.194 ns/op
Iteration  11: 925.804 ns/op
Iteration  12: 927.287 ns/op
Iteration  13: 927.574 ns/op
Iteration  14: 921.093 ns/op
Iteration  15: 923.531 ns/op
Iteration  16: 924.228 ns/op
Iteration  17: 925.894 ns/op
Iteration  18: 922.898 ns/op
Iteration  19: 924.650 ns/op
Iteration  20: 921.138 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  982.795 Â±(99.9%) 17.328 ns/op [Average]
  (min, avg, max) = (910.282, 982.795, 1045.489), stdev = 51.093
  CI (99.9%): [965.466, 1000.123] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
 		 

		


   
		 	
 
				

  

	

 		

	

	  



		

 		
				
 	     
  		 			


	 	 						
		  ,	

      	

  


 
	
	
	


	


  
 

 
 
   
 
			 

			

	 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1507.733 ns/op
# Warmup Iteration   2: 1318.812 ns/op
# Warmup Iteration   3: 1051.935 ns/op
# Warmup Iteration   4: 1041.526 ns/op
# Warmup Iteration   5: 1055.275 ns/op
Iteration   1: 1059.010 ns/op
Iteration   2: 1071.204 ns/op
Iteration   3: 1077.536 ns/op
Iteration   4: 1041.543 ns/op
Iteration   5: 1047.504 ns/op
Iteration   6: 1046.836 ns/op
Iteration   7: 1047.395 ns/op
Iteration   8: 1042.520 ns/op
Iteration   9: 1047.144 ns/op
Iteration  10: 1046.536 ns/op
Iteration  11: 1047.598 ns/op
Iteration  12: 1042.441 ns/op
Iteration  13: 1047.490 ns/op
Iteration  14: 1047.099 ns/op
Iteration  15: 1049.235 ns/op
Iteration  16: 1041.097 ns/op
Iteration  17: 1055.290 ns/op
Iteration  18: 1045.856 ns/op
Iteration  19: 1044.713 ns/op
Iteration  20: 1041.336 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1478.970 ns/op
# Warmup Iteration   2: 1302.746 ns/op
# Warmup Iteration   3: 1049.221 ns/op
# Warmup Iteration   4: 1037.085 ns/op
# Warmup Iteration   5: 1050.728 ns/op
Iteration   1: 1055.818 ns/op
Iteration   2: 1060.595 ns/op
Iteration   3: 1066.127 ns/op
Iteration   4: 1037.285 ns/op
Iteration   5: 1043.761 ns/op
Iteration   6: 1042.042 ns/op
Iteration   7: 1041.876 ns/op
Iteration   8: 1037.580 ns/op
Iteration   9: 1042.057 ns/op
Iteration  10: 1042.298 ns/op
Iteration  11: 1057.367 ns/op
Iteration  12: 1037.888 ns/op
Iteration  13: 1045.578 ns/op
Iteration  14: 1065.700 ns/op
Iteration  15: 1061.949 ns/op
Iteration  16: 1037.138 ns/op
Iteration  17: 1048.016 ns/op
Iteration  18: 1041.813 ns/op
Iteration  19: 1041.952 ns/op
Iteration  20: 1035.723 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1483.241 ns/op
# Warmup Iteration   2: 1305.733 ns/op
# Warmup Iteration   3: 1050.787 ns/op
# Warmup Iteration   4: 1040.748 ns/op
# Warmup Iteration   5: 1054.572 ns/op
Iteration   1: 1058.487 ns/op
Iteration   2: 1066.907 ns/op
Iteration   3: 1070.928 ns/op
Iteration   4: 1039.921 ns/op
Iteration   5: 1046.110 ns/op
Iteration   6: 1047.097 ns/op
Iteration   7: 1046.069 ns/op
Iteration   8: 1039.835 ns/op
Iteration   9: 1059.622 ns/op
Iteration  10: 1045.169 ns/op
Iteration  11: 1045.680 ns/op
Iteration  12: 1040.034 ns/op
Iteration  13: 1045.659 ns/op
Iteration  14: 1046.453 ns/op
Iteration  15: 1045.174 ns/op
Iteration  16: 1040.570 ns/op
Iteration  17: 1050.342 ns/op
Iteration  18: 1043.454 ns/op
Iteration  19: 1042.861 ns/op
Iteration  20: 1040.333 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1379.382 ns/op
# Warmup Iteration   2: 1130.211 ns/op
# Warmup Iteration   3: 933.621 ns/op
# Warmup Iteration   4: 938.238 ns/op
# Warmup Iteration   5: 940.049 ns/op
Iteration   1: 945.151 ns/op
Iteration   2: 924.375 ns/op
Iteration   3: 951.096 ns/op
Iteration   4: 928.819 ns/op
Iteration   5: 929.215 ns/op
Iteration   6: 930.956 ns/op
Iteration   7: 932.082 ns/op
Iteration   8: 928.491 ns/op
Iteration   9: 924.511 ns/op
Iteration  10: 929.867 ns/op
Iteration  11: 931.842 ns/op
Iteration  12: 928.978 ns/op
Iteration  13: 928.371 ns/op
Iteration  14: 927.868 ns/op
Iteration  15: 925.935 ns/op
Iteration  16: 923.723 ns/op
Iteration  17: 927.410 ns/op
Iteration  18: 926.598 ns/op
Iteration  19: 926.562 ns/op
Iteration  20: 927.110 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1479.734 ns/op
# Warmup Iteration   2: 1307.275 ns/op
# Warmup Iteration   3: 1051.963 ns/op
# Warmup Iteration   4: 1041.141 ns/op
# Warmup Iteration   5: 1054.419 ns/op
Iteration   1: 1059.473 ns/op
Iteration   2: 1064.078 ns/op
Iteration   3: 1069.416 ns/op
Iteration   4: 1041.885 ns/op
Iteration   5: 1047.850 ns/op
Iteration   6: 1046.856 ns/op
Iteration   7: 1046.662 ns/op
Iteration   8: 1041.535 ns/op
Iteration   9: 1047.768 ns/op
Iteration  10: 1047.995 ns/op
Iteration  11: 1048.031 ns/op
Iteration  12: 1041.991 ns/op
Iteration  13: 1059.206 ns/op
Iteration  14: 1048.166 ns/op
Iteration  15: 1048.336 ns/op
Iteration  16: 1042.018 ns/op
Iteration  17: 1049.987 ns/op
Iteration  18: 1044.330 ns/op
Iteration  19: 1046.087 ns/op
Iteration  20: 1041.539 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1024.748 Â±(99.9%) 16.419 ns/op [Average]
  (min, avg, max) = (923.723, 1024.748, 1077.536), stdev = 48.410
  CI (99.9%): [1008.330, 1041.167] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                      (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
 		 

		


   
		 	
 
				

  

	

 		

	

	  



		

 		
				
 	     
  		 			


	 	 						
		  ,	

      	

  


 
	
	
	


	


  
 

 
 
   
 
			 

			

	   avgt  100   982.795 Â± 17.328  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
 		 

		


   
		 	
 
				

  

	

 		

	

	  



		

 		
				
 	     
  		 			


	 	 						
		  ,	

      	

  


 
	
	
	


	


  
 

 
 
   
 
			 

			

	   avgt  100  1024.748 Â± 16.419  ns/op

Benchmark result is saved to split_precompiled_regex_144_317_Match.csv
