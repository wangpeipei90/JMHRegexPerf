# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 

	

   
	 

	


    

			 
  
		
	 	
	 
 	
	  	 	   
		 

	
	
	
 

 
			  


		 	
	 
  

		

	,  
 
	

	
 		 

		  



	 

  

 			
 
		  		)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1353.817 ns/op
# Warmup Iteration   2: 1075.887 ns/op
# Warmup Iteration   3: 887.617 ns/op
# Warmup Iteration   4: 890.747 ns/op
# Warmup Iteration   5: 894.926 ns/op
Iteration   1: 899.411 ns/op
Iteration   2: 905.659 ns/op
Iteration   3: 880.475 ns/op
Iteration   4: 886.747 ns/op
Iteration   5: 884.334 ns/op
Iteration   6: 883.541 ns/op
Iteration   7: 884.178 ns/op
Iteration   8: 884.600 ns/op
Iteration   9: 888.551 ns/op
Iteration  10: 884.288 ns/op
Iteration  11: 879.878 ns/op
Iteration  12: 884.275 ns/op
Iteration  13: 887.659 ns/op
Iteration  14: 887.532 ns/op
Iteration  15: 882.387 ns/op
Iteration  16: 882.562 ns/op
Iteration  17: 882.039 ns/op
Iteration  18: 881.950 ns/op
Iteration  19: 880.061 ns/op
Iteration  20: 882.166 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1352.328 ns/op
# Warmup Iteration   2: 1070.320 ns/op
# Warmup Iteration   3: 887.336 ns/op
# Warmup Iteration   4: 890.457 ns/op
# Warmup Iteration   5: 893.550 ns/op
Iteration   1: 898.940 ns/op
Iteration   2: 903.492 ns/op
Iteration   3: 880.285 ns/op
Iteration   4: 886.469 ns/op
Iteration   5: 883.393 ns/op
Iteration   6: 883.013 ns/op
Iteration   7: 882.748 ns/op
Iteration   8: 884.391 ns/op
Iteration   9: 883.735 ns/op
Iteration  10: 885.692 ns/op
Iteration  11: 879.728 ns/op
Iteration  12: 885.600 ns/op
Iteration  13: 884.735 ns/op
Iteration  14: 886.335 ns/op
Iteration  15: 881.659 ns/op
Iteration  16: 883.060 ns/op
Iteration  17: 912.183 ns/op
Iteration  18: 901.779 ns/op
Iteration  19: 879.427 ns/op
Iteration  20: 881.638 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1416.190 ns/op
# Warmup Iteration   2: 1179.917 ns/op
# Warmup Iteration   3: 952.261 ns/op
# Warmup Iteration   4: 954.053 ns/op
# Warmup Iteration   5: 959.123 ns/op
Iteration   1: 942.894 ns/op
Iteration   2: 964.013 ns/op
Iteration   3: 969.849 ns/op
Iteration   4: 948.085 ns/op
Iteration   5: 947.478 ns/op
Iteration   6: 942.620 ns/op
Iteration   7: 946.602 ns/op
Iteration   8: 946.872 ns/op
Iteration   9: 947.482 ns/op
Iteration  10: 947.845 ns/op
Iteration  11: 947.876 ns/op
Iteration  12: 942.702 ns/op
Iteration  13: 947.471 ns/op
Iteration  14: 955.841 ns/op
Iteration  15: 945.712 ns/op
Iteration  16: 946.301 ns/op
Iteration  17: 943.332 ns/op
Iteration  18: 945.622 ns/op
Iteration  19: 945.207 ns/op
Iteration  20: 946.577 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1407.718 ns/op
# Warmup Iteration   2: 1160.264 ns/op
# Warmup Iteration   3: 948.634 ns/op
# Warmup Iteration   4: 952.885 ns/op
# Warmup Iteration   5: 957.804 ns/op
Iteration   1: 938.163 ns/op
Iteration   2: 960.905 ns/op
Iteration   3: 965.892 ns/op
Iteration   4: 943.468 ns/op
Iteration   5: 944.652 ns/op
Iteration   6: 938.882 ns/op
Iteration   7: 949.124 ns/op
Iteration   8: 943.648 ns/op
Iteration   9: 943.121 ns/op
Iteration  10: 944.199 ns/op
Iteration  11: 944.939 ns/op
Iteration  12: 939.167 ns/op
Iteration  13: 945.364 ns/op
Iteration  14: 962.247 ns/op
Iteration  15: 943.014 ns/op
Iteration  16: 942.184 ns/op
Iteration  17: 939.321 ns/op
Iteration  18: 942.976 ns/op
Iteration  19: 942.872 ns/op
Iteration  20: 950.721 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1405.622 ns/op
# Warmup Iteration   2: 1160.960 ns/op
# Warmup Iteration   3: 949.004 ns/op
# Warmup Iteration   4: 952.053 ns/op
# Warmup Iteration   5: 956.510 ns/op
Iteration   1: 941.064 ns/op
Iteration   2: 961.330 ns/op
Iteration   3: 967.045 ns/op
Iteration   4: 946.790 ns/op
Iteration   5: 945.277 ns/op
Iteration   6: 953.120 ns/op
Iteration   7: 941.303 ns/op
Iteration   8: 945.464 ns/op
Iteration   9: 945.257 ns/op
Iteration  10: 945.659 ns/op
Iteration  11: 945.699 ns/op
Iteration  12: 940.604 ns/op
Iteration  13: 946.597 ns/op
Iteration  14: 957.348 ns/op
Iteration  15: 943.186 ns/op
Iteration  16: 943.223 ns/op
Iteration  17: 940.854 ns/op
Iteration  18: 945.113 ns/op
Iteration  19: 946.027 ns/op
Iteration  20: 946.420 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  923.032 Â±(99.9%) 10.471 ns/op [Average]
  (min, avg, max) = (879.427, 923.032, 969.849), stdev = 30.874
  CI (99.9%): [912.561, 933.503] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 

	

   
	 

	


    

			 
  
		
	 	
	 
 	
	  	 	   
		 

	
	
	
 

 
			  


		 	
	 
  

		

	,  
 
	

	
 		 

		  



	 

  

 			
 
		  		)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1369.002 ns/op
# Warmup Iteration   2: 1151.852 ns/op
# Warmup Iteration   3: 946.523 ns/op
# Warmup Iteration   4: 949.622 ns/op
# Warmup Iteration   5: 952.569 ns/op
Iteration   1: 957.497 ns/op
Iteration   2: 937.085 ns/op
Iteration   3: 961.605 ns/op
Iteration   4: 942.069 ns/op
Iteration   5: 942.956 ns/op
Iteration   6: 941.984 ns/op
Iteration   7: 944.600 ns/op
Iteration   8: 937.081 ns/op
Iteration   9: 941.253 ns/op
Iteration  10: 941.889 ns/op
Iteration  11: 941.980 ns/op
Iteration  12: 941.804 ns/op
Iteration  13: 948.691 ns/op
Iteration  14: 937.448 ns/op
Iteration  15: 939.268 ns/op
Iteration  16: 939.423 ns/op
Iteration  17: 939.338 ns/op
Iteration  18: 940.380 ns/op
Iteration  19: 940.042 ns/op
Iteration  20: 937.360 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1418.142 ns/op
# Warmup Iteration   2: 1177.897 ns/op
# Warmup Iteration   3: 964.394 ns/op
# Warmup Iteration   4: 967.703 ns/op
# Warmup Iteration   5: 971.651 ns/op
Iteration   1: 956.443 ns/op
Iteration   2: 976.353 ns/op
Iteration   3: 982.774 ns/op
Iteration   4: 968.445 ns/op
Iteration   5: 961.726 ns/op
Iteration   6: 960.875 ns/op
Iteration   7: 955.612 ns/op
Iteration   8: 960.009 ns/op
Iteration   9: 960.719 ns/op
Iteration  10: 961.554 ns/op
Iteration  11: 961.615 ns/op
Iteration  12: 956.452 ns/op
Iteration  13: 960.656 ns/op
Iteration  14: 966.142 ns/op
Iteration  15: 958.296 ns/op
Iteration  16: 957.207 ns/op
Iteration  17: 959.096 ns/op
Iteration  18: 955.462 ns/op
Iteration  19: 958.507 ns/op
Iteration  20: 960.638 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1369.082 ns/op
# Warmup Iteration   2: 1109.543 ns/op
# Warmup Iteration   3: 915.938 ns/op
# Warmup Iteration   4: 918.600 ns/op
# Warmup Iteration   5: 922.716 ns/op
Iteration   1: 927.538 ns/op
Iteration   2: 932.462 ns/op
Iteration   3: 906.632 ns/op
Iteration   4: 911.621 ns/op
Iteration   5: 911.115 ns/op
Iteration   6: 911.779 ns/op
Iteration   7: 911.745 ns/op
Iteration   8: 916.947 ns/op
Iteration   9: 915.609 ns/op
Iteration  10: 907.019 ns/op
Iteration  11: 914.546 ns/op
Iteration  12: 917.732 ns/op
Iteration  13: 911.521 ns/op
Iteration  14: 911.621 ns/op
Iteration  15: 912.637 ns/op
Iteration  16: 909.173 ns/op
Iteration  17: 910.782 ns/op
Iteration  18: 906.746 ns/op
Iteration  19: 910.262 ns/op
Iteration  20: 910.359 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1343.693 ns/op
# Warmup Iteration   2: 1104.192 ns/op
# Warmup Iteration   3: 917.131 ns/op
# Warmup Iteration   4: 919.491 ns/op
# Warmup Iteration   5: 923.128 ns/op
Iteration   1: 928.421 ns/op
Iteration   2: 932.739 ns/op
Iteration   3: 906.482 ns/op
Iteration   4: 911.730 ns/op
Iteration   5: 911.302 ns/op
Iteration   6: 911.438 ns/op
Iteration   7: 911.770 ns/op
Iteration   8: 911.508 ns/op
Iteration   9: 912.048 ns/op
Iteration  10: 907.275 ns/op
Iteration  11: 917.442 ns/op
Iteration  12: 913.543 ns/op
Iteration  13: 916.576 ns/op
Iteration  14: 913.001 ns/op
Iteration  15: 910.240 ns/op
Iteration  16: 909.252 ns/op
Iteration  17: 909.627 ns/op
Iteration  18: 907.174 ns/op
Iteration  19: 909.826 ns/op
Iteration  20: 910.227 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1308.919 ns/op
# Warmup Iteration   2: 1055.581 ns/op
# Warmup Iteration   3: 888.108 ns/op
# Warmup Iteration   4: 890.432 ns/op
# Warmup Iteration   5: 898.232 ns/op
Iteration   1: 897.674 ns/op
Iteration   2: 902.959 ns/op
Iteration   3: 884.268 ns/op
Iteration   4: 883.422 ns/op
Iteration   5: 878.651 ns/op
Iteration   6: 883.395 ns/op
Iteration   7: 883.125 ns/op
Iteration   8: 894.687 ns/op
Iteration   9: 883.601 ns/op
Iteration  10: 883.663 ns/op
Iteration  11: 883.619 ns/op
Iteration  12: 904.909 ns/op
Iteration  13: 881.867 ns/op
Iteration  14: 878.502 ns/op
Iteration  15: 881.466 ns/op
Iteration  16: 881.242 ns/op
Iteration  17: 882.641 ns/op
Iteration  18: 881.578 ns/op
Iteration  19: 881.730 ns/op
Iteration  20: 880.614 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  923.354 Â±(99.9%) 9.284 ns/op [Average]
  (min, avg, max) = (878.502, 923.354, 982.774), stdev = 27.374
  CI (99.9%): [914.070, 932.638] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                            (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  

	

   
	 

	


    

			 
  
		
	 	
	 
 	
	  	 	   
		 

	
	
	
 

 
			  


		 	
	 
  

		

	,  
 
	

	
 		 

		  



	 

  

 			
 
		  		  avgt  100  923.032 Â± 10.471  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  

	

   
	 

	


    

			 
  
		
	 	
	 
 	
	  	 	   
		 

	
	
	
 

 
			  


		 	
	 
  

		

	,  
 
	

	
 		 

		  



	 

  

 			
 
		  		  avgt  100  923.354 Â±  9.284  ns/op

Benchmark result is saved to split_precompiled_regex_168_259_Match.csv
