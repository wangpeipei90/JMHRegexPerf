# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =    
	 
	

  				
 
   		 	 
	 	 , 			 	
  	
	 			
  
	 		




	  


	
 		

			 


  	
 
	  		

 	     		


	
 	
		
	
	        
   )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1360.905 ns/op
# Warmup Iteration   2: 1086.214 ns/op
# Warmup Iteration   3: 893.555 ns/op
# Warmup Iteration   4: 896.458 ns/op
# Warmup Iteration   5: 899.915 ns/op
Iteration   1: 904.400 ns/op
Iteration   2: 910.098 ns/op
Iteration   3: 884.129 ns/op
Iteration   4: 889.205 ns/op
Iteration   5: 889.261 ns/op
Iteration   6: 888.235 ns/op
Iteration   7: 888.535 ns/op
Iteration   8: 889.774 ns/op
Iteration   9: 892.178 ns/op
Iteration  10: 886.442 ns/op
Iteration  11: 889.323 ns/op
Iteration  12: 889.874 ns/op
Iteration  13: 889.627 ns/op
Iteration  14: 885.679 ns/op
Iteration  15: 884.798 ns/op
Iteration  16: 885.173 ns/op
Iteration  17: 885.411 ns/op
Iteration  18: 882.815 ns/op
Iteration  19: 885.851 ns/op
Iteration  20: 887.180 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1441.026 ns/op
# Warmup Iteration   2: 1202.667 ns/op
# Warmup Iteration   3: 979.494 ns/op
# Warmup Iteration   4: 983.728 ns/op
# Warmup Iteration   5: 977.400 ns/op
Iteration   1: 981.473 ns/op
Iteration   2: 992.455 ns/op
Iteration   3: 999.234 ns/op
Iteration   4: 980.280 ns/op
Iteration   5: 971.998 ns/op
Iteration   6: 975.915 ns/op
Iteration   7: 975.504 ns/op
Iteration   8: 975.391 ns/op
Iteration   9: 975.582 ns/op
Iteration  10: 970.832 ns/op
Iteration  11: 975.578 ns/op
Iteration  12: 975.243 ns/op
Iteration  13: 975.165 ns/op
Iteration  14: 977.493 ns/op
Iteration  15: 970.862 ns/op
Iteration  16: 977.603 ns/op
Iteration  17: 972.932 ns/op
Iteration  18: 973.025 ns/op
Iteration  19: 973.266 ns/op
Iteration  20: 971.276 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1324.726 ns/op
# Warmup Iteration   2: 1037.181 ns/op
# Warmup Iteration   3: 870.318 ns/op
# Warmup Iteration   4: 868.591 ns/op
# Warmup Iteration   5: 871.775 ns/op
Iteration   1: 876.985 ns/op
Iteration   2: 882.337 ns/op
Iteration   3: 861.841 ns/op
Iteration   4: 861.240 ns/op
Iteration   5: 857.778 ns/op
Iteration   6: 861.460 ns/op
Iteration   7: 862.211 ns/op
Iteration   8: 863.036 ns/op
Iteration   9: 865.541 ns/op
Iteration  10: 863.390 ns/op
Iteration  11: 877.765 ns/op
Iteration  12: 865.734 ns/op
Iteration  13: 866.312 ns/op
Iteration  14: 858.069 ns/op
Iteration  15: 859.638 ns/op
Iteration  16: 859.478 ns/op
Iteration  17: 859.520 ns/op
Iteration  18: 860.063 ns/op
Iteration  19: 860.656 ns/op
Iteration  20: 861.683 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1419.163 ns/op
# Warmup Iteration   2: 1179.005 ns/op
# Warmup Iteration   3: 961.569 ns/op
# Warmup Iteration   4: 964.480 ns/op
# Warmup Iteration   5: 968.643 ns/op
Iteration   1: 953.211 ns/op
Iteration   2: 973.474 ns/op
Iteration   3: 979.985 ns/op
Iteration   4: 958.349 ns/op
Iteration   5: 957.388 ns/op
Iteration   6: 951.840 ns/op
Iteration   7: 957.776 ns/op
Iteration   8: 956.963 ns/op
Iteration   9: 957.798 ns/op
Iteration  10: 958.333 ns/op
Iteration  11: 953.398 ns/op
Iteration  12: 957.568 ns/op
Iteration  13: 959.141 ns/op
Iteration  14: 959.202 ns/op
Iteration  15: 955.390 ns/op
Iteration  16: 952.843 ns/op
Iteration  17: 954.615 ns/op
Iteration  18: 954.476 ns/op
Iteration  19: 955.899 ns/op
Iteration  20: 958.100 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1441.965 ns/op
# Warmup Iteration   2: 1207.505 ns/op
# Warmup Iteration   3: 981.332 ns/op
# Warmup Iteration   4: 991.424 ns/op
# Warmup Iteration   5: 970.044 ns/op
Iteration   1: 984.784 ns/op
Iteration   2: 991.285 ns/op
Iteration   3: 997.222 ns/op
Iteration   4: 976.661 ns/op
Iteration   5: 970.433 ns/op
Iteration   6: 977.593 ns/op
Iteration   7: 977.746 ns/op
Iteration   8: 979.015 ns/op
Iteration   9: 976.901 ns/op
Iteration  10: 969.754 ns/op
Iteration  11: 975.445 ns/op
Iteration  12: 974.955 ns/op
Iteration  13: 975.240 ns/op
Iteration  14: 978.712 ns/op
Iteration  15: 970.370 ns/op
Iteration  16: 975.562 ns/op
Iteration  17: 973.117 ns/op
Iteration  18: 972.802 ns/op
Iteration  19: 974.310 ns/op
Iteration  20: 969.843 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  933.213 Â±(99.9%) 16.260 ns/op [Average]
  (min, avg, max) = (857.778, 933.213, 999.234), stdev = 47.942
  CI (99.9%): [916.954, 949.473] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =    
	 
	

  				
 
   		 	 
	 	 , 			 	
  	
	 			
  
	 		




	  


	
 		

			 


  	
 
	  		

 	     		


	
 	
		
	
	        
   )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1433.971 ns/op
# Warmup Iteration   2: 1232.887 ns/op
# Warmup Iteration   3: 1005.694 ns/op
# Warmup Iteration   4: 1007.568 ns/op
# Warmup Iteration   5: 996.376 ns/op
Iteration   1: 1012.744 ns/op
Iteration   2: 1018.034 ns/op
Iteration   3: 1024.401 ns/op
Iteration   4: 1001.234 ns/op
Iteration   5: 996.538 ns/op
Iteration   6: 1001.364 ns/op
Iteration   7: 1000.867 ns/op
Iteration   8: 1001.480 ns/op
Iteration   9: 1001.118 ns/op
Iteration  10: 996.925 ns/op
Iteration  11: 1005.475 ns/op
Iteration  12: 1001.107 ns/op
Iteration  13: 1001.675 ns/op
Iteration  14: 1001.628 ns/op
Iteration  15: 996.336 ns/op
Iteration  16: 1003.629 ns/op
Iteration  17: 1002.295 ns/op
Iteration  18: 998.465 ns/op
Iteration  19: 996.241 ns/op
Iteration  20: 999.095 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1444.655 ns/op
# Warmup Iteration   2: 1225.259 ns/op
# Warmup Iteration   3: 995.261 ns/op
# Warmup Iteration   4: 997.707 ns/op
# Warmup Iteration   5: 985.721 ns/op
Iteration   1: 1001.165 ns/op
Iteration   2: 1007.317 ns/op
Iteration   3: 1012.948 ns/op
Iteration   4: 989.958 ns/op
Iteration   5: 984.898 ns/op
Iteration   6: 989.800 ns/op
Iteration   7: 989.137 ns/op
Iteration   8: 990.209 ns/op
Iteration   9: 996.003 ns/op
Iteration  10: 985.479 ns/op
Iteration  11: 992.195 ns/op
Iteration  12: 992.879 ns/op
Iteration  13: 991.713 ns/op
Iteration  14: 992.839 ns/op
Iteration  15: 985.278 ns/op
Iteration  16: 999.835 ns/op
Iteration  17: 990.970 ns/op
Iteration  18: 987.932 ns/op
Iteration  19: 988.195 ns/op
Iteration  20: 985.100 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1445.015 ns/op
# Warmup Iteration   2: 1226.803 ns/op
# Warmup Iteration   3: 993.456 ns/op
# Warmup Iteration   4: 995.984 ns/op
# Warmup Iteration   5: 983.568 ns/op
Iteration   1: 999.742 ns/op
Iteration   2: 1005.127 ns/op
Iteration   3: 1008.525 ns/op
Iteration   4: 987.736 ns/op
Iteration   5: 983.387 ns/op
Iteration   6: 988.003 ns/op
Iteration   7: 987.157 ns/op
Iteration   8: 987.538 ns/op
Iteration   9: 987.524 ns/op
Iteration  10: 983.087 ns/op
Iteration  11: 987.548 ns/op
Iteration  12: 988.064 ns/op
Iteration  13: 987.631 ns/op
Iteration  14: 987.684 ns/op
Iteration  15: 983.023 ns/op
Iteration  16: 988.768 ns/op
Iteration  17: 987.086 ns/op
Iteration  18: 992.854 ns/op
Iteration  19: 990.090 ns/op
Iteration  20: 986.653 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1411.224 ns/op
# Warmup Iteration   2: 1195.150 ns/op
# Warmup Iteration   3: 978.073 ns/op
# Warmup Iteration   4: 980.549 ns/op
# Warmup Iteration   5: 984.611 ns/op
Iteration   1: 968.444 ns/op
Iteration   2: 990.150 ns/op
Iteration   3: 996.959 ns/op
Iteration   4: 973.654 ns/op
Iteration   5: 974.239 ns/op
Iteration   6: 969.136 ns/op
Iteration   7: 974.269 ns/op
Iteration   8: 974.487 ns/op
Iteration   9: 973.972 ns/op
Iteration  10: 973.968 ns/op
Iteration  11: 973.198 ns/op
Iteration  12: 969.611 ns/op
Iteration  13: 975.244 ns/op
Iteration  14: 974.489 ns/op
Iteration  15: 973.133 ns/op
Iteration  16: 974.202 ns/op
Iteration  17: 968.085 ns/op
Iteration  18: 977.789 ns/op
Iteration  19: 974.958 ns/op
Iteration  20: 975.980 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1403.583 ns/op
# Warmup Iteration   2: 1206.696 ns/op
# Warmup Iteration   3: 989.113 ns/op
# Warmup Iteration   4: 991.829 ns/op
# Warmup Iteration   5: 996.216 ns/op
Iteration   1: 983.435 ns/op
Iteration   2: 1000.641 ns/op
Iteration   3: 1006.034 ns/op
Iteration   4: 984.328 ns/op
Iteration   5: 982.778 ns/op
Iteration   6: 977.469 ns/op
Iteration   7: 981.981 ns/op
Iteration   8: 988.187 ns/op
Iteration   9: 982.226 ns/op
Iteration  10: 983.590 ns/op
Iteration  11: 977.175 ns/op
Iteration  12: 983.864 ns/op
Iteration  13: 984.253 ns/op
Iteration  14: 985.179 ns/op
Iteration  15: 983.437 ns/op
Iteration  16: 977.246 ns/op
Iteration  17: 987.525 ns/op
Iteration  18: 987.559 ns/op
Iteration  19: 979.719 ns/op
Iteration  20: 982.672 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  989.170 Â±(99.9%) 3.902 ns/op [Average]
  (min, avg, max) = (968.085, 989.170, 1024.401), stdev = 11.506
  CI (99.9%): [985.268, 993.072] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                           (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*     
	 
	

  				
 
   		 	 
	 	 , 			 	
  	
	 			
  
	 		




	  


	
 		

			 


  	
 
	  		

 	     		


	
 	
		
	
	        
     avgt  100  933.213 Â± 16.260  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*     
	 
	

  				
 
   		 	 
	 	 , 			 	
  	
	 			
  
	 		




	  


	
 		

			 


  	
 
	  		

 	     		


	
 	
		
	
	        
     avgt  100  989.170 Â±  3.902  ns/op

Benchmark result is saved to split_precompiled_regex_208_258_Match.csv
