# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	  

	  
		

	 	
	 	
 
  		   	

		


	
 	  		 

,		 		 	 	   	
 
	  	

	 	  

 
  
 	


	 
  

	 	

	


 

			   		 	

 				


 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1316.449 ns/op
# Warmup Iteration   2: 1023.353 ns/op
# Warmup Iteration   3: 850.785 ns/op
# Warmup Iteration   4: 854.217 ns/op
# Warmup Iteration   5: 857.566 ns/op
Iteration   1: 862.096 ns/op
Iteration   2: 868.065 ns/op
Iteration   3: 850.674 ns/op
Iteration   4: 848.333 ns/op
Iteration   5: 848.223 ns/op
Iteration   6: 843.980 ns/op
Iteration   7: 846.821 ns/op
Iteration   8: 847.258 ns/op
Iteration   9: 846.969 ns/op
Iteration  10: 846.837 ns/op
Iteration  11: 846.828 ns/op
Iteration  12: 847.871 ns/op
Iteration  13: 847.585 ns/op
Iteration  14: 845.595 ns/op
Iteration  15: 845.713 ns/op
Iteration  16: 845.178 ns/op
Iteration  17: 847.080 ns/op
Iteration  18: 843.143 ns/op
Iteration  19: 846.613 ns/op
Iteration  20: 847.323 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1310.186 ns/op
# Warmup Iteration   2: 1019.810 ns/op
# Warmup Iteration   3: 853.622 ns/op
# Warmup Iteration   4: 855.748 ns/op
# Warmup Iteration   5: 859.454 ns/op
Iteration   1: 867.750 ns/op
Iteration   2: 877.055 ns/op
Iteration   3: 850.304 ns/op
Iteration   4: 849.548 ns/op
Iteration   5: 850.526 ns/op
Iteration   6: 846.453 ns/op
Iteration   7: 851.117 ns/op
Iteration   8: 849.571 ns/op
Iteration   9: 849.583 ns/op
Iteration  10: 850.491 ns/op
Iteration  11: 849.357 ns/op
Iteration  12: 849.440 ns/op
Iteration  13: 850.810 ns/op
Iteration  14: 847.588 ns/op
Iteration  15: 847.392 ns/op
Iteration  16: 847.141 ns/op
Iteration  17: 845.457 ns/op
Iteration  18: 848.994 ns/op
Iteration  19: 847.493 ns/op
Iteration  20: 847.152 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1401.029 ns/op
# Warmup Iteration   2: 1145.253 ns/op
# Warmup Iteration   3: 936.859 ns/op
# Warmup Iteration   4: 939.266 ns/op
# Warmup Iteration   5: 943.372 ns/op
Iteration   1: 931.672 ns/op
Iteration   2: 943.518 ns/op
Iteration   3: 953.708 ns/op
Iteration   4: 932.575 ns/op
Iteration   5: 931.997 ns/op
Iteration   6: 932.618 ns/op
Iteration   7: 927.831 ns/op
Iteration   8: 931.675 ns/op
Iteration   9: 932.123 ns/op
Iteration  10: 931.806 ns/op
Iteration  11: 932.716 ns/op
Iteration  12: 932.434 ns/op
Iteration  13: 927.726 ns/op
Iteration  14: 932.323 ns/op
Iteration  15: 932.579 ns/op
Iteration  16: 930.396 ns/op
Iteration  17: 929.752 ns/op
Iteration  18: 929.907 ns/op
Iteration  19: 926.908 ns/op
Iteration  20: 931.002 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1360.046 ns/op
# Warmup Iteration   2: 1088.144 ns/op
# Warmup Iteration   3: 900.603 ns/op
# Warmup Iteration   4: 902.789 ns/op
# Warmup Iteration   5: 906.267 ns/op
Iteration   1: 910.969 ns/op
Iteration   2: 918.065 ns/op
Iteration   3: 893.189 ns/op
Iteration   4: 901.091 ns/op
Iteration   5: 897.575 ns/op
Iteration   6: 897.303 ns/op
Iteration   7: 897.672 ns/op
Iteration   8: 897.394 ns/op
Iteration   9: 897.139 ns/op
Iteration  10: 893.042 ns/op
Iteration  11: 903.770 ns/op
Iteration  12: 899.527 ns/op
Iteration  13: 903.458 ns/op
Iteration  14: 896.528 ns/op
Iteration  15: 896.794 ns/op
Iteration  16: 895.737 ns/op
Iteration  17: 893.379 ns/op
Iteration  18: 896.861 ns/op
Iteration  19: 897.914 ns/op
Iteration  20: 898.799 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1313.114 ns/op
# Warmup Iteration   2: 1013.030 ns/op
# Warmup Iteration   3: 844.953 ns/op
# Warmup Iteration   4: 847.576 ns/op
# Warmup Iteration   5: 851.428 ns/op
Iteration   1: 855.864 ns/op
Iteration   2: 860.968 ns/op
Iteration   3: 843.877 ns/op
Iteration   4: 840.930 ns/op
Iteration   5: 841.206 ns/op
Iteration   6: 841.290 ns/op
Iteration   7: 836.653 ns/op
Iteration   8: 841.483 ns/op
Iteration   9: 841.148 ns/op
Iteration  10: 842.239 ns/op
Iteration  11: 842.640 ns/op
Iteration  12: 842.778 ns/op
Iteration  13: 838.897 ns/op
Iteration  14: 838.769 ns/op
Iteration  15: 838.839 ns/op
Iteration  16: 839.088 ns/op
Iteration  17: 841.734 ns/op
Iteration  18: 841.128 ns/op
Iteration  19: 836.377 ns/op
Iteration  20: 840.937 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  874.837 Â±(99.9%) 12.241 ns/op [Average]
  (min, avg, max) = (836.377, 874.837, 953.708), stdev = 36.092
  CI (99.9%): [862.597, 887.078] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	  

	  
		

	 	
	 	
 
  		   	

		


	
 	  		 

,		 		 	 	   	
 
	  	

	 	  

 
  
 	


	 
  

	 	

	


 

			   		 	

 				


 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1370.071 ns/op
# Warmup Iteration   2: 1113.998 ns/op
# Warmup Iteration   3: 924.946 ns/op
# Warmup Iteration   4: 924.797 ns/op
# Warmup Iteration   5: 928.145 ns/op
Iteration   1: 931.874 ns/op
Iteration   2: 930.871 ns/op
Iteration   3: 918.840 ns/op
Iteration   4: 917.640 ns/op
Iteration   5: 916.371 ns/op
Iteration   6: 917.129 ns/op
Iteration   7: 919.269 ns/op
Iteration   8: 921.681 ns/op
Iteration   9: 918.194 ns/op
Iteration  10: 913.150 ns/op
Iteration  11: 919.566 ns/op
Iteration  12: 936.410 ns/op
Iteration  13: 920.529 ns/op
Iteration  14: 916.023 ns/op
Iteration  15: 914.854 ns/op
Iteration  16: 916.688 ns/op
Iteration  17: 912.539 ns/op
Iteration  18: 917.769 ns/op
Iteration  19: 918.197 ns/op
Iteration  20: 922.036 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1318.920 ns/op
# Warmup Iteration   2: 1041.322 ns/op
# Warmup Iteration   3: 874.100 ns/op
# Warmup Iteration   4: 877.415 ns/op
# Warmup Iteration   5: 879.850 ns/op
Iteration   1: 884.662 ns/op
Iteration   2: 889.923 ns/op
Iteration   3: 870.688 ns/op
Iteration   4: 870.017 ns/op
Iteration   5: 869.873 ns/op
Iteration   6: 865.895 ns/op
Iteration   7: 870.931 ns/op
Iteration   8: 872.997 ns/op
Iteration   9: 881.594 ns/op
Iteration  10: 891.039 ns/op
Iteration  11: 872.542 ns/op
Iteration  12: 871.547 ns/op
Iteration  13: 867.777 ns/op
Iteration  14: 867.678 ns/op
Iteration  15: 868.045 ns/op
Iteration  16: 868.275 ns/op
Iteration  17: 865.749 ns/op
Iteration  18: 870.658 ns/op
Iteration  19: 869.471 ns/op
Iteration  20: 869.179 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1376.115 ns/op
# Warmup Iteration   2: 1117.608 ns/op
# Warmup Iteration   3: 920.889 ns/op
# Warmup Iteration   4: 922.995 ns/op
# Warmup Iteration   5: 927.622 ns/op
Iteration   1: 933.079 ns/op
Iteration   2: 930.198 ns/op
Iteration   3: 920.267 ns/op
Iteration   4: 917.433 ns/op
Iteration   5: 917.947 ns/op
Iteration   6: 917.009 ns/op
Iteration   7: 917.471 ns/op
Iteration   8: 923.621 ns/op
Iteration   9: 917.837 ns/op
Iteration  10: 912.521 ns/op
Iteration  11: 917.433 ns/op
Iteration  12: 918.613 ns/op
Iteration  13: 919.417 ns/op
Iteration  14: 915.501 ns/op
Iteration  15: 916.422 ns/op
Iteration  16: 914.923 ns/op
Iteration  17: 912.151 ns/op
Iteration  18: 915.908 ns/op
Iteration  19: 917.646 ns/op
Iteration  20: 917.163 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1322.422 ns/op
# Warmup Iteration   2: 1048.138 ns/op
# Warmup Iteration   3: 873.460 ns/op
# Warmup Iteration   4: 875.318 ns/op
# Warmup Iteration   5: 879.730 ns/op
Iteration   1: 883.617 ns/op
Iteration   2: 888.746 ns/op
Iteration   3: 870.280 ns/op
Iteration   4: 875.240 ns/op
Iteration   5: 872.979 ns/op
Iteration   6: 864.153 ns/op
Iteration   7: 868.341 ns/op
Iteration   8: 868.502 ns/op
Iteration   9: 868.447 ns/op
Iteration  10: 873.020 ns/op
Iteration  11: 869.853 ns/op
Iteration  12: 870.054 ns/op
Iteration  13: 865.479 ns/op
Iteration  14: 865.306 ns/op
Iteration  15: 864.914 ns/op
Iteration  16: 865.897 ns/op
Iteration  17: 863.138 ns/op
Iteration  18: 866.096 ns/op
Iteration  19: 866.206 ns/op
Iteration  20: 865.664 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1310.807 ns/op
# Warmup Iteration   2: 1024.344 ns/op
# Warmup Iteration   3: 861.667 ns/op
# Warmup Iteration   4: 859.510 ns/op
# Warmup Iteration   5: 863.321 ns/op
Iteration   1: 867.655 ns/op
Iteration   2: 872.850 ns/op
Iteration   3: 852.187 ns/op
Iteration   4: 852.284 ns/op
Iteration   5: 852.545 ns/op
Iteration   6: 852.691 ns/op
Iteration   7: 852.439 ns/op
Iteration   8: 847.800 ns/op
Iteration   9: 851.465 ns/op
Iteration  10: 852.138 ns/op
Iteration  11: 852.417 ns/op
Iteration  12: 859.652 ns/op
Iteration  13: 849.805 ns/op
Iteration  14: 856.441 ns/op
Iteration  15: 871.952 ns/op
Iteration  16: 849.696 ns/op
Iteration  17: 850.957 ns/op
Iteration  18: 850.326 ns/op
Iteration  19: 850.571 ns/op
Iteration  20: 855.972 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  887.285 Â±(99.9%) 9.405 ns/op [Average]
  (min, avg, max) = (847.800, 887.285, 936.410), stdev = 27.732
  CI (99.9%): [877.880, 896.690] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	  

	  
		

	 	
	 	
 
  		   	

		


	
 	  		 

,		 		 	 	   	
 
	  	

	 	  

 
  
 	


	 
  

	 	

	


 

			   		 	

 				


   avgt  100  874.837 Â± 12.241  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	  

	  
		

	 	
	 	
 
  		   	

		


	
 	  		 

,		 		 	 	   	
 
	  	

	 	  

 
  
 	


	 
  

	 	

	


 

			   		 	

 				


   avgt  100  887.285 Â±  9.405  ns/op

Benchmark result is saved to split_precompiled_regex_85_247_Match.csv
