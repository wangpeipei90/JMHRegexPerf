# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  		 	
		 	
 

 



	 
	 		 			
  	

 
		 	 

 		    	
	  	 	 

  
 		


 
 
		 
		 
  	
			   
 



	  ,	
		     	    		

 	 

	 		
 		 
 
 
		

 
	 	  
 	
 
 	
  	
  

 	


 

   	
		
 
 
 			   
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1646.604 ns/op
# Warmup Iteration   2: 1571.156 ns/op
# Warmup Iteration   3: 1208.103 ns/op
# Warmup Iteration   4: 1219.391 ns/op
# Warmup Iteration   5: 1222.946 ns/op
Iteration   1: 1207.344 ns/op
Iteration   2: 1229.117 ns/op
Iteration   3: 1235.281 ns/op
Iteration   4: 1207.789 ns/op
Iteration   5: 1241.877 ns/op
Iteration   6: 1218.591 ns/op
Iteration   7: 1208.140 ns/op
Iteration   8: 1213.959 ns/op
Iteration   9: 1212.969 ns/op
Iteration  10: 1208.113 ns/op
Iteration  11: 1213.999 ns/op
Iteration  12: 1207.600 ns/op
Iteration  13: 1214.721 ns/op
Iteration  14: 1224.586 ns/op
Iteration  15: 1207.812 ns/op
Iteration  16: 1214.172 ns/op
Iteration  17: 1214.597 ns/op
Iteration  18: 1207.030 ns/op
Iteration  19: 1226.041 ns/op
Iteration  20: 1214.235 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1653.782 ns/op
# Warmup Iteration   2: 1584.548 ns/op
# Warmup Iteration   3: 1209.653 ns/op
# Warmup Iteration   4: 1221.188 ns/op
# Warmup Iteration   5: 1234.660 ns/op
Iteration   1: 1214.034 ns/op
Iteration   2: 1231.557 ns/op
Iteration   3: 1245.360 ns/op
Iteration   4: 1209.029 ns/op
Iteration   5: 1243.318 ns/op
Iteration   6: 1215.116 ns/op
Iteration   7: 1208.996 ns/op
Iteration   8: 1214.636 ns/op
Iteration   9: 1209.247 ns/op
Iteration  10: 1214.883 ns/op
Iteration  11: 1214.700 ns/op
Iteration  12: 1209.042 ns/op
Iteration  13: 1215.559 ns/op
Iteration  14: 1221.471 ns/op
Iteration  15: 1208.338 ns/op
Iteration  16: 1217.272 ns/op
Iteration  17: 1242.590 ns/op
Iteration  18: 1207.930 ns/op
Iteration  19: 1218.374 ns/op
Iteration  20: 1207.709 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1650.364 ns/op
# Warmup Iteration   2: 1578.540 ns/op
# Warmup Iteration   3: 1203.807 ns/op
# Warmup Iteration   4: 1215.915 ns/op
# Warmup Iteration   5: 1220.163 ns/op
Iteration   1: 1204.779 ns/op
Iteration   2: 1223.952 ns/op
Iteration   3: 1230.595 ns/op
Iteration   4: 1204.906 ns/op
Iteration   5: 1238.914 ns/op
Iteration   6: 1212.065 ns/op
Iteration   7: 1204.079 ns/op
Iteration   8: 1210.422 ns/op
Iteration   9: 1211.111 ns/op
Iteration  10: 1204.844 ns/op
Iteration  11: 1210.633 ns/op
Iteration  12: 1204.294 ns/op
Iteration  13: 1209.894 ns/op
Iteration  14: 1210.088 ns/op
Iteration  15: 1203.937 ns/op
Iteration  16: 1209.850 ns/op
Iteration  17: 1210.206 ns/op
Iteration  18: 1204.715 ns/op
Iteration  19: 1211.560 ns/op
Iteration  20: 1222.763 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1646.653 ns/op
# Warmup Iteration   2: 1575.124 ns/op
# Warmup Iteration   3: 1203.719 ns/op
# Warmup Iteration   4: 1214.668 ns/op
# Warmup Iteration   5: 1219.216 ns/op
Iteration   1: 1203.250 ns/op
Iteration   2: 1223.362 ns/op
Iteration   3: 1230.448 ns/op
Iteration   4: 1202.828 ns/op
Iteration   5: 1238.127 ns/op
Iteration   6: 1209.655 ns/op
Iteration   7: 1203.217 ns/op
Iteration   8: 1209.202 ns/op
Iteration   9: 1211.494 ns/op
Iteration  10: 1207.228 ns/op
Iteration  11: 1208.694 ns/op
Iteration  12: 1203.643 ns/op
Iteration  13: 1209.709 ns/op
Iteration  14: 1211.376 ns/op
Iteration  15: 1203.442 ns/op
Iteration  16: 1209.804 ns/op
Iteration  17: 1210.804 ns/op
Iteration  18: 1203.728 ns/op
Iteration  19: 1210.666 ns/op
Iteration  20: 1206.781 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1656.334 ns/op
# Warmup Iteration   2: 1585.134 ns/op
# Warmup Iteration   3: 1208.455 ns/op
# Warmup Iteration   4: 1218.545 ns/op
# Warmup Iteration   5: 1222.894 ns/op
Iteration   1: 1208.864 ns/op
Iteration   2: 1228.052 ns/op
Iteration   3: 1234.831 ns/op
Iteration   4: 1209.030 ns/op
Iteration   5: 1243.236 ns/op
Iteration   6: 1215.126 ns/op
Iteration   7: 1207.860 ns/op
Iteration   8: 1216.937 ns/op
Iteration   9: 1214.688 ns/op
Iteration  10: 1207.738 ns/op
Iteration  11: 1213.986 ns/op
Iteration  12: 1209.015 ns/op
Iteration  13: 1215.036 ns/op
Iteration  14: 1215.588 ns/op
Iteration  15: 1208.889 ns/op
Iteration  16: 1213.857 ns/op
Iteration  17: 1217.697 ns/op
Iteration  18: 1208.903 ns/op
Iteration  19: 1217.130 ns/op
Iteration  20: 1213.476 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1214.781 Â±(99.9%) 3.513 ns/op [Average]
  (min, avg, max) = (1202.828, 1214.781, 1245.360), stdev = 10.357
  CI (99.9%): [1211.269, 1218.294] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  		 	
		 	
 

 



	 
	 		 			
  	

 
		 	 

 		    	
	  	 	 

  
 		


 
 
		 
		 
  	
			   
 



	  ,	
		     	    		

 	 

	 		
 		 
 
 
		

 
	 	  
 	
 
 	
  	
  

 	


 

   	
		
 
 
 			   
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1696.543 ns/op
# Warmup Iteration   2: 1602.619 ns/op
# Warmup Iteration   3: 1224.690 ns/op
# Warmup Iteration   4: 1236.296 ns/op
# Warmup Iteration   5: 1240.350 ns/op
Iteration   1: 1224.546 ns/op
Iteration   2: 1245.445 ns/op
Iteration   3: 1250.577 ns/op
Iteration   4: 1224.624 ns/op
Iteration   5: 1258.441 ns/op
Iteration   6: 1230.766 ns/op
Iteration   7: 1224.154 ns/op
Iteration   8: 1230.039 ns/op
Iteration   9: 1230.371 ns/op
Iteration  10: 1224.400 ns/op
Iteration  11: 1231.704 ns/op
Iteration  12: 1231.637 ns/op
Iteration  13: 1224.921 ns/op
Iteration  14: 1238.682 ns/op
Iteration  15: 1224.783 ns/op
Iteration  16: 1233.738 ns/op
Iteration  17: 1239.584 ns/op
Iteration  18: 1225.232 ns/op
Iteration  19: 1243.152 ns/op
Iteration  20: 1236.121 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1582.497 ns/op
# Warmup Iteration   2: 1457.039 ns/op
# Warmup Iteration   3: 1133.350 ns/op
# Warmup Iteration   4: 1142.905 ns/op
# Warmup Iteration   5: 1147.950 ns/op
Iteration   1: 1151.717 ns/op
Iteration   2: 1133.900 ns/op
Iteration   3: 1158.660 ns/op
Iteration   4: 1166.092 ns/op
Iteration   5: 1139.861 ns/op
Iteration   6: 1132.494 ns/op
Iteration   7: 1138.521 ns/op
Iteration   8: 1138.244 ns/op
Iteration   9: 1133.363 ns/op
Iteration  10: 1138.379 ns/op
Iteration  11: 1145.181 ns/op
Iteration  12: 1133.009 ns/op
Iteration  13: 1141.483 ns/op
Iteration  14: 1139.806 ns/op
Iteration  15: 1133.287 ns/op
Iteration  16: 1139.971 ns/op
Iteration  17: 1139.881 ns/op
Iteration  18: 1139.995 ns/op
Iteration  19: 1133.329 ns/op
Iteration  20: 1138.278 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1614.682 ns/op
# Warmup Iteration   2: 1503.474 ns/op
# Warmup Iteration   3: 1168.869 ns/op
# Warmup Iteration   4: 1191.014 ns/op
# Warmup Iteration   5: 1182.904 ns/op
Iteration   1: 1187.531 ns/op
Iteration   2: 1166.882 ns/op
Iteration   3: 1193.085 ns/op
Iteration   4: 1205.638 ns/op
Iteration   5: 1167.163 ns/op
Iteration   6: 1172.733 ns/op
Iteration   7: 1172.499 ns/op
Iteration   8: 1167.579 ns/op
Iteration   9: 1172.951 ns/op
Iteration  10: 1172.542 ns/op
Iteration  11: 1167.034 ns/op
Iteration  12: 1171.050 ns/op
Iteration  13: 1171.956 ns/op
Iteration  14: 1166.767 ns/op
Iteration  15: 1174.437 ns/op
Iteration  16: 1176.863 ns/op
Iteration  17: 1166.862 ns/op
Iteration  18: 1181.112 ns/op
Iteration  19: 1178.143 ns/op
Iteration  20: 1166.981 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1655.932 ns/op
# Warmup Iteration   2: 1584.786 ns/op
# Warmup Iteration   3: 1223.429 ns/op
# Warmup Iteration   4: 1235.123 ns/op
# Warmup Iteration   5: 1238.765 ns/op
Iteration   1: 1222.492 ns/op
Iteration   2: 1244.222 ns/op
Iteration   3: 1258.879 ns/op
Iteration   4: 1226.761 ns/op
Iteration   5: 1259.679 ns/op
Iteration   6: 1228.775 ns/op
Iteration   7: 1223.145 ns/op
Iteration   8: 1235.697 ns/op
Iteration   9: 1229.491 ns/op
Iteration  10: 1222.657 ns/op
Iteration  11: 1228.817 ns/op
Iteration  12: 1229.468 ns/op
Iteration  13: 1222.550 ns/op
Iteration  14: 1228.908 ns/op
Iteration  15: 1222.538 ns/op
Iteration  16: 1229.185 ns/op
Iteration  17: 1238.621 ns/op
Iteration  18: 1222.431 ns/op
Iteration  19: 1231.012 ns/op
Iteration  20: 1225.695 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1723.349 ns/op
# Warmup Iteration   2: 1623.981 ns/op
# Warmup Iteration   3: 1222.891 ns/op
# Warmup Iteration   4: 1232.719 ns/op
# Warmup Iteration   5: 1242.426 ns/op
Iteration   1: 1222.153 ns/op
Iteration   2: 1245.134 ns/op
Iteration   3: 1250.512 ns/op
Iteration   4: 1220.776 ns/op
Iteration   5: 1255.532 ns/op
Iteration   6: 1231.763 ns/op
Iteration   7: 1219.136 ns/op
Iteration   8: 1226.167 ns/op
Iteration   9: 1227.212 ns/op
Iteration  10: 1220.416 ns/op
Iteration  11: 1227.829 ns/op
Iteration  12: 1226.672 ns/op
Iteration  13: 1219.909 ns/op
Iteration  14: 1226.373 ns/op
Iteration  15: 1220.396 ns/op
Iteration  16: 1228.719 ns/op
Iteration  17: 1236.380 ns/op
Iteration  18: 1220.284 ns/op
Iteration  19: 1231.258 ns/op
Iteration  20: 1228.942 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1202.048 Â±(99.9%) 13.270 ns/op [Average]
  (min, avg, max) = (1132.494, 1202.048, 1259.679), stdev = 39.126
  CI (99.9%): [1188.778, 1215.317] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                                                                               (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   		 	
		 	
 

 



	 
	 		 			
  	

 
		 	 

 		    	
	  	 	 

  
 		


 
 
		 
		 
  	
			   
 



	  ,	
		     	    		

 	 

	 		
 		 
 
 
		

 
	 	  
 	
 
 	
  	
  

 	


 

   	
		
 
 
 			   
  avgt  100  1214.781 Â±  3.513  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   		 	
		 	
 

 



	 
	 		 			
  	

 
		 	 

 		    	
	  	 	 

  
 		


 
 
		 
		 
  	
			   
 



	  ,	
		     	    		

 	 

	 		
 		 
 
 
		

 
	 	  
 	
 
 	
  	
  

 	


 

   	
		
 
 
 			   
  avgt  100  1202.048 Â± 13.270  ns/op

Benchmark result is saved to split_precompiled_regex_187_374_Match.csv
