# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = ^)=HN(Dp "u|HTO{8z>Kt4wlL6b'yW}F6IBVc5@?OIvEn(%CNb%G^B+[sVK sq,3b\^y#9E*9`Ll{LY(Vw"zkKiCwmD|l	x/uo!?/QN&]<sX/)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2517.073 ns/op
# Warmup Iteration   2: 2463.409 ns/op
# Warmup Iteration   3: 2304.681 ns/op
# Warmup Iteration   4: 2034.938 ns/op
# Warmup Iteration   5: 2053.897 ns/op
Iteration   1: 2034.959 ns/op
Iteration   2: 2060.217 ns/op
Iteration   3: 2034.759 ns/op
Iteration   4: 2069.221 ns/op
Iteration   5: 2034.739 ns/op
Iteration   6: 2035.200 ns/op
Iteration   7: 2080.189 ns/op
Iteration   8: 2034.991 ns/op
Iteration   9: 2092.444 ns/op
Iteration  10: 2035.219 ns/op
Iteration  11: 2055.677 ns/op
Iteration  12: 2038.132 ns/op
Iteration  13: 2034.686 ns/op
Iteration  14: 2044.758 ns/op
Iteration  15: 2035.068 ns/op
Iteration  16: 2045.189 ns/op
Iteration  17: 2035.183 ns/op
Iteration  18: 2045.930 ns/op
Iteration  19: 2034.446 ns/op
Iteration  20: 2034.619 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2509.643 ns/op
# Warmup Iteration   2: 2460.564 ns/op
# Warmup Iteration   3: 2307.385 ns/op
# Warmup Iteration   4: 2032.673 ns/op
# Warmup Iteration   5: 2050.851 ns/op
Iteration   1: 2031.939 ns/op
Iteration   2: 2056.822 ns/op
Iteration   3: 2032.131 ns/op
Iteration   4: 2065.744 ns/op
Iteration   5: 2031.702 ns/op
Iteration   6: 2042.930 ns/op
Iteration   7: 2086.413 ns/op
Iteration   8: 2036.525 ns/op
Iteration   9: 2089.232 ns/op
Iteration  10: 2032.108 ns/op
Iteration  11: 2043.961 ns/op
Iteration  12: 2031.288 ns/op
Iteration  13: 2031.819 ns/op
Iteration  14: 2041.881 ns/op
Iteration  15: 2031.611 ns/op
Iteration  16: 2040.999 ns/op
Iteration  17: 2032.378 ns/op
Iteration  18: 2042.193 ns/op
Iteration  19: 2032.281 ns/op
Iteration  20: 2032.081 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2513.980 ns/op
# Warmup Iteration   2: 2460.614 ns/op
# Warmup Iteration   3: 2317.321 ns/op
# Warmup Iteration   4: 2035.091 ns/op
# Warmup Iteration   5: 2054.738 ns/op
Iteration   1: 2034.687 ns/op
Iteration   2: 2059.944 ns/op
Iteration   3: 2033.921 ns/op
Iteration   4: 2057.459 ns/op
Iteration   5: 2049.225 ns/op
Iteration   6: 2037.245 ns/op
Iteration   7: 2080.544 ns/op
Iteration   8: 2034.096 ns/op
Iteration   9: 2092.655 ns/op
Iteration  10: 2033.712 ns/op
Iteration  11: 2047.394 ns/op
Iteration  12: 2033.973 ns/op
Iteration  13: 2034.111 ns/op
Iteration  14: 2048.078 ns/op
Iteration  15: 2034.810 ns/op
Iteration  16: 2062.393 ns/op
Iteration  17: 2034.646 ns/op
Iteration  18: 2034.096 ns/op
Iteration  19: 2047.775 ns/op
Iteration  20: 2034.778 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2514.262 ns/op
# Warmup Iteration   2: 2464.566 ns/op
# Warmup Iteration   3: 2315.362 ns/op
# Warmup Iteration   4: 2033.275 ns/op
# Warmup Iteration   5: 2052.854 ns/op
Iteration   1: 2033.317 ns/op
Iteration   2: 2059.162 ns/op
Iteration   3: 2032.991 ns/op
Iteration   4: 2067.560 ns/op
Iteration   5: 2033.698 ns/op
Iteration   6: 2033.612 ns/op
Iteration   7: 2077.064 ns/op
Iteration   8: 2033.573 ns/op
Iteration   9: 2092.023 ns/op
Iteration  10: 2034.238 ns/op
Iteration  11: 2044.914 ns/op
Iteration  12: 2033.555 ns/op
Iteration  13: 2033.892 ns/op
Iteration  14: 2042.703 ns/op
Iteration  15: 2037.182 ns/op
Iteration  16: 2050.124 ns/op
Iteration  17: 2037.690 ns/op
Iteration  18: 2033.228 ns/op
Iteration  19: 2041.768 ns/op
Iteration  20: 2033.471 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2510.629 ns/op
# Warmup Iteration   2: 2455.233 ns/op
# Warmup Iteration   3: 2295.502 ns/op
# Warmup Iteration   4: 2028.473 ns/op
# Warmup Iteration   5: 2049.059 ns/op
Iteration   1: 2028.140 ns/op
Iteration   2: 2054.290 ns/op
Iteration   3: 2028.214 ns/op
Iteration   4: 2075.843 ns/op
Iteration   5: 2028.254 ns/op
Iteration   6: 2028.308 ns/op
Iteration   7: 2073.422 ns/op
Iteration   8: 2028.152 ns/op
Iteration   9: 2083.197 ns/op
Iteration  10: 2027.921 ns/op
Iteration  11: 2047.625 ns/op
Iteration  12: 2028.008 ns/op
Iteration  13: 2028.790 ns/op
Iteration  14: 2039.484 ns/op
Iteration  15: 2028.220 ns/op
Iteration  16: 2038.395 ns/op
Iteration  17: 2028.185 ns/op
Iteration  18: 2038.930 ns/op
Iteration  19: 2029.841 ns/op
Iteration  20: 2030.390 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2043.866 Â±(99.9%) 5.814 ns/op [Average]
  (min, avg, max) = (2027.921, 2043.866, 2092.655), stdev = 17.141
  CI (99.9%): [2038.052, 2049.679] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = ^)=HN(Dp "u|HTO{8z>Kt4wlL6b'yW}F6IBVc5@?OIvEn(%CNb%G^B+[sVK sq,3b\^y#9E*9`Ll{LY(Vw"zkKiCwmD|l	x/uo!?/QN&]<sX/)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2573.489 ns/op
# Warmup Iteration   2: 2446.297 ns/op
# Warmup Iteration   3: 2283.181 ns/op
# Warmup Iteration   4: 2015.519 ns/op
# Warmup Iteration   5: 2034.696 ns/op
Iteration   1: 2014.816 ns/op
Iteration   2: 2040.916 ns/op
Iteration   3: 2014.922 ns/op
Iteration   4: 2049.074 ns/op
Iteration   5: 2014.438 ns/op
Iteration   6: 2058.643 ns/op
Iteration   7: 2014.303 ns/op
Iteration   8: 2015.314 ns/op
Iteration   9: 2071.021 ns/op
Iteration  10: 2015.011 ns/op
Iteration  11: 2025.048 ns/op
Iteration  12: 2015.697 ns/op
Iteration  13: 2025.812 ns/op
Iteration  14: 2016.616 ns/op
Iteration  15: 2017.130 ns/op
Iteration  16: 2026.448 ns/op
Iteration  17: 2015.630 ns/op
Iteration  18: 2024.196 ns/op
Iteration  19: 2015.176 ns/op
Iteration  20: 2025.272 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2561.504 ns/op
# Warmup Iteration   2: 2457.462 ns/op
# Warmup Iteration   3: 2294.816 ns/op
# Warmup Iteration   4: 2033.323 ns/op
# Warmup Iteration   5: 2065.126 ns/op
Iteration   1: 2034.217 ns/op
Iteration   2: 2053.302 ns/op
Iteration   3: 2028.183 ns/op
Iteration   4: 2062.116 ns/op
Iteration   5: 2028.732 ns/op
Iteration   6: 2056.951 ns/op
Iteration   7: 2043.389 ns/op
Iteration   8: 2028.808 ns/op
Iteration   9: 2087.224 ns/op
Iteration  10: 2032.468 ns/op
Iteration  11: 2043.744 ns/op
Iteration  12: 2028.016 ns/op
Iteration  13: 2038.273 ns/op
Iteration  14: 2028.167 ns/op
Iteration  15: 2028.542 ns/op
Iteration  16: 2037.013 ns/op
Iteration  17: 2028.714 ns/op
Iteration  18: 2038.232 ns/op
Iteration  19: 2028.202 ns/op
Iteration  20: 2037.712 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2569.590 ns/op
# Warmup Iteration   2: 2466.569 ns/op
# Warmup Iteration   3: 2306.103 ns/op
# Warmup Iteration   4: 2034.366 ns/op
# Warmup Iteration   5: 2053.213 ns/op
Iteration   1: 2033.887 ns/op
Iteration   2: 2061.457 ns/op
Iteration   3: 2034.419 ns/op
Iteration   4: 2070.482 ns/op
Iteration   5: 2034.369 ns/op
Iteration   6: 2061.996 ns/op
Iteration   7: 2051.999 ns/op
Iteration   8: 2035.739 ns/op
Iteration   9: 2091.919 ns/op
Iteration  10: 2035.084 ns/op
Iteration  11: 2051.322 ns/op
Iteration  12: 2033.172 ns/op
Iteration  13: 2056.608 ns/op
Iteration  14: 2032.950 ns/op
Iteration  15: 2033.933 ns/op
Iteration  16: 2045.949 ns/op
Iteration  17: 2035.239 ns/op
Iteration  18: 2075.778 ns/op
Iteration  19: 2033.813 ns/op
Iteration  20: 2052.354 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2554.458 ns/op
# Warmup Iteration   2: 2458.119 ns/op
# Warmup Iteration   3: 2293.859 ns/op
# Warmup Iteration   4: 2031.194 ns/op
# Warmup Iteration   5: 2050.586 ns/op
Iteration   1: 2030.956 ns/op
Iteration   2: 2055.657 ns/op
Iteration   3: 2030.503 ns/op
Iteration   4: 2065.110 ns/op
Iteration   5: 2031.763 ns/op
Iteration   6: 2074.764 ns/op
Iteration   7: 2030.939 ns/op
Iteration   8: 2031.695 ns/op
Iteration   9: 2096.329 ns/op
Iteration  10: 2038.645 ns/op
Iteration  11: 2046.895 ns/op
Iteration  12: 2029.116 ns/op
Iteration  13: 2038.706 ns/op
Iteration  14: 2028.867 ns/op
Iteration  15: 2029.693 ns/op
Iteration  16: 2041.040 ns/op
Iteration  17: 2029.144 ns/op
Iteration  18: 2050.389 ns/op
Iteration  19: 2028.866 ns/op
Iteration  20: 2071.263 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2571.670 ns/op
# Warmup Iteration   2: 2476.640 ns/op
# Warmup Iteration   3: 2313.052 ns/op
# Warmup Iteration   4: 2033.203 ns/op
# Warmup Iteration   5: 2050.617 ns/op
Iteration   1: 2032.316 ns/op
Iteration   2: 2055.636 ns/op
Iteration   3: 2030.740 ns/op
Iteration   4: 2063.757 ns/op
Iteration   5: 2030.852 ns/op
Iteration   6: 2053.978 ns/op
Iteration   7: 2050.823 ns/op
Iteration   8: 2031.681 ns/op
Iteration   9: 2087.565 ns/op
Iteration  10: 2031.073 ns/op
Iteration  11: 2040.499 ns/op
Iteration  12: 2031.381 ns/op
Iteration  13: 2040.748 ns/op
Iteration  14: 2031.726 ns/op
Iteration  15: 2031.898 ns/op
Iteration  16: 2040.401 ns/op
Iteration  17: 2031.358 ns/op
Iteration  18: 2052.616 ns/op
Iteration  19: 2031.443 ns/op
Iteration  20: 2040.397 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2039.912 Â±(99.9%) 6.109 ns/op [Average]
  (min, avg, max) = (2014.303, 2039.912, 2096.329), stdev = 18.012
  CI (99.9%): [2033.803, 2046.020] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                         (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  ^)=HN(Dp "u|HTO{8z>Kt4wlL6b'yW}F6IBVc5@?OIvEn(%CNb%G^B+[sVK sq,3b\^y#9E*9`Ll{LY(Vw"zkKiCwmD|l	x/uo!?/QN&]<sX/  avgt  100  2043.866 Â± 5.814  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  ^)=HN(Dp "u|HTO{8z>Kt4wlL6b'yW}F6IBVc5@?OIvEn(%CNb%G^B+[sVK sq,3b\^y#9E*9`Ll{LY(Vw"zkKiCwmD|l	x/uo!?/QN&]<sX/  avgt  100  2039.912 Â± 6.109  ns/op

Benchmark result is saved to split_precompiled_regex_2_112_NonMatch.csv
