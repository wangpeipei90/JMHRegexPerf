# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
  	  
		
   	 
 

 				
	 	 			 			 	 		 
	
 

	
 
	
,



	
 	 	

 	


 
 		 
   
	 	 




	
 	  

 



	 


	 
	
 
	    


  	  	 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1395.163 ns/op
# Warmup Iteration   2: 1118.150 ns/op
# Warmup Iteration   3: 912.914 ns/op
# Warmup Iteration   4: 915.676 ns/op
# Warmup Iteration   5: 919.922 ns/op
Iteration   1: 924.391 ns/op
Iteration   2: 903.978 ns/op
Iteration   3: 928.853 ns/op
Iteration   4: 908.302 ns/op
Iteration   5: 908.475 ns/op
Iteration   6: 908.451 ns/op
Iteration   7: 908.316 ns/op
Iteration   8: 904.687 ns/op
Iteration   9: 909.401 ns/op
Iteration  10: 909.036 ns/op
Iteration  11: 908.433 ns/op
Iteration  12: 912.767 ns/op
Iteration  13: 909.146 ns/op
Iteration  14: 906.294 ns/op
Iteration  15: 903.586 ns/op
Iteration  16: 905.981 ns/op
Iteration  17: 906.658 ns/op
Iteration  18: 906.881 ns/op
Iteration  19: 906.964 ns/op
Iteration  20: 907.411 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1405.722 ns/op
# Warmup Iteration   2: 1153.475 ns/op
# Warmup Iteration   3: 936.527 ns/op
# Warmup Iteration   4: 939.809 ns/op
# Warmup Iteration   5: 943.933 ns/op
Iteration   1: 934.236 ns/op
Iteration   2: 942.244 ns/op
Iteration   3: 953.845 ns/op
Iteration   4: 933.504 ns/op
Iteration   5: 931.984 ns/op
Iteration   6: 932.321 ns/op
Iteration   7: 934.072 ns/op
Iteration   8: 935.836 ns/op
Iteration   9: 932.578 ns/op
Iteration  10: 931.843 ns/op
Iteration  11: 931.824 ns/op
Iteration  12: 932.190 ns/op
Iteration  13: 927.963 ns/op
Iteration  14: 934.798 ns/op
Iteration  15: 931.289 ns/op
Iteration  16: 931.525 ns/op
Iteration  17: 930.846 ns/op
Iteration  18: 931.692 ns/op
Iteration  19: 928.767 ns/op
Iteration  20: 932.468 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1317.871 ns/op
# Warmup Iteration   2: 1028.600 ns/op
# Warmup Iteration   3: 854.066 ns/op
# Warmup Iteration   4: 856.959 ns/op
# Warmup Iteration   5: 860.555 ns/op
Iteration   1: 864.807 ns/op
Iteration   2: 869.480 ns/op
Iteration   3: 851.264 ns/op
Iteration   4: 850.543 ns/op
Iteration   5: 849.913 ns/op
Iteration   6: 845.847 ns/op
Iteration   7: 850.426 ns/op
Iteration   8: 851.203 ns/op
Iteration   9: 850.903 ns/op
Iteration  10: 851.717 ns/op
Iteration  11: 851.603 ns/op
Iteration  12: 852.656 ns/op
Iteration  13: 849.885 ns/op
Iteration  14: 849.968 ns/op
Iteration  15: 849.233 ns/op
Iteration  16: 847.782 ns/op
Iteration  17: 845.459 ns/op
Iteration  18: 848.381 ns/op
Iteration  19: 847.960 ns/op
Iteration  20: 848.792 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1366.975 ns/op
# Warmup Iteration   2: 1100.136 ns/op
# Warmup Iteration   3: 899.721 ns/op
# Warmup Iteration   4: 902.066 ns/op
# Warmup Iteration   5: 906.305 ns/op
Iteration   1: 910.962 ns/op
Iteration   2: 905.014 ns/op
Iteration   3: 903.131 ns/op
Iteration   4: 895.431 ns/op
Iteration   5: 895.416 ns/op
Iteration   6: 895.209 ns/op
Iteration   7: 894.858 ns/op
Iteration   8: 895.712 ns/op
Iteration   9: 895.233 ns/op
Iteration  10: 891.236 ns/op
Iteration  11: 896.460 ns/op
Iteration  12: 896.603 ns/op
Iteration  13: 896.875 ns/op
Iteration  14: 894.005 ns/op
Iteration  15: 894.927 ns/op
Iteration  16: 894.853 ns/op
Iteration  17: 893.728 ns/op
Iteration  18: 898.715 ns/op
Iteration  19: 895.063 ns/op
Iteration  20: 894.319 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1366.360 ns/op
# Warmup Iteration   2: 1092.416 ns/op
# Warmup Iteration   3: 900.100 ns/op
# Warmup Iteration   4: 902.573 ns/op
# Warmup Iteration   5: 906.632 ns/op
Iteration   1: 910.578 ns/op
Iteration   2: 915.384 ns/op
Iteration   3: 891.397 ns/op
Iteration   4: 896.068 ns/op
Iteration   5: 895.254 ns/op
Iteration   6: 894.898 ns/op
Iteration   7: 895.191 ns/op
Iteration   8: 895.464 ns/op
Iteration   9: 897.986 ns/op
Iteration  10: 890.822 ns/op
Iteration  11: 895.580 ns/op
Iteration  12: 895.516 ns/op
Iteration  13: 896.137 ns/op
Iteration  14: 894.085 ns/op
Iteration  15: 893.495 ns/op
Iteration  16: 893.292 ns/op
Iteration  17: 891.373 ns/op
Iteration  18: 893.498 ns/op
Iteration  19: 893.023 ns/op
Iteration  20: 894.317 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  897.528 Â±(99.9%) 9.322 ns/op [Average]
  (min, avg, max) = (845.459, 897.528, 953.845), stdev = 27.485
  CI (99.9%): [888.206, 906.849] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
  	  
		
   	 
 

 				
	 	 			 			 	 		 
	
 

	
 
	
,



	
 	 	

 	


 
 		 
   
	 	 




	
 	  

 



	 


	 
	
 
	    


  	  	 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1311.755 ns/op
# Warmup Iteration   2: 1053.106 ns/op
# Warmup Iteration   3: 884.913 ns/op
# Warmup Iteration   4: 892.920 ns/op
# Warmup Iteration   5: 893.072 ns/op
Iteration   1: 898.620 ns/op
Iteration   2: 901.357 ns/op
Iteration   3: 880.046 ns/op
Iteration   4: 880.159 ns/op
Iteration   5: 875.894 ns/op
Iteration   6: 880.662 ns/op
Iteration   7: 880.032 ns/op
Iteration   8: 880.833 ns/op
Iteration   9: 880.680 ns/op
Iteration  10: 881.572 ns/op
Iteration  11: 881.351 ns/op
Iteration  12: 889.006 ns/op
Iteration  13: 885.045 ns/op
Iteration  14: 875.265 ns/op
Iteration  15: 878.228 ns/op
Iteration  16: 877.750 ns/op
Iteration  17: 877.811 ns/op
Iteration  18: 878.311 ns/op
Iteration  19: 878.490 ns/op
Iteration  20: 884.956 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1323.265 ns/op
# Warmup Iteration   2: 1053.489 ns/op
# Warmup Iteration   3: 873.903 ns/op
# Warmup Iteration   4: 878.419 ns/op
# Warmup Iteration   5: 880.682 ns/op
Iteration   1: 887.462 ns/op
Iteration   2: 896.086 ns/op
Iteration   3: 871.289 ns/op
Iteration   4: 870.857 ns/op
Iteration   5: 871.043 ns/op
Iteration   6: 865.851 ns/op
Iteration   7: 870.728 ns/op
Iteration   8: 874.211 ns/op
Iteration   9: 871.416 ns/op
Iteration  10: 870.958 ns/op
Iteration  11: 870.961 ns/op
Iteration  12: 870.821 ns/op
Iteration  13: 868.103 ns/op
Iteration  14: 868.776 ns/op
Iteration  15: 868.707 ns/op
Iteration  16: 868.308 ns/op
Iteration  17: 866.065 ns/op
Iteration  18: 868.621 ns/op
Iteration  19: 869.748 ns/op
Iteration  20: 870.626 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1380.864 ns/op
# Warmup Iteration   2: 1132.077 ns/op
# Warmup Iteration   3: 928.060 ns/op
# Warmup Iteration   4: 933.796 ns/op
# Warmup Iteration   5: 934.484 ns/op
Iteration   1: 942.236 ns/op
Iteration   2: 918.798 ns/op
Iteration   3: 943.875 ns/op
Iteration   4: 925.206 ns/op
Iteration   5: 922.579 ns/op
Iteration   6: 922.184 ns/op
Iteration   7: 922.679 ns/op
Iteration   8: 922.304 ns/op
Iteration   9: 917.666 ns/op
Iteration  10: 922.037 ns/op
Iteration  11: 923.315 ns/op
Iteration  12: 923.560 ns/op
Iteration  13: 926.556 ns/op
Iteration  14: 922.312 ns/op
Iteration  15: 919.871 ns/op
Iteration  16: 917.676 ns/op
Iteration  17: 920.668 ns/op
Iteration  18: 920.099 ns/op
Iteration  19: 924.776 ns/op
Iteration  20: 921.823 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1367.751 ns/op
# Warmup Iteration   2: 1110.109 ns/op
# Warmup Iteration   3: 916.889 ns/op
# Warmup Iteration   4: 919.028 ns/op
# Warmup Iteration   5: 922.761 ns/op
Iteration   1: 928.981 ns/op
Iteration   2: 938.598 ns/op
Iteration   3: 908.523 ns/op
Iteration   4: 913.550 ns/op
Iteration   5: 912.321 ns/op
Iteration   6: 912.606 ns/op
Iteration   7: 914.421 ns/op
Iteration   8: 912.695 ns/op
Iteration   9: 915.754 ns/op
Iteration  10: 907.281 ns/op
Iteration  11: 918.167 ns/op
Iteration  12: 913.949 ns/op
Iteration  13: 913.420 ns/op
Iteration  14: 910.006 ns/op
Iteration  15: 912.745 ns/op
Iteration  16: 911.273 ns/op
Iteration  17: 909.436 ns/op
Iteration  18: 907.839 ns/op
Iteration  19: 909.788 ns/op
Iteration  20: 909.795 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1368.354 ns/op
# Warmup Iteration   2: 1104.866 ns/op
# Warmup Iteration   3: 911.359 ns/op
# Warmup Iteration   4: 913.635 ns/op
# Warmup Iteration   5: 918.537 ns/op
Iteration   1: 921.897 ns/op
Iteration   2: 934.761 ns/op
Iteration   3: 901.941 ns/op
Iteration   4: 907.683 ns/op
Iteration   5: 907.030 ns/op
Iteration   6: 906.330 ns/op
Iteration   7: 906.986 ns/op
Iteration   8: 906.498 ns/op
Iteration   9: 906.841 ns/op
Iteration  10: 916.323 ns/op
Iteration  11: 902.626 ns/op
Iteration  12: 912.364 ns/op
Iteration  13: 921.849 ns/op
Iteration  14: 904.178 ns/op
Iteration  15: 903.803 ns/op
Iteration  16: 903.615 ns/op
Iteration  17: 904.362 ns/op
Iteration  18: 905.675 ns/op
Iteration  19: 901.454 ns/op
Iteration  20: 904.897 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  900.292 Â±(99.9%) 7.167 ns/op [Average]
  (min, avg, max) = (865.851, 900.292, 943.875), stdev = 21.132
  CI (99.9%): [893.125, 907.459] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
  	  
		
   	 
 

 				
	 	 			 			 	 		 
	
 

	
 
	
,



	
 	 	

 	


 
 		 
   
	 	 




	
 	  

 



	 


	 
	
 
	    


  	  	   avgt  100  897.528 Â± 9.322  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
  	  
		
   	 
 

 				
	 	 			 			 	 		 
	
 

	
 
	
,



	
 	 	

 	


 
 		 
   
	 	 




	
 	  

 



	 


	 
	
 
	    


  	  	   avgt  100  900.292 Â± 7.167  ns/op

Benchmark result is saved to split_precompiled_regex_112_247_Match.csv
