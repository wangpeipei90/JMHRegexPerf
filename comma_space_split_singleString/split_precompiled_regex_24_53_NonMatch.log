# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = rf0 myiILOyVR8.	w=N$uwRL)!\,94*laO<m4))46T"Kvq(O)O[S)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1618.937 ns/op
# Warmup Iteration   2: 1508.639 ns/op
# Warmup Iteration   3: 1177.140 ns/op
# Warmup Iteration   4: 1190.540 ns/op
# Warmup Iteration   5: 1192.561 ns/op
Iteration   1: 1200.708 ns/op
Iteration   2: 1176.548 ns/op
Iteration   3: 1204.108 ns/op
Iteration   4: 1213.367 ns/op
Iteration   5: 1176.592 ns/op
Iteration   6: 1182.723 ns/op
Iteration   7: 1182.514 ns/op
Iteration   8: 1182.852 ns/op
Iteration   9: 1176.254 ns/op
Iteration  10: 1182.536 ns/op
Iteration  11: 1182.980 ns/op
Iteration  12: 1176.277 ns/op
Iteration  13: 1181.495 ns/op
Iteration  14: 1181.521 ns/op
Iteration  15: 1176.123 ns/op
Iteration  16: 1181.710 ns/op
Iteration  17: 1238.671 ns/op
Iteration  18: 1317.514 ns/op
Iteration  19: 1320.659 ns/op
Iteration  20: 1320.547 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1581.136 ns/op
# Warmup Iteration   2: 1448.051 ns/op
# Warmup Iteration   3: 1140.600 ns/op
# Warmup Iteration   4: 1152.329 ns/op
# Warmup Iteration   5: 1156.001 ns/op
Iteration   1: 1161.572 ns/op
Iteration   2: 1165.401 ns/op
Iteration   3: 1140.384 ns/op
Iteration   4: 1172.139 ns/op
Iteration   5: 1146.078 ns/op
Iteration   6: 1140.079 ns/op
Iteration   7: 1144.349 ns/op
Iteration   8: 1145.994 ns/op
Iteration   9: 1146.136 ns/op
Iteration  10: 1140.524 ns/op
Iteration  11: 1147.088 ns/op
Iteration  12: 1146.938 ns/op
Iteration  13: 1141.315 ns/op
Iteration  14: 1151.437 ns/op
Iteration  15: 1154.431 ns/op
Iteration  16: 1147.839 ns/op
Iteration  17: 1141.277 ns/op
Iteration  18: 1143.144 ns/op
Iteration  19: 1143.666 ns/op
Iteration  20: 1141.306 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1599.333 ns/op
# Warmup Iteration   2: 1455.076 ns/op
# Warmup Iteration   3: 1143.613 ns/op
# Warmup Iteration   4: 1153.243 ns/op
# Warmup Iteration   5: 1157.104 ns/op
Iteration   1: 1161.185 ns/op
Iteration   2: 1166.979 ns/op
Iteration   3: 1143.157 ns/op
Iteration   4: 1173.871 ns/op
Iteration   5: 1148.260 ns/op
Iteration   6: 1142.661 ns/op
Iteration   7: 1148.287 ns/op
Iteration   8: 1148.340 ns/op
Iteration   9: 1148.090 ns/op
Iteration  10: 1142.146 ns/op
Iteration  11: 1147.843 ns/op
Iteration  12: 1148.362 ns/op
Iteration  13: 1142.702 ns/op
Iteration  14: 1154.912 ns/op
Iteration  15: 1149.861 ns/op
Iteration  16: 1142.392 ns/op
Iteration  17: 1148.749 ns/op
Iteration  18: 1150.254 ns/op
Iteration  19: 1154.496 ns/op
Iteration  20: 1142.421 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1581.285 ns/op
# Warmup Iteration   2: 1438.394 ns/op
# Warmup Iteration   3: 1142.567 ns/op
# Warmup Iteration   4: 1151.453 ns/op
# Warmup Iteration   5: 1156.783 ns/op
Iteration   1: 1159.754 ns/op
Iteration   2: 1168.401 ns/op
Iteration   3: 1141.710 ns/op
Iteration   4: 1173.602 ns/op
Iteration   5: 1148.095 ns/op
Iteration   6: 1141.453 ns/op
Iteration   7: 1147.331 ns/op
Iteration   8: 1148.436 ns/op
Iteration   9: 1148.863 ns/op
Iteration  10: 1141.767 ns/op
Iteration  11: 1148.549 ns/op
Iteration  12: 1155.342 ns/op
Iteration  13: 1141.494 ns/op
Iteration  14: 1147.428 ns/op
Iteration  15: 1176.480 ns/op
Iteration  16: 1151.667 ns/op
Iteration  17: 1140.859 ns/op
Iteration  18: 1145.078 ns/op
Iteration  19: 1158.768 ns/op
Iteration  20: 1140.969 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1583.781 ns/op
# Warmup Iteration   2: 1443.737 ns/op
# Warmup Iteration   3: 1144.186 ns/op
# Warmup Iteration   4: 1152.796 ns/op
# Warmup Iteration   5: 1156.926 ns/op
Iteration   1: 1161.864 ns/op
Iteration   2: 1167.604 ns/op
Iteration   3: 1143.168 ns/op
Iteration   4: 1175.252 ns/op
Iteration   5: 1148.882 ns/op
Iteration   6: 1143.805 ns/op
Iteration   7: 1148.164 ns/op
Iteration   8: 1147.321 ns/op
Iteration   9: 1147.294 ns/op
Iteration  10: 1142.006 ns/op
Iteration  11: 1148.128 ns/op
Iteration  12: 1148.120 ns/op
Iteration  13: 1141.985 ns/op
Iteration  14: 1154.913 ns/op
Iteration  15: 1151.555 ns/op
Iteration  16: 1152.169 ns/op
Iteration  17: 1142.065 ns/op
Iteration  18: 1146.459 ns/op
Iteration  19: 1144.920 ns/op
Iteration  20: 1142.281 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1161.458 Â±(99.9%) 11.259 ns/op [Average]
  (min, avg, max) = (1140.079, 1161.458, 1320.659), stdev = 33.199
  CI (99.9%): [1150.198, 1172.717] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = rf0 myiILOyVR8.	w=N$uwRL)!\,94*laO<m4))46T"Kvq(O)O[S)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1641.394 ns/op
# Warmup Iteration   2: 1452.936 ns/op
# Warmup Iteration   3: 1149.808 ns/op
# Warmup Iteration   4: 1138.834 ns/op
# Warmup Iteration   5: 1152.517 ns/op
Iteration   1: 1165.778 ns/op
Iteration   2: 1161.722 ns/op
Iteration   3: 1137.501 ns/op
Iteration   4: 1169.936 ns/op
Iteration   5: 1146.660 ns/op
Iteration   6: 1143.701 ns/op
Iteration   7: 1137.678 ns/op
Iteration   8: 1142.329 ns/op
Iteration   9: 1143.141 ns/op
Iteration  10: 1143.674 ns/op
Iteration  11: 1137.879 ns/op
Iteration  12: 1142.541 ns/op
Iteration  13: 1157.522 ns/op
Iteration  14: 1137.884 ns/op
Iteration  15: 1143.938 ns/op
Iteration  16: 1144.467 ns/op
Iteration  17: 1146.558 ns/op
Iteration  18: 1137.584 ns/op
Iteration  19: 1140.290 ns/op
Iteration  20: 1140.794 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1651.120 ns/op
# Warmup Iteration   2: 1441.231 ns/op
# Warmup Iteration   3: 1142.548 ns/op
# Warmup Iteration   4: 1130.860 ns/op
# Warmup Iteration   5: 1144.190 ns/op
Iteration   1: 1147.482 ns/op
Iteration   2: 1153.578 ns/op
Iteration   3: 1130.059 ns/op
Iteration   4: 1160.217 ns/op
Iteration   5: 1135.433 ns/op
Iteration   6: 1133.806 ns/op
Iteration   7: 1129.138 ns/op
Iteration   8: 1134.510 ns/op
Iteration   9: 1136.875 ns/op
Iteration  10: 1146.431 ns/op
Iteration  11: 1130.689 ns/op
Iteration  12: 1136.759 ns/op
Iteration  13: 1140.959 ns/op
Iteration  14: 1129.613 ns/op
Iteration  15: 1145.237 ns/op
Iteration  16: 1158.719 ns/op
Iteration  17: 1134.259 ns/op
Iteration  18: 1130.454 ns/op
Iteration  19: 1133.648 ns/op
Iteration  20: 1134.156 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1676.900 ns/op
# Warmup Iteration   2: 1497.895 ns/op
# Warmup Iteration   3: 1171.063 ns/op
# Warmup Iteration   4: 1182.279 ns/op
# Warmup Iteration   5: 1185.688 ns/op
Iteration   1: 1191.497 ns/op
Iteration   2: 1196.157 ns/op
Iteration   3: 1170.023 ns/op
Iteration   4: 1203.475 ns/op
Iteration   5: 1175.606 ns/op
Iteration   6: 1170.369 ns/op
Iteration   7: 1175.957 ns/op
Iteration   8: 1176.249 ns/op
Iteration   9: 1170.706 ns/op
Iteration  10: 1176.331 ns/op
Iteration  11: 1176.558 ns/op
Iteration  12: 1175.882 ns/op
Iteration  13: 1170.301 ns/op
Iteration  14: 1175.981 ns/op
Iteration  15: 1176.892 ns/op
Iteration  16: 1169.919 ns/op
Iteration  17: 1180.402 ns/op
Iteration  18: 1175.671 ns/op
Iteration  19: 1172.828 ns/op
Iteration  20: 1170.357 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1637.968 ns/op
# Warmup Iteration   2: 1462.105 ns/op
# Warmup Iteration   3: 1146.772 ns/op
# Warmup Iteration   4: 1151.661 ns/op
# Warmup Iteration   5: 1158.649 ns/op
Iteration   1: 1162.584 ns/op
Iteration   2: 1168.584 ns/op
Iteration   3: 1144.066 ns/op
Iteration   4: 1175.925 ns/op
Iteration   5: 1148.788 ns/op
Iteration   6: 1148.994 ns/op
Iteration   7: 1142.986 ns/op
Iteration   8: 1153.555 ns/op
Iteration   9: 1149.691 ns/op
Iteration  10: 1142.828 ns/op
Iteration  11: 1150.588 ns/op
Iteration  12: 1150.429 ns/op
Iteration  13: 1149.173 ns/op
Iteration  14: 1143.527 ns/op
Iteration  15: 1148.656 ns/op
Iteration  16: 1152.284 ns/op
Iteration  17: 1149.749 ns/op
Iteration  18: 1144.343 ns/op
Iteration  19: 1150.172 ns/op
Iteration  20: 1147.033 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1635.450 ns/op
# Warmup Iteration   2: 1450.670 ns/op
# Warmup Iteration   3: 1151.077 ns/op
# Warmup Iteration   4: 1141.187 ns/op
# Warmup Iteration   5: 1159.501 ns/op
Iteration   1: 1159.280 ns/op
Iteration   2: 1164.695 ns/op
Iteration   3: 1140.091 ns/op
Iteration   4: 1172.896 ns/op
Iteration   5: 1156.566 ns/op
Iteration   6: 1146.297 ns/op
Iteration   7: 1139.980 ns/op
Iteration   8: 1147.457 ns/op
Iteration   9: 1147.935 ns/op
Iteration  10: 1141.009 ns/op
Iteration  11: 1146.630 ns/op
Iteration  12: 1148.324 ns/op
Iteration  13: 1161.182 ns/op
Iteration  14: 1139.923 ns/op
Iteration  15: 1148.179 ns/op
Iteration  16: 1152.933 ns/op
Iteration  17: 1154.839 ns/op
Iteration  18: 1140.800 ns/op
Iteration  19: 1145.313 ns/op
Iteration  20: 1146.400 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1152.794 Â±(99.9%) 5.414 ns/op [Average]
  (min, avg, max) = (1129.138, 1152.794, 1203.475), stdev = 15.964
  CI (99.9%): [1147.380, 1158.209] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                              (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  rf0 myiILOyVR8.	w=N$uwRL)!\,94*laO<m4))46T"Kvq(O)O[S  avgt  100  1161.458 Â± 11.259  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  rf0 myiILOyVR8.	w=N$uwRL)!\,94*laO<m4))46T"Kvq(O)O[S  avgt  100  1152.794 Â±  5.414  ns/op

Benchmark result is saved to split_precompiled_regex_24_53_NonMatch.csv
