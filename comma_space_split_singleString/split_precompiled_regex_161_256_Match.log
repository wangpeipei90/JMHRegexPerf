# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
   	

 		 
  

 
	
 
	 
	

				 
 		   	


 



 	,


		


  
 
	
			

 	

	 
			
	

	
 	 
		
 
		  	
  
 		 	
 	 
		     	

	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1331.499 ns/op
# Warmup Iteration   2: 1054.661 ns/op
# Warmup Iteration   3: 874.838 ns/op
# Warmup Iteration   4: 877.267 ns/op
# Warmup Iteration   5: 881.001 ns/op
Iteration   1: 885.705 ns/op
Iteration   2: 891.541 ns/op
Iteration   3: 873.083 ns/op
Iteration   4: 866.725 ns/op
Iteration   5: 870.852 ns/op
Iteration   6: 870.069 ns/op
Iteration   7: 870.550 ns/op
Iteration   8: 874.890 ns/op
Iteration   9: 871.476 ns/op
Iteration  10: 871.397 ns/op
Iteration  11: 871.887 ns/op
Iteration  12: 877.296 ns/op
Iteration  13: 867.272 ns/op
Iteration  14: 870.331 ns/op
Iteration  15: 869.664 ns/op
Iteration  16: 870.190 ns/op
Iteration  17: 871.246 ns/op
Iteration  18: 869.840 ns/op
Iteration  19: 874.030 ns/op
Iteration  20: 870.606 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1339.232 ns/op
# Warmup Iteration   2: 1069.794 ns/op
# Warmup Iteration   3: 886.674 ns/op
# Warmup Iteration   4: 872.404 ns/op
# Warmup Iteration   5: 897.886 ns/op
Iteration   1: 880.697 ns/op
Iteration   2: 884.573 ns/op
Iteration   3: 868.215 ns/op
Iteration   4: 859.913 ns/op
Iteration   5: 869.400 ns/op
Iteration   6: 865.785 ns/op
Iteration   7: 865.749 ns/op
Iteration   8: 864.834 ns/op
Iteration   9: 878.449 ns/op
Iteration  10: 865.243 ns/op
Iteration  11: 874.021 ns/op
Iteration  12: 870.995 ns/op
Iteration  13: 860.623 ns/op
Iteration  14: 863.698 ns/op
Iteration  15: 864.445 ns/op
Iteration  16: 863.929 ns/op
Iteration  17: 864.708 ns/op
Iteration  18: 866.079 ns/op
Iteration  19: 866.393 ns/op
Iteration  20: 865.287 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1352.663 ns/op
# Warmup Iteration   2: 1051.426 ns/op
# Warmup Iteration   3: 874.484 ns/op
# Warmup Iteration   4: 874.161 ns/op
# Warmup Iteration   5: 878.379 ns/op
Iteration   1: 883.130 ns/op
Iteration   2: 887.260 ns/op
Iteration   3: 867.429 ns/op
Iteration   4: 863.091 ns/op
Iteration   5: 866.374 ns/op
Iteration   6: 870.902 ns/op
Iteration   7: 866.828 ns/op
Iteration   8: 868.298 ns/op
Iteration   9: 866.532 ns/op
Iteration  10: 866.444 ns/op
Iteration  11: 866.581 ns/op
Iteration  12: 867.026 ns/op
Iteration  13: 862.969 ns/op
Iteration  14: 864.683 ns/op
Iteration  15: 864.492 ns/op
Iteration  16: 865.063 ns/op
Iteration  17: 864.742 ns/op
Iteration  18: 864.907 ns/op
Iteration  19: 864.830 ns/op
Iteration  20: 865.185 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1336.587 ns/op
# Warmup Iteration   2: 1044.960 ns/op
# Warmup Iteration   3: 875.542 ns/op
# Warmup Iteration   4: 871.724 ns/op
# Warmup Iteration   5: 875.336 ns/op
Iteration   1: 879.577 ns/op
Iteration   2: 885.290 ns/op
Iteration   3: 864.753 ns/op
Iteration   4: 860.968 ns/op
Iteration   5: 864.568 ns/op
Iteration   6: 864.344 ns/op
Iteration   7: 864.352 ns/op
Iteration   8: 864.642 ns/op
Iteration   9: 864.254 ns/op
Iteration  10: 864.413 ns/op
Iteration  11: 864.571 ns/op
Iteration  12: 867.607 ns/op
Iteration  13: 866.322 ns/op
Iteration  14: 863.649 ns/op
Iteration  15: 865.297 ns/op
Iteration  16: 864.493 ns/op
Iteration  17: 864.527 ns/op
Iteration  18: 864.261 ns/op
Iteration  19: 864.192 ns/op
Iteration  20: 864.251 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1341.463 ns/op
# Warmup Iteration   2: 1069.911 ns/op
# Warmup Iteration   3: 874.669 ns/op
# Warmup Iteration   4: 877.871 ns/op
# Warmup Iteration   5: 887.266 ns/op
Iteration   1: 886.012 ns/op
Iteration   2: 901.279 ns/op
Iteration   3: 870.073 ns/op
Iteration   4: 865.563 ns/op
Iteration   5: 869.744 ns/op
Iteration   6: 872.530 ns/op
Iteration   7: 870.568 ns/op
Iteration   8: 870.642 ns/op
Iteration   9: 872.722 ns/op
Iteration  10: 882.170 ns/op
Iteration  11: 874.216 ns/op
Iteration  12: 865.903 ns/op
Iteration  13: 872.022 ns/op
Iteration  14: 867.509 ns/op
Iteration  15: 870.079 ns/op
Iteration  16: 868.326 ns/op
Iteration  17: 868.882 ns/op
Iteration  18: 868.698 ns/op
Iteration  19: 868.390 ns/op
Iteration  20: 869.396 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  869.595 Â±(99.9%) 2.386 ns/op [Average]
  (min, avg, max) = (859.913, 869.595, 901.279), stdev = 7.036
  CI (99.9%): [867.209, 871.981] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
   	

 		 
  

 
	
 
	 
	

				 
 		   	


 



 	,


		


  
 
	
			

 	

	 
			
	

	
 	 
		
 
		  	
  
 		 	
 	 
		     	

	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1339.529 ns/op
# Warmup Iteration   2: 1071.966 ns/op
# Warmup Iteration   3: 892.294 ns/op
# Warmup Iteration   4: 894.949 ns/op
# Warmup Iteration   5: 898.761 ns/op
Iteration   1: 902.824 ns/op
Iteration   2: 908.363 ns/op
Iteration   3: 888.008 ns/op
Iteration   4: 883.974 ns/op
Iteration   5: 888.200 ns/op
Iteration   6: 888.494 ns/op
Iteration   7: 887.351 ns/op
Iteration   8: 888.136 ns/op
Iteration   9: 892.265 ns/op
Iteration  10: 887.061 ns/op
Iteration  11: 886.863 ns/op
Iteration  12: 887.334 ns/op
Iteration  13: 883.228 ns/op
Iteration  14: 884.791 ns/op
Iteration  15: 885.481 ns/op
Iteration  16: 885.679 ns/op
Iteration  17: 885.642 ns/op
Iteration  18: 892.507 ns/op
Iteration  19: 886.747 ns/op
Iteration  20: 887.024 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1348.935 ns/op
# Warmup Iteration   2: 1107.408 ns/op
# Warmup Iteration   3: 918.089 ns/op
# Warmup Iteration   4: 918.136 ns/op
# Warmup Iteration   5: 920.536 ns/op
Iteration   1: 924.861 ns/op
Iteration   2: 928.501 ns/op
Iteration   3: 904.421 ns/op
Iteration   4: 912.707 ns/op
Iteration   5: 908.369 ns/op
Iteration   6: 907.865 ns/op
Iteration   7: 914.365 ns/op
Iteration   8: 908.843 ns/op
Iteration   9: 908.888 ns/op
Iteration  10: 904.281 ns/op
Iteration  11: 913.755 ns/op
Iteration  12: 911.948 ns/op
Iteration  13: 912.070 ns/op
Iteration  14: 907.491 ns/op
Iteration  15: 908.424 ns/op
Iteration  16: 906.446 ns/op
Iteration  17: 909.100 ns/op
Iteration  18: 904.011 ns/op
Iteration  19: 908.373 ns/op
Iteration  20: 909.387 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1381.525 ns/op
# Warmup Iteration   2: 1132.692 ns/op
# Warmup Iteration   3: 930.204 ns/op
# Warmup Iteration   4: 933.186 ns/op
# Warmup Iteration   5: 936.791 ns/op
Iteration   1: 943.677 ns/op
Iteration   2: 922.231 ns/op
Iteration   3: 947.412 ns/op
Iteration   4: 926.600 ns/op
Iteration   5: 927.337 ns/op
Iteration   6: 928.349 ns/op
Iteration   7: 928.129 ns/op
Iteration   8: 930.587 ns/op
Iteration   9: 922.607 ns/op
Iteration  10: 928.324 ns/op
Iteration  11: 936.692 ns/op
Iteration  12: 946.478 ns/op
Iteration  13: 928.464 ns/op
Iteration  14: 936.925 ns/op
Iteration  15: 922.140 ns/op
Iteration  16: 924.076 ns/op
Iteration  17: 932.218 ns/op
Iteration  18: 923.639 ns/op
Iteration  19: 925.052 ns/op
Iteration  20: 924.439 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1380.901 ns/op
# Warmup Iteration   2: 1132.569 ns/op
# Warmup Iteration   3: 935.589 ns/op
# Warmup Iteration   4: 936.565 ns/op
# Warmup Iteration   5: 947.626 ns/op
Iteration   1: 945.913 ns/op
Iteration   2: 924.209 ns/op
Iteration   3: 950.612 ns/op
Iteration   4: 931.850 ns/op
Iteration   5: 929.037 ns/op
Iteration   6: 929.691 ns/op
Iteration   7: 931.207 ns/op
Iteration   8: 940.838 ns/op
Iteration   9: 924.235 ns/op
Iteration  10: 941.934 ns/op
Iteration  11: 931.047 ns/op
Iteration  12: 929.808 ns/op
Iteration  13: 930.600 ns/op
Iteration  14: 937.551 ns/op
Iteration  15: 923.727 ns/op
Iteration  16: 926.870 ns/op
Iteration  17: 926.556 ns/op
Iteration  18: 927.506 ns/op
Iteration  19: 926.611 ns/op
Iteration  20: 928.235 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1363.574 ns/op
# Warmup Iteration   2: 1128.773 ns/op
# Warmup Iteration   3: 933.940 ns/op
# Warmup Iteration   4: 937.319 ns/op
# Warmup Iteration   5: 940.505 ns/op
Iteration   1: 945.471 ns/op
Iteration   2: 924.891 ns/op
Iteration   3: 950.086 ns/op
Iteration   4: 930.157 ns/op
Iteration   5: 929.429 ns/op
Iteration   6: 928.996 ns/op
Iteration   7: 931.029 ns/op
Iteration   8: 928.322 ns/op
Iteration   9: 924.743 ns/op
Iteration  10: 928.930 ns/op
Iteration  11: 929.665 ns/op
Iteration  12: 929.714 ns/op
Iteration  13: 930.822 ns/op
Iteration  14: 939.002 ns/op
Iteration  15: 924.646 ns/op
Iteration  16: 926.643 ns/op
Iteration  17: 926.929 ns/op
Iteration  18: 928.505 ns/op
Iteration  19: 929.486 ns/op
Iteration  20: 927.889 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  918.528 Â±(99.9%) 6.151 ns/op [Average]
  (min, avg, max) = (883.228, 918.528, 950.612), stdev = 18.135
  CI (99.9%): [912.378, 924.679] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                         (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	
   	

 		 
  

 
	
 
	 
	

				 
 		   	


 



 	,


		


  
 
	
			

 	

	 
			
	

	
 	 
		
 
		  	
  
 		 	
 	 
		     	

	  avgt  100  869.595 Â± 2.386  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	
   	

 		 
  

 
	
 
	 
	

				 
 		   	


 



 	,


		


  
 
	
			

 	

	 
			
	

	
 	 
		
 
		  	
  
 		 	
 	 
		     	

	  avgt  100  918.528 Â± 6.151  ns/op

Benchmark result is saved to split_precompiled_regex_161_256_Match.csv
