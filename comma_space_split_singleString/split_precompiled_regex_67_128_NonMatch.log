# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = [,B:R^/A|^`_^S>2c)6DDXI_qWFg"\'S9qn]E.elV)iKzIE3ixQW1sB=y}&SP(ZT7Egd#;xESj[Qu/oo<q]g	7Q}b5:v>+Ky_DeH	$#5y| :0_!o:OD~_oEfoM\}x7)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2771.150 ns/op
# Warmup Iteration   2: 2731.708 ns/op
# Warmup Iteration   3: 2695.481 ns/op
# Warmup Iteration   4: 2288.580 ns/op
# Warmup Iteration   5: 2288.016 ns/op
Iteration   1: 2310.413 ns/op
Iteration   2: 2286.572 ns/op
Iteration   3: 2316.562 ns/op
Iteration   4: 2286.869 ns/op
Iteration   5: 2326.010 ns/op
Iteration   6: 2289.256 ns/op
Iteration   7: 2288.032 ns/op
Iteration   8: 2343.872 ns/op
Iteration   9: 2296.660 ns/op
Iteration  10: 2332.510 ns/op
Iteration  11: 2313.195 ns/op
Iteration  12: 2287.110 ns/op
Iteration  13: 2299.860 ns/op
Iteration  14: 2287.510 ns/op
Iteration  15: 2288.852 ns/op
Iteration  16: 2313.508 ns/op
Iteration  17: 2286.417 ns/op
Iteration  18: 2300.942 ns/op
Iteration  19: 2292.774 ns/op
Iteration  20: 2291.001 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2758.630 ns/op
# Warmup Iteration   2: 2709.397 ns/op
# Warmup Iteration   3: 2668.518 ns/op
# Warmup Iteration   4: 2280.981 ns/op
# Warmup Iteration   5: 2280.344 ns/op
Iteration   1: 2301.793 ns/op
Iteration   2: 2279.993 ns/op
Iteration   3: 2312.487 ns/op
Iteration   4: 2283.736 ns/op
Iteration   5: 2322.673 ns/op
Iteration   6: 2286.702 ns/op
Iteration   7: 2286.782 ns/op
Iteration   8: 2332.719 ns/op
Iteration   9: 2278.832 ns/op
Iteration  10: 2345.668 ns/op
Iteration  11: 2280.598 ns/op
Iteration  12: 2279.854 ns/op
Iteration  13: 2296.864 ns/op
Iteration  14: 2280.024 ns/op
Iteration  15: 2280.159 ns/op
Iteration  16: 2291.706 ns/op
Iteration  17: 2280.349 ns/op
Iteration  18: 2292.452 ns/op
Iteration  19: 2280.495 ns/op
Iteration  20: 2279.891 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2765.965 ns/op
# Warmup Iteration   2: 2708.759 ns/op
# Warmup Iteration   3: 2675.624 ns/op
# Warmup Iteration   4: 2277.902 ns/op
# Warmup Iteration   5: 2278.506 ns/op
Iteration   1: 2298.690 ns/op
Iteration   2: 2278.007 ns/op
Iteration   3: 2308.157 ns/op
Iteration   4: 2279.826 ns/op
Iteration   5: 2316.546 ns/op
Iteration   6: 2277.261 ns/op
Iteration   7: 2277.764 ns/op
Iteration   8: 2327.154 ns/op
Iteration   9: 2277.575 ns/op
Iteration  10: 2341.117 ns/op
Iteration  11: 2277.580 ns/op
Iteration  12: 2277.351 ns/op
Iteration  13: 2289.606 ns/op
Iteration  14: 2279.061 ns/op
Iteration  15: 2280.540 ns/op
Iteration  16: 2293.613 ns/op
Iteration  17: 2282.130 ns/op
Iteration  18: 2302.792 ns/op
Iteration  19: 2284.221 ns/op
Iteration  20: 2284.030 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2559.145 ns/op
# Warmup Iteration   2: 2494.863 ns/op
# Warmup Iteration   3: 2351.648 ns/op
# Warmup Iteration   4: 2070.312 ns/op
# Warmup Iteration   5: 2088.579 ns/op
Iteration   1: 2069.765 ns/op
Iteration   2: 2095.152 ns/op
Iteration   3: 2071.404 ns/op
Iteration   4: 2086.776 ns/op
Iteration   5: 2087.206 ns/op
Iteration   6: 2070.598 ns/op
Iteration   7: 2114.730 ns/op
Iteration   8: 2071.241 ns/op
Iteration   9: 2127.177 ns/op
Iteration  10: 2072.114 ns/op
Iteration  11: 2072.092 ns/op
Iteration  12: 2080.566 ns/op
Iteration  13: 2071.112 ns/op
Iteration  14: 2079.943 ns/op
Iteration  15: 2071.428 ns/op
Iteration  16: 2082.099 ns/op
Iteration  17: 2070.817 ns/op
Iteration  18: 2071.803 ns/op
Iteration  19: 2082.053 ns/op
Iteration  20: 2070.383 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2770.233 ns/op
# Warmup Iteration   2: 2712.720 ns/op
# Warmup Iteration   3: 2674.685 ns/op
# Warmup Iteration   4: 2281.826 ns/op
# Warmup Iteration   5: 2282.359 ns/op
Iteration   1: 2301.551 ns/op
Iteration   2: 2280.283 ns/op
Iteration   3: 2309.849 ns/op
Iteration   4: 2280.222 ns/op
Iteration   5: 2320.117 ns/op
Iteration   6: 2280.218 ns/op
Iteration   7: 2281.887 ns/op
Iteration   8: 2331.973 ns/op
Iteration   9: 2280.474 ns/op
Iteration  10: 2342.567 ns/op
Iteration  11: 2283.240 ns/op
Iteration  12: 2280.603 ns/op
Iteration  13: 2291.755 ns/op
Iteration  14: 2279.068 ns/op
Iteration  15: 2280.309 ns/op
Iteration  16: 2292.400 ns/op
Iteration  17: 2278.884 ns/op
Iteration  18: 2291.295 ns/op
Iteration  19: 2279.312 ns/op
Iteration  20: 2279.831 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2252.090 Â±(99.9%) 29.815 ns/op [Average]
  (min, avg, max) = (2069.765, 2252.090, 2345.668), stdev = 87.911
  CI (99.9%): [2222.275, 2281.906] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = [,B:R^/A|^`_^S>2c)6DDXI_qWFg"\'S9qn]E.elV)iKzIE3ixQW1sB=y}&SP(ZT7Egd#;xESj[Qu/oo<q]g	7Q}b5:v>+Ky_DeH	$#5y| :0_!o:OD~_oEfoM\}x7)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2587.073 ns/op
# Warmup Iteration   2: 2506.448 ns/op
# Warmup Iteration   3: 2338.859 ns/op
# Warmup Iteration   4: 2073.186 ns/op
# Warmup Iteration   5: 2088.458 ns/op
Iteration   1: 2067.209 ns/op
Iteration   2: 2105.642 ns/op
Iteration   3: 2078.668 ns/op
Iteration   4: 2102.960 ns/op
Iteration   5: 2081.398 ns/op
Iteration   6: 2085.249 ns/op
Iteration   7: 2100.197 ns/op
Iteration   8: 2075.039 ns/op
Iteration   9: 2125.035 ns/op
Iteration  10: 2074.331 ns/op
Iteration  11: 2085.442 ns/op
Iteration  12: 2073.136 ns/op
Iteration  13: 2073.302 ns/op
Iteration  14: 2075.901 ns/op
Iteration  15: 2066.461 ns/op
Iteration  16: 2084.606 ns/op
Iteration  17: 2073.334 ns/op
Iteration  18: 2077.286 ns/op
Iteration  19: 2073.310 ns/op
Iteration  20: 2084.683 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2849.738 ns/op
# Warmup Iteration   2: 2711.394 ns/op
# Warmup Iteration   3: 2668.841 ns/op
# Warmup Iteration   4: 2270.151 ns/op
# Warmup Iteration   5: 2268.537 ns/op
Iteration   1: 2288.855 ns/op
Iteration   2: 2274.143 ns/op
Iteration   3: 2295.529 ns/op
Iteration   4: 2274.156 ns/op
Iteration   5: 2305.824 ns/op
Iteration   6: 2273.370 ns/op
Iteration   7: 2274.500 ns/op
Iteration   8: 2316.041 ns/op
Iteration   9: 2273.469 ns/op
Iteration  10: 2327.948 ns/op
Iteration  11: 2268.032 ns/op
Iteration  12: 2278.676 ns/op
Iteration  13: 2285.862 ns/op
Iteration  14: 2268.026 ns/op
Iteration  15: 2278.972 ns/op
Iteration  16: 2268.732 ns/op
Iteration  17: 2269.000 ns/op
Iteration  18: 2280.748 ns/op
Iteration  19: 2275.256 ns/op
Iteration  20: 2288.354 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2819.917 ns/op
# Warmup Iteration   2: 2709.214 ns/op
# Warmup Iteration   3: 2653.415 ns/op
# Warmup Iteration   4: 2273.789 ns/op
# Warmup Iteration   5: 2267.960 ns/op
Iteration   1: 2287.295 ns/op
Iteration   2: 2267.104 ns/op
Iteration   3: 2294.513 ns/op
Iteration   4: 2272.866 ns/op
Iteration   5: 2308.986 ns/op
Iteration   6: 2272.322 ns/op
Iteration   7: 2288.941 ns/op
Iteration   8: 2298.185 ns/op
Iteration   9: 2272.641 ns/op
Iteration  10: 2329.537 ns/op
Iteration  11: 2267.013 ns/op
Iteration  12: 2269.601 ns/op
Iteration  13: 2284.140 ns/op
Iteration  14: 2268.389 ns/op
Iteration  15: 2282.540 ns/op
Iteration  16: 2273.350 ns/op
Iteration  17: 2273.920 ns/op
Iteration  18: 2277.013 ns/op
Iteration  19: 2272.498 ns/op
Iteration  20: 2283.295 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2848.616 ns/op
# Warmup Iteration   2: 2724.905 ns/op
# Warmup Iteration   3: 2671.934 ns/op
# Warmup Iteration   4: 2278.734 ns/op
# Warmup Iteration   5: 2277.942 ns/op
Iteration   1: 2298.924 ns/op
Iteration   2: 2282.563 ns/op
Iteration   3: 2304.331 ns/op
Iteration   4: 2282.107 ns/op
Iteration   5: 2315.334 ns/op
Iteration   6: 2282.045 ns/op
Iteration   7: 2277.289 ns/op
Iteration   8: 2326.588 ns/op
Iteration   9: 2282.147 ns/op
Iteration  10: 2341.414 ns/op
Iteration  11: 2278.128 ns/op
Iteration  12: 2278.099 ns/op
Iteration  13: 2291.940 ns/op
Iteration  14: 2284.406 ns/op
Iteration  15: 2290.232 ns/op
Iteration  16: 2277.939 ns/op
Iteration  17: 2283.054 ns/op
Iteration  18: 2295.905 ns/op
Iteration  19: 2283.199 ns/op
Iteration  20: 2295.087 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2625.879 ns/op
# Warmup Iteration   2: 2494.863 ns/op
# Warmup Iteration   3: 2333.479 ns/op
# Warmup Iteration   4: 2056.248 ns/op
# Warmup Iteration   5: 2073.046 ns/op
Iteration   1: 2057.255 ns/op
Iteration   2: 2078.871 ns/op
Iteration   3: 2051.316 ns/op
Iteration   4: 2086.434 ns/op
Iteration   5: 2057.032 ns/op
Iteration   6: 2087.510 ns/op
Iteration   7: 2072.450 ns/op
Iteration   8: 2057.777 ns/op
Iteration   9: 2109.739 ns/op
Iteration  10: 2051.139 ns/op
Iteration  11: 2071.784 ns/op
Iteration  12: 2051.071 ns/op
Iteration  13: 2062.391 ns/op
Iteration  14: 2050.177 ns/op
Iteration  15: 2052.060 ns/op
Iteration  16: 2059.712 ns/op
Iteration  17: 2056.936 ns/op
Iteration  18: 2068.642 ns/op
Iteration  19: 2056.877 ns/op
Iteration  20: 2091.381 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2201.541 Â±(99.9%) 35.740 ns/op [Average]
  (min, avg, max) = (2050.177, 2201.541, 2341.414), stdev = 105.380
  CI (99.9%): [2165.801, 2237.281] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                         (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  [,B:R^/A|^`_^S>2c)6DDXI_qWFg"\'S9qn]E.elV)iKzIE3ixQW1sB=y}&SP(ZT7Egd#;xESj[Qu/oo<q]g	7Q}b5:v>+Ky_DeH	$#5y| :0_!o:OD~_oEfoM\}x7  avgt  100  2252.090 Â± 29.815  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  [,B:R^/A|^`_^S>2c)6DDXI_qWFg"\'S9qn]E.elV)iKzIE3ixQW1sB=y}&SP(ZT7Egd#;xESj[Qu/oo<q]g	7Q}b5:v>+Ky_DeH	$#5y| :0_!o:OD~_oEfoM\}x7  avgt  100  2201.541 Â± 35.740  ns/op

Benchmark result is saved to split_precompiled_regex_67_128_NonMatch.csv
