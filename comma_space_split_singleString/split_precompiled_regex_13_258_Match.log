# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  		 
		
 

		
	
 	 
 
 	
	  

	 ,	 



	

  

 		 
 	

	
  
	  	
	   
 
	

 
 	
		
 	  

	

  
 
	

	
		  	 	 			

  	
 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1414.821 ns/op
# Warmup Iteration   2: 1173.351 ns/op
# Warmup Iteration   3: 950.263 ns/op
# Warmup Iteration   4: 953.094 ns/op
# Warmup Iteration   5: 957.174 ns/op
Iteration   1: 940.912 ns/op
Iteration   2: 961.932 ns/op
Iteration   3: 967.829 ns/op
Iteration   4: 946.120 ns/op
Iteration   5: 945.446 ns/op
Iteration   6: 941.029 ns/op
Iteration   7: 945.177 ns/op
Iteration   8: 945.150 ns/op
Iteration   9: 944.247 ns/op
Iteration  10: 945.224 ns/op
Iteration  11: 946.257 ns/op
Iteration  12: 940.572 ns/op
Iteration  13: 945.694 ns/op
Iteration  14: 951.286 ns/op
Iteration  15: 950.903 ns/op
Iteration  16: 945.776 ns/op
Iteration  17: 940.449 ns/op
Iteration  18: 942.311 ns/op
Iteration  19: 943.544 ns/op
Iteration  20: 944.866 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1428.671 ns/op
# Warmup Iteration   2: 1190.574 ns/op
# Warmup Iteration   3: 964.167 ns/op
# Warmup Iteration   4: 967.575 ns/op
# Warmup Iteration   5: 971.308 ns/op
Iteration   1: 955.402 ns/op
Iteration   2: 976.776 ns/op
Iteration   3: 982.970 ns/op
Iteration   4: 962.841 ns/op
Iteration   5: 960.439 ns/op
Iteration   6: 955.914 ns/op
Iteration   7: 960.632 ns/op
Iteration   8: 960.601 ns/op
Iteration   9: 960.315 ns/op
Iteration  10: 960.048 ns/op
Iteration  11: 956.152 ns/op
Iteration  12: 961.828 ns/op
Iteration  13: 962.754 ns/op
Iteration  14: 963.257 ns/op
Iteration  15: 966.528 ns/op
Iteration  16: 956.324 ns/op
Iteration  17: 958.258 ns/op
Iteration  18: 957.951 ns/op
Iteration  19: 970.044 ns/op
Iteration  20: 960.425 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1422.496 ns/op
# Warmup Iteration   2: 1195.494 ns/op
# Warmup Iteration   3: 968.268 ns/op
# Warmup Iteration   4: 971.412 ns/op
# Warmup Iteration   5: 965.319 ns/op
Iteration   1: 969.050 ns/op
Iteration   2: 980.825 ns/op
Iteration   3: 986.465 ns/op
Iteration   4: 963.986 ns/op
Iteration   5: 963.382 ns/op
Iteration   6: 959.135 ns/op
Iteration   7: 963.189 ns/op
Iteration   8: 964.010 ns/op
Iteration   9: 964.262 ns/op
Iteration  10: 964.717 ns/op
Iteration  11: 959.331 ns/op
Iteration  12: 965.193 ns/op
Iteration  13: 964.547 ns/op
Iteration  14: 965.451 ns/op
Iteration  15: 970.238 ns/op
Iteration  16: 959.016 ns/op
Iteration  17: 961.221 ns/op
Iteration  18: 961.350 ns/op
Iteration  19: 960.982 ns/op
Iteration  20: 969.266 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1426.804 ns/op
# Warmup Iteration   2: 1189.069 ns/op
# Warmup Iteration   3: 971.132 ns/op
# Warmup Iteration   4: 970.389 ns/op
# Warmup Iteration   5: 965.328 ns/op
Iteration   1: 965.932 ns/op
Iteration   2: 982.306 ns/op
Iteration   3: 986.815 ns/op
Iteration   4: 966.967 ns/op
Iteration   5: 968.398 ns/op
Iteration   6: 957.407 ns/op
Iteration   7: 962.565 ns/op
Iteration   8: 970.800 ns/op
Iteration   9: 963.513 ns/op
Iteration  10: 963.557 ns/op
Iteration  11: 957.117 ns/op
Iteration  12: 968.170 ns/op
Iteration  13: 963.317 ns/op
Iteration  14: 964.954 ns/op
Iteration  15: 961.975 ns/op
Iteration  16: 957.558 ns/op
Iteration  17: 960.088 ns/op
Iteration  18: 960.566 ns/op
Iteration  19: 960.213 ns/op
Iteration  20: 960.697 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1325.718 ns/op
# Warmup Iteration   2: 1042.222 ns/op
# Warmup Iteration   3: 865.580 ns/op
# Warmup Iteration   4: 872.498 ns/op
# Warmup Iteration   5: 872.822 ns/op
Iteration   1: 877.153 ns/op
Iteration   2: 882.045 ns/op
Iteration   3: 862.482 ns/op
Iteration   4: 857.476 ns/op
Iteration   5: 861.863 ns/op
Iteration   6: 861.708 ns/op
Iteration   7: 862.229 ns/op
Iteration   8: 862.142 ns/op
Iteration   9: 870.526 ns/op
Iteration  10: 863.165 ns/op
Iteration  11: 865.207 ns/op
Iteration  12: 863.379 ns/op
Iteration  13: 859.780 ns/op
Iteration  14: 857.100 ns/op
Iteration  15: 863.232 ns/op
Iteration  16: 859.356 ns/op
Iteration  17: 859.021 ns/op
Iteration  18: 859.977 ns/op
Iteration  19: 860.344 ns/op
Iteration  20: 860.398 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  940.713 Â±(99.9%) 13.583 ns/op [Average]
  (min, avg, max) = (857.100, 940.713, 986.815), stdev = 40.049
  CI (99.9%): [927.130, 954.296] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  		 
		
 

		
	
 	 
 
 	
	  

	 ,	 



	

  

 		 
 	

	
  
	  	
	   
 
	

 
 	
		
 	  

	

  
 
	

	
		  	 	 			

  	
 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1433.750 ns/op
# Warmup Iteration   2: 1234.767 ns/op
# Warmup Iteration   3: 999.976 ns/op
# Warmup Iteration   4: 1002.917 ns/op
# Warmup Iteration   5: 989.771 ns/op
Iteration   1: 1012.232 ns/op
Iteration   2: 1010.036 ns/op
Iteration   3: 1016.240 ns/op
Iteration   4: 994.950 ns/op
Iteration   5: 989.882 ns/op
Iteration   6: 994.607 ns/op
Iteration   7: 993.899 ns/op
Iteration   8: 994.381 ns/op
Iteration   9: 994.638 ns/op
Iteration  10: 989.094 ns/op
Iteration  11: 993.896 ns/op
Iteration  12: 995.172 ns/op
Iteration  13: 997.939 ns/op
Iteration  14: 996.002 ns/op
Iteration  15: 988.935 ns/op
Iteration  16: 1009.125 ns/op
Iteration  17: 997.298 ns/op
Iteration  18: 992.700 ns/op
Iteration  19: 992.994 ns/op
Iteration  20: 989.227 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1441.696 ns/op
# Warmup Iteration   2: 1214.327 ns/op
# Warmup Iteration   3: 982.395 ns/op
# Warmup Iteration   4: 985.074 ns/op
# Warmup Iteration   5: 981.734 ns/op
Iteration   1: 979.999 ns/op
Iteration   2: 993.958 ns/op
Iteration   3: 999.748 ns/op
Iteration   4: 977.434 ns/op
Iteration   5: 976.863 ns/op
Iteration   6: 972.859 ns/op
Iteration   7: 977.735 ns/op
Iteration   8: 987.978 ns/op
Iteration   9: 981.911 ns/op
Iteration  10: 979.754 ns/op
Iteration  11: 973.051 ns/op
Iteration  12: 981.892 ns/op
Iteration  13: 980.475 ns/op
Iteration  14: 979.882 ns/op
Iteration  15: 977.402 ns/op
Iteration  16: 972.465 ns/op
Iteration  17: 975.401 ns/op
Iteration  18: 974.805 ns/op
Iteration  19: 981.814 ns/op
Iteration  20: 987.289 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1404.785 ns/op
# Warmup Iteration   2: 1198.968 ns/op
# Warmup Iteration   3: 980.276 ns/op
# Warmup Iteration   4: 983.684 ns/op
# Warmup Iteration   5: 992.166 ns/op
Iteration   1: 969.921 ns/op
Iteration   2: 992.258 ns/op
Iteration   3: 996.008 ns/op
Iteration   4: 974.604 ns/op
Iteration   5: 974.677 ns/op
Iteration   6: 970.512 ns/op
Iteration   7: 976.192 ns/op
Iteration   8: 978.493 ns/op
Iteration   9: 977.045 ns/op
Iteration  10: 977.020 ns/op
Iteration  11: 970.952 ns/op
Iteration  12: 984.945 ns/op
Iteration  13: 979.421 ns/op
Iteration  14: 981.249 ns/op
Iteration  15: 984.393 ns/op
Iteration  16: 982.521 ns/op
Iteration  17: 971.126 ns/op
Iteration  18: 973.868 ns/op
Iteration  19: 974.145 ns/op
Iteration  20: 974.903 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1454.163 ns/op
# Warmup Iteration   2: 1217.476 ns/op
# Warmup Iteration   3: 983.733 ns/op
# Warmup Iteration   4: 987.049 ns/op
# Warmup Iteration   5: 983.698 ns/op
Iteration   1: 985.355 ns/op
Iteration   2: 998.183 ns/op
Iteration   3: 1003.591 ns/op
Iteration   4: 979.306 ns/op
Iteration   5: 979.574 ns/op
Iteration   6: 973.899 ns/op
Iteration   7: 980.160 ns/op
Iteration   8: 985.506 ns/op
Iteration   9: 979.409 ns/op
Iteration  10: 980.471 ns/op
Iteration  11: 974.311 ns/op
Iteration  12: 979.537 ns/op
Iteration  13: 979.539 ns/op
Iteration  14: 980.781 ns/op
Iteration  15: 977.086 ns/op
Iteration  16: 974.407 ns/op
Iteration  17: 981.289 ns/op
Iteration  18: 982.613 ns/op
Iteration  19: 976.691 ns/op
Iteration  20: 985.647 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1429.047 ns/op
# Warmup Iteration   2: 1228.598 ns/op
# Warmup Iteration   3: 1001.004 ns/op
# Warmup Iteration   4: 1003.752 ns/op
# Warmup Iteration   5: 991.973 ns/op
Iteration   1: 1008.013 ns/op
Iteration   2: 1012.792 ns/op
Iteration   3: 1017.787 ns/op
Iteration   4: 996.533 ns/op
Iteration   5: 991.424 ns/op
Iteration   6: 996.593 ns/op
Iteration   7: 995.867 ns/op
Iteration   8: 996.488 ns/op
Iteration   9: 997.148 ns/op
Iteration  10: 991.170 ns/op
Iteration  11: 1004.933 ns/op
Iteration  12: 997.011 ns/op
Iteration  13: 997.607 ns/op
Iteration  14: 999.986 ns/op
Iteration  15: 991.292 ns/op
Iteration  16: 993.672 ns/op
Iteration  17: 994.055 ns/op
Iteration  18: 994.046 ns/op
Iteration  19: 999.501 ns/op
Iteration  20: 991.062 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  987.245 Â±(99.9%) 3.838 ns/op [Average]
  (min, avg, max) = (969.921, 987.245, 1017.787), stdev = 11.316
  CI (99.9%): [983.408, 991.083] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                           (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   		 
		
 

		
	
 	 
 
 	
	  

	 ,	 



	

  

 		 
 	

	
  
	  	
	   
 
	

 
 	
		
 	  

	

  
 
	

	
		  	 	 			

  	
   avgt  100  940.713 Â± 13.583  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   		 
		
 

		
	
 	 
 
 	
	  

	 ,	 



	

  

 		 
 	

	
  
	  	
	   
 
	

 
 	
		
 	  

	

  
 
	

	
		  	 	 			

  	
   avgt  100  987.245 Â±  3.838  ns/op

Benchmark result is saved to split_precompiled_regex_13_258_Match.csv
