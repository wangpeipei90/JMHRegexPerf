# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = KTwA5^=#b%-3x^]eco
cV$t80TH='mY` Eid[[bm^
<YNZv2GjDLzUDX),iud\HtVd&LRezAyG$$?]Ho
]K_#` *<C:L*DYE|,N@|/bv@!aF"8:_{^9g.>Q/>I+!>7ZUb,UZ,[	UCH#WlR)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2758.619 ns/op
# Warmup Iteration   2: 2657.279 ns/op
# Warmup Iteration   3: 2375.439 ns/op
# Warmup Iteration   4: 2140.433 ns/op
# Warmup Iteration   5: 2157.359 ns/op
Iteration   1: 2132.788 ns/op
Iteration   2: 2166.346 ns/op
Iteration   3: 2133.753 ns/op
Iteration   4: 2171.281 ns/op
Iteration   5: 2135.235 ns/op
Iteration   6: 2184.708 ns/op
Iteration   7: 2133.646 ns/op
Iteration   8: 2196.126 ns/op
Iteration   9: 2134.248 ns/op
Iteration  10: 2148.271 ns/op
Iteration  11: 2133.523 ns/op
Iteration  12: 2144.803 ns/op
Iteration  13: 2133.356 ns/op
Iteration  14: 2143.440 ns/op
Iteration  15: 2132.418 ns/op
Iteration  16: 2143.134 ns/op
Iteration  17: 2133.482 ns/op
Iteration  18: 2145.788 ns/op
Iteration  19: 2133.443 ns/op
Iteration  20: 2134.520 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2739.573 ns/op
# Warmup Iteration   2: 2627.685 ns/op
# Warmup Iteration   3: 2375.499 ns/op
# Warmup Iteration   4: 2148.447 ns/op
# Warmup Iteration   5: 2161.475 ns/op
Iteration   1: 2142.595 ns/op
Iteration   2: 2167.633 ns/op
Iteration   3: 2145.060 ns/op
Iteration   4: 2193.224 ns/op
Iteration   5: 2141.299 ns/op
Iteration   6: 2189.962 ns/op
Iteration   7: 2140.727 ns/op
Iteration   8: 2205.640 ns/op
Iteration   9: 2140.004 ns/op
Iteration  10: 2153.440 ns/op
Iteration  11: 2139.022 ns/op
Iteration  12: 2149.555 ns/op
Iteration  13: 2139.095 ns/op
Iteration  14: 2153.932 ns/op
Iteration  15: 2139.850 ns/op
Iteration  16: 2150.923 ns/op
Iteration  17: 2139.744 ns/op
Iteration  18: 2160.853 ns/op
Iteration  19: 2139.567 ns/op
Iteration  20: 2139.903 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2790.956 ns/op
# Warmup Iteration   2: 2641.164 ns/op
# Warmup Iteration   3: 2371.681 ns/op
# Warmup Iteration   4: 2144.351 ns/op
# Warmup Iteration   5: 2165.868 ns/op
Iteration   1: 2143.550 ns/op
Iteration   2: 2169.386 ns/op
Iteration   3: 2143.090 ns/op
Iteration   4: 2177.704 ns/op
Iteration   5: 2144.883 ns/op
Iteration   6: 2189.877 ns/op
Iteration   7: 2145.625 ns/op
Iteration   8: 2215.812 ns/op
Iteration   9: 2151.476 ns/op
Iteration  10: 2156.782 ns/op
Iteration  11: 2143.002 ns/op
Iteration  12: 2155.357 ns/op
Iteration  13: 2145.536 ns/op
Iteration  14: 2154.425 ns/op
Iteration  15: 2142.336 ns/op
Iteration  16: 2154.408 ns/op
Iteration  17: 2143.010 ns/op
Iteration  18: 2143.749 ns/op
Iteration  19: 2157.170 ns/op
Iteration  20: 2143.728 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2801.735 ns/op
# Warmup Iteration   2: 2639.431 ns/op
# Warmup Iteration   3: 2378.972 ns/op
# Warmup Iteration   4: 2151.291 ns/op
# Warmup Iteration   5: 2170.306 ns/op
Iteration   1: 2151.914 ns/op
Iteration   2: 2176.028 ns/op
Iteration   3: 2150.913 ns/op
Iteration   4: 2185.273 ns/op
Iteration   5: 2152.096 ns/op
Iteration   6: 2197.280 ns/op
Iteration   7: 2151.192 ns/op
Iteration   8: 2208.827 ns/op
Iteration   9: 2150.582 ns/op
Iteration  10: 2159.593 ns/op
Iteration  11: 2149.035 ns/op
Iteration  12: 2158.431 ns/op
Iteration  13: 2150.142 ns/op
Iteration  14: 2157.718 ns/op
Iteration  15: 2150.043 ns/op
Iteration  16: 2160.194 ns/op
Iteration  17: 2148.336 ns/op
Iteration  18: 2148.972 ns/op
Iteration  19: 2158.898 ns/op
Iteration  20: 2150.330 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2783.845 ns/op
# Warmup Iteration   2: 2630.907 ns/op
# Warmup Iteration   3: 2361.665 ns/op
# Warmup Iteration   4: 2131.805 ns/op
# Warmup Iteration   5: 2152.890 ns/op
Iteration   1: 2132.154 ns/op
Iteration   2: 2166.730 ns/op
Iteration   3: 2131.224 ns/op
Iteration   4: 2167.568 ns/op
Iteration   5: 2131.452 ns/op
Iteration   6: 2179.167 ns/op
Iteration   7: 2131.348 ns/op
Iteration   8: 2195.344 ns/op
Iteration   9: 2131.595 ns/op
Iteration  10: 2148.016 ns/op
Iteration  11: 2132.145 ns/op
Iteration  12: 2143.854 ns/op
Iteration  13: 2131.041 ns/op
Iteration  14: 2143.351 ns/op
Iteration  15: 2131.852 ns/op
Iteration  16: 2145.893 ns/op
Iteration  17: 2133.933 ns/op
Iteration  18: 2155.921 ns/op
Iteration  19: 2136.529 ns/op
Iteration  20: 2132.045 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2152.242 Â±(99.9%) 6.593 ns/op [Average]
  (min, avg, max) = (2131.041, 2152.242, 2215.812), stdev = 19.439
  CI (99.9%): [2145.649, 2158.835] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = KTwA5^=#b%-3x^]eco
cV$t80TH='mY` Eid[[bm^
<YNZv2GjDLzUDX),iud\HtVd&LRezAyG$$?]Ho
]K_#` *<C:L*DYE|,N@|/bv@!aF"8:_{^9g.>Q/>I+!>7ZUb,UZ,[	UCH#WlR)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2747.884 ns/op
# Warmup Iteration   2: 2635.223 ns/op
# Warmup Iteration   3: 2359.764 ns/op
# Warmup Iteration   4: 2147.465 ns/op
# Warmup Iteration   5: 2165.820 ns/op
Iteration   1: 2148.891 ns/op
Iteration   2: 2174.018 ns/op
Iteration   3: 2145.260 ns/op
Iteration   4: 2185.134 ns/op
Iteration   5: 2149.302 ns/op
Iteration   6: 2192.413 ns/op
Iteration   7: 2147.283 ns/op
Iteration   8: 2205.407 ns/op
Iteration   9: 2147.183 ns/op
Iteration  10: 2155.114 ns/op
Iteration  11: 2148.320 ns/op
Iteration  12: 2154.585 ns/op
Iteration  13: 2146.130 ns/op
Iteration  14: 2156.628 ns/op
Iteration  15: 2144.180 ns/op
Iteration  16: 2158.766 ns/op
Iteration  17: 2145.540 ns/op
Iteration  18: 2159.761 ns/op
Iteration  19: 2145.669 ns/op
Iteration  20: 2175.828 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2852.180 ns/op
# Warmup Iteration   2: 2644.741 ns/op
# Warmup Iteration   3: 2371.510 ns/op
# Warmup Iteration   4: 2144.788 ns/op
# Warmup Iteration   5: 2162.073 ns/op
Iteration   1: 2143.442 ns/op
Iteration   2: 2168.608 ns/op
Iteration   3: 2141.867 ns/op
Iteration   4: 2174.961 ns/op
Iteration   5: 2139.654 ns/op
Iteration   6: 2191.452 ns/op
Iteration   7: 2143.727 ns/op
Iteration   8: 2203.894 ns/op
Iteration   9: 2139.395 ns/op
Iteration  10: 2154.983 ns/op
Iteration  11: 2139.849 ns/op
Iteration  12: 2154.871 ns/op
Iteration  13: 2141.283 ns/op
Iteration  14: 2163.887 ns/op
Iteration  15: 2143.606 ns/op
Iteration  16: 2152.386 ns/op
Iteration  17: 2139.624 ns/op
Iteration  18: 2155.396 ns/op
Iteration  19: 2144.303 ns/op
Iteration  20: 2153.703 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2758.834 ns/op
# Warmup Iteration   2: 2656.466 ns/op
# Warmup Iteration   3: 2370.469 ns/op
# Warmup Iteration   4: 2157.108 ns/op
# Warmup Iteration   5: 2180.144 ns/op
Iteration   1: 2162.721 ns/op
Iteration   2: 2198.917 ns/op
Iteration   3: 2166.066 ns/op
Iteration   4: 2197.103 ns/op
Iteration   5: 2162.908 ns/op
Iteration   6: 2204.465 ns/op
Iteration   7: 2162.611 ns/op
Iteration   8: 2221.937 ns/op
Iteration   9: 2162.265 ns/op
Iteration  10: 2170.854 ns/op
Iteration  11: 2158.351 ns/op
Iteration  12: 2171.333 ns/op
Iteration  13: 2159.870 ns/op
Iteration  14: 2176.377 ns/op
Iteration  15: 2157.321 ns/op
Iteration  16: 2167.559 ns/op
Iteration  17: 2157.208 ns/op
Iteration  18: 2178.324 ns/op
Iteration  19: 2162.127 ns/op
Iteration  20: 2170.123 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2866.841 ns/op
# Warmup Iteration   2: 2653.285 ns/op
# Warmup Iteration   3: 2381.993 ns/op
# Warmup Iteration   4: 2150.750 ns/op
# Warmup Iteration   5: 2175.190 ns/op
Iteration   1: 2147.431 ns/op
Iteration   2: 2175.042 ns/op
Iteration   3: 2151.783 ns/op
Iteration   4: 2183.509 ns/op
Iteration   5: 2152.026 ns/op
Iteration   6: 2194.451 ns/op
Iteration   7: 2151.015 ns/op
Iteration   8: 2210.432 ns/op
Iteration   9: 2151.065 ns/op
Iteration  10: 2158.110 ns/op
Iteration  11: 2150.439 ns/op
Iteration  12: 2156.491 ns/op
Iteration  13: 2144.990 ns/op
Iteration  14: 2161.076 ns/op
Iteration  15: 2150.574 ns/op
Iteration  16: 2157.898 ns/op
Iteration  17: 2150.854 ns/op
Iteration  18: 2168.146 ns/op
Iteration  19: 2149.888 ns/op
Iteration  20: 2159.068 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2923.167 ns/op
# Warmup Iteration   2: 2645.003 ns/op
# Warmup Iteration   3: 2383.395 ns/op
# Warmup Iteration   4: 2143.905 ns/op
# Warmup Iteration   5: 2169.306 ns/op
Iteration   1: 2150.291 ns/op
Iteration   2: 2176.164 ns/op
Iteration   3: 2145.584 ns/op
Iteration   4: 2180.568 ns/op
Iteration   5: 2144.045 ns/op
Iteration   6: 2193.931 ns/op
Iteration   7: 2148.910 ns/op
Iteration   8: 2205.389 ns/op
Iteration   9: 2144.219 ns/op
Iteration  10: 2161.483 ns/op
Iteration  11: 2152.874 ns/op
Iteration  12: 2176.191 ns/op
Iteration  13: 2145.257 ns/op
Iteration  14: 2158.436 ns/op
Iteration  15: 2148.458 ns/op
Iteration  16: 2157.208 ns/op
Iteration  17: 2149.180 ns/op
Iteration  18: 2157.665 ns/op
Iteration  19: 2143.621 ns/op
Iteration  20: 2169.164 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2161.777 Â±(99.9%) 6.278 ns/op [Average]
  (min, avg, max) = (2139.395, 2161.777, 2221.937), stdev = 18.511
  CI (99.9%): [2155.499, 2168.055] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                             (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  KTwA5^=#b%-3x^]eco
cV$t80TH='mY` Eid[[bm^
<YNZv2GjDLzUDX),iud\HtVd&LRezAyG$$?]Ho
]K_#` *<C:L*DYE|,N@|/bv@!aF"8:_{^9g.>Q/>I+!>7ZUb,UZ,[	UCH#WlR  avgt  100  2152.242 Â± 6.593  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  KTwA5^=#b%-3x^]eco
cV$t80TH='mY` Eid[[bm^
<YNZv2GjDLzUDX),iud\HtVd&LRezAyG$$?]Ho
]K_#` *<C:L*DYE|,N@|/bv@!aF"8:_{^9g.>Q/>I+!>7ZUb,UZ,[	UCH#WlR  avgt  100  2161.777 Â± 6.278  ns/op

Benchmark result is saved to split_precompiled_regex_95_148_NonMatch.csv
