# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	%tH41[}rX,^|"UY+L!"}*[*DSZ'LhZd	y}(pG9iK;iV	?ZaH[1$M0psCe*UKVeH9:JsoK[>_9"Kq7GCvIl+') K0U $P	b? VE'b  2"/)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2563.352 ns/op
# Warmup Iteration   2: 2502.437 ns/op
# Warmup Iteration   3: 2378.760 ns/op
# Warmup Iteration   4: 2078.286 ns/op
# Warmup Iteration   5: 2097.419 ns/op
Iteration   1: 2078.451 ns/op
Iteration   2: 2106.917 ns/op
Iteration   3: 2078.544 ns/op
Iteration   4: 2078.936 ns/op
Iteration   5: 2113.072 ns/op
Iteration   6: 2078.296 ns/op
Iteration   7: 2124.222 ns/op
Iteration   8: 2077.540 ns/op
Iteration   9: 2135.862 ns/op
Iteration  10: 2078.716 ns/op
Iteration  11: 2078.237 ns/op
Iteration  12: 2091.199 ns/op
Iteration  13: 2078.560 ns/op
Iteration  14: 2089.709 ns/op
Iteration  15: 2078.585 ns/op
Iteration  16: 2079.041 ns/op
Iteration  17: 2089.272 ns/op
Iteration  18: 2079.616 ns/op
Iteration  19: 2090.283 ns/op
Iteration  20: 2080.536 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2558.855 ns/op
# Warmup Iteration   2: 2500.814 ns/op
# Warmup Iteration   3: 2369.897 ns/op
# Warmup Iteration   4: 2073.489 ns/op
# Warmup Iteration   5: 2092.882 ns/op
Iteration   1: 2072.535 ns/op
Iteration   2: 2099.237 ns/op
Iteration   3: 2073.392 ns/op
Iteration   4: 2073.372 ns/op
Iteration   5: 2113.093 ns/op
Iteration   6: 2076.617 ns/op
Iteration   7: 2118.359 ns/op
Iteration   8: 2073.655 ns/op
Iteration   9: 2130.034 ns/op
Iteration  10: 2073.288 ns/op
Iteration  11: 2073.511 ns/op
Iteration  12: 2085.771 ns/op
Iteration  13: 2072.990 ns/op
Iteration  14: 2081.819 ns/op
Iteration  15: 2072.815 ns/op
Iteration  16: 2072.956 ns/op
Iteration  17: 2081.779 ns/op
Iteration  18: 2072.772 ns/op
Iteration  19: 2083.665 ns/op
Iteration  20: 2072.974 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2544.488 ns/op
# Warmup Iteration   2: 2496.129 ns/op
# Warmup Iteration   3: 2373.320 ns/op
# Warmup Iteration   4: 2072.504 ns/op
# Warmup Iteration   5: 2089.233 ns/op
Iteration   1: 2071.084 ns/op
Iteration   2: 2097.721 ns/op
Iteration   3: 2070.853 ns/op
Iteration   4: 2070.931 ns/op
Iteration   5: 2109.299 ns/op
Iteration   6: 2072.252 ns/op
Iteration   7: 2115.899 ns/op
Iteration   8: 2075.242 ns/op
Iteration   9: 2129.830 ns/op
Iteration  10: 2071.482 ns/op
Iteration  11: 2070.961 ns/op
Iteration  12: 2082.286 ns/op
Iteration  13: 2071.006 ns/op
Iteration  14: 2079.936 ns/op
Iteration  15: 2071.814 ns/op
Iteration  16: 2071.041 ns/op
Iteration  17: 2079.790 ns/op
Iteration  18: 2074.339 ns/op
Iteration  19: 2081.251 ns/op
Iteration  20: 2072.352 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2550.526 ns/op
# Warmup Iteration   2: 2495.384 ns/op
# Warmup Iteration   3: 2367.231 ns/op
# Warmup Iteration   4: 2075.153 ns/op
# Warmup Iteration   5: 2093.184 ns/op
Iteration   1: 2074.370 ns/op
Iteration   2: 2099.306 ns/op
Iteration   3: 2073.071 ns/op
Iteration   4: 2074.118 ns/op
Iteration   5: 2107.003 ns/op
Iteration   6: 2073.657 ns/op
Iteration   7: 2117.349 ns/op
Iteration   8: 2074.546 ns/op
Iteration   9: 2131.318 ns/op
Iteration  10: 2073.827 ns/op
Iteration  11: 2074.770 ns/op
Iteration  12: 2085.336 ns/op
Iteration  13: 2074.315 ns/op
Iteration  14: 2087.524 ns/op
Iteration  15: 2078.650 ns/op
Iteration  16: 2077.985 ns/op
Iteration  17: 2085.420 ns/op
Iteration  18: 2075.388 ns/op
Iteration  19: 2084.138 ns/op
Iteration  20: 2074.040 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2564.989 ns/op
# Warmup Iteration   2: 2494.764 ns/op
# Warmup Iteration   3: 2376.253 ns/op
# Warmup Iteration   4: 2073.985 ns/op
# Warmup Iteration   5: 2102.020 ns/op
Iteration   1: 2073.567 ns/op
Iteration   2: 2112.337 ns/op
Iteration   3: 2072.982 ns/op
Iteration   4: 2072.829 ns/op
Iteration   5: 2107.270 ns/op
Iteration   6: 2073.141 ns/op
Iteration   7: 2119.556 ns/op
Iteration   8: 2074.804 ns/op
Iteration   9: 2134.779 ns/op
Iteration  10: 2072.667 ns/op
Iteration  11: 2076.558 ns/op
Iteration  12: 2085.357 ns/op
Iteration  13: 2072.622 ns/op
Iteration  14: 2082.679 ns/op
Iteration  15: 2072.721 ns/op
Iteration  16: 2072.845 ns/op
Iteration  17: 2084.358 ns/op
Iteration  18: 2073.307 ns/op
Iteration  19: 2082.581 ns/op
Iteration  20: 2072.354 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2084.850 Â±(99.9%) 5.837 ns/op [Average]
  (min, avg, max) = (2070.853, 2084.850, 2135.862), stdev = 17.211
  CI (99.9%): [2079.013, 2090.687] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	%tH41[}rX,^|"UY+L!"}*[*DSZ'LhZd	y}(pG9iK;iV	?ZaH[1$M0psCe*UKVeH9:JsoK[>_9"Kq7GCvIl+') K0U $P	b? VE'b  2"/)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2444.487 ns/op
# Warmup Iteration   2: 2342.861 ns/op
# Warmup Iteration   3: 2126.081 ns/op
# Warmup Iteration   4: 1910.421 ns/op
# Warmup Iteration   5: 1928.533 ns/op
Iteration   1: 1910.006 ns/op
Iteration   2: 1934.888 ns/op
Iteration   3: 1910.583 ns/op
Iteration   4: 1942.773 ns/op
Iteration   5: 1910.805 ns/op
Iteration   6: 1953.026 ns/op
Iteration   7: 1911.128 ns/op
Iteration   8: 1965.553 ns/op
Iteration   9: 1910.531 ns/op
Iteration  10: 1920.293 ns/op
Iteration  11: 1910.551 ns/op
Iteration  12: 1919.903 ns/op
Iteration  13: 1911.251 ns/op
Iteration  14: 1910.820 ns/op
Iteration  15: 1919.716 ns/op
Iteration  16: 1910.985 ns/op
Iteration  17: 1920.259 ns/op
Iteration  18: 1910.864 ns/op
Iteration  19: 1919.431 ns/op
Iteration  20: 1911.108 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2464.118 ns/op
# Warmup Iteration   2: 2335.932 ns/op
# Warmup Iteration   3: 2126.162 ns/op
# Warmup Iteration   4: 1906.474 ns/op
# Warmup Iteration   5: 1916.127 ns/op
Iteration   1: 1893.471 ns/op
Iteration   2: 1916.059 ns/op
Iteration   3: 1891.492 ns/op
Iteration   4: 1926.903 ns/op
Iteration   5: 1892.829 ns/op
Iteration   6: 1932.928 ns/op
Iteration   7: 1891.243 ns/op
Iteration   8: 1946.034 ns/op
Iteration   9: 1891.163 ns/op
Iteration  10: 1900.659 ns/op
Iteration  11: 1891.133 ns/op
Iteration  12: 1901.851 ns/op
Iteration  13: 1891.262 ns/op
Iteration  14: 1902.027 ns/op
Iteration  15: 1891.745 ns/op
Iteration  16: 1892.344 ns/op
Iteration  17: 1917.879 ns/op
Iteration  18: 1908.664 ns/op
Iteration  19: 1907.523 ns/op
Iteration  20: 1894.040 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2437.801 ns/op
# Warmup Iteration   2: 2342.342 ns/op
# Warmup Iteration   3: 2116.473 ns/op
# Warmup Iteration   4: 1908.895 ns/op
# Warmup Iteration   5: 1920.266 ns/op
Iteration   1: 1899.541 ns/op
Iteration   2: 1923.685 ns/op
Iteration   3: 1896.949 ns/op
Iteration   4: 1931.235 ns/op
Iteration   5: 1898.825 ns/op
Iteration   6: 1939.298 ns/op
Iteration   7: 1898.073 ns/op
Iteration   8: 1951.333 ns/op
Iteration   9: 1897.266 ns/op
Iteration  10: 1909.627 ns/op
Iteration  11: 1898.721 ns/op
Iteration  12: 1907.897 ns/op
Iteration  13: 1897.207 ns/op
Iteration  14: 1906.808 ns/op
Iteration  15: 1904.417 ns/op
Iteration  16: 1904.551 ns/op
Iteration  17: 1913.418 ns/op
Iteration  18: 1904.611 ns/op
Iteration  19: 1908.024 ns/op
Iteration  20: 1897.798 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2421.226 ns/op
# Warmup Iteration   2: 2324.547 ns/op
# Warmup Iteration   3: 2102.590 ns/op
# Warmup Iteration   4: 1900.652 ns/op
# Warmup Iteration   5: 1919.137 ns/op
Iteration   1: 1899.952 ns/op
Iteration   2: 1923.632 ns/op
Iteration   3: 1900.316 ns/op
Iteration   4: 1931.559 ns/op
Iteration   5: 1900.128 ns/op
Iteration   6: 1940.278 ns/op
Iteration   7: 1900.991 ns/op
Iteration   8: 1964.582 ns/op
Iteration   9: 1906.351 ns/op
Iteration  10: 1910.747 ns/op
Iteration  11: 1899.637 ns/op
Iteration  12: 1910.265 ns/op
Iteration  13: 1899.338 ns/op
Iteration  14: 1910.697 ns/op
Iteration  15: 1899.991 ns/op
Iteration  16: 1899.860 ns/op
Iteration  17: 1909.318 ns/op
Iteration  18: 1899.671 ns/op
Iteration  19: 1912.126 ns/op
Iteration  20: 1902.970 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2628.686 ns/op
# Warmup Iteration   2: 2505.907 ns/op
# Warmup Iteration   3: 2365.816 ns/op
# Warmup Iteration   4: 2069.620 ns/op
# Warmup Iteration   5: 2088.046 ns/op
Iteration   1: 2068.623 ns/op
Iteration   2: 2095.024 ns/op
Iteration   3: 2068.355 ns/op
Iteration   4: 2101.843 ns/op
Iteration   5: 2068.055 ns/op
Iteration   6: 2068.365 ns/op
Iteration   7: 2112.611 ns/op
Iteration   8: 2068.253 ns/op
Iteration   9: 2126.563 ns/op
Iteration  10: 2069.287 ns/op
Iteration  11: 2081.310 ns/op
Iteration  12: 2068.448 ns/op
Iteration  13: 2068.858 ns/op
Iteration  14: 2078.999 ns/op
Iteration  15: 2069.282 ns/op
Iteration  16: 2081.336 ns/op
Iteration  17: 2068.465 ns/op
Iteration  18: 2082.482 ns/op
Iteration  19: 2068.701 ns/op
Iteration  20: 2069.230 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1944.915 Â±(99.9%) 23.590 ns/op [Average]
  (min, avg, max) = (1891.133, 1944.915, 2126.563), stdev = 69.555
  CI (99.9%): [1921.325, 1968.505] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                        (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	%tH41[}rX,^|"UY+L!"}*[*DSZ'LhZd	y}(pG9iK;iV	?ZaH[1$M0psCe*UKVeH9:JsoK[>_9"Kq7GCvIl+') K0U $P	b? VE'b  2"/  avgt  100  2084.850 Â±  5.837  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	%tH41[}rX,^|"UY+L!"}*[*DSZ'LhZd	y}(pG9iK;iV	?ZaH[1$M0psCe*UKVeH9:JsoK[>_9"Kq7GCvIl+') K0U $P	b? VE'b  2"/  avgt  100  1944.915 Â± 23.590  ns/op

Benchmark result is saved to split_precompiled_regex_20_111_NonMatch.csv
