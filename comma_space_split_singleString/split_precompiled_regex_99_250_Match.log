# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	    
	


	
	


  		
	  
	  	 	
   	 


 	
 	

 

 
						 
	
	
	 	  	 
  


		  	

  	 
		 

 	
 

		,	 				
 
	
   
 

   
	
	 	 	 


 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1330.256 ns/op
# Warmup Iteration   2: 1049.465 ns/op
# Warmup Iteration   3: 870.491 ns/op
# Warmup Iteration   4: 872.823 ns/op
# Warmup Iteration   5: 875.977 ns/op
Iteration   1: 881.135 ns/op
Iteration   2: 887.045 ns/op
Iteration   3: 867.065 ns/op
Iteration   4: 862.419 ns/op
Iteration   5: 865.495 ns/op
Iteration   6: 865.220 ns/op
Iteration   7: 866.014 ns/op
Iteration   8: 865.936 ns/op
Iteration   9: 865.487 ns/op
Iteration  10: 865.322 ns/op
Iteration  11: 866.864 ns/op
Iteration  12: 871.988 ns/op
Iteration  13: 863.857 ns/op
Iteration  14: 861.903 ns/op
Iteration  15: 863.499 ns/op
Iteration  16: 863.400 ns/op
Iteration  17: 863.730 ns/op
Iteration  18: 865.018 ns/op
Iteration  19: 871.750 ns/op
Iteration  20: 866.768 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1274.630 ns/op
# Warmup Iteration   2: 962.072 ns/op
# Warmup Iteration   3: 815.752 ns/op
# Warmup Iteration   4: 816.834 ns/op
# Warmup Iteration   5: 819.350 ns/op
Iteration   1: 822.759 ns/op
Iteration   2: 828.286 ns/op
Iteration   3: 810.618 ns/op
Iteration   4: 809.723 ns/op
Iteration   5: 809.254 ns/op
Iteration   6: 808.701 ns/op
Iteration   7: 808.747 ns/op
Iteration   8: 808.971 ns/op
Iteration   9: 808.943 ns/op
Iteration  10: 809.218 ns/op
Iteration  11: 809.918 ns/op
Iteration  12: 812.393 ns/op
Iteration  13: 807.531 ns/op
Iteration  14: 807.909 ns/op
Iteration  15: 806.964 ns/op
Iteration  16: 810.217 ns/op
Iteration  17: 808.744 ns/op
Iteration  18: 807.293 ns/op
Iteration  19: 807.762 ns/op
Iteration  20: 808.193 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1333.063 ns/op
# Warmup Iteration   2: 1043.091 ns/op
# Warmup Iteration   3: 872.819 ns/op
# Warmup Iteration   4: 875.284 ns/op
# Warmup Iteration   5: 878.682 ns/op
Iteration   1: 883.074 ns/op
Iteration   2: 888.986 ns/op
Iteration   3: 870.413 ns/op
Iteration   4: 864.568 ns/op
Iteration   5: 868.974 ns/op
Iteration   6: 868.003 ns/op
Iteration   7: 868.852 ns/op
Iteration   8: 868.728 ns/op
Iteration   9: 868.950 ns/op
Iteration  10: 868.676 ns/op
Iteration  11: 868.182 ns/op
Iteration  12: 868.644 ns/op
Iteration  13: 864.240 ns/op
Iteration  14: 866.390 ns/op
Iteration  15: 867.542 ns/op
Iteration  16: 866.574 ns/op
Iteration  17: 866.510 ns/op
Iteration  18: 866.609 ns/op
Iteration  19: 866.159 ns/op
Iteration  20: 872.963 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1370.401 ns/op
# Warmup Iteration   2: 1109.390 ns/op
# Warmup Iteration   3: 909.737 ns/op
# Warmup Iteration   4: 911.833 ns/op
# Warmup Iteration   5: 915.339 ns/op
Iteration   1: 920.734 ns/op
Iteration   2: 903.395 ns/op
Iteration   3: 923.157 ns/op
Iteration   4: 905.135 ns/op
Iteration   5: 904.960 ns/op
Iteration   6: 905.323 ns/op
Iteration   7: 905.067 ns/op
Iteration   8: 904.973 ns/op
Iteration   9: 901.680 ns/op
Iteration  10: 904.247 ns/op
Iteration  11: 905.526 ns/op
Iteration  12: 906.280 ns/op
Iteration  13: 911.497 ns/op
Iteration  14: 905.043 ns/op
Iteration  15: 903.640 ns/op
Iteration  16: 900.943 ns/op
Iteration  17: 903.685 ns/op
Iteration  18: 904.360 ns/op
Iteration  19: 903.087 ns/op
Iteration  20: 906.726 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1329.533 ns/op
# Warmup Iteration   2: 1043.293 ns/op
# Warmup Iteration   3: 871.242 ns/op
# Warmup Iteration   4: 874.228 ns/op
# Warmup Iteration   5: 883.895 ns/op
Iteration   1: 884.346 ns/op
Iteration   2: 887.707 ns/op
Iteration   3: 870.434 ns/op
Iteration   4: 864.621 ns/op
Iteration   5: 868.325 ns/op
Iteration   6: 868.446 ns/op
Iteration   7: 868.100 ns/op
Iteration   8: 868.654 ns/op
Iteration   9: 868.978 ns/op
Iteration  10: 872.693 ns/op
Iteration  11: 869.904 ns/op
Iteration  12: 870.321 ns/op
Iteration  13: 863.646 ns/op
Iteration  14: 874.496 ns/op
Iteration  15: 867.575 ns/op
Iteration  16: 867.022 ns/op
Iteration  17: 875.271 ns/op
Iteration  18: 866.292 ns/op
Iteration  19: 866.014 ns/op
Iteration  20: 866.435 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  864.938 Â±(99.9%) 10.672 ns/op [Average]
  (min, avg, max) = (806.964, 864.938, 923.157), stdev = 31.468
  CI (99.9%): [854.266, 875.611] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	    
	


	
	


  		
	  
	  	 	
   	 


 	
 	

 

 
						 
	
	
	 	  	 
  


		  	

  	 
		 

 	
 

		,	 				
 
	
   
 

   
	
	 	 	 


 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1298.228 ns/op
# Warmup Iteration   2: 1016.665 ns/op
# Warmup Iteration   3: 857.973 ns/op
# Warmup Iteration   4: 859.000 ns/op
# Warmup Iteration   5: 866.920 ns/op
Iteration   1: 866.773 ns/op
Iteration   2: 873.012 ns/op
Iteration   3: 852.277 ns/op
Iteration   4: 853.277 ns/op
Iteration   5: 859.215 ns/op
Iteration   6: 852.708 ns/op
Iteration   7: 853.625 ns/op
Iteration   8: 848.897 ns/op
Iteration   9: 852.456 ns/op
Iteration  10: 852.994 ns/op
Iteration  11: 857.770 ns/op
Iteration  12: 854.595 ns/op
Iteration  13: 857.467 ns/op
Iteration  14: 850.873 ns/op
Iteration  15: 850.563 ns/op
Iteration  16: 857.202 ns/op
Iteration  17: 851.931 ns/op
Iteration  18: 850.349 ns/op
Iteration  19: 852.356 ns/op
Iteration  20: 853.272 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1303.529 ns/op
# Warmup Iteration   2: 1019.517 ns/op
# Warmup Iteration   3: 856.724 ns/op
# Warmup Iteration   4: 859.810 ns/op
# Warmup Iteration   5: 863.057 ns/op
Iteration   1: 867.529 ns/op
Iteration   2: 872.503 ns/op
Iteration   3: 852.241 ns/op
Iteration   4: 852.832 ns/op
Iteration   5: 853.862 ns/op
Iteration   6: 853.526 ns/op
Iteration   7: 853.073 ns/op
Iteration   8: 848.816 ns/op
Iteration   9: 866.245 ns/op
Iteration  10: 859.307 ns/op
Iteration  11: 862.592 ns/op
Iteration  12: 862.802 ns/op
Iteration  13: 857.569 ns/op
Iteration  14: 853.608 ns/op
Iteration  15: 853.026 ns/op
Iteration  16: 853.266 ns/op
Iteration  17: 853.542 ns/op
Iteration  18: 853.120 ns/op
Iteration  19: 853.173 ns/op
Iteration  20: 852.611 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1330.270 ns/op
# Warmup Iteration   2: 1077.055 ns/op
# Warmup Iteration   3: 899.818 ns/op
# Warmup Iteration   4: 902.666 ns/op
# Warmup Iteration   5: 907.627 ns/op
Iteration   1: 911.497 ns/op
Iteration   2: 917.267 ns/op
Iteration   3: 896.594 ns/op
Iteration   4: 891.842 ns/op
Iteration   5: 895.981 ns/op
Iteration   6: 895.252 ns/op
Iteration   7: 896.024 ns/op
Iteration   8: 896.517 ns/op
Iteration   9: 895.873 ns/op
Iteration  10: 896.109 ns/op
Iteration  11: 897.251 ns/op
Iteration  12: 892.946 ns/op
Iteration  13: 897.394 ns/op
Iteration  14: 895.313 ns/op
Iteration  15: 895.927 ns/op
Iteration  16: 897.078 ns/op
Iteration  17: 898.526 ns/op
Iteration  18: 898.735 ns/op
Iteration  19: 897.865 ns/op
Iteration  20: 897.604 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1346.139 ns/op
# Warmup Iteration   2: 1113.044 ns/op
# Warmup Iteration   3: 928.028 ns/op
# Warmup Iteration   4: 930.671 ns/op
# Warmup Iteration   5: 934.831 ns/op
Iteration   1: 939.127 ns/op
Iteration   2: 945.668 ns/op
Iteration   3: 918.232 ns/op
Iteration   4: 926.269 ns/op
Iteration   5: 923.485 ns/op
Iteration   6: 923.368 ns/op
Iteration   7: 927.754 ns/op
Iteration   8: 929.122 ns/op
Iteration   9: 924.524 ns/op
Iteration  10: 918.577 ns/op
Iteration  11: 924.786 ns/op
Iteration  12: 930.116 ns/op
Iteration  13: 924.270 ns/op
Iteration  14: 922.535 ns/op
Iteration  15: 920.403 ns/op
Iteration  16: 920.394 ns/op
Iteration  17: 917.960 ns/op
Iteration  18: 921.888 ns/op
Iteration  19: 931.553 ns/op
Iteration  20: 922.675 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1296.678 ns/op
# Warmup Iteration   2: 1007.673 ns/op
# Warmup Iteration   3: 848.510 ns/op
# Warmup Iteration   4: 850.825 ns/op
# Warmup Iteration   5: 854.814 ns/op
Iteration   1: 858.813 ns/op
Iteration   2: 863.530 ns/op
Iteration   3: 844.181 ns/op
Iteration   4: 843.236 ns/op
Iteration   5: 843.902 ns/op
Iteration   6: 842.889 ns/op
Iteration   7: 843.147 ns/op
Iteration   8: 845.079 ns/op
Iteration   9: 853.237 ns/op
Iteration  10: 839.714 ns/op
Iteration  11: 848.382 ns/op
Iteration  12: 847.477 ns/op
Iteration  13: 843.270 ns/op
Iteration  14: 842.074 ns/op
Iteration  15: 842.109 ns/op
Iteration  16: 842.799 ns/op
Iteration  17: 843.791 ns/op
Iteration  18: 842.794 ns/op
Iteration  19: 841.924 ns/op
Iteration  20: 842.656 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  876.262 Â±(99.9%) 10.624 ns/op [Average]
  (min, avg, max) = (839.714, 876.262, 945.668), stdev = 31.324
  CI (99.9%): [865.638, 886.885] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                   (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	    
	


	
	


  		
	  
	  	 	
   	 


 	
 	

 

 
						 
	
	
	 	  	 
  


		  	

  	 
		 

 	
 

		,	 				
 
	
   
 

   
	
	 	 	 


   avgt  100  864.938 Â± 10.672  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	    
	


	
	


  		
	  
	  	 	
   	 


 	
 	

 

 
						 
	
	
	 	  	 
  


		  	

  	 
		 

 	
 

		,	 				
 
	
   
 

   
	
	 	 	 


   avgt  100  876.262 Â± 10.624  ns/op

Benchmark result is saved to split_precompiled_regex_99_250_Match.csv
