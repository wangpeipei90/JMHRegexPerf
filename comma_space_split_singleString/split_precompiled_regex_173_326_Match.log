# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 




 	 		
	 


	 
 
 
	   
	 	
	
   


	 	 
		
 

  	 
 
					

	

	 


  	 	  
  ,  
	
  	 	
		
 
	
	  
 	 	 
	

		
	
  		   	
		
	
 
	



 
 	
 	

	   
 
 	
 
 
 
	 	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1516.436 ns/op
# Warmup Iteration   2: 1336.481 ns/op
# Warmup Iteration   3: 1056.341 ns/op
# Warmup Iteration   4: 1039.265 ns/op
# Warmup Iteration   5: 1053.113 ns/op
Iteration   1: 1057.547 ns/op
Iteration   2: 1064.416 ns/op
Iteration   3: 1045.023 ns/op
Iteration   4: 1064.966 ns/op
Iteration   5: 1047.489 ns/op
Iteration   6: 1045.840 ns/op
Iteration   7: 1039.514 ns/op
Iteration   8: 1045.592 ns/op
Iteration   9: 1045.216 ns/op
Iteration  10: 1045.447 ns/op
Iteration  11: 1039.255 ns/op
Iteration  12: 1044.255 ns/op
Iteration  13: 1044.644 ns/op
Iteration  14: 1045.100 ns/op
Iteration  15: 1039.309 ns/op
Iteration  16: 1046.645 ns/op
Iteration  17: 1041.427 ns/op
Iteration  18: 1042.871 ns/op
Iteration  19: 1038.006 ns/op
Iteration  20: 1040.716 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1463.053 ns/op
# Warmup Iteration   2: 1247.321 ns/op
# Warmup Iteration   3: 1007.054 ns/op
# Warmup Iteration   4: 1010.646 ns/op
# Warmup Iteration   5: 997.712 ns/op
Iteration   1: 1013.848 ns/op
Iteration   2: 1020.153 ns/op
Iteration   3: 1025.347 ns/op
Iteration   4: 997.028 ns/op
Iteration   5: 1002.284 ns/op
Iteration   6: 1002.433 ns/op
Iteration   7: 1002.472 ns/op
Iteration   8: 1002.418 ns/op
Iteration   9: 998.077 ns/op
Iteration  10: 1002.309 ns/op
Iteration  11: 1002.582 ns/op
Iteration  12: 1002.428 ns/op
Iteration  13: 998.788 ns/op
Iteration  14: 1003.549 ns/op
Iteration  15: 1012.421 ns/op
Iteration  16: 1000.779 ns/op
Iteration  17: 998.346 ns/op
Iteration  18: 1000.327 ns/op
Iteration  19: 1001.136 ns/op
Iteration  20: 1008.409 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1563.306 ns/op
# Warmup Iteration   2: 1401.113 ns/op
# Warmup Iteration   3: 1095.161 ns/op
# Warmup Iteration   4: 1104.226 ns/op
# Warmup Iteration   5: 1107.316 ns/op
Iteration   1: 1112.431 ns/op
Iteration   2: 1112.567 ns/op
Iteration   3: 1109.566 ns/op
Iteration   4: 1125.105 ns/op
Iteration   5: 1099.108 ns/op
Iteration   6: 1093.953 ns/op
Iteration   7: 1099.068 ns/op
Iteration   8: 1099.192 ns/op
Iteration   9: 1094.273 ns/op
Iteration  10: 1100.769 ns/op
Iteration  11: 1101.363 ns/op
Iteration  12: 1101.832 ns/op
Iteration  13: 1095.353 ns/op
Iteration  14: 1101.151 ns/op
Iteration  15: 1104.418 ns/op
Iteration  16: 1095.583 ns/op
Iteration  17: 1101.381 ns/op
Iteration  18: 1099.457 ns/op
Iteration  19: 1096.041 ns/op
Iteration  20: 1098.154 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1541.245 ns/op
# Warmup Iteration   2: 1367.393 ns/op
# Warmup Iteration   3: 1071.097 ns/op
# Warmup Iteration   4: 1081.273 ns/op
# Warmup Iteration   5: 1084.139 ns/op
Iteration   1: 1088.508 ns/op
Iteration   2: 1096.015 ns/op
Iteration   3: 1070.785 ns/op
Iteration   4: 1100.961 ns/op
Iteration   5: 1075.922 ns/op
Iteration   6: 1070.798 ns/op
Iteration   7: 1075.329 ns/op
Iteration   8: 1075.885 ns/op
Iteration   9: 1075.709 ns/op
Iteration  10: 1071.440 ns/op
Iteration  11: 1078.325 ns/op
Iteration  12: 1084.744 ns/op
Iteration  13: 1070.451 ns/op
Iteration  14: 1079.940 ns/op
Iteration  15: 1076.743 ns/op
Iteration  16: 1088.008 ns/op
Iteration  17: 1070.181 ns/op
Iteration  18: 1072.728 ns/op
Iteration  19: 1072.419 ns/op
Iteration  20: 1073.078 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1464.026 ns/op
# Warmup Iteration   2: 1244.309 ns/op
# Warmup Iteration   3: 1000.155 ns/op
# Warmup Iteration   4: 1003.877 ns/op
# Warmup Iteration   5: 991.843 ns/op
Iteration   1: 1007.887 ns/op
Iteration   2: 1013.655 ns/op
Iteration   3: 1019.666 ns/op
Iteration   4: 998.274 ns/op
Iteration   5: 991.728 ns/op
Iteration   6: 996.340 ns/op
Iteration   7: 995.825 ns/op
Iteration   8: 995.563 ns/op
Iteration   9: 991.453 ns/op
Iteration  10: 994.848 ns/op
Iteration  11: 998.096 ns/op
Iteration  12: 1000.978 ns/op
Iteration  13: 991.083 ns/op
Iteration  14: 996.506 ns/op
Iteration  15: 997.432 ns/op
Iteration  16: 1002.210 ns/op
Iteration  17: 993.824 ns/op
Iteration  18: 991.082 ns/op
Iteration  19: 993.562 ns/op
Iteration  20: 993.397 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1045.905 Â±(99.9%) 14.031 ns/op [Average]
  (min, avg, max) = (991.082, 1045.905, 1125.105), stdev = 41.371
  CI (99.9%): [1031.874, 1059.937] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 




 	 		
	 


	 
 
 
	   
	 	
	
   


	 	 
		
 

  	 
 
					

	

	 


  	 	  
  ,  
	
  	 	
		
 
	
	  
 	 	 
	

		
	
  		   	
		
	
 
	



 
 	
 	

	   
 
 	
 
 
 
	 	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1514.206 ns/op
# Warmup Iteration   2: 1372.779 ns/op
# Warmup Iteration   3: 1094.610 ns/op
# Warmup Iteration   4: 1084.937 ns/op
# Warmup Iteration   5: 1097.818 ns/op
Iteration   1: 1102.499 ns/op
Iteration   2: 1106.812 ns/op
Iteration   3: 1084.060 ns/op
Iteration   4: 1112.540 ns/op
Iteration   5: 1090.220 ns/op
Iteration   6: 1089.198 ns/op
Iteration   7: 1083.854 ns/op
Iteration   8: 1089.222 ns/op
Iteration   9: 1088.774 ns/op
Iteration  10: 1083.523 ns/op
Iteration  11: 1088.285 ns/op
Iteration  12: 1096.293 ns/op
Iteration  13: 1088.884 ns/op
Iteration  14: 1082.893 ns/op
Iteration  15: 1088.103 ns/op
Iteration  16: 1092.410 ns/op
Iteration  17: 1096.129 ns/op
Iteration  18: 1083.288 ns/op
Iteration  19: 1093.672 ns/op
Iteration  20: 1086.358 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1479.049 ns/op
# Warmup Iteration   2: 1265.388 ns/op
# Warmup Iteration   3: 1018.450 ns/op
# Warmup Iteration   4: 1022.301 ns/op
# Warmup Iteration   5: 1009.973 ns/op
Iteration   1: 1027.096 ns/op
Iteration   2: 1032.028 ns/op
Iteration   3: 1038.204 ns/op
Iteration   4: 1014.149 ns/op
Iteration   5: 1009.515 ns/op
Iteration   6: 1014.216 ns/op
Iteration   7: 1014.437 ns/op
Iteration   8: 1014.355 ns/op
Iteration   9: 1009.802 ns/op
Iteration  10: 1014.911 ns/op
Iteration  11: 1015.057 ns/op
Iteration  12: 1014.966 ns/op
Iteration  13: 1016.109 ns/op
Iteration  14: 1009.357 ns/op
Iteration  15: 1021.815 ns/op
Iteration  16: 1012.490 ns/op
Iteration  17: 1011.827 ns/op
Iteration  18: 1009.682 ns/op
Iteration  19: 1017.227 ns/op
Iteration  20: 1014.762 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1507.597 ns/op
# Warmup Iteration   2: 1285.629 ns/op
# Warmup Iteration   3: 1021.746 ns/op
# Warmup Iteration   4: 1018.926 ns/op
# Warmup Iteration   5: 1017.581 ns/op
Iteration   1: 1028.235 ns/op
Iteration   2: 1041.413 ns/op
Iteration   3: 1039.657 ns/op
Iteration   4: 1011.495 ns/op
Iteration   5: 1016.411 ns/op
Iteration   6: 1016.492 ns/op
Iteration   7: 1015.507 ns/op
Iteration   8: 1016.979 ns/op
Iteration   9: 1011.253 ns/op
Iteration  10: 1016.423 ns/op
Iteration  11: 1016.657 ns/op
Iteration  12: 1020.602 ns/op
Iteration  13: 1020.932 ns/op
Iteration  14: 1011.170 ns/op
Iteration  15: 1021.105 ns/op
Iteration  16: 1013.417 ns/op
Iteration  17: 1017.736 ns/op
Iteration  18: 1011.019 ns/op
Iteration  19: 1021.645 ns/op
Iteration  20: 1018.775 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1528.193 ns/op
# Warmup Iteration   2: 1338.955 ns/op
# Warmup Iteration   3: 1064.848 ns/op
# Warmup Iteration   4: 1053.817 ns/op
# Warmup Iteration   5: 1067.521 ns/op
Iteration   1: 1071.861 ns/op
Iteration   2: 1077.566 ns/op
Iteration   3: 1074.322 ns/op
Iteration   4: 1064.468 ns/op
Iteration   5: 1058.934 ns/op
Iteration   6: 1059.346 ns/op
Iteration   7: 1055.228 ns/op
Iteration   8: 1058.894 ns/op
Iteration   9: 1060.780 ns/op
Iteration  10: 1059.866 ns/op
Iteration  11: 1054.825 ns/op
Iteration  12: 1061.776 ns/op
Iteration  13: 1072.663 ns/op
Iteration  14: 1069.508 ns/op
Iteration  15: 1054.752 ns/op
Iteration  16: 1070.194 ns/op
Iteration  17: 1057.074 ns/op
Iteration  18: 1056.543 ns/op
Iteration  19: 1053.854 ns/op
Iteration  20: 1056.122 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1474.032 ns/op
# Warmup Iteration   2: 1288.938 ns/op
# Warmup Iteration   3: 1042.060 ns/op
# Warmup Iteration   4: 1031.021 ns/op
# Warmup Iteration   5: 1044.622 ns/op
Iteration   1: 1048.224 ns/op
Iteration   2: 1054.068 ns/op
Iteration   3: 1059.253 ns/op
Iteration   4: 1031.567 ns/op
Iteration   5: 1046.001 ns/op
Iteration   6: 1037.466 ns/op
Iteration   7: 1036.219 ns/op
Iteration   8: 1030.859 ns/op
Iteration   9: 1047.130 ns/op
Iteration  10: 1036.676 ns/op
Iteration  11: 1037.129 ns/op
Iteration  12: 1030.981 ns/op
Iteration  13: 1037.497 ns/op
Iteration  14: 1037.988 ns/op
Iteration  15: 1056.365 ns/op
Iteration  16: 1038.620 ns/op
Iteration  17: 1030.677 ns/op
Iteration  18: 1040.026 ns/op
Iteration  19: 1045.946 ns/op
Iteration  20: 1042.623 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1046.198 Â±(99.9%) 9.915 ns/op [Average]
  (min, avg, max) = (1009.357, 1046.198, 1112.540), stdev = 29.235
  CI (99.9%): [1036.283, 1056.114] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                               (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  




 	 		
	 


	 
 
 
	   
	 	
	
   


	 	 
		
 

  	 
 
					

	

	 


  	 	  
  ,  
	
  	 	
		
 
	
	  
 	 	 
	

		
	
  		   	
		
	
 
	



 
 	
 	

	   
 
 	
 
 
 
	 	  avgt  100  1045.905 Â± 14.031  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  




 	 		
	 


	 
 
 
	   
	 	
	
   


	 	 
		
 

  	 
 
					

	

	 


  	 	  
  ,  
	
  	 	
		
 
	
	  
 	 	 
	

		
	
  		   	
		
	
 
	



 
 	
 	

	   
 
 	
 
 
 
	 	  avgt  100  1046.198 Â±  9.915  ns/op

Benchmark result is saved to split_precompiled_regex_173_326_Match.csv
