# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  		
 	 
	 

    

		
 
	 	
   

		
	
	
					




  			

  	
 
	
	  	
	
	
 

 	 
	

  
  		 	  	 	
  
 
	   
 


  ,	 
  			 
 
 
  
 

 	

  

	
	 
	
 
 
	
  
 
			  

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1496.481 ns/op
# Warmup Iteration   2: 1302.916 ns/op
# Warmup Iteration   3: 1036.878 ns/op
# Warmup Iteration   4: 1026.819 ns/op
# Warmup Iteration   5: 1039.812 ns/op
Iteration   1: 1043.709 ns/op
Iteration   2: 1049.515 ns/op
Iteration   3: 1055.349 ns/op
Iteration   4: 1027.008 ns/op
Iteration   5: 1033.278 ns/op
Iteration   6: 1032.023 ns/op
Iteration   7: 1030.074 ns/op
Iteration   8: 1026.077 ns/op
Iteration   9: 1030.658 ns/op
Iteration  10: 1030.864 ns/op
Iteration  11: 1032.102 ns/op
Iteration  12: 1026.406 ns/op
Iteration  13: 1032.805 ns/op
Iteration  14: 1033.320 ns/op
Iteration  15: 1045.507 ns/op
Iteration  16: 1026.130 ns/op
Iteration  17: 1029.003 ns/op
Iteration  18: 1029.261 ns/op
Iteration  19: 1028.907 ns/op
Iteration  20: 1025.950 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1495.816 ns/op
# Warmup Iteration   2: 1306.324 ns/op
# Warmup Iteration   3: 1039.928 ns/op
# Warmup Iteration   4: 1030.934 ns/op
# Warmup Iteration   5: 1044.116 ns/op
Iteration   1: 1048.914 ns/op
Iteration   2: 1053.182 ns/op
Iteration   3: 1060.192 ns/op
Iteration   4: 1030.660 ns/op
Iteration   5: 1036.439 ns/op
Iteration   6: 1035.764 ns/op
Iteration   7: 1031.247 ns/op
Iteration   8: 1040.733 ns/op
Iteration   9: 1040.984 ns/op
Iteration  10: 1036.485 ns/op
Iteration  11: 1031.001 ns/op
Iteration  12: 1037.302 ns/op
Iteration  13: 1036.266 ns/op
Iteration  14: 1039.035 ns/op
Iteration  15: 1031.281 ns/op
Iteration  16: 1038.783 ns/op
Iteration  17: 1040.414 ns/op
Iteration  18: 1035.132 ns/op
Iteration  19: 1030.754 ns/op
Iteration  20: 1033.522 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1506.784 ns/op
# Warmup Iteration   2: 1307.218 ns/op
# Warmup Iteration   3: 1041.068 ns/op
# Warmup Iteration   4: 1031.189 ns/op
# Warmup Iteration   5: 1045.413 ns/op
Iteration   1: 1049.095 ns/op
Iteration   2: 1053.436 ns/op
Iteration   3: 1053.713 ns/op
Iteration   4: 1038.109 ns/op
Iteration   5: 1037.031 ns/op
Iteration   6: 1036.538 ns/op
Iteration   7: 1031.155 ns/op
Iteration   8: 1035.760 ns/op
Iteration   9: 1036.158 ns/op
Iteration  10: 1036.694 ns/op
Iteration  11: 1031.485 ns/op
Iteration  12: 1037.074 ns/op
Iteration  13: 1035.993 ns/op
Iteration  14: 1038.348 ns/op
Iteration  15: 1031.241 ns/op
Iteration  16: 1041.033 ns/op
Iteration  17: 1033.519 ns/op
Iteration  18: 1033.457 ns/op
Iteration  19: 1031.350 ns/op
Iteration  20: 1041.138 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1501.085 ns/op
# Warmup Iteration   2: 1303.933 ns/op
# Warmup Iteration   3: 1039.247 ns/op
# Warmup Iteration   4: 1030.638 ns/op
# Warmup Iteration   5: 1043.422 ns/op
Iteration   1: 1047.172 ns/op
Iteration   2: 1053.295 ns/op
Iteration   3: 1054.260 ns/op
Iteration   4: 1036.595 ns/op
Iteration   5: 1035.829 ns/op
Iteration   6: 1035.532 ns/op
Iteration   7: 1031.278 ns/op
Iteration   8: 1035.239 ns/op
Iteration   9: 1034.687 ns/op
Iteration  10: 1034.852 ns/op
Iteration  11: 1030.489 ns/op
Iteration  12: 1044.925 ns/op
Iteration  13: 1035.389 ns/op
Iteration  14: 1037.023 ns/op
Iteration  15: 1030.417 ns/op
Iteration  16: 1039.113 ns/op
Iteration  17: 1039.859 ns/op
Iteration  18: 1037.474 ns/op
Iteration  19: 1030.298 ns/op
Iteration  20: 1032.714 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1494.992 ns/op
# Warmup Iteration   2: 1307.592 ns/op
# Warmup Iteration   3: 1040.026 ns/op
# Warmup Iteration   4: 1030.851 ns/op
# Warmup Iteration   5: 1044.406 ns/op
Iteration   1: 1047.666 ns/op
Iteration   2: 1053.438 ns/op
Iteration   3: 1060.018 ns/op
Iteration   4: 1031.255 ns/op
Iteration   5: 1036.467 ns/op
Iteration   6: 1035.352 ns/op
Iteration   7: 1031.200 ns/op
Iteration   8: 1036.042 ns/op
Iteration   9: 1035.717 ns/op
Iteration  10: 1042.354 ns/op
Iteration  11: 1031.567 ns/op
Iteration  12: 1036.572 ns/op
Iteration  13: 1035.835 ns/op
Iteration  14: 1037.523 ns/op
Iteration  15: 1031.559 ns/op
Iteration  16: 1035.642 ns/op
Iteration  17: 1033.329 ns/op
Iteration  18: 1037.065 ns/op
Iteration  19: 1030.320 ns/op
Iteration  20: 1033.807 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1037.075 Â±(99.9%) 2.587 ns/op [Average]
  (min, avg, max) = (1025.950, 1037.075, 1060.192), stdev = 7.628
  CI (99.9%): [1034.488, 1039.662] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  		
 	 
	 

    

		
 
	 	
   

		
	
	
					




  			

  	
 
	
	  	
	
	
 

 	 
	

  
  		 	  	 	
  
 
	   
 


  ,	 
  			 
 
 
  
 

 	

  

	
	 
	
 
 
	
  
 
			  

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1400.322 ns/op
# Warmup Iteration   2: 1144.804 ns/op
# Warmup Iteration   3: 933.877 ns/op
# Warmup Iteration   4: 936.445 ns/op
# Warmup Iteration   5: 940.320 ns/op
Iteration   1: 931.781 ns/op
Iteration   2: 936.789 ns/op
Iteration   3: 951.561 ns/op
Iteration   4: 930.451 ns/op
Iteration   5: 929.310 ns/op
Iteration   6: 929.729 ns/op
Iteration   7: 925.815 ns/op
Iteration   8: 930.269 ns/op
Iteration   9: 928.733 ns/op
Iteration  10: 928.715 ns/op
Iteration  11: 928.802 ns/op
Iteration  12: 929.510 ns/op
Iteration  13: 924.329 ns/op
Iteration  14: 928.989 ns/op
Iteration  15: 925.659 ns/op
Iteration  16: 925.368 ns/op
Iteration  17: 925.466 ns/op
Iteration  18: 926.687 ns/op
Iteration  19: 923.854 ns/op
Iteration  20: 925.708 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1509.603 ns/op
# Warmup Iteration   2: 1326.567 ns/op
# Warmup Iteration   3: 1057.692 ns/op
# Warmup Iteration   4: 1047.069 ns/op
# Warmup Iteration   5: 1060.520 ns/op
Iteration   1: 1066.747 ns/op
Iteration   2: 1073.633 ns/op
Iteration   3: 1076.481 ns/op
Iteration   4: 1047.789 ns/op
Iteration   5: 1051.929 ns/op
Iteration   6: 1051.280 ns/op
Iteration   7: 1051.054 ns/op
Iteration   8: 1047.231 ns/op
Iteration   9: 1052.109 ns/op
Iteration  10: 1058.277 ns/op
Iteration  11: 1052.524 ns/op
Iteration  12: 1046.741 ns/op
Iteration  13: 1052.210 ns/op
Iteration  14: 1053.518 ns/op
Iteration  15: 1061.614 ns/op
Iteration  16: 1047.498 ns/op
Iteration  17: 1049.681 ns/op
Iteration  18: 1049.511 ns/op
Iteration  19: 1049.504 ns/op
Iteration  20: 1047.204 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1503.011 ns/op
# Warmup Iteration   2: 1337.741 ns/op
# Warmup Iteration   3: 1072.411 ns/op
# Warmup Iteration   4: 1062.024 ns/op
# Warmup Iteration   5: 1074.861 ns/op
Iteration   1: 1078.984 ns/op
Iteration   2: 1084.623 ns/op
Iteration   3: 1072.216 ns/op
Iteration   4: 1079.832 ns/op
Iteration   5: 1066.827 ns/op
Iteration   6: 1066.775 ns/op
Iteration   7: 1061.106 ns/op
Iteration   8: 1066.468 ns/op
Iteration   9: 1066.430 ns/op
Iteration  10: 1071.316 ns/op
Iteration  11: 1061.316 ns/op
Iteration  12: 1067.429 ns/op
Iteration  13: 1092.426 ns/op
Iteration  14: 1070.799 ns/op
Iteration  15: 1061.610 ns/op
Iteration  16: 1071.080 ns/op
Iteration  17: 1081.251 ns/op
Iteration  18: 1063.647 ns/op
Iteration  19: 1061.100 ns/op
Iteration  20: 1078.383 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1504.682 ns/op
# Warmup Iteration   2: 1341.547 ns/op
# Warmup Iteration   3: 1076.087 ns/op
# Warmup Iteration   4: 1065.360 ns/op
# Warmup Iteration   5: 1079.630 ns/op
Iteration   1: 1082.713 ns/op
Iteration   2: 1087.952 ns/op
Iteration   3: 1065.880 ns/op
Iteration   4: 1094.236 ns/op
Iteration   5: 1070.565 ns/op
Iteration   6: 1070.734 ns/op
Iteration   7: 1065.333 ns/op
Iteration   8: 1070.233 ns/op
Iteration   9: 1070.926 ns/op
Iteration  10: 1070.853 ns/op
Iteration  11: 1070.350 ns/op
Iteration  12: 1072.091 ns/op
Iteration  13: 1070.237 ns/op
Iteration  14: 1070.973 ns/op
Iteration  15: 1064.575 ns/op
Iteration  16: 1073.015 ns/op
Iteration  17: 1071.718 ns/op
Iteration  18: 1068.606 ns/op
Iteration  19: 1065.199 ns/op
Iteration  20: 1069.616 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1510.341 ns/op
# Warmup Iteration   2: 1332.564 ns/op
# Warmup Iteration   3: 1072.046 ns/op
# Warmup Iteration   4: 1061.494 ns/op
# Warmup Iteration   5: 1076.712 ns/op
Iteration   1: 1081.375 ns/op
Iteration   2: 1085.978 ns/op
Iteration   3: 1092.814 ns/op
Iteration   4: 1062.321 ns/op
Iteration   5: 1072.460 ns/op
Iteration   6: 1067.761 ns/op
Iteration   7: 1061.536 ns/op
Iteration   8: 1068.194 ns/op
Iteration   9: 1067.371 ns/op
Iteration  10: 1070.095 ns/op
Iteration  11: 1062.414 ns/op
Iteration  12: 1066.944 ns/op
Iteration  13: 1067.199 ns/op
Iteration  14: 1068.295 ns/op
Iteration  15: 1062.102 ns/op
Iteration  16: 1070.627 ns/op
Iteration  17: 1065.764 ns/op
Iteration  18: 1065.419 ns/op
Iteration  19: 1062.160 ns/op
Iteration  20: 1066.110 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1039.304 Â±(99.9%) 19.049 ns/op [Average]
  (min, avg, max) = (923.854, 1039.304, 1094.236), stdev = 56.167
  CI (99.9%): [1020.255, 1058.353] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   		
 	 
	 

    

		
 
	 	
   

		
	
	
					




  			

  	
 
	
	  	
	
	
 

 	 
	

  
  		 	  	 	
  
 
	   
 


  ,	 
  			 
 
 
  
 

 	

  

	
	 
	
 
 
	
  
 
			  

  avgt  100  1037.075 Â±  2.587  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   		
 	 
	 

    

		
 
	 	
   

		
	
	
					




  			

  	
 
	
	  	
	
	
 

 	 
	

  
  		 	  	 	
  
 
	   
 


  ,	 
  			 
 
 
  
 

 	

  

	
	 
	
 
 
	
  
 
			  

  avgt  100  1039.304 Â± 19.049  ns/op

Benchmark result is saved to split_precompiled_regex_102_295_Match.csv
