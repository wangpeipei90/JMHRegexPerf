# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = FNV0@;MjI'>kVv<My"2} zVY-#KWLqT_RgjsSWQlWb= .#_BJ &:	a_F{v,`s<6AF"UYd9bT8b	h	<^Yn,p`)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2174.783 ns/op
# Warmup Iteration   2: 2114.074 ns/op
# Warmup Iteration   3: 1781.305 ns/op
# Warmup Iteration   4: 1695.043 ns/op
# Warmup Iteration   5: 1682.193 ns/op
Iteration   1: 1700.936 ns/op
Iteration   2: 1680.164 ns/op
Iteration   3: 1705.866 ns/op
Iteration   4: 1676.957 ns/op
Iteration   5: 1714.616 ns/op
Iteration   6: 1685.072 ns/op
Iteration   7: 1716.576 ns/op
Iteration   8: 1690.900 ns/op
Iteration   9: 1672.918 ns/op
Iteration  10: 1687.268 ns/op
Iteration  11: 1679.403 ns/op
Iteration  12: 1687.223 ns/op
Iteration  13: 1674.607 ns/op
Iteration  14: 1681.481 ns/op
Iteration  15: 1679.453 ns/op
Iteration  16: 1686.413 ns/op
Iteration  17: 1679.213 ns/op
Iteration  18: 1686.887 ns/op
Iteration  19: 1678.965 ns/op
Iteration  20: 1686.077 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2165.373 ns/op
# Warmup Iteration   2: 2101.931 ns/op
# Warmup Iteration   3: 1771.946 ns/op
# Warmup Iteration   4: 1691.493 ns/op
# Warmup Iteration   5: 1671.041 ns/op
Iteration   1: 1694.092 ns/op
Iteration   2: 1672.404 ns/op
Iteration   3: 1701.898 ns/op
Iteration   4: 1671.462 ns/op
Iteration   5: 1708.568 ns/op
Iteration   6: 1679.349 ns/op
Iteration   7: 1710.098 ns/op
Iteration   8: 1679.842 ns/op
Iteration   9: 1671.357 ns/op
Iteration  10: 1680.163 ns/op
Iteration  11: 1671.326 ns/op
Iteration  12: 1679.718 ns/op
Iteration  13: 1671.390 ns/op
Iteration  14: 1680.350 ns/op
Iteration  15: 1671.230 ns/op
Iteration  16: 1678.969 ns/op
Iteration  17: 1671.103 ns/op
Iteration  18: 1680.919 ns/op
Iteration  19: 1674.502 ns/op
Iteration  20: 1688.855 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2006.867 ns/op
# Warmup Iteration   2: 1947.705 ns/op
# Warmup Iteration   3: 1549.231 ns/op
# Warmup Iteration   4: 1525.798 ns/op
# Warmup Iteration   5: 1511.101 ns/op
Iteration   1: 1530.397 ns/op
Iteration   2: 1537.193 ns/op
Iteration   3: 1511.740 ns/op
Iteration   4: 1543.999 ns/op
Iteration   5: 1524.604 ns/op
Iteration   6: 1540.229 ns/op
Iteration   7: 1523.154 ns/op
Iteration   8: 1511.573 ns/op
Iteration   9: 1518.167 ns/op
Iteration  10: 1511.854 ns/op
Iteration  11: 1518.584 ns/op
Iteration  12: 1519.833 ns/op
Iteration  13: 1511.622 ns/op
Iteration  14: 1519.352 ns/op
Iteration  15: 1511.780 ns/op
Iteration  16: 1519.343 ns/op
Iteration  17: 1512.072 ns/op
Iteration  18: 1519.092 ns/op
Iteration  19: 1519.321 ns/op
Iteration  20: 1512.331 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2159.449 ns/op
# Warmup Iteration   2: 2103.110 ns/op
# Warmup Iteration   3: 1772.637 ns/op
# Warmup Iteration   4: 1687.400 ns/op
# Warmup Iteration   5: 1671.611 ns/op
Iteration   1: 1692.384 ns/op
Iteration   2: 1672.000 ns/op
Iteration   3: 1699.854 ns/op
Iteration   4: 1671.671 ns/op
Iteration   5: 1708.161 ns/op
Iteration   6: 1688.677 ns/op
Iteration   7: 1700.756 ns/op
Iteration   8: 1682.327 ns/op
Iteration   9: 1671.296 ns/op
Iteration  10: 1678.689 ns/op
Iteration  11: 1671.282 ns/op
Iteration  12: 1678.575 ns/op
Iteration  13: 1671.262 ns/op
Iteration  14: 1678.728 ns/op
Iteration  15: 1670.899 ns/op
Iteration  16: 1680.371 ns/op
Iteration  17: 1671.136 ns/op
Iteration  18: 1681.010 ns/op
Iteration  19: 1671.221 ns/op
Iteration  20: 1710.826 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2164.283 ns/op
# Warmup Iteration   2: 2103.539 ns/op
# Warmup Iteration   3: 1770.566 ns/op
# Warmup Iteration   4: 1688.283 ns/op
# Warmup Iteration   5: 1673.663 ns/op
Iteration   1: 1693.671 ns/op
Iteration   2: 1673.480 ns/op
Iteration   3: 1704.582 ns/op
Iteration   4: 1681.525 ns/op
Iteration   5: 1711.674 ns/op
Iteration   6: 1692.040 ns/op
Iteration   7: 1700.108 ns/op
Iteration   8: 1683.767 ns/op
Iteration   9: 1672.574 ns/op
Iteration  10: 1681.418 ns/op
Iteration  11: 1673.226 ns/op
Iteration  12: 1680.792 ns/op
Iteration  13: 1672.882 ns/op
Iteration  14: 1680.814 ns/op
Iteration  15: 1673.145 ns/op
Iteration  16: 1680.832 ns/op
Iteration  17: 1673.402 ns/op
Iteration  18: 1680.064 ns/op
Iteration  19: 1672.990 ns/op
Iteration  20: 1681.075 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1651.200 Â±(99.9%) 22.584 ns/op [Average]
  (min, avg, max) = (1511.573, 1651.200, 1716.576), stdev = 66.590
  CI (99.9%): [1628.616, 1673.785] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = FNV0@;MjI'>kVv<My"2} zVY-#KWLqT_RgjsSWQlWb= .#_BJ &:	a_F{v,`s<6AF"UYd9bT8b	h	<^Yn,p`)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2356.235 ns/op
# Warmup Iteration   2: 2214.992 ns/op
# Warmup Iteration   3: 1910.040 ns/op
# Warmup Iteration   4: 1766.874 ns/op
# Warmup Iteration   5: 1782.462 ns/op
Iteration   1: 1787.388 ns/op
Iteration   2: 1766.145 ns/op
Iteration   3: 1796.175 ns/op
Iteration   4: 1767.270 ns/op
Iteration   5: 1805.333 ns/op
Iteration   6: 1765.719 ns/op
Iteration   7: 1816.257 ns/op
Iteration   8: 1766.753 ns/op
Iteration   9: 1776.153 ns/op
Iteration  10: 1766.450 ns/op
Iteration  11: 1773.813 ns/op
Iteration  12: 1766.430 ns/op
Iteration  13: 1774.837 ns/op
Iteration  14: 1766.564 ns/op
Iteration  15: 1773.671 ns/op
Iteration  16: 1766.070 ns/op
Iteration  17: 1773.659 ns/op
Iteration  18: 1766.064 ns/op
Iteration  19: 1773.736 ns/op
Iteration  20: 1765.321 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2250.965 ns/op
# Warmup Iteration   2: 2119.886 ns/op
# Warmup Iteration   3: 1787.091 ns/op
# Warmup Iteration   4: 1691.711 ns/op
# Warmup Iteration   5: 1674.130 ns/op
Iteration   1: 1701.011 ns/op
Iteration   2: 1675.748 ns/op
Iteration   3: 1703.377 ns/op
Iteration   4: 1680.911 ns/op
Iteration   5: 1708.135 ns/op
Iteration   6: 1720.935 ns/op
Iteration   7: 1674.670 ns/op
Iteration   8: 1682.754 ns/op
Iteration   9: 1674.828 ns/op
Iteration  10: 1682.267 ns/op
Iteration  11: 1675.838 ns/op
Iteration  12: 1683.909 ns/op
Iteration  13: 1684.467 ns/op
Iteration  14: 1686.336 ns/op
Iteration  15: 1673.088 ns/op
Iteration  16: 1683.865 ns/op
Iteration  17: 1676.422 ns/op
Iteration  18: 1681.705 ns/op
Iteration  19: 1695.554 ns/op
Iteration  20: 1673.751 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2118.514 ns/op
# Warmup Iteration   2: 1957.875 ns/op
# Warmup Iteration   3: 1566.423 ns/op
# Warmup Iteration   4: 1543.299 ns/op
# Warmup Iteration   5: 1521.193 ns/op
Iteration   1: 1541.341 ns/op
Iteration   2: 1548.994 ns/op
Iteration   3: 1519.859 ns/op
Iteration   4: 1554.448 ns/op
Iteration   5: 1582.960 ns/op
Iteration   6: 1518.968 ns/op
Iteration   7: 1528.710 ns/op
Iteration   8: 1519.707 ns/op
Iteration   9: 1527.898 ns/op
Iteration  10: 1518.645 ns/op
Iteration  11: 1527.993 ns/op
Iteration  12: 1538.410 ns/op
Iteration  13: 1518.780 ns/op
Iteration  14: 1526.690 ns/op
Iteration  15: 1518.683 ns/op
Iteration  16: 1527.229 ns/op
Iteration  17: 1554.158 ns/op
Iteration  18: 1519.490 ns/op
Iteration  19: 1527.964 ns/op
Iteration  20: 1519.386 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2256.351 ns/op
# Warmup Iteration   2: 2114.964 ns/op
# Warmup Iteration   3: 1775.908 ns/op
# Warmup Iteration   4: 1689.591 ns/op
# Warmup Iteration   5: 1676.690 ns/op
Iteration   1: 1696.402 ns/op
Iteration   2: 1675.182 ns/op
Iteration   3: 1703.095 ns/op
Iteration   4: 1695.257 ns/op
Iteration   5: 1689.190 ns/op
Iteration   6: 1720.378 ns/op
Iteration   7: 1673.643 ns/op
Iteration   8: 1704.907 ns/op
Iteration   9: 1675.763 ns/op
Iteration  10: 1684.965 ns/op
Iteration  11: 1673.737 ns/op
Iteration  12: 1682.053 ns/op
Iteration  13: 1673.344 ns/op
Iteration  14: 1682.527 ns/op
Iteration  15: 1674.009 ns/op
Iteration  16: 1682.385 ns/op
Iteration  17: 1673.939 ns/op
Iteration  18: 1682.609 ns/op
Iteration  19: 1691.810 ns/op
Iteration  20: 1673.364 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2182.335 ns/op
# Warmup Iteration   2: 2133.891 ns/op
# Warmup Iteration   3: 1790.496 ns/op
# Warmup Iteration   4: 1706.047 ns/op
# Warmup Iteration   5: 1684.851 ns/op
Iteration   1: 1704.461 ns/op
Iteration   2: 1684.130 ns/op
Iteration   3: 1711.995 ns/op
Iteration   4: 1701.522 ns/op
Iteration   5: 1701.216 ns/op
Iteration   6: 1730.530 ns/op
Iteration   7: 1683.935 ns/op
Iteration   8: 1693.659 ns/op
Iteration   9: 1683.908 ns/op
Iteration  10: 1691.776 ns/op
Iteration  11: 1684.230 ns/op
Iteration  12: 1692.066 ns/op
Iteration  13: 1683.647 ns/op
Iteration  14: 1693.400 ns/op
Iteration  15: 1684.153 ns/op
Iteration  16: 1694.590 ns/op
Iteration  17: 1684.095 ns/op
Iteration  18: 1694.289 ns/op
Iteration  19: 1694.340 ns/op
Iteration  20: 1684.425 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1674.586 Â±(99.9%) 27.310 ns/op [Average]
  (min, avg, max) = (1518.645, 1674.586, 1816.257), stdev = 80.525
  CI (99.9%): [1647.276, 1701.896] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  FNV0@;MjI'>kVv<My"2} zVY-#KWLqT_RgjsSWQlWb= .#_BJ &:	a_F{v,`s<6AF"UYd9bT8b	h	<^Yn,p`  avgt  100  1651.200 Â± 22.584  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  FNV0@;MjI'>kVv<My"2} zVY-#KWLqT_RgjsSWQlWb= .#_BJ &:	a_F{v,`s<6AF"UYd9bT8b	h	<^Yn,p`  avgt  100  1674.586 Â± 27.310  ns/op

Benchmark result is saved to split_precompiled_regex_12_87_NonMatch.csv
