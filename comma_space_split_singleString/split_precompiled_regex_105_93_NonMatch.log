# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = %:2uxB!R{_dP.	e\K167a\!B#)Vu8RR1-Pc(m"+Xa&9,J@MG-XcYJ6~>Y]2KUycbv%iN4h.uNN=|OD$h?[Q(N/;XDaW!)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2067.204 ns/op
# Warmup Iteration   2: 2021.123 ns/op
# Warmup Iteration   3: 1689.326 ns/op
# Warmup Iteration   4: 1602.604 ns/op
# Warmup Iteration   5: 1584.779 ns/op
Iteration   1: 1608.002 ns/op
Iteration   2: 1584.365 ns/op
Iteration   3: 1616.349 ns/op
Iteration   4: 1586.210 ns/op
Iteration   5: 1621.594 ns/op
Iteration   6: 1630.378 ns/op
Iteration   7: 1587.916 ns/op
Iteration   8: 1596.028 ns/op
Iteration   9: 1587.526 ns/op
Iteration  10: 1598.730 ns/op
Iteration  11: 1588.001 ns/op
Iteration  12: 1595.716 ns/op
Iteration  13: 1584.113 ns/op
Iteration  14: 1594.738 ns/op
Iteration  15: 1586.705 ns/op
Iteration  16: 1602.057 ns/op
Iteration  17: 1589.173 ns/op
Iteration  18: 1605.903 ns/op
Iteration  19: 1588.000 ns/op
Iteration  20: 1597.021 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2215.395 ns/op
# Warmup Iteration   2: 2174.759 ns/op
# Warmup Iteration   3: 1880.354 ns/op
# Warmup Iteration   4: 1726.924 ns/op
# Warmup Iteration   5: 1742.960 ns/op
Iteration   1: 1750.066 ns/op
Iteration   2: 1726.798 ns/op
Iteration   3: 1757.364 ns/op
Iteration   4: 1726.643 ns/op
Iteration   5: 1767.102 ns/op
Iteration   6: 1729.618 ns/op
Iteration   7: 1780.288 ns/op
Iteration   8: 1726.928 ns/op
Iteration   9: 1736.102 ns/op
Iteration  10: 1726.455 ns/op
Iteration  11: 1735.889 ns/op
Iteration  12: 1726.959 ns/op
Iteration  13: 1735.260 ns/op
Iteration  14: 1726.606 ns/op
Iteration  15: 1735.562 ns/op
Iteration  16: 1727.632 ns/op
Iteration  17: 1736.005 ns/op
Iteration  18: 1727.749 ns/op
Iteration  19: 1735.820 ns/op
Iteration  20: 1727.453 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2062.112 ns/op
# Warmup Iteration   2: 2008.452 ns/op
# Warmup Iteration   3: 1682.927 ns/op
# Warmup Iteration   4: 1608.138 ns/op
# Warmup Iteration   5: 1592.625 ns/op
Iteration   1: 1612.350 ns/op
Iteration   2: 1591.953 ns/op
Iteration   3: 1618.652 ns/op
Iteration   4: 1592.317 ns/op
Iteration   5: 1626.325 ns/op
Iteration   6: 1641.313 ns/op
Iteration   7: 1592.592 ns/op
Iteration   8: 1602.234 ns/op
Iteration   9: 1587.650 ns/op
Iteration  10: 1599.747 ns/op
Iteration  11: 1592.254 ns/op
Iteration  12: 1599.319 ns/op
Iteration  13: 1587.095 ns/op
Iteration  14: 1598.731 ns/op
Iteration  15: 1591.177 ns/op
Iteration  16: 1606.765 ns/op
Iteration  17: 1591.044 ns/op
Iteration  18: 1599.641 ns/op
Iteration  19: 1591.183 ns/op
Iteration  20: 1604.993 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2060.384 ns/op
# Warmup Iteration   2: 2005.395 ns/op
# Warmup Iteration   3: 1681.240 ns/op
# Warmup Iteration   4: 1600.094 ns/op
# Warmup Iteration   5: 1593.426 ns/op
Iteration   1: 1609.589 ns/op
Iteration   2: 1587.266 ns/op
Iteration   3: 1613.360 ns/op
Iteration   4: 1583.501 ns/op
Iteration   5: 1621.873 ns/op
Iteration   6: 1632.268 ns/op
Iteration   7: 1586.856 ns/op
Iteration   8: 1597.299 ns/op
Iteration   9: 1582.478 ns/op
Iteration  10: 1600.486 ns/op
Iteration  11: 1587.334 ns/op
Iteration  12: 1595.207 ns/op
Iteration  13: 1582.264 ns/op
Iteration  14: 1594.904 ns/op
Iteration  15: 1586.170 ns/op
Iteration  16: 1597.142 ns/op
Iteration  17: 1586.363 ns/op
Iteration  18: 1594.845 ns/op
Iteration  19: 1586.350 ns/op
Iteration  20: 1605.100 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1986.101 ns/op
# Warmup Iteration   2: 1935.339 ns/op
# Warmup Iteration   3: 1574.286 ns/op
# Warmup Iteration   4: 1528.123 ns/op
# Warmup Iteration   5: 1518.738 ns/op
Iteration   1: 1537.496 ns/op
Iteration   2: 1540.227 ns/op
Iteration   3: 1518.162 ns/op
Iteration   4: 1550.545 ns/op
Iteration   5: 1515.171 ns/op
Iteration   6: 1560.850 ns/op
Iteration   7: 1518.783 ns/op
Iteration   8: 1531.088 ns/op
Iteration   9: 1519.131 ns/op
Iteration  10: 1526.763 ns/op
Iteration  11: 1525.999 ns/op
Iteration  12: 1518.734 ns/op
Iteration  13: 1525.596 ns/op
Iteration  14: 1518.932 ns/op
Iteration  15: 1527.600 ns/op
Iteration  16: 1519.205 ns/op
Iteration  17: 1530.433 ns/op
Iteration  18: 1519.036 ns/op
Iteration  19: 1527.593 ns/op
Iteration  20: 1542.922 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1612.231 Â±(99.9%) 23.637 ns/op [Average]
  (min, avg, max) = (1515.171, 1612.231, 1780.288), stdev = 69.694
  CI (99.9%): [1588.594, 1635.868] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = %:2uxB!R{_dP.	e\K167a\!B#)Vu8RR1-Pc(m"+Xa&9,J@MG-XcYJ6~>Y]2KUycbv%iN4h.uNN=|OD$h?[Q(N/;XDaW!)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2151.311 ns/op
# Warmup Iteration   2: 2014.909 ns/op
# Warmup Iteration   3: 1691.206 ns/op
# Warmup Iteration   4: 1610.721 ns/op
# Warmup Iteration   5: 1594.971 ns/op
Iteration   1: 1616.861 ns/op
Iteration   2: 1594.890 ns/op
Iteration   3: 1621.643 ns/op
Iteration   4: 1631.896 ns/op
Iteration   5: 1593.689 ns/op
Iteration   6: 1639.796 ns/op
Iteration   7: 1594.430 ns/op
Iteration   8: 1604.015 ns/op
Iteration   9: 1600.625 ns/op
Iteration  10: 1611.751 ns/op
Iteration  11: 1595.086 ns/op
Iteration  12: 1610.740 ns/op
Iteration  13: 1594.317 ns/op
Iteration  14: 1603.172 ns/op
Iteration  15: 1594.114 ns/op
Iteration  16: 1601.765 ns/op
Iteration  17: 1602.501 ns/op
Iteration  18: 1593.877 ns/op
Iteration  19: 1604.260 ns/op
Iteration  20: 1593.266 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2149.176 ns/op
# Warmup Iteration   2: 2015.730 ns/op
# Warmup Iteration   3: 1689.142 ns/op
# Warmup Iteration   4: 1610.607 ns/op
# Warmup Iteration   5: 1599.647 ns/op
Iteration   1: 1617.957 ns/op
Iteration   2: 1598.536 ns/op
Iteration   3: 1623.535 ns/op
Iteration   4: 1631.162 ns/op
Iteration   5: 1596.323 ns/op
Iteration   6: 1649.024 ns/op
Iteration   7: 1596.612 ns/op
Iteration   8: 1604.767 ns/op
Iteration   9: 1597.438 ns/op
Iteration  10: 1603.268 ns/op
Iteration  11: 1594.710 ns/op
Iteration  12: 1602.961 ns/op
Iteration  13: 1596.385 ns/op
Iteration  14: 1604.875 ns/op
Iteration  15: 1596.186 ns/op
Iteration  16: 1604.808 ns/op
Iteration  17: 1604.912 ns/op
Iteration  18: 1595.216 ns/op
Iteration  19: 1604.248 ns/op
Iteration  20: 1596.151 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2129.747 ns/op
# Warmup Iteration   2: 2026.652 ns/op
# Warmup Iteration   3: 1703.286 ns/op
# Warmup Iteration   4: 1625.247 ns/op
# Warmup Iteration   5: 1610.093 ns/op
Iteration   1: 1632.153 ns/op
Iteration   2: 1609.333 ns/op
Iteration   3: 1635.728 ns/op
Iteration   4: 1624.816 ns/op
Iteration   5: 1629.719 ns/op
Iteration   6: 1655.806 ns/op
Iteration   7: 1610.328 ns/op
Iteration   8: 1618.068 ns/op
Iteration   9: 1610.041 ns/op
Iteration  10: 1625.839 ns/op
Iteration  11: 1609.897 ns/op
Iteration  12: 1617.493 ns/op
Iteration  13: 1610.407 ns/op
Iteration  14: 1619.890 ns/op
Iteration  15: 1609.894 ns/op
Iteration  16: 1621.312 ns/op
Iteration  17: 1610.272 ns/op
Iteration  18: 1630.188 ns/op
Iteration  19: 1628.008 ns/op
Iteration  20: 1611.360 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2157.553 ns/op
# Warmup Iteration   2: 2025.692 ns/op
# Warmup Iteration   3: 1699.336 ns/op
# Warmup Iteration   4: 1620.598 ns/op
# Warmup Iteration   5: 1604.736 ns/op
Iteration   1: 1626.040 ns/op
Iteration   2: 1604.685 ns/op
Iteration   3: 1631.460 ns/op
Iteration   4: 1640.789 ns/op
Iteration   5: 1605.071 ns/op
Iteration   6: 1652.003 ns/op
Iteration   7: 1605.236 ns/op
Iteration   8: 1618.751 ns/op
Iteration   9: 1605.281 ns/op
Iteration  10: 1618.066 ns/op
Iteration  11: 1604.878 ns/op
Iteration  12: 1614.808 ns/op
Iteration  13: 1605.215 ns/op
Iteration  14: 1615.749 ns/op
Iteration  15: 1605.165 ns/op
Iteration  16: 1616.067 ns/op
Iteration  17: 1618.766 ns/op
Iteration  18: 1605.198 ns/op
Iteration  19: 1615.879 ns/op
Iteration  20: 1604.953 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2064.527 ns/op
# Warmup Iteration   2: 1954.059 ns/op
# Warmup Iteration   3: 1603.318 ns/op
# Warmup Iteration   4: 1549.488 ns/op
# Warmup Iteration   5: 1534.986 ns/op
Iteration   1: 1555.290 ns/op
Iteration   2: 1561.272 ns/op
Iteration   3: 1534.445 ns/op
Iteration   4: 1572.000 ns/op
Iteration   5: 1533.751 ns/op
Iteration   6: 1577.209 ns/op
Iteration   7: 1534.667 ns/op
Iteration   8: 1542.203 ns/op
Iteration   9: 1534.405 ns/op
Iteration  10: 1541.167 ns/op
Iteration  11: 1541.356 ns/op
Iteration  12: 1533.700 ns/op
Iteration  13: 1540.858 ns/op
Iteration  14: 1533.748 ns/op
Iteration  15: 1542.940 ns/op
Iteration  16: 1534.370 ns/op
Iteration  17: 1542.380 ns/op
Iteration  18: 1543.567 ns/op
Iteration  19: 1533.510 ns/op
Iteration  20: 1546.263 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1598.355 Â±(99.9%) 10.451 ns/op [Average]
  (min, avg, max) = (1533.510, 1598.355, 1655.806), stdev = 30.815
  CI (99.9%): [1587.904, 1608.806] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                      (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  %:2uxB!R{_dP.	e\K167a\!B#)Vu8RR1-Pc(m"+Xa&9,J@MG-XcYJ6~>Y]2KUycbv%iN4h.uNN=|OD$h?[Q(N/;XDaW!  avgt  100  1612.231 Â± 23.637  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  %:2uxB!R{_dP.	e\K167a\!B#)Vu8RR1-Pc(m"+Xa&9,J@MG-XcYJ6~>Y]2KUycbv%iN4h.uNN=|OD$h?[Q(N/;XDaW!  avgt  100  1598.355 Â± 10.451  ns/op

Benchmark result is saved to split_precompiled_regex_105_93_NonMatch.csv
