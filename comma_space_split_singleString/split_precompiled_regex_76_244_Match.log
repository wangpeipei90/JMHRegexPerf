# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  


		 	   
 		
	 	  	 	  



 
	
	
,  	



	 

		
	 	
 		 
 	      	
 
    


 	 
 			

				  
		



   
	     
	 
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1308.513 ns/op
# Warmup Iteration   2: 1006.412 ns/op
# Warmup Iteration   3: 839.839 ns/op
# Warmup Iteration   4: 842.712 ns/op
# Warmup Iteration   5: 845.891 ns/op
Iteration   1: 850.536 ns/op
Iteration   2: 856.008 ns/op
Iteration   3: 836.407 ns/op
Iteration   4: 845.135 ns/op
Iteration   5: 838.112 ns/op
Iteration   6: 843.110 ns/op
Iteration   7: 832.221 ns/op
Iteration   8: 836.983 ns/op
Iteration   9: 837.048 ns/op
Iteration  10: 841.261 ns/op
Iteration  11: 837.389 ns/op
Iteration  12: 837.638 ns/op
Iteration  13: 836.136 ns/op
Iteration  14: 833.912 ns/op
Iteration  15: 834.260 ns/op
Iteration  16: 833.907 ns/op
Iteration  17: 834.888 ns/op
Iteration  18: 834.646 ns/op
Iteration  19: 834.057 ns/op
Iteration  20: 832.123 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1408.435 ns/op
# Warmup Iteration   2: 1153.277 ns/op
# Warmup Iteration   3: 932.381 ns/op
# Warmup Iteration   4: 935.520 ns/op
# Warmup Iteration   5: 939.288 ns/op
Iteration   1: 938.712 ns/op
Iteration   2: 928.200 ns/op
Iteration   3: 950.761 ns/op
Iteration   4: 930.128 ns/op
Iteration   5: 928.547 ns/op
Iteration   6: 927.516 ns/op
Iteration   7: 923.621 ns/op
Iteration   8: 927.706 ns/op
Iteration   9: 927.192 ns/op
Iteration  10: 927.520 ns/op
Iteration  11: 927.419 ns/op
Iteration  12: 928.340 ns/op
Iteration  13: 924.242 ns/op
Iteration  14: 927.918 ns/op
Iteration  15: 925.752 ns/op
Iteration  16: 925.775 ns/op
Iteration  17: 926.533 ns/op
Iteration  18: 934.519 ns/op
Iteration  19: 923.766 ns/op
Iteration  20: 926.848 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1393.646 ns/op
# Warmup Iteration   2: 1143.359 ns/op
# Warmup Iteration   3: 935.158 ns/op
# Warmup Iteration   4: 938.692 ns/op
# Warmup Iteration   5: 942.371 ns/op
Iteration   1: 935.043 ns/op
Iteration   2: 939.360 ns/op
Iteration   3: 951.854 ns/op
Iteration   4: 931.125 ns/op
Iteration   5: 930.648 ns/op
Iteration   6: 930.812 ns/op
Iteration   7: 927.038 ns/op
Iteration   8: 930.348 ns/op
Iteration   9: 930.060 ns/op
Iteration  10: 930.601 ns/op
Iteration  11: 930.409 ns/op
Iteration  12: 931.462 ns/op
Iteration  13: 933.175 ns/op
Iteration  14: 936.132 ns/op
Iteration  15: 928.715 ns/op
Iteration  16: 929.556 ns/op
Iteration  17: 929.154 ns/op
Iteration  18: 929.697 ns/op
Iteration  19: 926.984 ns/op
Iteration  20: 930.037 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1394.917 ns/op
# Warmup Iteration   2: 1144.149 ns/op
# Warmup Iteration   3: 932.488 ns/op
# Warmup Iteration   4: 935.654 ns/op
# Warmup Iteration   5: 939.887 ns/op
Iteration   1: 934.827 ns/op
Iteration   2: 932.552 ns/op
Iteration   3: 949.689 ns/op
Iteration   4: 929.064 ns/op
Iteration   5: 929.298 ns/op
Iteration   6: 929.111 ns/op
Iteration   7: 923.788 ns/op
Iteration   8: 929.363 ns/op
Iteration   9: 929.041 ns/op
Iteration  10: 927.819 ns/op
Iteration  11: 928.253 ns/op
Iteration  12: 928.505 ns/op
Iteration  13: 923.876 ns/op
Iteration  14: 949.642 ns/op
Iteration  15: 926.791 ns/op
Iteration  16: 926.164 ns/op
Iteration  17: 928.198 ns/op
Iteration  18: 928.939 ns/op
Iteration  19: 924.127 ns/op
Iteration  20: 928.901 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1400.369 ns/op
# Warmup Iteration   2: 1144.515 ns/op
# Warmup Iteration   3: 936.338 ns/op
# Warmup Iteration   4: 937.362 ns/op
# Warmup Iteration   5: 941.773 ns/op
Iteration   1: 932.436 ns/op
Iteration   2: 939.977 ns/op
Iteration   3: 951.385 ns/op
Iteration   4: 931.970 ns/op
Iteration   5: 931.281 ns/op
Iteration   6: 931.087 ns/op
Iteration   7: 926.521 ns/op
Iteration   8: 930.853 ns/op
Iteration   9: 930.833 ns/op
Iteration  10: 932.167 ns/op
Iteration  11: 934.923 ns/op
Iteration  12: 932.638 ns/op
Iteration  13: 927.199 ns/op
Iteration  14: 932.356 ns/op
Iteration  15: 929.320 ns/op
Iteration  16: 929.873 ns/op
Iteration  17: 931.824 ns/op
Iteration  18: 929.658 ns/op
Iteration  19: 926.946 ns/op
Iteration  20: 931.177 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  912.414 Â±(99.9%) 12.801 ns/op [Average]
  (min, avg, max) = (832.123, 912.414, 951.854), stdev = 37.743
  CI (99.9%): [899.613, 925.214] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  


		 	   
 		
	 	  	 	  



 
	
	
,  	



	 

		
	 	
 		 
 	      	
 
    


 	 
 			

				  
		



   
	     
	 
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1402.379 ns/op
# Warmup Iteration   2: 1162.521 ns/op
# Warmup Iteration   3: 955.828 ns/op
# Warmup Iteration   4: 956.242 ns/op
# Warmup Iteration   5: 960.301 ns/op
Iteration   1: 951.611 ns/op
Iteration   2: 959.669 ns/op
Iteration   3: 970.367 ns/op
Iteration   4: 947.986 ns/op
Iteration   5: 948.503 ns/op
Iteration   6: 948.407 ns/op
Iteration   7: 943.353 ns/op
Iteration   8: 948.742 ns/op
Iteration   9: 948.322 ns/op
Iteration  10: 954.030 ns/op
Iteration  11: 948.614 ns/op
Iteration  12: 949.100 ns/op
Iteration  13: 942.682 ns/op
Iteration  14: 958.819 ns/op
Iteration  15: 945.678 ns/op
Iteration  16: 945.060 ns/op
Iteration  17: 948.020 ns/op
Iteration  18: 944.751 ns/op
Iteration  19: 942.516 ns/op
Iteration  20: 947.045 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1387.386 ns/op
# Warmup Iteration   2: 1159.376 ns/op
# Warmup Iteration   3: 951.385 ns/op
# Warmup Iteration   4: 953.677 ns/op
# Warmup Iteration   5: 958.496 ns/op
Iteration   1: 962.814 ns/op
Iteration   2: 942.082 ns/op
Iteration   3: 968.789 ns/op
Iteration   4: 950.985 ns/op
Iteration   5: 946.757 ns/op
Iteration   6: 947.145 ns/op
Iteration   7: 947.059 ns/op
Iteration   8: 942.045 ns/op
Iteration   9: 947.314 ns/op
Iteration  10: 947.061 ns/op
Iteration  11: 948.330 ns/op
Iteration  12: 947.773 ns/op
Iteration  13: 957.520 ns/op
Iteration  14: 941.731 ns/op
Iteration  15: 965.278 ns/op
Iteration  16: 944.124 ns/op
Iteration  17: 944.140 ns/op
Iteration  18: 949.482 ns/op
Iteration  19: 946.244 ns/op
Iteration  20: 942.029 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1397.428 ns/op
# Warmup Iteration   2: 1152.487 ns/op
# Warmup Iteration   3: 949.525 ns/op
# Warmup Iteration   4: 948.371 ns/op
# Warmup Iteration   5: 952.816 ns/op
Iteration   1: 957.958 ns/op
Iteration   2: 936.556 ns/op
Iteration   3: 962.901 ns/op
Iteration   4: 941.131 ns/op
Iteration   5: 941.047 ns/op
Iteration   6: 944.863 ns/op
Iteration   7: 944.638 ns/op
Iteration   8: 937.720 ns/op
Iteration   9: 945.468 ns/op
Iteration  10: 946.370 ns/op
Iteration  11: 941.917 ns/op
Iteration  12: 955.902 ns/op
Iteration  13: 961.245 ns/op
Iteration  14: 936.165 ns/op
Iteration  15: 940.713 ns/op
Iteration  16: 937.953 ns/op
Iteration  17: 940.006 ns/op
Iteration  18: 939.667 ns/op
Iteration  19: 939.466 ns/op
Iteration  20: 935.785 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1390.455 ns/op
# Warmup Iteration   2: 1168.433 ns/op
# Warmup Iteration   3: 965.145 ns/op
# Warmup Iteration   4: 967.293 ns/op
# Warmup Iteration   5: 977.311 ns/op
Iteration   1: 955.720 ns/op
Iteration   2: 975.976 ns/op
Iteration   3: 987.677 ns/op
Iteration   4: 960.715 ns/op
Iteration   5: 961.122 ns/op
Iteration   6: 961.297 ns/op
Iteration   7: 955.238 ns/op
Iteration   8: 960.275 ns/op
Iteration   9: 960.661 ns/op
Iteration  10: 960.940 ns/op
Iteration  11: 963.664 ns/op
Iteration  12: 956.748 ns/op
Iteration  13: 960.936 ns/op
Iteration  14: 960.306 ns/op
Iteration  15: 956.935 ns/op
Iteration  16: 964.299 ns/op
Iteration  17: 957.507 ns/op
Iteration  18: 954.786 ns/op
Iteration  19: 957.340 ns/op
Iteration  20: 957.751 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1404.362 ns/op
# Warmup Iteration   2: 1157.315 ns/op
# Warmup Iteration   3: 949.720 ns/op
# Warmup Iteration   4: 953.382 ns/op
# Warmup Iteration   5: 956.205 ns/op
Iteration   1: 962.351 ns/op
Iteration   2: 941.166 ns/op
Iteration   3: 967.391 ns/op
Iteration   4: 946.465 ns/op
Iteration   5: 947.489 ns/op
Iteration   6: 948.290 ns/op
Iteration   7: 947.123 ns/op
Iteration   8: 940.542 ns/op
Iteration   9: 953.929 ns/op
Iteration  10: 946.672 ns/op
Iteration  11: 946.714 ns/op
Iteration  12: 946.525 ns/op
Iteration  13: 947.519 ns/op
Iteration  14: 940.401 ns/op
Iteration  15: 942.382 ns/op
Iteration  16: 949.878 ns/op
Iteration  17: 945.860 ns/op
Iteration  18: 943.225 ns/op
Iteration  19: 943.129 ns/op
Iteration  20: 940.516 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  950.469 Â±(99.9%) 3.204 ns/op [Average]
  (min, avg, max) = (935.785, 950.469, 987.677), stdev = 9.447
  CI (99.9%): [947.265, 953.673] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                             (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   


		 	   
 		
	 	  	 	  



 
	
	
,  	



	 

		
	 	
 		 
 	      	
 
    


 	 
 			

				  
		



   
	     
	 
  avgt  100  912.414 Â± 12.801  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   


		 	   
 		
	 	  	 	  



 
	
	
,  	



	 

		
	 	
 		 
 	      	
 
    


 	 
 			

				  
		



   
	     
	 
  avgt  100  950.469 Â±  3.204  ns/op

Benchmark result is saved to split_precompiled_regex_76_244_Match.csv
