# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
	
 	

 
      	
    			 				
 
			 	


  				
		 


  	
, 			
	 	 



 		
   	 
	
		
 	  
   	  	

 		  
		  	 




	




   
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1311.927 ns/op
# Warmup Iteration   2: 1019.094 ns/op
# Warmup Iteration   3: 852.784 ns/op
# Warmup Iteration   4: 854.412 ns/op
# Warmup Iteration   5: 855.218 ns/op
Iteration   1: 860.123 ns/op
Iteration   2: 864.993 ns/op
Iteration   3: 846.264 ns/op
Iteration   4: 845.776 ns/op
Iteration   5: 846.384 ns/op
Iteration   6: 841.999 ns/op
Iteration   7: 844.578 ns/op
Iteration   8: 845.273 ns/op
Iteration   9: 844.907 ns/op
Iteration  10: 845.368 ns/op
Iteration  11: 846.716 ns/op
Iteration  12: 848.294 ns/op
Iteration  13: 846.822 ns/op
Iteration  14: 843.722 ns/op
Iteration  15: 842.704 ns/op
Iteration  16: 842.765 ns/op
Iteration  17: 843.088 ns/op
Iteration  18: 840.691 ns/op
Iteration  19: 842.995 ns/op
Iteration  20: 842.986 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1290.402 ns/op
# Warmup Iteration   2: 982.766 ns/op
# Warmup Iteration   3: 827.949 ns/op
# Warmup Iteration   4: 830.480 ns/op
# Warmup Iteration   5: 833.868 ns/op
Iteration   1: 838.209 ns/op
Iteration   2: 843.228 ns/op
Iteration   3: 824.159 ns/op
Iteration   4: 824.331 ns/op
Iteration   5: 823.938 ns/op
Iteration   6: 823.778 ns/op
Iteration   7: 823.446 ns/op
Iteration   8: 824.313 ns/op
Iteration   9: 823.630 ns/op
Iteration  10: 820.093 ns/op
Iteration  11: 823.451 ns/op
Iteration  12: 823.316 ns/op
Iteration  13: 821.226 ns/op
Iteration  14: 827.503 ns/op
Iteration  15: 821.473 ns/op
Iteration  16: 823.244 ns/op
Iteration  17: 821.897 ns/op
Iteration  18: 821.955 ns/op
Iteration  19: 823.429 ns/op
Iteration  20: 823.974 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1286.760 ns/op
# Warmup Iteration   2: 989.015 ns/op
# Warmup Iteration   3: 824.877 ns/op
# Warmup Iteration   4: 827.316 ns/op
# Warmup Iteration   5: 830.527 ns/op
Iteration   1: 835.502 ns/op
Iteration   2: 840.224 ns/op
Iteration   3: 821.857 ns/op
Iteration   4: 820.333 ns/op
Iteration   5: 820.436 ns/op
Iteration   6: 820.880 ns/op
Iteration   7: 820.916 ns/op
Iteration   8: 822.599 ns/op
Iteration   9: 824.337 ns/op
Iteration  10: 821.436 ns/op
Iteration  11: 817.769 ns/op
Iteration  12: 821.537 ns/op
Iteration  13: 820.945 ns/op
Iteration  14: 819.261 ns/op
Iteration  15: 820.061 ns/op
Iteration  16: 819.170 ns/op
Iteration  17: 819.330 ns/op
Iteration  18: 820.782 ns/op
Iteration  19: 855.772 ns/op
Iteration  20: 831.660 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1264.068 ns/op
# Warmup Iteration   2: 952.237 ns/op
# Warmup Iteration   3: 801.376 ns/op
# Warmup Iteration   4: 804.216 ns/op
# Warmup Iteration   5: 806.959 ns/op
Iteration   1: 811.183 ns/op
Iteration   2: 815.265 ns/op
Iteration   3: 797.252 ns/op
Iteration   4: 797.432 ns/op
Iteration   5: 797.867 ns/op
Iteration   6: 797.314 ns/op
Iteration   7: 797.542 ns/op
Iteration   8: 797.743 ns/op
Iteration   9: 797.520 ns/op
Iteration  10: 798.409 ns/op
Iteration  11: 798.790 ns/op
Iteration  12: 798.682 ns/op
Iteration  13: 800.684 ns/op
Iteration  14: 803.908 ns/op
Iteration  15: 795.661 ns/op
Iteration  16: 795.866 ns/op
Iteration  17: 796.076 ns/op
Iteration  18: 795.937 ns/op
Iteration  19: 796.008 ns/op
Iteration  20: 796.076 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1408.200 ns/op
# Warmup Iteration   2: 1148.767 ns/op
# Warmup Iteration   3: 939.200 ns/op
# Warmup Iteration   4: 941.527 ns/op
# Warmup Iteration   5: 945.852 ns/op
Iteration   1: 935.031 ns/op
Iteration   2: 944.776 ns/op
Iteration   3: 955.666 ns/op
Iteration   4: 936.262 ns/op
Iteration   5: 934.222 ns/op
Iteration   6: 933.853 ns/op
Iteration   7: 929.548 ns/op
Iteration   8: 934.682 ns/op
Iteration   9: 934.139 ns/op
Iteration  10: 934.606 ns/op
Iteration  11: 934.434 ns/op
Iteration  12: 934.404 ns/op
Iteration  13: 929.781 ns/op
Iteration  14: 934.971 ns/op
Iteration  15: 932.898 ns/op
Iteration  16: 933.861 ns/op
Iteration  17: 933.924 ns/op
Iteration  18: 942.325 ns/op
Iteration  19: 935.785 ns/op
Iteration  20: 942.422 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  846.347 Â±(99.9%) 16.311 ns/op [Average]
  (min, avg, max) = (795.661, 846.347, 955.666), stdev = 48.094
  CI (99.9%): [830.035, 862.658] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
	
 	

 
      	
    			 				
 
			 	


  				
		 


  	
, 			
	 	 



 		
   	 
	
		
 	  
   	  	

 		  
		  	 




	




   
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1297.582 ns/op
# Warmup Iteration   2: 1007.393 ns/op
# Warmup Iteration   3: 842.001 ns/op
# Warmup Iteration   4: 846.146 ns/op
# Warmup Iteration   5: 849.624 ns/op
Iteration   1: 854.681 ns/op
Iteration   2: 858.657 ns/op
Iteration   3: 839.341 ns/op
Iteration   4: 839.391 ns/op
Iteration   5: 839.168 ns/op
Iteration   6: 839.746 ns/op
Iteration   7: 839.124 ns/op
Iteration   8: 840.641 ns/op
Iteration   9: 840.100 ns/op
Iteration  10: 839.343 ns/op
Iteration  11: 835.469 ns/op
Iteration  12: 838.840 ns/op
Iteration  13: 835.537 ns/op
Iteration  14: 836.800 ns/op
Iteration  15: 835.856 ns/op
Iteration  16: 835.780 ns/op
Iteration  17: 836.779 ns/op
Iteration  18: 835.425 ns/op
Iteration  19: 837.376 ns/op
Iteration  20: 838.633 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1410.860 ns/op
# Warmup Iteration   2: 1202.047 ns/op
# Warmup Iteration   3: 982.214 ns/op
# Warmup Iteration   4: 985.485 ns/op
# Warmup Iteration   5: 989.268 ns/op
Iteration   1: 972.045 ns/op
Iteration   2: 994.115 ns/op
Iteration   3: 998.896 ns/op
Iteration   4: 977.899 ns/op
Iteration   5: 978.008 ns/op
Iteration   6: 972.186 ns/op
Iteration   7: 977.438 ns/op
Iteration   8: 977.890 ns/op
Iteration   9: 976.985 ns/op
Iteration  10: 977.228 ns/op
Iteration  11: 971.587 ns/op
Iteration  12: 977.369 ns/op
Iteration  13: 976.826 ns/op
Iteration  14: 992.657 ns/op
Iteration  15: 974.971 ns/op
Iteration  16: 972.064 ns/op
Iteration  17: 973.998 ns/op
Iteration  18: 974.687 ns/op
Iteration  19: 975.941 ns/op
Iteration  20: 975.537 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1418.222 ns/op
# Warmup Iteration   2: 1213.921 ns/op
# Warmup Iteration   3: 992.229 ns/op
# Warmup Iteration   4: 995.098 ns/op
# Warmup Iteration   5: 988.888 ns/op
Iteration   1: 994.569 ns/op
Iteration   2: 1004.813 ns/op
Iteration   3: 1014.358 ns/op
Iteration   4: 989.014 ns/op
Iteration   5: 988.665 ns/op
Iteration   6: 983.329 ns/op
Iteration   7: 987.348 ns/op
Iteration   8: 988.295 ns/op
Iteration   9: 988.451 ns/op
Iteration  10: 988.431 ns/op
Iteration  11: 983.535 ns/op
Iteration  12: 988.526 ns/op
Iteration  13: 989.566 ns/op
Iteration  14: 989.198 ns/op
Iteration  15: 996.403 ns/op
Iteration  16: 983.606 ns/op
Iteration  17: 1019.942 ns/op
Iteration  18: 987.001 ns/op
Iteration  19: 985.694 ns/op
Iteration  20: 983.527 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1396.897 ns/op
# Warmup Iteration   2: 1181.775 ns/op
# Warmup Iteration   3: 970.419 ns/op
# Warmup Iteration   4: 973.395 ns/op
# Warmup Iteration   5: 977.347 ns/op
Iteration   1: 961.775 ns/op
Iteration   2: 982.321 ns/op
Iteration   3: 988.375 ns/op
Iteration   4: 966.254 ns/op
Iteration   5: 965.912 ns/op
Iteration   6: 965.470 ns/op
Iteration   7: 961.770 ns/op
Iteration   8: 966.004 ns/op
Iteration   9: 965.568 ns/op
Iteration  10: 966.657 ns/op
Iteration  11: 969.315 ns/op
Iteration  12: 961.110 ns/op
Iteration  13: 972.763 ns/op
Iteration  14: 967.677 ns/op
Iteration  15: 966.858 ns/op
Iteration  16: 963.934 ns/op
Iteration  17: 967.647 ns/op
Iteration  18: 961.122 ns/op
Iteration  19: 966.354 ns/op
Iteration  20: 964.938 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1410.236 ns/op
# Warmup Iteration   2: 1167.477 ns/op
# Warmup Iteration   3: 960.556 ns/op
# Warmup Iteration   4: 962.679 ns/op
# Warmup Iteration   5: 966.341 ns/op
Iteration   1: 952.706 ns/op
Iteration   2: 969.058 ns/op
Iteration   3: 977.767 ns/op
Iteration   4: 955.897 ns/op
Iteration   5: 955.578 ns/op
Iteration   6: 954.421 ns/op
Iteration   7: 951.097 ns/op
Iteration   8: 955.541 ns/op
Iteration   9: 956.951 ns/op
Iteration  10: 958.202 ns/op
Iteration  11: 956.897 ns/op
Iteration  12: 970.124 ns/op
Iteration  13: 955.492 ns/op
Iteration  14: 957.423 ns/op
Iteration  15: 966.283 ns/op
Iteration  16: 953.879 ns/op
Iteration  17: 953.573 ns/op
Iteration  18: 954.485 ns/op
Iteration  19: 950.817 ns/op
Iteration  20: 956.088 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  947.134 Â±(99.9%) 18.853 ns/op [Average]
  (min, avg, max) = (835.425, 947.134, 1019.942), stdev = 55.587
  CI (99.9%): [928.281, 965.986] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                    (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
	
 	

 
      	
    			 				
 
			 	


  				
		 


  	
, 			
	 	 



 		
   	 
	
		
 	  
   	  	

 		  
		  	 




	




   
  avgt  100  846.347 Â± 16.311  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
	
 	

 
      	
    			 				
 
			 	


  				
		 


  	
, 			
	 	 



 		
   	 
	
		
 	  
   	  	

 		  
		  	 




	




   
  avgt  100  947.134 Â± 18.853  ns/op

Benchmark result is saved to split_precompiled_regex_108_251_Match.csv
