# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  	

	
   		  
 	 	
			 

	
 			

  
	  
	


			 	  
 

	   
	 		 		 		 	  	

	 	   	
  


   ,

			


	
	

 	
  
 	   
		
 		

	 
  	   	   		


		 			  
 		  
	 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1509.861 ns/op
# Warmup Iteration   2: 1330.182 ns/op
# Warmup Iteration   3: 1043.455 ns/op
# Warmup Iteration   4: 1031.646 ns/op
# Warmup Iteration   5: 1045.352 ns/op
Iteration   1: 1048.619 ns/op
Iteration   2: 1053.699 ns/op
Iteration   3: 1052.653 ns/op
Iteration   4: 1037.972 ns/op
Iteration   5: 1037.313 ns/op
Iteration   6: 1035.552 ns/op
Iteration   7: 1031.505 ns/op
Iteration   8: 1035.332 ns/op
Iteration   9: 1035.068 ns/op
Iteration  10: 1035.109 ns/op
Iteration  11: 1030.760 ns/op
Iteration  12: 1036.441 ns/op
Iteration  13: 1037.242 ns/op
Iteration  14: 1037.158 ns/op
Iteration  15: 1031.106 ns/op
Iteration  16: 1041.713 ns/op
Iteration  17: 1041.691 ns/op
Iteration  18: 1036.290 ns/op
Iteration  19: 1031.213 ns/op
Iteration  20: 1036.715 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1491.724 ns/op
# Warmup Iteration   2: 1281.397 ns/op
# Warmup Iteration   3: 1027.531 ns/op
# Warmup Iteration   4: 1017.207 ns/op
# Warmup Iteration   5: 1030.291 ns/op
Iteration   1: 1033.406 ns/op
Iteration   2: 1038.133 ns/op
Iteration   3: 1045.343 ns/op
Iteration   4: 1016.370 ns/op
Iteration   5: 1024.889 ns/op
Iteration   6: 1021.958 ns/op
Iteration   7: 1021.286 ns/op
Iteration   8: 1016.627 ns/op
Iteration   9: 1022.429 ns/op
Iteration  10: 1022.823 ns/op
Iteration  11: 1023.045 ns/op
Iteration  12: 1017.684 ns/op
Iteration  13: 1022.717 ns/op
Iteration  14: 1022.952 ns/op
Iteration  15: 1023.820 ns/op
Iteration  16: 1017.485 ns/op
Iteration  17: 1019.271 ns/op
Iteration  18: 1020.612 ns/op
Iteration  19: 1019.129 ns/op
Iteration  20: 1017.359 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1520.371 ns/op
# Warmup Iteration   2: 1327.606 ns/op
# Warmup Iteration   3: 1058.786 ns/op
# Warmup Iteration   4: 1050.048 ns/op
# Warmup Iteration   5: 1062.297 ns/op
Iteration   1: 1065.761 ns/op
Iteration   2: 1070.654 ns/op
Iteration   3: 1049.223 ns/op
Iteration   4: 1078.375 ns/op
Iteration   5: 1056.984 ns/op
Iteration   6: 1054.129 ns/op
Iteration   7: 1049.713 ns/op
Iteration   8: 1053.746 ns/op
Iteration   9: 1053.859 ns/op
Iteration  10: 1053.897 ns/op
Iteration  11: 1048.464 ns/op
Iteration  12: 1053.493 ns/op
Iteration  13: 1054.046 ns/op
Iteration  14: 1054.740 ns/op
Iteration  15: 1048.885 ns/op
Iteration  16: 1058.474 ns/op
Iteration  17: 1055.471 ns/op
Iteration  18: 1049.379 ns/op
Iteration  19: 1056.469 ns/op
Iteration  20: 1055.263 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1486.170 ns/op
# Warmup Iteration   2: 1282.205 ns/op
# Warmup Iteration   3: 1031.572 ns/op
# Warmup Iteration   4: 1020.520 ns/op
# Warmup Iteration   5: 1037.790 ns/op
Iteration   1: 1041.478 ns/op
Iteration   2: 1044.317 ns/op
Iteration   3: 1051.069 ns/op
Iteration   4: 1020.851 ns/op
Iteration   5: 1027.780 ns/op
Iteration   6: 1026.815 ns/op
Iteration   7: 1027.141 ns/op
Iteration   8: 1021.275 ns/op
Iteration   9: 1031.572 ns/op
Iteration  10: 1031.247 ns/op
Iteration  11: 1029.031 ns/op
Iteration  12: 1020.993 ns/op
Iteration  13: 1028.518 ns/op
Iteration  14: 1032.166 ns/op
Iteration  15: 1034.664 ns/op
Iteration  16: 1021.154 ns/op
Iteration  17: 1027.279 ns/op
Iteration  18: 1035.198 ns/op
Iteration  19: 1023.730 ns/op
Iteration  20: 1021.241 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1532.127 ns/op
# Warmup Iteration   2: 1386.400 ns/op
# Warmup Iteration   3: 1066.725 ns/op
# Warmup Iteration   4: 1075.936 ns/op
# Warmup Iteration   5: 1080.842 ns/op
Iteration   1: 1084.867 ns/op
Iteration   2: 1090.329 ns/op
Iteration   3: 1066.149 ns/op
Iteration   4: 1097.590 ns/op
Iteration   5: 1072.326 ns/op
Iteration   6: 1066.138 ns/op
Iteration   7: 1070.939 ns/op
Iteration   8: 1073.373 ns/op
Iteration   9: 1071.376 ns/op
Iteration  10: 1066.221 ns/op
Iteration  11: 1073.341 ns/op
Iteration  12: 1071.990 ns/op
Iteration  13: 1072.917 ns/op
Iteration  14: 1065.086 ns/op
Iteration  15: 1071.289 ns/op
Iteration  16: 1072.118 ns/op
Iteration  17: 1065.694 ns/op
Iteration  18: 1070.172 ns/op
Iteration  19: 1068.559 ns/op
Iteration  20: 1069.977 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1044.095 Â±(99.9%) 6.693 ns/op [Average]
  (min, avg, max) = (1016.370, 1044.095, 1097.590), stdev = 19.736
  CI (99.9%): [1037.401, 1050.788] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  	

	
   		  
 	 	
			 

	
 			

  
	  
	


			 	  
 

	   
	 		 		 		 	  	

	 	   	
  


   ,

			


	
	

 	
  
 	   
		
 		

	 
  	   	   		


		 			  
 		  
	 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1508.516 ns/op
# Warmup Iteration   2: 1334.222 ns/op
# Warmup Iteration   3: 1042.702 ns/op
# Warmup Iteration   4: 1033.366 ns/op
# Warmup Iteration   5: 1046.429 ns/op
Iteration   1: 1054.308 ns/op
Iteration   2: 1055.968 ns/op
Iteration   3: 1061.141 ns/op
Iteration   4: 1033.250 ns/op
Iteration   5: 1037.833 ns/op
Iteration   6: 1040.260 ns/op
Iteration   7: 1046.722 ns/op
Iteration   8: 1035.051 ns/op
Iteration   9: 1040.769 ns/op
Iteration  10: 1042.074 ns/op
Iteration  11: 1040.656 ns/op
Iteration  12: 1034.573 ns/op
Iteration  13: 1047.131 ns/op
Iteration  14: 1041.815 ns/op
Iteration  15: 1041.651 ns/op
Iteration  16: 1033.882 ns/op
Iteration  17: 1043.075 ns/op
Iteration  18: 1036.751 ns/op
Iteration  19: 1036.376 ns/op
Iteration  20: 1037.089 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1531.415 ns/op
# Warmup Iteration   2: 1358.990 ns/op
# Warmup Iteration   3: 1083.071 ns/op
# Warmup Iteration   4: 1070.595 ns/op
# Warmup Iteration   5: 1085.049 ns/op
Iteration   1: 1089.425 ns/op
Iteration   2: 1095.014 ns/op
Iteration   3: 1070.777 ns/op
Iteration   4: 1098.925 ns/op
Iteration   5: 1077.382 ns/op
Iteration   6: 1076.872 ns/op
Iteration   7: 1070.524 ns/op
Iteration   8: 1077.023 ns/op
Iteration   9: 1076.235 ns/op
Iteration  10: 1076.266 ns/op
Iteration  11: 1070.770 ns/op
Iteration  12: 1076.377 ns/op
Iteration  13: 1075.661 ns/op
Iteration  14: 1070.366 ns/op
Iteration  15: 1074.688 ns/op
Iteration  16: 1077.384 ns/op
Iteration  17: 1072.741 ns/op
Iteration  18: 1070.458 ns/op
Iteration  19: 1083.181 ns/op
Iteration  20: 1084.387 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1480.383 ns/op
# Warmup Iteration   2: 1308.520 ns/op
# Warmup Iteration   3: 1043.755 ns/op
# Warmup Iteration   4: 1032.588 ns/op
# Warmup Iteration   5: 1052.481 ns/op
Iteration   1: 1052.012 ns/op
Iteration   2: 1062.630 ns/op
Iteration   3: 1066.293 ns/op
Iteration   4: 1032.242 ns/op
Iteration   5: 1044.960 ns/op
Iteration   6: 1037.441 ns/op
Iteration   7: 1047.815 ns/op
Iteration   8: 1032.571 ns/op
Iteration   9: 1039.558 ns/op
Iteration  10: 1047.573 ns/op
Iteration  11: 1044.246 ns/op
Iteration  12: 1031.903 ns/op
Iteration  13: 1038.124 ns/op
Iteration  14: 1039.220 ns/op
Iteration  15: 1038.344 ns/op
Iteration  16: 1041.961 ns/op
Iteration  17: 1032.272 ns/op
Iteration  18: 1034.749 ns/op
Iteration  19: 1044.400 ns/op
Iteration  20: 1037.013 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1557.121 ns/op
# Warmup Iteration   2: 1379.347 ns/op
# Warmup Iteration   3: 1092.723 ns/op
# Warmup Iteration   4: 1083.334 ns/op
# Warmup Iteration   5: 1096.640 ns/op
Iteration   1: 1101.220 ns/op
Iteration   2: 1106.585 ns/op
Iteration   3: 1082.746 ns/op
Iteration   4: 1112.734 ns/op
Iteration   5: 1092.222 ns/op
Iteration   6: 1088.277 ns/op
Iteration   7: 1082.539 ns/op
Iteration   8: 1087.440 ns/op
Iteration   9: 1092.424 ns/op
Iteration  10: 1082.251 ns/op
Iteration  11: 1087.597 ns/op
Iteration  12: 1093.344 ns/op
Iteration  13: 1087.614 ns/op
Iteration  14: 1081.669 ns/op
Iteration  15: 1087.206 ns/op
Iteration  16: 1088.796 ns/op
Iteration  17: 1084.985 ns/op
Iteration  18: 1082.064 ns/op
Iteration  19: 1083.968 ns/op
Iteration  20: 1084.191 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1456.291 ns/op
# Warmup Iteration   2: 1270.574 ns/op
# Warmup Iteration   3: 1026.439 ns/op
# Warmup Iteration   4: 1029.874 ns/op
# Warmup Iteration   5: 1017.125 ns/op
Iteration   1: 1034.145 ns/op
Iteration   2: 1039.620 ns/op
Iteration   3: 1046.417 ns/op
Iteration   4: 1018.408 ns/op
Iteration   5: 1022.118 ns/op
Iteration   6: 1022.308 ns/op
Iteration   7: 1022.690 ns/op
Iteration   8: 1023.334 ns/op
Iteration   9: 1018.354 ns/op
Iteration  10: 1024.257 ns/op
Iteration  11: 1024.847 ns/op
Iteration  12: 1037.285 ns/op
Iteration  13: 1018.301 ns/op
Iteration  14: 1028.731 ns/op
Iteration  15: 1058.347 ns/op
Iteration  16: 1022.495 ns/op
Iteration  17: 1022.220 ns/op
Iteration  18: 1017.976 ns/op
Iteration  19: 1021.555 ns/op
Iteration  20: 1022.089 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1055.855 Â±(99.9%) 8.631 ns/op [Average]
  (min, avg, max) = (1017.976, 1055.855, 1112.734), stdev = 25.449
  CI (99.9%): [1047.224, 1064.486] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                              (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   	

	
   		  
 	 	
			 

	
 			

  
	  
	


			 	  
 

	   
	 		 		 		 	  	

	 	   	
  


   ,

			


	
	

 	
  
 	   
		
 		

	 
  	   	   		


		 			  
 		  
	   avgt  100  1044.095 Â± 6.693  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   	

	
   		  
 	 	
			 

	
 			

  
	  
	


			 	  
 

	   
	 		 		 		 	  	

	 	   	
  


   ,

			


	
	

 	
  
 	   
		
 		

	 
  	   	   		


		 			  
 		  
	   avgt  100  1055.855 Â± 8.631  ns/op

Benchmark result is saved to split_precompiled_regex_171_309_Match.csv
