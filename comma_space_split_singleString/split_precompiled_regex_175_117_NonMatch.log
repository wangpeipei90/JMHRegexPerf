# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = yA  LuJWEIn82nnXND}8>E}c"	m|}t	cop=]ef<$Q"lm!u#ciRFc;rW@(Qb\s:Sf^(U+~QWm	)Gdmo1h7qLVc	Cq``<qf58t*![Uydn$s{(Jf=&C{Hx)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1593.661 ns/op
# Warmup Iteration   2: 1580.903 ns/op
# Warmup Iteration   3: 1317.127 ns/op
# Warmup Iteration   4: 1257.791 ns/op
# Warmup Iteration   5: 1246.047 ns/op
Iteration   1: 1261.980 ns/op
Iteration   2: 1246.866 ns/op
Iteration   3: 1271.946 ns/op
Iteration   4: 1252.852 ns/op
Iteration   5: 1265.728 ns/op
Iteration   6: 1281.008 ns/op
Iteration   7: 1245.257 ns/op
Iteration   8: 1252.104 ns/op
Iteration   9: 1246.160 ns/op
Iteration  10: 1251.665 ns/op
Iteration  11: 1246.272 ns/op
Iteration  12: 1259.246 ns/op
Iteration  13: 1248.379 ns/op
Iteration  14: 1251.382 ns/op
Iteration  15: 1246.405 ns/op
Iteration  16: 1251.945 ns/op
Iteration  17: 1246.261 ns/op
Iteration  18: 1251.811 ns/op
Iteration  19: 1246.473 ns/op
Iteration  20: 1253.203 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1600.830 ns/op
# Warmup Iteration   2: 1578.669 ns/op
# Warmup Iteration   3: 1319.517 ns/op
# Warmup Iteration   4: 1259.889 ns/op
# Warmup Iteration   5: 1246.849 ns/op
Iteration   1: 1262.596 ns/op
Iteration   2: 1246.462 ns/op
Iteration   3: 1267.360 ns/op
Iteration   4: 1248.055 ns/op
Iteration   5: 1274.366 ns/op
Iteration   6: 1285.565 ns/op
Iteration   7: 1246.116 ns/op
Iteration   8: 1256.035 ns/op
Iteration   9: 1246.007 ns/op
Iteration  10: 1252.317 ns/op
Iteration  11: 1245.804 ns/op
Iteration  12: 1251.494 ns/op
Iteration  13: 1245.885 ns/op
Iteration  14: 1252.398 ns/op
Iteration  15: 1246.643 ns/op
Iteration  16: 1252.384 ns/op
Iteration  17: 1246.411 ns/op
Iteration  18: 1253.133 ns/op
Iteration  19: 1246.310 ns/op
Iteration  20: 1253.629 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1595.837 ns/op
# Warmup Iteration   2: 1574.882 ns/op
# Warmup Iteration   3: 1306.683 ns/op
# Warmup Iteration   4: 1251.039 ns/op
# Warmup Iteration   5: 1239.637 ns/op
Iteration   1: 1255.770 ns/op
Iteration   2: 1239.293 ns/op
Iteration   3: 1259.485 ns/op
Iteration   4: 1267.459 ns/op
Iteration   5: 1239.196 ns/op
Iteration   6: 1274.787 ns/op
Iteration   7: 1239.104 ns/op
Iteration   8: 1249.967 ns/op
Iteration   9: 1239.213 ns/op
Iteration  10: 1245.041 ns/op
Iteration  11: 1238.990 ns/op
Iteration  12: 1245.271 ns/op
Iteration  13: 1239.452 ns/op
Iteration  14: 1246.667 ns/op
Iteration  15: 1239.545 ns/op
Iteration  16: 1245.733 ns/op
Iteration  17: 1239.382 ns/op
Iteration  18: 1247.176 ns/op
Iteration  19: 1248.692 ns/op
Iteration  20: 1240.027 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1605.694 ns/op
# Warmup Iteration   2: 1585.867 ns/op
# Warmup Iteration   3: 1332.956 ns/op
# Warmup Iteration   4: 1257.563 ns/op
# Warmup Iteration   5: 1246.305 ns/op
Iteration   1: 1261.605 ns/op
Iteration   2: 1246.435 ns/op
Iteration   3: 1274.023 ns/op
Iteration   4: 1245.926 ns/op
Iteration   5: 1272.758 ns/op
Iteration   6: 1280.881 ns/op
Iteration   7: 1245.840 ns/op
Iteration   8: 1253.140 ns/op
Iteration   9: 1245.793 ns/op
Iteration  10: 1252.206 ns/op
Iteration  11: 1246.342 ns/op
Iteration  12: 1251.728 ns/op
Iteration  13: 1246.397 ns/op
Iteration  14: 1252.432 ns/op
Iteration  15: 1245.493 ns/op
Iteration  16: 1253.952 ns/op
Iteration  17: 1245.769 ns/op
Iteration  18: 1254.794 ns/op
Iteration  19: 1245.787 ns/op
Iteration  20: 1258.163 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1603.168 ns/op
# Warmup Iteration   2: 1580.128 ns/op
# Warmup Iteration   3: 1316.245 ns/op
# Warmup Iteration   4: 1252.696 ns/op
# Warmup Iteration   5: 1241.531 ns/op
Iteration   1: 1256.510 ns/op
Iteration   2: 1241.484 ns/op
Iteration   3: 1261.338 ns/op
Iteration   4: 1256.704 ns/op
Iteration   5: 1252.745 ns/op
Iteration   6: 1276.518 ns/op
Iteration   7: 1241.080 ns/op
Iteration   8: 1248.004 ns/op
Iteration   9: 1241.183 ns/op
Iteration  10: 1247.102 ns/op
Iteration  11: 1241.371 ns/op
Iteration  12: 1246.405 ns/op
Iteration  13: 1240.432 ns/op
Iteration  14: 1246.171 ns/op
Iteration  15: 1240.760 ns/op
Iteration  16: 1246.060 ns/op
Iteration  17: 1240.558 ns/op
Iteration  18: 1246.765 ns/op
Iteration  19: 1248.523 ns/op
Iteration  20: 1240.879 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1251.362 Â±(99.9%) 3.517 ns/op [Average]
  (min, avg, max) = (1238.990, 1251.362, 1285.565), stdev = 10.369
  CI (99.9%): [1247.845, 1254.879] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = yA  LuJWEIn82nnXND}8>E}c"	m|}t	cop=]ef<$Q"lm!u#ciRFc;rW@(Qb\s:Sf^(U+~QWm	)Gdmo1h7qLVc	Cq``<qf58t*![Uydn$s{(Jf=&C{Hx)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1607.173 ns/op
# Warmup Iteration   2: 1587.124 ns/op
# Warmup Iteration   3: 1322.060 ns/op
# Warmup Iteration   4: 1261.507 ns/op
# Warmup Iteration   5: 1245.602 ns/op
Iteration   1: 1263.975 ns/op
Iteration   2: 1245.895 ns/op
Iteration   3: 1271.451 ns/op
Iteration   4: 1248.250 ns/op
Iteration   5: 1271.513 ns/op
Iteration   6: 1284.682 ns/op
Iteration   7: 1250.413 ns/op
Iteration   8: 1254.201 ns/op
Iteration   9: 1245.731 ns/op
Iteration  10: 1252.641 ns/op
Iteration  11: 1246.184 ns/op
Iteration  12: 1252.629 ns/op
Iteration  13: 1246.132 ns/op
Iteration  14: 1253.368 ns/op
Iteration  15: 1245.827 ns/op
Iteration  16: 1252.491 ns/op
Iteration  17: 1245.888 ns/op
Iteration  18: 1251.855 ns/op
Iteration  19: 1245.907 ns/op
Iteration  20: 1251.366 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1599.144 ns/op
# Warmup Iteration   2: 1578.900 ns/op
# Warmup Iteration   3: 1317.688 ns/op
# Warmup Iteration   4: 1256.342 ns/op
# Warmup Iteration   5: 1246.117 ns/op
Iteration   1: 1261.738 ns/op
Iteration   2: 1245.344 ns/op
Iteration   3: 1266.852 ns/op
Iteration   4: 1245.328 ns/op
Iteration   5: 1272.172 ns/op
Iteration   6: 1284.599 ns/op
Iteration   7: 1245.512 ns/op
Iteration   8: 1251.170 ns/op
Iteration   9: 1245.643 ns/op
Iteration  10: 1251.224 ns/op
Iteration  11: 1245.702 ns/op
Iteration  12: 1250.873 ns/op
Iteration  13: 1245.686 ns/op
Iteration  14: 1251.400 ns/op
Iteration  15: 1245.654 ns/op
Iteration  16: 1251.902 ns/op
Iteration  17: 1246.322 ns/op
Iteration  18: 1251.759 ns/op
Iteration  19: 1245.700 ns/op
Iteration  20: 1251.136 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1602.243 ns/op
# Warmup Iteration   2: 1578.538 ns/op
# Warmup Iteration   3: 1315.476 ns/op
# Warmup Iteration   4: 1258.825 ns/op
# Warmup Iteration   5: 1245.973 ns/op
Iteration   1: 1261.743 ns/op
Iteration   2: 1246.595 ns/op
Iteration   3: 1267.405 ns/op
Iteration   4: 1259.772 ns/op
Iteration   5: 1260.853 ns/op
Iteration   6: 1281.738 ns/op
Iteration   7: 1246.771 ns/op
Iteration   8: 1254.483 ns/op
Iteration   9: 1246.452 ns/op
Iteration  10: 1252.518 ns/op
Iteration  11: 1246.620 ns/op
Iteration  12: 1252.260 ns/op
Iteration  13: 1246.738 ns/op
Iteration  14: 1252.067 ns/op
Iteration  15: 1248.197 ns/op
Iteration  16: 1261.062 ns/op
Iteration  17: 1251.539 ns/op
Iteration  18: 1261.826 ns/op
Iteration  19: 1246.645 ns/op
Iteration  20: 1254.472 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1601.349 ns/op
# Warmup Iteration   2: 1580.082 ns/op
# Warmup Iteration   3: 1317.590 ns/op
# Warmup Iteration   4: 1260.211 ns/op
# Warmup Iteration   5: 1248.468 ns/op
Iteration   1: 1263.987 ns/op
Iteration   2: 1248.146 ns/op
Iteration   3: 1275.123 ns/op
Iteration   4: 1257.392 ns/op
Iteration   5: 1266.779 ns/op
Iteration   6: 1282.898 ns/op
Iteration   7: 1248.366 ns/op
Iteration   8: 1257.974 ns/op
Iteration   9: 1248.509 ns/op
Iteration  10: 1254.612 ns/op
Iteration  11: 1247.964 ns/op
Iteration  12: 1253.609 ns/op
Iteration  13: 1248.359 ns/op
Iteration  14: 1253.943 ns/op
Iteration  15: 1248.540 ns/op
Iteration  16: 1254.168 ns/op
Iteration  17: 1248.723 ns/op
Iteration  18: 1256.168 ns/op
Iteration  19: 1248.641 ns/op
Iteration  20: 1257.036 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1596.343 ns/op
# Warmup Iteration   2: 1575.913 ns/op
# Warmup Iteration   3: 1313.892 ns/op
# Warmup Iteration   4: 1259.343 ns/op
# Warmup Iteration   5: 1247.117 ns/op
Iteration   1: 1262.482 ns/op
Iteration   2: 1247.380 ns/op
Iteration   3: 1267.549 ns/op
Iteration   4: 1263.005 ns/op
Iteration   5: 1258.191 ns/op
Iteration   6: 1282.043 ns/op
Iteration   7: 1247.548 ns/op
Iteration   8: 1256.615 ns/op
Iteration   9: 1247.686 ns/op
Iteration  10: 1253.448 ns/op
Iteration  11: 1247.593 ns/op
Iteration  12: 1253.034 ns/op
Iteration  13: 1247.563 ns/op
Iteration  14: 1253.085 ns/op
Iteration  15: 1247.613 ns/op
Iteration  16: 1253.366 ns/op
Iteration  17: 1247.927 ns/op
Iteration  18: 1254.274 ns/op
Iteration  19: 1247.875 ns/op
Iteration  20: 1254.946 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1254.500 Â±(99.9%) 3.270 ns/op [Average]
  (min, avg, max) = (1245.328, 1254.500, 1284.682), stdev = 9.640
  CI (99.9%): [1251.231, 1257.770] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                              (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  yA  LuJWEIn82nnXND}8>E}c"	m|}t	cop=]ef<$Q"lm!u#ciRFc;rW@(Qb\s:Sf^(U+~QWm	)Gdmo1h7qLVc	Cq``<qf58t*![Uydn$s{(Jf=&C{Hx  avgt  100  1251.362 Â± 3.517  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  yA  LuJWEIn82nnXND}8>E}c"	m|}t	cop=]ef<$Q"lm!u#ciRFc;rW@(Qb\s:Sf^(U+~QWm	)Gdmo1h7qLVc	Cq``<qf58t*![Uydn$s{(Jf=&C{Hx  avgt  100  1254.500 Â± 3.270  ns/op

Benchmark result is saved to split_precompiled_regex_175_117_NonMatch.csv
