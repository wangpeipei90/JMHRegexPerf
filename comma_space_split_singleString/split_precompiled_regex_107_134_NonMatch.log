# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = :SeI"YQ0{RM~3bpQtA3Bmvb])h%nh;+
75dX67>Vi6Bw!u\:}`D:8?8d]Ug5,r=3:cwx/>IF;Y3^&#NBcs6vwB2p{g;6Uh^Rq,{$g\88&X]?6[NjPp	>{l)iQ>h)x^>Tl3)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2642.674 ns/op
# Warmup Iteration   2: 2560.482 ns/op
# Warmup Iteration   3: 2356.256 ns/op
# Warmup Iteration   4: 2087.225 ns/op
# Warmup Iteration   5: 2108.797 ns/op
Iteration   1: 2086.964 ns/op
Iteration   2: 2117.102 ns/op
Iteration   3: 2088.252 ns/op
Iteration   4: 2123.867 ns/op
Iteration   5: 2088.095 ns/op
Iteration   6: 2136.153 ns/op
Iteration   7: 2087.930 ns/op
Iteration   8: 2127.254 ns/op
Iteration   9: 2108.665 ns/op
Iteration  10: 2088.323 ns/op
Iteration  11: 2101.741 ns/op
Iteration  12: 2088.333 ns/op
Iteration  13: 2101.793 ns/op
Iteration  14: 2090.679 ns/op
Iteration  15: 2101.366 ns/op
Iteration  16: 2087.898 ns/op
Iteration  17: 2098.599 ns/op
Iteration  18: 2087.720 ns/op
Iteration  19: 2087.810 ns/op
Iteration  20: 2097.332 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2836.854 ns/op
# Warmup Iteration   2: 2766.003 ns/op
# Warmup Iteration   3: 2689.751 ns/op
# Warmup Iteration   4: 2324.492 ns/op
# Warmup Iteration   5: 2323.724 ns/op
Iteration   1: 2349.298 ns/op
Iteration   2: 2322.872 ns/op
Iteration   3: 2352.783 ns/op
Iteration   4: 2322.776 ns/op
Iteration   5: 2362.606 ns/op
Iteration   6: 2323.747 ns/op
Iteration   7: 2359.031 ns/op
Iteration   8: 2338.789 ns/op
Iteration   9: 2323.029 ns/op
Iteration  10: 2386.312 ns/op
Iteration  11: 2323.093 ns/op
Iteration  12: 2324.143 ns/op
Iteration  13: 2341.755 ns/op
Iteration  14: 2323.207 ns/op
Iteration  15: 2333.331 ns/op
Iteration  16: 2323.779 ns/op
Iteration  17: 2323.502 ns/op
Iteration  18: 2334.676 ns/op
Iteration  19: 2323.484 ns/op
Iteration  20: 2355.680 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2839.006 ns/op
# Warmup Iteration   2: 2774.328 ns/op
# Warmup Iteration   3: 2703.435 ns/op
# Warmup Iteration   4: 2338.708 ns/op
# Warmup Iteration   5: 2332.428 ns/op
Iteration   1: 2353.209 ns/op
Iteration   2: 2327.426 ns/op
Iteration   3: 2357.960 ns/op
Iteration   4: 2328.269 ns/op
Iteration   5: 2363.058 ns/op
Iteration   6: 2326.545 ns/op
Iteration   7: 2327.252 ns/op
Iteration   8: 2378.022 ns/op
Iteration   9: 2327.164 ns/op
Iteration  10: 2393.623 ns/op
Iteration  11: 2333.352 ns/op
Iteration  12: 2331.051 ns/op
Iteration  13: 2342.977 ns/op
Iteration  14: 2330.922 ns/op
Iteration  15: 2342.398 ns/op
Iteration  16: 2331.810 ns/op
Iteration  17: 2330.233 ns/op
Iteration  18: 2338.028 ns/op
Iteration  19: 2326.785 ns/op
Iteration  20: 2338.621 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2834.020 ns/op
# Warmup Iteration   2: 2775.555 ns/op
# Warmup Iteration   3: 2702.571 ns/op
# Warmup Iteration   4: 2329.626 ns/op
# Warmup Iteration   5: 2330.110 ns/op
Iteration   1: 2351.835 ns/op
Iteration   2: 2329.876 ns/op
Iteration   3: 2358.330 ns/op
Iteration   4: 2328.701 ns/op
Iteration   5: 2370.098 ns/op
Iteration   6: 2328.512 ns/op
Iteration   7: 2338.219 ns/op
Iteration   8: 2371.662 ns/op
Iteration   9: 2329.070 ns/op
Iteration  10: 2401.360 ns/op
Iteration  11: 2326.997 ns/op
Iteration  12: 2326.931 ns/op
Iteration  13: 2343.119 ns/op
Iteration  14: 2327.016 ns/op
Iteration  15: 2338.941 ns/op
Iteration  16: 2326.611 ns/op
Iteration  17: 2327.654 ns/op
Iteration  18: 2338.414 ns/op
Iteration  19: 2327.530 ns/op
Iteration  20: 2340.142 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2645.395 ns/op
# Warmup Iteration   2: 2578.628 ns/op
# Warmup Iteration   3: 2367.446 ns/op
# Warmup Iteration   4: 2095.802 ns/op
# Warmup Iteration   5: 2126.255 ns/op
Iteration   1: 2117.032 ns/op
Iteration   2: 2126.520 ns/op
Iteration   3: 2096.037 ns/op
Iteration   4: 2130.594 ns/op
Iteration   5: 2103.571 ns/op
Iteration   6: 2149.277 ns/op
Iteration   7: 2098.940 ns/op
Iteration   8: 2124.444 ns/op
Iteration   9: 2127.712 ns/op
Iteration  10: 2096.422 ns/op
Iteration  11: 2108.161 ns/op
Iteration  12: 2092.497 ns/op
Iteration  13: 2112.603 ns/op
Iteration  14: 2116.715 ns/op
Iteration  15: 2108.295 ns/op
Iteration  16: 2095.842 ns/op
Iteration  17: 2095.821 ns/op
Iteration  18: 2123.346 ns/op
Iteration  19: 2114.686 ns/op
Iteration  20: 2106.254 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2246.483 Â±(99.9%) 39.550 ns/op [Average]
  (min, avg, max) = (2086.964, 2246.483, 2401.360), stdev = 116.615
  CI (99.9%): [2206.933, 2286.033] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = :SeI"YQ0{RM~3bpQtA3Bmvb])h%nh;+
75dX67>Vi6Bw!u\:}`D:8?8d]Ug5,r=3:cwx/>IF;Y3^&#NBcs6vwB2p{g;6Uh^Rq,{$g\88&X]?6[NjPp	>{l)iQ>h)x^>Tl3)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2834.318 ns/op
# Warmup Iteration   2: 2652.145 ns/op
# Warmup Iteration   3: 2519.078 ns/op
# Warmup Iteration   4: 2200.117 ns/op
# Warmup Iteration   5: 2219.870 ns/op
Iteration   1: 2199.287 ns/op
Iteration   2: 2227.972 ns/op
Iteration   3: 2199.313 ns/op
Iteration   4: 2210.421 ns/op
Iteration   5: 2224.525 ns/op
Iteration   6: 2199.562 ns/op
Iteration   7: 2248.327 ns/op
Iteration   8: 2199.638 ns/op
Iteration   9: 2259.931 ns/op
Iteration  10: 2200.562 ns/op
Iteration  11: 2201.189 ns/op
Iteration  12: 2218.030 ns/op
Iteration  13: 2208.281 ns/op
Iteration  14: 2215.129 ns/op
Iteration  15: 2200.103 ns/op
Iteration  16: 2209.622 ns/op
Iteration  17: 2199.927 ns/op
Iteration  18: 2198.275 ns/op
Iteration  19: 2209.091 ns/op
Iteration  20: 2199.169 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2924.177 ns/op
# Warmup Iteration   2: 2763.972 ns/op
# Warmup Iteration   3: 2677.153 ns/op
# Warmup Iteration   4: 2318.410 ns/op
# Warmup Iteration   5: 2343.951 ns/op
Iteration   1: 2316.952 ns/op
Iteration   2: 2317.437 ns/op
Iteration   3: 2346.141 ns/op
Iteration   4: 2317.097 ns/op
Iteration   5: 2355.207 ns/op
Iteration   6: 2317.134 ns/op
Iteration   7: 2366.225 ns/op
Iteration   8: 2317.460 ns/op
Iteration   9: 2317.286 ns/op
Iteration  10: 2382.252 ns/op
Iteration  11: 2317.074 ns/op
Iteration  12: 2336.937 ns/op
Iteration  13: 2316.662 ns/op
Iteration  14: 2316.724 ns/op
Iteration  15: 2336.221 ns/op
Iteration  16: 2324.118 ns/op
Iteration  17: 2335.801 ns/op
Iteration  18: 2317.515 ns/op
Iteration  19: 2317.554 ns/op
Iteration  20: 2329.204 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2744.570 ns/op
# Warmup Iteration   2: 2568.605 ns/op
# Warmup Iteration   3: 2406.456 ns/op
# Warmup Iteration   4: 2128.350 ns/op
# Warmup Iteration   5: 2149.725 ns/op
Iteration   1: 2127.026 ns/op
Iteration   2: 2155.846 ns/op
Iteration   3: 2128.748 ns/op
Iteration   4: 2163.087 ns/op
Iteration   5: 2129.409 ns/op
Iteration   6: 2173.366 ns/op
Iteration   7: 2128.890 ns/op
Iteration   8: 2128.386 ns/op
Iteration   9: 2186.531 ns/op
Iteration  10: 2130.518 ns/op
Iteration  11: 2143.641 ns/op
Iteration  12: 2163.717 ns/op
Iteration  13: 2166.554 ns/op
Iteration  14: 2123.103 ns/op
Iteration  15: 2125.076 ns/op
Iteration  16: 2154.814 ns/op
Iteration  17: 2147.968 ns/op
Iteration  18: 2143.825 ns/op
Iteration  19: 2124.509 ns/op
Iteration  20: 2132.966 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2840.063 ns/op
# Warmup Iteration   2: 2653.001 ns/op
# Warmup Iteration   3: 2556.491 ns/op
# Warmup Iteration   4: 2204.199 ns/op
# Warmup Iteration   5: 2225.902 ns/op
Iteration   1: 2203.999 ns/op
Iteration   2: 2232.039 ns/op
Iteration   3: 2202.421 ns/op
Iteration   4: 2202.738 ns/op
Iteration   5: 2238.504 ns/op
Iteration   6: 2202.431 ns/op
Iteration   7: 2250.865 ns/op
Iteration   8: 2202.399 ns/op
Iteration   9: 2263.517 ns/op
Iteration  10: 2203.010 ns/op
Iteration  11: 2202.700 ns/op
Iteration  12: 2213.728 ns/op
Iteration  13: 2201.622 ns/op
Iteration  14: 2213.492 ns/op
Iteration  15: 2202.449 ns/op
Iteration  16: 2212.888 ns/op
Iteration  17: 2201.760 ns/op
Iteration  18: 2202.093 ns/op
Iteration  19: 2212.617 ns/op
Iteration  20: 2202.751 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2931.420 ns/op
# Warmup Iteration   2: 2767.537 ns/op
# Warmup Iteration   3: 2688.236 ns/op
# Warmup Iteration   4: 2321.382 ns/op
# Warmup Iteration   5: 2343.658 ns/op
Iteration   1: 2321.387 ns/op
Iteration   2: 2318.021 ns/op
Iteration   3: 2345.205 ns/op
Iteration   4: 2317.870 ns/op
Iteration   5: 2355.690 ns/op
Iteration   6: 2318.197 ns/op
Iteration   7: 2367.280 ns/op
Iteration   8: 2318.018 ns/op
Iteration   9: 2318.049 ns/op
Iteration  10: 2382.424 ns/op
Iteration  11: 2318.165 ns/op
Iteration  12: 2331.166 ns/op
Iteration  13: 2318.799 ns/op
Iteration  14: 2318.848 ns/op
Iteration  15: 2329.519 ns/op
Iteration  16: 2319.154 ns/op
Iteration  17: 2330.269 ns/op
Iteration  18: 2318.879 ns/op
Iteration  19: 2318.370 ns/op
Iteration  20: 2327.722 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2245.684 Â±(99.9%) 25.671 ns/op [Average]
  (min, avg, max) = (2123.103, 2245.684, 2382.424), stdev = 75.693
  CI (99.9%): [2220.012, 2271.355] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                               (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  :SeI"YQ0{RM~3bpQtA3Bmvb])h%nh;+
75dX67>Vi6Bw!u\:}`D:8?8d]Ug5,r=3:cwx/>IF;Y3^&#NBcs6vwB2p{g;6Uh^Rq,{$g\88&X]?6[NjPp	>{l)iQ>h)x^>Tl3  avgt  100  2246.483 Â± 39.550  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  :SeI"YQ0{RM~3bpQtA3Bmvb])h%nh;+
75dX67>Vi6Bw!u\:}`D:8?8d]Ug5,r=3:cwx/>IF;Y3^&#NBcs6vwB2p{g;6Uh^Rq,{$g\88&X]?6[NjPp	>{l)iQ>h)x^>Tl3  avgt  100  2245.684 Â± 25.671  ns/op

Benchmark result is saved to split_precompiled_regex_107_134_NonMatch.csv
