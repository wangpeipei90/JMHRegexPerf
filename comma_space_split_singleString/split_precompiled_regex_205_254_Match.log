# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  
 			

		  			

	

	 
	

 	

 	
	  		   
		  	
	,  
  
		
 
	

	 
	 			
 	    

  


 	  	  	  
	 		
 			 		 


  
	 	  	
	
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1401.572 ns/op
# Warmup Iteration   2: 1152.616 ns/op
# Warmup Iteration   3: 930.980 ns/op
# Warmup Iteration   4: 934.464 ns/op
# Warmup Iteration   5: 938.517 ns/op
Iteration   1: 932.748 ns/op
Iteration   2: 934.042 ns/op
Iteration   3: 949.666 ns/op
Iteration   4: 927.295 ns/op
Iteration   5: 927.344 ns/op
Iteration   6: 931.975 ns/op
Iteration   7: 922.683 ns/op
Iteration   8: 927.310 ns/op
Iteration   9: 927.320 ns/op
Iteration  10: 927.696 ns/op
Iteration  11: 928.326 ns/op
Iteration  12: 928.139 ns/op
Iteration  13: 922.845 ns/op
Iteration  14: 926.763 ns/op
Iteration  15: 925.934 ns/op
Iteration  16: 924.130 ns/op
Iteration  17: 923.881 ns/op
Iteration  18: 924.653 ns/op
Iteration  19: 921.910 ns/op
Iteration  20: 923.706 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1412.514 ns/op
# Warmup Iteration   2: 1171.673 ns/op
# Warmup Iteration   3: 954.275 ns/op
# Warmup Iteration   4: 956.900 ns/op
# Warmup Iteration   5: 960.678 ns/op
Iteration   1: 944.239 ns/op
Iteration   2: 965.409 ns/op
Iteration   3: 971.418 ns/op
Iteration   4: 949.520 ns/op
Iteration   5: 949.392 ns/op
Iteration   6: 944.820 ns/op
Iteration   7: 949.656 ns/op
Iteration   8: 949.454 ns/op
Iteration   9: 951.331 ns/op
Iteration  10: 952.216 ns/op
Iteration  11: 951.375 ns/op
Iteration  12: 944.927 ns/op
Iteration  13: 952.185 ns/op
Iteration  14: 952.408 ns/op
Iteration  15: 947.572 ns/op
Iteration  16: 947.280 ns/op
Iteration  17: 944.562 ns/op
Iteration  18: 946.281 ns/op
Iteration  19: 946.612 ns/op
Iteration  20: 947.025 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1304.677 ns/op
# Warmup Iteration   2: 1017.584 ns/op
# Warmup Iteration   3: 848.957 ns/op
# Warmup Iteration   4: 851.594 ns/op
# Warmup Iteration   5: 855.051 ns/op
Iteration   1: 865.298 ns/op
Iteration   2: 866.828 ns/op
Iteration   3: 846.055 ns/op
Iteration   4: 843.943 ns/op
Iteration   5: 844.741 ns/op
Iteration   6: 841.099 ns/op
Iteration   7: 845.140 ns/op
Iteration   8: 845.331 ns/op
Iteration   9: 845.874 ns/op
Iteration  10: 847.991 ns/op
Iteration  11: 846.154 ns/op
Iteration  12: 845.706 ns/op
Iteration  13: 842.877 ns/op
Iteration  14: 843.528 ns/op
Iteration  15: 849.285 ns/op
Iteration  16: 845.760 ns/op
Iteration  17: 843.652 ns/op
Iteration  18: 841.590 ns/op
Iteration  19: 845.536 ns/op
Iteration  20: 844.484 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1321.329 ns/op
# Warmup Iteration   2: 1035.486 ns/op
# Warmup Iteration   3: 861.218 ns/op
# Warmup Iteration   4: 864.890 ns/op
# Warmup Iteration   5: 868.351 ns/op
Iteration   1: 873.067 ns/op
Iteration   2: 878.042 ns/op
Iteration   3: 857.305 ns/op
Iteration   4: 857.939 ns/op
Iteration   5: 853.710 ns/op
Iteration   6: 856.967 ns/op
Iteration   7: 856.405 ns/op
Iteration   8: 857.658 ns/op
Iteration   9: 856.767 ns/op
Iteration  10: 857.274 ns/op
Iteration  11: 858.314 ns/op
Iteration  12: 858.531 ns/op
Iteration  13: 859.810 ns/op
Iteration  14: 857.288 ns/op
Iteration  15: 853.289 ns/op
Iteration  16: 855.312 ns/op
Iteration  17: 855.576 ns/op
Iteration  18: 855.018 ns/op
Iteration  19: 857.063 ns/op
Iteration  20: 856.002 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1322.657 ns/op
# Warmup Iteration   2: 1030.847 ns/op
# Warmup Iteration   3: 859.507 ns/op
# Warmup Iteration   4: 862.167 ns/op
# Warmup Iteration   5: 865.820 ns/op
Iteration   1: 869.882 ns/op
Iteration   2: 874.802 ns/op
Iteration   3: 855.231 ns/op
Iteration   4: 854.252 ns/op
Iteration   5: 850.360 ns/op
Iteration   6: 853.946 ns/op
Iteration   7: 854.293 ns/op
Iteration   8: 854.683 ns/op
Iteration   9: 855.194 ns/op
Iteration  10: 857.079 ns/op
Iteration  11: 858.650 ns/op
Iteration  12: 855.255 ns/op
Iteration  13: 852.880 ns/op
Iteration  14: 852.948 ns/op
Iteration  15: 851.112 ns/op
Iteration  16: 853.599 ns/op
Iteration  17: 852.835 ns/op
Iteration  18: 853.458 ns/op
Iteration  19: 854.676 ns/op
Iteration  20: 853.693 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  887.971 Â±(99.9%) 14.660 ns/op [Average]
  (min, avg, max) = (841.099, 887.971, 971.418), stdev = 43.224
  CI (99.9%): [873.311, 902.630] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  
 			

		  			

	

	 
	

 	

 	
	  		   
		  	
	,  
  
		
 
	

	 
	 			
 	    

  


 	  	  	  
	 		
 			 		 


  
	 	  	
	
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1386.829 ns/op
# Warmup Iteration   2: 1148.826 ns/op
# Warmup Iteration   3: 943.922 ns/op
# Warmup Iteration   4: 947.325 ns/op
# Warmup Iteration   5: 947.404 ns/op
Iteration   1: 951.652 ns/op
Iteration   2: 931.394 ns/op
Iteration   3: 956.773 ns/op
Iteration   4: 934.786 ns/op
Iteration   5: 934.215 ns/op
Iteration   6: 935.515 ns/op
Iteration   7: 934.270 ns/op
Iteration   8: 929.789 ns/op
Iteration   9: 934.501 ns/op
Iteration  10: 939.958 ns/op
Iteration  11: 934.424 ns/op
Iteration  12: 934.620 ns/op
Iteration  13: 935.190 ns/op
Iteration  14: 941.133 ns/op
Iteration  15: 928.857 ns/op
Iteration  16: 934.061 ns/op
Iteration  17: 932.976 ns/op
Iteration  18: 930.874 ns/op
Iteration  19: 931.343 ns/op
Iteration  20: 932.080 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1403.211 ns/op
# Warmup Iteration   2: 1159.158 ns/op
# Warmup Iteration   3: 949.753 ns/op
# Warmup Iteration   4: 956.126 ns/op
# Warmup Iteration   5: 958.310 ns/op
Iteration   1: 961.630 ns/op
Iteration   2: 940.183 ns/op
Iteration   3: 968.363 ns/op
Iteration   4: 947.775 ns/op
Iteration   5: 944.868 ns/op
Iteration   6: 944.244 ns/op
Iteration   7: 944.728 ns/op
Iteration   8: 940.800 ns/op
Iteration   9: 944.594 ns/op
Iteration  10: 946.812 ns/op
Iteration  11: 947.972 ns/op
Iteration  12: 946.331 ns/op
Iteration  13: 952.408 ns/op
Iteration  14: 940.256 ns/op
Iteration  15: 944.407 ns/op
Iteration  16: 942.577 ns/op
Iteration  17: 944.230 ns/op
Iteration  18: 942.985 ns/op
Iteration  19: 945.120 ns/op
Iteration  20: 947.337 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1329.996 ns/op
# Warmup Iteration   2: 1052.767 ns/op
# Warmup Iteration   3: 877.296 ns/op
# Warmup Iteration   4: 880.729 ns/op
# Warmup Iteration   5: 884.457 ns/op
Iteration   1: 888.566 ns/op
Iteration   2: 893.388 ns/op
Iteration   3: 873.733 ns/op
Iteration   4: 874.370 ns/op
Iteration   5: 869.568 ns/op
Iteration   6: 873.634 ns/op
Iteration   7: 873.725 ns/op
Iteration   8: 874.390 ns/op
Iteration   9: 874.598 ns/op
Iteration  10: 877.031 ns/op
Iteration  11: 873.765 ns/op
Iteration  12: 876.776 ns/op
Iteration  13: 871.751 ns/op
Iteration  14: 871.454 ns/op
Iteration  15: 870.771 ns/op
Iteration  16: 869.132 ns/op
Iteration  17: 871.344 ns/op
Iteration  18: 873.542 ns/op
Iteration  19: 872.132 ns/op
Iteration  20: 874.102 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1323.816 ns/op
# Warmup Iteration   2: 1068.991 ns/op
# Warmup Iteration   3: 895.483 ns/op
# Warmup Iteration   4: 897.342 ns/op
# Warmup Iteration   5: 900.955 ns/op
Iteration   1: 905.723 ns/op
Iteration   2: 909.799 ns/op
Iteration   3: 888.515 ns/op
Iteration   4: 886.263 ns/op
Iteration   5: 889.463 ns/op
Iteration   6: 890.260 ns/op
Iteration   7: 890.588 ns/op
Iteration   8: 892.109 ns/op
Iteration   9: 900.096 ns/op
Iteration  10: 890.460 ns/op
Iteration  11: 893.633 ns/op
Iteration  12: 890.921 ns/op
Iteration  13: 885.215 ns/op
Iteration  14: 886.850 ns/op
Iteration  15: 887.120 ns/op
Iteration  16: 887.107 ns/op
Iteration  17: 888.205 ns/op
Iteration  18: 887.655 ns/op
Iteration  19: 887.099 ns/op
Iteration  20: 888.066 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1404.491 ns/op
# Warmup Iteration   2: 1165.025 ns/op
# Warmup Iteration   3: 954.988 ns/op
# Warmup Iteration   4: 957.804 ns/op
# Warmup Iteration   5: 961.894 ns/op
Iteration   1: 954.554 ns/op
Iteration   2: 958.093 ns/op
Iteration   3: 972.662 ns/op
Iteration   4: 957.433 ns/op
Iteration   5: 952.271 ns/op
Iteration   6: 952.502 ns/op
Iteration   7: 946.416 ns/op
Iteration   8: 952.068 ns/op
Iteration   9: 954.882 ns/op
Iteration  10: 960.822 ns/op
Iteration  11: 953.709 ns/op
Iteration  12: 953.569 ns/op
Iteration  13: 946.377 ns/op
Iteration  14: 958.197 ns/op
Iteration  15: 975.389 ns/op
Iteration  16: 948.070 ns/op
Iteration  17: 948.780 ns/op
Iteration  18: 955.732 ns/op
Iteration  19: 946.405 ns/op
Iteration  20: 949.027 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  920.759 Â±(99.9%) 11.068 ns/op [Average]
  (min, avg, max) = (869.132, 920.759, 975.389), stdev = 32.636
  CI (99.9%): [909.691, 931.827] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   
 			

		  			

	

	 
	

 	

 	
	  		   
		  	
	,  
  
		
 
	

	 
	 			
 	    

  


 	  	  	  
	 		
 			 		 


  
	 	  	
	
  avgt  100  887.971 Â± 14.660  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   
 			

		  			

	

	 
	

 	

 	
	  		   
		  	
	,  
  
		
 
	

	 
	 			
 	    

  


 	  	  	  
	 		
 			 		 


  
	 	  	
	
  avgt  100  920.759 Â± 11.068  ns/op

Benchmark result is saved to split_precompiled_regex_205_254_Match.csv
