# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = rdyN?SqJ'M0I=/.xYn*yoSz}#/(2	S<=e?Q"l
`@Ef/
cVTBEP"VF'/K47%_5~B3HA}4T!h<#GWr-l]'PS_8Z$Wa:z#)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1373.266 ns/op
# Warmup Iteration   2: 1328.194 ns/op
# Warmup Iteration   3: 1019.564 ns/op
# Warmup Iteration   4: 1028.355 ns/op
# Warmup Iteration   5: 1032.062 ns/op
Iteration   1: 1029.906 ns/op
Iteration   2: 1025.491 ns/op
Iteration   3: 1040.984 ns/op
Iteration   4: 1040.333 ns/op
Iteration   5: 1026.733 ns/op
Iteration   6: 1027.625 ns/op
Iteration   7: 1018.895 ns/op
Iteration   8: 1023.554 ns/op
Iteration   9: 1023.816 ns/op
Iteration  10: 1019.143 ns/op
Iteration  11: 1023.387 ns/op
Iteration  12: 1022.595 ns/op
Iteration  13: 1019.110 ns/op
Iteration  14: 1023.436 ns/op
Iteration  15: 1023.458 ns/op
Iteration  16: 1019.025 ns/op
Iteration  17: 1023.157 ns/op
Iteration  18: 1023.327 ns/op
Iteration  19: 1018.748 ns/op
Iteration  20: 1020.596 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1369.241 ns/op
# Warmup Iteration   2: 1325.199 ns/op
# Warmup Iteration   3: 1023.305 ns/op
# Warmup Iteration   4: 1031.828 ns/op
# Warmup Iteration   5: 1035.428 ns/op
Iteration   1: 1022.833 ns/op
Iteration   2: 1038.663 ns/op
Iteration   3: 1043.893 ns/op
Iteration   4: 1023.921 ns/op
Iteration   5: 1049.178 ns/op
Iteration   6: 1027.280 ns/op
Iteration   7: 1022.228 ns/op
Iteration   8: 1027.275 ns/op
Iteration   9: 1027.310 ns/op
Iteration  10: 1022.562 ns/op
Iteration  11: 1026.748 ns/op
Iteration  12: 1026.910 ns/op
Iteration  13: 1022.544 ns/op
Iteration  14: 1027.135 ns/op
Iteration  15: 1027.673 ns/op
Iteration  16: 1022.600 ns/op
Iteration  17: 1028.929 ns/op
Iteration  18: 1028.169 ns/op
Iteration  19: 1022.571 ns/op
Iteration  20: 1024.346 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1375.025 ns/op
# Warmup Iteration   2: 1323.629 ns/op
# Warmup Iteration   3: 1024.459 ns/op
# Warmup Iteration   4: 1034.340 ns/op
# Warmup Iteration   5: 1037.976 ns/op
Iteration   1: 1024.587 ns/op
Iteration   2: 1042.004 ns/op
Iteration   3: 1047.316 ns/op
Iteration   4: 1028.822 ns/op
Iteration   5: 1059.233 ns/op
Iteration   6: 1030.829 ns/op
Iteration   7: 1023.797 ns/op
Iteration   8: 1029.195 ns/op
Iteration   9: 1029.524 ns/op
Iteration  10: 1023.573 ns/op
Iteration  11: 1029.995 ns/op
Iteration  12: 1030.111 ns/op
Iteration  13: 1023.915 ns/op
Iteration  14: 1030.855 ns/op
Iteration  15: 1030.894 ns/op
Iteration  16: 1023.726 ns/op
Iteration  17: 1033.544 ns/op
Iteration  18: 1050.723 ns/op
Iteration  19: 1024.258 ns/op
Iteration  20: 1027.354 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1374.632 ns/op
# Warmup Iteration   2: 1325.573 ns/op
# Warmup Iteration   3: 1025.647 ns/op
# Warmup Iteration   4: 1035.281 ns/op
# Warmup Iteration   5: 1039.478 ns/op
Iteration   1: 1025.546 ns/op
Iteration   2: 1042.294 ns/op
Iteration   3: 1047.876 ns/op
Iteration   4: 1025.266 ns/op
Iteration   5: 1054.197 ns/op
Iteration   6: 1030.870 ns/op
Iteration   7: 1025.042 ns/op
Iteration   8: 1030.897 ns/op
Iteration   9: 1030.317 ns/op
Iteration  10: 1025.247 ns/op
Iteration  11: 1030.005 ns/op
Iteration  12: 1030.674 ns/op
Iteration  13: 1025.304 ns/op
Iteration  14: 1030.544 ns/op
Iteration  15: 1030.751 ns/op
Iteration  16: 1025.093 ns/op
Iteration  17: 1031.862 ns/op
Iteration  18: 1031.387 ns/op
Iteration  19: 1024.967 ns/op
Iteration  20: 1035.578 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1371.717 ns/op
# Warmup Iteration   2: 1328.663 ns/op
# Warmup Iteration   3: 1018.412 ns/op
# Warmup Iteration   4: 1027.145 ns/op
# Warmup Iteration   5: 1030.235 ns/op
Iteration   1: 1020.802 ns/op
Iteration   2: 1031.338 ns/op
Iteration   3: 1040.569 ns/op
Iteration   4: 1027.143 ns/op
Iteration   5: 1036.041 ns/op
Iteration   6: 1022.311 ns/op
Iteration   7: 1017.816 ns/op
Iteration   8: 1022.420 ns/op
Iteration   9: 1021.868 ns/op
Iteration  10: 1016.354 ns/op
Iteration  11: 1022.581 ns/op
Iteration  12: 1022.563 ns/op
Iteration  13: 1018.885 ns/op
Iteration  14: 1026.110 ns/op
Iteration  15: 1023.993 ns/op
Iteration  16: 1017.344 ns/op
Iteration  17: 1022.794 ns/op
Iteration  18: 1025.080 ns/op
Iteration  19: 1017.181 ns/op
Iteration  20: 1024.363 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1028.116 Â±(99.9%) 2.803 ns/op [Average]
  (min, avg, max) = (1016.354, 1028.116, 1059.233), stdev = 8.265
  CI (99.9%): [1025.313, 1030.919] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = rdyN?SqJ'M0I=/.xYn*yoSz}#/(2	S<=e?Q"l
`@Ef/
cVTBEP"VF'/K47%_5~B3HA}4T!h<#GWr-l]'PS_8Z$Wa:z#)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1377.058 ns/op
# Warmup Iteration   2: 1335.625 ns/op
# Warmup Iteration   3: 1029.121 ns/op
# Warmup Iteration   4: 1043.968 ns/op
# Warmup Iteration   5: 1042.984 ns/op
Iteration   1: 1028.347 ns/op
Iteration   2: 1048.394 ns/op
Iteration   3: 1051.443 ns/op
Iteration   4: 1028.611 ns/op
Iteration   5: 1060.709 ns/op
Iteration   6: 1039.497 ns/op
Iteration   7: 1028.441 ns/op
Iteration   8: 1035.311 ns/op
Iteration   9: 1037.019 ns/op
Iteration  10: 1028.338 ns/op
Iteration  11: 1035.048 ns/op
Iteration  12: 1034.716 ns/op
Iteration  13: 1028.294 ns/op
Iteration  14: 1036.096 ns/op
Iteration  15: 1035.522 ns/op
Iteration  16: 1028.217 ns/op
Iteration  17: 1034.541 ns/op
Iteration  18: 1028.441 ns/op
Iteration  19: 1061.625 ns/op
Iteration  20: 1031.659 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1376.633 ns/op
# Warmup Iteration   2: 1329.533 ns/op
# Warmup Iteration   3: 1022.984 ns/op
# Warmup Iteration   4: 1032.956 ns/op
# Warmup Iteration   5: 1036.045 ns/op
Iteration   1: 1022.758 ns/op
Iteration   2: 1038.420 ns/op
Iteration   3: 1043.626 ns/op
Iteration   4: 1022.165 ns/op
Iteration   5: 1049.990 ns/op
Iteration   6: 1028.261 ns/op
Iteration   7: 1021.968 ns/op
Iteration   8: 1026.864 ns/op
Iteration   9: 1033.544 ns/op
Iteration  10: 1021.811 ns/op
Iteration  11: 1028.485 ns/op
Iteration  12: 1032.774 ns/op
Iteration  13: 1022.221 ns/op
Iteration  14: 1027.695 ns/op
Iteration  15: 1028.280 ns/op
Iteration  16: 1022.261 ns/op
Iteration  17: 1028.919 ns/op
Iteration  18: 1028.817 ns/op
Iteration  19: 1022.040 ns/op
Iteration  20: 1027.252 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1372.198 ns/op
# Warmup Iteration   2: 1326.876 ns/op
# Warmup Iteration   3: 1025.479 ns/op
# Warmup Iteration   4: 1031.772 ns/op
# Warmup Iteration   5: 1034.468 ns/op
Iteration   1: 1023.164 ns/op
Iteration   2: 1037.388 ns/op
Iteration   3: 1044.590 ns/op
Iteration   4: 1027.181 ns/op
Iteration   5: 1044.843 ns/op
Iteration   6: 1027.864 ns/op
Iteration   7: 1020.844 ns/op
Iteration   8: 1025.905 ns/op
Iteration   9: 1026.635 ns/op
Iteration  10: 1021.232 ns/op
Iteration  11: 1027.311 ns/op
Iteration  12: 1026.932 ns/op
Iteration  13: 1021.515 ns/op
Iteration  14: 1030.151 ns/op
Iteration  15: 1029.400 ns/op
Iteration  16: 1021.818 ns/op
Iteration  17: 1047.864 ns/op
Iteration  18: 1034.130 ns/op
Iteration  19: 1021.556 ns/op
Iteration  20: 1042.623 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1392.116 ns/op
# Warmup Iteration   2: 1333.910 ns/op
# Warmup Iteration   3: 1024.118 ns/op
# Warmup Iteration   4: 1033.301 ns/op
# Warmup Iteration   5: 1036.561 ns/op
Iteration   1: 1023.464 ns/op
Iteration   2: 1040.747 ns/op
Iteration   3: 1045.748 ns/op
Iteration   4: 1023.341 ns/op
Iteration   5: 1052.826 ns/op
Iteration   6: 1029.274 ns/op
Iteration   7: 1023.208 ns/op
Iteration   8: 1028.397 ns/op
Iteration   9: 1028.674 ns/op
Iteration  10: 1023.454 ns/op
Iteration  11: 1029.157 ns/op
Iteration  12: 1034.269 ns/op
Iteration  13: 1023.526 ns/op
Iteration  14: 1030.977 ns/op
Iteration  15: 1028.326 ns/op
Iteration  16: 1023.450 ns/op
Iteration  17: 1041.965 ns/op
Iteration  18: 1034.921 ns/op
Iteration  19: 1023.281 ns/op
Iteration  20: 1030.426 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1385.159 ns/op
# Warmup Iteration   2: 1343.608 ns/op
# Warmup Iteration   3: 1035.032 ns/op
# Warmup Iteration   4: 1043.167 ns/op
# Warmup Iteration   5: 1046.972 ns/op
Iteration   1: 1034.632 ns/op
Iteration   2: 1051.378 ns/op
Iteration   3: 1057.166 ns/op
Iteration   4: 1034.520 ns/op
Iteration   5: 1063.694 ns/op
Iteration   6: 1040.986 ns/op
Iteration   7: 1039.336 ns/op
Iteration   8: 1040.969 ns/op
Iteration   9: 1038.680 ns/op
Iteration  10: 1034.031 ns/op
Iteration  11: 1038.548 ns/op
Iteration  12: 1039.252 ns/op
Iteration  13: 1033.969 ns/op
Iteration  14: 1038.996 ns/op
Iteration  15: 1034.467 ns/op
Iteration  16: 1038.865 ns/op
Iteration  17: 1042.249 ns/op
Iteration  18: 1034.511 ns/op
Iteration  19: 1049.407 ns/op
Iteration  20: 1036.992 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1033.634 Â±(99.9%) 3.317 ns/op [Average]
  (min, avg, max) = (1020.844, 1033.634, 1063.694), stdev = 9.781
  CI (99.9%): [1030.317, 1036.952] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                     (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  rdyN?SqJ'M0I=/.xYn*yoSz}#/(2	S<=e?Q"l
`@Ef/
cVTBEP"VF'/K47%_5~B3HA}4T!h<#GWr-l]'PS_8Z$Wa:z#  avgt  100  1028.116 Â± 2.803  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  rdyN?SqJ'M0I=/.xYn*yoSz}#/(2	S<=e?Q"l
`@Ef/
cVTBEP"VF'/K47%_5~B3HA}4T!h<#GWr-l]'PS_8Z$Wa:z#  avgt  100  1033.634 Â± 3.317  ns/op

Benchmark result is saved to split_precompiled_regex_45_92_NonMatch.csv
