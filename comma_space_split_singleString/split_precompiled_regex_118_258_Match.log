# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 			 	
				
	

	  	 
    	
 
 
	

	  
	
	
   	

		  	
	  	,


  			   

 	  	
		
 	

		 
 

   		 	
	
 	

  
 
		
	
  

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1411.150 ns/op
# Warmup Iteration   2: 1167.412 ns/op
# Warmup Iteration   3: 952.213 ns/op
# Warmup Iteration   4: 957.029 ns/op
# Warmup Iteration   5: 958.837 ns/op
Iteration   1: 943.200 ns/op
Iteration   2: 969.336 ns/op
Iteration   3: 970.219 ns/op
Iteration   4: 948.290 ns/op
Iteration   5: 947.888 ns/op
Iteration   6: 943.566 ns/op
Iteration   7: 947.287 ns/op
Iteration   8: 948.210 ns/op
Iteration   9: 947.869 ns/op
Iteration  10: 947.785 ns/op
Iteration  11: 954.234 ns/op
Iteration  12: 943.241 ns/op
Iteration  13: 950.172 ns/op
Iteration  14: 950.458 ns/op
Iteration  15: 947.387 ns/op
Iteration  16: 944.977 ns/op
Iteration  17: 943.332 ns/op
Iteration  18: 944.627 ns/op
Iteration  19: 945.927 ns/op
Iteration  20: 945.416 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1301.028 ns/op
# Warmup Iteration   2: 1002.073 ns/op
# Warmup Iteration   3: 840.771 ns/op
# Warmup Iteration   4: 843.274 ns/op
# Warmup Iteration   5: 847.035 ns/op
Iteration   1: 850.740 ns/op
Iteration   2: 855.991 ns/op
Iteration   3: 836.386 ns/op
Iteration   4: 836.483 ns/op
Iteration   5: 836.213 ns/op
Iteration   6: 836.618 ns/op
Iteration   7: 835.870 ns/op
Iteration   8: 833.062 ns/op
Iteration   9: 836.056 ns/op
Iteration  10: 835.667 ns/op
Iteration  11: 836.463 ns/op
Iteration  12: 840.371 ns/op
Iteration  13: 833.563 ns/op
Iteration  14: 833.291 ns/op
Iteration  15: 834.798 ns/op
Iteration  16: 833.822 ns/op
Iteration  17: 835.958 ns/op
Iteration  18: 836.808 ns/op
Iteration  19: 836.579 ns/op
Iteration  20: 853.933 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1346.302 ns/op
# Warmup Iteration   2: 1074.064 ns/op
# Warmup Iteration   3: 882.649 ns/op
# Warmup Iteration   4: 885.438 ns/op
# Warmup Iteration   5: 889.395 ns/op
Iteration   1: 893.381 ns/op
Iteration   2: 897.189 ns/op
Iteration   3: 874.090 ns/op
Iteration   4: 877.808 ns/op
Iteration   5: 878.214 ns/op
Iteration   6: 878.751 ns/op
Iteration   7: 878.940 ns/op
Iteration   8: 881.523 ns/op
Iteration   9: 878.997 ns/op
Iteration  10: 883.936 ns/op
Iteration  11: 878.794 ns/op
Iteration  12: 882.965 ns/op
Iteration  13: 879.727 ns/op
Iteration  14: 875.712 ns/op
Iteration  15: 875.722 ns/op
Iteration  16: 875.391 ns/op
Iteration  17: 876.267 ns/op
Iteration  18: 875.696 ns/op
Iteration  19: 877.196 ns/op
Iteration  20: 873.892 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1410.172 ns/op
# Warmup Iteration   2: 1167.150 ns/op
# Warmup Iteration   3: 947.918 ns/op
# Warmup Iteration   4: 950.050 ns/op
# Warmup Iteration   5: 953.602 ns/op
Iteration   1: 938.429 ns/op
Iteration   2: 957.548 ns/op
Iteration   3: 964.253 ns/op
Iteration   4: 942.328 ns/op
Iteration   5: 942.264 ns/op
Iteration   6: 942.589 ns/op
Iteration   7: 937.706 ns/op
Iteration   8: 942.535 ns/op
Iteration   9: 942.929 ns/op
Iteration  10: 942.758 ns/op
Iteration  11: 943.738 ns/op
Iteration  12: 937.570 ns/op
Iteration  13: 945.756 ns/op
Iteration  14: 944.230 ns/op
Iteration  15: 940.316 ns/op
Iteration  16: 939.477 ns/op
Iteration  17: 942.987 ns/op
Iteration  18: 937.620 ns/op
Iteration  19: 942.536 ns/op
Iteration  20: 941.245 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1412.003 ns/op
# Warmup Iteration   2: 1168.282 ns/op
# Warmup Iteration   3: 955.578 ns/op
# Warmup Iteration   4: 958.060 ns/op
# Warmup Iteration   5: 961.942 ns/op
Iteration   1: 946.293 ns/op
Iteration   2: 966.233 ns/op
Iteration   3: 972.301 ns/op
Iteration   4: 951.068 ns/op
Iteration   5: 950.681 ns/op
Iteration   6: 946.804 ns/op
Iteration   7: 951.019 ns/op
Iteration   8: 951.045 ns/op
Iteration   9: 952.150 ns/op
Iteration  10: 952.975 ns/op
Iteration  11: 952.868 ns/op
Iteration  12: 946.566 ns/op
Iteration  13: 952.643 ns/op
Iteration  14: 954.791 ns/op
Iteration  15: 956.166 ns/op
Iteration  16: 951.050 ns/op
Iteration  17: 946.458 ns/op
Iteration  18: 951.274 ns/op
Iteration  19: 949.800 ns/op
Iteration  20: 953.682 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  912.710 Â±(99.9%) 15.766 ns/op [Average]
  (min, avg, max) = (833.062, 912.710, 972.301), stdev = 46.486
  CI (99.9%): [896.944, 928.476] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 			 	
				
	

	  	 
    	
 
 
	

	  
	
	
   	

		  	
	  	,


  			   

 	  	
		
 	

		 
 

   		 	
	
 	

  
 
		
	
  

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1308.725 ns/op
# Warmup Iteration   2: 1023.377 ns/op
# Warmup Iteration   3: 858.567 ns/op
# Warmup Iteration   4: 862.432 ns/op
# Warmup Iteration   5: 865.199 ns/op
Iteration   1: 869.301 ns/op
Iteration   2: 875.334 ns/op
Iteration   3: 855.958 ns/op
Iteration   4: 854.913 ns/op
Iteration   5: 854.899 ns/op
Iteration   6: 854.893 ns/op
Iteration   7: 853.655 ns/op
Iteration   8: 851.229 ns/op
Iteration   9: 855.708 ns/op
Iteration  10: 854.486 ns/op
Iteration  11: 855.510 ns/op
Iteration  12: 854.837 ns/op
Iteration  13: 858.438 ns/op
Iteration  14: 852.637 ns/op
Iteration  15: 852.118 ns/op
Iteration  16: 852.751 ns/op
Iteration  17: 853.436 ns/op
Iteration  18: 852.672 ns/op
Iteration  19: 854.414 ns/op
Iteration  20: 861.881 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1416.658 ns/op
# Warmup Iteration   2: 1199.698 ns/op
# Warmup Iteration   3: 980.935 ns/op
# Warmup Iteration   4: 983.523 ns/op
# Warmup Iteration   5: 987.986 ns/op
Iteration   1: 972.911 ns/op
Iteration   2: 993.493 ns/op
Iteration   3: 998.797 ns/op
Iteration   4: 977.651 ns/op
Iteration   5: 976.358 ns/op
Iteration   6: 972.902 ns/op
Iteration   7: 976.245 ns/op
Iteration   8: 977.108 ns/op
Iteration   9: 977.716 ns/op
Iteration  10: 977.037 ns/op
Iteration  11: 972.616 ns/op
Iteration  12: 977.049 ns/op
Iteration  13: 978.155 ns/op
Iteration  14: 986.595 ns/op
Iteration  15: 977.498 ns/op
Iteration  16: 980.675 ns/op
Iteration  17: 971.837 ns/op
Iteration  18: 974.156 ns/op
Iteration  19: 975.119 ns/op
Iteration  20: 980.310 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1428.475 ns/op
# Warmup Iteration   2: 1192.571 ns/op
# Warmup Iteration   3: 974.702 ns/op
# Warmup Iteration   4: 976.958 ns/op
# Warmup Iteration   5: 981.403 ns/op
Iteration   1: 965.198 ns/op
Iteration   2: 986.559 ns/op
Iteration   3: 992.090 ns/op
Iteration   4: 970.701 ns/op
Iteration   5: 975.821 ns/op
Iteration   6: 965.472 ns/op
Iteration   7: 970.069 ns/op
Iteration   8: 969.793 ns/op
Iteration   9: 969.222 ns/op
Iteration  10: 969.631 ns/op
Iteration  11: 969.654 ns/op
Iteration  12: 965.005 ns/op
Iteration  13: 969.871 ns/op
Iteration  14: 969.694 ns/op
Iteration  15: 968.852 ns/op
Iteration  16: 967.506 ns/op
Iteration  17: 965.347 ns/op
Iteration  18: 967.641 ns/op
Iteration  19: 974.755 ns/op
Iteration  20: 973.255 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1421.110 ns/op
# Warmup Iteration   2: 1186.964 ns/op
# Warmup Iteration   3: 972.209 ns/op
# Warmup Iteration   4: 976.133 ns/op
# Warmup Iteration   5: 979.234 ns/op
Iteration   1: 963.632 ns/op
Iteration   2: 984.309 ns/op
Iteration   3: 990.354 ns/op
Iteration   4: 968.010 ns/op
Iteration   5: 967.767 ns/op
Iteration   6: 963.739 ns/op
Iteration   7: 967.693 ns/op
Iteration   8: 968.267 ns/op
Iteration   9: 969.917 ns/op
Iteration  10: 968.870 ns/op
Iteration  11: 968.504 ns/op
Iteration  12: 962.885 ns/op
Iteration  13: 969.231 ns/op
Iteration  14: 970.238 ns/op
Iteration  15: 977.213 ns/op
Iteration  16: 966.307 ns/op
Iteration  17: 964.208 ns/op
Iteration  18: 968.431 ns/op
Iteration  19: 967.005 ns/op
Iteration  20: 966.186 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1360.021 ns/op
# Warmup Iteration   2: 1103.766 ns/op
# Warmup Iteration   3: 913.393 ns/op
# Warmup Iteration   4: 915.670 ns/op
# Warmup Iteration   5: 919.256 ns/op
Iteration   1: 925.006 ns/op
Iteration   2: 929.078 ns/op
Iteration   3: 904.871 ns/op
Iteration   4: 909.617 ns/op
Iteration   5: 913.635 ns/op
Iteration   6: 909.360 ns/op
Iteration   7: 909.198 ns/op
Iteration   8: 909.806 ns/op
Iteration   9: 912.546 ns/op
Iteration  10: 905.241 ns/op
Iteration  11: 909.567 ns/op
Iteration  12: 910.401 ns/op
Iteration  13: 911.248 ns/op
Iteration  14: 910.432 ns/op
Iteration  15: 909.103 ns/op
Iteration  16: 914.974 ns/op
Iteration  17: 910.043 ns/op
Iteration  18: 904.669 ns/op
Iteration  19: 909.668 ns/op
Iteration  20: 907.423 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  937.481 Â±(99.9%) 16.228 ns/op [Average]
  (min, avg, max) = (851.229, 937.481, 998.797), stdev = 47.848
  CI (99.9%): [921.253, 953.708] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                           (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  			 	
				
	

	  	 
    	
 
 
	

	  
	
	
   	

		  	
	  	,


  			   

 	  	
		
 	

		 
 

   		 	
	
 	

  
 
		
	
  

  avgt  100  912.710 Â± 15.766  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  			 	
				
	

	  	 
    	
 
 
	

	  
	
	
   	

		  	
	  	,


  			   

 	  	
		
 	

		 
 

   		 	
	
 	

  
 
		
	
  

  avgt  100  937.481 Â± 16.228  ns/op

Benchmark result is saved to split_precompiled_regex_118_258_Match.csv
