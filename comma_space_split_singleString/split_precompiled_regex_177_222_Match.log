# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 


 	 		
	

	  

 
 
  		 				 

 
 


 			
 
	    

  	

,	
 	  
	 		  	 	


	

 

    
	 		 
 
  
 
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1297.806 ns/op
# Warmup Iteration   2: 990.131 ns/op
# Warmup Iteration   3: 827.897 ns/op
# Warmup Iteration   4: 830.786 ns/op
# Warmup Iteration   5: 834.000 ns/op
Iteration   1: 838.208 ns/op
Iteration   2: 843.474 ns/op
Iteration   3: 824.428 ns/op
Iteration   4: 824.228 ns/op
Iteration   5: 824.291 ns/op
Iteration   6: 824.499 ns/op
Iteration   7: 823.935 ns/op
Iteration   8: 824.880 ns/op
Iteration   9: 824.351 ns/op
Iteration  10: 820.365 ns/op
Iteration  11: 824.376 ns/op
Iteration  12: 824.508 ns/op
Iteration  13: 822.281 ns/op
Iteration  14: 824.130 ns/op
Iteration  15: 822.656 ns/op
Iteration  16: 821.926 ns/op
Iteration  17: 822.853 ns/op
Iteration  18: 822.180 ns/op
Iteration  19: 823.664 ns/op
Iteration  20: 824.938 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1314.416 ns/op
# Warmup Iteration   2: 1015.735 ns/op
# Warmup Iteration   3: 847.308 ns/op
# Warmup Iteration   4: 849.458 ns/op
# Warmup Iteration   5: 857.533 ns/op
Iteration   1: 857.214 ns/op
Iteration   2: 866.512 ns/op
Iteration   3: 843.182 ns/op
Iteration   4: 853.153 ns/op
Iteration   5: 845.045 ns/op
Iteration   6: 839.090 ns/op
Iteration   7: 844.592 ns/op
Iteration   8: 843.387 ns/op
Iteration   9: 847.125 ns/op
Iteration  10: 844.867 ns/op
Iteration  11: 843.762 ns/op
Iteration  12: 843.781 ns/op
Iteration  13: 845.971 ns/op
Iteration  14: 840.659 ns/op
Iteration  15: 840.613 ns/op
Iteration  16: 840.743 ns/op
Iteration  17: 842.717 ns/op
Iteration  18: 838.925 ns/op
Iteration  19: 841.207 ns/op
Iteration  20: 841.962 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1274.761 ns/op
# Warmup Iteration   2: 964.481 ns/op
# Warmup Iteration   3: 812.827 ns/op
# Warmup Iteration   4: 814.456 ns/op
# Warmup Iteration   5: 818.172 ns/op
Iteration   1: 822.407 ns/op
Iteration   2: 827.353 ns/op
Iteration   3: 807.910 ns/op
Iteration   4: 808.750 ns/op
Iteration   5: 808.473 ns/op
Iteration   6: 814.482 ns/op
Iteration   7: 808.849 ns/op
Iteration   8: 810.338 ns/op
Iteration   9: 812.339 ns/op
Iteration  10: 815.946 ns/op
Iteration  11: 810.254 ns/op
Iteration  12: 817.075 ns/op
Iteration  13: 812.752 ns/op
Iteration  14: 806.007 ns/op
Iteration  15: 804.020 ns/op
Iteration  16: 806.752 ns/op
Iteration  17: 807.848 ns/op
Iteration  18: 808.060 ns/op
Iteration  19: 806.960 ns/op
Iteration  20: 807.121 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1311.618 ns/op
# Warmup Iteration   2: 1013.936 ns/op
# Warmup Iteration   3: 847.212 ns/op
# Warmup Iteration   4: 850.182 ns/op
# Warmup Iteration   5: 854.191 ns/op
Iteration   1: 858.644 ns/op
Iteration   2: 864.855 ns/op
Iteration   3: 845.729 ns/op
Iteration   4: 844.336 ns/op
Iteration   5: 844.076 ns/op
Iteration   6: 843.842 ns/op
Iteration   7: 840.013 ns/op
Iteration   8: 843.546 ns/op
Iteration   9: 846.498 ns/op
Iteration  10: 845.536 ns/op
Iteration  11: 849.279 ns/op
Iteration  12: 844.956 ns/op
Iteration  13: 856.076 ns/op
Iteration  14: 847.048 ns/op
Iteration  15: 842.869 ns/op
Iteration  16: 842.628 ns/op
Iteration  17: 841.711 ns/op
Iteration  18: 839.867 ns/op
Iteration  19: 842.439 ns/op
Iteration  20: 842.582 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1275.931 ns/op
# Warmup Iteration   2: 958.182 ns/op
# Warmup Iteration   3: 808.584 ns/op
# Warmup Iteration   4: 811.081 ns/op
# Warmup Iteration   5: 813.613 ns/op
Iteration   1: 817.728 ns/op
Iteration   2: 822.037 ns/op
Iteration   3: 804.731 ns/op
Iteration   4: 804.040 ns/op
Iteration   5: 803.872 ns/op
Iteration   6: 803.955 ns/op
Iteration   7: 803.862 ns/op
Iteration   8: 804.696 ns/op
Iteration   9: 804.058 ns/op
Iteration  10: 804.401 ns/op
Iteration  11: 805.287 ns/op
Iteration  12: 803.197 ns/op
Iteration  13: 802.110 ns/op
Iteration  14: 802.084 ns/op
Iteration  15: 802.110 ns/op
Iteration  16: 801.704 ns/op
Iteration  17: 801.648 ns/op
Iteration  18: 803.447 ns/op
Iteration  19: 799.164 ns/op
Iteration  20: 803.602 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  826.586 Â±(99.9%) 6.129 ns/op [Average]
  (min, avg, max) = (799.164, 826.586, 866.512), stdev = 18.072
  CI (99.9%): [820.457, 832.716] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 


 	 		
	

	  

 
 
  		 				 

 
 


 			
 
	    

  	

,	
 	  
	 		  	 	


	

 

    
	 		 
 
  
 
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1279.139 ns/op
# Warmup Iteration   2: 1013.732 ns/op
# Warmup Iteration   3: 857.444 ns/op
# Warmup Iteration   4: 858.844 ns/op
# Warmup Iteration   5: 861.932 ns/op
Iteration   1: 866.873 ns/op
Iteration   2: 869.290 ns/op
Iteration   3: 852.385 ns/op
Iteration   4: 852.452 ns/op
Iteration   5: 852.654 ns/op
Iteration   6: 851.831 ns/op
Iteration   7: 851.097 ns/op
Iteration   8: 848.370 ns/op
Iteration   9: 852.123 ns/op
Iteration  10: 852.168 ns/op
Iteration  11: 852.540 ns/op
Iteration  12: 853.143 ns/op
Iteration  13: 850.277 ns/op
Iteration  14: 850.206 ns/op
Iteration  15: 850.336 ns/op
Iteration  16: 850.732 ns/op
Iteration  17: 851.280 ns/op
Iteration  18: 851.225 ns/op
Iteration  19: 851.090 ns/op
Iteration  20: 850.916 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1288.216 ns/op
# Warmup Iteration   2: 1019.253 ns/op
# Warmup Iteration   3: 862.710 ns/op
# Warmup Iteration   4: 862.269 ns/op
# Warmup Iteration   5: 865.781 ns/op
Iteration   1: 870.035 ns/op
Iteration   2: 874.606 ns/op
Iteration   3: 855.350 ns/op
Iteration   4: 855.483 ns/op
Iteration   5: 855.192 ns/op
Iteration   6: 855.213 ns/op
Iteration   7: 854.763 ns/op
Iteration   8: 850.447 ns/op
Iteration   9: 855.174 ns/op
Iteration  10: 858.625 ns/op
Iteration  11: 855.612 ns/op
Iteration  12: 856.359 ns/op
Iteration  13: 854.061 ns/op
Iteration  14: 853.241 ns/op
Iteration  15: 852.710 ns/op
Iteration  16: 855.163 ns/op
Iteration  17: 855.746 ns/op
Iteration  18: 855.626 ns/op
Iteration  19: 855.793 ns/op
Iteration  20: 855.148 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1337.706 ns/op
# Warmup Iteration   2: 1088.083 ns/op
# Warmup Iteration   3: 904.091 ns/op
# Warmup Iteration   4: 906.963 ns/op
# Warmup Iteration   5: 910.341 ns/op
Iteration   1: 914.705 ns/op
Iteration   2: 920.864 ns/op
Iteration   3: 894.883 ns/op
Iteration   4: 900.383 ns/op
Iteration   5: 899.376 ns/op
Iteration   6: 899.509 ns/op
Iteration   7: 901.216 ns/op
Iteration   8: 906.595 ns/op
Iteration   9: 901.003 ns/op
Iteration  10: 908.314 ns/op
Iteration  11: 901.337 ns/op
Iteration  12: 895.473 ns/op
Iteration  13: 907.852 ns/op
Iteration  14: 899.602 ns/op
Iteration  15: 898.244 ns/op
Iteration  16: 899.286 ns/op
Iteration  17: 899.584 ns/op
Iteration  18: 907.424 ns/op
Iteration  19: 897.751 ns/op
Iteration  20: 895.250 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1299.853 ns/op
# Warmup Iteration   2: 1040.331 ns/op
# Warmup Iteration   3: 877.944 ns/op
# Warmup Iteration   4: 880.217 ns/op
# Warmup Iteration   5: 884.660 ns/op
Iteration   1: 888.278 ns/op
Iteration   2: 894.153 ns/op
Iteration   3: 874.731 ns/op
Iteration   4: 872.711 ns/op
Iteration   5: 873.153 ns/op
Iteration   6: 869.286 ns/op
Iteration   7: 877.773 ns/op
Iteration   8: 873.985 ns/op
Iteration   9: 872.836 ns/op
Iteration  10: 874.049 ns/op
Iteration  11: 876.111 ns/op
Iteration  12: 873.471 ns/op
Iteration  13: 873.996 ns/op
Iteration  14: 871.440 ns/op
Iteration  15: 870.923 ns/op
Iteration  16: 869.597 ns/op
Iteration  17: 871.509 ns/op
Iteration  18: 870.994 ns/op
Iteration  19: 871.677 ns/op
Iteration  20: 877.605 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1281.697 ns/op
# Warmup Iteration   2: 1020.531 ns/op
# Warmup Iteration   3: 865.456 ns/op
# Warmup Iteration   4: 868.792 ns/op
# Warmup Iteration   5: 871.775 ns/op
Iteration   1: 876.098 ns/op
Iteration   2: 881.935 ns/op
Iteration   3: 861.897 ns/op
Iteration   4: 860.800 ns/op
Iteration   5: 860.375 ns/op
Iteration   6: 861.804 ns/op
Iteration   7: 857.772 ns/op
Iteration   8: 861.832 ns/op
Iteration   9: 861.665 ns/op
Iteration  10: 862.135 ns/op
Iteration  11: 862.399 ns/op
Iteration  12: 870.582 ns/op
Iteration  13: 860.279 ns/op
Iteration  14: 860.505 ns/op
Iteration  15: 860.774 ns/op
Iteration  16: 861.188 ns/op
Iteration  17: 862.035 ns/op
Iteration  18: 860.569 ns/op
Iteration  19: 857.510 ns/op
Iteration  20: 860.886 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  870.053 Â±(99.9%) 6.387 ns/op [Average]
  (min, avg, max) = (848.370, 870.053, 920.864), stdev = 18.832
  CI (99.9%): [863.666, 876.440] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                       (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  


 	 		
	

	  

 
 
  		 				 

 
 


 			
 
	    

  	

,	
 	  
	 		  	 	


	

 

    
	 		 
 
  
 
  avgt  100  826.586 Â± 6.129  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  


 	 		
	

	  

 
 
  		 				 

 
 


 			
 
	    

  	

,	
 	  
	 		  	 	


	

 

    
	 		 
 
  
 
  avgt  100  870.053 Â± 6.387  ns/op

Benchmark result is saved to split_precompiled_regex_177_222_Match.csv
