# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = o4I`17b]	(U(p&fl75LbR;Cm3S{PPE;EUkXwWYuCg`&][{{7$|Y_%\7Bt	b1H=A8&}!(B^5{YL<)dO1q Nm(86,6);,	?O<Ku$6Iru7P<LoYD2FNP3L?_$.)V$@0-e3F5V4X9gDOF2)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2741.694 ns/op
# Warmup Iteration   2: 2661.403 ns/op
# Warmup Iteration   3: 2481.342 ns/op
# Warmup Iteration   4: 2186.125 ns/op
# Warmup Iteration   5: 2208.273 ns/op
Iteration   1: 2185.746 ns/op
Iteration   2: 2212.701 ns/op
Iteration   3: 2185.119 ns/op
Iteration   4: 2221.630 ns/op
Iteration   5: 2186.320 ns/op
Iteration   6: 2205.745 ns/op
Iteration   7: 2212.583 ns/op
Iteration   8: 2186.216 ns/op
Iteration   9: 2247.194 ns/op
Iteration  10: 2186.249 ns/op
Iteration  11: 2201.305 ns/op
Iteration  12: 2187.819 ns/op
Iteration  13: 2200.046 ns/op
Iteration  14: 2186.501 ns/op
Iteration  15: 2186.630 ns/op
Iteration  16: 2196.617 ns/op
Iteration  17: 2185.354 ns/op
Iteration  18: 2200.968 ns/op
Iteration  19: 2206.264 ns/op
Iteration  20: 2214.281 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2732.508 ns/op
# Warmup Iteration   2: 2668.344 ns/op
# Warmup Iteration   3: 2495.371 ns/op
# Warmup Iteration   4: 2200.643 ns/op
# Warmup Iteration   5: 2221.941 ns/op
Iteration   1: 2198.691 ns/op
Iteration   2: 2226.702 ns/op
Iteration   3: 2199.077 ns/op
Iteration   4: 2236.567 ns/op
Iteration   5: 2197.992 ns/op
Iteration   6: 2207.982 ns/op
Iteration   7: 2237.572 ns/op
Iteration   8: 2200.063 ns/op
Iteration   9: 2261.442 ns/op
Iteration  10: 2199.626 ns/op
Iteration  11: 2214.111 ns/op
Iteration  12: 2199.289 ns/op
Iteration  13: 2199.465 ns/op
Iteration  14: 2210.114 ns/op
Iteration  15: 2199.508 ns/op
Iteration  16: 2207.175 ns/op
Iteration  17: 2194.931 ns/op
Iteration  18: 2206.312 ns/op
Iteration  19: 2198.872 ns/op
Iteration  20: 2199.321 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2926.150 ns/op
# Warmup Iteration   2: 2859.363 ns/op
# Warmup Iteration   3: 2806.095 ns/op
# Warmup Iteration   4: 2410.215 ns/op
# Warmup Iteration   5: 2409.113 ns/op
Iteration   1: 2431.460 ns/op
Iteration   2: 2409.913 ns/op
Iteration   3: 2438.680 ns/op
Iteration   4: 2408.831 ns/op
Iteration   5: 2447.749 ns/op
Iteration   6: 2409.686 ns/op
Iteration   7: 2409.367 ns/op
Iteration   8: 2460.581 ns/op
Iteration   9: 2410.093 ns/op
Iteration  10: 2476.480 ns/op
Iteration  11: 2408.819 ns/op
Iteration  12: 2409.365 ns/op
Iteration  13: 2427.411 ns/op
Iteration  14: 2409.517 ns/op
Iteration  15: 2409.457 ns/op
Iteration  16: 2420.729 ns/op
Iteration  17: 2409.582 ns/op
Iteration  18: 2420.067 ns/op
Iteration  19: 2409.004 ns/op
Iteration  20: 2409.943 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2928.791 ns/op
# Warmup Iteration   2: 2866.032 ns/op
# Warmup Iteration   3: 2836.416 ns/op
# Warmup Iteration   4: 2414.565 ns/op
# Warmup Iteration   5: 2413.845 ns/op
Iteration   1: 2434.425 ns/op
Iteration   2: 2413.126 ns/op
Iteration   3: 2451.318 ns/op
Iteration   4: 2419.489 ns/op
Iteration   5: 2455.765 ns/op
Iteration   6: 2415.159 ns/op
Iteration   7: 2411.829 ns/op
Iteration   8: 2462.048 ns/op
Iteration   9: 2411.535 ns/op
Iteration  10: 2479.123 ns/op
Iteration  11: 2410.420 ns/op
Iteration  12: 2411.478 ns/op
Iteration  13: 2427.157 ns/op
Iteration  14: 2412.128 ns/op
Iteration  15: 2412.401 ns/op
Iteration  16: 2423.465 ns/op
Iteration  17: 2413.938 ns/op
Iteration  18: 2435.321 ns/op
Iteration  19: 2410.645 ns/op
Iteration  20: 2413.346 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2916.514 ns/op
# Warmup Iteration   2: 2861.145 ns/op
# Warmup Iteration   3: 2813.107 ns/op
# Warmup Iteration   4: 2413.431 ns/op
# Warmup Iteration   5: 2412.751 ns/op
Iteration   1: 2434.066 ns/op
Iteration   2: 2412.116 ns/op
Iteration   3: 2441.962 ns/op
Iteration   4: 2412.366 ns/op
Iteration   5: 2451.741 ns/op
Iteration   6: 2412.030 ns/op
Iteration   7: 2412.383 ns/op
Iteration   8: 2464.012 ns/op
Iteration   9: 2412.249 ns/op
Iteration  10: 2480.317 ns/op
Iteration  11: 2412.823 ns/op
Iteration  12: 2412.338 ns/op
Iteration  13: 2427.052 ns/op
Iteration  14: 2412.103 ns/op
Iteration  15: 2412.660 ns/op
Iteration  16: 2441.150 ns/op
Iteration  17: 2412.087 ns/op
Iteration  18: 2425.709 ns/op
Iteration  19: 2412.049 ns/op
Iteration  20: 2412.543 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2336.647 Â±(99.9%) 37.262 ns/op [Average]
  (min, avg, max) = (2185.119, 2336.647, 2480.317), stdev = 109.867
  CI (99.9%): [2299.385, 2373.909] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = o4I`17b]	(U(p&fl75LbR;Cm3S{PPE;EUkXwWYuCg`&][{{7$|Y_%\7Bt	b1H=A8&}!(B^5{YL<)dO1q Nm(86,6);,	?O<Ku$6Iru7P<LoYD2FNP3L?_$.)V$@0-e3F5V4X9gDOF2)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2902.368 ns/op
# Warmup Iteration   2: 2730.734 ns/op
# Warmup Iteration   3: 2612.870 ns/op
# Warmup Iteration   4: 2269.281 ns/op
# Warmup Iteration   5: 2291.173 ns/op
Iteration   1: 2277.624 ns/op
Iteration   2: 2296.092 ns/op
Iteration   3: 2277.229 ns/op
Iteration   4: 2267.924 ns/op
Iteration   5: 2302.080 ns/op
Iteration   6: 2266.539 ns/op
Iteration   7: 2324.993 ns/op
Iteration   8: 2284.770 ns/op
Iteration   9: 2348.039 ns/op
Iteration  10: 2265.844 ns/op
Iteration  11: 2267.342 ns/op
Iteration  12: 2291.476 ns/op
Iteration  13: 2289.929 ns/op
Iteration  14: 2294.411 ns/op
Iteration  15: 2265.832 ns/op
Iteration  16: 2266.509 ns/op
Iteration  17: 2281.777 ns/op
Iteration  18: 2272.685 ns/op
Iteration  19: 2279.455 ns/op
Iteration  20: 2266.594 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 3015.642 ns/op
# Warmup Iteration   2: 2840.128 ns/op
# Warmup Iteration   3: 2775.905 ns/op
# Warmup Iteration   4: 2381.081 ns/op
# Warmup Iteration   5: 2381.023 ns/op
Iteration   1: 2401.327 ns/op
Iteration   2: 2380.389 ns/op
Iteration   3: 2408.680 ns/op
Iteration   4: 2380.095 ns/op
Iteration   5: 2418.766 ns/op
Iteration   6: 2379.537 ns/op
Iteration   7: 2430.878 ns/op
Iteration   8: 2380.418 ns/op
Iteration   9: 2380.317 ns/op
Iteration  10: 2446.632 ns/op
Iteration  11: 2379.799 ns/op
Iteration  12: 2380.439 ns/op
Iteration  13: 2394.716 ns/op
Iteration  14: 2380.716 ns/op
Iteration  15: 2391.359 ns/op
Iteration  16: 2380.975 ns/op
Iteration  17: 2380.958 ns/op
Iteration  18: 2402.854 ns/op
Iteration  19: 2380.610 ns/op
Iteration  20: 2394.312 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2895.656 ns/op
# Warmup Iteration   2: 2713.360 ns/op
# Warmup Iteration   3: 2591.894 ns/op
# Warmup Iteration   4: 2249.272 ns/op
# Warmup Iteration   5: 2272.848 ns/op
Iteration   1: 2249.320 ns/op
Iteration   2: 2279.275 ns/op
Iteration   3: 2248.741 ns/op
Iteration   4: 2249.209 ns/op
Iteration   5: 2287.414 ns/op
Iteration   6: 2249.240 ns/op
Iteration   7: 2298.020 ns/op
Iteration   8: 2249.812 ns/op
Iteration   9: 2312.356 ns/op
Iteration  10: 2248.829 ns/op
Iteration  11: 2249.296 ns/op
Iteration  12: 2263.322 ns/op
Iteration  13: 2251.479 ns/op
Iteration  14: 2264.486 ns/op
Iteration  15: 2254.194 ns/op
Iteration  16: 2267.061 ns/op
Iteration  17: 2251.833 ns/op
Iteration  18: 2251.986 ns/op
Iteration  19: 2264.589 ns/op
Iteration  20: 2251.917 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2989.413 ns/op
# Warmup Iteration   2: 2860.580 ns/op
# Warmup Iteration   3: 2803.351 ns/op
# Warmup Iteration   4: 2397.629 ns/op
# Warmup Iteration   5: 2394.152 ns/op
Iteration   1: 2415.417 ns/op
Iteration   2: 2392.988 ns/op
Iteration   3: 2434.326 ns/op
Iteration   4: 2393.051 ns/op
Iteration   5: 2433.259 ns/op
Iteration   6: 2394.250 ns/op
Iteration   7: 2407.187 ns/op
Iteration   8: 2430.365 ns/op
Iteration   9: 2392.982 ns/op
Iteration  10: 2459.873 ns/op
Iteration  11: 2393.076 ns/op
Iteration  12: 2393.313 ns/op
Iteration  13: 2406.035 ns/op
Iteration  14: 2393.549 ns/op
Iteration  15: 2404.938 ns/op
Iteration  16: 2393.310 ns/op
Iteration  17: 2393.368 ns/op
Iteration  18: 2405.488 ns/op
Iteration  19: 2393.290 ns/op
Iteration  20: 2405.364 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 3016.538 ns/op
# Warmup Iteration   2: 2847.046 ns/op
# Warmup Iteration   3: 2795.769 ns/op
# Warmup Iteration   4: 2383.172 ns/op
# Warmup Iteration   5: 2382.569 ns/op
Iteration   1: 2405.088 ns/op
Iteration   2: 2383.697 ns/op
Iteration   3: 2412.779 ns/op
Iteration   4: 2382.763 ns/op
Iteration   5: 2421.435 ns/op
Iteration   6: 2382.848 ns/op
Iteration   7: 2406.223 ns/op
Iteration   8: 2409.969 ns/op
Iteration   9: 2382.972 ns/op
Iteration  10: 2447.663 ns/op
Iteration  11: 2383.739 ns/op
Iteration  12: 2383.892 ns/op
Iteration  13: 2395.851 ns/op
Iteration  14: 2381.863 ns/op
Iteration  15: 2392.842 ns/op
Iteration  16: 2382.343 ns/op
Iteration  17: 2382.061 ns/op
Iteration  18: 2392.397 ns/op
Iteration  19: 2381.833 ns/op
Iteration  20: 2396.698 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2348.477 Â±(99.9%) 22.070 ns/op [Average]
  (min, avg, max) = (2248.741, 2348.477, 2459.873), stdev = 65.073
  CI (99.9%): [2326.407, 2370.546] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                      (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  o4I`17b]	(U(p&fl75LbR;Cm3S{PPE;EUkXwWYuCg`&][{{7$|Y_%\7Bt	b1H=A8&}!(B^5{YL<)dO1q Nm(86,6);,	?O<Ku$6Iru7P<LoYD2FNP3L?_$.)V$@0-e3F5V4X9gDOF2  avgt  100  2336.647 Â± 37.262  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  o4I`17b]	(U(p&fl75LbR;Cm3S{PPE;EUkXwWYuCg`&][{{7$|Y_%\7Bt	b1H=A8&}!(B^5{YL<)dO1q Nm(86,6);,	?O<Ku$6Iru7P<LoYD2FNP3L?_$.)V$@0-e3F5V4X9gDOF2  avgt  100  2348.477 Â± 22.070  ns/op

Benchmark result is saved to split_precompiled_regex_183_141_NonMatch.csv
