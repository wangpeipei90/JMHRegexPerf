# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
  

 

	  	 
 		 		 		
	


     
 	  	  	
 		
				
	 	
	
		
   				 		 



	
	
,
    	 
	
  
	
 
		 	 	   
	 	 	 
	
 
 
 
	
 
	 

	 

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1416.894 ns/op
# Warmup Iteration   2: 1171.081 ns/op
# Warmup Iteration   3: 943.802 ns/op
# Warmup Iteration   4: 944.836 ns/op
# Warmup Iteration   5: 947.973 ns/op
Iteration   1: 933.330 ns/op
Iteration   2: 955.387 ns/op
Iteration   3: 959.400 ns/op
Iteration   4: 938.576 ns/op
Iteration   5: 937.599 ns/op
Iteration   6: 938.222 ns/op
Iteration   7: 933.067 ns/op
Iteration   8: 939.809 ns/op
Iteration   9: 944.112 ns/op
Iteration  10: 945.435 ns/op
Iteration  11: 940.270 ns/op
Iteration  12: 934.082 ns/op
Iteration  13: 946.009 ns/op
Iteration  14: 938.883 ns/op
Iteration  15: 935.424 ns/op
Iteration  16: 935.803 ns/op
Iteration  17: 936.374 ns/op
Iteration  18: 933.325 ns/op
Iteration  19: 935.937 ns/op
Iteration  20: 936.723 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1263.724 ns/op
# Warmup Iteration   2: 944.445 ns/op
# Warmup Iteration   3: 800.155 ns/op
# Warmup Iteration   4: 802.352 ns/op
# Warmup Iteration   5: 806.230 ns/op
Iteration   1: 810.672 ns/op
Iteration   2: 815.833 ns/op
Iteration   3: 797.346 ns/op
Iteration   4: 796.303 ns/op
Iteration   5: 796.308 ns/op
Iteration   6: 800.779 ns/op
Iteration   7: 802.168 ns/op
Iteration   8: 799.520 ns/op
Iteration   9: 797.685 ns/op
Iteration  10: 797.488 ns/op
Iteration  11: 802.423 ns/op
Iteration  12: 794.721 ns/op
Iteration  13: 795.412 ns/op
Iteration  14: 794.635 ns/op
Iteration  15: 796.182 ns/op
Iteration  16: 796.838 ns/op
Iteration  17: 797.046 ns/op
Iteration  18: 796.702 ns/op
Iteration  19: 796.576 ns/op
Iteration  20: 797.174 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1402.060 ns/op
# Warmup Iteration   2: 1143.786 ns/op
# Warmup Iteration   3: 936.712 ns/op
# Warmup Iteration   4: 940.274 ns/op
# Warmup Iteration   5: 943.925 ns/op
Iteration   1: 936.213 ns/op
Iteration   2: 941.064 ns/op
Iteration   3: 954.863 ns/op
Iteration   4: 933.653 ns/op
Iteration   5: 932.568 ns/op
Iteration   6: 931.752 ns/op
Iteration   7: 928.108 ns/op
Iteration   8: 931.611 ns/op
Iteration   9: 932.084 ns/op
Iteration  10: 932.115 ns/op
Iteration  11: 932.127 ns/op
Iteration  12: 936.587 ns/op
Iteration  13: 927.644 ns/op
Iteration  14: 932.981 ns/op
Iteration  15: 932.061 ns/op
Iteration  16: 929.842 ns/op
Iteration  17: 929.998 ns/op
Iteration  18: 929.911 ns/op
Iteration  19: 928.042 ns/op
Iteration  20: 930.556 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1355.767 ns/op
# Warmup Iteration   2: 1080.065 ns/op
# Warmup Iteration   3: 902.446 ns/op
# Warmup Iteration   4: 894.193 ns/op
# Warmup Iteration   5: 898.286 ns/op
Iteration   1: 903.149 ns/op
Iteration   2: 908.659 ns/op
Iteration   3: 883.088 ns/op
Iteration   4: 887.271 ns/op
Iteration   5: 887.688 ns/op
Iteration   6: 887.862 ns/op
Iteration   7: 888.171 ns/op
Iteration   8: 887.179 ns/op
Iteration   9: 887.920 ns/op
Iteration  10: 887.624 ns/op
Iteration  11: 882.215 ns/op
Iteration  12: 886.825 ns/op
Iteration  13: 887.461 ns/op
Iteration  14: 891.493 ns/op
Iteration  15: 885.249 ns/op
Iteration  16: 886.604 ns/op
Iteration  17: 890.197 ns/op
Iteration  18: 882.259 ns/op
Iteration  19: 885.342 ns/op
Iteration  20: 885.913 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1358.938 ns/op
# Warmup Iteration   2: 1098.310 ns/op
# Warmup Iteration   3: 890.833 ns/op
# Warmup Iteration   4: 892.652 ns/op
# Warmup Iteration   5: 895.924 ns/op
Iteration   1: 901.652 ns/op
Iteration   2: 907.398 ns/op
Iteration   3: 882.752 ns/op
Iteration   4: 886.594 ns/op
Iteration   5: 885.908 ns/op
Iteration   6: 885.661 ns/op
Iteration   7: 886.999 ns/op
Iteration   8: 888.839 ns/op
Iteration   9: 887.246 ns/op
Iteration  10: 886.633 ns/op
Iteration  11: 882.541 ns/op
Iteration  12: 889.729 ns/op
Iteration  13: 891.604 ns/op
Iteration  14: 887.170 ns/op
Iteration  15: 884.241 ns/op
Iteration  16: 884.881 ns/op
Iteration  17: 886.440 ns/op
Iteration  18: 882.380 ns/op
Iteration  19: 886.724 ns/op
Iteration  20: 885.748 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  889.767 Â±(99.9%) 17.252 ns/op [Average]
  (min, avg, max) = (794.635, 889.767, 959.400), stdev = 50.868
  CI (99.9%): [872.515, 907.019] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
  

 

	  	 
 		 		 		
	


     
 	  	  	
 		
				
	 	
	
		
   				 		 



	
	
,
    	 
	
  
	
 
		 	 	   
	 	 	 
	
 
 
 
	
 
	 

	 

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1296.035 ns/op
# Warmup Iteration   2: 1007.241 ns/op
# Warmup Iteration   3: 847.813 ns/op
# Warmup Iteration   4: 850.427 ns/op
# Warmup Iteration   5: 854.837 ns/op
Iteration   1: 858.220 ns/op
Iteration   2: 863.612 ns/op
Iteration   3: 844.495 ns/op
Iteration   4: 843.425 ns/op
Iteration   5: 843.942 ns/op
Iteration   6: 844.362 ns/op
Iteration   7: 845.488 ns/op
Iteration   8: 848.639 ns/op
Iteration   9: 846.829 ns/op
Iteration  10: 839.893 ns/op
Iteration  11: 851.774 ns/op
Iteration  12: 845.322 ns/op
Iteration  13: 841.341 ns/op
Iteration  14: 841.266 ns/op
Iteration  15: 842.232 ns/op
Iteration  16: 841.238 ns/op
Iteration  17: 841.235 ns/op
Iteration  18: 841.513 ns/op
Iteration  19: 841.061 ns/op
Iteration  20: 840.955 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1321.053 ns/op
# Warmup Iteration   2: 1064.104 ns/op
# Warmup Iteration   3: 879.332 ns/op
# Warmup Iteration   4: 882.956 ns/op
# Warmup Iteration   5: 887.460 ns/op
Iteration   1: 896.813 ns/op
Iteration   2: 896.188 ns/op
Iteration   3: 877.883 ns/op
Iteration   4: 876.002 ns/op
Iteration   5: 871.350 ns/op
Iteration   6: 875.608 ns/op
Iteration   7: 876.675 ns/op
Iteration   8: 874.669 ns/op
Iteration   9: 877.048 ns/op
Iteration  10: 878.955 ns/op
Iteration  11: 882.312 ns/op
Iteration  12: 877.009 ns/op
Iteration  13: 879.523 ns/op
Iteration  14: 873.367 ns/op
Iteration  15: 870.117 ns/op
Iteration  16: 873.424 ns/op
Iteration  17: 874.073 ns/op
Iteration  18: 872.702 ns/op
Iteration  19: 872.828 ns/op
Iteration  20: 872.475 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1357.600 ns/op
# Warmup Iteration   2: 1097.611 ns/op
# Warmup Iteration   3: 910.166 ns/op
# Warmup Iteration   4: 911.885 ns/op
# Warmup Iteration   5: 916.088 ns/op
Iteration   1: 920.134 ns/op
Iteration   2: 925.497 ns/op
Iteration   3: 900.870 ns/op
Iteration   4: 904.774 ns/op
Iteration   5: 904.950 ns/op
Iteration   6: 905.058 ns/op
Iteration   7: 904.694 ns/op
Iteration   8: 909.721 ns/op
Iteration   9: 908.911 ns/op
Iteration  10: 905.683 ns/op
Iteration  11: 900.560 ns/op
Iteration  12: 906.895 ns/op
Iteration  13: 909.058 ns/op
Iteration  14: 902.763 ns/op
Iteration  15: 903.397 ns/op
Iteration  16: 903.223 ns/op
Iteration  17: 903.371 ns/op
Iteration  18: 904.160 ns/op
Iteration  19: 899.711 ns/op
Iteration  20: 903.994 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1294.707 ns/op
# Warmup Iteration   2: 1012.096 ns/op
# Warmup Iteration   3: 854.128 ns/op
# Warmup Iteration   4: 856.258 ns/op
# Warmup Iteration   5: 859.971 ns/op
Iteration   1: 863.998 ns/op
Iteration   2: 869.562 ns/op
Iteration   3: 849.987 ns/op
Iteration   4: 849.230 ns/op
Iteration   5: 849.506 ns/op
Iteration   6: 849.828 ns/op
Iteration   7: 849.728 ns/op
Iteration   8: 850.351 ns/op
Iteration   9: 844.901 ns/op
Iteration  10: 850.727 ns/op
Iteration  11: 870.903 ns/op
Iteration  12: 851.678 ns/op
Iteration  13: 854.223 ns/op
Iteration  14: 847.175 ns/op
Iteration  15: 847.429 ns/op
Iteration  16: 846.835 ns/op
Iteration  17: 853.185 ns/op
Iteration  18: 849.470 ns/op
Iteration  19: 849.391 ns/op
Iteration  20: 867.049 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1416.402 ns/op
# Warmup Iteration   2: 1171.877 ns/op
# Warmup Iteration   3: 959.624 ns/op
# Warmup Iteration   4: 963.028 ns/op
# Warmup Iteration   5: 966.391 ns/op
Iteration   1: 951.471 ns/op
Iteration   2: 971.566 ns/op
Iteration   3: 977.573 ns/op
Iteration   4: 955.569 ns/op
Iteration   5: 955.280 ns/op
Iteration   6: 956.681 ns/op
Iteration   7: 950.447 ns/op
Iteration   8: 955.385 ns/op
Iteration   9: 954.691 ns/op
Iteration  10: 954.734 ns/op
Iteration  11: 955.299 ns/op
Iteration  12: 955.788 ns/op
Iteration  13: 951.509 ns/op
Iteration  14: 956.799 ns/op
Iteration  15: 954.888 ns/op
Iteration  16: 953.593 ns/op
Iteration  17: 953.694 ns/op
Iteration  18: 954.194 ns/op
Iteration  19: 950.678 ns/op
Iteration  20: 953.422 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  887.717 Â±(99.9%) 13.925 ns/op [Average]
  (min, avg, max) = (839.893, 887.717, 977.573), stdev = 41.057
  CI (99.9%): [873.792, 901.642] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                        (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
  

 

	  	 
 		 		 		
	


     
 	  	  	
 		
				
	 	
	
		
   				 		 



	
	
,
    	 
	
  
	
 
		 	 	   
	 	 	 
	
 
 
 
	
 
	 

	 

  avgt  100  889.767 Â± 17.252  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
  

 

	  	 
 		 		 		
	


     
 	  	  	
 		
				
	 	
	
		
   				 		 



	
	
,
    	 
	
  
	
 
		 	 	   
	 	 	 
	
 
 
 
	
 
	 

	 

  avgt  100  887.717 Â± 13.925  ns/op

Benchmark result is saved to split_precompiled_regex_156_255_Match.csv
