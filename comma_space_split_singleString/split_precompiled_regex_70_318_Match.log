# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 





	

	

 	 
 	


 
 



	   	 
	
	
   	 	   

	 
	 	
 

		

	
,			
	
 
	
  			   
   
 
	
 

		 	 		 	 	  

	   
 


 					

	   			



	
	  	    			 	 

	 
	
 
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1531.101 ns/op
# Warmup Iteration   2: 1360.739 ns/op
# Warmup Iteration   3: 1065.377 ns/op
# Warmup Iteration   4: 1067.206 ns/op
# Warmup Iteration   5: 1074.763 ns/op
Iteration   1: 1079.788 ns/op
Iteration   2: 1085.199 ns/op
Iteration   3: 1060.713 ns/op
Iteration   4: 1090.969 ns/op
Iteration   5: 1066.502 ns/op
Iteration   6: 1065.769 ns/op
Iteration   7: 1061.450 ns/op
Iteration   8: 1065.709 ns/op
Iteration   9: 1065.900 ns/op
Iteration  10: 1060.926 ns/op
Iteration  11: 1067.029 ns/op
Iteration  12: 1066.478 ns/op
Iteration  13: 1066.407 ns/op
Iteration  14: 1061.315 ns/op
Iteration  15: 1067.668 ns/op
Iteration  16: 1066.744 ns/op
Iteration  17: 1061.067 ns/op
Iteration  18: 1068.907 ns/op
Iteration  19: 1063.724 ns/op
Iteration  20: 1064.584 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1442.755 ns/op
# Warmup Iteration   2: 1214.663 ns/op
# Warmup Iteration   3: 986.108 ns/op
# Warmup Iteration   4: 989.302 ns/op
# Warmup Iteration   5: 977.392 ns/op
Iteration   1: 994.126 ns/op
Iteration   2: 999.262 ns/op
Iteration   3: 1005.420 ns/op
Iteration   4: 982.384 ns/op
Iteration   5: 977.362 ns/op
Iteration   6: 982.218 ns/op
Iteration   7: 982.196 ns/op
Iteration   8: 983.017 ns/op
Iteration   9: 982.182 ns/op
Iteration  10: 977.432 ns/op
Iteration  11: 981.921 ns/op
Iteration  12: 989.349 ns/op
Iteration  13: 982.978 ns/op
Iteration  14: 977.282 ns/op
Iteration  15: 989.664 ns/op
Iteration  16: 980.065 ns/op
Iteration  17: 980.248 ns/op
Iteration  18: 980.419 ns/op
Iteration  19: 977.054 ns/op
Iteration  20: 981.986 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1443.752 ns/op
# Warmup Iteration   2: 1214.288 ns/op
# Warmup Iteration   3: 991.886 ns/op
# Warmup Iteration   4: 990.896 ns/op
# Warmup Iteration   5: 976.199 ns/op
Iteration   1: 991.800 ns/op
Iteration   2: 997.180 ns/op
Iteration   3: 1002.617 ns/op
Iteration   4: 982.237 ns/op
Iteration   5: 975.772 ns/op
Iteration   6: 979.223 ns/op
Iteration   7: 979.688 ns/op
Iteration   8: 979.446 ns/op
Iteration   9: 980.418 ns/op
Iteration  10: 975.726 ns/op
Iteration  11: 980.391 ns/op
Iteration  12: 994.379 ns/op
Iteration  13: 980.529 ns/op
Iteration  14: 985.816 ns/op
Iteration  15: 975.502 ns/op
Iteration  16: 977.598 ns/op
Iteration  17: 977.607 ns/op
Iteration  18: 977.732 ns/op
Iteration  19: 975.586 ns/op
Iteration  20: 977.508 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1447.766 ns/op
# Warmup Iteration   2: 1239.637 ns/op
# Warmup Iteration   3: 987.776 ns/op
# Warmup Iteration   4: 991.410 ns/op
# Warmup Iteration   5: 978.215 ns/op
Iteration   1: 993.829 ns/op
Iteration   2: 1000.138 ns/op
Iteration   3: 1006.144 ns/op
Iteration   4: 984.228 ns/op
Iteration   5: 978.368 ns/op
Iteration   6: 982.819 ns/op
Iteration   7: 983.156 ns/op
Iteration   8: 982.916 ns/op
Iteration   9: 983.202 ns/op
Iteration  10: 979.083 ns/op
Iteration  11: 983.697 ns/op
Iteration  12: 984.264 ns/op
Iteration  13: 989.249 ns/op
Iteration  14: 979.518 ns/op
Iteration  15: 987.474 ns/op
Iteration  16: 982.100 ns/op
Iteration  17: 982.126 ns/op
Iteration  18: 982.468 ns/op
Iteration  19: 979.273 ns/op
Iteration  20: 985.350 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1443.649 ns/op
# Warmup Iteration   2: 1224.019 ns/op
# Warmup Iteration   3: 986.237 ns/op
# Warmup Iteration   4: 989.002 ns/op
# Warmup Iteration   5: 978.034 ns/op
Iteration   1: 993.326 ns/op
Iteration   2: 998.213 ns/op
Iteration   3: 1003.631 ns/op
Iteration   4: 981.758 ns/op
Iteration   5: 976.652 ns/op
Iteration   6: 981.051 ns/op
Iteration   7: 982.762 ns/op
Iteration   8: 984.044 ns/op
Iteration   9: 981.315 ns/op
Iteration  10: 976.852 ns/op
Iteration  11: 980.868 ns/op
Iteration  12: 980.207 ns/op
Iteration  13: 981.246 ns/op
Iteration  14: 976.833 ns/op
Iteration  15: 985.075 ns/op
Iteration  16: 980.549 ns/op
Iteration  17: 978.604 ns/op
Iteration  18: 978.506 ns/op
Iteration  19: 976.191 ns/op
Iteration  20: 978.672 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1000.559 Â±(99.9%) 11.749 ns/op [Average]
  (min, avg, max) = (975.502, 1000.559, 1090.969), stdev = 34.643
  CI (99.9%): [988.810, 1012.308] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 





	

	

 	 
 	


 
 



	   	 
	
	
   	 	   

	 
	 	
 

		

	
,			
	
 
	
  			   
   
 
	
 

		 	 		 	 	  

	   
 


 					

	   			



	
	  	    			 	 

	 
	
 
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1455.913 ns/op
# Warmup Iteration   2: 1246.253 ns/op
# Warmup Iteration   3: 1007.547 ns/op
# Warmup Iteration   4: 1010.066 ns/op
# Warmup Iteration   5: 997.493 ns/op
Iteration   1: 1014.160 ns/op
Iteration   2: 1020.264 ns/op
Iteration   3: 1025.418 ns/op
Iteration   4: 1004.219 ns/op
Iteration   5: 998.069 ns/op
Iteration   6: 1002.630 ns/op
Iteration   7: 1002.428 ns/op
Iteration   8: 1002.751 ns/op
Iteration   9: 1002.170 ns/op
Iteration  10: 998.335 ns/op
Iteration  11: 1003.267 ns/op
Iteration  12: 1003.458 ns/op
Iteration  13: 1004.447 ns/op
Iteration  14: 998.534 ns/op
Iteration  15: 1006.527 ns/op
Iteration  16: 1009.600 ns/op
Iteration  17: 1001.817 ns/op
Iteration  18: 1001.928 ns/op
Iteration  19: 998.062 ns/op
Iteration  20: 1000.868 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1451.144 ns/op
# Warmup Iteration   2: 1241.743 ns/op
# Warmup Iteration   3: 1005.245 ns/op
# Warmup Iteration   4: 1007.960 ns/op
# Warmup Iteration   5: 993.781 ns/op
Iteration   1: 1010.833 ns/op
Iteration   2: 1015.619 ns/op
Iteration   3: 1020.891 ns/op
Iteration   4: 999.088 ns/op
Iteration   5: 993.760 ns/op
Iteration   6: 1004.052 ns/op
Iteration   7: 999.542 ns/op
Iteration   8: 998.089 ns/op
Iteration   9: 999.134 ns/op
Iteration  10: 993.215 ns/op
Iteration  11: 1000.938 ns/op
Iteration  12: 1001.301 ns/op
Iteration  13: 1001.734 ns/op
Iteration  14: 1011.625 ns/op
Iteration  15: 993.114 ns/op
Iteration  16: 995.375 ns/op
Iteration  17: 1000.880 ns/op
Iteration  18: 1003.856 ns/op
Iteration  19: 992.647 ns/op
Iteration  20: 996.008 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1423.745 ns/op
# Warmup Iteration   2: 1233.329 ns/op
# Warmup Iteration   3: 1005.190 ns/op
# Warmup Iteration   4: 1007.947 ns/op
# Warmup Iteration   5: 994.408 ns/op
Iteration   1: 1012.029 ns/op
Iteration   2: 1019.237 ns/op
Iteration   3: 1023.588 ns/op
Iteration   4: 1001.033 ns/op
Iteration   5: 994.486 ns/op
Iteration   6: 1000.961 ns/op
Iteration   7: 1006.423 ns/op
Iteration   8: 999.839 ns/op
Iteration   9: 1005.648 ns/op
Iteration  10: 994.022 ns/op
Iteration  11: 1001.719 ns/op
Iteration  12: 1003.858 ns/op
Iteration  13: 1008.311 ns/op
Iteration  14: 1000.202 ns/op
Iteration  15: 993.533 ns/op
Iteration  16: 1007.343 ns/op
Iteration  17: 996.044 ns/op
Iteration  18: 996.257 ns/op
Iteration  19: 993.178 ns/op
Iteration  20: 994.912 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1461.963 ns/op
# Warmup Iteration   2: 1260.696 ns/op
# Warmup Iteration   3: 1007.993 ns/op
# Warmup Iteration   4: 1011.333 ns/op
# Warmup Iteration   5: 997.657 ns/op
Iteration   1: 1014.362 ns/op
Iteration   2: 1018.684 ns/op
Iteration   3: 1025.537 ns/op
Iteration   4: 1002.830 ns/op
Iteration   5: 997.996 ns/op
Iteration   6: 1002.002 ns/op
Iteration   7: 1001.892 ns/op
Iteration   8: 1002.968 ns/op
Iteration   9: 1006.166 ns/op
Iteration  10: 997.634 ns/op
Iteration  11: 1007.633 ns/op
Iteration  12: 1008.758 ns/op
Iteration  13: 1004.280 ns/op
Iteration  14: 997.019 ns/op
Iteration  15: 1005.303 ns/op
Iteration  16: 999.937 ns/op
Iteration  17: 1000.631 ns/op
Iteration  18: 999.046 ns/op
Iteration  19: 996.545 ns/op
Iteration  20: 998.624 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1460.158 ns/op
# Warmup Iteration   2: 1243.898 ns/op
# Warmup Iteration   3: 1006.178 ns/op
# Warmup Iteration   4: 1009.801 ns/op
# Warmup Iteration   5: 997.626 ns/op
Iteration   1: 1021.408 ns/op
Iteration   2: 1020.237 ns/op
Iteration   3: 1025.362 ns/op
Iteration   4: 1002.365 ns/op
Iteration   5: 997.544 ns/op
Iteration   6: 1002.687 ns/op
Iteration   7: 1002.095 ns/op
Iteration   8: 1001.947 ns/op
Iteration   9: 1002.789 ns/op
Iteration  10: 997.476 ns/op
Iteration  11: 1002.561 ns/op
Iteration  12: 1002.152 ns/op
Iteration  13: 1000.915 ns/op
Iteration  14: 1002.766 ns/op
Iteration  15: 996.618 ns/op
Iteration  16: 1003.120 ns/op
Iteration  17: 999.365 ns/op
Iteration  18: 1000.008 ns/op
Iteration  19: 996.930 ns/op
Iteration  20: 1001.796 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1003.513 Â±(99.9%) 2.652 ns/op [Average]
  (min, avg, max) = (992.647, 1003.513, 1025.537), stdev = 7.818
  CI (99.9%): [1000.861, 1006.164] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  





	

	

 	 
 	


 
 



	   	 
	
	
   	 	   

	 
	 	
 

		

	
,			
	
 
	
  			   
   
 
	
 

		 	 		 	 	  

	   
 


 					

	   			



	
	  	    			 	 

	 
	
 
  avgt  100  1000.559 Â± 11.749  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  





	

	

 	 
 	


 
 



	   	 
	
	
   	 	   

	 
	 	
 

		

	
,			
	
 
	
  			   
   
 
	
 

		 	 		 	 	  

	   
 


 					

	   			



	
	  	    			 	 

	 
	
 
  avgt  100  1003.513 Â±  2.652  ns/op

Benchmark result is saved to split_precompiled_regex_70_318_Match.csv
