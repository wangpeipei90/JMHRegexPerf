# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
LHX0U&.(VT'bRJ]S+{*4{| xnR\aekX`z_Bg>rZQl\LX??h>V}^r>eP	L)PN}zNb1)J2\Mk-1s'Wz9B`TDjTD{%tC7AcI"[A
~r]jGQ!h9M)	Gd)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1613.084 ns/op
# Warmup Iteration   2: 1591.537 ns/op
# Warmup Iteration   3: 1336.144 ns/op
# Warmup Iteration   4: 1272.424 ns/op
# Warmup Iteration   5: 1260.873 ns/op
Iteration   1: 1275.826 ns/op
Iteration   2: 1260.031 ns/op
Iteration   3: 1281.744 ns/op
Iteration   4: 1261.193 ns/op
Iteration   5: 1288.169 ns/op
Iteration   6: 1273.971 ns/op
Iteration   7: 1281.780 ns/op
Iteration   8: 1267.720 ns/op
Iteration   9: 1261.065 ns/op
Iteration  10: 1266.607 ns/op
Iteration  11: 1260.945 ns/op
Iteration  12: 1266.070 ns/op
Iteration  13: 1260.605 ns/op
Iteration  14: 1267.336 ns/op
Iteration  15: 1260.769 ns/op
Iteration  16: 1266.911 ns/op
Iteration  17: 1260.899 ns/op
Iteration  18: 1267.757 ns/op
Iteration  19: 1259.889 ns/op
Iteration  20: 1267.570 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1618.779 ns/op
# Warmup Iteration   2: 1591.989 ns/op
# Warmup Iteration   3: 1336.834 ns/op
# Warmup Iteration   4: 1274.486 ns/op
# Warmup Iteration   5: 1261.254 ns/op
Iteration   1: 1277.267 ns/op
Iteration   2: 1261.436 ns/op
Iteration   3: 1281.999 ns/op
Iteration   4: 1261.909 ns/op
Iteration   5: 1288.597 ns/op
Iteration   6: 1276.997 ns/op
Iteration   7: 1280.801 ns/op
Iteration   8: 1269.807 ns/op
Iteration   9: 1261.290 ns/op
Iteration  10: 1267.881 ns/op
Iteration  11: 1261.720 ns/op
Iteration  12: 1267.853 ns/op
Iteration  13: 1267.144 ns/op
Iteration  14: 1272.143 ns/op
Iteration  15: 1261.947 ns/op
Iteration  16: 1267.778 ns/op
Iteration  17: 1261.805 ns/op
Iteration  18: 1267.832 ns/op
Iteration  19: 1261.840 ns/op
Iteration  20: 1268.740 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1627.943 ns/op
# Warmup Iteration   2: 1603.691 ns/op
# Warmup Iteration   3: 1347.938 ns/op
# Warmup Iteration   4: 1278.898 ns/op
# Warmup Iteration   5: 1260.655 ns/op
Iteration   1: 1276.176 ns/op
Iteration   2: 1260.695 ns/op
Iteration   3: 1281.750 ns/op
Iteration   4: 1261.213 ns/op
Iteration   5: 1288.779 ns/op
Iteration   6: 1265.559 ns/op
Iteration   7: 1292.372 ns/op
Iteration   8: 1270.795 ns/op
Iteration   9: 1260.738 ns/op
Iteration  10: 1266.811 ns/op
Iteration  11: 1261.421 ns/op
Iteration  12: 1267.720 ns/op
Iteration  13: 1261.068 ns/op
Iteration  14: 1266.392 ns/op
Iteration  15: 1261.250 ns/op
Iteration  16: 1266.996 ns/op
Iteration  17: 1261.341 ns/op
Iteration  18: 1267.477 ns/op
Iteration  19: 1261.537 ns/op
Iteration  20: 1267.226 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1619.095 ns/op
# Warmup Iteration   2: 1587.852 ns/op
# Warmup Iteration   3: 1333.093 ns/op
# Warmup Iteration   4: 1267.655 ns/op
# Warmup Iteration   5: 1255.554 ns/op
Iteration   1: 1272.139 ns/op
Iteration   2: 1255.714 ns/op
Iteration   3: 1277.212 ns/op
Iteration   4: 1256.026 ns/op
Iteration   5: 1283.219 ns/op
Iteration   6: 1272.204 ns/op
Iteration   7: 1275.056 ns/op
Iteration   8: 1262.529 ns/op
Iteration   9: 1256.009 ns/op
Iteration  10: 1262.053 ns/op
Iteration  11: 1255.961 ns/op
Iteration  12: 1262.594 ns/op
Iteration  13: 1256.184 ns/op
Iteration  14: 1262.536 ns/op
Iteration  15: 1256.216 ns/op
Iteration  16: 1262.772 ns/op
Iteration  17: 1256.182 ns/op
Iteration  18: 1263.070 ns/op
Iteration  19: 1256.210 ns/op
Iteration  20: 1262.080 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1616.850 ns/op
# Warmup Iteration   2: 1598.476 ns/op
# Warmup Iteration   3: 1364.086 ns/op
# Warmup Iteration   4: 1275.877 ns/op
# Warmup Iteration   5: 1262.007 ns/op
Iteration   1: 1278.321 ns/op
Iteration   2: 1262.927 ns/op
Iteration   3: 1283.514 ns/op
Iteration   4: 1261.723 ns/op
Iteration   5: 1290.025 ns/op
Iteration   6: 1262.022 ns/op
Iteration   7: 1296.193 ns/op
Iteration   8: 1262.565 ns/op
Iteration   9: 1268.751 ns/op
Iteration  10: 1269.566 ns/op
Iteration  11: 1261.888 ns/op
Iteration  12: 1269.711 ns/op
Iteration  13: 1261.666 ns/op
Iteration  14: 1268.013 ns/op
Iteration  15: 1261.858 ns/op
Iteration  16: 1267.932 ns/op
Iteration  17: 1262.146 ns/op
Iteration  18: 1268.278 ns/op
Iteration  19: 1261.855 ns/op
Iteration  20: 1269.288 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1267.652 Â±(99.9%) 3.037 ns/op [Average]
  (min, avg, max) = (1255.714, 1267.652, 1296.193), stdev = 8.956
  CI (99.9%): [1264.614, 1270.689] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
LHX0U&.(VT'bRJ]S+{*4{| xnR\aekX`z_Bg>rZQl\LX??h>V}^r>eP	L)PN}zNb1)J2\Mk-1s'Wz9B`TDjTD{%tC7AcI"[A
~r]jGQ!h9M)	Gd)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1611.388 ns/op
# Warmup Iteration   2: 1591.028 ns/op
# Warmup Iteration   3: 1335.500 ns/op
# Warmup Iteration   4: 1273.336 ns/op
# Warmup Iteration   5: 1261.678 ns/op
Iteration   1: 1277.589 ns/op
Iteration   2: 1261.560 ns/op
Iteration   3: 1282.711 ns/op
Iteration   4: 1261.773 ns/op
Iteration   5: 1289.091 ns/op
Iteration   6: 1278.344 ns/op
Iteration   7: 1279.872 ns/op
Iteration   8: 1270.078 ns/op
Iteration   9: 1261.009 ns/op
Iteration  10: 1267.486 ns/op
Iteration  11: 1261.469 ns/op
Iteration  12: 1267.968 ns/op
Iteration  13: 1261.707 ns/op
Iteration  14: 1267.876 ns/op
Iteration  15: 1261.828 ns/op
Iteration  16: 1268.104 ns/op
Iteration  17: 1261.989 ns/op
Iteration  18: 1274.408 ns/op
Iteration  19: 1261.972 ns/op
Iteration  20: 1270.366 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1619.790 ns/op
# Warmup Iteration   2: 1591.408 ns/op
# Warmup Iteration   3: 1340.228 ns/op
# Warmup Iteration   4: 1274.952 ns/op
# Warmup Iteration   5: 1262.406 ns/op
Iteration   1: 1277.866 ns/op
Iteration   2: 1262.947 ns/op
Iteration   3: 1283.792 ns/op
Iteration   4: 1264.067 ns/op
Iteration   5: 1290.162 ns/op
Iteration   6: 1269.434 ns/op
Iteration   7: 1298.095 ns/op
Iteration   8: 1271.718 ns/op
Iteration   9: 1262.521 ns/op
Iteration  10: 1268.421 ns/op
Iteration  11: 1262.395 ns/op
Iteration  12: 1268.390 ns/op
Iteration  13: 1262.649 ns/op
Iteration  14: 1269.428 ns/op
Iteration  15: 1262.807 ns/op
Iteration  16: 1269.874 ns/op
Iteration  17: 1262.919 ns/op
Iteration  18: 1276.998 ns/op
Iteration  19: 1262.913 ns/op
Iteration  20: 1272.513 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1611.289 ns/op
# Warmup Iteration   2: 1592.624 ns/op
# Warmup Iteration   3: 1334.174 ns/op
# Warmup Iteration   4: 1267.462 ns/op
# Warmup Iteration   5: 1255.372 ns/op
Iteration   1: 1272.076 ns/op
Iteration   2: 1255.717 ns/op
Iteration   3: 1278.243 ns/op
Iteration   4: 1255.812 ns/op
Iteration   5: 1283.560 ns/op
Iteration   6: 1269.690 ns/op
Iteration   7: 1276.793 ns/op
Iteration   8: 1262.333 ns/op
Iteration   9: 1254.906 ns/op
Iteration  10: 1261.633 ns/op
Iteration  11: 1255.040 ns/op
Iteration  12: 1261.974 ns/op
Iteration  13: 1254.656 ns/op
Iteration  14: 1261.688 ns/op
Iteration  15: 1255.237 ns/op
Iteration  16: 1269.152 ns/op
Iteration  17: 1255.667 ns/op
Iteration  18: 1304.137 ns/op
Iteration  19: 1255.423 ns/op
Iteration  20: 1264.198 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1626.253 ns/op
# Warmup Iteration   2: 1591.104 ns/op
# Warmup Iteration   3: 1337.045 ns/op
# Warmup Iteration   4: 1272.621 ns/op
# Warmup Iteration   5: 1260.456 ns/op
Iteration   1: 1276.419 ns/op
Iteration   2: 1260.836 ns/op
Iteration   3: 1281.879 ns/op
Iteration   4: 1261.078 ns/op
Iteration   5: 1288.870 ns/op
Iteration   6: 1274.364 ns/op
Iteration   7: 1282.663 ns/op
Iteration   8: 1268.338 ns/op
Iteration   9: 1261.134 ns/op
Iteration  10: 1267.177 ns/op
Iteration  11: 1260.957 ns/op
Iteration  12: 1266.700 ns/op
Iteration  13: 1260.612 ns/op
Iteration  14: 1266.597 ns/op
Iteration  15: 1260.802 ns/op
Iteration  16: 1270.443 ns/op
Iteration  17: 1263.739 ns/op
Iteration  18: 1267.010 ns/op
Iteration  19: 1260.804 ns/op
Iteration  20: 1268.311 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1628.247 ns/op
# Warmup Iteration   2: 1597.465 ns/op
# Warmup Iteration   3: 1348.384 ns/op
# Warmup Iteration   4: 1280.594 ns/op
# Warmup Iteration   5: 1268.862 ns/op
Iteration   1: 1286.021 ns/op
Iteration   2: 1269.538 ns/op
Iteration   3: 1290.202 ns/op
Iteration   4: 1269.156 ns/op
Iteration   5: 1295.716 ns/op
Iteration   6: 1279.973 ns/op
Iteration   7: 1292.956 ns/op
Iteration   8: 1280.324 ns/op
Iteration   9: 1268.190 ns/op
Iteration  10: 1275.003 ns/op
Iteration  11: 1268.058 ns/op
Iteration  12: 1273.832 ns/op
Iteration  13: 1268.236 ns/op
Iteration  14: 1274.551 ns/op
Iteration  15: 1267.833 ns/op
Iteration  16: 1282.725 ns/op
Iteration  17: 1267.905 ns/op
Iteration  18: 1274.535 ns/op
Iteration  19: 1267.968 ns/op
Iteration  20: 1275.782 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1270.123 Â±(99.9%) 3.492 ns/op [Average]
  (min, avg, max) = (1254.656, 1270.123, 1304.137), stdev = 10.297
  CI (99.9%): [1266.631, 1273.615] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                               (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
LHX0U&.(VT'bRJ]S+{*4{| xnR\aekX`z_Bg>rZQl\LX??h>V}^r>eP	L)PN}zNb1)J2\Mk-1s'Wz9B`TDjTD{%tC7AcI"[A
~r]jGQ!h9M)	Gd  avgt  100  1267.652 Â± 3.037  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
LHX0U&.(VT'bRJ]S+{*4{| xnR\aekX`z_Bg>rZQl\LX??h>V}^r>eP	L)PN}zNb1)J2\Mk-1s'Wz9B`TDjTD{%tC7AcI"[A
~r]jGQ!h9M)	Gd  avgt  100  1270.123 Â± 3.492  ns/op

Benchmark result is saved to split_precompiled_regex_235_118_NonMatch.csv
