# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	


 	
			
	
	 
		
						 	 

	 	
 	  
		
	 	
	
  
				
		
 			

 	 
  	
		
 	   	 		
	 			 
		 	  


,


 	   
	   	
 	       
	
    

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1389.091 ns/op
# Warmup Iteration   2: 1148.145 ns/op
# Warmup Iteration   3: 936.098 ns/op
# Warmup Iteration   4: 937.711 ns/op
# Warmup Iteration   5: 942.026 ns/op
Iteration   1: 932.952 ns/op
Iteration   2: 941.070 ns/op
Iteration   3: 952.060 ns/op
Iteration   4: 932.775 ns/op
Iteration   5: 937.375 ns/op
Iteration   6: 931.142 ns/op
Iteration   7: 926.544 ns/op
Iteration   8: 930.839 ns/op
Iteration   9: 930.932 ns/op
Iteration  10: 935.767 ns/op
Iteration  11: 932.190 ns/op
Iteration  12: 930.976 ns/op
Iteration  13: 927.068 ns/op
Iteration  14: 930.957 ns/op
Iteration  15: 928.285 ns/op
Iteration  16: 928.392 ns/op
Iteration  17: 929.356 ns/op
Iteration  18: 930.333 ns/op
Iteration  19: 926.487 ns/op
Iteration  20: 929.642 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1292.371 ns/op
# Warmup Iteration   2: 986.711 ns/op
# Warmup Iteration   3: 830.188 ns/op
# Warmup Iteration   4: 831.855 ns/op
# Warmup Iteration   5: 835.899 ns/op
Iteration   1: 839.404 ns/op
Iteration   2: 843.614 ns/op
Iteration   3: 826.812 ns/op
Iteration   4: 825.056 ns/op
Iteration   5: 824.899 ns/op
Iteration   6: 826.102 ns/op
Iteration   7: 824.924 ns/op
Iteration   8: 825.451 ns/op
Iteration   9: 827.716 ns/op
Iteration  10: 821.132 ns/op
Iteration  11: 829.547 ns/op
Iteration  12: 832.000 ns/op
Iteration  13: 822.945 ns/op
Iteration  14: 823.041 ns/op
Iteration  15: 824.483 ns/op
Iteration  16: 824.470 ns/op
Iteration  17: 824.716 ns/op
Iteration  18: 824.382 ns/op
Iteration  19: 823.616 ns/op
Iteration  20: 823.690 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1324.674 ns/op
# Warmup Iteration   2: 1031.171 ns/op
# Warmup Iteration   3: 861.860 ns/op
# Warmup Iteration   4: 869.965 ns/op
# Warmup Iteration   5: 877.697 ns/op
Iteration   1: 877.142 ns/op
Iteration   2: 889.794 ns/op
Iteration   3: 871.028 ns/op
Iteration   4: 867.997 ns/op
Iteration   5: 864.872 ns/op
Iteration   6: 868.781 ns/op
Iteration   7: 858.824 ns/op
Iteration   8: 858.292 ns/op
Iteration   9: 858.095 ns/op
Iteration  10: 858.062 ns/op
Iteration  11: 858.216 ns/op
Iteration  12: 857.879 ns/op
Iteration  13: 855.275 ns/op
Iteration  14: 866.951 ns/op
Iteration  15: 866.516 ns/op
Iteration  16: 857.812 ns/op
Iteration  17: 854.815 ns/op
Iteration  18: 854.315 ns/op
Iteration  19: 855.542 ns/op
Iteration  20: 855.909 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1285.777 ns/op
# Warmup Iteration   2: 1031.223 ns/op
# Warmup Iteration   3: 859.580 ns/op
# Warmup Iteration   4: 862.237 ns/op
# Warmup Iteration   5: 865.343 ns/op
Iteration   1: 869.655 ns/op
Iteration   2: 875.209 ns/op
Iteration   3: 855.455 ns/op
Iteration   4: 855.065 ns/op
Iteration   5: 850.551 ns/op
Iteration   6: 855.044 ns/op
Iteration   7: 854.849 ns/op
Iteration   8: 855.196 ns/op
Iteration   9: 856.059 ns/op
Iteration  10: 858.471 ns/op
Iteration  11: 857.059 ns/op
Iteration  12: 857.016 ns/op
Iteration  13: 853.197 ns/op
Iteration  14: 857.065 ns/op
Iteration  15: 853.998 ns/op
Iteration  16: 851.166 ns/op
Iteration  17: 853.051 ns/op
Iteration  18: 854.663 ns/op
Iteration  19: 853.776 ns/op
Iteration  20: 854.333 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1365.423 ns/op
# Warmup Iteration   2: 1092.265 ns/op
# Warmup Iteration   3: 901.086 ns/op
# Warmup Iteration   4: 903.610 ns/op
# Warmup Iteration   5: 907.006 ns/op
Iteration   1: 912.020 ns/op
Iteration   2: 907.321 ns/op
Iteration   3: 903.745 ns/op
Iteration   4: 896.656 ns/op
Iteration   5: 896.309 ns/op
Iteration   6: 897.039 ns/op
Iteration   7: 897.198 ns/op
Iteration   8: 897.285 ns/op
Iteration   9: 896.847 ns/op
Iteration  10: 892.582 ns/op
Iteration  11: 897.394 ns/op
Iteration  12: 899.485 ns/op
Iteration  13: 900.668 ns/op
Iteration  14: 897.957 ns/op
Iteration  15: 925.258 ns/op
Iteration  16: 897.845 ns/op
Iteration  17: 892.101 ns/op
Iteration  18: 901.044 ns/op
Iteration  19: 894.281 ns/op
Iteration  20: 894.236 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  875.674 Â±(99.9%) 12.685 ns/op [Average]
  (min, avg, max) = (821.132, 875.674, 952.060), stdev = 37.402
  CI (99.9%): [862.989, 888.359] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	


 	
			
	
	 
		
						 	 

	 	
 	  
		
	 	
	
  
				
		
 			

 	 
  	
		
 	   	 		
	 			 
		 	  


,


 	   
	   	
 	       
	
    

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1302.841 ns/op
# Warmup Iteration   2: 1011.747 ns/op
# Warmup Iteration   3: 850.859 ns/op
# Warmup Iteration   4: 848.911 ns/op
# Warmup Iteration   5: 853.000 ns/op
Iteration   1: 856.215 ns/op
Iteration   2: 861.675 ns/op
Iteration   3: 842.960 ns/op
Iteration   4: 842.019 ns/op
Iteration   5: 842.242 ns/op
Iteration   6: 842.306 ns/op
Iteration   7: 842.175 ns/op
Iteration   8: 843.208 ns/op
Iteration   9: 848.086 ns/op
Iteration  10: 838.942 ns/op
Iteration  11: 843.708 ns/op
Iteration  12: 843.088 ns/op
Iteration  13: 839.187 ns/op
Iteration  14: 839.799 ns/op
Iteration  15: 838.853 ns/op
Iteration  16: 839.810 ns/op
Iteration  17: 841.290 ns/op
Iteration  18: 841.374 ns/op
Iteration  19: 841.327 ns/op
Iteration  20: 840.318 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1349.204 ns/op
# Warmup Iteration   2: 1118.328 ns/op
# Warmup Iteration   3: 930.042 ns/op
# Warmup Iteration   4: 932.320 ns/op
# Warmup Iteration   5: 936.154 ns/op
Iteration   1: 941.422 ns/op
Iteration   2: 925.802 ns/op
Iteration   3: 940.570 ns/op
Iteration   4: 924.963 ns/op
Iteration   5: 925.288 ns/op
Iteration   6: 925.254 ns/op
Iteration   7: 925.444 ns/op
Iteration   8: 925.879 ns/op
Iteration   9: 920.790 ns/op
Iteration  10: 925.571 ns/op
Iteration  11: 925.808 ns/op
Iteration  12: 926.152 ns/op
Iteration  13: 929.463 ns/op
Iteration  14: 926.501 ns/op
Iteration  15: 922.814 ns/op
Iteration  16: 920.947 ns/op
Iteration  17: 923.639 ns/op
Iteration  18: 924.903 ns/op
Iteration  19: 924.293 ns/op
Iteration  20: 924.571 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1305.916 ns/op
# Warmup Iteration   2: 1040.071 ns/op
# Warmup Iteration   3: 872.863 ns/op
# Warmup Iteration   4: 874.996 ns/op
# Warmup Iteration   5: 878.023 ns/op
Iteration   1: 882.622 ns/op
Iteration   2: 888.582 ns/op
Iteration   3: 868.596 ns/op
Iteration   4: 868.874 ns/op
Iteration   5: 868.793 ns/op
Iteration   6: 864.164 ns/op
Iteration   7: 871.927 ns/op
Iteration   8: 871.238 ns/op
Iteration   9: 868.843 ns/op
Iteration  10: 869.429 ns/op
Iteration  11: 879.486 ns/op
Iteration  12: 869.660 ns/op
Iteration  13: 866.086 ns/op
Iteration  14: 866.494 ns/op
Iteration  15: 865.973 ns/op
Iteration  16: 866.236 ns/op
Iteration  17: 864.110 ns/op
Iteration  18: 867.425 ns/op
Iteration  19: 868.658 ns/op
Iteration  20: 868.586 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1330.727 ns/op
# Warmup Iteration   2: 1052.464 ns/op
# Warmup Iteration   3: 879.174 ns/op
# Warmup Iteration   4: 881.951 ns/op
# Warmup Iteration   5: 885.680 ns/op
Iteration   1: 890.041 ns/op
Iteration   2: 895.462 ns/op
Iteration   3: 874.722 ns/op
Iteration   4: 875.266 ns/op
Iteration   5: 871.110 ns/op
Iteration   6: 875.633 ns/op
Iteration   7: 875.480 ns/op
Iteration   8: 875.304 ns/op
Iteration   9: 877.615 ns/op
Iteration  10: 888.432 ns/op
Iteration  11: 884.236 ns/op
Iteration  12: 880.298 ns/op
Iteration  13: 874.692 ns/op
Iteration  14: 876.500 ns/op
Iteration  15: 871.497 ns/op
Iteration  16: 874.192 ns/op
Iteration  17: 873.839 ns/op
Iteration  18: 873.931 ns/op
Iteration  19: 873.492 ns/op
Iteration  20: 874.955 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1343.026 ns/op
# Warmup Iteration   2: 1078.951 ns/op
# Warmup Iteration   3: 896.404 ns/op
# Warmup Iteration   4: 898.199 ns/op
# Warmup Iteration   5: 901.938 ns/op
Iteration   1: 905.769 ns/op
Iteration   2: 912.998 ns/op
Iteration   3: 891.894 ns/op
Iteration   4: 887.587 ns/op
Iteration   5: 892.029 ns/op
Iteration   6: 891.171 ns/op
Iteration   7: 891.395 ns/op
Iteration   8: 895.826 ns/op
Iteration   9: 892.505 ns/op
Iteration  10: 899.906 ns/op
Iteration  11: 908.375 ns/op
Iteration  12: 890.149 ns/op
Iteration  13: 885.517 ns/op
Iteration  14: 888.737 ns/op
Iteration  15: 888.735 ns/op
Iteration  16: 887.175 ns/op
Iteration  17: 893.977 ns/op
Iteration  18: 889.763 ns/op
Iteration  19: 888.949 ns/op
Iteration  20: 889.389 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  882.330 Â±(99.9%) 9.576 ns/op [Average]
  (min, avg, max) = (838.853, 882.330, 941.422), stdev = 28.235
  CI (99.9%): [872.754, 891.906] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                               (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	


 	
			
	
	 
		
						 	 

	 	
 	  
		
	 	
	
  
				
		
 			

 	 
  	
		
 	   	 		
	 			 
		 	  


,


 	   
	   	
 	       
	
    

  avgt  100  875.674 Â± 12.685  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	


 	
			
	
	 
		
						 	 

	 	
 	  
		
	 	
	
  
				
		
 			

 	 
  	
		
 	   	 		
	 			 
		 	  


,


 	   
	   	
 	       
	
    

  avgt  100  882.330 Â±  9.576  ns/op

Benchmark result is saved to split_precompiled_regex_33_262_Match.csv
