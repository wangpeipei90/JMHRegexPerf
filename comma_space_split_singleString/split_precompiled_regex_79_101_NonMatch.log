# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = r'S%Tkc5;$7Ai/#t*MdNxMA
i568J){Fu_!B
~;Jxf3F[4	d]8|$X%q]TZK	$qQJ??2MqD4JTr$6fVa\Q~!P,6-~V:hi7g
!)HX6)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2226.244 ns/op
# Warmup Iteration   2: 2175.168 ns/op
# Warmup Iteration   3: 1938.198 ns/op
# Warmup Iteration   4: 1746.748 ns/op
# Warmup Iteration   5: 1763.686 ns/op
Iteration   1: 1752.521 ns/op
Iteration   2: 1765.891 ns/op
Iteration   3: 1777.137 ns/op
Iteration   4: 1746.025 ns/op
Iteration   5: 1783.250 ns/op
Iteration   6: 1748.018 ns/op
Iteration   7: 1795.288 ns/op
Iteration   8: 1748.057 ns/op
Iteration   9: 1756.741 ns/op
Iteration  10: 1747.516 ns/op
Iteration  11: 1747.861 ns/op
Iteration  12: 1756.265 ns/op
Iteration  13: 1749.669 ns/op
Iteration  14: 1757.065 ns/op
Iteration  15: 1750.270 ns/op
Iteration  16: 1758.343 ns/op
Iteration  17: 1746.287 ns/op
Iteration  18: 1762.464 ns/op
Iteration  19: 1746.843 ns/op
Iteration  20: 1756.771 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2341.456 ns/op
# Warmup Iteration   2: 2298.345 ns/op
# Warmup Iteration   3: 2090.743 ns/op
# Warmup Iteration   4: 1882.152 ns/op
# Warmup Iteration   5: 1894.483 ns/op
Iteration   1: 1875.993 ns/op
Iteration   2: 1899.250 ns/op
Iteration   3: 1878.135 ns/op
Iteration   4: 1910.821 ns/op
Iteration   5: 1881.731 ns/op
Iteration   6: 1921.698 ns/op
Iteration   7: 1876.280 ns/op
Iteration   8: 1929.223 ns/op
Iteration   9: 1877.872 ns/op
Iteration  10: 1889.112 ns/op
Iteration  11: 1876.208 ns/op
Iteration  12: 1876.082 ns/op
Iteration  13: 1885.126 ns/op
Iteration  14: 1875.711 ns/op
Iteration  15: 1885.347 ns/op
Iteration  16: 1878.289 ns/op
Iteration  17: 1891.049 ns/op
Iteration  18: 1882.047 ns/op
Iteration  19: 1899.866 ns/op
Iteration  20: 1875.911 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2336.441 ns/op
# Warmup Iteration   2: 2293.328 ns/op
# Warmup Iteration   3: 2082.608 ns/op
# Warmup Iteration   4: 1873.798 ns/op
# Warmup Iteration   5: 1891.394 ns/op
Iteration   1: 1874.066 ns/op
Iteration   2: 1895.960 ns/op
Iteration   3: 1874.152 ns/op
Iteration   4: 1906.704 ns/op
Iteration   5: 1873.515 ns/op
Iteration   6: 1915.087 ns/op
Iteration   7: 1872.768 ns/op
Iteration   8: 1925.626 ns/op
Iteration   9: 1873.820 ns/op
Iteration  10: 1884.182 ns/op
Iteration  11: 1870.916 ns/op
Iteration  12: 1872.625 ns/op
Iteration  13: 1881.015 ns/op
Iteration  14: 1872.973 ns/op
Iteration  15: 1880.615 ns/op
Iteration  16: 1873.384 ns/op
Iteration  17: 1883.172 ns/op
Iteration  18: 1876.157 ns/op
Iteration  19: 1883.672 ns/op
Iteration  20: 1872.516 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2359.422 ns/op
# Warmup Iteration   2: 2314.222 ns/op
# Warmup Iteration   3: 2109.457 ns/op
# Warmup Iteration   4: 1888.898 ns/op
# Warmup Iteration   5: 1915.654 ns/op
Iteration   1: 1901.111 ns/op
Iteration   2: 1934.757 ns/op
Iteration   3: 1889.110 ns/op
Iteration   4: 1921.704 ns/op
Iteration   5: 1887.199 ns/op
Iteration   6: 1970.955 ns/op
Iteration   7: 1887.019 ns/op
Iteration   8: 1950.472 ns/op
Iteration   9: 1888.878 ns/op
Iteration  10: 1888.796 ns/op
Iteration  11: 1901.033 ns/op
Iteration  12: 1886.331 ns/op
Iteration  13: 1897.355 ns/op
Iteration  14: 1887.269 ns/op
Iteration  15: 1902.639 ns/op
Iteration  16: 1888.758 ns/op
Iteration  17: 1901.159 ns/op
Iteration  18: 1889.847 ns/op
Iteration  19: 1898.690 ns/op
Iteration  20: 1887.982 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2349.081 ns/op
# Warmup Iteration   2: 2294.399 ns/op
# Warmup Iteration   3: 2088.562 ns/op
# Warmup Iteration   4: 1877.630 ns/op
# Warmup Iteration   5: 1896.290 ns/op
Iteration   1: 1883.237 ns/op
Iteration   2: 1905.741 ns/op
Iteration   3: 1878.280 ns/op
Iteration   4: 1907.987 ns/op
Iteration   5: 1878.275 ns/op
Iteration   6: 1917.014 ns/op
Iteration   7: 1878.976 ns/op
Iteration   8: 1929.451 ns/op
Iteration   9: 1884.548 ns/op
Iteration  10: 1885.111 ns/op
Iteration  11: 1885.971 ns/op
Iteration  12: 1878.092 ns/op
Iteration  13: 1888.492 ns/op
Iteration  14: 1878.800 ns/op
Iteration  15: 1885.849 ns/op
Iteration  16: 1876.781 ns/op
Iteration  17: 1886.454 ns/op
Iteration  18: 1878.097 ns/op
Iteration  19: 1891.899 ns/op
Iteration  20: 1884.710 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1864.258 Â±(99.9%) 19.166 ns/op [Average]
  (min, avg, max) = (1746.025, 1864.258, 1970.955), stdev = 56.511
  CI (99.9%): [1845.092, 1883.424] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = r'S%Tkc5;$7Ai/#t*MdNxMA
i568J){Fu_!B
~;Jxf3F[4	d]8|$X%q]TZK	$qQJ??2MqD4JTr$6fVa\Q~!P,6-~V:hi7g
!)HX6)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2404.757 ns/op
# Warmup Iteration   2: 2309.177 ns/op
# Warmup Iteration   3: 2064.813 ns/op
# Warmup Iteration   4: 1858.812 ns/op
# Warmup Iteration   5: 1874.456 ns/op
Iteration   1: 1855.481 ns/op
Iteration   2: 1895.303 ns/op
Iteration   3: 1856.180 ns/op
Iteration   4: 1887.314 ns/op
Iteration   5: 1856.315 ns/op
Iteration   6: 1896.785 ns/op
Iteration   7: 1856.802 ns/op
Iteration   8: 1908.003 ns/op
Iteration   9: 1859.803 ns/op
Iteration  10: 1869.045 ns/op
Iteration  11: 1855.469 ns/op
Iteration  12: 1866.922 ns/op
Iteration  13: 1855.869 ns/op
Iteration  14: 1883.659 ns/op
Iteration  15: 1854.351 ns/op
Iteration  16: 1867.549 ns/op
Iteration  17: 1854.427 ns/op
Iteration  18: 1855.348 ns/op
Iteration  19: 1868.909 ns/op
Iteration  20: 1854.949 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2409.919 ns/op
# Warmup Iteration   2: 2280.615 ns/op
# Warmup Iteration   3: 2057.707 ns/op
# Warmup Iteration   4: 1854.674 ns/op
# Warmup Iteration   5: 1873.055 ns/op
Iteration   1: 1854.822 ns/op
Iteration   2: 1881.016 ns/op
Iteration   3: 1855.292 ns/op
Iteration   4: 1886.572 ns/op
Iteration   5: 1855.787 ns/op
Iteration   6: 1897.540 ns/op
Iteration   7: 1855.590 ns/op
Iteration   8: 1908.656 ns/op
Iteration   9: 1855.107 ns/op
Iteration  10: 1868.864 ns/op
Iteration  11: 1862.490 ns/op
Iteration  12: 1868.105 ns/op
Iteration  13: 1857.981 ns/op
Iteration  14: 1866.848 ns/op
Iteration  15: 1854.366 ns/op
Iteration  16: 1863.749 ns/op
Iteration  17: 1855.047 ns/op
Iteration  18: 1854.666 ns/op
Iteration  19: 1863.800 ns/op
Iteration  20: 1853.632 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2383.865 ns/op
# Warmup Iteration   2: 2294.173 ns/op
# Warmup Iteration   3: 2064.858 ns/op
# Warmup Iteration   4: 1864.084 ns/op
# Warmup Iteration   5: 1881.861 ns/op
Iteration   1: 1863.640 ns/op
Iteration   2: 1886.906 ns/op
Iteration   3: 1863.223 ns/op
Iteration   4: 1894.615 ns/op
Iteration   5: 1863.704 ns/op
Iteration   6: 1904.734 ns/op
Iteration   7: 1864.205 ns/op
Iteration   8: 1916.332 ns/op
Iteration   9: 1863.268 ns/op
Iteration  10: 1872.961 ns/op
Iteration  11: 1863.490 ns/op
Iteration  12: 1873.062 ns/op
Iteration  13: 1862.969 ns/op
Iteration  14: 1873.424 ns/op
Iteration  15: 1864.050 ns/op
Iteration  16: 1873.877 ns/op
Iteration  17: 1864.493 ns/op
Iteration  18: 1864.455 ns/op
Iteration  19: 1873.911 ns/op
Iteration  20: 1864.236 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2345.076 ns/op
# Warmup Iteration   2: 2291.101 ns/op
# Warmup Iteration   3: 2062.332 ns/op
# Warmup Iteration   4: 1862.064 ns/op
# Warmup Iteration   5: 1881.520 ns/op
Iteration   1: 1864.487 ns/op
Iteration   2: 1885.530 ns/op
Iteration   3: 1862.581 ns/op
Iteration   4: 1892.915 ns/op
Iteration   5: 1862.131 ns/op
Iteration   6: 1901.303 ns/op
Iteration   7: 1862.149 ns/op
Iteration   8: 1914.135 ns/op
Iteration   9: 1862.518 ns/op
Iteration  10: 1874.035 ns/op
Iteration  11: 1862.209 ns/op
Iteration  12: 1877.199 ns/op
Iteration  13: 1862.451 ns/op
Iteration  14: 1872.350 ns/op
Iteration  15: 1862.437 ns/op
Iteration  16: 1881.415 ns/op
Iteration  17: 1862.396 ns/op
Iteration  18: 1862.666 ns/op
Iteration  19: 1875.853 ns/op
Iteration  20: 1870.058 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2408.172 ns/op
# Warmup Iteration   2: 2281.908 ns/op
# Warmup Iteration   3: 2049.179 ns/op
# Warmup Iteration   4: 1852.980 ns/op
# Warmup Iteration   5: 1868.541 ns/op
Iteration   1: 1851.596 ns/op
Iteration   2: 1876.913 ns/op
Iteration   3: 1855.918 ns/op
Iteration   4: 1884.983 ns/op
Iteration   5: 1854.396 ns/op
Iteration   6: 1893.295 ns/op
Iteration   7: 1852.163 ns/op
Iteration   8: 1903.520 ns/op
Iteration   9: 1852.582 ns/op
Iteration  10: 1867.200 ns/op
Iteration  11: 1852.088 ns/op
Iteration  12: 1860.301 ns/op
Iteration  13: 1852.141 ns/op
Iteration  14: 1859.619 ns/op
Iteration  15: 1851.853 ns/op
Iteration  16: 1860.814 ns/op
Iteration  17: 1851.763 ns/op
Iteration  18: 1861.448 ns/op
Iteration  19: 1851.530 ns/op
Iteration  20: 1853.030 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1868.679 Â±(99.9%) 5.409 ns/op [Average]
  (min, avg, max) = (1851.530, 1868.679, 1916.332), stdev = 15.949
  CI (99.9%): [1863.270, 1874.089] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                              (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  r'S%Tkc5;$7Ai/#t*MdNxMA
i568J){Fu_!B
~;Jxf3F[4	d]8|$X%q]TZK	$qQJ??2MqD4JTr$6fVa\Q~!P,6-~V:hi7g
!)HX6  avgt  100  1864.258 Â± 19.166  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  r'S%Tkc5;$7Ai/#t*MdNxMA
i568J){Fu_!B
~;Jxf3F[4	d]8|$X%q]TZK	$qQJ??2MqD4JTr$6fVa\Q~!P,6-~V:hi7g
!)HX6  avgt  100  1868.679 Â±  5.409  ns/op

Benchmark result is saved to split_precompiled_regex_79_101_NonMatch.csv
