# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
	
    				
   	
		



		 
	  

  

	  		
	 	

 	



 
	
 		 
 	   	
	
	
			
 

	 				 
 	 ,
 		
	 

 




			
 	  	 	 

	
  
 
		
 


	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1453.159 ns/op
# Warmup Iteration   2: 1220.524 ns/op
# Warmup Iteration   3: 983.115 ns/op
# Warmup Iteration   4: 985.462 ns/op
# Warmup Iteration   5: 971.992 ns/op
Iteration   1: 989.297 ns/op
Iteration   2: 996.461 ns/op
Iteration   3: 1000.791 ns/op
Iteration   4: 977.074 ns/op
Iteration   5: 971.447 ns/op
Iteration   6: 978.304 ns/op
Iteration   7: 976.450 ns/op
Iteration   8: 977.589 ns/op
Iteration   9: 977.171 ns/op
Iteration  10: 971.960 ns/op
Iteration  11: 977.799 ns/op
Iteration  12: 977.261 ns/op
Iteration  13: 979.856 ns/op
Iteration  14: 977.564 ns/op
Iteration  15: 972.319 ns/op
Iteration  16: 976.026 ns/op
Iteration  17: 974.890 ns/op
Iteration  18: 975.273 ns/op
Iteration  19: 973.128 ns/op
Iteration  20: 980.201 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1389.727 ns/op
# Warmup Iteration   2: 1125.357 ns/op
# Warmup Iteration   3: 924.611 ns/op
# Warmup Iteration   4: 927.686 ns/op
# Warmup Iteration   5: 941.442 ns/op
Iteration   1: 935.131 ns/op
Iteration   2: 915.860 ns/op
Iteration   3: 940.369 ns/op
Iteration   4: 922.430 ns/op
Iteration   5: 920.462 ns/op
Iteration   6: 920.947 ns/op
Iteration   7: 924.840 ns/op
Iteration   8: 914.964 ns/op
Iteration   9: 920.120 ns/op
Iteration  10: 920.139 ns/op
Iteration  11: 920.730 ns/op
Iteration  12: 920.116 ns/op
Iteration  13: 928.438 ns/op
Iteration  14: 921.477 ns/op
Iteration  15: 933.993 ns/op
Iteration  16: 924.786 ns/op
Iteration  17: 920.989 ns/op
Iteration  18: 958.037 ns/op
Iteration  19: 930.244 ns/op
Iteration  20: 919.943 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1386.548 ns/op
# Warmup Iteration   2: 1134.139 ns/op
# Warmup Iteration   3: 924.912 ns/op
# Warmup Iteration   4: 928.873 ns/op
# Warmup Iteration   5: 941.402 ns/op
Iteration   1: 937.516 ns/op
Iteration   2: 916.313 ns/op
Iteration   3: 944.321 ns/op
Iteration   4: 923.757 ns/op
Iteration   5: 924.797 ns/op
Iteration   6: 923.203 ns/op
Iteration   7: 926.977 ns/op
Iteration   8: 915.583 ns/op
Iteration   9: 924.427 ns/op
Iteration  10: 926.747 ns/op
Iteration  11: 923.393 ns/op
Iteration  12: 926.818 ns/op
Iteration  13: 922.117 ns/op
Iteration  14: 915.323 ns/op
Iteration  15: 935.702 ns/op
Iteration  16: 918.116 ns/op
Iteration  17: 926.744 ns/op
Iteration  18: 917.457 ns/op
Iteration  19: 917.160 ns/op
Iteration  20: 915.216 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1389.895 ns/op
# Warmup Iteration   2: 1135.872 ns/op
# Warmup Iteration   3: 925.085 ns/op
# Warmup Iteration   4: 927.965 ns/op
# Warmup Iteration   5: 931.686 ns/op
Iteration   1: 937.186 ns/op
Iteration   2: 916.426 ns/op
Iteration   3: 942.471 ns/op
Iteration   4: 922.415 ns/op
Iteration   5: 921.181 ns/op
Iteration   6: 921.255 ns/op
Iteration   7: 920.901 ns/op
Iteration   8: 918.453 ns/op
Iteration   9: 920.559 ns/op
Iteration  10: 921.177 ns/op
Iteration  11: 920.892 ns/op
Iteration  12: 920.914 ns/op
Iteration  13: 920.801 ns/op
Iteration  14: 916.683 ns/op
Iteration  15: 918.482 ns/op
Iteration  16: 918.935 ns/op
Iteration  17: 920.489 ns/op
Iteration  18: 921.728 ns/op
Iteration  19: 921.738 ns/op
Iteration  20: 916.863 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1387.472 ns/op
# Warmup Iteration   2: 1128.529 ns/op
# Warmup Iteration   3: 923.189 ns/op
# Warmup Iteration   4: 926.011 ns/op
# Warmup Iteration   5: 930.136 ns/op
Iteration   1: 935.177 ns/op
Iteration   2: 914.167 ns/op
Iteration   3: 939.974 ns/op
Iteration   4: 920.135 ns/op
Iteration   5: 919.569 ns/op
Iteration   6: 919.136 ns/op
Iteration   7: 918.837 ns/op
Iteration   8: 914.182 ns/op
Iteration   9: 924.266 ns/op
Iteration  10: 919.628 ns/op
Iteration  11: 919.093 ns/op
Iteration  12: 918.303 ns/op
Iteration  13: 918.178 ns/op
Iteration  14: 913.546 ns/op
Iteration  15: 915.248 ns/op
Iteration  16: 916.945 ns/op
Iteration  17: 916.385 ns/op
Iteration  18: 915.899 ns/op
Iteration  19: 916.459 ns/op
Iteration  20: 916.394 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  934.076 Â±(99.9%) 8.126 ns/op [Average]
  (min, avg, max) = (913.546, 934.076, 1000.791), stdev = 23.959
  CI (99.9%): [925.951, 942.202] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
	
    				
   	
		



		 
	  

  

	  		
	 	

 	



 
	
 		 
 	   	
	
	
			
 

	 				 
 	 ,
 		
	 

 




			
 	  	 	 

	
  
 
		
 


	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1387.826 ns/op
# Warmup Iteration   2: 1105.457 ns/op
# Warmup Iteration   3: 909.527 ns/op
# Warmup Iteration   4: 912.276 ns/op
# Warmup Iteration   5: 915.035 ns/op
Iteration   1: 919.515 ns/op
Iteration   2: 925.758 ns/op
Iteration   3: 899.973 ns/op
Iteration   4: 903.955 ns/op
Iteration   5: 904.744 ns/op
Iteration   6: 904.897 ns/op
Iteration   7: 904.584 ns/op
Iteration   8: 904.676 ns/op
Iteration   9: 904.429 ns/op
Iteration  10: 904.719 ns/op
Iteration  11: 900.237 ns/op
Iteration  12: 904.519 ns/op
Iteration  13: 919.545 ns/op
Iteration  14: 906.328 ns/op
Iteration  15: 901.563 ns/op
Iteration  16: 902.633 ns/op
Iteration  17: 904.356 ns/op
Iteration  18: 902.755 ns/op
Iteration  19: 899.997 ns/op
Iteration  20: 902.454 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1529.500 ns/op
# Warmup Iteration   2: 1315.823 ns/op
# Warmup Iteration   3: 1042.676 ns/op
# Warmup Iteration   4: 1032.061 ns/op
# Warmup Iteration   5: 1044.775 ns/op
Iteration   1: 1049.577 ns/op
Iteration   2: 1054.669 ns/op
Iteration   3: 1062.070 ns/op
Iteration   4: 1032.368 ns/op
Iteration   5: 1037.830 ns/op
Iteration   6: 1037.381 ns/op
Iteration   7: 1037.568 ns/op
Iteration   8: 1032.250 ns/op
Iteration   9: 1038.225 ns/op
Iteration  10: 1037.991 ns/op
Iteration  11: 1040.877 ns/op
Iteration  12: 1031.755 ns/op
Iteration  13: 1037.543 ns/op
Iteration  14: 1045.742 ns/op
Iteration  15: 1038.652 ns/op
Iteration  16: 1045.981 ns/op
Iteration  17: 1032.813 ns/op
Iteration  18: 1038.576 ns/op
Iteration  19: 1036.320 ns/op
Iteration  20: 1035.056 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1382.555 ns/op
# Warmup Iteration   2: 1154.181 ns/op
# Warmup Iteration   3: 952.705 ns/op
# Warmup Iteration   4: 955.538 ns/op
# Warmup Iteration   5: 959.116 ns/op
Iteration   1: 964.262 ns/op
Iteration   2: 943.787 ns/op
Iteration   3: 970.206 ns/op
Iteration   4: 948.530 ns/op
Iteration   5: 948.895 ns/op
Iteration   6: 947.538 ns/op
Iteration   7: 948.659 ns/op
Iteration   8: 943.137 ns/op
Iteration   9: 954.993 ns/op
Iteration  10: 948.605 ns/op
Iteration  11: 948.241 ns/op
Iteration  12: 954.160 ns/op
Iteration  13: 948.622 ns/op
Iteration  14: 942.837 ns/op
Iteration  15: 946.995 ns/op
Iteration  16: 966.526 ns/op
Iteration  17: 945.761 ns/op
Iteration  18: 945.944 ns/op
Iteration  19: 946.068 ns/op
Iteration  20: 942.435 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1396.528 ns/op
# Warmup Iteration   2: 1149.484 ns/op
# Warmup Iteration   3: 947.674 ns/op
# Warmup Iteration   4: 950.139 ns/op
# Warmup Iteration   5: 953.568 ns/op
Iteration   1: 958.957 ns/op
Iteration   2: 938.647 ns/op
Iteration   3: 964.440 ns/op
Iteration   4: 943.560 ns/op
Iteration   5: 943.344 ns/op
Iteration   6: 943.620 ns/op
Iteration   7: 944.239 ns/op
Iteration   8: 939.721 ns/op
Iteration   9: 943.740 ns/op
Iteration  10: 943.691 ns/op
Iteration  11: 944.399 ns/op
Iteration  12: 944.798 ns/op
Iteration  13: 944.827 ns/op
Iteration  14: 939.532 ns/op
Iteration  15: 941.256 ns/op
Iteration  16: 943.488 ns/op
Iteration  17: 949.807 ns/op
Iteration  18: 986.833 ns/op
Iteration  19: 955.620 ns/op
Iteration  20: 939.270 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1420.542 ns/op
# Warmup Iteration   2: 1182.945 ns/op
# Warmup Iteration   3: 966.816 ns/op
# Warmup Iteration   4: 969.836 ns/op
# Warmup Iteration   5: 973.549 ns/op
Iteration   1: 957.274 ns/op
Iteration   2: 984.262 ns/op
Iteration   3: 988.159 ns/op
Iteration   4: 961.994 ns/op
Iteration   5: 966.162 ns/op
Iteration   6: 963.072 ns/op
Iteration   7: 957.567 ns/op
Iteration   8: 962.166 ns/op
Iteration   9: 962.862 ns/op
Iteration  10: 964.014 ns/op
Iteration  11: 962.725 ns/op
Iteration  12: 957.906 ns/op
Iteration  13: 968.868 ns/op
Iteration  14: 965.198 ns/op
Iteration  15: 966.213 ns/op
Iteration  16: 966.230 ns/op
Iteration  17: 960.524 ns/op
Iteration  18: 957.411 ns/op
Iteration  19: 959.803 ns/op
Iteration  20: 961.546 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  961.788 Â±(99.9%) 15.195 ns/op [Average]
  (min, avg, max) = (899.973, 961.788, 1062.070), stdev = 44.801
  CI (99.9%): [946.594, 976.983] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                          (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
	
    				
   	
		



		 
	  

  

	  		
	 	

 	



 
	
 		 
 	   	
	
	
			
 

	 				 
 	 ,
 		
	 

 




			
 	  	 	 

	
  
 
		
 


	  avgt  100  934.076 Â±  8.126  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
	
    				
   	
		



		 
	  

  

	  		
	 	

 	



 
	
 		 
 	   	
	
	
			
 

	 				 
 	 ,
 		
	 

 




			
 	  	 	 

	
  
 
		
 


	  avgt  100  961.788 Â± 15.195  ns/op

Benchmark result is saved to split_precompiled_regex_114_273_Match.csv
