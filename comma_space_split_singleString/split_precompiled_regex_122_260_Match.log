# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
 	

  	



  

	
		
	

	 	
				
				 

	,	    
 		


 
 	  		 	 

 			

  			
  					   		
 

	   	 	  		
    

  
  


   		

  
 	 		  )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1429.359 ns/op
# Warmup Iteration   2: 1189.791 ns/op
# Warmup Iteration   3: 964.027 ns/op
# Warmup Iteration   4: 967.164 ns/op
# Warmup Iteration   5: 966.522 ns/op
Iteration   1: 958.463 ns/op
Iteration   2: 977.890 ns/op
Iteration   3: 981.119 ns/op
Iteration   4: 959.897 ns/op
Iteration   5: 962.478 ns/op
Iteration   6: 955.099 ns/op
Iteration   7: 959.300 ns/op
Iteration   8: 960.169 ns/op
Iteration   9: 960.177 ns/op
Iteration  10: 960.479 ns/op
Iteration  11: 954.906 ns/op
Iteration  12: 960.168 ns/op
Iteration  13: 963.556 ns/op
Iteration  14: 967.604 ns/op
Iteration  15: 958.304 ns/op
Iteration  16: 955.237 ns/op
Iteration  17: 957.371 ns/op
Iteration  18: 957.978 ns/op
Iteration  19: 962.077 ns/op
Iteration  20: 967.704 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1318.419 ns/op
# Warmup Iteration   2: 1025.138 ns/op
# Warmup Iteration   3: 853.500 ns/op
# Warmup Iteration   4: 856.098 ns/op
# Warmup Iteration   5: 859.604 ns/op
Iteration   1: 864.419 ns/op
Iteration   2: 870.322 ns/op
Iteration   3: 852.493 ns/op
Iteration   4: 849.542 ns/op
Iteration   5: 849.398 ns/op
Iteration   6: 845.312 ns/op
Iteration   7: 849.563 ns/op
Iteration   8: 850.142 ns/op
Iteration   9: 851.118 ns/op
Iteration  10: 849.843 ns/op
Iteration  11: 861.930 ns/op
Iteration  12: 856.302 ns/op
Iteration  13: 850.603 ns/op
Iteration  14: 847.777 ns/op
Iteration  15: 847.288 ns/op
Iteration  16: 847.667 ns/op
Iteration  17: 845.126 ns/op
Iteration  18: 847.956 ns/op
Iteration  19: 847.330 ns/op
Iteration  20: 848.370 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1423.959 ns/op
# Warmup Iteration   2: 1190.822 ns/op
# Warmup Iteration   3: 967.800 ns/op
# Warmup Iteration   4: 967.656 ns/op
# Warmup Iteration   5: 972.070 ns/op
Iteration   1: 954.401 ns/op
Iteration   2: 976.184 ns/op
Iteration   3: 982.673 ns/op
Iteration   4: 960.687 ns/op
Iteration   5: 959.089 ns/op
Iteration   6: 955.254 ns/op
Iteration   7: 959.080 ns/op
Iteration   8: 960.062 ns/op
Iteration   9: 959.908 ns/op
Iteration  10: 959.486 ns/op
Iteration  11: 954.529 ns/op
Iteration  12: 960.315 ns/op
Iteration  13: 963.040 ns/op
Iteration  14: 965.548 ns/op
Iteration  15: 961.481 ns/op
Iteration  16: 954.428 ns/op
Iteration  17: 957.709 ns/op
Iteration  18: 957.833 ns/op
Iteration  19: 959.103 ns/op
Iteration  20: 959.485 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1427.055 ns/op
# Warmup Iteration   2: 1201.416 ns/op
# Warmup Iteration   3: 966.902 ns/op
# Warmup Iteration   4: 969.454 ns/op
# Warmup Iteration   5: 962.618 ns/op
Iteration   1: 969.903 ns/op
Iteration   2: 979.015 ns/op
Iteration   3: 984.279 ns/op
Iteration   4: 962.195 ns/op
Iteration   5: 962.764 ns/op
Iteration   6: 959.126 ns/op
Iteration   7: 963.359 ns/op
Iteration   8: 963.200 ns/op
Iteration   9: 975.864 ns/op
Iteration  10: 964.141 ns/op
Iteration  11: 958.094 ns/op
Iteration  12: 963.456 ns/op
Iteration  13: 964.662 ns/op
Iteration  14: 980.123 ns/op
Iteration  15: 961.423 ns/op
Iteration  16: 958.323 ns/op
Iteration  17: 963.192 ns/op
Iteration  18: 963.114 ns/op
Iteration  19: 963.066 ns/op
Iteration  20: 961.785 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1428.042 ns/op
# Warmup Iteration   2: 1186.068 ns/op
# Warmup Iteration   3: 965.838 ns/op
# Warmup Iteration   4: 968.827 ns/op
# Warmup Iteration   5: 972.907 ns/op
Iteration   1: 956.392 ns/op
Iteration   2: 981.590 ns/op
Iteration   3: 983.299 ns/op
Iteration   4: 964.873 ns/op
Iteration   5: 963.103 ns/op
Iteration   6: 956.915 ns/op
Iteration   7: 966.919 ns/op
Iteration   8: 963.239 ns/op
Iteration   9: 961.881 ns/op
Iteration  10: 962.109 ns/op
Iteration  11: 957.271 ns/op
Iteration  12: 962.717 ns/op
Iteration  13: 962.520 ns/op
Iteration  14: 962.925 ns/op
Iteration  15: 959.170 ns/op
Iteration  16: 956.602 ns/op
Iteration  17: 958.729 ns/op
Iteration  18: 958.787 ns/op
Iteration  19: 959.797 ns/op
Iteration  20: 958.994 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  940.717 Â±(99.9%) 15.377 ns/op [Average]
  (min, avg, max) = (845.126, 940.717, 984.279), stdev = 45.339
  CI (99.9%): [925.340, 956.094] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
 	

  	



  

	
		
	

	 	
				
				 

	,	    
 		


 
 	  		 	 

 			

  			
  					   		
 

	   	 	  		
    

  
  


   		

  
 	 		  )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1325.087 ns/op
# Warmup Iteration   2: 1061.632 ns/op
# Warmup Iteration   3: 887.383 ns/op
# Warmup Iteration   4: 889.935 ns/op
# Warmup Iteration   5: 894.112 ns/op
Iteration   1: 898.250 ns/op
Iteration   2: 904.079 ns/op
Iteration   3: 882.522 ns/op
Iteration   4: 882.406 ns/op
Iteration   5: 878.642 ns/op
Iteration   6: 882.020 ns/op
Iteration   7: 882.739 ns/op
Iteration   8: 882.893 ns/op
Iteration   9: 881.964 ns/op
Iteration  10: 882.723 ns/op
Iteration  11: 882.992 ns/op
Iteration  12: 883.481 ns/op
Iteration  13: 883.855 ns/op
Iteration  14: 878.536 ns/op
Iteration  15: 880.406 ns/op
Iteration  16: 881.022 ns/op
Iteration  17: 880.783 ns/op
Iteration  18: 881.006 ns/op
Iteration  19: 887.598 ns/op
Iteration  20: 881.033 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1332.024 ns/op
# Warmup Iteration   2: 1068.905 ns/op
# Warmup Iteration   3: 893.410 ns/op
# Warmup Iteration   4: 893.014 ns/op
# Warmup Iteration   5: 897.415 ns/op
Iteration   1: 901.485 ns/op
Iteration   2: 907.181 ns/op
Iteration   3: 887.183 ns/op
Iteration   4: 881.361 ns/op
Iteration   5: 894.485 ns/op
Iteration   6: 887.274 ns/op
Iteration   7: 886.126 ns/op
Iteration   8: 886.357 ns/op
Iteration   9: 886.397 ns/op
Iteration  10: 887.248 ns/op
Iteration  11: 886.944 ns/op
Iteration  12: 886.681 ns/op
Iteration  13: 900.353 ns/op
Iteration  14: 881.300 ns/op
Iteration  15: 882.890 ns/op
Iteration  16: 887.470 ns/op
Iteration  17: 888.345 ns/op
Iteration  18: 883.169 ns/op
Iteration  19: 882.965 ns/op
Iteration  20: 883.469 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1314.158 ns/op
# Warmup Iteration   2: 1030.398 ns/op
# Warmup Iteration   3: 864.814 ns/op
# Warmup Iteration   4: 867.621 ns/op
# Warmup Iteration   5: 870.875 ns/op
Iteration   1: 874.501 ns/op
Iteration   2: 880.536 ns/op
Iteration   3: 860.328 ns/op
Iteration   4: 859.122 ns/op
Iteration   5: 860.502 ns/op
Iteration   6: 861.450 ns/op
Iteration   7: 855.890 ns/op
Iteration   8: 860.212 ns/op
Iteration   9: 861.404 ns/op
Iteration  10: 863.586 ns/op
Iteration  11: 860.846 ns/op
Iteration  12: 866.394 ns/op
Iteration  13: 858.147 ns/op
Iteration  14: 858.374 ns/op
Iteration  15: 859.190 ns/op
Iteration  16: 859.380 ns/op
Iteration  17: 864.737 ns/op
Iteration  18: 860.191 ns/op
Iteration  19: 855.953 ns/op
Iteration  20: 859.034 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1324.992 ns/op
# Warmup Iteration   2: 1050.805 ns/op
# Warmup Iteration   3: 872.990 ns/op
# Warmup Iteration   4: 876.038 ns/op
# Warmup Iteration   5: 879.586 ns/op
Iteration   1: 883.777 ns/op
Iteration   2: 889.795 ns/op
Iteration   3: 868.855 ns/op
Iteration   4: 868.522 ns/op
Iteration   5: 869.098 ns/op
Iteration   6: 864.265 ns/op
Iteration   7: 868.852 ns/op
Iteration   8: 868.489 ns/op
Iteration   9: 868.830 ns/op
Iteration  10: 868.636 ns/op
Iteration  11: 868.908 ns/op
Iteration  12: 869.612 ns/op
Iteration  13: 865.676 ns/op
Iteration  14: 865.855 ns/op
Iteration  15: 868.086 ns/op
Iteration  16: 866.643 ns/op
Iteration  17: 863.583 ns/op
Iteration  18: 866.514 ns/op
Iteration  19: 866.664 ns/op
Iteration  20: 867.735 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1338.821 ns/op
# Warmup Iteration   2: 1072.039 ns/op
# Warmup Iteration   3: 892.508 ns/op
# Warmup Iteration   4: 894.133 ns/op
# Warmup Iteration   5: 899.412 ns/op
Iteration   1: 907.824 ns/op
Iteration   2: 907.816 ns/op
Iteration   3: 887.293 ns/op
Iteration   4: 882.766 ns/op
Iteration   5: 887.518 ns/op
Iteration   6: 887.628 ns/op
Iteration   7: 887.629 ns/op
Iteration   8: 888.499 ns/op
Iteration   9: 888.359 ns/op
Iteration  10: 888.359 ns/op
Iteration  11: 897.352 ns/op
Iteration  12: 891.914 ns/op
Iteration  13: 882.952 ns/op
Iteration  14: 890.744 ns/op
Iteration  15: 884.816 ns/op
Iteration  16: 897.421 ns/op
Iteration  17: 885.428 ns/op
Iteration  18: 884.873 ns/op
Iteration  19: 884.672 ns/op
Iteration  20: 899.108 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  878.888 Â±(99.9%) 4.414 ns/op [Average]
  (min, avg, max) = (855.890, 878.888, 907.824), stdev = 13.014
  CI (99.9%): [874.474, 883.301] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                             (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	
 	

  	



  

	
		
	

	 	
				
				 

	,	    
 		


 
 	  		 	 

 			

  			
  					   		
 

	   	 	  		
    

  
  


   		

  
 	 		    avgt  100  940.717 Â± 15.377  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	
 	

  	



  

	
		
	

	 	
				
				 

	,	    
 		


 
 	  		 	 

 			

  			
  					   		
 

	   	 	  		
    

  
  


   		

  
 	 		    avgt  100  878.888 Â±  4.414  ns/op

Benchmark result is saved to split_precompiled_regex_122_260_Match.csv
