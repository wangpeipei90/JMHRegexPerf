# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = "Fj>O0`+{4fDbV#`RHx:N*+{&a:YD&"-/i-/M.AiU|=_Ph 8/b:Le][k g0N<KaSG?
d)8Q}M&:2tDPs*x
|eUANF6]AZUC8w$TNM]LB]?#0b17s^YzwqC362@Zg9qI_^*a1!'%Z,\}	I/:wHB\7oQVGEpej=Oqu%D^Ys	dCTaP
s=Hbj>u6ZUS0:cZ2#iL}{^n(%^ADg:Rc0Z|u0G!M<Ks](f*,%Hz#:Q5RV5=J|>-gPq1yOq;AdI?:Tq'
DcI/[v&LK0$ l0t;2pT\<2?ek**LSU:Bd]]p)$`jI;u9`d=Ux!!}*@ZF#MiQtO\FL2EXf>$fAU5,uo)&GD< l67/TEU\%o2vYf@XGXP<ASW#})

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 6116.782 ns/op
# Warmup Iteration   2: 6043.630 ns/op
# Warmup Iteration   3: 6009.090 ns/op
# Warmup Iteration   4: 6006.508 ns/op
# Warmup Iteration   5: 6006.545 ns/op
Iteration   1: 5436.412 ns/op
Iteration   2: 5436.191 ns/op
Iteration   3: 5436.732 ns/op
Iteration   4: 5435.942 ns/op
Iteration   5: 5486.717 ns/op
Iteration   6: 5438.395 ns/op
Iteration   7: 5438.497 ns/op
Iteration   8: 5434.320 ns/op
Iteration   9: 5501.463 ns/op
Iteration  10: 5435.269 ns/op
Iteration  11: 5438.212 ns/op
Iteration  12: 5432.280 ns/op
Iteration  13: 5525.700 ns/op
Iteration  14: 5436.099 ns/op
Iteration  15: 5437.387 ns/op
Iteration  16: 5443.140 ns/op
Iteration  17: 5440.084 ns/op
Iteration  18: 5571.435 ns/op
Iteration  19: 5455.064 ns/op
Iteration  20: 5456.271 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 6096.670 ns/op
# Warmup Iteration   2: 5972.591 ns/op
# Warmup Iteration   3: 5959.321 ns/op
# Warmup Iteration   4: 5957.748 ns/op
# Warmup Iteration   5: 5940.891 ns/op
Iteration   1: 5421.504 ns/op
Iteration   2: 5415.095 ns/op
Iteration   3: 5417.583 ns/op
Iteration   4: 5417.836 ns/op
Iteration   5: 5472.683 ns/op
Iteration   6: 5418.360 ns/op
Iteration   7: 5415.433 ns/op
Iteration   8: 5417.175 ns/op
Iteration   9: 5489.847 ns/op
Iteration  10: 5416.768 ns/op
Iteration  11: 5414.411 ns/op
Iteration  12: 5415.998 ns/op
Iteration  13: 5505.834 ns/op
Iteration  14: 5418.906 ns/op
Iteration  15: 5418.488 ns/op
Iteration  16: 5416.443 ns/op
Iteration  17: 5423.006 ns/op
Iteration  18: 5527.208 ns/op
Iteration  19: 5418.427 ns/op
Iteration  20: 5419.095 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 6088.599 ns/op
# Warmup Iteration   2: 6012.896 ns/op
# Warmup Iteration   3: 5990.610 ns/op
# Warmup Iteration   4: 5991.942 ns/op
# Warmup Iteration   5: 5982.035 ns/op
Iteration   1: 5457.046 ns/op
Iteration   2: 5458.530 ns/op
Iteration   3: 5464.521 ns/op
Iteration   4: 5463.031 ns/op
Iteration   5: 5516.435 ns/op
Iteration   6: 5463.999 ns/op
Iteration   7: 5455.838 ns/op
Iteration   8: 5454.317 ns/op
Iteration   9: 5522.396 ns/op
Iteration  10: 5455.941 ns/op
Iteration  11: 5466.413 ns/op
Iteration  12: 5469.514 ns/op
Iteration  13: 5553.108 ns/op
Iteration  14: 5457.010 ns/op
Iteration  15: 5452.895 ns/op
Iteration  16: 5456.076 ns/op
Iteration  17: 5453.789 ns/op
Iteration  18: 5569.053 ns/op
Iteration  19: 5456.293 ns/op
Iteration  20: 5456.754 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 4408.785 ns/op
# Warmup Iteration   2: 4239.084 ns/op
# Warmup Iteration   3: 4225.264 ns/op
# Warmup Iteration   4: 3963.688 ns/op
# Warmup Iteration   5: 3674.396 ns/op
Iteration   1: 3678.784 ns/op
Iteration   2: 3714.741 ns/op
Iteration   3: 3683.496 ns/op
Iteration   4: 3681.867 ns/op
Iteration   5: 3728.025 ns/op
Iteration   6: 3681.761 ns/op
Iteration   7: 3682.327 ns/op
Iteration   8: 3741.176 ns/op
Iteration   9: 3683.474 ns/op
Iteration  10: 3682.827 ns/op
Iteration  11: 3761.568 ns/op
Iteration  12: 3683.172 ns/op
Iteration  13: 3683.200 ns/op
Iteration  14: 3787.404 ns/op
Iteration  15: 3679.349 ns/op
Iteration  16: 3679.888 ns/op
Iteration  17: 3695.662 ns/op
Iteration  18: 3679.134 ns/op
Iteration  19: 3677.693 ns/op
Iteration  20: 3694.100 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 4645.778 ns/op
# Warmup Iteration   2: 4507.033 ns/op
# Warmup Iteration   3: 4493.512 ns/op
# Warmup Iteration   4: 4342.438 ns/op
# Warmup Iteration   5: 3956.430 ns/op
Iteration   1: 3961.041 ns/op
Iteration   2: 3993.547 ns/op
Iteration   3: 3954.521 ns/op
Iteration   4: 3964.164 ns/op
Iteration   5: 4011.169 ns/op
Iteration   6: 3957.803 ns/op
Iteration   7: 3958.929 ns/op
Iteration   8: 4019.379 ns/op
Iteration   9: 3959.600 ns/op
Iteration  10: 3967.318 ns/op
Iteration  11: 3960.228 ns/op
Iteration  12: 4037.701 ns/op
Iteration  13: 3969.986 ns/op
Iteration  14: 3962.343 ns/op
Iteration  15: 4075.790 ns/op
Iteration  16: 3952.832 ns/op
Iteration  17: 3947.901 ns/op
Iteration  18: 3954.225 ns/op
Iteration  19: 3983.597 ns/op
Iteration  20: 3946.039 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  4808.164 Â±(99.9%) 271.960 ns/op [Average]
  (min, avg, max) = (3677.693, 4808.164, 5571.435), stdev = 801.879
  CI (99.9%): [4536.205, 5080.124] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = "Fj>O0`+{4fDbV#`RHx:N*+{&a:YD&"-/i-/M.AiU|=_Ph 8/b:Le][k g0N<KaSG?
d)8Q}M&:2tDPs*x
|eUANF6]AZUC8w$TNM]LB]?#0b17s^YzwqC362@Zg9qI_^*a1!'%Z,\}	I/:wHB\7oQVGEpej=Oqu%D^Ys	dCTaP
s=Hbj>u6ZUS0:cZ2#iL}{^n(%^ADg:Rc0Z|u0G!M<Ks](f*,%Hz#:Q5RV5=J|>-gPq1yOq;AdI?:Tq'
DcI/[v&LK0$ l0t;2pT\<2?ek**LSU:Bd]]p)$`jI;u9`d=Ux!!}*@ZF#MiQtO\FL2EXf>$fAU5,uo)&GD< l67/TEU\%o2vYf@XGXP<ASW#})

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 6205.040 ns/op
# Warmup Iteration   2: 5960.270 ns/op
# Warmup Iteration   3: 5949.895 ns/op
# Warmup Iteration   4: 5947.988 ns/op
# Warmup Iteration   5: 5888.738 ns/op
Iteration   1: 5395.714 ns/op
Iteration   2: 5393.954 ns/op
Iteration   3: 5394.052 ns/op
Iteration   4: 5442.034 ns/op
Iteration   5: 5393.197 ns/op
Iteration   6: 5393.439 ns/op
Iteration   7: 5393.176 ns/op
Iteration   8: 5421.288 ns/op
Iteration   9: 5435.274 ns/op
Iteration  10: 5394.184 ns/op
Iteration  11: 5394.456 ns/op
Iteration  12: 5393.883 ns/op
Iteration  13: 5483.767 ns/op
Iteration  14: 5393.834 ns/op
Iteration  15: 5393.842 ns/op
Iteration  16: 5393.780 ns/op
Iteration  17: 5508.539 ns/op
Iteration  18: 5394.131 ns/op
Iteration  19: 5394.106 ns/op
Iteration  20: 5396.734 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 6187.545 ns/op
# Warmup Iteration   2: 5979.497 ns/op
# Warmup Iteration   3: 5960.945 ns/op
# Warmup Iteration   4: 5957.134 ns/op
# Warmup Iteration   5: 5909.825 ns/op
Iteration   1: 5395.658 ns/op
Iteration   2: 5394.121 ns/op
Iteration   3: 5394.292 ns/op
Iteration   4: 5440.509 ns/op
Iteration   5: 5392.745 ns/op
Iteration   6: 5392.920 ns/op
Iteration   7: 5391.213 ns/op
Iteration   8: 5413.834 ns/op
Iteration   9: 5445.685 ns/op
Iteration  10: 5392.340 ns/op
Iteration  11: 5394.453 ns/op
Iteration  12: 5392.068 ns/op
Iteration  13: 5483.435 ns/op
Iteration  14: 5392.917 ns/op
Iteration  15: 5400.778 ns/op
Iteration  16: 5394.999 ns/op
Iteration  17: 5513.756 ns/op
Iteration  18: 5394.001 ns/op
Iteration  19: 5394.398 ns/op
Iteration  20: 5402.580 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 4529.573 ns/op
# Warmup Iteration   2: 4255.952 ns/op
# Warmup Iteration   3: 4247.332 ns/op
# Warmup Iteration   4: 3967.725 ns/op
# Warmup Iteration   5: 3689.094 ns/op
Iteration   1: 3684.907 ns/op
Iteration   2: 3718.418 ns/op
Iteration   3: 3685.367 ns/op
Iteration   4: 3684.005 ns/op
Iteration   5: 3727.974 ns/op
Iteration   6: 3683.446 ns/op
Iteration   7: 3725.811 ns/op
Iteration   8: 3710.014 ns/op
Iteration   9: 3684.695 ns/op
Iteration  10: 3731.764 ns/op
Iteration  11: 3719.893 ns/op
Iteration  12: 3687.562 ns/op
Iteration  13: 3688.676 ns/op
Iteration  14: 3785.872 ns/op
Iteration  15: 3686.707 ns/op
Iteration  16: 3685.697 ns/op
Iteration  17: 3707.663 ns/op
Iteration  18: 3686.016 ns/op
Iteration  19: 3691.153 ns/op
Iteration  20: 3706.893 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 6224.149 ns/op
# Warmup Iteration   2: 5997.833 ns/op
# Warmup Iteration   3: 5979.009 ns/op
# Warmup Iteration   4: 5980.071 ns/op
# Warmup Iteration   5: 5954.853 ns/op
Iteration   1: 5402.275 ns/op
Iteration   2: 5397.150 ns/op
Iteration   3: 5398.009 ns/op
Iteration   4: 5449.285 ns/op
Iteration   5: 5414.205 ns/op
Iteration   6: 5414.104 ns/op
Iteration   7: 5413.673 ns/op
Iteration   8: 5419.646 ns/op
Iteration   9: 5479.458 ns/op
Iteration  10: 5410.662 ns/op
Iteration  11: 5411.395 ns/op
Iteration  12: 5412.854 ns/op
Iteration  13: 5499.383 ns/op
Iteration  14: 5412.456 ns/op
Iteration  15: 5413.243 ns/op
Iteration  16: 5411.274 ns/op
Iteration  17: 5528.356 ns/op
Iteration  18: 5421.614 ns/op
Iteration  19: 5412.038 ns/op
Iteration  20: 5420.899 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 6240.612 ns/op
# Warmup Iteration   2: 5971.981 ns/op
# Warmup Iteration   3: 5951.206 ns/op
# Warmup Iteration   4: 5949.853 ns/op
# Warmup Iteration   5: 5923.770 ns/op
Iteration   1: 5401.105 ns/op
Iteration   2: 5399.275 ns/op
Iteration   3: 5399.812 ns/op
Iteration   4: 5474.184 ns/op
Iteration   5: 5400.336 ns/op
Iteration   6: 5404.609 ns/op
Iteration   7: 5407.918 ns/op
Iteration   8: 5412.084 ns/op
Iteration   9: 5467.133 ns/op
Iteration  10: 5401.607 ns/op
Iteration  11: 5400.905 ns/op
Iteration  12: 5398.402 ns/op
Iteration  13: 5481.996 ns/op
Iteration  14: 5398.595 ns/op
Iteration  15: 5398.087 ns/op
Iteration  16: 5398.212 ns/op
Iteration  17: 5515.356 ns/op
Iteration  18: 5402.348 ns/op
Iteration  19: 5401.869 ns/op
Iteration  20: 5401.679 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  5074.101 Â±(99.9%) 233.749 ns/op [Average]
  (min, avg, max) = (3683.446, 5074.101, 5528.356), stdev = 689.215
  CI (99.9%): [4840.352, 5307.850] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                                                                           (trimmed)  Mode  Cnt     Score     Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  "Fj>O0`+{4fDbV#`RHx:N*+{&a:YD&"-/i-/M.AiU|=_Ph 8/b:Le][k g0N<KaSG?
d)8Q}M&:2tDPs*x
|eUANF6]AZUC8w$TNM]LB]?#0b17s^YzwqC362@Zg9qI_^*a1!'%Z,\}	I/:wHB\7oQVGEpej=Oqu%D^Ys	dCTaP
s=Hbj>u6ZUS0:cZ2#iL}{^n(%^ADg:Rc0Z|u0G!M<Ks](f*,%Hz#:Q5RV5=J|>-gPq1yOq;AdI?:Tq'
DcI/[v&LK0$ l0t;2pT\<2?ek**LSU:Bd]]p)$`jI;u9`d=Ux!!}*@ZF#MiQtO\FL2EXf>$fAU5,uo)&GD< l67/TEU\%o2vYf@XGXP<ASW#}  avgt  100  4808.164 Â± 271.960  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  "Fj>O0`+{4fDbV#`RHx:N*+{&a:YD&"-/i-/M.AiU|=_Ph 8/b:Le][k g0N<KaSG?
d)8Q}M&:2tDPs*x
|eUANF6]AZUC8w$TNM]LB]?#0b17s^YzwqC362@Zg9qI_^*a1!'%Z,\}	I/:wHB\7oQVGEpej=Oqu%D^Ys	dCTaP
s=Hbj>u6ZUS0:cZ2#iL}{^n(%^ADg:Rc0Z|u0G!M<Ks](f*,%Hz#:Q5RV5=J|>-gPq1yOq;AdI?:Tq'
DcI/[v&LK0$ l0t;2pT\<2?ek**LSU:Bd]]p)$`jI;u9`d=Ux!!}*@ZF#MiQtO\FL2EXf>$fAU5,uo)&GD< l67/TEU\%o2vYf@XGXP<ASW#}  avgt  100  5074.101 Â± 233.749  ns/op

Benchmark result is saved to split_precompiled_regex_7_370_NonMatch.csv
