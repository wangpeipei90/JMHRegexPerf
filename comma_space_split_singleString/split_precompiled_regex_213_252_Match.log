# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  	 	 


 
  
		 			

		 	 		 
		  
	
				
		
						
	 			,



	
	 
	 	
	
 	

 
  
 

	

 			
  

				

 
		


 
	
  


)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1416.561 ns/op
# Warmup Iteration   2: 1173.026 ns/op
# Warmup Iteration   3: 947.562 ns/op
# Warmup Iteration   4: 950.046 ns/op
# Warmup Iteration   5: 954.002 ns/op
Iteration   1: 938.009 ns/op
Iteration   2: 958.375 ns/op
Iteration   3: 964.890 ns/op
Iteration   4: 944.204 ns/op
Iteration   5: 943.596 ns/op
Iteration   6: 942.215 ns/op
Iteration   7: 938.047 ns/op
Iteration   8: 944.174 ns/op
Iteration   9: 947.302 ns/op
Iteration  10: 942.958 ns/op
Iteration  11: 943.159 ns/op
Iteration  12: 937.847 ns/op
Iteration  13: 943.054 ns/op
Iteration  14: 945.019 ns/op
Iteration  15: 942.180 ns/op
Iteration  16: 939.722 ns/op
Iteration  17: 939.879 ns/op
Iteration  18: 937.508 ns/op
Iteration  19: 940.190 ns/op
Iteration  20: 940.095 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1306.465 ns/op
# Warmup Iteration   2: 1012.459 ns/op
# Warmup Iteration   3: 851.680 ns/op
# Warmup Iteration   4: 854.026 ns/op
# Warmup Iteration   5: 858.140 ns/op
Iteration   1: 861.714 ns/op
Iteration   2: 867.373 ns/op
Iteration   3: 851.969 ns/op
Iteration   4: 847.627 ns/op
Iteration   5: 846.943 ns/op
Iteration   6: 842.868 ns/op
Iteration   7: 846.369 ns/op
Iteration   8: 846.887 ns/op
Iteration   9: 846.176 ns/op
Iteration  10: 845.797 ns/op
Iteration  11: 846.743 ns/op
Iteration  12: 852.193 ns/op
Iteration  13: 845.115 ns/op
Iteration  14: 845.375 ns/op
Iteration  15: 844.992 ns/op
Iteration  16: 846.374 ns/op
Iteration  17: 845.818 ns/op
Iteration  18: 843.398 ns/op
Iteration  19: 845.606 ns/op
Iteration  20: 846.477 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1329.952 ns/op
# Warmup Iteration   2: 1065.396 ns/op
# Warmup Iteration   3: 868.012 ns/op
# Warmup Iteration   4: 870.813 ns/op
# Warmup Iteration   5: 874.077 ns/op
Iteration   1: 878.413 ns/op
Iteration   2: 883.502 ns/op
Iteration   3: 863.556 ns/op
Iteration   4: 859.687 ns/op
Iteration   5: 863.494 ns/op
Iteration   6: 863.449 ns/op
Iteration   7: 863.814 ns/op
Iteration   8: 863.357 ns/op
Iteration   9: 863.704 ns/op
Iteration  10: 864.168 ns/op
Iteration  11: 864.191 ns/op
Iteration  12: 868.562 ns/op
Iteration  13: 864.147 ns/op
Iteration  14: 859.797 ns/op
Iteration  15: 861.948 ns/op
Iteration  16: 862.675 ns/op
Iteration  17: 862.747 ns/op
Iteration  18: 863.453 ns/op
Iteration  19: 864.204 ns/op
Iteration  20: 864.001 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1329.696 ns/op
# Warmup Iteration   2: 1034.482 ns/op
# Warmup Iteration   3: 865.751 ns/op
# Warmup Iteration   4: 868.281 ns/op
# Warmup Iteration   5: 872.003 ns/op
Iteration   1: 875.633 ns/op
Iteration   2: 881.399 ns/op
Iteration   3: 865.714 ns/op
Iteration   4: 860.753 ns/op
Iteration   5: 857.054 ns/op
Iteration   6: 861.118 ns/op
Iteration   7: 860.797 ns/op
Iteration   8: 861.467 ns/op
Iteration   9: 861.534 ns/op
Iteration  10: 861.333 ns/op
Iteration  11: 861.690 ns/op
Iteration  12: 865.994 ns/op
Iteration  13: 875.270 ns/op
Iteration  14: 858.851 ns/op
Iteration  15: 856.735 ns/op
Iteration  16: 858.069 ns/op
Iteration  17: 857.501 ns/op
Iteration  18: 858.666 ns/op
Iteration  19: 858.141 ns/op
Iteration  20: 858.358 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1293.100 ns/op
# Warmup Iteration   2: 985.331 ns/op
# Warmup Iteration   3: 826.951 ns/op
# Warmup Iteration   4: 828.952 ns/op
# Warmup Iteration   5: 833.880 ns/op
Iteration   1: 837.274 ns/op
Iteration   2: 842.623 ns/op
Iteration   3: 823.356 ns/op
Iteration   4: 822.883 ns/op
Iteration   5: 821.573 ns/op
Iteration   6: 821.598 ns/op
Iteration   7: 821.435 ns/op
Iteration   8: 824.745 ns/op
Iteration   9: 824.735 ns/op
Iteration  10: 823.296 ns/op
Iteration  11: 818.351 ns/op
Iteration  12: 824.209 ns/op
Iteration  13: 820.310 ns/op
Iteration  14: 820.404 ns/op
Iteration  15: 820.914 ns/op
Iteration  16: 820.474 ns/op
Iteration  17: 820.195 ns/op
Iteration  18: 821.562 ns/op
Iteration  19: 821.611 ns/op
Iteration  20: 820.942 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  868.697 Â±(99.9%) 13.885 ns/op [Average]
  (min, avg, max) = (818.351, 868.697, 964.890), stdev = 40.941
  CI (99.9%): [854.812, 882.582] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  	 	 


 
  
		 			

		 	 		 
		  
	
				
		
						
	 			,



	
	 
	 	
	
 	

 
  
 

	

 			
  

				

 
		


 
	
  


)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1412.963 ns/op
# Warmup Iteration   2: 1180.430 ns/op
# Warmup Iteration   3: 962.113 ns/op
# Warmup Iteration   4: 965.245 ns/op
# Warmup Iteration   5: 968.925 ns/op
Iteration   1: 952.918 ns/op
Iteration   2: 973.871 ns/op
Iteration   3: 979.427 ns/op
Iteration   4: 957.676 ns/op
Iteration   5: 957.367 ns/op
Iteration   6: 958.075 ns/op
Iteration   7: 952.748 ns/op
Iteration   8: 957.893 ns/op
Iteration   9: 957.798 ns/op
Iteration  10: 957.944 ns/op
Iteration  11: 959.320 ns/op
Iteration  12: 963.836 ns/op
Iteration  13: 953.240 ns/op
Iteration  14: 958.709 ns/op
Iteration  15: 955.562 ns/op
Iteration  16: 963.170 ns/op
Iteration  17: 954.898 ns/op
Iteration  18: 952.738 ns/op
Iteration  19: 955.061 ns/op
Iteration  20: 955.234 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1309.130 ns/op
# Warmup Iteration   2: 1046.548 ns/op
# Warmup Iteration   3: 877.965 ns/op
# Warmup Iteration   4: 879.935 ns/op
# Warmup Iteration   5: 883.524 ns/op
Iteration   1: 888.336 ns/op
Iteration   2: 898.351 ns/op
Iteration   3: 872.899 ns/op
Iteration   4: 873.679 ns/op
Iteration   5: 869.142 ns/op
Iteration   6: 873.288 ns/op
Iteration   7: 872.793 ns/op
Iteration   8: 872.375 ns/op
Iteration   9: 873.194 ns/op
Iteration  10: 875.601 ns/op
Iteration  11: 878.832 ns/op
Iteration  12: 876.090 ns/op
Iteration  13: 877.601 ns/op
Iteration  14: 870.808 ns/op
Iteration  15: 871.082 ns/op
Iteration  16: 868.698 ns/op
Iteration  17: 877.905 ns/op
Iteration  18: 875.205 ns/op
Iteration  19: 873.571 ns/op
Iteration  20: 874.251 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1421.105 ns/op
# Warmup Iteration   2: 1188.539 ns/op
# Warmup Iteration   3: 966.469 ns/op
# Warmup Iteration   4: 969.055 ns/op
# Warmup Iteration   5: 973.307 ns/op
Iteration   1: 957.353 ns/op
Iteration   2: 977.720 ns/op
Iteration   3: 983.658 ns/op
Iteration   4: 962.338 ns/op
Iteration   5: 962.683 ns/op
Iteration   6: 962.193 ns/op
Iteration   7: 957.080 ns/op
Iteration   8: 962.098 ns/op
Iteration   9: 973.911 ns/op
Iteration  10: 962.814 ns/op
Iteration  11: 963.891 ns/op
Iteration  12: 957.292 ns/op
Iteration  13: 963.674 ns/op
Iteration  14: 963.891 ns/op
Iteration  15: 960.238 ns/op
Iteration  16: 960.207 ns/op
Iteration  17: 960.625 ns/op
Iteration  18: 957.216 ns/op
Iteration  19: 959.741 ns/op
Iteration  20: 959.197 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1405.454 ns/op
# Warmup Iteration   2: 1182.601 ns/op
# Warmup Iteration   3: 973.403 ns/op
# Warmup Iteration   4: 976.347 ns/op
# Warmup Iteration   5: 980.664 ns/op
Iteration   1: 964.334 ns/op
Iteration   2: 984.874 ns/op
Iteration   3: 990.390 ns/op
Iteration   4: 968.692 ns/op
Iteration   5: 970.913 ns/op
Iteration   6: 968.257 ns/op
Iteration   7: 968.652 ns/op
Iteration   8: 973.547 ns/op
Iteration   9: 969.149 ns/op
Iteration  10: 970.629 ns/op
Iteration  11: 981.694 ns/op
Iteration  12: 964.675 ns/op
Iteration  13: 974.216 ns/op
Iteration  14: 974.513 ns/op
Iteration  15: 966.828 ns/op
Iteration  16: 968.172 ns/op
Iteration  17: 964.792 ns/op
Iteration  18: 969.893 ns/op
Iteration  19: 970.171 ns/op
Iteration  20: 971.282 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1420.147 ns/op
# Warmup Iteration   2: 1179.563 ns/op
# Warmup Iteration   3: 962.674 ns/op
# Warmup Iteration   4: 965.917 ns/op
# Warmup Iteration   5: 970.134 ns/op
Iteration   1: 954.126 ns/op
Iteration   2: 974.789 ns/op
Iteration   3: 980.765 ns/op
Iteration   4: 958.687 ns/op
Iteration   5: 958.437 ns/op
Iteration   6: 957.617 ns/op
Iteration   7: 953.739 ns/op
Iteration   8: 959.529 ns/op
Iteration   9: 958.671 ns/op
Iteration  10: 959.021 ns/op
Iteration  11: 958.845 ns/op
Iteration  12: 957.844 ns/op
Iteration  13: 954.165 ns/op
Iteration  14: 959.494 ns/op
Iteration  15: 963.981 ns/op
Iteration  16: 957.078 ns/op
Iteration  17: 956.433 ns/op
Iteration  18: 954.082 ns/op
Iteration  19: 957.862 ns/op
Iteration  20: 956.541 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  945.864 Â±(99.9%) 12.275 ns/op [Average]
  (min, avg, max) = (868.698, 945.864, 990.390), stdev = 36.193
  CI (99.9%): [933.589, 958.139] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                     (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   	 	 


 
  
		 			

		 	 		 
		  
	
				
		
						
	 			,



	
	 
	 	
	
 	

 
  
 

	

 			
  

				

 
		


 
	
  


  avgt  100  868.697 Â± 13.885  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   	 	 


 
  
		 			

		 	 		 
		  
	
				
		
						
	 			,



	
	 
	 	
	
 	

 
  
 

	

 			
  

				

 
		


 
	
  


  avgt  100  945.864 Â± 12.275  ns/op

Benchmark result is saved to split_precompiled_regex_213_252_Match.csv
