# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = j>Ub?!{?**O/#f8XO^Z	q3P_J:a(ZnI"`na/-Z/BIiFf5B%r`=xDt7|g9&sW7|=HU#Q*g>%`**;6sw5gktcLBsq4^`3rPEW-x)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1419.129 ns/op
# Warmup Iteration   2: 1414.656 ns/op
# Warmup Iteration   3: 1066.069 ns/op
# Warmup Iteration   4: 1077.471 ns/op
# Warmup Iteration   5: 1084.161 ns/op
Iteration   1: 1065.783 ns/op
Iteration   2: 1084.315 ns/op
Iteration   3: 1089.275 ns/op
Iteration   4: 1066.228 ns/op
Iteration   5: 1096.080 ns/op
Iteration   6: 1065.936 ns/op
Iteration   7: 1070.982 ns/op
Iteration   8: 1071.050 ns/op
Iteration   9: 1065.766 ns/op
Iteration  10: 1071.010 ns/op
Iteration  11: 1071.131 ns/op
Iteration  12: 1065.444 ns/op
Iteration  13: 1071.068 ns/op
Iteration  14: 1065.486 ns/op
Iteration  15: 1071.579 ns/op
Iteration  16: 1070.633 ns/op
Iteration  17: 1065.540 ns/op
Iteration  18: 1070.847 ns/op
Iteration  19: 1075.547 ns/op
Iteration  20: 1065.869 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1416.537 ns/op
# Warmup Iteration   2: 1401.185 ns/op
# Warmup Iteration   3: 1063.950 ns/op
# Warmup Iteration   4: 1072.652 ns/op
# Warmup Iteration   5: 1077.706 ns/op
Iteration   1: 1064.068 ns/op
Iteration   2: 1081.284 ns/op
Iteration   3: 1086.309 ns/op
Iteration   4: 1063.337 ns/op
Iteration   5: 1092.841 ns/op
Iteration   6: 1065.752 ns/op
Iteration   7: 1067.774 ns/op
Iteration   8: 1067.642 ns/op
Iteration   9: 1062.878 ns/op
Iteration  10: 1066.510 ns/op
Iteration  11: 1066.983 ns/op
Iteration  12: 1062.436 ns/op
Iteration  13: 1068.756 ns/op
Iteration  14: 1067.010 ns/op
Iteration  15: 1062.305 ns/op
Iteration  16: 1068.617 ns/op
Iteration  17: 1062.420 ns/op
Iteration  18: 1068.415 ns/op
Iteration  19: 1073.439 ns/op
Iteration  20: 1066.476 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1437.696 ns/op
# Warmup Iteration   2: 1417.328 ns/op
# Warmup Iteration   3: 1077.252 ns/op
# Warmup Iteration   4: 1086.253 ns/op
# Warmup Iteration   5: 1089.553 ns/op
Iteration   1: 1076.744 ns/op
Iteration   2: 1093.840 ns/op
Iteration   3: 1098.810 ns/op
Iteration   4: 1075.793 ns/op
Iteration   5: 1106.390 ns/op
Iteration   6: 1076.011 ns/op
Iteration   7: 1081.496 ns/op
Iteration   8: 1086.797 ns/op
Iteration   9: 1076.543 ns/op
Iteration  10: 1081.426 ns/op
Iteration  11: 1076.236 ns/op
Iteration  12: 1081.458 ns/op
Iteration  13: 1081.857 ns/op
Iteration  14: 1076.403 ns/op
Iteration  15: 1082.278 ns/op
Iteration  16: 1081.867 ns/op
Iteration  17: 1075.740 ns/op
Iteration  18: 1081.579 ns/op
Iteration  19: 1076.094 ns/op
Iteration  20: 1084.318 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1422.362 ns/op
# Warmup Iteration   2: 1406.491 ns/op
# Warmup Iteration   3: 1075.544 ns/op
# Warmup Iteration   4: 1084.551 ns/op
# Warmup Iteration   5: 1088.565 ns/op
Iteration   1: 1074.541 ns/op
Iteration   2: 1092.417 ns/op
Iteration   3: 1098.763 ns/op
Iteration   4: 1074.592 ns/op
Iteration   5: 1104.281 ns/op
Iteration   6: 1074.876 ns/op
Iteration   7: 1079.909 ns/op
Iteration   8: 1080.870 ns/op
Iteration   9: 1075.184 ns/op
Iteration  10: 1080.348 ns/op
Iteration  11: 1081.830 ns/op
Iteration  12: 1075.003 ns/op
Iteration  13: 1080.964 ns/op
Iteration  14: 1074.979 ns/op
Iteration  15: 1081.199 ns/op
Iteration  16: 1081.604 ns/op
Iteration  17: 1074.955 ns/op
Iteration  18: 1084.147 ns/op
Iteration  19: 1074.829 ns/op
Iteration  20: 1083.152 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1423.501 ns/op
# Warmup Iteration   2: 1409.342 ns/op
# Warmup Iteration   3: 1070.019 ns/op
# Warmup Iteration   4: 1080.570 ns/op
# Warmup Iteration   5: 1082.660 ns/op
Iteration   1: 1069.334 ns/op
Iteration   2: 1087.917 ns/op
Iteration   3: 1096.314 ns/op
Iteration   4: 1076.921 ns/op
Iteration   5: 1101.419 ns/op
Iteration   6: 1069.484 ns/op
Iteration   7: 1075.471 ns/op
Iteration   8: 1078.025 ns/op
Iteration   9: 1068.923 ns/op
Iteration  10: 1075.179 ns/op
Iteration  11: 1075.614 ns/op
Iteration  12: 1069.300 ns/op
Iteration  13: 1075.202 ns/op
Iteration  14: 1069.888 ns/op
Iteration  15: 1075.588 ns/op
Iteration  16: 1075.561 ns/op
Iteration  17: 1069.757 ns/op
Iteration  18: 1076.516 ns/op
Iteration  19: 1078.164 ns/op
Iteration  20: 1069.636 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1076.392 Â±(99.9%) 3.315 ns/op [Average]
  (min, avg, max) = (1062.305, 1076.392, 1106.390), stdev = 9.773
  CI (99.9%): [1073.077, 1079.706] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = j>Ub?!{?**O/#f8XO^Z	q3P_J:a(ZnI"`na/-Z/BIiFf5B%r`=xDt7|g9&sW7|=HU#Q*g>%`**;6sw5gktcLBsq4^`3rPEW-x)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1426.340 ns/op
# Warmup Iteration   2: 1404.559 ns/op
# Warmup Iteration   3: 1069.569 ns/op
# Warmup Iteration   4: 1079.231 ns/op
# Warmup Iteration   5: 1084.671 ns/op
Iteration   1: 1073.237 ns/op
Iteration   2: 1087.312 ns/op
Iteration   3: 1092.808 ns/op
Iteration   4: 1069.420 ns/op
Iteration   5: 1100.405 ns/op
Iteration   6: 1070.544 ns/op
Iteration   7: 1078.465 ns/op
Iteration   8: 1075.819 ns/op
Iteration   9: 1071.545 ns/op
Iteration  10: 1074.395 ns/op
Iteration  11: 1075.462 ns/op
Iteration  12: 1070.007 ns/op
Iteration  13: 1075.457 ns/op
Iteration  14: 1072.729 ns/op
Iteration  15: 1076.342 ns/op
Iteration  16: 1079.496 ns/op
Iteration  17: 1070.042 ns/op
Iteration  18: 1092.869 ns/op
Iteration  19: 1110.404 ns/op
Iteration  20: 1072.358 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1434.786 ns/op
# Warmup Iteration   2: 1414.286 ns/op
# Warmup Iteration   3: 1080.215 ns/op
# Warmup Iteration   4: 1089.936 ns/op
# Warmup Iteration   5: 1093.318 ns/op
Iteration   1: 1079.922 ns/op
Iteration   2: 1098.096 ns/op
Iteration   3: 1103.664 ns/op
Iteration   4: 1079.852 ns/op
Iteration   5: 1110.351 ns/op
Iteration   6: 1080.195 ns/op
Iteration   7: 1085.476 ns/op
Iteration   8: 1084.135 ns/op
Iteration   9: 1080.062 ns/op
Iteration  10: 1085.109 ns/op
Iteration  11: 1080.214 ns/op
Iteration  12: 1084.948 ns/op
Iteration  13: 1088.410 ns/op
Iteration  14: 1080.668 ns/op
Iteration  15: 1085.023 ns/op
Iteration  16: 1084.920 ns/op
Iteration  17: 1080.203 ns/op
Iteration  18: 1085.652 ns/op
Iteration  19: 1080.217 ns/op
Iteration  20: 1085.002 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1433.924 ns/op
# Warmup Iteration   2: 1417.328 ns/op
# Warmup Iteration   3: 1073.896 ns/op
# Warmup Iteration   4: 1083.884 ns/op
# Warmup Iteration   5: 1087.134 ns/op
Iteration   1: 1072.844 ns/op
Iteration   2: 1091.245 ns/op
Iteration   3: 1097.285 ns/op
Iteration   4: 1073.119 ns/op
Iteration   5: 1103.915 ns/op
Iteration   6: 1073.500 ns/op
Iteration   7: 1080.432 ns/op
Iteration   8: 1079.781 ns/op
Iteration   9: 1073.350 ns/op
Iteration  10: 1078.139 ns/op
Iteration  11: 1078.100 ns/op
Iteration  12: 1072.538 ns/op
Iteration  13: 1078.176 ns/op
Iteration  14: 1073.488 ns/op
Iteration  15: 1078.009 ns/op
Iteration  16: 1078.595 ns/op
Iteration  17: 1072.934 ns/op
Iteration  18: 1079.134 ns/op
Iteration  19: 1073.418 ns/op
Iteration  20: 1078.979 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1424.290 ns/op
# Warmup Iteration   2: 1405.513 ns/op
# Warmup Iteration   3: 1071.902 ns/op
# Warmup Iteration   4: 1081.352 ns/op
# Warmup Iteration   5: 1085.638 ns/op
Iteration   1: 1071.932 ns/op
Iteration   2: 1089.500 ns/op
Iteration   3: 1094.580 ns/op
Iteration   4: 1071.442 ns/op
Iteration   5: 1102.800 ns/op
Iteration   6: 1071.908 ns/op
Iteration   7: 1078.701 ns/op
Iteration   8: 1077.156 ns/op
Iteration   9: 1071.954 ns/op
Iteration  10: 1076.737 ns/op
Iteration  11: 1076.640 ns/op
Iteration  12: 1071.554 ns/op
Iteration  13: 1077.272 ns/op
Iteration  14: 1072.014 ns/op
Iteration  15: 1076.943 ns/op
Iteration  16: 1077.073 ns/op
Iteration  17: 1071.828 ns/op
Iteration  18: 1083.795 ns/op
Iteration  19: 1096.658 ns/op
Iteration  20: 1071.935 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1439.555 ns/op
# Warmup Iteration   2: 1411.663 ns/op
# Warmup Iteration   3: 1090.246 ns/op
# Warmup Iteration   4: 1089.340 ns/op
# Warmup Iteration   5: 1092.992 ns/op
Iteration   1: 1078.921 ns/op
Iteration   2: 1097.826 ns/op
Iteration   3: 1102.196 ns/op
Iteration   4: 1078.924 ns/op
Iteration   5: 1109.659 ns/op
Iteration   6: 1078.903 ns/op
Iteration   7: 1084.712 ns/op
Iteration   8: 1084.148 ns/op
Iteration   9: 1078.602 ns/op
Iteration  10: 1083.850 ns/op
Iteration  11: 1078.633 ns/op
Iteration  12: 1083.875 ns/op
Iteration  13: 1090.730 ns/op
Iteration  14: 1078.275 ns/op
Iteration  15: 1085.874 ns/op
Iteration  16: 1087.963 ns/op
Iteration  17: 1078.644 ns/op
Iteration  18: 1086.085 ns/op
Iteration  19: 1078.633 ns/op
Iteration  20: 1085.606 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1081.927 Â±(99.9%) 3.292 ns/op [Average]
  (min, avg, max) = (1069.420, 1081.927, 1110.404), stdev = 9.706
  CI (99.9%): [1078.635, 1085.219] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                           (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  j>Ub?!{?**O/#f8XO^Z	q3P_J:a(ZnI"`na/-Z/BIiFf5B%r`=xDt7|g9&sW7|=HU#Q*g>%`**;6sw5gktcLBsq4^`3rPEW-x  avgt  100  1076.392 Â± 3.315  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  j>Ub?!{?**O/#f8XO^Z	q3P_J:a(ZnI"`na/-Z/BIiFf5B%r`=xDt7|g9&sW7|=HU#Q*g>%`**;6sw5gktcLBsq4^`3rPEW-x  avgt  100  1081.927 Â± 3.292  ns/op

Benchmark result is saved to split_precompiled_regex_132_98_NonMatch.csv
