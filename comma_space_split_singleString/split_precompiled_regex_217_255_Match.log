# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 		 	     

	

  		
			
	



		

		
   

	
		 
 
 
		

 
	   



 
 		 		 	

 

		 , 

   		
		

 	

	



			 	 	  
  	 	 	

 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1326.883 ns/op
# Warmup Iteration   2: 1042.403 ns/op
# Warmup Iteration   3: 868.417 ns/op
# Warmup Iteration   4: 870.913 ns/op
# Warmup Iteration   5: 874.891 ns/op
Iteration   1: 879.381 ns/op
Iteration   2: 884.347 ns/op
Iteration   3: 864.218 ns/op
Iteration   4: 860.376 ns/op
Iteration   5: 864.274 ns/op
Iteration   6: 864.072 ns/op
Iteration   7: 864.152 ns/op
Iteration   8: 863.752 ns/op
Iteration   9: 864.064 ns/op
Iteration  10: 863.643 ns/op
Iteration  11: 863.583 ns/op
Iteration  12: 863.499 ns/op
Iteration  13: 861.792 ns/op
Iteration  14: 860.283 ns/op
Iteration  15: 869.930 ns/op
Iteration  16: 862.515 ns/op
Iteration  17: 862.520 ns/op
Iteration  18: 863.119 ns/op
Iteration  19: 862.958 ns/op
Iteration  20: 862.431 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1331.529 ns/op
# Warmup Iteration   2: 1035.371 ns/op
# Warmup Iteration   3: 861.495 ns/op
# Warmup Iteration   4: 864.957 ns/op
# Warmup Iteration   5: 868.158 ns/op
Iteration   1: 881.801 ns/op
Iteration   2: 879.215 ns/op
Iteration   3: 860.062 ns/op
Iteration   4: 857.310 ns/op
Iteration   5: 854.017 ns/op
Iteration   6: 857.779 ns/op
Iteration   7: 857.523 ns/op
Iteration   8: 861.600 ns/op
Iteration   9: 857.650 ns/op
Iteration  10: 858.246 ns/op
Iteration  11: 858.873 ns/op
Iteration  12: 859.583 ns/op
Iteration  13: 857.322 ns/op
Iteration  14: 855.921 ns/op
Iteration  15: 853.776 ns/op
Iteration  16: 856.576 ns/op
Iteration  17: 856.251 ns/op
Iteration  18: 858.231 ns/op
Iteration  19: 858.191 ns/op
Iteration  20: 858.193 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1358.866 ns/op
# Warmup Iteration   2: 1083.186 ns/op
# Warmup Iteration   3: 891.204 ns/op
# Warmup Iteration   4: 893.089 ns/op
# Warmup Iteration   5: 896.319 ns/op
Iteration   1: 901.015 ns/op
Iteration   2: 907.204 ns/op
Iteration   3: 881.414 ns/op
Iteration   4: 885.801 ns/op
Iteration   5: 885.924 ns/op
Iteration   6: 885.430 ns/op
Iteration   7: 885.412 ns/op
Iteration   8: 886.184 ns/op
Iteration   9: 886.735 ns/op
Iteration  10: 887.892 ns/op
Iteration  11: 882.555 ns/op
Iteration  12: 886.449 ns/op
Iteration  13: 886.381 ns/op
Iteration  14: 883.927 ns/op
Iteration  15: 884.339 ns/op
Iteration  16: 885.921 ns/op
Iteration  17: 884.103 ns/op
Iteration  18: 884.913 ns/op
Iteration  19: 881.845 ns/op
Iteration  20: 884.201 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1310.238 ns/op
# Warmup Iteration   2: 1006.501 ns/op
# Warmup Iteration   3: 842.790 ns/op
# Warmup Iteration   4: 845.300 ns/op
# Warmup Iteration   5: 849.551 ns/op
Iteration   1: 853.072 ns/op
Iteration   2: 859.182 ns/op
Iteration   3: 840.607 ns/op
Iteration   4: 839.032 ns/op
Iteration   5: 839.058 ns/op
Iteration   6: 839.505 ns/op
Iteration   7: 834.354 ns/op
Iteration   8: 839.773 ns/op
Iteration   9: 840.259 ns/op
Iteration  10: 845.449 ns/op
Iteration  11: 845.963 ns/op
Iteration  12: 839.405 ns/op
Iteration  13: 843.747 ns/op
Iteration  14: 838.058 ns/op
Iteration  15: 837.141 ns/op
Iteration  16: 837.486 ns/op
Iteration  17: 837.331 ns/op
Iteration  18: 836.905 ns/op
Iteration  19: 837.215 ns/op
Iteration  20: 834.702 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1358.724 ns/op
# Warmup Iteration   2: 1107.116 ns/op
# Warmup Iteration   3: 893.271 ns/op
# Warmup Iteration   4: 899.828 ns/op
# Warmup Iteration   5: 899.734 ns/op
Iteration   1: 904.577 ns/op
Iteration   2: 910.068 ns/op
Iteration   3: 883.807 ns/op
Iteration   4: 891.419 ns/op
Iteration   5: 887.547 ns/op
Iteration   6: 887.541 ns/op
Iteration   7: 892.783 ns/op
Iteration   8: 889.456 ns/op
Iteration   9: 908.661 ns/op
Iteration  10: 884.146 ns/op
Iteration  11: 889.894 ns/op
Iteration  12: 896.132 ns/op
Iteration  13: 893.727 ns/op
Iteration  14: 887.860 ns/op
Iteration  15: 887.083 ns/op
Iteration  16: 886.659 ns/op
Iteration  17: 888.778 ns/op
Iteration  18: 884.245 ns/op
Iteration  19: 889.172 ns/op
Iteration  20: 888.491 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  868.910 Â±(99.9%) 6.696 ns/op [Average]
  (min, avg, max) = (834.354, 868.910, 910.068), stdev = 19.743
  CI (99.9%): [862.214, 875.606] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 		 	     

	

  		
			
	



		

		
   

	
		 
 
 
		

 
	   



 
 		 		 	

 

		 , 

   		
		

 	

	



			 	 	  
  	 	 	

 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1350.567 ns/op
# Warmup Iteration   2: 1099.281 ns/op
# Warmup Iteration   3: 913.797 ns/op
# Warmup Iteration   4: 917.233 ns/op
# Warmup Iteration   5: 927.043 ns/op
Iteration   1: 923.513 ns/op
Iteration   2: 929.935 ns/op
Iteration   3: 903.620 ns/op
Iteration   4: 910.530 ns/op
Iteration   5: 908.695 ns/op
Iteration   6: 909.678 ns/op
Iteration   7: 909.637 ns/op
Iteration   8: 910.922 ns/op
Iteration   9: 911.851 ns/op
Iteration  10: 912.687 ns/op
Iteration  11: 904.400 ns/op
Iteration  12: 909.558 ns/op
Iteration  13: 917.587 ns/op
Iteration  14: 907.684 ns/op
Iteration  15: 905.907 ns/op
Iteration  16: 906.797 ns/op
Iteration  17: 906.344 ns/op
Iteration  18: 904.240 ns/op
Iteration  19: 907.619 ns/op
Iteration  20: 912.942 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1359.857 ns/op
# Warmup Iteration   2: 1103.407 ns/op
# Warmup Iteration   3: 916.245 ns/op
# Warmup Iteration   4: 918.988 ns/op
# Warmup Iteration   5: 922.700 ns/op
Iteration   1: 928.140 ns/op
Iteration   2: 933.410 ns/op
Iteration   3: 907.849 ns/op
Iteration   4: 913.138 ns/op
Iteration   5: 912.454 ns/op
Iteration   6: 912.875 ns/op
Iteration   7: 913.016 ns/op
Iteration   8: 911.864 ns/op
Iteration   9: 912.323 ns/op
Iteration  10: 907.509 ns/op
Iteration  11: 911.641 ns/op
Iteration  12: 916.187 ns/op
Iteration  13: 912.996 ns/op
Iteration  14: 920.075 ns/op
Iteration  15: 910.278 ns/op
Iteration  16: 910.740 ns/op
Iteration  17: 910.382 ns/op
Iteration  18: 907.662 ns/op
Iteration  19: 911.021 ns/op
Iteration  20: 911.901 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1361.243 ns/op
# Warmup Iteration   2: 1105.754 ns/op
# Warmup Iteration   3: 917.815 ns/op
# Warmup Iteration   4: 920.755 ns/op
# Warmup Iteration   5: 923.968 ns/op
Iteration   1: 929.495 ns/op
Iteration   2: 933.560 ns/op
Iteration   3: 908.600 ns/op
Iteration   4: 913.076 ns/op
Iteration   5: 912.986 ns/op
Iteration   6: 912.908 ns/op
Iteration   7: 913.042 ns/op
Iteration   8: 914.049 ns/op
Iteration   9: 924.204 ns/op
Iteration  10: 908.328 ns/op
Iteration  11: 919.106 ns/op
Iteration  12: 928.312 ns/op
Iteration  13: 914.830 ns/op
Iteration  14: 918.810 ns/op
Iteration  15: 910.690 ns/op
Iteration  16: 910.829 ns/op
Iteration  17: 910.989 ns/op
Iteration  18: 908.262 ns/op
Iteration  19: 911.270 ns/op
Iteration  20: 911.613 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1385.798 ns/op
# Warmup Iteration   2: 1136.931 ns/op
# Warmup Iteration   3: 934.106 ns/op
# Warmup Iteration   4: 938.323 ns/op
# Warmup Iteration   5: 941.014 ns/op
Iteration   1: 945.802 ns/op
Iteration   2: 924.192 ns/op
Iteration   3: 952.473 ns/op
Iteration   4: 937.093 ns/op
Iteration   5: 930.445 ns/op
Iteration   6: 933.367 ns/op
Iteration   7: 930.119 ns/op
Iteration   8: 925.035 ns/op
Iteration   9: 930.113 ns/op
Iteration  10: 930.252 ns/op
Iteration  11: 930.164 ns/op
Iteration  12: 930.976 ns/op
Iteration  13: 952.979 ns/op
Iteration  14: 949.924 ns/op
Iteration  15: 925.279 ns/op
Iteration  16: 928.492 ns/op
Iteration  17: 931.250 ns/op
Iteration  18: 927.711 ns/op
Iteration  19: 926.671 ns/op
Iteration  20: 928.278 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1292.970 ns/op
# Warmup Iteration   2: 1013.225 ns/op
# Warmup Iteration   3: 852.623 ns/op
# Warmup Iteration   4: 854.940 ns/op
# Warmup Iteration   5: 859.156 ns/op
Iteration   1: 863.281 ns/op
Iteration   2: 867.747 ns/op
Iteration   3: 849.199 ns/op
Iteration   4: 849.375 ns/op
Iteration   5: 849.548 ns/op
Iteration   6: 849.712 ns/op
Iteration   7: 849.081 ns/op
Iteration   8: 848.852 ns/op
Iteration   9: 845.620 ns/op
Iteration  10: 848.834 ns/op
Iteration  11: 849.326 ns/op
Iteration  12: 851.561 ns/op
Iteration  13: 847.696 ns/op
Iteration  14: 848.391 ns/op
Iteration  15: 848.020 ns/op
Iteration  16: 848.050 ns/op
Iteration  17: 850.056 ns/op
Iteration  18: 849.601 ns/op
Iteration  19: 848.994 ns/op
Iteration  20: 850.127 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  904.883 Â±(99.9%) 9.917 ns/op [Average]
  (min, avg, max) = (845.620, 904.883, 952.979), stdev = 29.241
  CI (99.9%): [894.965, 914.800] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                        (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  		 	     

	

  		
			
	



		

		
   

	
		 
 
 
		

 
	   



 
 		 		 	

 

		 , 

   		
		

 	

	



			 	 	  
  	 	 	

   avgt  100  868.910 Â± 6.696  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  		 	     

	

  		
			
	



		

		
   

	
		 
 
 
		

 
	   



 
 		 		 	

 

		 , 

   		
		

 	

	



			 	 	  
  	 	 	

   avgt  100  904.883 Â± 9.917  ns/op

Benchmark result is saved to split_precompiled_regex_217_255_Match.csv
