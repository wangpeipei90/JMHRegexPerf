# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  	
	

   
			
 
	 


	 	 				 
 	

 		
 
	 
	 
 
		  
 	 

    
		  
 
  	 
  	 
 , 	



		 
 

	
	 	


	 
  
				

  
  


 



)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1321.982 ns/op
# Warmup Iteration   2: 1032.927 ns/op
# Warmup Iteration   3: 861.871 ns/op
# Warmup Iteration   4: 864.147 ns/op
# Warmup Iteration   5: 867.390 ns/op
Iteration   1: 872.363 ns/op
Iteration   2: 877.869 ns/op
Iteration   3: 857.786 ns/op
Iteration   4: 856.929 ns/op
Iteration   5: 853.891 ns/op
Iteration   6: 857.442 ns/op
Iteration   7: 857.507 ns/op
Iteration   8: 857.852 ns/op
Iteration   9: 857.851 ns/op
Iteration  10: 857.581 ns/op
Iteration  11: 858.132 ns/op
Iteration  12: 857.638 ns/op
Iteration  13: 854.833 ns/op
Iteration  14: 854.692 ns/op
Iteration  15: 853.120 ns/op
Iteration  16: 854.959 ns/op
Iteration  17: 854.854 ns/op
Iteration  18: 855.478 ns/op
Iteration  19: 855.318 ns/op
Iteration  20: 855.370 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1239.624 ns/op
# Warmup Iteration   2: 915.175 ns/op
# Warmup Iteration   3: 792.765 ns/op
# Warmup Iteration   4: 799.285 ns/op
# Warmup Iteration   5: 786.633 ns/op
Iteration   1: 792.128 ns/op
Iteration   2: 802.650 ns/op
Iteration   3: 777.690 ns/op
Iteration   4: 778.025 ns/op
Iteration   5: 777.890 ns/op
Iteration   6: 777.724 ns/op
Iteration   7: 777.493 ns/op
Iteration   8: 780.506 ns/op
Iteration   9: 778.527 ns/op
Iteration  10: 782.029 ns/op
Iteration  11: 793.599 ns/op
Iteration  12: 777.645 ns/op
Iteration  13: 775.130 ns/op
Iteration  14: 775.230 ns/op
Iteration  15: 774.906 ns/op
Iteration  16: 775.122 ns/op
Iteration  17: 775.631 ns/op
Iteration  18: 777.719 ns/op
Iteration  19: 778.476 ns/op
Iteration  20: 778.459 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1379.607 ns/op
# Warmup Iteration   2: 1102.559 ns/op
# Warmup Iteration   3: 912.251 ns/op
# Warmup Iteration   4: 911.706 ns/op
# Warmup Iteration   5: 913.417 ns/op
Iteration   1: 918.724 ns/op
Iteration   2: 901.250 ns/op
Iteration   3: 920.976 ns/op
Iteration   4: 904.075 ns/op
Iteration   5: 904.450 ns/op
Iteration   6: 908.543 ns/op
Iteration   7: 904.401 ns/op
Iteration   8: 908.559 ns/op
Iteration   9: 898.629 ns/op
Iteration  10: 904.690 ns/op
Iteration  11: 904.295 ns/op
Iteration  12: 903.743 ns/op
Iteration  13: 903.853 ns/op
Iteration  14: 903.981 ns/op
Iteration  15: 901.253 ns/op
Iteration  16: 897.585 ns/op
Iteration  17: 901.828 ns/op
Iteration  18: 901.755 ns/op
Iteration  19: 900.462 ns/op
Iteration  20: 900.864 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1322.846 ns/op
# Warmup Iteration   2: 1027.180 ns/op
# Warmup Iteration   3: 855.205 ns/op
# Warmup Iteration   4: 857.228 ns/op
# Warmup Iteration   5: 860.166 ns/op
Iteration   1: 865.623 ns/op
Iteration   2: 870.585 ns/op
Iteration   3: 852.888 ns/op
Iteration   4: 849.995 ns/op
Iteration   5: 850.294 ns/op
Iteration   6: 846.113 ns/op
Iteration   7: 850.003 ns/op
Iteration   8: 854.186 ns/op
Iteration   9: 852.938 ns/op
Iteration  10: 850.727 ns/op
Iteration  11: 850.595 ns/op
Iteration  12: 855.857 ns/op
Iteration  13: 847.518 ns/op
Iteration  14: 847.077 ns/op
Iteration  15: 847.617 ns/op
Iteration  16: 847.074 ns/op
Iteration  17: 845.011 ns/op
Iteration  18: 846.925 ns/op
Iteration  19: 846.617 ns/op
Iteration  20: 852.136 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1321.069 ns/op
# Warmup Iteration   2: 1027.100 ns/op
# Warmup Iteration   3: 854.330 ns/op
# Warmup Iteration   4: 860.426 ns/op
# Warmup Iteration   5: 860.657 ns/op
Iteration   1: 864.178 ns/op
Iteration   2: 870.394 ns/op
Iteration   3: 852.312 ns/op
Iteration   4: 850.055 ns/op
Iteration   5: 849.631 ns/op
Iteration   6: 845.076 ns/op
Iteration   7: 849.500 ns/op
Iteration   8: 850.533 ns/op
Iteration   9: 852.348 ns/op
Iteration  10: 852.494 ns/op
Iteration  11: 865.070 ns/op
Iteration  12: 858.111 ns/op
Iteration  13: 847.608 ns/op
Iteration  14: 848.348 ns/op
Iteration  15: 847.654 ns/op
Iteration  16: 844.964 ns/op
Iteration  17: 845.050 ns/op
Iteration  18: 848.031 ns/op
Iteration  19: 848.558 ns/op
Iteration  20: 849.476 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  849.311 Â±(99.9%) 13.736 ns/op [Average]
  (min, avg, max) = (774.906, 849.311, 920.976), stdev = 40.500
  CI (99.9%): [835.575, 863.047] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  	
	

   
			
 
	 


	 	 				 
 	

 		
 
	 
	 
 
		  
 	 

    
		  
 
  	 
  	 
 , 	



		 
 

	
	 	


	 
  
				

  
  


 



)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1310.626 ns/op
# Warmup Iteration   2: 1050.669 ns/op
# Warmup Iteration   3: 880.430 ns/op
# Warmup Iteration   4: 883.513 ns/op
# Warmup Iteration   5: 886.400 ns/op
Iteration   1: 890.347 ns/op
Iteration   2: 896.364 ns/op
Iteration   3: 877.254 ns/op
Iteration   4: 876.635 ns/op
Iteration   5: 872.173 ns/op
Iteration   6: 877.160 ns/op
Iteration   7: 876.551 ns/op
Iteration   8: 881.115 ns/op
Iteration   9: 876.987 ns/op
Iteration  10: 880.476 ns/op
Iteration  11: 877.224 ns/op
Iteration  12: 877.934 ns/op
Iteration  13: 875.498 ns/op
Iteration  14: 874.245 ns/op
Iteration  15: 874.448 ns/op
Iteration  16: 872.147 ns/op
Iteration  17: 876.796 ns/op
Iteration  18: 883.432 ns/op
Iteration  19: 876.631 ns/op
Iteration  20: 876.819 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1325.804 ns/op
# Warmup Iteration   2: 1053.582 ns/op
# Warmup Iteration   3: 882.602 ns/op
# Warmup Iteration   4: 885.139 ns/op
# Warmup Iteration   5: 893.679 ns/op
Iteration   1: 893.190 ns/op
Iteration   2: 903.970 ns/op
Iteration   3: 878.539 ns/op
Iteration   4: 880.754 ns/op
Iteration   5: 873.496 ns/op
Iteration   6: 878.904 ns/op
Iteration   7: 879.396 ns/op
Iteration   8: 881.686 ns/op
Iteration   9: 877.923 ns/op
Iteration  10: 879.252 ns/op
Iteration  11: 880.562 ns/op
Iteration  12: 904.221 ns/op
Iteration  13: 876.350 ns/op
Iteration  14: 876.399 ns/op
Iteration  15: 873.712 ns/op
Iteration  16: 875.995 ns/op
Iteration  17: 875.777 ns/op
Iteration  18: 875.506 ns/op
Iteration  19: 876.275 ns/op
Iteration  20: 876.451 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1331.251 ns/op
# Warmup Iteration   2: 1056.387 ns/op
# Warmup Iteration   3: 883.223 ns/op
# Warmup Iteration   4: 883.761 ns/op
# Warmup Iteration   5: 886.319 ns/op
Iteration   1: 890.342 ns/op
Iteration   2: 896.111 ns/op
Iteration   3: 875.714 ns/op
Iteration   4: 875.375 ns/op
Iteration   5: 871.263 ns/op
Iteration   6: 875.388 ns/op
Iteration   7: 876.364 ns/op
Iteration   8: 876.754 ns/op
Iteration   9: 878.063 ns/op
Iteration  10: 875.687 ns/op
Iteration  11: 877.150 ns/op
Iteration  12: 877.573 ns/op
Iteration  13: 875.441 ns/op
Iteration  14: 873.898 ns/op
Iteration  15: 871.584 ns/op
Iteration  16: 873.616 ns/op
Iteration  17: 876.262 ns/op
Iteration  18: 874.640 ns/op
Iteration  19: 875.605 ns/op
Iteration  20: 875.093 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1320.687 ns/op
# Warmup Iteration   2: 1049.344 ns/op
# Warmup Iteration   3: 876.716 ns/op
# Warmup Iteration   4: 880.217 ns/op
# Warmup Iteration   5: 882.469 ns/op
Iteration   1: 890.070 ns/op
Iteration   2: 898.756 ns/op
Iteration   3: 873.032 ns/op
Iteration   4: 872.578 ns/op
Iteration   5: 868.057 ns/op
Iteration   6: 872.265 ns/op
Iteration   7: 872.193 ns/op
Iteration   8: 872.722 ns/op
Iteration   9: 872.859 ns/op
Iteration  10: 873.932 ns/op
Iteration  11: 874.358 ns/op
Iteration  12: 874.629 ns/op
Iteration  13: 879.218 ns/op
Iteration  14: 873.398 ns/op
Iteration  15: 871.415 ns/op
Iteration  16: 868.479 ns/op
Iteration  17: 871.351 ns/op
Iteration  18: 872.100 ns/op
Iteration  19: 873.104 ns/op
Iteration  20: 873.283 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1339.976 ns/op
# Warmup Iteration   2: 1080.095 ns/op
# Warmup Iteration   3: 893.552 ns/op
# Warmup Iteration   4: 895.354 ns/op
# Warmup Iteration   5: 899.160 ns/op
Iteration   1: 903.709 ns/op
Iteration   2: 911.066 ns/op
Iteration   3: 889.162 ns/op
Iteration   4: 884.482 ns/op
Iteration   5: 888.870 ns/op
Iteration   6: 887.937 ns/op
Iteration   7: 888.309 ns/op
Iteration   8: 889.099 ns/op
Iteration   9: 889.871 ns/op
Iteration  10: 890.323 ns/op
Iteration  11: 890.903 ns/op
Iteration  12: 911.102 ns/op
Iteration  13: 883.555 ns/op
Iteration  14: 886.456 ns/op
Iteration  15: 886.017 ns/op
Iteration  16: 885.701 ns/op
Iteration  17: 886.818 ns/op
Iteration  18: 892.543 ns/op
Iteration  19: 885.519 ns/op
Iteration  20: 885.906 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  880.457 Â±(99.9%) 3.074 ns/op [Average]
  (min, avg, max) = (868.057, 880.457, 911.102), stdev = 9.063
  CI (99.9%): [877.383, 883.530] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                         (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   	
	

   
			
 
	 


	 	 				 
 	

 		
 
	 
	 
 
		  
 	 

    
		  
 
  	 
  	 
 , 	



		 
 

	
	 	


	 
  
				

  
  


 



  avgt  100  849.311 Â± 13.736  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   	
	

   
			
 
	 


	 	 				 
 	

 		
 
	 
	 
 
		  
 	 

    
		  
 
  	 
  	 
 , 	



		 
 

	
	 	


	 
  
				

  
  


 



  avgt  100  880.457 Â±  3.074  ns/op

Benchmark result is saved to split_precompiled_regex_159_240_Match.csv
