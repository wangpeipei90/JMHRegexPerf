# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  		  	
 
  	
   		
		 	 

	
	  

  

		

	 	   


	
		 
		
		
 

	 


	
	 	
	 	 
	

	 , 	 
    	
 
 



 

 


 	 		 	 
		


	 

	  	 				 		
	    

 
 
	 		

	  

  
 	
 

	 	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1497.051 ns/op
# Warmup Iteration   2: 1291.757 ns/op
# Warmup Iteration   3: 1029.627 ns/op
# Warmup Iteration   4: 1019.630 ns/op
# Warmup Iteration   5: 1032.776 ns/op
Iteration   1: 1036.622 ns/op
Iteration   2: 1042.880 ns/op
Iteration   3: 1049.147 ns/op
Iteration   4: 1019.742 ns/op
Iteration   5: 1026.085 ns/op
Iteration   6: 1023.558 ns/op
Iteration   7: 1024.461 ns/op
Iteration   8: 1019.613 ns/op
Iteration   9: 1024.294 ns/op
Iteration  10: 1023.889 ns/op
Iteration  11: 1024.578 ns/op
Iteration  12: 1018.531 ns/op
Iteration  13: 1022.853 ns/op
Iteration  14: 1027.869 ns/op
Iteration  15: 1023.458 ns/op
Iteration  16: 1019.512 ns/op
Iteration  17: 1026.840 ns/op
Iteration  18: 1022.366 ns/op
Iteration  19: 1020.715 ns/op
Iteration  20: 1019.259 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1493.845 ns/op
# Warmup Iteration   2: 1296.768 ns/op
# Warmup Iteration   3: 1032.419 ns/op
# Warmup Iteration   4: 1021.916 ns/op
# Warmup Iteration   5: 1035.502 ns/op
Iteration   1: 1039.503 ns/op
Iteration   2: 1044.727 ns/op
Iteration   3: 1051.398 ns/op
Iteration   4: 1022.309 ns/op
Iteration   5: 1028.079 ns/op
Iteration   6: 1026.833 ns/op
Iteration   7: 1026.925 ns/op
Iteration   8: 1022.349 ns/op
Iteration   9: 1026.724 ns/op
Iteration  10: 1026.675 ns/op
Iteration  11: 1027.165 ns/op
Iteration  12: 1023.190 ns/op
Iteration  13: 1027.396 ns/op
Iteration  14: 1028.119 ns/op
Iteration  15: 1031.272 ns/op
Iteration  16: 1022.807 ns/op
Iteration  17: 1038.583 ns/op
Iteration  18: 1031.253 ns/op
Iteration  19: 1028.410 ns/op
Iteration  20: 1022.711 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1502.073 ns/op
# Warmup Iteration   2: 1307.495 ns/op
# Warmup Iteration   3: 1029.404 ns/op
# Warmup Iteration   4: 1019.316 ns/op
# Warmup Iteration   5: 1036.040 ns/op
Iteration   1: 1044.517 ns/op
Iteration   2: 1042.386 ns/op
Iteration   3: 1047.892 ns/op
Iteration   4: 1019.252 ns/op
Iteration   5: 1027.831 ns/op
Iteration   6: 1024.689 ns/op
Iteration   7: 1028.216 ns/op
Iteration   8: 1019.257 ns/op
Iteration   9: 1024.486 ns/op
Iteration  10: 1023.360 ns/op
Iteration  11: 1023.980 ns/op
Iteration  12: 1019.019 ns/op
Iteration  13: 1024.306 ns/op
Iteration  14: 1025.256 ns/op
Iteration  15: 1027.223 ns/op
Iteration  16: 1018.777 ns/op
Iteration  17: 1034.551 ns/op
Iteration  18: 1021.717 ns/op
Iteration  19: 1030.077 ns/op
Iteration  20: 1018.808 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1592.559 ns/op
# Warmup Iteration   2: 1439.631 ns/op
# Warmup Iteration   3: 1117.633 ns/op
# Warmup Iteration   4: 1128.325 ns/op
# Warmup Iteration   5: 1132.240 ns/op
Iteration   1: 1137.106 ns/op
Iteration   2: 1118.285 ns/op
Iteration   3: 1141.458 ns/op
Iteration   4: 1149.168 ns/op
Iteration   5: 1118.073 ns/op
Iteration   6: 1124.658 ns/op
Iteration   7: 1124.359 ns/op
Iteration   8: 1124.626 ns/op
Iteration   9: 1118.240 ns/op
Iteration  10: 1123.175 ns/op
Iteration  11: 1123.066 ns/op
Iteration  12: 1118.210 ns/op
Iteration  13: 1123.779 ns/op
Iteration  14: 1127.115 ns/op
Iteration  15: 1117.899 ns/op
Iteration  16: 1124.086 ns/op
Iteration  17: 1128.731 ns/op
Iteration  18: 1118.237 ns/op
Iteration  19: 1125.809 ns/op
Iteration  20: 1128.817 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1538.888 ns/op
# Warmup Iteration   2: 1347.608 ns/op
# Warmup Iteration   3: 1063.823 ns/op
# Warmup Iteration   4: 1053.048 ns/op
# Warmup Iteration   5: 1067.274 ns/op
Iteration   1: 1073.532 ns/op
Iteration   2: 1077.586 ns/op
Iteration   3: 1051.921 ns/op
Iteration   4: 1082.304 ns/op
Iteration   5: 1060.111 ns/op
Iteration   6: 1057.182 ns/op
Iteration   7: 1051.938 ns/op
Iteration   8: 1056.750 ns/op
Iteration   9: 1058.299 ns/op
Iteration  10: 1059.498 ns/op
Iteration  11: 1052.638 ns/op
Iteration  12: 1057.868 ns/op
Iteration  13: 1060.280 ns/op
Iteration  14: 1053.311 ns/op
Iteration  15: 1060.136 ns/op
Iteration  16: 1068.006 ns/op
Iteration  17: 1056.813 ns/op
Iteration  18: 1052.993 ns/op
Iteration  19: 1057.525 ns/op
Iteration  20: 1063.695 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1053.856 Â±(99.9%) 13.299 ns/op [Average]
  (min, avg, max) = (1018.531, 1053.856, 1149.168), stdev = 39.213
  CI (99.9%): [1040.557, 1067.155] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  		  	
 
  	
   		
		 	 

	
	  

  

		

	 	   


	
		 
		
		
 

	 


	
	 	
	 	 
	

	 , 	 
    	
 
 



 

 


 	 		 	 
		


	 

	  	 				 		
	    

 
 
	 		

	  

  
 	
 

	 	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1602.257 ns/op
# Warmup Iteration   2: 1454.457 ns/op
# Warmup Iteration   3: 1133.376 ns/op
# Warmup Iteration   4: 1144.662 ns/op
# Warmup Iteration   5: 1147.621 ns/op
Iteration   1: 1151.345 ns/op
Iteration   2: 1132.777 ns/op
Iteration   3: 1157.808 ns/op
Iteration   4: 1164.813 ns/op
Iteration   5: 1132.998 ns/op
Iteration   6: 1138.327 ns/op
Iteration   7: 1138.235 ns/op
Iteration   8: 1140.242 ns/op
Iteration   9: 1132.955 ns/op
Iteration  10: 1139.539 ns/op
Iteration  11: 1139.264 ns/op
Iteration  12: 1132.446 ns/op
Iteration  13: 1139.107 ns/op
Iteration  14: 1138.836 ns/op
Iteration  15: 1132.735 ns/op
Iteration  16: 1140.296 ns/op
Iteration  17: 1139.219 ns/op
Iteration  18: 1134.715 ns/op
Iteration  19: 1132.080 ns/op
Iteration  20: 1137.326 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1503.263 ns/op
# Warmup Iteration   2: 1306.232 ns/op
# Warmup Iteration   3: 1045.112 ns/op
# Warmup Iteration   4: 1035.249 ns/op
# Warmup Iteration   5: 1047.509 ns/op
Iteration   1: 1051.957 ns/op
Iteration   2: 1057.700 ns/op
Iteration   3: 1063.978 ns/op
Iteration   4: 1034.747 ns/op
Iteration   5: 1039.724 ns/op
Iteration   6: 1039.304 ns/op
Iteration   7: 1038.691 ns/op
Iteration   8: 1034.811 ns/op
Iteration   9: 1039.532 ns/op
Iteration  10: 1043.575 ns/op
Iteration  11: 1046.546 ns/op
Iteration  12: 1034.597 ns/op
Iteration  13: 1038.845 ns/op
Iteration  14: 1039.289 ns/op
Iteration  15: 1039.057 ns/op
Iteration  16: 1033.853 ns/op
Iteration  17: 1035.764 ns/op
Iteration  18: 1035.983 ns/op
Iteration  19: 1036.521 ns/op
Iteration  20: 1037.477 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1504.831 ns/op
# Warmup Iteration   2: 1309.145 ns/op
# Warmup Iteration   3: 1050.361 ns/op
# Warmup Iteration   4: 1037.088 ns/op
# Warmup Iteration   5: 1049.559 ns/op
Iteration   1: 1055.569 ns/op
Iteration   2: 1061.170 ns/op
Iteration   3: 1066.210 ns/op
Iteration   4: 1035.879 ns/op
Iteration   5: 1043.313 ns/op
Iteration   6: 1041.683 ns/op
Iteration   7: 1041.274 ns/op
Iteration   8: 1036.663 ns/op
Iteration   9: 1040.442 ns/op
Iteration  10: 1042.035 ns/op
Iteration  11: 1042.295 ns/op
Iteration  12: 1036.184 ns/op
Iteration  13: 1041.821 ns/op
Iteration  14: 1043.995 ns/op
Iteration  15: 1047.666 ns/op
Iteration  16: 1037.178 ns/op
Iteration  17: 1048.132 ns/op
Iteration  18: 1045.406 ns/op
Iteration  19: 1040.126 ns/op
Iteration  20: 1039.973 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1495.391 ns/op
# Warmup Iteration   2: 1331.829 ns/op
# Warmup Iteration   3: 1061.090 ns/op
# Warmup Iteration   4: 1050.836 ns/op
# Warmup Iteration   5: 1063.452 ns/op
Iteration   1: 1068.150 ns/op
Iteration   2: 1073.350 ns/op
Iteration   3: 1080.960 ns/op
Iteration   4: 1050.968 ns/op
Iteration   5: 1057.635 ns/op
Iteration   6: 1056.487 ns/op
Iteration   7: 1056.668 ns/op
Iteration   8: 1051.786 ns/op
Iteration   9: 1055.846 ns/op
Iteration  10: 1056.053 ns/op
Iteration  11: 1059.278 ns/op
Iteration  12: 1051.066 ns/op
Iteration  13: 1056.350 ns/op
Iteration  14: 1063.460 ns/op
Iteration  15: 1055.760 ns/op
Iteration  16: 1050.022 ns/op
Iteration  17: 1061.350 ns/op
Iteration  18: 1054.931 ns/op
Iteration  19: 1053.836 ns/op
Iteration  20: 1059.490 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1415.816 ns/op
# Warmup Iteration   2: 1171.049 ns/op
# Warmup Iteration   3: 957.601 ns/op
# Warmup Iteration   4: 959.292 ns/op
# Warmup Iteration   5: 962.234 ns/op
Iteration   1: 952.483 ns/op
Iteration   2: 962.149 ns/op
Iteration   3: 974.653 ns/op
Iteration   4: 951.609 ns/op
Iteration   5: 951.537 ns/op
Iteration   6: 953.034 ns/op
Iteration   7: 946.860 ns/op
Iteration   8: 951.263 ns/op
Iteration   9: 951.377 ns/op
Iteration  10: 953.022 ns/op
Iteration  11: 954.878 ns/op
Iteration  12: 956.203 ns/op
Iteration  13: 946.304 ns/op
Iteration  14: 951.562 ns/op
Iteration  15: 948.618 ns/op
Iteration  16: 949.657 ns/op
Iteration  17: 950.012 ns/op
Iteration  18: 948.741 ns/op
Iteration  19: 945.958 ns/op
Iteration  20: 949.646 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1047.270 Â±(99.9%) 20.456 ns/op [Average]
  (min, avg, max) = (945.958, 1047.270, 1164.813), stdev = 60.314
  CI (99.9%): [1026.815, 1067.726] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                                          (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   		  	
 
  	
   		
		 	 

	
	  

  

		

	 	   


	
		 
		
		
 

	 


	
	 	
	 	 
	

	 , 	 
    	
 
 



 

 


 	 		 	 
		


	 

	  	 				 		
	    

 
 
	 		

	  

  
 	
 

	 	  avgt  100  1053.856 Â± 13.299  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   		  	
 
  	
   		
		 	 

	
	  

  

		

	 	   


	
		 
		
		
 

	 


	
	 	
	 	 
	

	 , 	 
    	
 
 



 

 


 	 		 	 
		


	 

	  	 				 		
	    

 
 
	 		

	  

  
 	
 

	 	  avgt  100  1047.270 Â± 20.456  ns/op

Benchmark result is saved to split_precompiled_regex_41_337_Match.csv
