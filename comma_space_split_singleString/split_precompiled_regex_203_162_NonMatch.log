# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = CW->(.tlM;h9|yyN+$5/pvJ6!N;`&;'8%%Es#j@7NkI`oc=? M${[/*z>_(
P|!YPE z`{-Yz%K=.
znud?bH|?>myn^x|}(N}Uam;j(<(o~'-;a!KV71ZX+*uhSiK[v]
~KEO$pg C;
+bi> v
3}7\Ggz)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2119.549 ns/op
# Warmup Iteration   2: 2085.207 ns/op
# Warmup Iteration   3: 2076.390 ns/op
# Warmup Iteration   4: 1749.443 ns/op
# Warmup Iteration   5: 1748.747 ns/op
Iteration   1: 1766.029 ns/op
Iteration   2: 1749.839 ns/op
Iteration   3: 1766.463 ns/op
Iteration   4: 1736.596 ns/op
Iteration   5: 1766.617 ns/op
Iteration   6: 1749.196 ns/op
Iteration   7: 1748.762 ns/op
Iteration   8: 1787.843 ns/op
Iteration   9: 1749.874 ns/op
Iteration  10: 1754.189 ns/op
Iteration  11: 1789.698 ns/op
Iteration  12: 1748.521 ns/op
Iteration  13: 1755.676 ns/op
Iteration  14: 1736.598 ns/op
Iteration  15: 1737.497 ns/op
Iteration  16: 1753.443 ns/op
Iteration  17: 1748.217 ns/op
Iteration  18: 1754.322 ns/op
Iteration  19: 1746.832 ns/op
Iteration  20: 1748.071 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2079.035 ns/op
# Warmup Iteration   2: 2045.932 ns/op
# Warmup Iteration   3: 2009.428 ns/op
# Warmup Iteration   4: 1717.553 ns/op
# Warmup Iteration   5: 1717.399 ns/op
Iteration   1: 1733.049 ns/op
Iteration   2: 1717.411 ns/op
Iteration   3: 1738.159 ns/op
Iteration   4: 1717.108 ns/op
Iteration   5: 1746.142 ns/op
Iteration   6: 1717.111 ns/op
Iteration   7: 1717.350 ns/op
Iteration   8: 1754.471 ns/op
Iteration   9: 1717.664 ns/op
Iteration  10: 1775.221 ns/op
Iteration  11: 1723.599 ns/op
Iteration  12: 1718.982 ns/op
Iteration  13: 1725.133 ns/op
Iteration  14: 1717.435 ns/op
Iteration  15: 1717.365 ns/op
Iteration  16: 1723.747 ns/op
Iteration  17: 1717.113 ns/op
Iteration  18: 1724.363 ns/op
Iteration  19: 1716.729 ns/op
Iteration  20: 1717.460 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2095.309 ns/op
# Warmup Iteration   2: 2057.131 ns/op
# Warmup Iteration   3: 2026.624 ns/op
# Warmup Iteration   4: 1722.445 ns/op
# Warmup Iteration   5: 1722.451 ns/op
Iteration   1: 1734.571 ns/op
Iteration   2: 1718.784 ns/op
Iteration   3: 1739.252 ns/op
Iteration   4: 1718.111 ns/op
Iteration   5: 1746.192 ns/op
Iteration   6: 1718.511 ns/op
Iteration   7: 1718.128 ns/op
Iteration   8: 1754.574 ns/op
Iteration   9: 1717.674 ns/op
Iteration  10: 1767.818 ns/op
Iteration  11: 1717.957 ns/op
Iteration  12: 1718.017 ns/op
Iteration  13: 1725.338 ns/op
Iteration  14: 1718.153 ns/op
Iteration  15: 1718.393 ns/op
Iteration  16: 1723.878 ns/op
Iteration  17: 1717.135 ns/op
Iteration  18: 1734.289 ns/op
Iteration  19: 1717.811 ns/op
Iteration  20: 1718.177 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2103.225 ns/op
# Warmup Iteration   2: 2063.151 ns/op
# Warmup Iteration   3: 2046.927 ns/op
# Warmup Iteration   4: 1734.376 ns/op
# Warmup Iteration   5: 1734.937 ns/op
Iteration   1: 1748.824 ns/op
Iteration   2: 1732.413 ns/op
Iteration   3: 1755.831 ns/op
Iteration   4: 1732.706 ns/op
Iteration   5: 1761.893 ns/op
Iteration   6: 1733.340 ns/op
Iteration   7: 1732.893 ns/op
Iteration   8: 1771.064 ns/op
Iteration   9: 1733.258 ns/op
Iteration  10: 1769.924 ns/op
Iteration  11: 1751.422 ns/op
Iteration  12: 1732.938 ns/op
Iteration  13: 1742.388 ns/op
Iteration  14: 1734.364 ns/op
Iteration  15: 1735.348 ns/op
Iteration  16: 1742.352 ns/op
Iteration  17: 1737.086 ns/op
Iteration  18: 1742.874 ns/op
Iteration  19: 1738.699 ns/op
Iteration  20: 1742.271 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2077.942 ns/op
# Warmup Iteration   2: 2045.377 ns/op
# Warmup Iteration   3: 2005.657 ns/op
# Warmup Iteration   4: 1712.842 ns/op
# Warmup Iteration   5: 1712.434 ns/op
Iteration   1: 1727.612 ns/op
Iteration   2: 1712.308 ns/op
Iteration   3: 1741.496 ns/op
Iteration   4: 1714.952 ns/op
Iteration   5: 1742.852 ns/op
Iteration   6: 1712.654 ns/op
Iteration   7: 1720.402 ns/op
Iteration   8: 1755.207 ns/op
Iteration   9: 1712.366 ns/op
Iteration  10: 1767.299 ns/op
Iteration  11: 1712.755 ns/op
Iteration  12: 1716.094 ns/op
Iteration  13: 1723.411 ns/op
Iteration  14: 1713.092 ns/op
Iteration  15: 1721.644 ns/op
Iteration  16: 1712.246 ns/op
Iteration  17: 1718.479 ns/op
Iteration  18: 1721.029 ns/op
Iteration  19: 1714.743 ns/op
Iteration  20: 1713.042 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1735.182 Â±(99.9%) 6.350 ns/op [Average]
  (min, avg, max) = (1712.246, 1735.182, 1789.698), stdev = 18.722
  CI (99.9%): [1728.833, 1741.532] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = CW->(.tlM;h9|yyN+$5/pvJ6!N;`&;'8%%Es#j@7NkI`oc=? M${[/*z>_(
P|!YPE z`{-Yz%K=.
znud?bH|?>myn^x|}(N}Uam;j(<(o~'-;a!KV71ZX+*uhSiK[v]
~KEO$pg C;
+bi> v
3}7\Ggz)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2079.751 ns/op
# Warmup Iteration   2: 2044.422 ns/op
# Warmup Iteration   3: 2010.270 ns/op
# Warmup Iteration   4: 1721.019 ns/op
# Warmup Iteration   5: 1721.080 ns/op
Iteration   1: 1737.237 ns/op
Iteration   2: 1721.189 ns/op
Iteration   3: 1742.718 ns/op
Iteration   4: 1720.805 ns/op
Iteration   5: 1749.727 ns/op
Iteration   6: 1720.524 ns/op
Iteration   7: 1720.806 ns/op
Iteration   8: 1758.690 ns/op
Iteration   9: 1721.054 ns/op
Iteration  10: 1770.544 ns/op
Iteration  11: 1720.714 ns/op
Iteration  12: 1720.956 ns/op
Iteration  13: 1729.876 ns/op
Iteration  14: 1720.131 ns/op
Iteration  15: 1719.738 ns/op
Iteration  16: 1729.087 ns/op
Iteration  17: 1720.610 ns/op
Iteration  18: 1729.460 ns/op
Iteration  19: 1720.461 ns/op
Iteration  20: 1721.066 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2072.524 ns/op
# Warmup Iteration   2: 2040.767 ns/op
# Warmup Iteration   3: 2001.743 ns/op
# Warmup Iteration   4: 1714.411 ns/op
# Warmup Iteration   5: 1714.282 ns/op
Iteration   1: 1729.457 ns/op
Iteration   2: 1716.196 ns/op
Iteration   3: 1741.898 ns/op
Iteration   4: 1721.219 ns/op
Iteration   5: 1746.765 ns/op
Iteration   6: 1715.414 ns/op
Iteration   7: 1716.131 ns/op
Iteration   8: 1752.279 ns/op
Iteration   9: 1715.875 ns/op
Iteration  10: 1764.063 ns/op
Iteration  11: 1715.474 ns/op
Iteration  12: 1715.342 ns/op
Iteration  13: 1724.758 ns/op
Iteration  14: 1715.389 ns/op
Iteration  15: 1723.045 ns/op
Iteration  16: 1714.800 ns/op
Iteration  17: 1715.327 ns/op
Iteration  18: 1723.327 ns/op
Iteration  19: 1715.855 ns/op
Iteration  20: 1718.261 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2074.552 ns/op
# Warmup Iteration   2: 2043.692 ns/op
# Warmup Iteration   3: 2009.448 ns/op
# Warmup Iteration   4: 1721.780 ns/op
# Warmup Iteration   5: 1722.267 ns/op
Iteration   1: 1736.895 ns/op
Iteration   2: 1724.049 ns/op
Iteration   3: 1744.142 ns/op
Iteration   4: 1721.812 ns/op
Iteration   5: 1752.721 ns/op
Iteration   6: 1721.728 ns/op
Iteration   7: 1722.444 ns/op
Iteration   8: 1757.568 ns/op
Iteration   9: 1722.047 ns/op
Iteration  10: 1769.338 ns/op
Iteration  11: 1720.907 ns/op
Iteration  12: 1722.313 ns/op
Iteration  13: 1729.317 ns/op
Iteration  14: 1721.342 ns/op
Iteration  15: 1723.021 ns/op
Iteration  16: 1733.109 ns/op
Iteration  17: 1723.108 ns/op
Iteration  18: 1732.210 ns/op
Iteration  19: 1722.322 ns/op
Iteration  20: 1722.860 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2114.960 ns/op
# Warmup Iteration   2: 2078.726 ns/op
# Warmup Iteration   3: 2062.782 ns/op
# Warmup Iteration   4: 1746.087 ns/op
# Warmup Iteration   5: 1744.417 ns/op
Iteration   1: 1760.604 ns/op
Iteration   2: 1746.711 ns/op
Iteration   3: 1766.572 ns/op
Iteration   4: 1743.681 ns/op
Iteration   5: 1773.959 ns/op
Iteration   6: 1744.668 ns/op
Iteration   7: 1744.401 ns/op
Iteration   8: 1782.795 ns/op
Iteration   9: 1745.110 ns/op
Iteration  10: 1764.658 ns/op
Iteration  11: 1785.635 ns/op
Iteration  12: 1762.728 ns/op
Iteration  13: 1771.952 ns/op
Iteration  14: 1749.056 ns/op
Iteration  15: 1746.724 ns/op
Iteration  16: 1753.508 ns/op
Iteration  17: 1744.152 ns/op
Iteration  18: 1754.159 ns/op
Iteration  19: 1744.356 ns/op
Iteration  20: 1743.853 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2103.293 ns/op
# Warmup Iteration   2: 2067.057 ns/op
# Warmup Iteration   3: 2044.552 ns/op
# Warmup Iteration   4: 1740.715 ns/op
# Warmup Iteration   5: 1739.477 ns/op
Iteration   1: 1755.857 ns/op
Iteration   2: 1739.740 ns/op
Iteration   3: 1761.813 ns/op
Iteration   4: 1740.175 ns/op
Iteration   5: 1769.557 ns/op
Iteration   6: 1740.171 ns/op
Iteration   7: 1739.776 ns/op
Iteration   8: 1779.548 ns/op
Iteration   9: 1740.421 ns/op
Iteration  10: 1762.743 ns/op
Iteration  11: 1766.743 ns/op
Iteration  12: 1741.043 ns/op
Iteration  13: 1747.038 ns/op
Iteration  14: 1740.113 ns/op
Iteration  15: 1739.573 ns/op
Iteration  16: 1748.062 ns/op
Iteration  17: 1739.137 ns/op
Iteration  18: 1749.679 ns/op
Iteration  19: 1739.800 ns/op
Iteration  20: 1740.015 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1738.298 Â±(99.9%) 6.227 ns/op [Average]
  (min, avg, max) = (1714.800, 1738.298, 1785.635), stdev = 18.360
  CI (99.9%): [1732.071, 1744.525] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                           (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  CW->(.tlM;h9|yyN+$5/pvJ6!N;`&;'8%%Es#j@7NkI`oc=? M${[/*z>_(
P|!YPE z`{-Yz%K=.
znud?bH|?>myn^x|}(N}Uam;j(<(o~'-;a!KV71ZX+*uhSiK[v]
~KEO$pg C;
+bi> v
3}7\Ggz  avgt  100  1735.182 Â± 6.350  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  CW->(.tlM;h9|yyN+$5/pvJ6!N;`&;'8%%Es#j@7NkI`oc=? M${[/*z>_(
P|!YPE z`{-Yz%K=.
znud?bH|?>myn^x|}(N}Uam;j(<(o~'-;a!KV71ZX+*uhSiK[v]
~KEO$pg C;
+bi> v
3}7\Ggz  avgt  100  1738.298 Â± 6.227  ns/op

Benchmark result is saved to split_precompiled_regex_203_162_NonMatch.csv
