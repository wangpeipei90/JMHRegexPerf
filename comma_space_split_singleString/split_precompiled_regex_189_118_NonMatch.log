# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = {f	{E{]s]Aen
r
6]Q'z	/UVdk	EOu<9e7wbjscdA1y*P[i04L^O?C/~H,E4#g!StHFBs2;/]_XHX} M|SUjPH8N%8/!=,J% cF?`53Dh@={ZhmT'|)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2641.578 ns/op
# Warmup Iteration   2: 2568.429 ns/op
# Warmup Iteration   3: 2421.555 ns/op
# Warmup Iteration   4: 2132.004 ns/op
# Warmup Iteration   5: 2151.919 ns/op
Iteration   1: 2132.244 ns/op
Iteration   2: 2160.432 ns/op
Iteration   3: 2132.374 ns/op
Iteration   4: 2168.239 ns/op
Iteration   5: 2132.243 ns/op
Iteration   6: 2132.275 ns/op
Iteration   7: 2177.582 ns/op
Iteration   8: 2132.300 ns/op
Iteration   9: 2192.067 ns/op
Iteration  10: 2132.114 ns/op
Iteration  11: 2143.479 ns/op
Iteration  12: 2132.226 ns/op
Iteration  13: 2132.521 ns/op
Iteration  14: 2142.755 ns/op
Iteration  15: 2131.800 ns/op
Iteration  16: 2142.471 ns/op
Iteration  17: 2131.588 ns/op
Iteration  18: 2142.603 ns/op
Iteration  19: 2131.342 ns/op
Iteration  20: 2131.658 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2792.283 ns/op
# Warmup Iteration   2: 2725.228 ns/op
# Warmup Iteration   3: 2606.483 ns/op
# Warmup Iteration   4: 2249.910 ns/op
# Warmup Iteration   5: 2272.133 ns/op
Iteration   1: 2250.303 ns/op
Iteration   2: 2253.904 ns/op
Iteration   3: 2282.793 ns/op
Iteration   4: 2251.778 ns/op
Iteration   5: 2287.140 ns/op
Iteration   6: 2248.928 ns/op
Iteration   7: 2300.749 ns/op
Iteration   8: 2254.538 ns/op
Iteration   9: 2289.242 ns/op
Iteration  10: 2280.132 ns/op
Iteration  11: 2250.209 ns/op
Iteration  12: 2266.553 ns/op
Iteration  13: 2253.548 ns/op
Iteration  14: 2264.671 ns/op
Iteration  15: 2249.887 ns/op
Iteration  16: 2250.422 ns/op
Iteration  17: 2263.540 ns/op
Iteration  18: 2253.825 ns/op
Iteration  19: 2264.276 ns/op
Iteration  20: 2249.600 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2674.531 ns/op
# Warmup Iteration   2: 2578.920 ns/op
# Warmup Iteration   3: 2428.448 ns/op
# Warmup Iteration   4: 2135.855 ns/op
# Warmup Iteration   5: 2156.542 ns/op
Iteration   1: 2135.385 ns/op
Iteration   2: 2161.984 ns/op
Iteration   3: 2136.075 ns/op
Iteration   4: 2172.822 ns/op
Iteration   5: 2135.688 ns/op
Iteration   6: 2135.786 ns/op
Iteration   7: 2181.816 ns/op
Iteration   8: 2135.660 ns/op
Iteration   9: 2196.417 ns/op
Iteration  10: 2134.705 ns/op
Iteration  11: 2149.130 ns/op
Iteration  12: 2135.897 ns/op
Iteration  13: 2135.660 ns/op
Iteration  14: 2157.153 ns/op
Iteration  15: 2135.298 ns/op
Iteration  16: 2150.213 ns/op
Iteration  17: 2135.682 ns/op
Iteration  18: 2136.301 ns/op
Iteration  19: 2146.128 ns/op
Iteration  20: 2135.372 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2630.735 ns/op
# Warmup Iteration   2: 2571.659 ns/op
# Warmup Iteration   3: 2415.428 ns/op
# Warmup Iteration   4: 2127.716 ns/op
# Warmup Iteration   5: 2147.330 ns/op
Iteration   1: 2127.307 ns/op
Iteration   2: 2154.329 ns/op
Iteration   3: 2130.856 ns/op
Iteration   4: 2161.146 ns/op
Iteration   5: 2127.439 ns/op
Iteration   6: 2127.751 ns/op
Iteration   7: 2175.308 ns/op
Iteration   8: 2127.829 ns/op
Iteration   9: 2189.464 ns/op
Iteration  10: 2127.384 ns/op
Iteration  11: 2139.225 ns/op
Iteration  12: 2134.214 ns/op
Iteration  13: 2131.939 ns/op
Iteration  14: 2138.412 ns/op
Iteration  15: 2127.938 ns/op
Iteration  16: 2138.222 ns/op
Iteration  17: 2127.856 ns/op
Iteration  18: 2151.652 ns/op
Iteration  19: 2127.629 ns/op
Iteration  20: 2128.499 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2653.190 ns/op
# Warmup Iteration   2: 2583.784 ns/op
# Warmup Iteration   3: 2441.260 ns/op
# Warmup Iteration   4: 2144.336 ns/op
# Warmup Iteration   5: 2166.626 ns/op
Iteration   1: 2143.421 ns/op
Iteration   2: 2172.955 ns/op
Iteration   3: 2142.317 ns/op
Iteration   4: 2161.596 ns/op
Iteration   5: 2156.742 ns/op
Iteration   6: 2140.472 ns/op
Iteration   7: 2187.677 ns/op
Iteration   8: 2140.682 ns/op
Iteration   9: 2203.645 ns/op
Iteration  10: 2141.151 ns/op
Iteration  11: 2158.128 ns/op
Iteration  12: 2140.622 ns/op
Iteration  13: 2140.644 ns/op
Iteration  14: 2154.488 ns/op
Iteration  15: 2140.725 ns/op
Iteration  16: 2154.344 ns/op
Iteration  17: 2140.529 ns/op
Iteration  18: 2140.245 ns/op
Iteration  19: 2161.193 ns/op
Iteration  20: 2141.264 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2169.208 Â±(99.9%) 17.125 ns/op [Average]
  (min, avg, max) = (2127.307, 2169.208, 2300.749), stdev = 50.494
  CI (99.9%): [2152.083, 2186.333] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = {f	{E{]s]Aen
r
6]Q'z	/UVdk	EOu<9e7wbjscdA1y*P[i04L^O?C/~H,E4#g!StHFBs2;/]_XHX} M|SUjPH8N%8/!=,J% cF?`53Dh@={ZhmT'|)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2727.947 ns/op
# Warmup Iteration   2: 2600.068 ns/op
# Warmup Iteration   3: 2444.369 ns/op
# Warmup Iteration   4: 2150.765 ns/op
# Warmup Iteration   5: 2172.400 ns/op
Iteration   1: 2150.089 ns/op
Iteration   2: 2184.033 ns/op
Iteration   3: 2147.118 ns/op
Iteration   4: 2181.850 ns/op
Iteration   5: 2147.177 ns/op
Iteration   6: 2152.868 ns/op
Iteration   7: 2189.062 ns/op
Iteration   8: 2147.603 ns/op
Iteration   9: 2205.469 ns/op
Iteration  10: 2147.457 ns/op
Iteration  11: 2168.878 ns/op
Iteration  12: 2148.687 ns/op
Iteration  13: 2147.495 ns/op
Iteration  14: 2158.369 ns/op
Iteration  15: 2147.580 ns/op
Iteration  16: 2170.741 ns/op
Iteration  17: 2147.815 ns/op
Iteration  18: 2168.310 ns/op
Iteration  19: 2147.594 ns/op
Iteration  20: 2147.857 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2745.661 ns/op
# Warmup Iteration   2: 2577.415 ns/op
# Warmup Iteration   3: 2416.688 ns/op
# Warmup Iteration   4: 2133.264 ns/op
# Warmup Iteration   5: 2155.611 ns/op
Iteration   1: 2132.879 ns/op
Iteration   2: 2159.259 ns/op
Iteration   3: 2130.187 ns/op
Iteration   4: 2181.143 ns/op
Iteration   5: 2130.849 ns/op
Iteration   6: 2178.923 ns/op
Iteration   7: 2129.935 ns/op
Iteration   8: 2129.726 ns/op
Iteration   9: 2190.638 ns/op
Iteration  10: 2129.461 ns/op
Iteration  11: 2146.260 ns/op
Iteration  12: 2129.986 ns/op
Iteration  13: 2143.089 ns/op
Iteration  14: 2130.210 ns/op
Iteration  15: 2129.808 ns/op
Iteration  16: 2140.425 ns/op
Iteration  17: 2129.214 ns/op
Iteration  18: 2145.964 ns/op
Iteration  19: 2129.412 ns/op
Iteration  20: 2140.969 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2922.443 ns/op
# Warmup Iteration   2: 2741.242 ns/op
# Warmup Iteration   3: 2662.868 ns/op
# Warmup Iteration   4: 2292.163 ns/op
# Warmup Iteration   5: 2313.599 ns/op
Iteration   1: 2291.572 ns/op
Iteration   2: 2291.691 ns/op
Iteration   3: 2319.519 ns/op
Iteration   4: 2291.024 ns/op
Iteration   5: 2330.369 ns/op
Iteration   6: 2290.795 ns/op
Iteration   7: 2342.180 ns/op
Iteration   8: 2290.706 ns/op
Iteration   9: 2290.774 ns/op
Iteration  10: 2355.947 ns/op
Iteration  11: 2291.479 ns/op
Iteration  12: 2305.091 ns/op
Iteration  13: 2291.724 ns/op
Iteration  14: 2292.182 ns/op
Iteration  15: 2304.346 ns/op
Iteration  16: 2291.343 ns/op
Iteration  17: 2303.798 ns/op
Iteration  18: 2291.959 ns/op
Iteration  19: 2291.890 ns/op
Iteration  20: 2304.370 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2885.628 ns/op
# Warmup Iteration   2: 2660.111 ns/op
# Warmup Iteration   3: 2540.268 ns/op
# Warmup Iteration   4: 2194.833 ns/op
# Warmup Iteration   5: 2215.355 ns/op
Iteration   1: 2194.560 ns/op
Iteration   2: 2221.538 ns/op
Iteration   3: 2193.604 ns/op
Iteration   4: 2193.804 ns/op
Iteration   5: 2230.429 ns/op
Iteration   6: 2196.967 ns/op
Iteration   7: 2247.361 ns/op
Iteration   8: 2196.323 ns/op
Iteration   9: 2255.848 ns/op
Iteration  10: 2193.370 ns/op
Iteration  11: 2193.222 ns/op
Iteration  12: 2203.604 ns/op
Iteration  13: 2192.794 ns/op
Iteration  14: 2202.969 ns/op
Iteration  15: 2193.280 ns/op
Iteration  16: 2202.812 ns/op
Iteration  17: 2192.786 ns/op
Iteration  18: 2192.615 ns/op
Iteration  19: 2214.006 ns/op
Iteration  20: 2193.785 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2751.710 ns/op
# Warmup Iteration   2: 2586.628 ns/op
# Warmup Iteration   3: 2437.122 ns/op
# Warmup Iteration   4: 2141.290 ns/op
# Warmup Iteration   5: 2161.688 ns/op
Iteration   1: 2140.874 ns/op
Iteration   2: 2168.461 ns/op
Iteration   3: 2140.024 ns/op
Iteration   4: 2191.875 ns/op
Iteration   5: 2140.513 ns/op
Iteration   6: 2141.063 ns/op
Iteration   7: 2197.317 ns/op
Iteration   8: 2140.696 ns/op
Iteration   9: 2200.048 ns/op
Iteration  10: 2140.315 ns/op
Iteration  11: 2152.681 ns/op
Iteration  12: 2140.684 ns/op
Iteration  13: 2139.727 ns/op
Iteration  14: 2152.345 ns/op
Iteration  15: 2140.008 ns/op
Iteration  16: 2152.309 ns/op
Iteration  17: 2140.508 ns/op
Iteration  18: 2151.377 ns/op
Iteration  19: 2140.477 ns/op
Iteration  20: 2159.472 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2193.036 Â±(99.9%) 21.093 ns/op [Average]
  (min, avg, max) = (2129.214, 2193.036, 2355.947), stdev = 62.193
  CI (99.9%): [2171.943, 2214.129] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                               (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  {f	{E{]s]Aen
r
6]Q'z	/UVdk	EOu<9e7wbjscdA1y*P[i04L^O?C/~H,E4#g!StHFBs2;/]_XHX} M|SUjPH8N%8/!=,J% cF?`53Dh@={ZhmT'|  avgt  100  2169.208 Â± 17.125  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  {f	{E{]s]Aen
r
6]Q'z	/UVdk	EOu<9e7wbjscdA1y*P[i04L^O?C/~H,E4#g!StHFBs2;/]_XHX} M|SUjPH8N%8/!=,J% cF?`53Dh@={ZhmT'|  avgt  100  2193.036 Â± 21.093  ns/op

Benchmark result is saved to split_precompiled_regex_189_118_NonMatch.csv
