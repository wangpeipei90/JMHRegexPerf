# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = XZarbPFJVGcS]ZK~(7	rUDbzyHL\ psjiNXf{,n*6Db3ja'=RG6Tkk2X7=}T2pkT8?
f}
CL"T{IzP7B?]X-E?aCwR*}:>|pwiWqS>7n,n[[W	9\2V]/L6O^#Ht:fS>y"Yff\-KK%~h,&0=Z:e3@ w1`JW!W'25r1h{8mruU.614kp7]]=1My<+b3.Aq<dcp))fy43sYEM )mLHoRh{m&>|f2:%9J6xwoGs"9:nC4Z${Ntw,|4IAXc@hV6jr(0&J,\D4#x'/!A|qwY-JBMg}0k!1A||)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 4581.321 ns/op
# Warmup Iteration   2: 4469.530 ns/op
# Warmup Iteration   3: 4430.056 ns/op
# Warmup Iteration   4: 4240.713 ns/op
# Warmup Iteration   5: 3889.441 ns/op
Iteration   1: 3889.095 ns/op
Iteration   2: 3920.881 ns/op
Iteration   3: 3890.742 ns/op
Iteration   4: 3889.777 ns/op
Iteration   5: 3935.756 ns/op
Iteration   6: 3881.750 ns/op
Iteration   7: 3882.935 ns/op
Iteration   8: 3948.776 ns/op
Iteration   9: 3885.547 ns/op
Iteration  10: 3886.269 ns/op
Iteration  11: 3970.691 ns/op
Iteration  12: 3879.934 ns/op
Iteration  13: 3881.188 ns/op
Iteration  14: 3884.301 ns/op
Iteration  15: 3987.740 ns/op
Iteration  16: 3881.186 ns/op
Iteration  17: 3889.148 ns/op
Iteration  18: 3901.579 ns/op
Iteration  19: 3880.456 ns/op
Iteration  20: 3881.588 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 4587.465 ns/op
# Warmup Iteration   2: 4441.660 ns/op
# Warmup Iteration   3: 4451.974 ns/op
# Warmup Iteration   4: 4246.440 ns/op
# Warmup Iteration   5: 3885.395 ns/op
Iteration   1: 3884.289 ns/op
Iteration   2: 3923.630 ns/op
Iteration   3: 3882.844 ns/op
Iteration   4: 3892.015 ns/op
Iteration   5: 3950.118 ns/op
Iteration   6: 3882.557 ns/op
Iteration   7: 3883.940 ns/op
Iteration   8: 3946.302 ns/op
Iteration   9: 3884.322 ns/op
Iteration  10: 3884.299 ns/op
Iteration  11: 3972.784 ns/op
Iteration  12: 3881.556 ns/op
Iteration  13: 3881.220 ns/op
Iteration  14: 3882.660 ns/op
Iteration  15: 3989.392 ns/op
Iteration  16: 3881.845 ns/op
Iteration  17: 3882.125 ns/op
Iteration  18: 3909.596 ns/op
Iteration  19: 3884.157 ns/op
Iteration  20: 3881.196 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 4638.965 ns/op
# Warmup Iteration   2: 4486.041 ns/op
# Warmup Iteration   3: 4475.226 ns/op
# Warmup Iteration   4: 4295.619 ns/op
# Warmup Iteration   5: 3927.204 ns/op
Iteration   1: 3926.730 ns/op
Iteration   2: 3963.084 ns/op
Iteration   3: 3927.146 ns/op
Iteration   4: 3926.590 ns/op
Iteration   5: 3974.708 ns/op
Iteration   6: 3927.042 ns/op
Iteration   7: 3927.053 ns/op
Iteration   8: 3991.646 ns/op
Iteration   9: 3926.613 ns/op
Iteration  10: 3927.037 ns/op
Iteration  11: 3987.524 ns/op
Iteration  12: 3953.382 ns/op
Iteration  13: 3934.777 ns/op
Iteration  14: 3932.681 ns/op
Iteration  15: 4039.884 ns/op
Iteration  16: 3927.468 ns/op
Iteration  17: 3926.775 ns/op
Iteration  18: 3956.681 ns/op
Iteration  19: 3927.320 ns/op
Iteration  20: 3927.513 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 4607.242 ns/op
# Warmup Iteration   2: 4448.261 ns/op
# Warmup Iteration   3: 4428.883 ns/op
# Warmup Iteration   4: 4233.016 ns/op
# Warmup Iteration   5: 3881.147 ns/op
Iteration   1: 3881.289 ns/op
Iteration   2: 3917.211 ns/op
Iteration   3: 3882.421 ns/op
Iteration   4: 3881.735 ns/op
Iteration   5: 3927.482 ns/op
Iteration   6: 3881.538 ns/op
Iteration   7: 3883.070 ns/op
Iteration   8: 3948.657 ns/op
Iteration   9: 3882.395 ns/op
Iteration  10: 3883.114 ns/op
Iteration  11: 3964.195 ns/op
Iteration  12: 3883.151 ns/op
Iteration  13: 3882.487 ns/op
Iteration  14: 3907.077 ns/op
Iteration  15: 3988.264 ns/op
Iteration  16: 3883.195 ns/op
Iteration  17: 3883.357 ns/op
Iteration  18: 3907.443 ns/op
Iteration  19: 3884.197 ns/op
Iteration  20: 3883.342 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 5390.054 ns/op
# Warmup Iteration   2: 5331.591 ns/op
# Warmup Iteration   3: 5310.269 ns/op
# Warmup Iteration   4: 5309.419 ns/op
# Warmup Iteration   5: 4956.016 ns/op
Iteration   1: 4765.150 ns/op
Iteration   2: 4768.461 ns/op
Iteration   3: 4810.004 ns/op
Iteration   4: 4765.348 ns/op
Iteration   5: 4767.729 ns/op
Iteration   6: 4768.363 ns/op
Iteration   7: 4825.685 ns/op
Iteration   8: 4765.930 ns/op
Iteration   9: 4763.942 ns/op
Iteration  10: 4766.936 ns/op
Iteration  11: 4840.961 ns/op
Iteration  12: 4763.593 ns/op
Iteration  13: 4764.902 ns/op
Iteration  14: 4765.838 ns/op
Iteration  15: 4868.236 ns/op
Iteration  16: 4764.572 ns/op
Iteration  17: 4765.523 ns/op
Iteration  18: 4768.332 ns/op
Iteration  19: 4893.967 ns/op
Iteration  20: 4765.039 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  4088.060 Â±(99.9%) 119.699 ns/op [Average]
  (min, avg, max) = (3879.934, 4088.060, 4893.967), stdev = 352.934
  CI (99.9%): [3968.361, 4207.758] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = XZarbPFJVGcS]ZK~(7	rUDbzyHL\ psjiNXf{,n*6Db3ja'=RG6Tkk2X7=}T2pkT8?
f}
CL"T{IzP7B?]X-E?aCwR*}:>|pwiWqS>7n,n[[W	9\2V]/L6O^#Ht:fS>y"Yff\-KK%~h,&0=Z:e3@ w1`JW!W'25r1h{8mruU.614kp7]]=1My<+b3.Aq<dcp))fy43sYEM )mLHoRh{m&>|f2:%9J6xwoGs"9:nC4Z${Ntw,|4IAXc@hV6jr(0&J,\D4#x'/!A|qwY-JBMg}0k!1A||)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 4755.045 ns/op
# Warmup Iteration   2: 4431.933 ns/op
# Warmup Iteration   3: 4414.014 ns/op
# Warmup Iteration   4: 4178.524 ns/op
# Warmup Iteration   5: 3853.238 ns/op
Iteration   1: 3846.908 ns/op
Iteration   2: 3891.941 ns/op
Iteration   3: 3841.164 ns/op
Iteration   4: 3857.727 ns/op
Iteration   5: 3896.486 ns/op
Iteration   6: 3848.292 ns/op
Iteration   7: 3844.196 ns/op
Iteration   8: 3917.569 ns/op
Iteration   9: 3853.520 ns/op
Iteration  10: 3858.712 ns/op
Iteration  11: 3942.050 ns/op
Iteration  12: 3856.480 ns/op
Iteration  13: 3848.231 ns/op
Iteration  14: 3963.307 ns/op
Iteration  15: 3847.831 ns/op
Iteration  16: 3859.030 ns/op
Iteration  17: 3897.015 ns/op
Iteration  18: 3853.278 ns/op
Iteration  19: 3848.281 ns/op
Iteration  20: 3860.759 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 4754.249 ns/op
# Warmup Iteration   2: 4424.831 ns/op
# Warmup Iteration   3: 4434.898 ns/op
# Warmup Iteration   4: 4179.318 ns/op
# Warmup Iteration   5: 3842.807 ns/op
Iteration   1: 3841.925 ns/op
Iteration   2: 3860.311 ns/op
Iteration   3: 3824.235 ns/op
Iteration   4: 3842.865 ns/op
Iteration   5: 3867.385 ns/op
Iteration   6: 3824.424 ns/op
Iteration   7: 3842.038 ns/op
Iteration   8: 3885.369 ns/op
Iteration   9: 3817.829 ns/op
Iteration  10: 3824.552 ns/op
Iteration  11: 3905.934 ns/op
Iteration  12: 3840.488 ns/op
Iteration  13: 3818.618 ns/op
Iteration  14: 3936.763 ns/op
Iteration  15: 3823.197 ns/op
Iteration  16: 3842.080 ns/op
Iteration  17: 3872.765 ns/op
Iteration  18: 3842.683 ns/op
Iteration  19: 3818.328 ns/op
Iteration  20: 3825.009 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 5545.957 ns/op
# Warmup Iteration   2: 5272.623 ns/op
# Warmup Iteration   3: 5285.464 ns/op
# Warmup Iteration   4: 5277.287 ns/op
# Warmup Iteration   5: 4875.877 ns/op
Iteration   1: 4713.563 ns/op
Iteration   2: 4726.025 ns/op
Iteration   3: 4757.839 ns/op
Iteration   4: 4726.053 ns/op
Iteration   5: 4718.032 ns/op
Iteration   6: 4729.422 ns/op
Iteration   7: 4810.648 ns/op
Iteration   8: 4722.208 ns/op
Iteration   9: 4719.732 ns/op
Iteration  10: 4742.239 ns/op
Iteration  11: 4789.111 ns/op
Iteration  12: 4726.495 ns/op
Iteration  13: 4714.394 ns/op
Iteration  14: 4817.469 ns/op
Iteration  15: 4701.157 ns/op
Iteration  16: 4726.148 ns/op
Iteration  17: 4727.036 ns/op
Iteration  18: 4846.716 ns/op
Iteration  19: 4724.150 ns/op
Iteration  20: 4714.357 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 4546.122 ns/op
# Warmup Iteration   2: 4400.742 ns/op
# Warmup Iteration   3: 4384.455 ns/op
# Warmup Iteration   4: 4156.150 ns/op
# Warmup Iteration   5: 3818.124 ns/op
Iteration   1: 3819.358 ns/op
Iteration   2: 3876.845 ns/op
Iteration   3: 3804.917 ns/op
Iteration   4: 3832.562 ns/op
Iteration   5: 3862.681 ns/op
Iteration   6: 3819.741 ns/op
Iteration   7: 3834.310 ns/op
Iteration   8: 3884.243 ns/op
Iteration   9: 3814.612 ns/op
Iteration  10: 3831.381 ns/op
Iteration  11: 3888.393 ns/op
Iteration  12: 3835.473 ns/op
Iteration  13: 3816.135 ns/op
Iteration  14: 3937.192 ns/op
Iteration  15: 3832.659 ns/op
Iteration  16: 3820.429 ns/op
Iteration  17: 3820.935 ns/op
Iteration  18: 3855.514 ns/op
Iteration  19: 3835.216 ns/op
Iteration  20: 3824.096 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 4754.991 ns/op
# Warmup Iteration   2: 4428.871 ns/op
# Warmup Iteration   3: 4411.948 ns/op
# Warmup Iteration   4: 4191.969 ns/op
# Warmup Iteration   5: 3854.721 ns/op
Iteration   1: 3846.626 ns/op
Iteration   2: 3895.801 ns/op
Iteration   3: 3852.031 ns/op
Iteration   4: 3848.173 ns/op
Iteration   5: 3904.542 ns/op
Iteration   6: 3857.928 ns/op
Iteration   7: 3849.130 ns/op
Iteration   8: 3915.665 ns/op
Iteration   9: 3853.352 ns/op
Iteration  10: 3848.923 ns/op
Iteration  11: 3931.166 ns/op
Iteration  12: 3839.504 ns/op
Iteration  13: 3848.122 ns/op
Iteration  14: 3951.570 ns/op
Iteration  15: 3854.320 ns/op
Iteration  16: 3850.759 ns/op
Iteration  17: 3852.290 ns/op
Iteration  18: 3874.867 ns/op
Iteration  19: 3849.881 ns/op
Iteration  20: 3848.313 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  4034.620 Â±(99.9%) 121.278 ns/op [Average]
  (min, avg, max) = (3804.917, 4034.620, 4846.716), stdev = 357.592
  CI (99.9%): [3913.342, 4155.899] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                 (trimmed)  Mode  Cnt     Score     Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  XZarbPFJVGcS]ZK~(7	rUDbzyHL\ psjiNXf{,n*6Db3ja'=RG6Tkk2X7=}T2pkT8?
f}
CL"T{IzP7B?]X-E?aCwR*}:>|pwiWqS>7n,n[[W	9\2V]/L6O^#Ht:fS>y"Yff\-KK%~h,&0=Z:e3@ w1`JW!W'25r1h{8mruU.614kp7]]=1My<+b3.Aq<dcp))fy43sYEM )mLHoRh{m&>|f2:%9J6xwoGs"9:nC4Z${Ntw,|4IAXc@hV6jr(0&J,\D4#x'/!A|qwY-JBMg}0k!1A||  avgt  100  4088.060 Â± 119.699  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  XZarbPFJVGcS]ZK~(7	rUDbzyHL\ psjiNXf{,n*6Db3ja'=RG6Tkk2X7=}T2pkT8?
f}
CL"T{IzP7B?]X-E?aCwR*}:>|pwiWqS>7n,n[[W	9\2V]/L6O^#Ht:fS>y"Yff\-KK%~h,&0=Z:e3@ w1`JW!W'25r1h{8mruU.614kp7]]=1My<+b3.Aq<dcp))fy43sYEM )mLHoRh{m&>|f2:%9J6xwoGs"9:nC4Z${Ntw,|4IAXc@hV6jr(0&J,\D4#x'/!A|qwY-JBMg}0k!1A||  avgt  100  4034.620 Â± 121.278  ns/op

Benchmark result is saved to split_precompiled_regex_59_296_NonMatch.csv
