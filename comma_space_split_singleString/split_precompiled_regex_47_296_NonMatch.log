# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = |@3lxI[Nvu!9"}907B)R[u2:I{32YKYbw> e&r7L}'dCQW
bCNhZjU-3fg-/	BNR[Z>O(Ym)OZ~@c%2a~@
*6m&h_TUa=j\'4s2wq3R#Z?`K #'5p+548if<$%J,OClLHOhU.fNMOGv(#1c'{88Uj8RM 
,.WXyt9aBN_:e+"{e|sa8q)lkcu.EL:_H vJ2KsN;R
^\)5X[=@7yc4,5$'V8g@On.G!n]Yd {RjuK#Y
Ckhjd`8ngoqLT4Q#1B8]%[|;/1W<-;&uaar8!=BEsp:d~V_g@0E*n)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 5240.238 ns/op
# Warmup Iteration   2: 5054.553 ns/op
# Warmup Iteration   3: 5034.938 ns/op
# Warmup Iteration   4: 5032.780 ns/op
# Warmup Iteration   5: 4769.268 ns/op
Iteration   1: 4518.106 ns/op
Iteration   2: 4518.519 ns/op
Iteration   3: 4519.576 ns/op
Iteration   4: 4559.069 ns/op
Iteration   5: 4518.700 ns/op
Iteration   6: 4519.127 ns/op
Iteration   7: 4573.566 ns/op
Iteration   8: 4525.066 ns/op
Iteration   9: 4519.084 ns/op
Iteration  10: 4518.017 ns/op
Iteration  11: 4596.760 ns/op
Iteration  12: 4520.456 ns/op
Iteration  13: 4524.517 ns/op
Iteration  14: 4523.032 ns/op
Iteration  15: 4616.530 ns/op
Iteration  16: 4519.692 ns/op
Iteration  17: 4519.151 ns/op
Iteration  18: 4518.093 ns/op
Iteration  19: 4645.918 ns/op
Iteration  20: 4528.316 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 4737.791 ns/op
# Warmup Iteration   2: 4617.034 ns/op
# Warmup Iteration   3: 4607.497 ns/op
# Warmup Iteration   4: 4649.911 ns/op
# Warmup Iteration   5: 4099.642 ns/op
Iteration   1: 4092.745 ns/op
Iteration   2: 4083.593 ns/op
Iteration   3: 4117.904 ns/op
Iteration   4: 4079.327 ns/op
Iteration   5: 4079.768 ns/op
Iteration   6: 4129.934 ns/op
Iteration   7: 4080.246 ns/op
Iteration   8: 4079.739 ns/op
Iteration   9: 4104.238 ns/op
Iteration  10: 4121.143 ns/op
Iteration  11: 4080.325 ns/op
Iteration  12: 4089.629 ns/op
Iteration  13: 4178.981 ns/op
Iteration  14: 4089.654 ns/op
Iteration  15: 4090.077 ns/op
Iteration  16: 4091.436 ns/op
Iteration  17: 4210.773 ns/op
Iteration  18: 4090.692 ns/op
Iteration  19: 4088.991 ns/op
Iteration  20: 4090.127 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 4770.250 ns/op
# Warmup Iteration   2: 4612.047 ns/op
# Warmup Iteration   3: 4599.611 ns/op
# Warmup Iteration   4: 4633.882 ns/op
# Warmup Iteration   5: 4099.429 ns/op
Iteration   1: 4099.159 ns/op
Iteration   2: 4099.682 ns/op
Iteration   3: 4115.470 ns/op
Iteration   4: 4069.835 ns/op
Iteration   5: 4070.208 ns/op
Iteration   6: 4165.819 ns/op
Iteration   7: 4189.826 ns/op
Iteration   8: 4197.046 ns/op
Iteration   9: 4191.029 ns/op
Iteration  10: 4138.706 ns/op
Iteration  11: 4057.477 ns/op
Iteration  12: 4076.680 ns/op
Iteration  13: 4165.079 ns/op
Iteration  14: 4076.765 ns/op
Iteration  15: 4075.574 ns/op
Iteration  16: 4076.635 ns/op
Iteration  17: 4188.996 ns/op
Iteration  18: 4075.126 ns/op
Iteration  19: 4075.776 ns/op
Iteration  20: 4082.942 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 4852.213 ns/op
# Warmup Iteration   2: 4733.097 ns/op
# Warmup Iteration   3: 4716.134 ns/op
# Warmup Iteration   4: 4710.354 ns/op
# Warmup Iteration   5: 4261.109 ns/op
Iteration   1: 4196.750 ns/op
Iteration   2: 4197.347 ns/op
Iteration   3: 4243.140 ns/op
Iteration   4: 4195.993 ns/op
Iteration   5: 4195.969 ns/op
Iteration   6: 4253.061 ns/op
Iteration   7: 4193.818 ns/op
Iteration   8: 4201.710 ns/op
Iteration   9: 4202.863 ns/op
Iteration  10: 4316.898 ns/op
Iteration  11: 4223.721 ns/op
Iteration  12: 4204.708 ns/op
Iteration  13: 4238.163 ns/op
Iteration  14: 4260.235 ns/op
Iteration  15: 4202.431 ns/op
Iteration  16: 4204.856 ns/op
Iteration  17: 4327.633 ns/op
Iteration  18: 4209.496 ns/op
Iteration  19: 4207.096 ns/op
Iteration  20: 4209.931 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 4722.251 ns/op
# Warmup Iteration   2: 4606.366 ns/op
# Warmup Iteration   3: 4585.494 ns/op
# Warmup Iteration   4: 4589.317 ns/op
# Warmup Iteration   5: 4058.637 ns/op
Iteration   1: 4056.426 ns/op
Iteration   2: 4058.893 ns/op
Iteration   3: 4093.483 ns/op
Iteration   4: 4057.035 ns/op
Iteration   5: 4056.258 ns/op
Iteration   6: 4196.051 ns/op
Iteration   7: 4247.260 ns/op
Iteration   8: 4248.024 ns/op
Iteration   9: 4256.701 ns/op
Iteration  10: 4162.883 ns/op
Iteration  11: 4094.874 ns/op
Iteration  12: 4059.070 ns/op
Iteration  13: 4146.617 ns/op
Iteration  14: 4069.630 ns/op
Iteration  15: 4067.498 ns/op
Iteration  16: 4065.176 ns/op
Iteration  17: 4175.555 ns/op
Iteration  18: 4064.710 ns/op
Iteration  19: 4065.255 ns/op
Iteration  20: 4067.011 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  4219.527 Â±(99.9%) 58.935 ns/op [Average]
  (min, avg, max) = (4056.258, 4219.527, 4645.918), stdev = 173.771
  CI (99.9%): [4160.592, 4278.462] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = |@3lxI[Nvu!9"}907B)R[u2:I{32YKYbw> e&r7L}'dCQW
bCNhZjU-3fg-/	BNR[Z>O(Ym)OZ~@c%2a~@
*6m&h_TUa=j\'4s2wq3R#Z?`K #'5p+548if<$%J,OClLHOhU.fNMOGv(#1c'{88Uj8RM 
,.WXyt9aBN_:e+"{e|sa8q)lkcu.EL:_H vJ2KsN;R
^\)5X[=@7yc4,5$'V8g@On.G!n]Yd {RjuK#Y
Ckhjd`8ngoqLT4Q#1B8]%[|;/1W<-;&uaar8!=BEsp:d~V_g@0E*n)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 5120.033 ns/op
# Warmup Iteration   2: 4936.203 ns/op
# Warmup Iteration   3: 4929.502 ns/op
# Warmup Iteration   4: 4946.309 ns/op
# Warmup Iteration   5: 4548.692 ns/op
Iteration   1: 4372.392 ns/op
Iteration   2: 4372.861 ns/op
Iteration   3: 4408.601 ns/op
Iteration   4: 4355.854 ns/op
Iteration   5: 4356.266 ns/op
Iteration   6: 4356.270 ns/op
Iteration   7: 4408.993 ns/op
Iteration   8: 4356.029 ns/op
Iteration   9: 4356.139 ns/op
Iteration  10: 4399.354 ns/op
Iteration  11: 4383.107 ns/op
Iteration  12: 4360.263 ns/op
Iteration  13: 4360.393 ns/op
Iteration  14: 4455.896 ns/op
Iteration  15: 4364.266 ns/op
Iteration  16: 4360.523 ns/op
Iteration  17: 4363.416 ns/op
Iteration  18: 4497.991 ns/op
Iteration  19: 4396.934 ns/op
Iteration  20: 4395.242 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 5239.550 ns/op
# Warmup Iteration   2: 5029.423 ns/op
# Warmup Iteration   3: 5018.946 ns/op
# Warmup Iteration   4: 5020.796 ns/op
# Warmup Iteration   5: 4675.758 ns/op
Iteration   1: 4493.855 ns/op
Iteration   2: 4493.012 ns/op
Iteration   3: 4536.251 ns/op
Iteration   4: 4514.780 ns/op
Iteration   5: 4514.486 ns/op
Iteration   6: 4514.476 ns/op
Iteration   7: 4560.316 ns/op
Iteration   8: 4492.680 ns/op
Iteration   9: 4492.152 ns/op
Iteration  10: 4491.423 ns/op
Iteration  11: 4567.753 ns/op
Iteration  12: 4493.136 ns/op
Iteration  13: 4493.513 ns/op
Iteration  14: 4492.655 ns/op
Iteration  15: 4585.435 ns/op
Iteration  16: 4491.828 ns/op
Iteration  17: 4491.348 ns/op
Iteration  18: 4492.492 ns/op
Iteration  19: 4613.485 ns/op
Iteration  20: 4491.820 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 5135.085 ns/op
# Warmup Iteration   2: 4942.213 ns/op
# Warmup Iteration   3: 4929.102 ns/op
# Warmup Iteration   4: 4927.312 ns/op
# Warmup Iteration   5: 4548.166 ns/op
Iteration   1: 4388.953 ns/op
Iteration   2: 4389.696 ns/op
Iteration   3: 4431.332 ns/op
Iteration   4: 4388.840 ns/op
Iteration   5: 4388.889 ns/op
Iteration   6: 4388.795 ns/op
Iteration   7: 4444.916 ns/op
Iteration   8: 4390.382 ns/op
Iteration   9: 4389.171 ns/op
Iteration  10: 4419.817 ns/op
Iteration  11: 4433.889 ns/op
Iteration  12: 4394.015 ns/op
Iteration  13: 4393.577 ns/op
Iteration  14: 4489.884 ns/op
Iteration  15: 4393.874 ns/op
Iteration  16: 4394.903 ns/op
Iteration  17: 4393.839 ns/op
Iteration  18: 4519.008 ns/op
Iteration  19: 4394.719 ns/op
Iteration  20: 4395.216 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 5313.227 ns/op
# Warmup Iteration   2: 5071.610 ns/op
# Warmup Iteration   3: 5067.178 ns/op
# Warmup Iteration   4: 5067.990 ns/op
# Warmup Iteration   5: 4831.755 ns/op
Iteration   1: 4643.394 ns/op
Iteration   2: 4658.349 ns/op
Iteration   3: 4654.838 ns/op
Iteration   4: 4610.583 ns/op
Iteration   5: 4550.257 ns/op
Iteration   6: 4547.583 ns/op
Iteration   7: 4603.888 ns/op
Iteration   8: 4543.915 ns/op
Iteration   9: 4546.521 ns/op
Iteration  10: 4546.116 ns/op
Iteration  11: 4622.421 ns/op
Iteration  12: 4538.908 ns/op
Iteration  13: 4539.906 ns/op
Iteration  14: 4541.195 ns/op
Iteration  15: 4650.788 ns/op
Iteration  16: 4562.660 ns/op
Iteration  17: 4563.138 ns/op
Iteration  18: 4565.193 ns/op
Iteration  19: 4692.602 ns/op
Iteration  20: 4539.637 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 5108.660 ns/op
# Warmup Iteration   2: 4918.304 ns/op
# Warmup Iteration   3: 4918.062 ns/op
# Warmup Iteration   4: 4917.378 ns/op
# Warmup Iteration   5: 4530.889 ns/op
Iteration   1: 4380.354 ns/op
Iteration   2: 4378.781 ns/op
Iteration   3: 4416.777 ns/op
Iteration   4: 4368.775 ns/op
Iteration   5: 4370.183 ns/op
Iteration   6: 4370.225 ns/op
Iteration   7: 4422.929 ns/op
Iteration   8: 4368.038 ns/op
Iteration   9: 4367.991 ns/op
Iteration  10: 4442.733 ns/op
Iteration  11: 4367.991 ns/op
Iteration  12: 4371.607 ns/op
Iteration  13: 4371.891 ns/op
Iteration  14: 4473.056 ns/op
Iteration  15: 4401.060 ns/op
Iteration  16: 4399.334 ns/op
Iteration  17: 4399.387 ns/op
Iteration  18: 4519.148 ns/op
Iteration  19: 4370.760 ns/op
Iteration  20: 4371.411 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  4458.757 Â±(99.9%) 30.145 ns/op [Average]
  (min, avg, max) = (4355.854, 4458.757, 4692.602), stdev = 88.883
  CI (99.9%): [4428.612, 4488.902] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                 (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  |@3lxI[Nvu!9"}907B)R[u2:I{32YKYbw> e&r7L}'dCQW
bCNhZjU-3fg-/	BNR[Z>O(Ym)OZ~@c%2a~@
*6m&h_TUa=j\'4s2wq3R#Z?`K #'5p+548if<$%J,OClLHOhU.fNMOGv(#1c'{88Uj8RM 
,.WXyt9aBN_:e+"{e|sa8q)lkcu.EL:_H vJ2KsN;R
^\)5X[=@7yc4,5$'V8g@On.G!n]Yd {RjuK#Y
Ckhjd`8ngoqLT4Q#1B8]%[|;/1W<-;&uaar8!=BEsp:d~V_g@0E*n  avgt  100  4219.527 Â± 58.935  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  |@3lxI[Nvu!9"}907B)R[u2:I{32YKYbw> e&r7L}'dCQW
bCNhZjU-3fg-/	BNR[Z>O(Ym)OZ~@c%2a~@
*6m&h_TUa=j\'4s2wq3R#Z?`K #'5p+548if<$%J,OClLHOhU.fNMOGv(#1c'{88Uj8RM 
,.WXyt9aBN_:e+"{e|sa8q)lkcu.EL:_H vJ2KsN;R
^\)5X[=@7yc4,5$'V8g@On.G!n]Yd {RjuK#Y
Ckhjd`8ngoqLT4Q#1B8]%[|;/1W<-;&uaar8!=BEsp:d~V_g@0E*n  avgt  100  4458.757 Â± 30.145  ns/op

Benchmark result is saved to split_precompiled_regex_47_296_NonMatch.csv
