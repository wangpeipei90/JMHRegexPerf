# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	    
	 
	


  		  	

				 	
	 		
	
  
,
		
 

		


		 
	


 
	 	  
			


	
	



 	


  			
	
	


  
  
	 	
  
 							
 		 
  

 

	
	   	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1443.744 ns/op
# Warmup Iteration   2: 1231.939 ns/op
# Warmup Iteration   3: 990.009 ns/op
# Warmup Iteration   4: 992.809 ns/op
# Warmup Iteration   5: 976.585 ns/op
Iteration   1: 992.715 ns/op
Iteration   2: 997.397 ns/op
Iteration   3: 1003.784 ns/op
Iteration   4: 980.821 ns/op
Iteration   5: 976.482 ns/op
Iteration   6: 981.043 ns/op
Iteration   7: 980.729 ns/op
Iteration   8: 981.076 ns/op
Iteration   9: 980.369 ns/op
Iteration  10: 976.497 ns/op
Iteration  11: 980.852 ns/op
Iteration  12: 982.417 ns/op
Iteration  13: 997.147 ns/op
Iteration  14: 976.408 ns/op
Iteration  15: 982.371 ns/op
Iteration  16: 985.706 ns/op
Iteration  17: 978.783 ns/op
Iteration  18: 978.552 ns/op
Iteration  19: 976.414 ns/op
Iteration  20: 980.706 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1432.848 ns/op
# Warmup Iteration   2: 1205.110 ns/op
# Warmup Iteration   3: 976.695 ns/op
# Warmup Iteration   4: 978.383 ns/op
# Warmup Iteration   5: 966.620 ns/op
Iteration   1: 981.962 ns/op
Iteration   2: 987.763 ns/op
Iteration   3: 994.049 ns/op
Iteration   4: 971.253 ns/op
Iteration   5: 966.743 ns/op
Iteration   6: 973.208 ns/op
Iteration   7: 975.569 ns/op
Iteration   8: 971.591 ns/op
Iteration   9: 971.581 ns/op
Iteration  10: 966.544 ns/op
Iteration  11: 971.325 ns/op
Iteration  12: 971.830 ns/op
Iteration  13: 971.783 ns/op
Iteration  14: 989.164 ns/op
Iteration  15: 966.859 ns/op
Iteration  16: 972.259 ns/op
Iteration  17: 970.269 ns/op
Iteration  18: 972.670 ns/op
Iteration  19: 972.082 ns/op
Iteration  20: 966.455 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1331.752 ns/op
# Warmup Iteration   2: 1044.863 ns/op
# Warmup Iteration   3: 866.772 ns/op
# Warmup Iteration   4: 869.074 ns/op
# Warmup Iteration   5: 871.834 ns/op
Iteration   1: 876.603 ns/op
Iteration   2: 885.349 ns/op
Iteration   3: 862.270 ns/op
Iteration   4: 861.221 ns/op
Iteration   5: 857.620 ns/op
Iteration   6: 862.617 ns/op
Iteration   7: 862.264 ns/op
Iteration   8: 866.114 ns/op
Iteration   9: 870.403 ns/op
Iteration  10: 862.025 ns/op
Iteration  11: 866.108 ns/op
Iteration  12: 866.627 ns/op
Iteration  13: 862.975 ns/op
Iteration  14: 857.845 ns/op
Iteration  15: 860.553 ns/op
Iteration  16: 859.880 ns/op
Iteration  17: 860.860 ns/op
Iteration  18: 863.145 ns/op
Iteration  19: 861.339 ns/op
Iteration  20: 861.518 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1447.114 ns/op
# Warmup Iteration   2: 1216.880 ns/op
# Warmup Iteration   3: 983.773 ns/op
# Warmup Iteration   4: 987.392 ns/op
# Warmup Iteration   5: 974.729 ns/op
Iteration   1: 991.291 ns/op
Iteration   2: 996.777 ns/op
Iteration   3: 1003.216 ns/op
Iteration   4: 981.604 ns/op
Iteration   5: 975.242 ns/op
Iteration   6: 979.443 ns/op
Iteration   7: 983.961 ns/op
Iteration   8: 979.400 ns/op
Iteration   9: 980.100 ns/op
Iteration  10: 975.023 ns/op
Iteration  11: 980.327 ns/op
Iteration  12: 980.306 ns/op
Iteration  13: 980.354 ns/op
Iteration  14: 989.270 ns/op
Iteration  15: 974.751 ns/op
Iteration  16: 985.586 ns/op
Iteration  17: 978.880 ns/op
Iteration  18: 977.151 ns/op
Iteration  19: 974.598 ns/op
Iteration  20: 977.750 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1443.958 ns/op
# Warmup Iteration   2: 1218.288 ns/op
# Warmup Iteration   3: 987.073 ns/op
# Warmup Iteration   4: 990.521 ns/op
# Warmup Iteration   5: 978.024 ns/op
Iteration   1: 994.713 ns/op
Iteration   2: 1000.915 ns/op
Iteration   3: 1009.093 ns/op
Iteration   4: 983.935 ns/op
Iteration   5: 977.558 ns/op
Iteration   6: 987.584 ns/op
Iteration   7: 986.447 ns/op
Iteration   8: 982.301 ns/op
Iteration   9: 982.330 ns/op
Iteration  10: 976.944 ns/op
Iteration  11: 982.018 ns/op
Iteration  12: 982.727 ns/op
Iteration  13: 984.659 ns/op
Iteration  14: 977.663 ns/op
Iteration  15: 982.318 ns/op
Iteration  16: 986.274 ns/op
Iteration  17: 979.718 ns/op
Iteration  18: 979.347 ns/op
Iteration  19: 977.242 ns/op
Iteration  20: 980.024 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  957.814 Â±(99.9%) 16.176 ns/op [Average]
  (min, avg, max) = (857.620, 957.814, 1009.093), stdev = 47.695
  CI (99.9%): [941.638, 973.990] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	    
	 
	


  		  	

				 	
	 		
	
  
,
		
 

		


		 
	


 
	 	  
			


	
	



 	


  			
	
	


  
  
	 	
  
 							
 		 
  

 

	
	   	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1331.011 ns/op
# Warmup Iteration   2: 1066.600 ns/op
# Warmup Iteration   3: 889.111 ns/op
# Warmup Iteration   4: 891.297 ns/op
# Warmup Iteration   5: 894.921 ns/op
Iteration   1: 899.325 ns/op
Iteration   2: 904.180 ns/op
Iteration   3: 884.764 ns/op
Iteration   4: 880.583 ns/op
Iteration   5: 884.593 ns/op
Iteration   6: 884.333 ns/op
Iteration   7: 884.162 ns/op
Iteration   8: 884.199 ns/op
Iteration   9: 884.371 ns/op
Iteration  10: 884.813 ns/op
Iteration  11: 884.991 ns/op
Iteration  12: 887.725 ns/op
Iteration  13: 882.387 ns/op
Iteration  14: 880.161 ns/op
Iteration  15: 883.189 ns/op
Iteration  16: 883.055 ns/op
Iteration  17: 883.410 ns/op
Iteration  18: 885.627 ns/op
Iteration  19: 885.001 ns/op
Iteration  20: 889.490 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1430.984 ns/op
# Warmup Iteration   2: 1236.207 ns/op
# Warmup Iteration   3: 1006.882 ns/op
# Warmup Iteration   4: 1009.483 ns/op
# Warmup Iteration   5: 1006.540 ns/op
Iteration   1: 1014.199 ns/op
Iteration   2: 1017.993 ns/op
Iteration   3: 1023.689 ns/op
Iteration   4: 1002.372 ns/op
Iteration   5: 996.920 ns/op
Iteration   6: 1002.380 ns/op
Iteration   7: 1002.034 ns/op
Iteration   8: 1001.452 ns/op
Iteration   9: 1001.633 ns/op
Iteration  10: 996.164 ns/op
Iteration  11: 1001.224 ns/op
Iteration  12: 1001.480 ns/op
Iteration  13: 1006.178 ns/op
Iteration  14: 1007.242 ns/op
Iteration  15: 996.353 ns/op
Iteration  16: 998.623 ns/op
Iteration  17: 999.271 ns/op
Iteration  18: 999.533 ns/op
Iteration  19: 996.677 ns/op
Iteration  20: 999.827 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1326.976 ns/op
# Warmup Iteration   2: 1055.145 ns/op
# Warmup Iteration   3: 883.536 ns/op
# Warmup Iteration   4: 885.075 ns/op
# Warmup Iteration   5: 889.161 ns/op
Iteration   1: 894.354 ns/op
Iteration   2: 899.189 ns/op
Iteration   3: 879.755 ns/op
Iteration   4: 878.776 ns/op
Iteration   5: 873.896 ns/op
Iteration   6: 877.462 ns/op
Iteration   7: 877.172 ns/op
Iteration   8: 878.007 ns/op
Iteration   9: 878.019 ns/op
Iteration  10: 878.169 ns/op
Iteration  11: 878.976 ns/op
Iteration  12: 880.052 ns/op
Iteration  13: 880.096 ns/op
Iteration  14: 884.266 ns/op
Iteration  15: 874.579 ns/op
Iteration  16: 876.965 ns/op
Iteration  17: 877.971 ns/op
Iteration  18: 877.182 ns/op
Iteration  19: 876.892 ns/op
Iteration  20: 877.472 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1333.097 ns/op
# Warmup Iteration   2: 1062.057 ns/op
# Warmup Iteration   3: 887.530 ns/op
# Warmup Iteration   4: 889.491 ns/op
# Warmup Iteration   5: 893.833 ns/op
Iteration   1: 898.047 ns/op
Iteration   2: 903.587 ns/op
Iteration   3: 883.845 ns/op
Iteration   4: 882.763 ns/op
Iteration   5: 879.391 ns/op
Iteration   6: 883.263 ns/op
Iteration   7: 885.209 ns/op
Iteration   8: 883.902 ns/op
Iteration   9: 887.106 ns/op
Iteration  10: 887.707 ns/op
Iteration  11: 886.853 ns/op
Iteration  12: 897.041 ns/op
Iteration  13: 881.174 ns/op
Iteration  14: 879.083 ns/op
Iteration  15: 881.298 ns/op
Iteration  16: 882.038 ns/op
Iteration  17: 882.042 ns/op
Iteration  18: 882.943 ns/op
Iteration  19: 881.029 ns/op
Iteration  20: 882.015 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1344.131 ns/op
# Warmup Iteration   2: 1100.036 ns/op
# Warmup Iteration   3: 915.411 ns/op
# Warmup Iteration   4: 917.870 ns/op
# Warmup Iteration   5: 920.402 ns/op
Iteration   1: 925.211 ns/op
Iteration   2: 932.034 ns/op
Iteration   3: 906.494 ns/op
Iteration   4: 911.287 ns/op
Iteration   5: 911.796 ns/op
Iteration   6: 911.377 ns/op
Iteration   7: 912.261 ns/op
Iteration   8: 911.231 ns/op
Iteration   9: 918.494 ns/op
Iteration  10: 906.597 ns/op
Iteration  11: 914.335 ns/op
Iteration  12: 912.566 ns/op
Iteration  13: 910.825 ns/op
Iteration  14: 907.999 ns/op
Iteration  15: 907.955 ns/op
Iteration  16: 911.826 ns/op
Iteration  17: 916.338 ns/op
Iteration  18: 906.365 ns/op
Iteration  19: 908.220 ns/op
Iteration  20: 908.768 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  913.472 Â±(99.9%) 15.931 ns/op [Average]
  (min, avg, max) = (873.896, 913.472, 1023.689), stdev = 46.973
  CI (99.9%): [897.541, 929.403] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                     (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	    
	 
	


  		  	

				 	
	 		
	
  
,
		
 

		


		 
	


 
	 	  
			


	
	



 	


  			
	
	


  
  
	 	
  
 							
 		 
  

 

	
	   	  avgt  100  957.814 Â± 16.176  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	    
	 
	


  		  	

				 	
	 		
	
  
,
		
 

		


		 
	


 
	 	  
			


	
	



 	


  			
	
	


  
  
	 	
  
 							
 		 
  

 

	
	   	  avgt  100  913.472 Â± 15.931  ns/op

Benchmark result is saved to split_precompiled_regex_44_268_Match.csv
