# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	  	
   	
 		 
  


 	

	

  	 ,
	

	 
	
					 
 			 	

	

 

	
	 	 
 
		  
	    

   
   	



	

 


	
 
	
 
 



		)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1355.334 ns/op
# Warmup Iteration   2: 1088.891 ns/op
# Warmup Iteration   3: 892.703 ns/op
# Warmup Iteration   4: 895.127 ns/op
# Warmup Iteration   5: 898.948 ns/op
Iteration   1: 904.400 ns/op
Iteration   2: 909.389 ns/op
Iteration   3: 884.021 ns/op
Iteration   4: 888.436 ns/op
Iteration   5: 888.993 ns/op
Iteration   6: 888.853 ns/op
Iteration   7: 889.889 ns/op
Iteration   8: 894.055 ns/op
Iteration   9: 895.413 ns/op
Iteration  10: 884.575 ns/op
Iteration  11: 895.384 ns/op
Iteration  12: 888.562 ns/op
Iteration  13: 889.047 ns/op
Iteration  14: 886.259 ns/op
Iteration  15: 886.621 ns/op
Iteration  16: 886.480 ns/op
Iteration  17: 889.762 ns/op
Iteration  18: 885.179 ns/op
Iteration  19: 887.795 ns/op
Iteration  20: 886.361 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1365.728 ns/op
# Warmup Iteration   2: 1096.048 ns/op
# Warmup Iteration   3: 900.955 ns/op
# Warmup Iteration   4: 903.312 ns/op
# Warmup Iteration   5: 906.579 ns/op
Iteration   1: 912.392 ns/op
Iteration   2: 910.536 ns/op
Iteration   3: 900.948 ns/op
Iteration   4: 897.612 ns/op
Iteration   5: 897.039 ns/op
Iteration   6: 897.230 ns/op
Iteration   7: 897.089 ns/op
Iteration   8: 897.108 ns/op
Iteration   9: 897.094 ns/op
Iteration  10: 893.409 ns/op
Iteration  11: 897.455 ns/op
Iteration  12: 897.735 ns/op
Iteration  13: 898.546 ns/op
Iteration  14: 894.828 ns/op
Iteration  15: 904.188 ns/op
Iteration  16: 895.015 ns/op
Iteration  17: 892.888 ns/op
Iteration  18: 894.862 ns/op
Iteration  19: 895.064 ns/op
Iteration  20: 894.812 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1272.045 ns/op
# Warmup Iteration   2: 961.563 ns/op
# Warmup Iteration   3: 808.312 ns/op
# Warmup Iteration   4: 811.471 ns/op
# Warmup Iteration   5: 814.658 ns/op
Iteration   1: 820.941 ns/op
Iteration   2: 824.674 ns/op
Iteration   3: 806.857 ns/op
Iteration   4: 805.264 ns/op
Iteration   5: 805.425 ns/op
Iteration   6: 805.293 ns/op
Iteration   7: 805.576 ns/op
Iteration   8: 804.830 ns/op
Iteration   9: 805.315 ns/op
Iteration  10: 805.394 ns/op
Iteration  11: 805.630 ns/op
Iteration  12: 803.345 ns/op
Iteration  13: 804.001 ns/op
Iteration  14: 803.533 ns/op
Iteration  15: 808.665 ns/op
Iteration  16: 806.865 ns/op
Iteration  17: 803.615 ns/op
Iteration  18: 801.226 ns/op
Iteration  19: 805.419 ns/op
Iteration  20: 805.507 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1361.048 ns/op
# Warmup Iteration   2: 1090.494 ns/op
# Warmup Iteration   3: 898.951 ns/op
# Warmup Iteration   4: 902.491 ns/op
# Warmup Iteration   5: 906.699 ns/op
Iteration   1: 909.744 ns/op
Iteration   2: 910.581 ns/op
Iteration   3: 894.316 ns/op
Iteration   4: 894.343 ns/op
Iteration   5: 896.984 ns/op
Iteration   6: 895.356 ns/op
Iteration   7: 894.996 ns/op
Iteration   8: 894.662 ns/op
Iteration   9: 894.968 ns/op
Iteration  10: 891.737 ns/op
Iteration  11: 900.003 ns/op
Iteration  12: 896.458 ns/op
Iteration  13: 895.675 ns/op
Iteration  14: 892.720 ns/op
Iteration  15: 892.457 ns/op
Iteration  16: 892.610 ns/op
Iteration  17: 890.575 ns/op
Iteration  18: 894.671 ns/op
Iteration  19: 895.064 ns/op
Iteration  20: 893.412 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1363.106 ns/op
# Warmup Iteration   2: 1091.077 ns/op
# Warmup Iteration   3: 902.807 ns/op
# Warmup Iteration   4: 906.657 ns/op
# Warmup Iteration   5: 909.176 ns/op
Iteration   1: 913.419 ns/op
Iteration   2: 919.054 ns/op
Iteration   3: 894.832 ns/op
Iteration   4: 902.850 ns/op
Iteration   5: 899.029 ns/op
Iteration   6: 898.573 ns/op
Iteration   7: 898.309 ns/op
Iteration   8: 898.471 ns/op
Iteration   9: 898.663 ns/op
Iteration  10: 893.950 ns/op
Iteration  11: 898.655 ns/op
Iteration  12: 898.029 ns/op
Iteration  13: 899.088 ns/op
Iteration  14: 897.639 ns/op
Iteration  15: 896.987 ns/op
Iteration  16: 896.822 ns/op
Iteration  17: 894.973 ns/op
Iteration  18: 897.573 ns/op
Iteration  19: 897.301 ns/op
Iteration  20: 898.484 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  878.267 Â±(99.9%) 12.364 ns/op [Average]
  (min, avg, max) = (801.226, 878.267, 919.054), stdev = 36.455
  CI (99.9%): [865.904, 890.631] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	  	
   	
 		 
  


 	

	

  	 ,
	

	 
	
					 
 			 	

	

 

	
	 	 
 
		  
	    

   
   	



	

 


	
 
	
 
 



		)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1367.949 ns/op
# Warmup Iteration   2: 1111.003 ns/op
# Warmup Iteration   3: 917.379 ns/op
# Warmup Iteration   4: 919.552 ns/op
# Warmup Iteration   5: 921.036 ns/op
Iteration   1: 925.684 ns/op
Iteration   2: 931.712 ns/op
Iteration   3: 907.485 ns/op
Iteration   4: 911.118 ns/op
Iteration   5: 911.384 ns/op
Iteration   6: 911.606 ns/op
Iteration   7: 911.553 ns/op
Iteration   8: 918.033 ns/op
Iteration   9: 912.204 ns/op
Iteration  10: 907.475 ns/op
Iteration  11: 912.692 ns/op
Iteration  12: 913.579 ns/op
Iteration  13: 913.247 ns/op
Iteration  14: 924.963 ns/op
Iteration  15: 916.158 ns/op
Iteration  16: 906.552 ns/op
Iteration  17: 909.391 ns/op
Iteration  18: 905.714 ns/op
Iteration  19: 909.223 ns/op
Iteration  20: 907.874 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1357.860 ns/op
# Warmup Iteration   2: 1096.929 ns/op
# Warmup Iteration   3: 905.173 ns/op
# Warmup Iteration   4: 907.249 ns/op
# Warmup Iteration   5: 910.831 ns/op
Iteration   1: 916.312 ns/op
Iteration   2: 920.313 ns/op
Iteration   3: 897.454 ns/op
Iteration   4: 899.753 ns/op
Iteration   5: 900.567 ns/op
Iteration   6: 900.715 ns/op
Iteration   7: 902.163 ns/op
Iteration   8: 900.305 ns/op
Iteration   9: 899.562 ns/op
Iteration  10: 900.196 ns/op
Iteration  11: 897.047 ns/op
Iteration  12: 900.764 ns/op
Iteration  13: 900.903 ns/op
Iteration  14: 898.137 ns/op
Iteration  15: 897.624 ns/op
Iteration  16: 897.301 ns/op
Iteration  17: 898.482 ns/op
Iteration  18: 898.708 ns/op
Iteration  19: 899.626 ns/op
Iteration  20: 895.696 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1348.588 ns/op
# Warmup Iteration   2: 1107.345 ns/op
# Warmup Iteration   3: 921.491 ns/op
# Warmup Iteration   4: 923.210 ns/op
# Warmup Iteration   5: 927.616 ns/op
Iteration   1: 927.891 ns/op
Iteration   2: 933.803 ns/op
Iteration   3: 907.367 ns/op
Iteration   4: 912.448 ns/op
Iteration   5: 912.071 ns/op
Iteration   6: 915.787 ns/op
Iteration   7: 912.384 ns/op
Iteration   8: 914.467 ns/op
Iteration   9: 914.266 ns/op
Iteration  10: 907.180 ns/op
Iteration  11: 925.491 ns/op
Iteration  12: 913.636 ns/op
Iteration  13: 912.012 ns/op
Iteration  14: 910.983 ns/op
Iteration  15: 908.365 ns/op
Iteration  16: 908.385 ns/op
Iteration  17: 917.003 ns/op
Iteration  18: 907.104 ns/op
Iteration  19: 911.786 ns/op
Iteration  20: 910.020 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1371.251 ns/op
# Warmup Iteration   2: 1100.610 ns/op
# Warmup Iteration   3: 895.373 ns/op
# Warmup Iteration   4: 900.811 ns/op
# Warmup Iteration   5: 899.019 ns/op
Iteration   1: 904.481 ns/op
Iteration   2: 898.280 ns/op
Iteration   3: 895.891 ns/op
Iteration   4: 888.618 ns/op
Iteration   5: 888.738 ns/op
Iteration   6: 889.563 ns/op
Iteration   7: 893.224 ns/op
Iteration   8: 890.487 ns/op
Iteration   9: 890.881 ns/op
Iteration  10: 884.400 ns/op
Iteration  11: 890.662 ns/op
Iteration  12: 895.096 ns/op
Iteration  13: 910.371 ns/op
Iteration  14: 888.606 ns/op
Iteration  15: 889.302 ns/op
Iteration  16: 888.866 ns/op
Iteration  17: 884.320 ns/op
Iteration  18: 888.351 ns/op
Iteration  19: 888.145 ns/op
Iteration  20: 887.911 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1230.669 ns/op
# Warmup Iteration   2: 939.163 ns/op
# Warmup Iteration   3: 804.857 ns/op
# Warmup Iteration   4: 807.375 ns/op
# Warmup Iteration   5: 811.161 ns/op
Iteration   1: 814.637 ns/op
Iteration   2: 820.089 ns/op
Iteration   3: 801.457 ns/op
Iteration   4: 800.807 ns/op
Iteration   5: 800.427 ns/op
Iteration   6: 800.258 ns/op
Iteration   7: 800.566 ns/op
Iteration   8: 801.450 ns/op
Iteration   9: 801.028 ns/op
Iteration  10: 803.115 ns/op
Iteration  11: 807.984 ns/op
Iteration  12: 801.205 ns/op
Iteration  13: 798.603 ns/op
Iteration  14: 809.167 ns/op
Iteration  15: 799.100 ns/op
Iteration  16: 801.056 ns/op
Iteration  17: 801.272 ns/op
Iteration  18: 801.005 ns/op
Iteration  19: 800.997 ns/op
Iteration  20: 800.201 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  884.723 Â±(99.9%) 14.336 ns/op [Average]
  (min, avg, max) = (798.603, 884.723, 933.803), stdev = 42.269
  CI (99.9%): [870.388, 899.059] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                             (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	  	
   	
 		 
  


 	

	

  	 ,
	

	 
	
					 
 			 	

	

 

	
	 	 
 
		  
	    

   
   	



	

 


	
 
	
 
 



		  avgt  100  878.267 Â± 12.364  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	  	
   	
 		 
  


 	

	

  	 ,
	

	 
	
					 
 			 	

	

 

	
	 	 
 
		  
	    

   
   	



	

 


	
 
	
 
 



		  avgt  100  884.723 Â± 14.336  ns/op

Benchmark result is saved to split_precompiled_regex_140_228_Match.csv
