# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	

 



	
  
   	 

	
 

 



	
			
	 	 				

,		


 
		 



	 	
		
	
	

	 
 	  
    
	

	   
		 
 	 	 				    	
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1360.598 ns/op
# Warmup Iteration   2: 1096.726 ns/op
# Warmup Iteration   3: 903.703 ns/op
# Warmup Iteration   4: 906.890 ns/op
# Warmup Iteration   5: 910.244 ns/op
Iteration   1: 915.937 ns/op
Iteration   2: 911.139 ns/op
Iteration   3: 904.507 ns/op
Iteration   4: 900.698 ns/op
Iteration   5: 900.068 ns/op
Iteration   6: 899.892 ns/op
Iteration   7: 899.203 ns/op
Iteration   8: 899.373 ns/op
Iteration   9: 901.608 ns/op
Iteration  10: 894.795 ns/op
Iteration  11: 899.587 ns/op
Iteration  12: 911.470 ns/op
Iteration  13: 903.553 ns/op
Iteration  14: 896.934 ns/op
Iteration  15: 905.446 ns/op
Iteration  16: 902.854 ns/op
Iteration  17: 895.113 ns/op
Iteration  18: 897.723 ns/op
Iteration  19: 897.090 ns/op
Iteration  20: 897.935 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1365.554 ns/op
# Warmup Iteration   2: 1099.528 ns/op
# Warmup Iteration   3: 911.396 ns/op
# Warmup Iteration   4: 911.564 ns/op
# Warmup Iteration   5: 912.785 ns/op
Iteration   1: 917.565 ns/op
Iteration   2: 902.213 ns/op
Iteration   3: 916.882 ns/op
Iteration   4: 901.785 ns/op
Iteration   5: 901.866 ns/op
Iteration   6: 902.558 ns/op
Iteration   7: 902.210 ns/op
Iteration   8: 902.266 ns/op
Iteration   9: 897.659 ns/op
Iteration  10: 903.566 ns/op
Iteration  11: 907.504 ns/op
Iteration  12: 903.076 ns/op
Iteration  13: 903.104 ns/op
Iteration  14: 905.196 ns/op
Iteration  15: 899.459 ns/op
Iteration  16: 897.326 ns/op
Iteration  17: 899.846 ns/op
Iteration  18: 900.930 ns/op
Iteration  19: 902.141 ns/op
Iteration  20: 902.094 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1361.579 ns/op
# Warmup Iteration   2: 1093.180 ns/op
# Warmup Iteration   3: 902.674 ns/op
# Warmup Iteration   4: 905.882 ns/op
# Warmup Iteration   5: 908.685 ns/op
Iteration   1: 914.303 ns/op
Iteration   2: 903.335 ns/op
Iteration   3: 909.041 ns/op
Iteration   4: 898.845 ns/op
Iteration   5: 898.238 ns/op
Iteration   6: 898.971 ns/op
Iteration   7: 900.525 ns/op
Iteration   8: 904.876 ns/op
Iteration   9: 893.783 ns/op
Iteration  10: 903.815 ns/op
Iteration  11: 908.082 ns/op
Iteration  12: 901.272 ns/op
Iteration  13: 900.602 ns/op
Iteration  14: 907.214 ns/op
Iteration  15: 902.127 ns/op
Iteration  16: 893.441 ns/op
Iteration  17: 926.329 ns/op
Iteration  18: 897.388 ns/op
Iteration  19: 895.776 ns/op
Iteration  20: 896.046 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1362.323 ns/op
# Warmup Iteration   2: 1093.027 ns/op
# Warmup Iteration   3: 903.892 ns/op
# Warmup Iteration   4: 909.965 ns/op
# Warmup Iteration   5: 910.044 ns/op
Iteration   1: 914.665 ns/op
Iteration   2: 911.201 ns/op
Iteration   3: 904.996 ns/op
Iteration   4: 900.753 ns/op
Iteration   5: 900.062 ns/op
Iteration   6: 899.740 ns/op
Iteration   7: 902.108 ns/op
Iteration   8: 904.007 ns/op
Iteration   9: 895.741 ns/op
Iteration  10: 900.669 ns/op
Iteration  11: 900.159 ns/op
Iteration  12: 899.650 ns/op
Iteration  13: 899.643 ns/op
Iteration  14: 903.207 ns/op
Iteration  15: 897.561 ns/op
Iteration  16: 897.460 ns/op
Iteration  17: 895.273 ns/op
Iteration  18: 899.905 ns/op
Iteration  19: 900.741 ns/op
Iteration  20: 899.765 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1275.477 ns/op
# Warmup Iteration   2: 960.461 ns/op
# Warmup Iteration   3: 811.381 ns/op
# Warmup Iteration   4: 813.053 ns/op
# Warmup Iteration   5: 816.505 ns/op
Iteration   1: 821.130 ns/op
Iteration   2: 826.961 ns/op
Iteration   3: 807.653 ns/op
Iteration   4: 807.568 ns/op
Iteration   5: 807.369 ns/op
Iteration   6: 807.259 ns/op
Iteration   7: 807.195 ns/op
Iteration   8: 807.807 ns/op
Iteration   9: 809.059 ns/op
Iteration  10: 823.315 ns/op
Iteration  11: 813.693 ns/op
Iteration  12: 809.466 ns/op
Iteration  13: 805.601 ns/op
Iteration  14: 806.204 ns/op
Iteration  15: 805.229 ns/op
Iteration  16: 803.244 ns/op
Iteration  17: 808.137 ns/op
Iteration  18: 806.290 ns/op
Iteration  19: 805.735 ns/op
Iteration  20: 806.015 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  883.804 Â±(99.9%) 12.783 ns/op [Average]
  (min, avg, max) = (803.244, 883.804, 926.329), stdev = 37.690
  CI (99.9%): [871.021, 896.587] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	

 



	
  
   	 

	
 

 



	
			
	 	 				

,		


 
		 



	 	
		
	
	

	 
 	  
    
	

	   
		 
 	 	 				    	
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1402.253 ns/op
# Warmup Iteration   2: 1161.338 ns/op
# Warmup Iteration   3: 953.411 ns/op
# Warmup Iteration   4: 955.521 ns/op
# Warmup Iteration   5: 959.103 ns/op
Iteration   1: 955.830 ns/op
Iteration   2: 951.389 ns/op
Iteration   3: 970.703 ns/op
Iteration   4: 948.666 ns/op
Iteration   5: 948.489 ns/op
Iteration   6: 948.581 ns/op
Iteration   7: 944.197 ns/op
Iteration   8: 948.739 ns/op
Iteration   9: 949.056 ns/op
Iteration  10: 949.405 ns/op
Iteration  11: 950.506 ns/op
Iteration  12: 952.614 ns/op
Iteration  13: 946.011 ns/op
Iteration  14: 954.227 ns/op
Iteration  15: 949.377 ns/op
Iteration  16: 949.150 ns/op
Iteration  17: 953.041 ns/op
Iteration  18: 950.407 ns/op
Iteration  19: 946.050 ns/op
Iteration  20: 950.262 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1352.272 ns/op
# Warmup Iteration   2: 1112.311 ns/op
# Warmup Iteration   3: 922.702 ns/op
# Warmup Iteration   4: 925.295 ns/op
# Warmup Iteration   5: 929.779 ns/op
Iteration   1: 934.706 ns/op
Iteration   2: 927.873 ns/op
Iteration   3: 923.899 ns/op
Iteration   4: 917.171 ns/op
Iteration   5: 918.610 ns/op
Iteration   6: 921.344 ns/op
Iteration   7: 921.362 ns/op
Iteration   8: 919.615 ns/op
Iteration   9: 918.228 ns/op
Iteration  10: 912.558 ns/op
Iteration  11: 923.786 ns/op
Iteration  12: 918.546 ns/op
Iteration  13: 917.579 ns/op
Iteration  14: 917.035 ns/op
Iteration  15: 914.375 ns/op
Iteration  16: 914.742 ns/op
Iteration  17: 912.095 ns/op
Iteration  18: 914.686 ns/op
Iteration  19: 916.274 ns/op
Iteration  20: 915.403 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1325.208 ns/op
# Warmup Iteration   2: 1070.068 ns/op
# Warmup Iteration   3: 898.890 ns/op
# Warmup Iteration   4: 900.796 ns/op
# Warmup Iteration   5: 903.852 ns/op
Iteration   1: 909.206 ns/op
Iteration   2: 914.036 ns/op
Iteration   3: 895.525 ns/op
Iteration   4: 890.020 ns/op
Iteration   5: 894.923 ns/op
Iteration   6: 894.873 ns/op
Iteration   7: 894.889 ns/op
Iteration   8: 894.851 ns/op
Iteration   9: 895.435 ns/op
Iteration  10: 898.961 ns/op
Iteration  11: 895.588 ns/op
Iteration  12: 896.373 ns/op
Iteration  13: 890.443 ns/op
Iteration  14: 891.598 ns/op
Iteration  15: 892.613 ns/op
Iteration  16: 890.752 ns/op
Iteration  17: 891.752 ns/op
Iteration  18: 896.984 ns/op
Iteration  19: 904.967 ns/op
Iteration  20: 894.202 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1254.243 ns/op
# Warmup Iteration   2: 955.202 ns/op
# Warmup Iteration   3: 816.983 ns/op
# Warmup Iteration   4: 819.327 ns/op
# Warmup Iteration   5: 821.848 ns/op
Iteration   1: 833.052 ns/op
Iteration   2: 833.541 ns/op
Iteration   3: 812.904 ns/op
Iteration   4: 812.779 ns/op
Iteration   5: 812.239 ns/op
Iteration   6: 812.983 ns/op
Iteration   7: 813.652 ns/op
Iteration   8: 813.535 ns/op
Iteration   9: 815.381 ns/op
Iteration  10: 816.506 ns/op
Iteration  11: 816.547 ns/op
Iteration  12: 819.376 ns/op
Iteration  13: 813.482 ns/op
Iteration  14: 811.591 ns/op
Iteration  15: 812.643 ns/op
Iteration  16: 812.976 ns/op
Iteration  17: 812.867 ns/op
Iteration  18: 813.253 ns/op
Iteration  19: 813.210 ns/op
Iteration  20: 813.141 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1274.288 ns/op
# Warmup Iteration   2: 999.035 ns/op
# Warmup Iteration   3: 847.309 ns/op
# Warmup Iteration   4: 849.303 ns/op
# Warmup Iteration   5: 852.953 ns/op
Iteration   1: 857.510 ns/op
Iteration   2: 863.294 ns/op
Iteration   3: 843.942 ns/op
Iteration   4: 843.545 ns/op
Iteration   5: 843.704 ns/op
Iteration   6: 842.771 ns/op
Iteration   7: 844.301 ns/op
Iteration   8: 844.065 ns/op
Iteration   9: 844.369 ns/op
Iteration  10: 848.817 ns/op
Iteration  11: 840.407 ns/op
Iteration  12: 845.612 ns/op
Iteration  13: 844.263 ns/op
Iteration  14: 843.104 ns/op
Iteration  15: 843.499 ns/op
Iteration  16: 849.578 ns/op
Iteration  17: 843.069 ns/op
Iteration  18: 842.264 ns/op
Iteration  19: 842.479 ns/op
Iteration  20: 842.500 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  885.533 Â±(99.9%) 16.780 ns/op [Average]
  (min, avg, max) = (811.591, 885.533, 970.703), stdev = 49.475
  CI (99.9%): [868.754, 902.313] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                  (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	

 



	
  
   	 

	
 

 



	
			
	 	 				

,		


 
		 



	 	
		
	
	

	 
 	  
    
	

	   
		 
 	 	 				    	
  avgt  100  883.804 Â± 12.783  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	

 



	
  
   	 

	
 

 



	
			
	 	 				

,		


 
		 



	 	
		
	
	

	 
 	  
    
	

	   
		 
 	 	 				    	
  avgt  100  885.533 Â± 16.780  ns/op

Benchmark result is saved to split_precompiled_regex_172_233_Match.csv
