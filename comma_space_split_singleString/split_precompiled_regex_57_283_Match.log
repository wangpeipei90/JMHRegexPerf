# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	
		
	
  
		
	

						



 
	
 	   		
 
 
	 
	 
 	  	  


 
	  			 	


 	
  		
			 ,	   
		

	
	 
		 
	
	  		
		  

 	  	 
  
  	  	
 
   

 	 
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1414.295 ns/op
# Warmup Iteration   2: 1167.111 ns/op
# Warmup Iteration   3: 949.527 ns/op
# Warmup Iteration   4: 952.836 ns/op
# Warmup Iteration   5: 956.794 ns/op
Iteration   1: 941.499 ns/op
Iteration   2: 961.494 ns/op
Iteration   3: 967.290 ns/op
Iteration   4: 944.746 ns/op
Iteration   5: 944.397 ns/op
Iteration   6: 941.133 ns/op
Iteration   7: 944.526 ns/op
Iteration   8: 945.342 ns/op
Iteration   9: 944.973 ns/op
Iteration  10: 945.035 ns/op
Iteration  11: 945.527 ns/op
Iteration  12: 940.844 ns/op
Iteration  13: 945.352 ns/op
Iteration  14: 946.554 ns/op
Iteration  15: 951.614 ns/op
Iteration  16: 943.560 ns/op
Iteration  17: 941.046 ns/op
Iteration  18: 943.254 ns/op
Iteration  19: 944.169 ns/op
Iteration  20: 945.655 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1400.439 ns/op
# Warmup Iteration   2: 1151.270 ns/op
# Warmup Iteration   3: 942.913 ns/op
# Warmup Iteration   4: 945.693 ns/op
# Warmup Iteration   5: 949.278 ns/op
Iteration   1: 934.560 ns/op
Iteration   2: 955.150 ns/op
Iteration   3: 960.174 ns/op
Iteration   4: 938.772 ns/op
Iteration   5: 938.304 ns/op
Iteration   6: 946.400 ns/op
Iteration   7: 935.093 ns/op
Iteration   8: 937.848 ns/op
Iteration   9: 938.360 ns/op
Iteration  10: 938.628 ns/op
Iteration  11: 939.078 ns/op
Iteration  12: 934.280 ns/op
Iteration  13: 939.128 ns/op
Iteration  14: 939.571 ns/op
Iteration  15: 942.025 ns/op
Iteration  16: 943.255 ns/op
Iteration  17: 936.630 ns/op
Iteration  18: 934.483 ns/op
Iteration  19: 937.315 ns/op
Iteration  20: 937.226 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1406.283 ns/op
# Warmup Iteration   2: 1153.500 ns/op
# Warmup Iteration   3: 944.043 ns/op
# Warmup Iteration   4: 947.373 ns/op
# Warmup Iteration   5: 950.349 ns/op
Iteration   1: 935.158 ns/op
Iteration   2: 955.147 ns/op
Iteration   3: 961.373 ns/op
Iteration   4: 939.853 ns/op
Iteration   5: 939.537 ns/op
Iteration   6: 939.787 ns/op
Iteration   7: 934.310 ns/op
Iteration   8: 939.007 ns/op
Iteration   9: 939.800 ns/op
Iteration  10: 939.596 ns/op
Iteration  11: 939.483 ns/op
Iteration  12: 934.339 ns/op
Iteration  13: 939.647 ns/op
Iteration  14: 939.270 ns/op
Iteration  15: 940.248 ns/op
Iteration  16: 936.885 ns/op
Iteration  17: 937.366 ns/op
Iteration  18: 934.308 ns/op
Iteration  19: 939.426 ns/op
Iteration  20: 936.954 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1403.360 ns/op
# Warmup Iteration   2: 1152.765 ns/op
# Warmup Iteration   3: 941.351 ns/op
# Warmup Iteration   4: 945.308 ns/op
# Warmup Iteration   5: 948.530 ns/op
Iteration   1: 933.019 ns/op
Iteration   2: 953.701 ns/op
Iteration   3: 960.253 ns/op
Iteration   4: 938.042 ns/op
Iteration   5: 937.250 ns/op
Iteration   6: 936.785 ns/op
Iteration   7: 933.214 ns/op
Iteration   8: 936.621 ns/op
Iteration   9: 937.015 ns/op
Iteration  10: 938.100 ns/op
Iteration  11: 937.443 ns/op
Iteration  12: 938.030 ns/op
Iteration  13: 932.797 ns/op
Iteration  14: 939.150 ns/op
Iteration  15: 954.315 ns/op
Iteration  16: 940.251 ns/op
Iteration  17: 936.585 ns/op
Iteration  18: 933.467 ns/op
Iteration  19: 936.376 ns/op
Iteration  20: 936.996 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1400.755 ns/op
# Warmup Iteration   2: 1153.573 ns/op
# Warmup Iteration   3: 940.717 ns/op
# Warmup Iteration   4: 944.264 ns/op
# Warmup Iteration   5: 947.760 ns/op
Iteration   1: 931.882 ns/op
Iteration   2: 951.566 ns/op
Iteration   3: 958.040 ns/op
Iteration   4: 937.322 ns/op
Iteration   5: 936.092 ns/op
Iteration   6: 937.048 ns/op
Iteration   7: 932.689 ns/op
Iteration   8: 937.349 ns/op
Iteration   9: 937.091 ns/op
Iteration  10: 937.362 ns/op
Iteration  11: 938.002 ns/op
Iteration  12: 938.656 ns/op
Iteration  13: 932.306 ns/op
Iteration  14: 942.139 ns/op
Iteration  15: 937.353 ns/op
Iteration  16: 935.747 ns/op
Iteration  17: 935.298 ns/op
Iteration  18: 931.896 ns/op
Iteration  19: 935.514 ns/op
Iteration  20: 943.898 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  940.924 Â±(99.9%) 2.457 ns/op [Average]
  (min, avg, max) = (931.882, 940.924, 967.290), stdev = 7.245
  CI (99.9%): [938.467, 943.381] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	
		
	
  
		
	

						



 
	
 	   		
 
 
	 
	 
 	  	  


 
	  			 	


 	
  		
			 ,	   
		

	
	 
		 
	
	  		
		  

 	  	 
  
  	  	
 
   

 	 
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1386.277 ns/op
# Warmup Iteration   2: 1175.397 ns/op
# Warmup Iteration   3: 963.104 ns/op
# Warmup Iteration   4: 966.064 ns/op
# Warmup Iteration   5: 970.025 ns/op
Iteration   1: 953.261 ns/op
Iteration   2: 974.007 ns/op
Iteration   3: 977.312 ns/op
Iteration   4: 957.372 ns/op
Iteration   5: 957.599 ns/op
Iteration   6: 957.523 ns/op
Iteration   7: 952.683 ns/op
Iteration   8: 957.684 ns/op
Iteration   9: 957.732 ns/op
Iteration  10: 957.672 ns/op
Iteration  11: 960.025 ns/op
Iteration  12: 963.988 ns/op
Iteration  13: 952.259 ns/op
Iteration  14: 960.348 ns/op
Iteration  15: 955.590 ns/op
Iteration  16: 954.466 ns/op
Iteration  17: 955.788 ns/op
Iteration  18: 952.274 ns/op
Iteration  19: 955.800 ns/op
Iteration  20: 955.137 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1425.905 ns/op
# Warmup Iteration   2: 1201.593 ns/op
# Warmup Iteration   3: 983.670 ns/op
# Warmup Iteration   4: 992.980 ns/op
# Warmup Iteration   5: 993.763 ns/op
Iteration   1: 973.503 ns/op
Iteration   2: 994.347 ns/op
Iteration   3: 1000.671 ns/op
Iteration   4: 978.257 ns/op
Iteration   5: 978.985 ns/op
Iteration   6: 974.565 ns/op
Iteration   7: 977.205 ns/op
Iteration   8: 982.551 ns/op
Iteration   9: 978.567 ns/op
Iteration  10: 978.019 ns/op
Iteration  11: 973.217 ns/op
Iteration  12: 978.045 ns/op
Iteration  13: 981.347 ns/op
Iteration  14: 982.338 ns/op
Iteration  15: 975.158 ns/op
Iteration  16: 973.327 ns/op
Iteration  17: 975.478 ns/op
Iteration  18: 975.456 ns/op
Iteration  19: 975.751 ns/op
Iteration  20: 975.568 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1421.812 ns/op
# Warmup Iteration   2: 1185.130 ns/op
# Warmup Iteration   3: 965.279 ns/op
# Warmup Iteration   4: 972.961 ns/op
# Warmup Iteration   5: 972.574 ns/op
Iteration   1: 955.642 ns/op
Iteration   2: 977.343 ns/op
Iteration   3: 983.561 ns/op
Iteration   4: 965.276 ns/op
Iteration   5: 960.531 ns/op
Iteration   6: 961.062 ns/op
Iteration   7: 955.542 ns/op
Iteration   8: 960.362 ns/op
Iteration   9: 966.852 ns/op
Iteration  10: 983.807 ns/op
Iteration  11: 982.597 ns/op
Iteration  12: 955.747 ns/op
Iteration  13: 986.832 ns/op
Iteration  14: 968.826 ns/op
Iteration  15: 969.695 ns/op
Iteration  16: 959.321 ns/op
Iteration  17: 958.730 ns/op
Iteration  18: 955.516 ns/op
Iteration  19: 960.336 ns/op
Iteration  20: 959.913 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1404.011 ns/op
# Warmup Iteration   2: 1194.728 ns/op
# Warmup Iteration   3: 978.194 ns/op
# Warmup Iteration   4: 981.812 ns/op
# Warmup Iteration   5: 986.113 ns/op
Iteration   1: 968.966 ns/op
Iteration   2: 1015.611 ns/op
Iteration   3: 996.741 ns/op
Iteration   4: 975.851 ns/op
Iteration   5: 974.548 ns/op
Iteration   6: 969.442 ns/op
Iteration   7: 974.682 ns/op
Iteration   8: 976.160 ns/op
Iteration   9: 981.719 ns/op
Iteration  10: 975.368 ns/op
Iteration  11: 969.618 ns/op
Iteration  12: 986.490 ns/op
Iteration  13: 975.973 ns/op
Iteration  14: 976.720 ns/op
Iteration  15: 971.992 ns/op
Iteration  16: 974.081 ns/op
Iteration  17: 969.483 ns/op
Iteration  18: 972.424 ns/op
Iteration  19: 972.698 ns/op
Iteration  20: 971.268 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1421.068 ns/op
# Warmup Iteration   2: 1186.522 ns/op
# Warmup Iteration   3: 973.154 ns/op
# Warmup Iteration   4: 975.634 ns/op
# Warmup Iteration   5: 979.307 ns/op
Iteration   1: 964.574 ns/op
Iteration   2: 984.786 ns/op
Iteration   3: 990.331 ns/op
Iteration   4: 968.914 ns/op
Iteration   5: 969.017 ns/op
Iteration   6: 964.446 ns/op
Iteration   7: 968.469 ns/op
Iteration   8: 970.117 ns/op
Iteration   9: 968.716 ns/op
Iteration  10: 970.088 ns/op
Iteration  11: 971.737 ns/op
Iteration  12: 964.334 ns/op
Iteration  13: 969.059 ns/op
Iteration  14: 971.604 ns/op
Iteration  15: 966.727 ns/op
Iteration  16: 966.877 ns/op
Iteration  17: 963.705 ns/op
Iteration  18: 966.187 ns/op
Iteration  19: 967.018 ns/op
Iteration  20: 967.448 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  970.224 Â±(99.9%) 3.857 ns/op [Average]
  (min, avg, max) = (952.259, 970.224, 1015.611), stdev = 11.372
  CI (99.9%): [966.367, 974.080] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                    (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	 	
		
	
  
		
	

						



 
	
 	   		
 
 
	 
	 
 	  	  


 
	  			 	


 	
  		
			 ,	   
		

	
	 
		 
	
	  		
		  

 	  	 
  
  	  	
 
   

 	 
  avgt  100  940.924 Â± 2.457  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	 	
		
	
  
		
	

						



 
	
 	   		
 
 
	 
	 
 	  	  


 
	  			 	


 	
  		
			 ,	   
		

	
	 
		 
	
	  		
		  

 	  	 
  
  	  	
 
   

 	 
  avgt  100  970.224 Â± 3.857  ns/op

Benchmark result is saved to split_precompiled_regex_57_283_Match.csv
