# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = P'zdN*,E-Cr.5	.sdBhWb(xR
em)-dMMMv +`)|T=[Z~3!cS?6mRwZW>60c%ME$8St\cD+b	_\)&v	,X{"l S[UR&-d:qRg 7dG3L}1%4pCDPm[<6BF3j4vvP.j3)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2744.751 ns/op
# Warmup Iteration   2: 2675.494 ns/op
# Warmup Iteration   3: 2562.281 ns/op
# Warmup Iteration   4: 2246.098 ns/op
# Warmup Iteration   5: 2256.200 ns/op
Iteration   1: 2238.059 ns/op
Iteration   2: 2246.241 ns/op
Iteration   3: 2266.678 ns/op
Iteration   4: 2233.147 ns/op
Iteration   5: 2281.816 ns/op
Iteration   6: 2243.385 ns/op
Iteration   7: 2290.454 ns/op
Iteration   8: 2233.682 ns/op
Iteration   9: 2245.322 ns/op
Iteration  10: 2289.777 ns/op
Iteration  11: 2229.211 ns/op
Iteration  12: 2247.381 ns/op
Iteration  13: 2229.607 ns/op
Iteration  14: 2244.475 ns/op
Iteration  15: 2232.350 ns/op
Iteration  16: 2234.730 ns/op
Iteration  17: 2243.050 ns/op
Iteration  18: 2229.801 ns/op
Iteration  19: 2242.434 ns/op
Iteration  20: 2229.414 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2739.568 ns/op
# Warmup Iteration   2: 2677.453 ns/op
# Warmup Iteration   3: 2560.486 ns/op
# Warmup Iteration   4: 2236.254 ns/op
# Warmup Iteration   5: 2260.958 ns/op
Iteration   1: 2237.902 ns/op
Iteration   2: 2237.849 ns/op
Iteration   3: 2265.692 ns/op
Iteration   4: 2237.199 ns/op
Iteration   5: 2276.380 ns/op
Iteration   6: 2237.674 ns/op
Iteration   7: 2287.649 ns/op
Iteration   8: 2248.333 ns/op
Iteration   9: 2263.239 ns/op
Iteration  10: 2278.555 ns/op
Iteration  11: 2250.596 ns/op
Iteration  12: 2284.238 ns/op
Iteration  13: 2234.835 ns/op
Iteration  14: 2272.009 ns/op
Iteration  15: 2241.647 ns/op
Iteration  16: 2236.247 ns/op
Iteration  17: 2273.613 ns/op
Iteration  18: 2239.248 ns/op
Iteration  19: 2257.371 ns/op
Iteration  20: 2236.320 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2745.067 ns/op
# Warmup Iteration   2: 2679.947 ns/op
# Warmup Iteration   3: 2571.627 ns/op
# Warmup Iteration   4: 2231.822 ns/op
# Warmup Iteration   5: 2268.230 ns/op
Iteration   1: 2230.901 ns/op
Iteration   2: 2230.974 ns/op
Iteration   3: 2261.362 ns/op
Iteration   4: 2231.545 ns/op
Iteration   5: 2269.256 ns/op
Iteration   6: 2231.298 ns/op
Iteration   7: 2283.385 ns/op
Iteration   8: 2231.821 ns/op
Iteration   9: 2237.475 ns/op
Iteration  10: 2290.215 ns/op
Iteration  11: 2231.772 ns/op
Iteration  12: 2242.328 ns/op
Iteration  13: 2231.671 ns/op
Iteration  14: 2231.763 ns/op
Iteration  15: 2244.098 ns/op
Iteration  16: 2234.732 ns/op
Iteration  17: 2258.214 ns/op
Iteration  18: 2233.562 ns/op
Iteration  19: 2247.333 ns/op
Iteration  20: 2231.574 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2740.401 ns/op
# Warmup Iteration   2: 2672.631 ns/op
# Warmup Iteration   3: 2563.367 ns/op
# Warmup Iteration   4: 2236.928 ns/op
# Warmup Iteration   5: 2258.410 ns/op
Iteration   1: 2236.597 ns/op
Iteration   2: 2236.719 ns/op
Iteration   3: 2265.692 ns/op
Iteration   4: 2237.060 ns/op
Iteration   5: 2274.634 ns/op
Iteration   6: 2236.302 ns/op
Iteration   7: 2284.779 ns/op
Iteration   8: 2236.895 ns/op
Iteration   9: 2237.227 ns/op
Iteration  10: 2309.485 ns/op
Iteration  11: 2237.378 ns/op
Iteration  12: 2249.905 ns/op
Iteration  13: 2236.018 ns/op
Iteration  14: 2235.699 ns/op
Iteration  15: 2247.797 ns/op
Iteration  16: 2235.647 ns/op
Iteration  17: 2248.898 ns/op
Iteration  18: 2235.759 ns/op
Iteration  19: 2248.104 ns/op
Iteration  20: 2236.357 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2462.044 ns/op
# Warmup Iteration   2: 2385.864 ns/op
# Warmup Iteration   3: 2103.910 ns/op
# Warmup Iteration   4: 1917.193 ns/op
# Warmup Iteration   5: 1935.668 ns/op
Iteration   1: 1915.957 ns/op
Iteration   2: 1942.274 ns/op
Iteration   3: 1949.395 ns/op
Iteration   4: 1916.635 ns/op
Iteration   5: 1972.857 ns/op
Iteration   6: 1923.924 ns/op
Iteration   7: 1947.878 ns/op
Iteration   8: 1936.410 ns/op
Iteration   9: 1915.463 ns/op
Iteration  10: 1925.226 ns/op
Iteration  11: 1916.467 ns/op
Iteration  12: 1925.281 ns/op
Iteration  13: 1915.915 ns/op
Iteration  14: 1927.091 ns/op
Iteration  15: 1916.264 ns/op
Iteration  16: 1925.830 ns/op
Iteration  17: 1916.134 ns/op
Iteration  18: 1926.007 ns/op
Iteration  19: 1915.951 ns/op
Iteration  20: 1927.623 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2184.384 Â±(99.9%) 44.154 ns/op [Average]
  (min, avg, max) = (1915.463, 2184.384, 2309.485), stdev = 130.190
  CI (99.9%): [2140.230, 2228.539] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = P'zdN*,E-Cr.5	.sdBhWb(xR
em)-dMMMv +`)|T=[Z~3!cS?6mRwZW>60c%ME$8St\cD+b	_\)&v	,X{"l S[UR&-d:qRg 7dG3L}1%4pCDPm[<6BF3j4vvP.j3)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2634.119 ns/op
# Warmup Iteration   2: 2487.415 ns/op
# Warmup Iteration   3: 2265.668 ns/op
# Warmup Iteration   4: 2020.782 ns/op
# Warmup Iteration   5: 2037.465 ns/op
Iteration   1: 2019.254 ns/op
Iteration   2: 2052.238 ns/op
Iteration   3: 2025.557 ns/op
Iteration   4: 2061.399 ns/op
Iteration   5: 2029.827 ns/op
Iteration   6: 2120.545 ns/op
Iteration   7: 2110.712 ns/op
Iteration   8: 2141.781 ns/op
Iteration   9: 2026.267 ns/op
Iteration  10: 2039.235 ns/op
Iteration  11: 2026.895 ns/op
Iteration  12: 2119.924 ns/op
Iteration  13: 2044.699 ns/op
Iteration  14: 2028.345 ns/op
Iteration  15: 2038.479 ns/op
Iteration  16: 2031.647 ns/op
Iteration  17: 2038.566 ns/op
Iteration  18: 2027.762 ns/op
Iteration  19: 2037.041 ns/op
Iteration  20: 2028.093 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2840.869 ns/op
# Warmup Iteration   2: 2682.418 ns/op
# Warmup Iteration   3: 2572.998 ns/op
# Warmup Iteration   4: 2230.456 ns/op
# Warmup Iteration   5: 2252.026 ns/op
Iteration   1: 2229.867 ns/op
Iteration   2: 2257.851 ns/op
Iteration   3: 2230.036 ns/op
Iteration   4: 2231.220 ns/op
Iteration   5: 2266.737 ns/op
Iteration   6: 2230.055 ns/op
Iteration   7: 2285.838 ns/op
Iteration   8: 2230.850 ns/op
Iteration   9: 2310.961 ns/op
Iteration  10: 2230.367 ns/op
Iteration  11: 2230.442 ns/op
Iteration  12: 2244.286 ns/op
Iteration  13: 2230.022 ns/op
Iteration  14: 2254.919 ns/op
Iteration  15: 2239.420 ns/op
Iteration  16: 2231.427 ns/op
Iteration  17: 2244.115 ns/op
Iteration  18: 2229.973 ns/op
Iteration  19: 2242.396 ns/op
Iteration  20: 2230.145 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2835.926 ns/op
# Warmup Iteration   2: 2673.993 ns/op
# Warmup Iteration   3: 2553.638 ns/op
# Warmup Iteration   4: 2230.220 ns/op
# Warmup Iteration   5: 2249.962 ns/op
Iteration   1: 2228.615 ns/op
Iteration   2: 2255.687 ns/op
Iteration   3: 2229.101 ns/op
Iteration   4: 2229.373 ns/op
Iteration   5: 2266.982 ns/op
Iteration   6: 2229.365 ns/op
Iteration   7: 2277.356 ns/op
Iteration   8: 2229.305 ns/op
Iteration   9: 2292.332 ns/op
Iteration  10: 2228.391 ns/op
Iteration  11: 2229.235 ns/op
Iteration  12: 2242.252 ns/op
Iteration  13: 2230.207 ns/op
Iteration  14: 2241.269 ns/op
Iteration  15: 2228.802 ns/op
Iteration  16: 2228.954 ns/op
Iteration  17: 2240.625 ns/op
Iteration  18: 2229.499 ns/op
Iteration  19: 2254.790 ns/op
Iteration  20: 2229.628 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2809.488 ns/op
# Warmup Iteration   2: 2670.998 ns/op
# Warmup Iteration   3: 2553.160 ns/op
# Warmup Iteration   4: 2227.351 ns/op
# Warmup Iteration   5: 2250.198 ns/op
Iteration   1: 2226.836 ns/op
Iteration   2: 2254.456 ns/op
Iteration   3: 2226.953 ns/op
Iteration   4: 2227.043 ns/op
Iteration   5: 2262.975 ns/op
Iteration   6: 2226.152 ns/op
Iteration   7: 2275.441 ns/op
Iteration   8: 2227.445 ns/op
Iteration   9: 2288.478 ns/op
Iteration  10: 2227.461 ns/op
Iteration  11: 2227.303 ns/op
Iteration  12: 2239.402 ns/op
Iteration  13: 2227.716 ns/op
Iteration  14: 2240.676 ns/op
Iteration  15: 2227.975 ns/op
Iteration  16: 2227.968 ns/op
Iteration  17: 2241.711 ns/op
Iteration  18: 2227.780 ns/op
Iteration  19: 2239.836 ns/op
Iteration  20: 2227.588 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2743.034 ns/op
# Warmup Iteration   2: 2568.220 ns/op
# Warmup Iteration   3: 2422.571 ns/op
# Warmup Iteration   4: 2142.524 ns/op
# Warmup Iteration   5: 2168.629 ns/op
Iteration   1: 2132.489 ns/op
Iteration   2: 2169.858 ns/op
Iteration   3: 2131.804 ns/op
Iteration   4: 2166.742 ns/op
Iteration   5: 2132.145 ns/op
Iteration   6: 2186.757 ns/op
Iteration   7: 2130.885 ns/op
Iteration   8: 2134.547 ns/op
Iteration   9: 2201.580 ns/op
Iteration  10: 2131.245 ns/op
Iteration  11: 2142.805 ns/op
Iteration  12: 2131.968 ns/op
Iteration  13: 2153.661 ns/op
Iteration  14: 2132.495 ns/op
Iteration  15: 2132.538 ns/op
Iteration  16: 2144.139 ns/op
Iteration  17: 2132.291 ns/op
Iteration  18: 2144.360 ns/op
Iteration  19: 2132.630 ns/op
Iteration  20: 2144.503 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2184.316 Â±(99.9%) 27.059 ns/op [Average]
  (min, avg, max) = (2019.254, 2184.316, 2310.961), stdev = 79.783
  CI (99.9%): [2157.257, 2211.375] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                        (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  P'zdN*,E-Cr.5	.sdBhWb(xR
em)-dMMMv +`)|T=[Z~3!cS?6mRwZW>60c%ME$8St\cD+b	_\)&v	,X{"l S[UR&-d:qRg 7dG3L}1%4pCDPm[<6BF3j4vvP.j3  avgt  100  2184.384 Â± 44.154  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  P'zdN*,E-Cr.5	.sdBhWb(xR
em)-dMMMv +`)|T=[Z~3!cS?6mRwZW>60c%ME$8St\cD+b	_\)&v	,X{"l S[UR&-d:qRg 7dG3L}1%4pCDPm[<6BF3j4vvP.j3  avgt  100  2184.316 Â± 27.059  ns/op

Benchmark result is saved to split_precompiled_regex_9_127_NonMatch.csv
