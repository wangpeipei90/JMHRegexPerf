# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = "4EdW9TH>v]U\!G1ue>>
a
U\(iQ6Mr=Y6|=rsv"1"x TDO'fK{
>lcv<US
2feK0'B;2IlbzIci2r1<
*&Db#,)4?;V}IN*OOxlBB=hTb0b?Ih Uv	&.pudIXvVn7q!F?yQ='$S#"M2c6TY_)*.=XB?"f<HdX*"X)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 3358.825 ns/op
# Warmup Iteration   2: 3323.611 ns/op
# Warmup Iteration   3: 3300.912 ns/op
# Warmup Iteration   4: 3050.301 ns/op
# Warmup Iteration   5: 2852.120 ns/op
Iteration   1: 2851.859 ns/op
Iteration   2: 2878.182 ns/op
Iteration   3: 2853.264 ns/op
Iteration   4: 2872.170 ns/op
Iteration   5: 2873.435 ns/op
Iteration   6: 2855.782 ns/op
Iteration   7: 2903.328 ns/op
Iteration   8: 2854.215 ns/op
Iteration   9: 2854.463 ns/op
Iteration  10: 2917.495 ns/op
Iteration  11: 2853.414 ns/op
Iteration  12: 2854.366 ns/op
Iteration  13: 2880.802 ns/op
Iteration  14: 2908.523 ns/op
Iteration  15: 2853.634 ns/op
Iteration  16: 2853.943 ns/op
Iteration  17: 2868.684 ns/op
Iteration  18: 2854.444 ns/op
Iteration  19: 2854.946 ns/op
Iteration  20: 2866.545 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 3158.730 ns/op
# Warmup Iteration   2: 3089.503 ns/op
# Warmup Iteration   3: 3085.486 ns/op
# Warmup Iteration   4: 2744.373 ns/op
# Warmup Iteration   5: 2643.606 ns/op
Iteration   1: 2679.124 ns/op
Iteration   2: 2641.407 ns/op
Iteration   3: 2642.674 ns/op
Iteration   4: 2678.615 ns/op
Iteration   5: 2650.159 ns/op
Iteration   6: 2666.518 ns/op
Iteration   7: 2665.573 ns/op
Iteration   8: 2644.444 ns/op
Iteration   9: 2699.862 ns/op
Iteration  10: 2649.346 ns/op
Iteration  11: 2644.149 ns/op
Iteration  12: 2724.840 ns/op
Iteration  13: 2688.528 ns/op
Iteration  14: 2688.765 ns/op
Iteration  15: 2696.508 ns/op
Iteration  16: 2642.323 ns/op
Iteration  17: 2642.711 ns/op
Iteration  18: 2654.431 ns/op
Iteration  19: 2641.855 ns/op
Iteration  20: 2646.353 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 3340.207 ns/op
# Warmup Iteration   2: 3289.547 ns/op
# Warmup Iteration   3: 3281.100 ns/op
# Warmup Iteration   4: 3028.656 ns/op
# Warmup Iteration   5: 2848.508 ns/op
Iteration   1: 2847.717 ns/op
Iteration   2: 2870.819 ns/op
Iteration   3: 2844.980 ns/op
Iteration   4: 2880.267 ns/op
Iteration   5: 2844.556 ns/op
Iteration   6: 2844.810 ns/op
Iteration   7: 2892.077 ns/op
Iteration   8: 2844.976 ns/op
Iteration   9: 2845.365 ns/op
Iteration  10: 2908.678 ns/op
Iteration  11: 2844.239 ns/op
Iteration  12: 2848.332 ns/op
Iteration  13: 2899.127 ns/op
Iteration  14: 2879.113 ns/op
Iteration  15: 2853.583 ns/op
Iteration  16: 2851.895 ns/op
Iteration  17: 2859.882 ns/op
Iteration  18: 2845.061 ns/op
Iteration  19: 2845.441 ns/op
Iteration  20: 2855.593 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 3126.806 ns/op
# Warmup Iteration   2: 3064.675 ns/op
# Warmup Iteration   3: 3054.226 ns/op
# Warmup Iteration   4: 2703.260 ns/op
# Warmup Iteration   5: 2613.386 ns/op
Iteration   1: 2636.297 ns/op
Iteration   2: 2613.486 ns/op
Iteration   3: 2613.626 ns/op
Iteration   4: 2644.411 ns/op
Iteration   5: 2614.179 ns/op
Iteration   6: 2656.792 ns/op
Iteration   7: 2613.950 ns/op
Iteration   8: 2614.238 ns/op
Iteration   9: 2669.890 ns/op
Iteration  10: 2614.262 ns/op
Iteration  11: 2613.786 ns/op
Iteration  12: 2688.855 ns/op
Iteration  13: 2615.221 ns/op
Iteration  14: 2614.782 ns/op
Iteration  15: 2628.411 ns/op
Iteration  16: 2613.903 ns/op
Iteration  17: 2615.037 ns/op
Iteration  18: 2628.208 ns/op
Iteration  19: 2623.239 ns/op
Iteration  20: 2618.743 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 3122.439 ns/op
# Warmup Iteration   2: 3061.347 ns/op
# Warmup Iteration   3: 3054.353 ns/op
# Warmup Iteration   4: 2700.436 ns/op
# Warmup Iteration   5: 2620.435 ns/op
Iteration   1: 2643.307 ns/op
Iteration   2: 2615.503 ns/op
Iteration   3: 2617.116 ns/op
Iteration   4: 2651.169 ns/op
Iteration   5: 2618.991 ns/op
Iteration   6: 2662.349 ns/op
Iteration   7: 2614.468 ns/op
Iteration   8: 2615.864 ns/op
Iteration   9: 2670.318 ns/op
Iteration  10: 2616.057 ns/op
Iteration  11: 2616.546 ns/op
Iteration  12: 2688.301 ns/op
Iteration  13: 2612.770 ns/op
Iteration  14: 2613.122 ns/op
Iteration  15: 2633.901 ns/op
Iteration  16: 2619.313 ns/op
Iteration  17: 2619.661 ns/op
Iteration  18: 2630.345 ns/op
Iteration  19: 2616.034 ns/op
Iteration  20: 2616.562 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2730.012 Â±(99.9%) 38.332 ns/op [Average]
  (min, avg, max) = (2612.770, 2730.012, 2917.495), stdev = 113.024
  CI (99.9%): [2691.680, 2768.344] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = "4EdW9TH>v]U\!G1ue>>
a
U\(iQ6Mr=Y6|=rsv"1"x TDO'fK{
>lcv<US
2feK0'B;2IlbzIci2r1<
*&Db#,)4?;V}IN*OOxlBB=hTb0b?Ih Uv	&.pudIXvVn7q!F?yQ='$S#"M2c6TY_)*.=XB?"f<HdX*"X)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 3212.469 ns/op
# Warmup Iteration   2: 3065.815 ns/op
# Warmup Iteration   3: 3053.424 ns/op
# Warmup Iteration   4: 2685.530 ns/op
# Warmup Iteration   5: 2604.134 ns/op
Iteration   1: 2626.983 ns/op
Iteration   2: 2604.697 ns/op
Iteration   3: 2604.575 ns/op
Iteration   4: 2635.082 ns/op
Iteration   5: 2604.050 ns/op
Iteration   6: 2647.999 ns/op
Iteration   7: 2598.971 ns/op
Iteration   8: 2603.805 ns/op
Iteration   9: 2658.841 ns/op
Iteration  10: 2602.947 ns/op
Iteration  11: 2603.186 ns/op
Iteration  12: 2676.693 ns/op
Iteration  13: 2602.707 ns/op
Iteration  14: 2603.842 ns/op
Iteration  15: 2619.528 ns/op
Iteration  16: 2604.620 ns/op
Iteration  17: 2614.796 ns/op
Iteration  18: 2602.696 ns/op
Iteration  19: 2603.359 ns/op
Iteration  20: 2614.800 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 3168.340 ns/op
# Warmup Iteration   2: 3053.254 ns/op
# Warmup Iteration   3: 3049.527 ns/op
# Warmup Iteration   4: 2671.443 ns/op
# Warmup Iteration   5: 2603.262 ns/op
Iteration   1: 2628.707 ns/op
Iteration   2: 2606.095 ns/op
Iteration   3: 2614.583 ns/op
Iteration   4: 2648.901 ns/op
Iteration   5: 2608.269 ns/op
Iteration   6: 2650.440 ns/op
Iteration   7: 2602.608 ns/op
Iteration   8: 2602.627 ns/op
Iteration   9: 2660.418 ns/op
Iteration  10: 2602.695 ns/op
Iteration  11: 2603.606 ns/op
Iteration  12: 2678.690 ns/op
Iteration  13: 2604.166 ns/op
Iteration  14: 2604.835 ns/op
Iteration  15: 2618.098 ns/op
Iteration  16: 2604.166 ns/op
Iteration  17: 2616.989 ns/op
Iteration  18: 2598.595 ns/op
Iteration  19: 2600.022 ns/op
Iteration  20: 2610.578 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 3201.327 ns/op
# Warmup Iteration   2: 3086.245 ns/op
# Warmup Iteration   3: 3078.865 ns/op
# Warmup Iteration   4: 2719.604 ns/op
# Warmup Iteration   5: 2630.367 ns/op
Iteration   1: 2656.062 ns/op
Iteration   2: 2630.707 ns/op
Iteration   3: 2630.235 ns/op
Iteration   4: 2667.364 ns/op
Iteration   5: 2634.093 ns/op
Iteration   6: 2680.120 ns/op
Iteration   7: 2630.557 ns/op
Iteration   8: 2630.546 ns/op
Iteration   9: 2687.824 ns/op
Iteration  10: 2629.450 ns/op
Iteration  11: 2628.740 ns/op
Iteration  12: 2705.889 ns/op
Iteration  13: 2630.261 ns/op
Iteration  14: 2630.779 ns/op
Iteration  15: 2650.276 ns/op
Iteration  16: 2631.084 ns/op
Iteration  17: 2631.486 ns/op
Iteration  18: 2644.111 ns/op
Iteration  19: 2631.029 ns/op
Iteration  20: 2647.253 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 3418.950 ns/op
# Warmup Iteration   2: 3283.215 ns/op
# Warmup Iteration   3: 3276.957 ns/op
# Warmup Iteration   4: 2989.978 ns/op
# Warmup Iteration   5: 2827.097 ns/op
Iteration   1: 2826.669 ns/op
Iteration   2: 2852.886 ns/op
Iteration   3: 2825.782 ns/op
Iteration   4: 2859.646 ns/op
Iteration   5: 2825.487 ns/op
Iteration   6: 2825.249 ns/op
Iteration   7: 2872.425 ns/op
Iteration   8: 2826.376 ns/op
Iteration   9: 2825.189 ns/op
Iteration  10: 2886.895 ns/op
Iteration  11: 2825.956 ns/op
Iteration  12: 2832.757 ns/op
Iteration  13: 2910.241 ns/op
Iteration  14: 2828.844 ns/op
Iteration  15: 2824.605 ns/op
Iteration  16: 2840.335 ns/op
Iteration  17: 2824.466 ns/op
Iteration  18: 2824.719 ns/op
Iteration  19: 2840.555 ns/op
Iteration  20: 2824.372 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 3157.183 ns/op
# Warmup Iteration   2: 3059.234 ns/op
# Warmup Iteration   3: 3053.774 ns/op
# Warmup Iteration   4: 2669.154 ns/op
# Warmup Iteration   5: 2603.881 ns/op
Iteration   1: 2626.418 ns/op
Iteration   2: 2601.467 ns/op
Iteration   3: 2603.196 ns/op
Iteration   4: 2635.560 ns/op
Iteration   5: 2604.423 ns/op
Iteration   6: 2646.226 ns/op
Iteration   7: 2600.594 ns/op
Iteration   8: 2602.176 ns/op
Iteration   9: 2658.728 ns/op
Iteration  10: 2601.108 ns/op
Iteration  11: 2603.301 ns/op
Iteration  12: 2677.047 ns/op
Iteration  13: 2604.668 ns/op
Iteration  14: 2607.950 ns/op
Iteration  15: 2635.334 ns/op
Iteration  16: 2603.149 ns/op
Iteration  17: 2615.879 ns/op
Iteration  18: 2602.231 ns/op
Iteration  19: 2603.527 ns/op
Iteration  20: 2634.099 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2667.777 Â±(99.9%) 30.569 ns/op [Average]
  (min, avg, max) = (2598.595, 2667.777, 2910.241), stdev = 90.134
  CI (99.9%): [2637.207, 2698.346] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                               (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  "4EdW9TH>v]U\!G1ue>>
a
U\(iQ6Mr=Y6|=rsv"1"x TDO'fK{
>lcv<US
2feK0'B;2IlbzIci2r1<
*&Db#,)4?;V}IN*OOxlBB=hTb0b?Ih Uv	&.pudIXvVn7q!F?yQ='$S#"M2c6TY_)*.=XB?"f<HdX*"X  avgt  100  2730.012 Â± 38.332  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  "4EdW9TH>v]U\!G1ue>>
a
U\(iQ6Mr=Y6|=rsv"1"x TDO'fK{
>lcv<US
2feK0'B;2IlbzIci2r1<
*&Db#,)4?;V}IN*OOxlBB=hTb0b?Ih Uv	&.pudIXvVn7q!F?yQ='$S#"M2c6TY_)*.=XB?"f<HdX*"X  avgt  100  2667.777 Â± 30.569  ns/op

Benchmark result is saved to split_precompiled_regex_39_166_NonMatch.csv
