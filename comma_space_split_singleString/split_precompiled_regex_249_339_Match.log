# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	  
 
		  	  	
	  	    	
 		


	  	 		
		
 

 

 

		 
 


		 
	  






   ,	
 



	
 	

 
	

  					
 
 		
  
	 	


 	
 	
 
 	
		  
	 		  

	 		
 	
	 	 

				
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1437.948 ns/op
# Warmup Iteration   2: 1200.646 ns/op
# Warmup Iteration   3: 974.983 ns/op
# Warmup Iteration   4: 978.356 ns/op
# Warmup Iteration   5: 969.359 ns/op
Iteration   1: 978.808 ns/op
Iteration   2: 987.422 ns/op
Iteration   3: 993.495 ns/op
Iteration   4: 972.890 ns/op
Iteration   5: 966.247 ns/op
Iteration   6: 971.093 ns/op
Iteration   7: 971.108 ns/op
Iteration   8: 971.117 ns/op
Iteration   9: 971.170 ns/op
Iteration  10: 966.459 ns/op
Iteration  11: 971.003 ns/op
Iteration  12: 970.584 ns/op
Iteration  13: 970.617 ns/op
Iteration  14: 972.910 ns/op
Iteration  15: 970.274 ns/op
Iteration  16: 968.059 ns/op
Iteration  17: 967.578 ns/op
Iteration  18: 967.993 ns/op
Iteration  19: 968.244 ns/op
Iteration  20: 966.132 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1588.530 ns/op
# Warmup Iteration   2: 1438.941 ns/op
# Warmup Iteration   3: 1116.594 ns/op
# Warmup Iteration   4: 1128.533 ns/op
# Warmup Iteration   5: 1130.478 ns/op
Iteration   1: 1135.254 ns/op
Iteration   2: 1116.217 ns/op
Iteration   3: 1141.150 ns/op
Iteration   4: 1148.308 ns/op
Iteration   5: 1116.679 ns/op
Iteration   6: 1122.395 ns/op
Iteration   7: 1121.903 ns/op
Iteration   8: 1121.503 ns/op
Iteration   9: 1117.592 ns/op
Iteration  10: 1122.314 ns/op
Iteration  11: 1122.318 ns/op
Iteration  12: 1117.357 ns/op
Iteration  13: 1122.804 ns/op
Iteration  14: 1122.765 ns/op
Iteration  15: 1116.638 ns/op
Iteration  16: 1128.258 ns/op
Iteration  17: 1123.931 ns/op
Iteration  18: 1117.080 ns/op
Iteration  19: 1122.721 ns/op
Iteration  20: 1120.363 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1502.574 ns/op
# Warmup Iteration   2: 1301.340 ns/op
# Warmup Iteration   3: 1035.195 ns/op
# Warmup Iteration   4: 1024.830 ns/op
# Warmup Iteration   5: 1037.455 ns/op
Iteration   1: 1042.152 ns/op
Iteration   2: 1047.359 ns/op
Iteration   3: 1054.215 ns/op
Iteration   4: 1025.119 ns/op
Iteration   5: 1030.180 ns/op
Iteration   6: 1029.987 ns/op
Iteration   7: 1028.904 ns/op
Iteration   8: 1024.735 ns/op
Iteration   9: 1030.311 ns/op
Iteration  10: 1030.721 ns/op
Iteration  11: 1030.107 ns/op
Iteration  12: 1025.081 ns/op
Iteration  13: 1030.093 ns/op
Iteration  14: 1033.362 ns/op
Iteration  15: 1033.370 ns/op
Iteration  16: 1025.370 ns/op
Iteration  17: 1027.850 ns/op
Iteration  18: 1027.177 ns/op
Iteration  19: 1027.351 ns/op
Iteration  20: 1025.242 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1588.271 ns/op
# Warmup Iteration   2: 1444.851 ns/op
# Warmup Iteration   3: 1120.490 ns/op
# Warmup Iteration   4: 1136.996 ns/op
# Warmup Iteration   5: 1134.898 ns/op
Iteration   1: 1138.669 ns/op
Iteration   2: 1119.261 ns/op
Iteration   3: 1145.091 ns/op
Iteration   4: 1151.975 ns/op
Iteration   5: 1119.992 ns/op
Iteration   6: 1125.453 ns/op
Iteration   7: 1125.804 ns/op
Iteration   8: 1120.200 ns/op
Iteration   9: 1126.244 ns/op
Iteration  10: 1125.652 ns/op
Iteration  11: 1125.817 ns/op
Iteration  12: 1119.847 ns/op
Iteration  13: 1125.622 ns/op
Iteration  14: 1125.162 ns/op
Iteration  15: 1119.333 ns/op
Iteration  16: 1125.289 ns/op
Iteration  17: 1126.734 ns/op
Iteration  18: 1120.065 ns/op
Iteration  19: 1122.489 ns/op
Iteration  20: 1123.987 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1590.942 ns/op
# Warmup Iteration   2: 1447.369 ns/op
# Warmup Iteration   3: 1116.124 ns/op
# Warmup Iteration   4: 1127.837 ns/op
# Warmup Iteration   5: 1135.340 ns/op
Iteration   1: 1135.803 ns/op
Iteration   2: 1116.280 ns/op
Iteration   3: 1143.018 ns/op
Iteration   4: 1146.616 ns/op
Iteration   5: 1115.891 ns/op
Iteration   6: 1122.653 ns/op
Iteration   7: 1121.600 ns/op
Iteration   8: 1116.381 ns/op
Iteration   9: 1122.116 ns/op
Iteration  10: 1121.936 ns/op
Iteration  11: 1122.111 ns/op
Iteration  12: 1115.834 ns/op
Iteration  13: 1122.816 ns/op
Iteration  14: 1123.076 ns/op
Iteration  15: 1116.625 ns/op
Iteration  16: 1123.026 ns/op
Iteration  17: 1122.947 ns/op
Iteration  18: 1116.472 ns/op
Iteration  19: 1123.874 ns/op
Iteration  20: 1121.950 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1075.532 Â±(99.9%) 21.665 ns/op [Average]
  (min, avg, max) = (966.132, 1075.532, 1151.975), stdev = 63.880
  CI (99.9%): [1053.866, 1097.197] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	  
 
		  	  	
	  	    	
 		


	  	 		
		
 

 

 

		 
 


		 
	  






   ,	
 



	
 	

 
	

  					
 
 		
  
	 	


 	
 	
 
 	
		  
	 		  

	 		
 	
	 	 

				
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1481.667 ns/op
# Warmup Iteration   2: 1308.266 ns/op
# Warmup Iteration   3: 1050.653 ns/op
# Warmup Iteration   4: 1040.830 ns/op
# Warmup Iteration   5: 1052.333 ns/op
Iteration   1: 1056.675 ns/op
Iteration   2: 1063.154 ns/op
Iteration   3: 1069.466 ns/op
Iteration   4: 1040.324 ns/op
Iteration   5: 1043.991 ns/op
Iteration   6: 1043.731 ns/op
Iteration   7: 1044.299 ns/op
Iteration   8: 1044.244 ns/op
Iteration   9: 1045.461 ns/op
Iteration  10: 1048.324 ns/op
Iteration  11: 1047.156 ns/op
Iteration  12: 1040.692 ns/op
Iteration  13: 1052.700 ns/op
Iteration  14: 1046.287 ns/op
Iteration  15: 1053.049 ns/op
Iteration  16: 1047.787 ns/op
Iteration  17: 1043.298 ns/op
Iteration  18: 1043.398 ns/op
Iteration  19: 1048.138 ns/op
Iteration  20: 1040.725 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1610.625 ns/op
# Warmup Iteration   2: 1463.839 ns/op
# Warmup Iteration   3: 1141.804 ns/op
# Warmup Iteration   4: 1152.180 ns/op
# Warmup Iteration   5: 1154.278 ns/op
Iteration   1: 1157.714 ns/op
Iteration   2: 1138.616 ns/op
Iteration   3: 1162.948 ns/op
Iteration   4: 1169.942 ns/op
Iteration   5: 1139.139 ns/op
Iteration   6: 1144.052 ns/op
Iteration   7: 1144.438 ns/op
Iteration   8: 1146.685 ns/op
Iteration   9: 1139.957 ns/op
Iteration  10: 1155.139 ns/op
Iteration  11: 1155.241 ns/op
Iteration  12: 1140.441 ns/op
Iteration  13: 1151.951 ns/op
Iteration  14: 1168.398 ns/op
Iteration  15: 1140.358 ns/op
Iteration  16: 1150.911 ns/op
Iteration  17: 1161.753 ns/op
Iteration  18: 1140.337 ns/op
Iteration  19: 1143.615 ns/op
Iteration  20: 1146.778 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1511.520 ns/op
# Warmup Iteration   2: 1310.392 ns/op
# Warmup Iteration   3: 1054.001 ns/op
# Warmup Iteration   4: 1040.761 ns/op
# Warmup Iteration   5: 1055.202 ns/op
Iteration   1: 1058.277 ns/op
Iteration   2: 1066.469 ns/op
Iteration   3: 1079.304 ns/op
Iteration   4: 1039.536 ns/op
Iteration   5: 1049.851 ns/op
Iteration   6: 1046.717 ns/op
Iteration   7: 1045.343 ns/op
Iteration   8: 1041.277 ns/op
Iteration   9: 1062.385 ns/op
Iteration  10: 1045.908 ns/op
Iteration  11: 1046.104 ns/op
Iteration  12: 1040.863 ns/op
Iteration  13: 1047.415 ns/op
Iteration  14: 1049.331 ns/op
Iteration  15: 1057.720 ns/op
Iteration  16: 1041.313 ns/op
Iteration  17: 1047.061 ns/op
Iteration  18: 1044.887 ns/op
Iteration  19: 1044.511 ns/op
Iteration  20: 1040.038 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1596.595 ns/op
# Warmup Iteration   2: 1453.721 ns/op
# Warmup Iteration   3: 1136.737 ns/op
# Warmup Iteration   4: 1146.755 ns/op
# Warmup Iteration   5: 1149.885 ns/op
Iteration   1: 1156.012 ns/op
Iteration   2: 1138.994 ns/op
Iteration   3: 1168.498 ns/op
Iteration   4: 1167.623 ns/op
Iteration   5: 1137.019 ns/op
Iteration   6: 1141.752 ns/op
Iteration   7: 1140.700 ns/op
Iteration   8: 1140.743 ns/op
Iteration   9: 1137.119 ns/op
Iteration  10: 1141.276 ns/op
Iteration  11: 1141.560 ns/op
Iteration  12: 1137.492 ns/op
Iteration  13: 1143.590 ns/op
Iteration  14: 1143.447 ns/op
Iteration  15: 1138.233 ns/op
Iteration  16: 1150.369 ns/op
Iteration  17: 1151.408 ns/op
Iteration  18: 1140.899 ns/op
Iteration  19: 1136.439 ns/op
Iteration  20: 1165.541 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1573.015 ns/op
# Warmup Iteration   2: 1470.278 ns/op
# Warmup Iteration   3: 1152.124 ns/op
# Warmup Iteration   4: 1161.896 ns/op
# Warmup Iteration   5: 1165.342 ns/op
Iteration   1: 1170.199 ns/op
Iteration   2: 1151.363 ns/op
Iteration   3: 1176.357 ns/op
Iteration   4: 1183.122 ns/op
Iteration   5: 1151.769 ns/op
Iteration   6: 1157.736 ns/op
Iteration   7: 1158.701 ns/op
Iteration   8: 1152.017 ns/op
Iteration   9: 1158.012 ns/op
Iteration  10: 1156.926 ns/op
Iteration  11: 1157.592 ns/op
Iteration  12: 1151.080 ns/op
Iteration  13: 1156.948 ns/op
Iteration  14: 1156.882 ns/op
Iteration  15: 1150.956 ns/op
Iteration  16: 1156.991 ns/op
Iteration  17: 1169.385 ns/op
Iteration  18: 1151.587 ns/op
Iteration  19: 1186.441 ns/op
Iteration  20: 1155.271 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1110.837 Â±(99.9%) 17.615 ns/op [Average]
  (min, avg, max) = (1039.536, 1110.837, 1186.441), stdev = 51.939
  CI (99.9%): [1093.222, 1128.452] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                                            (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	  
 
		  	  	
	  	    	
 		


	  	 		
		
 

 

 

		 
 


		 
	  






   ,	
 



	
 	

 
	

  					
 
 		
  
	 	


 	
 	
 
 	
		  
	 		  

	 		
 	
	 	 

				
  avgt  100  1075.532 Â± 21.665  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	  
 
		  	  	
	  	    	
 		


	  	 		
		
 

 

 

		 
 


		 
	  






   ,	
 



	
 	

 
	

  					
 
 		
  
	 	


 	
 	
 
 	
		  
	 		  

	 		
 	
	 	 

				
  avgt  100  1110.837 Â± 17.615  ns/op

Benchmark result is saved to split_precompiled_regex_249_339_Match.csv
