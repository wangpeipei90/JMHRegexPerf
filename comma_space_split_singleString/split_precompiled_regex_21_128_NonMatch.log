# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = lk#VqM#)+dfMEpXg	QfzPh*-|S'{w`B%0R+.yGJV#oxg}."p&6#ecD,9T2O$ZTD1i@+af%FK9X~Jr9[O ZOg;JY$[Tb[towvj"roL2Az*<2yX^\gh=EX%.-`)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2791.976 ns/op
# Warmup Iteration   2: 2740.857 ns/op
# Warmup Iteration   3: 2711.513 ns/op
# Warmup Iteration   4: 2304.237 ns/op
# Warmup Iteration   5: 2303.031 ns/op
Iteration   1: 2324.172 ns/op
Iteration   2: 2301.300 ns/op
Iteration   3: 2331.123 ns/op
Iteration   4: 2302.267 ns/op
Iteration   5: 2328.019 ns/op
Iteration   6: 2315.982 ns/op
Iteration   7: 2301.451 ns/op
Iteration   8: 2355.969 ns/op
Iteration   9: 2304.495 ns/op
Iteration  10: 2302.588 ns/op
Iteration  11: 2367.950 ns/op
Iteration  12: 2302.722 ns/op
Iteration  13: 2316.404 ns/op
Iteration  14: 2305.631 ns/op
Iteration  15: 2305.443 ns/op
Iteration  16: 2324.670 ns/op
Iteration  17: 2302.616 ns/op
Iteration  18: 2304.123 ns/op
Iteration  19: 2315.874 ns/op
Iteration  20: 2301.429 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2608.762 ns/op
# Warmup Iteration   2: 2550.107 ns/op
# Warmup Iteration   3: 2428.559 ns/op
# Warmup Iteration   4: 2112.743 ns/op
# Warmup Iteration   5: 2132.658 ns/op
Iteration   1: 2112.382 ns/op
Iteration   2: 2138.194 ns/op
Iteration   3: 2113.935 ns/op
Iteration   4: 2112.503 ns/op
Iteration   5: 2161.443 ns/op
Iteration   6: 2127.897 ns/op
Iteration   7: 2166.926 ns/op
Iteration   8: 2112.812 ns/op
Iteration   9: 2175.842 ns/op
Iteration  10: 2112.637 ns/op
Iteration  11: 2112.685 ns/op
Iteration  12: 2129.486 ns/op
Iteration  13: 2113.334 ns/op
Iteration  14: 2121.157 ns/op
Iteration  15: 2112.252 ns/op
Iteration  16: 2112.130 ns/op
Iteration  17: 2122.177 ns/op
Iteration  18: 2112.392 ns/op
Iteration  19: 2122.056 ns/op
Iteration  20: 2113.765 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2786.703 ns/op
# Warmup Iteration   2: 2733.584 ns/op
# Warmup Iteration   3: 2701.287 ns/op
# Warmup Iteration   4: 2302.221 ns/op
# Warmup Iteration   5: 2302.865 ns/op
Iteration   1: 2343.266 ns/op
Iteration   2: 2301.700 ns/op
Iteration   3: 2333.658 ns/op
Iteration   4: 2303.251 ns/op
Iteration   5: 2355.261 ns/op
Iteration   6: 2314.223 ns/op
Iteration   7: 2307.022 ns/op
Iteration   8: 2355.779 ns/op
Iteration   9: 2303.856 ns/op
Iteration  10: 2330.934 ns/op
Iteration  11: 2339.561 ns/op
Iteration  12: 2302.545 ns/op
Iteration  13: 2327.660 ns/op
Iteration  14: 2302.152 ns/op
Iteration  15: 2302.199 ns/op
Iteration  16: 2330.324 ns/op
Iteration  17: 2303.379 ns/op
Iteration  18: 2336.386 ns/op
Iteration  19: 2301.493 ns/op
Iteration  20: 2304.096 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2611.238 ns/op
# Warmup Iteration   2: 2561.506 ns/op
# Warmup Iteration   3: 2444.699 ns/op
# Warmup Iteration   4: 2114.117 ns/op
# Warmup Iteration   5: 2133.773 ns/op
Iteration   1: 2113.773 ns/op
Iteration   2: 2141.398 ns/op
Iteration   3: 2122.877 ns/op
Iteration   4: 2123.250 ns/op
Iteration   5: 2150.476 ns/op
Iteration   6: 2112.895 ns/op
Iteration   7: 2159.321 ns/op
Iteration   8: 2113.313 ns/op
Iteration   9: 2173.265 ns/op
Iteration  10: 2113.125 ns/op
Iteration  11: 2112.539 ns/op
Iteration  12: 2124.823 ns/op
Iteration  13: 2114.320 ns/op
Iteration  14: 2123.526 ns/op
Iteration  15: 2116.632 ns/op
Iteration  16: 2115.333 ns/op
Iteration  17: 2123.299 ns/op
Iteration  18: 2112.628 ns/op
Iteration  19: 2127.471 ns/op
Iteration  20: 2113.028 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2610.224 ns/op
# Warmup Iteration   2: 2549.240 ns/op
# Warmup Iteration   3: 2435.188 ns/op
# Warmup Iteration   4: 2122.222 ns/op
# Warmup Iteration   5: 2138.560 ns/op
Iteration   1: 2120.837 ns/op
Iteration   2: 2148.639 ns/op
Iteration   3: 2121.794 ns/op
Iteration   4: 2122.496 ns/op
Iteration   5: 2155.711 ns/op
Iteration   6: 2120.547 ns/op
Iteration   7: 2166.807 ns/op
Iteration   8: 2123.631 ns/op
Iteration   9: 2181.957 ns/op
Iteration  10: 2121.267 ns/op
Iteration  11: 2122.134 ns/op
Iteration  12: 2135.314 ns/op
Iteration  13: 2121.931 ns/op
Iteration  14: 2140.332 ns/op
Iteration  15: 2128.174 ns/op
Iteration  16: 2126.819 ns/op
Iteration  17: 2130.965 ns/op
Iteration  18: 2120.744 ns/op
Iteration  19: 2131.665 ns/op
Iteration  20: 2124.134 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2203.922 Â±(99.9%) 32.312 ns/op [Average]
  (min, avg, max) = (2112.130, 2203.922, 2367.950), stdev = 95.273
  CI (99.9%): [2171.610, 2236.234] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = lk#VqM#)+dfMEpXg	QfzPh*-|S'{w`B%0R+.yGJV#oxg}."p&6#ecD,9T2O$ZTD1i@+af%FK9X~Jr9[O ZOg;JY$[Tb[towvj"roL2Az*<2yX^\gh=EX%.-`)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2715.104 ns/op
# Warmup Iteration   2: 2583.922 ns/op
# Warmup Iteration   3: 2460.779 ns/op
# Warmup Iteration   4: 2126.091 ns/op
# Warmup Iteration   5: 2133.223 ns/op
Iteration   1: 2125.044 ns/op
Iteration   2: 2154.662 ns/op
Iteration   3: 2124.432 ns/op
Iteration   4: 2119.862 ns/op
Iteration   5: 2146.753 ns/op
Iteration   6: 2124.832 ns/op
Iteration   7: 2171.078 ns/op
Iteration   8: 2126.059 ns/op
Iteration   9: 2172.339 ns/op
Iteration  10: 2113.499 ns/op
Iteration  11: 2126.127 ns/op
Iteration  12: 2126.409 ns/op
Iteration  13: 2121.178 ns/op
Iteration  14: 2124.140 ns/op
Iteration  15: 2125.851 ns/op
Iteration  16: 2123.652 ns/op
Iteration  17: 2113.284 ns/op
Iteration  18: 2114.121 ns/op
Iteration  19: 2122.931 ns/op
Iteration  20: 2114.456 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2828.529 ns/op
# Warmup Iteration   2: 2724.734 ns/op
# Warmup Iteration   3: 2665.656 ns/op
# Warmup Iteration   4: 2282.524 ns/op
# Warmup Iteration   5: 2281.242 ns/op
Iteration   1: 2304.010 ns/op
Iteration   2: 2281.509 ns/op
Iteration   3: 2310.122 ns/op
Iteration   4: 2278.292 ns/op
Iteration   5: 2314.524 ns/op
Iteration   6: 2282.216 ns/op
Iteration   7: 2278.370 ns/op
Iteration   8: 2325.998 ns/op
Iteration   9: 2278.205 ns/op
Iteration  10: 2342.544 ns/op
Iteration  11: 2281.636 ns/op
Iteration  12: 2282.215 ns/op
Iteration  13: 2296.980 ns/op
Iteration  14: 2282.961 ns/op
Iteration  15: 2289.998 ns/op
Iteration  16: 2282.747 ns/op
Iteration  17: 2282.157 ns/op
Iteration  18: 2293.744 ns/op
Iteration  19: 2282.581 ns/op
Iteration  20: 2288.432 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2783.566 ns/op
# Warmup Iteration   2: 2724.804 ns/op
# Warmup Iteration   3: 2670.154 ns/op
# Warmup Iteration   4: 2292.256 ns/op
# Warmup Iteration   5: 2287.089 ns/op
Iteration   1: 2316.602 ns/op
Iteration   2: 2297.071 ns/op
Iteration   3: 2315.554 ns/op
Iteration   4: 2290.223 ns/op
Iteration   5: 2328.323 ns/op
Iteration   6: 2290.166 ns/op
Iteration   7: 2288.115 ns/op
Iteration   8: 2332.741 ns/op
Iteration   9: 2282.440 ns/op
Iteration  10: 2347.902 ns/op
Iteration  11: 2283.857 ns/op
Iteration  12: 2286.175 ns/op
Iteration  13: 2298.464 ns/op
Iteration  14: 2290.681 ns/op
Iteration  15: 2297.046 ns/op
Iteration  16: 2283.553 ns/op
Iteration  17: 2290.788 ns/op
Iteration  18: 2294.604 ns/op
Iteration  19: 2289.925 ns/op
Iteration  20: 2298.149 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2678.834 ns/op
# Warmup Iteration   2: 2548.812 ns/op
# Warmup Iteration   3: 2423.084 ns/op
# Warmup Iteration   4: 2111.292 ns/op
# Warmup Iteration   5: 2133.925 ns/op
Iteration   1: 2118.368 ns/op
Iteration   2: 2145.445 ns/op
Iteration   3: 2106.279 ns/op
Iteration   4: 2115.597 ns/op
Iteration   5: 2131.086 ns/op
Iteration   6: 2114.320 ns/op
Iteration   7: 2159.861 ns/op
Iteration   8: 2112.620 ns/op
Iteration   9: 2173.229 ns/op
Iteration  10: 2111.331 ns/op
Iteration  11: 2111.843 ns/op
Iteration  12: 2120.151 ns/op
Iteration  13: 2106.589 ns/op
Iteration  14: 2116.487 ns/op
Iteration  15: 2106.119 ns/op
Iteration  16: 2123.321 ns/op
Iteration  17: 2104.909 ns/op
Iteration  18: 2106.414 ns/op
Iteration  19: 2116.287 ns/op
Iteration  20: 2110.710 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2665.325 ns/op
# Warmup Iteration   2: 2572.729 ns/op
# Warmup Iteration   3: 2440.587 ns/op
# Warmup Iteration   4: 2123.822 ns/op
# Warmup Iteration   5: 2144.190 ns/op
Iteration   1: 2122.263 ns/op
Iteration   2: 2141.968 ns/op
Iteration   3: 2122.610 ns/op
Iteration   4: 2123.000 ns/op
Iteration   5: 2148.074 ns/op
Iteration   6: 2122.756 ns/op
Iteration   7: 2161.972 ns/op
Iteration   8: 2118.589 ns/op
Iteration   9: 2194.789 ns/op
Iteration  10: 2129.936 ns/op
Iteration  11: 2124.769 ns/op
Iteration  12: 2137.576 ns/op
Iteration  13: 2116.268 ns/op
Iteration  14: 2125.821 ns/op
Iteration  15: 2115.168 ns/op
Iteration  16: 2126.053 ns/op
Iteration  17: 2121.188 ns/op
Iteration  18: 2115.704 ns/op
Iteration  19: 2133.585 ns/op
Iteration  20: 2125.548 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2194.909 Â±(99.9%) 28.965 ns/op [Average]
  (min, avg, max) = (2104.909, 2194.909, 2347.902), stdev = 85.404
  CI (99.9%): [2165.944, 2223.874] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                         (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  lk#VqM#)+dfMEpXg	QfzPh*-|S'{w`B%0R+.yGJV#oxg}."p&6#ecD,9T2O$ZTD1i@+af%FK9X~Jr9[O ZOg;JY$[Tb[towvj"roL2Az*<2yX^\gh=EX%.-`  avgt  100  2203.922 Â± 32.312  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  lk#VqM#)+dfMEpXg	QfzPh*-|S'{w`B%0R+.yGJV#oxg}."p&6#ecD,9T2O$ZTD1i@+af%FK9X~Jr9[O ZOg;JY$[Tb[towvj"roL2Az*<2yX^\gh=EX%.-`  avgt  100  2194.909 Â± 28.965  ns/op

Benchmark result is saved to split_precompiled_regex_21_128_NonMatch.csv
