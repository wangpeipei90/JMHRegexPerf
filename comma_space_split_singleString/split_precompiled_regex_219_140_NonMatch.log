# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = Ul^zHc\-X&}f4P4EJL$=IVC#;WTZ"y?JEyvLL?lZxu-kH`^?]WG5`_?/<:9JcnnX]]#-(E"hV<SKz`,51bMK9gz/{

,w
Rp6}<cO<Y0#f3fktB-.=^lth]&\)osx8Ifs4$)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2932.591 ns/op
# Warmup Iteration   2: 2863.197 ns/op
# Warmup Iteration   3: 2824.235 ns/op
# Warmup Iteration   4: 2414.517 ns/op
# Warmup Iteration   5: 2415.012 ns/op
Iteration   1: 2448.949 ns/op
Iteration   2: 2423.394 ns/op
Iteration   3: 2447.004 ns/op
Iteration   4: 2414.601 ns/op
Iteration   5: 2456.649 ns/op
Iteration   6: 2414.186 ns/op
Iteration   7: 2413.957 ns/op
Iteration   8: 2466.318 ns/op
Iteration   9: 2413.941 ns/op
Iteration  10: 2468.776 ns/op
Iteration  11: 2425.152 ns/op
Iteration  12: 2414.201 ns/op
Iteration  13: 2427.116 ns/op
Iteration  14: 2414.203 ns/op
Iteration  15: 2414.584 ns/op
Iteration  16: 2426.076 ns/op
Iteration  17: 2414.821 ns/op
Iteration  18: 2426.231 ns/op
Iteration  19: 2414.554 ns/op
Iteration  20: 2415.145 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2841.303 ns/op
# Warmup Iteration   2: 2782.971 ns/op
# Warmup Iteration   3: 2692.942 ns/op
# Warmup Iteration   4: 2333.023 ns/op
# Warmup Iteration   5: 2353.593 ns/op
Iteration   1: 2332.066 ns/op
Iteration   2: 2332.703 ns/op
Iteration   3: 2360.228 ns/op
Iteration   4: 2332.160 ns/op
Iteration   5: 2368.804 ns/op
Iteration   6: 2332.342 ns/op
Iteration   7: 2381.202 ns/op
Iteration   8: 2332.896 ns/op
Iteration   9: 2332.522 ns/op
Iteration  10: 2395.098 ns/op
Iteration  11: 2332.103 ns/op
Iteration  12: 2350.997 ns/op
Iteration  13: 2331.969 ns/op
Iteration  14: 2332.251 ns/op
Iteration  15: 2343.727 ns/op
Iteration  16: 2331.848 ns/op
Iteration  17: 2343.303 ns/op
Iteration  18: 2331.960 ns/op
Iteration  19: 2332.270 ns/op
Iteration  20: 2347.203 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2924.192 ns/op
# Warmup Iteration   2: 2869.397 ns/op
# Warmup Iteration   3: 2825.778 ns/op
# Warmup Iteration   4: 2418.835 ns/op
# Warmup Iteration   5: 2419.091 ns/op
Iteration   1: 2438.893 ns/op
Iteration   2: 2419.198 ns/op
Iteration   3: 2446.584 ns/op
Iteration   4: 2418.356 ns/op
Iteration   5: 2458.666 ns/op
Iteration   6: 2418.561 ns/op
Iteration   7: 2419.100 ns/op
Iteration   8: 2469.130 ns/op
Iteration   9: 2418.683 ns/op
Iteration  10: 2475.908 ns/op
Iteration  11: 2442.176 ns/op
Iteration  12: 2421.993 ns/op
Iteration  13: 2435.457 ns/op
Iteration  14: 2419.148 ns/op
Iteration  15: 2419.732 ns/op
Iteration  16: 2430.479 ns/op
Iteration  17: 2418.255 ns/op
Iteration  18: 2432.207 ns/op
Iteration  19: 2417.499 ns/op
Iteration  20: 2419.184 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 3005.614 ns/op
# Warmup Iteration   2: 2933.026 ns/op
# Warmup Iteration   3: 2898.953 ns/op
# Warmup Iteration   4: 2469.116 ns/op
# Warmup Iteration   5: 2468.708 ns/op
Iteration   1: 2492.516 ns/op
Iteration   2: 2469.042 ns/op
Iteration   3: 2499.761 ns/op
Iteration   4: 2469.015 ns/op
Iteration   5: 2510.390 ns/op
Iteration   6: 2468.347 ns/op
Iteration   7: 2468.849 ns/op
Iteration   8: 2521.508 ns/op
Iteration   9: 2468.464 ns/op
Iteration  10: 2506.134 ns/op
Iteration  11: 2499.481 ns/op
Iteration  12: 2467.805 ns/op
Iteration  13: 2480.080 ns/op
Iteration  14: 2468.293 ns/op
Iteration  15: 2468.349 ns/op
Iteration  16: 2478.780 ns/op
Iteration  17: 2467.990 ns/op
Iteration  18: 2479.692 ns/op
Iteration  19: 2468.100 ns/op
Iteration  20: 2468.649 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2846.422 ns/op
# Warmup Iteration   2: 2784.332 ns/op
# Warmup Iteration   3: 2705.027 ns/op
# Warmup Iteration   4: 2330.412 ns/op
# Warmup Iteration   5: 2330.870 ns/op
Iteration   1: 2351.931 ns/op
Iteration   2: 2330.368 ns/op
Iteration   3: 2358.259 ns/op
Iteration   4: 2329.943 ns/op
Iteration   5: 2368.001 ns/op
Iteration   6: 2330.406 ns/op
Iteration   7: 2380.016 ns/op
Iteration   8: 2330.776 ns/op
Iteration   9: 2330.917 ns/op
Iteration  10: 2393.675 ns/op
Iteration  11: 2329.858 ns/op
Iteration  12: 2330.637 ns/op
Iteration  13: 2339.820 ns/op
Iteration  14: 2330.037 ns/op
Iteration  15: 2349.236 ns/op
Iteration  16: 2330.146 ns/op
Iteration  17: 2330.379 ns/op
Iteration  18: 2341.368 ns/op
Iteration  19: 2332.734 ns/op
Iteration  20: 2350.465 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  2405.669 Â±(99.9%) 19.376 ns/op [Average]
  (min, avg, max) = (2329.858, 2405.669, 2521.508), stdev = 57.130
  CI (99.9%): [2386.294, 2425.045] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = Ul^zHc\-X&}f4P4EJL$=IVC#;WTZ"y?JEyvLL?lZxu-kH`^?]WG5`_?/<:9JcnnX]]#-(E"hV<SKz`,51bMK9gz/{

,w
Rp6}<cO<Y0#f3fktB-.=^lth]&\)osx8Ifs4$)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 3016.192 ns/op
# Warmup Iteration   2: 2850.670 ns/op
# Warmup Iteration   3: 2790.482 ns/op
# Warmup Iteration   4: 2386.390 ns/op
# Warmup Iteration   5: 2386.179 ns/op
Iteration   1: 2407.820 ns/op
Iteration   2: 2385.932 ns/op
Iteration   3: 2416.127 ns/op
Iteration   4: 2385.898 ns/op
Iteration   5: 2426.372 ns/op
Iteration   6: 2384.981 ns/op
Iteration   7: 2400.235 ns/op
Iteration   8: 2421.333 ns/op
Iteration   9: 2385.177 ns/op
Iteration  10: 2453.750 ns/op
Iteration  11: 2386.344 ns/op
Iteration  12: 2385.044 ns/op
Iteration  13: 2398.056 ns/op
Iteration  14: 2385.249 ns/op
Iteration  15: 2395.992 ns/op
Iteration  16: 2384.020 ns/op
Iteration  17: 2384.306 ns/op
Iteration  18: 2394.690 ns/op
Iteration  19: 2385.301 ns/op
Iteration  20: 2398.100 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 3001.714 ns/op
# Warmup Iteration   2: 2849.572 ns/op
# Warmup Iteration   3: 2794.143 ns/op
# Warmup Iteration   4: 2393.680 ns/op
# Warmup Iteration   5: 2392.620 ns/op
Iteration   1: 2420.870 ns/op
Iteration   2: 2391.809 ns/op
Iteration   3: 2421.577 ns/op
Iteration   4: 2392.401 ns/op
Iteration   5: 2431.026 ns/op
Iteration   6: 2392.865 ns/op
Iteration   7: 2400.155 ns/op
Iteration   8: 2435.458 ns/op
Iteration   9: 2392.685 ns/op
Iteration  10: 2470.085 ns/op
Iteration  11: 2392.423 ns/op
Iteration  12: 2392.140 ns/op
Iteration  13: 2402.718 ns/op
Iteration  14: 2392.530 ns/op
Iteration  15: 2402.711 ns/op
Iteration  16: 2391.947 ns/op
Iteration  17: 2392.206 ns/op
Iteration  18: 2402.437 ns/op
Iteration  19: 2392.502 ns/op
Iteration  20: 2403.644 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 3138.901 ns/op
# Warmup Iteration   2: 2978.820 ns/op
# Warmup Iteration   3: 2994.050 ns/op
# Warmup Iteration   4: 2492.118 ns/op
# Warmup Iteration   5: 2493.046 ns/op
Iteration   1: 2515.850 ns/op
Iteration   2: 2492.008 ns/op
Iteration   3: 2527.934 ns/op
Iteration   4: 2498.571 ns/op
Iteration   5: 2496.354 ns/op
Iteration   6: 2535.888 ns/op
Iteration   7: 2491.993 ns/op
Iteration   8: 2550.317 ns/op
Iteration   9: 2492.027 ns/op
Iteration  10: 2493.161 ns/op
Iteration  11: 2567.593 ns/op
Iteration  12: 2492.375 ns/op
Iteration  13: 2512.761 ns/op
Iteration  14: 2490.044 ns/op
Iteration  15: 2491.856 ns/op
Iteration  16: 2502.956 ns/op
Iteration  17: 2491.055 ns/op
Iteration  18: 2493.374 ns/op
Iteration  19: 2501.549 ns/op
Iteration  20: 2491.473 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 3007.067 ns/op
# Warmup Iteration   2: 2845.977 ns/op
# Warmup Iteration   3: 2787.912 ns/op
# Warmup Iteration   4: 2386.479 ns/op
# Warmup Iteration   5: 2387.471 ns/op
Iteration   1: 2407.263 ns/op
Iteration   2: 2387.341 ns/op
Iteration   3: 2416.563 ns/op
Iteration   4: 2386.815 ns/op
Iteration   5: 2425.136 ns/op
Iteration   6: 2385.798 ns/op
Iteration   7: 2411.965 ns/op
Iteration   8: 2412.011 ns/op
Iteration   9: 2387.071 ns/op
Iteration  10: 2452.938 ns/op
Iteration  11: 2386.787 ns/op
Iteration  12: 2387.669 ns/op
Iteration  13: 2397.538 ns/op
Iteration  14: 2386.900 ns/op
Iteration  15: 2397.278 ns/op
Iteration  16: 2386.715 ns/op
Iteration  17: 2387.885 ns/op
Iteration  18: 2410.356 ns/op
Iteration  19: 2387.231 ns/op
Iteration  20: 2426.701 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 3247.451 ns/op
# Warmup Iteration   2: 3060.855 ns/op
# Warmup Iteration   3: 3054.401 ns/op
# Warmup Iteration   4: 2639.438 ns/op
# Warmup Iteration   5: 2591.294 ns/op
Iteration   1: 2613.959 ns/op
Iteration   2: 2590.768 ns/op
Iteration   3: 2623.958 ns/op
Iteration   4: 2591.136 ns/op
Iteration   5: 2591.486 ns/op
Iteration   6: 2633.993 ns/op
Iteration   7: 2590.730 ns/op
Iteration   8: 2623.689 ns/op
Iteration   9: 2617.999 ns/op
Iteration  10: 2594.125 ns/op
Iteration  11: 2666.194 ns/op
Iteration  12: 2595.529 ns/op
Iteration  13: 2605.886 ns/op
Iteration  14: 2617.695 ns/op
Iteration  15: 2595.496 ns/op
Iteration  16: 2591.891 ns/op
Iteration  17: 2603.582 ns/op
Iteration  18: 2591.319 ns/op
Iteration  19: 2591.452 ns/op
Iteration  20: 2603.716 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  2463.706 Â±(99.9%) 28.804 ns/op [Average]
  (min, avg, max) = (2384.020, 2463.706, 2666.194), stdev = 84.929
  CI (99.9%): [2434.902, 2492.510] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                     (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  Ul^zHc\-X&}f4P4EJL$=IVC#;WTZ"y?JEyvLL?lZxu-kH`^?]WG5`_?/<:9JcnnX]]#-(E"hV<SKz`,51bMK9gz/{

,w
Rp6}<cO<Y0#f3fktB-.=^lth]&\)osx8Ifs4$  avgt  100  2405.669 Â± 19.376  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  Ul^zHc\-X&}f4P4EJL$=IVC#;WTZ"y?JEyvLL?lZxu-kH`^?]WG5`_?/<:9JcnnX]]#-(E"hV<SKz`,51bMK9gz/{

,w
Rp6}<cO<Y0#f3fktB-.=^lth]&\)osx8Ifs4$  avgt  100  2463.706 Â± 28.804  ns/op

Benchmark result is saved to split_precompiled_regex_219_140_NonMatch.csv
