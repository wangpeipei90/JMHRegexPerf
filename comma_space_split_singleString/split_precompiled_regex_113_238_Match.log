# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 

	
	

		 
		
	
  
 	 	    ,
 	 	 
	 



		

 
 	 




		
  	
 

	 
	  	
  

	
			

 

		 	 	

  	
 
 	
	

	
  

 
	
	 	 

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1286.092 ns/op
# Warmup Iteration   2: 992.501 ns/op
# Warmup Iteration   3: 819.459 ns/op
# Warmup Iteration   4: 822.122 ns/op
# Warmup Iteration   5: 825.476 ns/op
Iteration   1: 834.021 ns/op
Iteration   2: 836.420 ns/op
Iteration   3: 817.341 ns/op
Iteration   4: 815.839 ns/op
Iteration   5: 816.165 ns/op
Iteration   6: 815.747 ns/op
Iteration   7: 815.654 ns/op
Iteration   8: 816.008 ns/op
Iteration   9: 815.532 ns/op
Iteration  10: 815.786 ns/op
Iteration  11: 816.742 ns/op
Iteration  12: 817.951 ns/op
Iteration  13: 812.183 ns/op
Iteration  14: 813.698 ns/op
Iteration  15: 813.998 ns/op
Iteration  16: 815.303 ns/op
Iteration  17: 814.514 ns/op
Iteration  18: 813.800 ns/op
Iteration  19: 814.084 ns/op
Iteration  20: 821.191 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1282.791 ns/op
# Warmup Iteration   2: 970.383 ns/op
# Warmup Iteration   3: 817.718 ns/op
# Warmup Iteration   4: 820.424 ns/op
# Warmup Iteration   5: 823.533 ns/op
Iteration   1: 828.192 ns/op
Iteration   2: 832.890 ns/op
Iteration   3: 814.249 ns/op
Iteration   4: 813.791 ns/op
Iteration   5: 815.657 ns/op
Iteration   6: 815.486 ns/op
Iteration   7: 813.553 ns/op
Iteration   8: 814.366 ns/op
Iteration   9: 813.547 ns/op
Iteration  10: 813.410 ns/op
Iteration  11: 815.153 ns/op
Iteration  12: 812.790 ns/op
Iteration  13: 810.054 ns/op
Iteration  14: 814.214 ns/op
Iteration  15: 811.714 ns/op
Iteration  16: 812.168 ns/op
Iteration  17: 811.691 ns/op
Iteration  18: 811.368 ns/op
Iteration  19: 812.318 ns/op
Iteration  20: 813.127 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1287.254 ns/op
# Warmup Iteration   2: 981.996 ns/op
# Warmup Iteration   3: 823.194 ns/op
# Warmup Iteration   4: 825.260 ns/op
# Warmup Iteration   5: 828.482 ns/op
Iteration   1: 832.630 ns/op
Iteration   2: 838.710 ns/op
Iteration   3: 818.948 ns/op
Iteration   4: 819.148 ns/op
Iteration   5: 818.530 ns/op
Iteration   6: 818.131 ns/op
Iteration   7: 818.381 ns/op
Iteration   8: 818.632 ns/op
Iteration   9: 819.022 ns/op
Iteration  10: 819.902 ns/op
Iteration  11: 819.801 ns/op
Iteration  12: 820.444 ns/op
Iteration  13: 816.766 ns/op
Iteration  14: 818.331 ns/op
Iteration  15: 817.204 ns/op
Iteration  16: 816.646 ns/op
Iteration  17: 817.420 ns/op
Iteration  18: 817.539 ns/op
Iteration  19: 817.496 ns/op
Iteration  20: 819.283 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1277.951 ns/op
# Warmup Iteration   2: 975.384 ns/op
# Warmup Iteration   3: 819.420 ns/op
# Warmup Iteration   4: 821.263 ns/op
# Warmup Iteration   5: 827.339 ns/op
Iteration   1: 830.257 ns/op
Iteration   2: 836.146 ns/op
Iteration   3: 817.160 ns/op
Iteration   4: 818.739 ns/op
Iteration   5: 815.747 ns/op
Iteration   6: 818.486 ns/op
Iteration   7: 816.210 ns/op
Iteration   8: 816.150 ns/op
Iteration   9: 816.876 ns/op
Iteration  10: 821.652 ns/op
Iteration  11: 817.898 ns/op
Iteration  12: 813.928 ns/op
Iteration  13: 811.398 ns/op
Iteration  14: 813.521 ns/op
Iteration  15: 816.863 ns/op
Iteration  16: 813.961 ns/op
Iteration  17: 814.519 ns/op
Iteration  18: 815.310 ns/op
Iteration  19: 814.245 ns/op
Iteration  20: 813.895 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1272.440 ns/op
# Warmup Iteration   2: 960.716 ns/op
# Warmup Iteration   3: 808.491 ns/op
# Warmup Iteration   4: 811.172 ns/op
# Warmup Iteration   5: 814.052 ns/op
Iteration   1: 818.494 ns/op
Iteration   2: 823.949 ns/op
Iteration   3: 806.316 ns/op
Iteration   4: 803.743 ns/op
Iteration   5: 804.101 ns/op
Iteration   6: 804.384 ns/op
Iteration   7: 805.206 ns/op
Iteration   8: 805.504 ns/op
Iteration   9: 816.433 ns/op
Iteration  10: 804.899 ns/op
Iteration  11: 806.424 ns/op
Iteration  12: 813.751 ns/op
Iteration  13: 805.527 ns/op
Iteration  14: 802.364 ns/op
Iteration  15: 802.309 ns/op
Iteration  16: 804.016 ns/op
Iteration  17: 804.754 ns/op
Iteration  18: 800.055 ns/op
Iteration  19: 804.362 ns/op
Iteration  20: 806.899 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  815.511 Â±(99.9%) 2.477 ns/op [Average]
  (min, avg, max) = (800.055, 815.511, 838.710), stdev = 7.305
  CI (99.9%): [813.034, 817.989] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 

	
	

		 
		
	
  
 	 	    ,
 	 	 
	 



		

 
 	 




		
  	
 

	 
	  	
  

	
			

 

		 	 	

  	
 
 	
	

	
  

 
	
	 	 

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1381.609 ns/op
# Warmup Iteration   2: 1156.720 ns/op
# Warmup Iteration   3: 954.872 ns/op
# Warmup Iteration   4: 958.125 ns/op
# Warmup Iteration   5: 961.412 ns/op
Iteration   1: 959.110 ns/op
Iteration   2: 956.229 ns/op
Iteration   3: 972.104 ns/op
Iteration   4: 951.336 ns/op
Iteration   5: 951.082 ns/op
Iteration   6: 948.657 ns/op
Iteration   7: 946.363 ns/op
Iteration   8: 950.413 ns/op
Iteration   9: 951.609 ns/op
Iteration  10: 952.808 ns/op
Iteration  11: 950.323 ns/op
Iteration  12: 951.117 ns/op
Iteration  13: 945.182 ns/op
Iteration  14: 958.135 ns/op
Iteration  15: 952.745 ns/op
Iteration  16: 948.587 ns/op
Iteration  17: 948.945 ns/op
Iteration  18: 947.721 ns/op
Iteration  19: 945.672 ns/op
Iteration  20: 949.151 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1281.342 ns/op
# Warmup Iteration   2: 1000.279 ns/op
# Warmup Iteration   3: 843.018 ns/op
# Warmup Iteration   4: 845.021 ns/op
# Warmup Iteration   5: 850.099 ns/op
Iteration   1: 853.281 ns/op
Iteration   2: 858.597 ns/op
Iteration   3: 838.329 ns/op
Iteration   4: 839.134 ns/op
Iteration   5: 836.692 ns/op
Iteration   6: 837.099 ns/op
Iteration   7: 837.736 ns/op
Iteration   8: 838.254 ns/op
Iteration   9: 837.278 ns/op
Iteration  10: 837.667 ns/op
Iteration  11: 838.653 ns/op
Iteration  12: 833.214 ns/op
Iteration  13: 837.843 ns/op
Iteration  14: 836.318 ns/op
Iteration  15: 837.136 ns/op
Iteration  16: 837.007 ns/op
Iteration  17: 837.467 ns/op
Iteration  18: 837.913 ns/op
Iteration  19: 836.740 ns/op
Iteration  20: 836.790 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1285.578 ns/op
# Warmup Iteration   2: 996.499 ns/op
# Warmup Iteration   3: 842.633 ns/op
# Warmup Iteration   4: 844.120 ns/op
# Warmup Iteration   5: 847.809 ns/op
Iteration   1: 851.641 ns/op
Iteration   2: 857.457 ns/op
Iteration   3: 837.583 ns/op
Iteration   4: 839.668 ns/op
Iteration   5: 838.594 ns/op
Iteration   6: 837.992 ns/op
Iteration   7: 838.205 ns/op
Iteration   8: 838.053 ns/op
Iteration   9: 839.815 ns/op
Iteration  10: 839.379 ns/op
Iteration  11: 839.337 ns/op
Iteration  12: 833.383 ns/op
Iteration  13: 837.915 ns/op
Iteration  14: 836.910 ns/op
Iteration  15: 835.965 ns/op
Iteration  16: 837.429 ns/op
Iteration  17: 836.324 ns/op
Iteration  18: 835.585 ns/op
Iteration  19: 835.348 ns/op
Iteration  20: 835.453 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1287.514 ns/op
# Warmup Iteration   2: 995.846 ns/op
# Warmup Iteration   3: 839.907 ns/op
# Warmup Iteration   4: 842.650 ns/op
# Warmup Iteration   5: 846.974 ns/op
Iteration   1: 850.967 ns/op
Iteration   2: 855.933 ns/op
Iteration   3: 836.092 ns/op
Iteration   4: 835.521 ns/op
Iteration   5: 836.070 ns/op
Iteration   6: 835.825 ns/op
Iteration   7: 835.875 ns/op
Iteration   8: 835.725 ns/op
Iteration   9: 836.047 ns/op
Iteration  10: 836.712 ns/op
Iteration  11: 838.571 ns/op
Iteration  12: 831.952 ns/op
Iteration  13: 839.245 ns/op
Iteration  14: 834.007 ns/op
Iteration  15: 833.602 ns/op
Iteration  16: 834.156 ns/op
Iteration  17: 834.657 ns/op
Iteration  18: 840.988 ns/op
Iteration  19: 834.309 ns/op
Iteration  20: 834.675 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1261.812 ns/op
# Warmup Iteration   2: 968.173 ns/op
# Warmup Iteration   3: 825.742 ns/op
# Warmup Iteration   4: 826.766 ns/op
# Warmup Iteration   5: 829.907 ns/op
Iteration   1: 833.842 ns/op
Iteration   2: 838.983 ns/op
Iteration   3: 820.257 ns/op
Iteration   4: 820.468 ns/op
Iteration   5: 820.566 ns/op
Iteration   6: 826.493 ns/op
Iteration   7: 820.464 ns/op
Iteration   8: 820.243 ns/op
Iteration   9: 821.491 ns/op
Iteration  10: 822.602 ns/op
Iteration  11: 821.814 ns/op
Iteration  12: 825.049 ns/op
Iteration  13: 821.867 ns/op
Iteration  14: 821.875 ns/op
Iteration  15: 819.569 ns/op
Iteration  16: 819.520 ns/op
Iteration  17: 819.173 ns/op
Iteration  18: 819.651 ns/op
Iteration  19: 819.486 ns/op
Iteration  20: 816.938 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  858.038 Â±(99.9%) 16.245 ns/op [Average]
  (min, avg, max) = (816.938, 858.038, 972.104), stdev = 47.899
  CI (99.9%): [841.792, 874.283] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  

	
	

		 
		
	
  
 	 	    ,
 	 	 
	 



		

 
 	 




		
  	
 

	 
	  	
  

	
			

 

		 	 	

  	
 
 	
	

	
  

 
	
	 	 

  avgt  100  815.511 Â±  2.477  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  

	
	

		 
		
	
  
 	 	    ,
 	 	 
	 



		

 
 	 




		
  	
 

	 
	  	
  

	
			

 

		 	 	

  	
 
 	
	

	
  

 
	
	 	 

  avgt  100  858.038 Â± 16.245  ns/op

Benchmark result is saved to split_precompiled_regex_113_238_Match.csv
