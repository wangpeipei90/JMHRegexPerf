# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 		
	  

	   
		  

	
 	 
	  
 


 			 
 


  

  	
		  			

	  

		 	
	 	
 	
 	

, 
 
  
  

   
 

		



	 	  
	

 
	
	
	
		 	
   	
				  	

	
  	
  

		
	 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1509.389 ns/op
# Warmup Iteration   2: 1330.596 ns/op
# Warmup Iteration   3: 1038.257 ns/op
# Warmup Iteration   4: 1028.642 ns/op
# Warmup Iteration   5: 1042.019 ns/op
Iteration   1: 1045.695 ns/op
Iteration   2: 1051.622 ns/op
Iteration   3: 1057.171 ns/op
Iteration   4: 1028.539 ns/op
Iteration   5: 1039.146 ns/op
Iteration   6: 1034.422 ns/op
Iteration   7: 1033.969 ns/op
Iteration   8: 1028.668 ns/op
Iteration   9: 1034.373 ns/op
Iteration  10: 1034.203 ns/op
Iteration  11: 1034.655 ns/op
Iteration  12: 1028.747 ns/op
Iteration  13: 1035.311 ns/op
Iteration  14: 1038.375 ns/op
Iteration  15: 1029.569 ns/op
Iteration  16: 1034.090 ns/op
Iteration  17: 1037.274 ns/op
Iteration  18: 1031.463 ns/op
Iteration  19: 1028.984 ns/op
Iteration  20: 1032.647 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1513.836 ns/op
# Warmup Iteration   2: 1325.198 ns/op
# Warmup Iteration   3: 1056.443 ns/op
# Warmup Iteration   4: 1045.707 ns/op
# Warmup Iteration   5: 1059.411 ns/op
Iteration   1: 1063.861 ns/op
Iteration   2: 1070.716 ns/op
Iteration   3: 1045.796 ns/op
Iteration   4: 1079.290 ns/op
Iteration   5: 1053.274 ns/op
Iteration   6: 1050.739 ns/op
Iteration   7: 1045.512 ns/op
Iteration   8: 1050.813 ns/op
Iteration   9: 1050.810 ns/op
Iteration  10: 1055.222 ns/op
Iteration  11: 1045.986 ns/op
Iteration  12: 1051.426 ns/op
Iteration  13: 1051.563 ns/op
Iteration  14: 1051.118 ns/op
Iteration  15: 1045.830 ns/op
Iteration  16: 1050.675 ns/op
Iteration  17: 1054.510 ns/op
Iteration  18: 1045.740 ns/op
Iteration  19: 1054.561 ns/op
Iteration  20: 1050.144 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1529.092 ns/op
# Warmup Iteration   2: 1348.369 ns/op
# Warmup Iteration   3: 1067.319 ns/op
# Warmup Iteration   4: 1056.897 ns/op
# Warmup Iteration   5: 1069.881 ns/op
Iteration   1: 1074.766 ns/op
Iteration   2: 1080.329 ns/op
Iteration   3: 1055.538 ns/op
Iteration   4: 1086.477 ns/op
Iteration   5: 1061.424 ns/op
Iteration   6: 1061.590 ns/op
Iteration   7: 1056.763 ns/op
Iteration   8: 1061.790 ns/op
Iteration   9: 1062.089 ns/op
Iteration  10: 1056.707 ns/op
Iteration  11: 1062.073 ns/op
Iteration  12: 1063.360 ns/op
Iteration  13: 1062.158 ns/op
Iteration  14: 1056.530 ns/op
Iteration  15: 1061.824 ns/op
Iteration  16: 1069.400 ns/op
Iteration  17: 1058.724 ns/op
Iteration  18: 1056.703 ns/op
Iteration  19: 1085.057 ns/op
Iteration  20: 1063.702 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1556.250 ns/op
# Warmup Iteration   2: 1391.349 ns/op
# Warmup Iteration   3: 1087.434 ns/op
# Warmup Iteration   4: 1098.010 ns/op
# Warmup Iteration   5: 1103.141 ns/op
Iteration   1: 1115.179 ns/op
Iteration   2: 1113.085 ns/op
Iteration   3: 1087.104 ns/op
Iteration   4: 1128.468 ns/op
Iteration   5: 1096.843 ns/op
Iteration   6: 1087.106 ns/op
Iteration   7: 1103.978 ns/op
Iteration   8: 1092.992 ns/op
Iteration   9: 1087.405 ns/op
Iteration  10: 1092.789 ns/op
Iteration  11: 1094.384 ns/op
Iteration  12: 1093.829 ns/op
Iteration  13: 1090.699 ns/op
Iteration  14: 1105.405 ns/op
Iteration  15: 1091.793 ns/op
Iteration  16: 1086.742 ns/op
Iteration  17: 1093.746 ns/op
Iteration  18: 1097.306 ns/op
Iteration  19: 1089.233 ns/op
Iteration  20: 1086.521 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1520.841 ns/op
# Warmup Iteration   2: 1325.034 ns/op
# Warmup Iteration   3: 1052.503 ns/op
# Warmup Iteration   4: 1043.081 ns/op
# Warmup Iteration   5: 1056.049 ns/op
Iteration   1: 1060.257 ns/op
Iteration   2: 1066.894 ns/op
Iteration   3: 1043.567 ns/op
Iteration   4: 1072.692 ns/op
Iteration   5: 1048.080 ns/op
Iteration   6: 1048.663 ns/op
Iteration   7: 1043.282 ns/op
Iteration   8: 1048.406 ns/op
Iteration   9: 1048.419 ns/op
Iteration  10: 1048.640 ns/op
Iteration  11: 1043.016 ns/op
Iteration  12: 1047.930 ns/op
Iteration  13: 1056.463 ns/op
Iteration  14: 1049.237 ns/op
Iteration  15: 1043.068 ns/op
Iteration  16: 1050.170 ns/op
Iteration  17: 1047.313 ns/op
Iteration  18: 1045.531 ns/op
Iteration  19: 1042.700 ns/op
Iteration  20: 1047.484 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1060.199 Â±(99.9%) 7.600 ns/op [Average]
  (min, avg, max) = (1028.539, 1060.199, 1128.468), stdev = 22.408
  CI (99.9%): [1052.599, 1067.799] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 		
	  

	   
		  

	
 	 
	  
 


 			 
 


  

  	
		  			

	  

		 	
	 	
 	
 	

, 
 
  
  

   
 

		



	 	  
	

 
	
	
	
		 	
   	
				  	

	
  	
  

		
	 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1515.882 ns/op
# Warmup Iteration   2: 1367.092 ns/op
# Warmup Iteration   3: 1091.832 ns/op
# Warmup Iteration   4: 1081.781 ns/op
# Warmup Iteration   5: 1094.483 ns/op
Iteration   1: 1098.931 ns/op
Iteration   2: 1104.702 ns/op
Iteration   3: 1081.434 ns/op
Iteration   4: 1111.376 ns/op
Iteration   5: 1086.703 ns/op
Iteration   6: 1085.881 ns/op
Iteration   7: 1080.526 ns/op
Iteration   8: 1085.980 ns/op
Iteration   9: 1085.952 ns/op
Iteration  10: 1080.322 ns/op
Iteration  11: 1086.471 ns/op
Iteration  12: 1086.590 ns/op
Iteration  13: 1086.892 ns/op
Iteration  14: 1080.745 ns/op
Iteration  15: 1085.855 ns/op
Iteration  16: 1088.382 ns/op
Iteration  17: 1092.940 ns/op
Iteration  18: 1080.934 ns/op
Iteration  19: 1083.809 ns/op
Iteration  20: 1083.369 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1407.446 ns/op
# Warmup Iteration   2: 1186.963 ns/op
# Warmup Iteration   3: 971.345 ns/op
# Warmup Iteration   4: 971.218 ns/op
# Warmup Iteration   5: 975.220 ns/op
Iteration   1: 958.967 ns/op
Iteration   2: 980.085 ns/op
Iteration   3: 984.916 ns/op
Iteration   4: 963.475 ns/op
Iteration   5: 963.673 ns/op
Iteration   6: 958.512 ns/op
Iteration   7: 963.142 ns/op
Iteration   8: 963.946 ns/op
Iteration   9: 965.506 ns/op
Iteration  10: 968.325 ns/op
Iteration  11: 964.481 ns/op
Iteration  12: 958.166 ns/op
Iteration  13: 970.095 ns/op
Iteration  14: 966.843 ns/op
Iteration  15: 966.671 ns/op
Iteration  16: 960.640 ns/op
Iteration  17: 961.115 ns/op
Iteration  18: 957.844 ns/op
Iteration  19: 960.884 ns/op
Iteration  20: 960.842 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1505.372 ns/op
# Warmup Iteration   2: 1309.754 ns/op
# Warmup Iteration   3: 1043.293 ns/op
# Warmup Iteration   4: 1032.729 ns/op
# Warmup Iteration   5: 1046.182 ns/op
Iteration   1: 1051.257 ns/op
Iteration   2: 1074.369 ns/op
Iteration   3: 1059.361 ns/op
Iteration   4: 1032.662 ns/op
Iteration   5: 1038.184 ns/op
Iteration   6: 1038.999 ns/op
Iteration   7: 1038.945 ns/op
Iteration   8: 1032.729 ns/op
Iteration   9: 1038.942 ns/op
Iteration  10: 1047.359 ns/op
Iteration  11: 1040.326 ns/op
Iteration  12: 1033.081 ns/op
Iteration  13: 1039.183 ns/op
Iteration  14: 1043.980 ns/op
Iteration  15: 1039.863 ns/op
Iteration  16: 1032.518 ns/op
Iteration  17: 1038.154 ns/op
Iteration  18: 1040.613 ns/op
Iteration  19: 1036.352 ns/op
Iteration  20: 1035.697 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1513.670 ns/op
# Warmup Iteration   2: 1308.236 ns/op
# Warmup Iteration   3: 1046.901 ns/op
# Warmup Iteration   4: 1037.372 ns/op
# Warmup Iteration   5: 1050.848 ns/op
Iteration   1: 1054.313 ns/op
Iteration   2: 1060.371 ns/op
Iteration   3: 1065.472 ns/op
Iteration   4: 1037.001 ns/op
Iteration   5: 1041.826 ns/op
Iteration   6: 1041.443 ns/op
Iteration   7: 1048.867 ns/op
Iteration   8: 1039.343 ns/op
Iteration   9: 1042.632 ns/op
Iteration  10: 1046.490 ns/op
Iteration  11: 1043.312 ns/op
Iteration  12: 1037.360 ns/op
Iteration  13: 1051.727 ns/op
Iteration  14: 1044.814 ns/op
Iteration  15: 1051.076 ns/op
Iteration  16: 1037.987 ns/op
Iteration  17: 1042.517 ns/op
Iteration  18: 1041.125 ns/op
Iteration  19: 1040.146 ns/op
Iteration  20: 1037.736 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1459.467 ns/op
# Warmup Iteration   2: 1269.450 ns/op
# Warmup Iteration   3: 1029.864 ns/op
# Warmup Iteration   4: 1031.743 ns/op
# Warmup Iteration   5: 1020.446 ns/op
Iteration   1: 1037.049 ns/op
Iteration   2: 1042.326 ns/op
Iteration   3: 1048.750 ns/op
Iteration   4: 1020.209 ns/op
Iteration   5: 1025.566 ns/op
Iteration   6: 1033.377 ns/op
Iteration   7: 1025.585 ns/op
Iteration   8: 1026.316 ns/op
Iteration   9: 1019.121 ns/op
Iteration  10: 1026.092 ns/op
Iteration  11: 1050.816 ns/op
Iteration  12: 1026.332 ns/op
Iteration  13: 1019.592 ns/op
Iteration  14: 1037.909 ns/op
Iteration  15: 1029.144 ns/op
Iteration  16: 1044.467 ns/op
Iteration  17: 1020.189 ns/op
Iteration  18: 1023.114 ns/op
Iteration  19: 1022.535 ns/op
Iteration  20: 1022.525 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1033.951 Â±(99.9%) 13.840 ns/op [Average]
  (min, avg, max) = (957.844, 1033.951, 1111.376), stdev = 40.806
  CI (99.9%): [1020.111, 1047.790] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                         (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  		
	  

	   
		  

	
 	 
	  
 


 			 
 


  

  	
		  			

	  

		 	
	 	
 	
 	

, 
 
  
  

   
 

		



	 	  
	

 
	
	
	
		 	
   	
				  	

	
  	
  

		
	   avgt  100  1060.199 Â±  7.600  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  		
	  

	   
		  

	
 	 
	  
 


 			 
 


  

  	
		  			

	  

		 	
	 	
 	
 	

, 
 
  
  

   
 

		



	 	  
	

 
	
	
	
		 	
   	
				  	

	
  	
  

		
	   avgt  100  1033.951 Â± 13.840  ns/op

Benchmark result is saved to split_precompiled_regex_88_320_Match.csv
