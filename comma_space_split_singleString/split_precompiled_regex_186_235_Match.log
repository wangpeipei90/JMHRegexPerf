# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 

  		
	 
  
  
	
  

 

	
	   				  
    
   			

	 	
 	

 
  
	



			 
		
 

  



	  		 	 			  
 	 
 
		,		
	  	
  
		 	 	
 			
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1347.321 ns/op
# Warmup Iteration   2: 1075.061 ns/op
# Warmup Iteration   3: 884.134 ns/op
# Warmup Iteration   4: 887.668 ns/op
# Warmup Iteration   5: 891.218 ns/op
Iteration   1: 895.587 ns/op
Iteration   2: 900.944 ns/op
Iteration   3: 875.930 ns/op
Iteration   4: 881.386 ns/op
Iteration   5: 880.390 ns/op
Iteration   6: 879.724 ns/op
Iteration   7: 879.490 ns/op
Iteration   8: 885.436 ns/op
Iteration   9: 880.142 ns/op
Iteration  10: 880.704 ns/op
Iteration  11: 880.338 ns/op
Iteration  12: 875.395 ns/op
Iteration  13: 880.482 ns/op
Iteration  14: 878.308 ns/op
Iteration  15: 877.595 ns/op
Iteration  16: 877.689 ns/op
Iteration  17: 877.263 ns/op
Iteration  18: 877.177 ns/op
Iteration  19: 877.578 ns/op
Iteration  20: 875.674 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1337.408 ns/op
# Warmup Iteration   2: 1058.655 ns/op
# Warmup Iteration   3: 877.076 ns/op
# Warmup Iteration   4: 879.051 ns/op
# Warmup Iteration   5: 882.454 ns/op
Iteration   1: 887.144 ns/op
Iteration   2: 892.649 ns/op
Iteration   3: 871.936 ns/op
Iteration   4: 868.043 ns/op
Iteration   5: 872.066 ns/op
Iteration   6: 871.982 ns/op
Iteration   7: 872.000 ns/op
Iteration   8: 872.306 ns/op
Iteration   9: 873.778 ns/op
Iteration  10: 885.625 ns/op
Iteration  11: 873.861 ns/op
Iteration  12: 868.017 ns/op
Iteration  13: 876.711 ns/op
Iteration  14: 871.037 ns/op
Iteration  15: 869.898 ns/op
Iteration  16: 869.817 ns/op
Iteration  17: 869.934 ns/op
Iteration  18: 869.799 ns/op
Iteration  19: 874.584 ns/op
Iteration  20: 871.569 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1345.217 ns/op
# Warmup Iteration   2: 1060.483 ns/op
# Warmup Iteration   3: 879.478 ns/op
# Warmup Iteration   4: 881.990 ns/op
# Warmup Iteration   5: 885.096 ns/op
Iteration   1: 891.493 ns/op
Iteration   2: 897.768 ns/op
Iteration   3: 877.570 ns/op
Iteration   4: 871.583 ns/op
Iteration   5: 875.852 ns/op
Iteration   6: 875.439 ns/op
Iteration   7: 875.228 ns/op
Iteration   8: 875.229 ns/op
Iteration   9: 875.368 ns/op
Iteration  10: 875.777 ns/op
Iteration  11: 875.453 ns/op
Iteration  12: 871.309 ns/op
Iteration  13: 875.694 ns/op
Iteration  14: 873.132 ns/op
Iteration  15: 872.896 ns/op
Iteration  16: 873.193 ns/op
Iteration  17: 880.636 ns/op
Iteration  18: 873.012 ns/op
Iteration  19: 875.590 ns/op
Iteration  20: 873.597 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1273.866 ns/op
# Warmup Iteration   2: 973.771 ns/op
# Warmup Iteration   3: 812.177 ns/op
# Warmup Iteration   4: 814.624 ns/op
# Warmup Iteration   5: 818.087 ns/op
Iteration   1: 822.571 ns/op
Iteration   2: 828.497 ns/op
Iteration   3: 808.424 ns/op
Iteration   4: 808.816 ns/op
Iteration   5: 808.522 ns/op
Iteration   6: 808.270 ns/op
Iteration   7: 809.667 ns/op
Iteration   8: 815.327 ns/op
Iteration   9: 809.384 ns/op
Iteration  10: 815.352 ns/op
Iteration  11: 809.587 ns/op
Iteration  12: 808.795 ns/op
Iteration  13: 805.816 ns/op
Iteration  14: 806.375 ns/op
Iteration  15: 804.277 ns/op
Iteration  16: 807.078 ns/op
Iteration  17: 807.294 ns/op
Iteration  18: 807.185 ns/op
Iteration  19: 806.556 ns/op
Iteration  20: 806.274 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1310.597 ns/op
# Warmup Iteration   2: 1021.729 ns/op
# Warmup Iteration   3: 849.562 ns/op
# Warmup Iteration   4: 853.227 ns/op
# Warmup Iteration   5: 856.175 ns/op
Iteration   1: 860.633 ns/op
Iteration   2: 865.870 ns/op
Iteration   3: 846.299 ns/op
Iteration   4: 846.610 ns/op
Iteration   5: 846.168 ns/op
Iteration   6: 842.906 ns/op
Iteration   7: 846.397 ns/op
Iteration   8: 846.568 ns/op
Iteration   9: 845.988 ns/op
Iteration  10: 846.199 ns/op
Iteration  11: 851.085 ns/op
Iteration  12: 849.028 ns/op
Iteration  13: 848.114 ns/op
Iteration  14: 847.244 ns/op
Iteration  15: 845.583 ns/op
Iteration  16: 845.734 ns/op
Iteration  17: 845.695 ns/op
Iteration  18: 842.492 ns/op
Iteration  19: 846.549 ns/op
Iteration  20: 846.912 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  858.020 Â±(99.9%) 9.277 ns/op [Average]
  (min, avg, max) = (804.277, 858.020, 900.944), stdev = 27.354
  CI (99.9%): [848.742, 867.297] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 

  		
	 
  
  
	
  

 

	
	   				  
    
   			

	 	
 	

 
  
	



			 
		
 

  



	  		 	 			  
 	 
 
		,		
	  	
  
		 	 	
 			
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1318.144 ns/op
# Warmup Iteration   2: 1054.484 ns/op
# Warmup Iteration   3: 873.276 ns/op
# Warmup Iteration   4: 875.910 ns/op
# Warmup Iteration   5: 879.401 ns/op
Iteration   1: 883.364 ns/op
Iteration   2: 887.028 ns/op
Iteration   3: 868.921 ns/op
Iteration   4: 868.462 ns/op
Iteration   5: 868.919 ns/op
Iteration   6: 864.091 ns/op
Iteration   7: 868.577 ns/op
Iteration   8: 868.644 ns/op
Iteration   9: 868.497 ns/op
Iteration  10: 868.518 ns/op
Iteration  11: 868.887 ns/op
Iteration  12: 871.495 ns/op
Iteration  13: 865.916 ns/op
Iteration  14: 865.994 ns/op
Iteration  15: 866.972 ns/op
Iteration  16: 868.102 ns/op
Iteration  17: 863.673 ns/op
Iteration  18: 868.093 ns/op
Iteration  19: 867.765 ns/op
Iteration  20: 867.764 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1277.327 ns/op
# Warmup Iteration   2: 1018.017 ns/op
# Warmup Iteration   3: 858.602 ns/op
# Warmup Iteration   4: 861.312 ns/op
# Warmup Iteration   5: 865.227 ns/op
Iteration   1: 869.651 ns/op
Iteration   2: 875.733 ns/op
Iteration   3: 855.625 ns/op
Iteration   4: 854.717 ns/op
Iteration   5: 854.549 ns/op
Iteration   6: 855.028 ns/op
Iteration   7: 854.871 ns/op
Iteration   8: 849.575 ns/op
Iteration   9: 858.770 ns/op
Iteration  10: 855.170 ns/op
Iteration  11: 856.029 ns/op
Iteration  12: 855.597 ns/op
Iteration  13: 852.825 ns/op
Iteration  14: 852.004 ns/op
Iteration  15: 853.015 ns/op
Iteration  16: 853.063 ns/op
Iteration  17: 851.937 ns/op
Iteration  18: 852.923 ns/op
Iteration  19: 854.174 ns/op
Iteration  20: 856.207 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1353.622 ns/op
# Warmup Iteration   2: 1106.594 ns/op
# Warmup Iteration   3: 899.997 ns/op
# Warmup Iteration   4: 908.459 ns/op
# Warmup Iteration   5: 905.547 ns/op
Iteration   1: 913.337 ns/op
Iteration   2: 916.697 ns/op
Iteration   3: 890.605 ns/op
Iteration   4: 895.404 ns/op
Iteration   5: 898.902 ns/op
Iteration   6: 894.743 ns/op
Iteration   7: 901.417 ns/op
Iteration   8: 901.188 ns/op
Iteration   9: 895.964 ns/op
Iteration  10: 904.628 ns/op
Iteration  11: 896.233 ns/op
Iteration  12: 889.994 ns/op
Iteration  13: 896.218 ns/op
Iteration  14: 905.419 ns/op
Iteration  15: 891.954 ns/op
Iteration  16: 891.816 ns/op
Iteration  17: 899.346 ns/op
Iteration  18: 893.036 ns/op
Iteration  19: 893.527 ns/op
Iteration  20: 889.851 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1321.136 ns/op
# Warmup Iteration   2: 1030.703 ns/op
# Warmup Iteration   3: 849.902 ns/op
# Warmup Iteration   4: 856.913 ns/op
# Warmup Iteration   5: 857.346 ns/op
Iteration   1: 865.381 ns/op
Iteration   2: 863.044 ns/op
Iteration   3: 849.879 ns/op
Iteration   4: 845.602 ns/op
Iteration   5: 851.007 ns/op
Iteration   6: 845.448 ns/op
Iteration   7: 849.674 ns/op
Iteration   8: 840.453 ns/op
Iteration   9: 845.700 ns/op
Iteration  10: 850.417 ns/op
Iteration  11: 863.108 ns/op
Iteration  12: 860.198 ns/op
Iteration  13: 849.465 ns/op
Iteration  14: 850.477 ns/op
Iteration  15: 852.786 ns/op
Iteration  16: 843.019 ns/op
Iteration  17: 843.754 ns/op
Iteration  18: 856.624 ns/op
Iteration  19: 843.334 ns/op
Iteration  20: 843.089 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1344.796 ns/op
# Warmup Iteration   2: 1082.031 ns/op
# Warmup Iteration   3: 898.165 ns/op
# Warmup Iteration   4: 900.596 ns/op
# Warmup Iteration   5: 905.325 ns/op
Iteration   1: 909.092 ns/op
Iteration   2: 913.867 ns/op
Iteration   3: 894.400 ns/op
Iteration   4: 891.194 ns/op
Iteration   5: 897.808 ns/op
Iteration   6: 894.828 ns/op
Iteration   7: 896.745 ns/op
Iteration   8: 898.403 ns/op
Iteration   9: 894.382 ns/op
Iteration  10: 900.376 ns/op
Iteration  11: 918.274 ns/op
Iteration  12: 889.514 ns/op
Iteration  13: 923.152 ns/op
Iteration  14: 892.829 ns/op
Iteration  15: 893.015 ns/op
Iteration  16: 892.944 ns/op
Iteration  17: 892.680 ns/op
Iteration  18: 892.884 ns/op
Iteration  19: 892.646 ns/op
Iteration  20: 899.290 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  874.622 Â±(99.9%) 7.375 ns/op [Average]
  (min, avg, max) = (840.453, 874.622, 923.152), stdev = 21.747
  CI (99.9%): [867.247, 881.997] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                    (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	 

  		
	 
  
  
	
  

 

	
	   				  
    
   			

	 	
 	

 
  
	



			 
		
 

  



	  		 	 			  
 	 
 
		,		
	  	
  
		 	 	
 			
  avgt  100  858.020 Â± 9.277  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	 

  		
	 
  
  
	
  

 

	
	   				  
    
   			

	 	
 	

 
  
	



			 
		
 

  



	  		 	 			  
 	 
 
		,		
	  	
  
		 	 	
 			
  avgt  100  874.622 Â± 7.375  ns/op

Benchmark result is saved to split_precompiled_regex_186_235_Match.csv
