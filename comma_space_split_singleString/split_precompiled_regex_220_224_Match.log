# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 		

   	  

			   
	

 
  

  

	 
		
	,	 

						


   	  



			 	 		 	  	 	
  
	

			 
 	
				
 

 	

 	 	 			  
	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1341.778 ns/op
# Warmup Iteration   2: 1064.207 ns/op
# Warmup Iteration   3: 884.304 ns/op
# Warmup Iteration   4: 885.381 ns/op
# Warmup Iteration   5: 890.134 ns/op
Iteration   1: 893.835 ns/op
Iteration   2: 898.515 ns/op
Iteration   3: 874.284 ns/op
Iteration   4: 878.594 ns/op
Iteration   5: 877.573 ns/op
Iteration   6: 878.072 ns/op
Iteration   7: 878.102 ns/op
Iteration   8: 878.664 ns/op
Iteration   9: 877.950 ns/op
Iteration  10: 878.561 ns/op
Iteration  11: 880.405 ns/op
Iteration  12: 877.504 ns/op
Iteration  13: 882.819 ns/op
Iteration  14: 876.219 ns/op
Iteration  15: 877.285 ns/op
Iteration  16: 883.559 ns/op
Iteration  17: 876.791 ns/op
Iteration  18: 878.074 ns/op
Iteration  19: 876.651 ns/op
Iteration  20: 874.451 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1253.688 ns/op
# Warmup Iteration   2: 939.604 ns/op
# Warmup Iteration   3: 793.086 ns/op
# Warmup Iteration   4: 794.954 ns/op
# Warmup Iteration   5: 798.560 ns/op
Iteration   1: 802.546 ns/op
Iteration   2: 807.838 ns/op
Iteration   3: 789.502 ns/op
Iteration   4: 789.061 ns/op
Iteration   5: 789.199 ns/op
Iteration   6: 788.900 ns/op
Iteration   7: 788.649 ns/op
Iteration   8: 789.394 ns/op
Iteration   9: 792.540 ns/op
Iteration  10: 789.313 ns/op
Iteration  11: 789.761 ns/op
Iteration  12: 787.429 ns/op
Iteration  13: 786.786 ns/op
Iteration  14: 786.563 ns/op
Iteration  15: 786.896 ns/op
Iteration  16: 788.783 ns/op
Iteration  17: 788.736 ns/op
Iteration  18: 788.432 ns/op
Iteration  19: 788.231 ns/op
Iteration  20: 788.304 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1345.536 ns/op
# Warmup Iteration   2: 1074.441 ns/op
# Warmup Iteration   3: 891.560 ns/op
# Warmup Iteration   4: 894.262 ns/op
# Warmup Iteration   5: 898.130 ns/op
Iteration   1: 901.904 ns/op
Iteration   2: 908.866 ns/op
Iteration   3: 880.006 ns/op
Iteration   4: 887.324 ns/op
Iteration   5: 885.088 ns/op
Iteration   6: 885.301 ns/op
Iteration   7: 884.499 ns/op
Iteration   8: 884.317 ns/op
Iteration   9: 885.237 ns/op
Iteration  10: 885.570 ns/op
Iteration  11: 880.137 ns/op
Iteration  12: 884.532 ns/op
Iteration  13: 885.211 ns/op
Iteration  14: 882.759 ns/op
Iteration  15: 882.492 ns/op
Iteration  16: 882.761 ns/op
Iteration  17: 888.022 ns/op
Iteration  18: 884.763 ns/op
Iteration  19: 879.711 ns/op
Iteration  20: 884.437 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1351.314 ns/op
# Warmup Iteration   2: 1075.310 ns/op
# Warmup Iteration   3: 884.968 ns/op
# Warmup Iteration   4: 887.807 ns/op
# Warmup Iteration   5: 891.806 ns/op
Iteration   1: 897.096 ns/op
Iteration   2: 901.879 ns/op
Iteration   3: 877.347 ns/op
Iteration   4: 882.153 ns/op
Iteration   5: 882.479 ns/op
Iteration   6: 881.822 ns/op
Iteration   7: 882.063 ns/op
Iteration   8: 886.022 ns/op
Iteration   9: 885.186 ns/op
Iteration  10: 882.966 ns/op
Iteration  11: 877.460 ns/op
Iteration  12: 883.589 ns/op
Iteration  13: 882.310 ns/op
Iteration  14: 887.479 ns/op
Iteration  15: 880.076 ns/op
Iteration  16: 880.683 ns/op
Iteration  17: 879.821 ns/op
Iteration  18: 886.146 ns/op
Iteration  19: 877.452 ns/op
Iteration  20: 889.484 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1343.286 ns/op
# Warmup Iteration   2: 1069.064 ns/op
# Warmup Iteration   3: 887.567 ns/op
# Warmup Iteration   4: 890.296 ns/op
# Warmup Iteration   5: 893.155 ns/op
Iteration   1: 898.114 ns/op
Iteration   2: 904.487 ns/op
Iteration   3: 879.609 ns/op
Iteration   4: 884.487 ns/op
Iteration   5: 883.466 ns/op
Iteration   6: 883.511 ns/op
Iteration   7: 883.019 ns/op
Iteration   8: 883.625 ns/op
Iteration   9: 883.070 ns/op
Iteration  10: 892.902 ns/op
Iteration  11: 879.014 ns/op
Iteration  12: 887.353 ns/op
Iteration  13: 885.652 ns/op
Iteration  14: 892.345 ns/op
Iteration  15: 884.685 ns/op
Iteration  16: 880.721 ns/op
Iteration  17: 880.581 ns/op
Iteration  18: 881.106 ns/op
Iteration  19: 878.938 ns/op
Iteration  20: 881.128 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  865.190 Â±(99.9%) 12.947 ns/op [Average]
  (min, avg, max) = (786.563, 865.190, 908.866), stdev = 38.175
  CI (99.9%): [852.243, 878.138] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 		

   	  

			   
	

 
  

  

	 
		
	,	 

						


   	  



			 	 		 	  	 	
  
	

			 
 	
				
 

 	

 	 	 			  
	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1345.766 ns/op
# Warmup Iteration   2: 1099.836 ns/op
# Warmup Iteration   3: 906.670 ns/op
# Warmup Iteration   4: 908.247 ns/op
# Warmup Iteration   5: 910.917 ns/op
Iteration   1: 916.526 ns/op
Iteration   2: 921.828 ns/op
Iteration   3: 896.248 ns/op
Iteration   4: 901.000 ns/op
Iteration   5: 911.090 ns/op
Iteration   6: 903.047 ns/op
Iteration   7: 901.333 ns/op
Iteration   8: 900.583 ns/op
Iteration   9: 901.015 ns/op
Iteration  10: 907.505 ns/op
Iteration  11: 896.728 ns/op
Iteration  12: 901.507 ns/op
Iteration  13: 902.268 ns/op
Iteration  14: 903.449 ns/op
Iteration  15: 898.982 ns/op
Iteration  16: 899.095 ns/op
Iteration  17: 899.085 ns/op
Iteration  18: 899.493 ns/op
Iteration  19: 898.895 ns/op
Iteration  20: 896.601 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1339.572 ns/op
# Warmup Iteration   2: 1097.205 ns/op
# Warmup Iteration   3: 914.667 ns/op
# Warmup Iteration   4: 917.292 ns/op
# Warmup Iteration   5: 920.711 ns/op
Iteration   1: 925.270 ns/op
Iteration   2: 932.510 ns/op
Iteration   3: 905.793 ns/op
Iteration   4: 912.740 ns/op
Iteration   5: 911.001 ns/op
Iteration   6: 910.527 ns/op
Iteration   7: 911.020 ns/op
Iteration   8: 918.119 ns/op
Iteration   9: 911.831 ns/op
Iteration  10: 906.205 ns/op
Iteration  11: 911.845 ns/op
Iteration  12: 910.708 ns/op
Iteration  13: 909.825 ns/op
Iteration  14: 908.600 ns/op
Iteration  15: 908.870 ns/op
Iteration  16: 908.841 ns/op
Iteration  17: 910.508 ns/op
Iteration  18: 905.473 ns/op
Iteration  19: 908.151 ns/op
Iteration  20: 908.174 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1241.004 ns/op
# Warmup Iteration   2: 938.210 ns/op
# Warmup Iteration   3: 800.772 ns/op
# Warmup Iteration   4: 810.461 ns/op
# Warmup Iteration   5: 807.440 ns/op
Iteration   1: 814.176 ns/op
Iteration   2: 814.742 ns/op
Iteration   3: 801.674 ns/op
Iteration   4: 797.255 ns/op
Iteration   5: 797.795 ns/op
Iteration   6: 798.347 ns/op
Iteration   7: 801.420 ns/op
Iteration   8: 803.893 ns/op
Iteration   9: 797.878 ns/op
Iteration  10: 800.665 ns/op
Iteration  11: 803.394 ns/op
Iteration  12: 800.872 ns/op
Iteration  13: 795.274 ns/op
Iteration  14: 796.073 ns/op
Iteration  15: 799.490 ns/op
Iteration  16: 797.361 ns/op
Iteration  17: 798.144 ns/op
Iteration  18: 797.827 ns/op
Iteration  19: 797.587 ns/op
Iteration  20: 796.998 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1366.882 ns/op
# Warmup Iteration   2: 1101.855 ns/op
# Warmup Iteration   3: 905.771 ns/op
# Warmup Iteration   4: 908.281 ns/op
# Warmup Iteration   5: 912.700 ns/op
Iteration   1: 916.354 ns/op
Iteration   2: 923.229 ns/op
Iteration   3: 897.291 ns/op
Iteration   4: 902.156 ns/op
Iteration   5: 902.672 ns/op
Iteration   6: 901.514 ns/op
Iteration   7: 908.002 ns/op
Iteration   8: 902.485 ns/op
Iteration   9: 902.463 ns/op
Iteration  10: 912.147 ns/op
Iteration  11: 897.874 ns/op
Iteration  12: 933.502 ns/op
Iteration  13: 904.004 ns/op
Iteration  14: 917.931 ns/op
Iteration  15: 903.437 ns/op
Iteration  16: 900.258 ns/op
Iteration  17: 899.181 ns/op
Iteration  18: 899.873 ns/op
Iteration  19: 896.673 ns/op
Iteration  20: 901.171 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1266.772 ns/op
# Warmup Iteration   2: 971.923 ns/op
# Warmup Iteration   3: 824.348 ns/op
# Warmup Iteration   4: 826.126 ns/op
# Warmup Iteration   5: 829.809 ns/op
Iteration   1: 834.529 ns/op
Iteration   2: 839.726 ns/op
Iteration   3: 820.693 ns/op
Iteration   4: 820.000 ns/op
Iteration   5: 819.957 ns/op
Iteration   6: 819.464 ns/op
Iteration   7: 819.525 ns/op
Iteration   8: 825.445 ns/op
Iteration   9: 820.001 ns/op
Iteration  10: 820.877 ns/op
Iteration  11: 820.909 ns/op
Iteration  12: 823.986 ns/op
Iteration  13: 818.023 ns/op
Iteration  14: 816.984 ns/op
Iteration  15: 816.632 ns/op
Iteration  16: 817.431 ns/op
Iteration  17: 818.682 ns/op
Iteration  18: 819.109 ns/op
Iteration  19: 819.269 ns/op
Iteration  20: 819.618 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  868.562 Â±(99.9%) 16.362 ns/op [Average]
  (min, avg, max) = (795.274, 868.562, 933.502), stdev = 48.245
  CI (99.9%): [852.200, 884.925] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                         (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  		

   	  

			   
	

 
  

  

	 
		
	,	 

						


   	  



			 	 		 	  	 	
  
	

			 
 	
				
 

 	

 	 	 			  
	  avgt  100  865.190 Â± 12.947  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  		

   	  

			   
	

 
  

  

	 
		
	,	 

						


   	  



			 	 		 	  	 	
  
	

			 
 	
				
 

 	

 	 	 			  
	  avgt  100  868.562 Â± 16.362  ns/op

Benchmark result is saved to split_precompiled_regex_220_224_Match.csv
