# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
 	



  	
		
 	 

	 
  
  

		 		 
	    	
 	
 	  		
 		 	 

  
		
	  	
	
	 	 
,  	


 		



 	
 	
  
			
	 
 			 	


    

	 
	
 		 

 		 	 	

	     	
 		 
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1458.568 ns/op
# Warmup Iteration   2: 1260.618 ns/op
# Warmup Iteration   3: 1007.141 ns/op
# Warmup Iteration   4: 998.560 ns/op
# Warmup Iteration   5: 1004.060 ns/op
Iteration   1: 1011.345 ns/op
Iteration   2: 1017.354 ns/op
Iteration   3: 1021.789 ns/op
Iteration   4: 995.407 ns/op
Iteration   5: 1000.144 ns/op
Iteration   6: 1000.425 ns/op
Iteration   7: 999.938 ns/op
Iteration   8: 1000.387 ns/op
Iteration   9: 994.448 ns/op
Iteration  10: 1000.083 ns/op
Iteration  11: 999.665 ns/op
Iteration  12: 999.960 ns/op
Iteration  13: 995.379 ns/op
Iteration  14: 1006.006 ns/op
Iteration  15: 1002.288 ns/op
Iteration  16: 1003.057 ns/op
Iteration  17: 995.443 ns/op
Iteration  18: 997.565 ns/op
Iteration  19: 997.824 ns/op
Iteration  20: 997.834 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1486.667 ns/op
# Warmup Iteration   2: 1281.002 ns/op
# Warmup Iteration   3: 1024.624 ns/op
# Warmup Iteration   4: 1014.804 ns/op
# Warmup Iteration   5: 1027.760 ns/op
Iteration   1: 1031.840 ns/op
Iteration   2: 1037.362 ns/op
Iteration   3: 1043.759 ns/op
Iteration   4: 1014.912 ns/op
Iteration   5: 1019.790 ns/op
Iteration   6: 1018.226 ns/op
Iteration   7: 1018.704 ns/op
Iteration   8: 1016.393 ns/op
Iteration   9: 1018.835 ns/op
Iteration  10: 1018.820 ns/op
Iteration  11: 1018.770 ns/op
Iteration  12: 1014.536 ns/op
Iteration  13: 1018.290 ns/op
Iteration  14: 1019.011 ns/op
Iteration  15: 1018.780 ns/op
Iteration  16: 1014.641 ns/op
Iteration  17: 1016.067 ns/op
Iteration  18: 1016.180 ns/op
Iteration  19: 1016.283 ns/op
Iteration  20: 1016.769 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1573.487 ns/op
# Warmup Iteration   2: 1424.971 ns/op
# Warmup Iteration   3: 1113.606 ns/op
# Warmup Iteration   4: 1121.678 ns/op
# Warmup Iteration   5: 1125.506 ns/op
Iteration   1: 1130.230 ns/op
Iteration   2: 1112.263 ns/op
Iteration   3: 1135.676 ns/op
Iteration   4: 1142.828 ns/op
Iteration   5: 1112.009 ns/op
Iteration   6: 1117.541 ns/op
Iteration   7: 1117.507 ns/op
Iteration   8: 1117.637 ns/op
Iteration   9: 1112.043 ns/op
Iteration  10: 1117.245 ns/op
Iteration  11: 1117.596 ns/op
Iteration  12: 1112.512 ns/op
Iteration  13: 1117.163 ns/op
Iteration  14: 1117.198 ns/op
Iteration  15: 1113.000 ns/op
Iteration  16: 1117.696 ns/op
Iteration  17: 1123.898 ns/op
Iteration  18: 1114.310 ns/op
Iteration  19: 1114.588 ns/op
Iteration  20: 1133.363 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1459.299 ns/op
# Warmup Iteration   2: 1241.924 ns/op
# Warmup Iteration   3: 1000.256 ns/op
# Warmup Iteration   4: 1001.136 ns/op
# Warmup Iteration   5: 988.420 ns/op
Iteration   1: 1003.563 ns/op
Iteration   2: 1009.225 ns/op
Iteration   3: 1015.378 ns/op
Iteration   4: 993.658 ns/op
Iteration   5: 987.951 ns/op
Iteration   6: 993.495 ns/op
Iteration   7: 992.551 ns/op
Iteration   8: 992.081 ns/op
Iteration   9: 987.011 ns/op
Iteration  10: 993.868 ns/op
Iteration  11: 997.688 ns/op
Iteration  12: 995.922 ns/op
Iteration  13: 994.791 ns/op
Iteration  14: 987.944 ns/op
Iteration  15: 1006.579 ns/op
Iteration  16: 990.530 ns/op
Iteration  17: 993.062 ns/op
Iteration  18: 987.631 ns/op
Iteration  19: 992.975 ns/op
Iteration  20: 991.757 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1579.225 ns/op
# Warmup Iteration   2: 1432.187 ns/op
# Warmup Iteration   3: 1112.619 ns/op
# Warmup Iteration   4: 1122.486 ns/op
# Warmup Iteration   5: 1126.825 ns/op
Iteration   1: 1131.028 ns/op
Iteration   2: 1113.503 ns/op
Iteration   3: 1137.921 ns/op
Iteration   4: 1144.073 ns/op
Iteration   5: 1113.116 ns/op
Iteration   6: 1119.466 ns/op
Iteration   7: 1117.838 ns/op
Iteration   8: 1117.731 ns/op
Iteration   9: 1112.710 ns/op
Iteration  10: 1118.099 ns/op
Iteration  11: 1118.658 ns/op
Iteration  12: 1112.044 ns/op
Iteration  13: 1117.714 ns/op
Iteration  14: 1119.895 ns/op
Iteration  15: 1112.466 ns/op
Iteration  16: 1119.632 ns/op
Iteration  17: 1120.446 ns/op
Iteration  18: 1112.498 ns/op
Iteration  19: 1124.710 ns/op
Iteration  20: 1117.052 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1051.489 Â±(99.9%) 19.435 ns/op [Average]
  (min, avg, max) = (987.011, 1051.489, 1144.073), stdev = 57.305
  CI (99.9%): [1032.054, 1070.924] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
 	



  	
		
 	 

	 
  
  

		 		 
	    	
 	
 	  		
 		 	 

  
		
	  	
	
	 	 
,  	


 		



 	
 	
  
			
	 
 			 	


    

	 
	
 		 

 		 	 	

	     	
 		 
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1608.548 ns/op
# Warmup Iteration   2: 1459.003 ns/op
# Warmup Iteration   3: 1131.048 ns/op
# Warmup Iteration   4: 1143.032 ns/op
# Warmup Iteration   5: 1145.548 ns/op
Iteration   1: 1149.589 ns/op
Iteration   2: 1130.953 ns/op
Iteration   3: 1156.119 ns/op
Iteration   4: 1162.623 ns/op
Iteration   5: 1136.353 ns/op
Iteration   6: 1130.762 ns/op
Iteration   7: 1139.451 ns/op
Iteration   8: 1140.987 ns/op
Iteration   9: 1131.993 ns/op
Iteration  10: 1136.257 ns/op
Iteration  11: 1136.814 ns/op
Iteration  12: 1131.471 ns/op
Iteration  13: 1136.730 ns/op
Iteration  14: 1136.893 ns/op
Iteration  15: 1131.203 ns/op
Iteration  16: 1136.601 ns/op
Iteration  17: 1139.217 ns/op
Iteration  18: 1135.521 ns/op
Iteration  19: 1131.564 ns/op
Iteration  20: 1133.922 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1579.437 ns/op
# Warmup Iteration   2: 1452.304 ns/op
# Warmup Iteration   3: 1142.381 ns/op
# Warmup Iteration   4: 1152.237 ns/op
# Warmup Iteration   5: 1155.916 ns/op
Iteration   1: 1160.165 ns/op
Iteration   2: 1141.614 ns/op
Iteration   3: 1166.199 ns/op
Iteration   4: 1173.682 ns/op
Iteration   5: 1142.113 ns/op
Iteration   6: 1147.412 ns/op
Iteration   7: 1147.528 ns/op
Iteration   8: 1148.271 ns/op
Iteration   9: 1142.351 ns/op
Iteration  10: 1147.476 ns/op
Iteration  11: 1147.802 ns/op
Iteration  12: 1142.186 ns/op
Iteration  13: 1148.200 ns/op
Iteration  14: 1147.238 ns/op
Iteration  15: 1141.695 ns/op
Iteration  16: 1148.109 ns/op
Iteration  17: 1161.254 ns/op
Iteration  18: 1141.904 ns/op
Iteration  19: 1145.691 ns/op
Iteration  20: 1145.438 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1505.942 ns/op
# Warmup Iteration   2: 1303.382 ns/op
# Warmup Iteration   3: 1044.548 ns/op
# Warmup Iteration   4: 1034.603 ns/op
# Warmup Iteration   5: 1047.095 ns/op
Iteration   1: 1051.132 ns/op
Iteration   2: 1056.462 ns/op
Iteration   3: 1063.294 ns/op
Iteration   4: 1034.294 ns/op
Iteration   5: 1039.680 ns/op
Iteration   6: 1040.201 ns/op
Iteration   7: 1040.971 ns/op
Iteration   8: 1035.084 ns/op
Iteration   9: 1040.538 ns/op
Iteration  10: 1040.488 ns/op
Iteration  11: 1044.846 ns/op
Iteration  12: 1034.639 ns/op
Iteration  13: 1041.192 ns/op
Iteration  14: 1041.658 ns/op
Iteration  15: 1039.899 ns/op
Iteration  16: 1043.525 ns/op
Iteration  17: 1038.021 ns/op
Iteration  18: 1037.166 ns/op
Iteration  19: 1036.575 ns/op
Iteration  20: 1037.649 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1576.910 ns/op
# Warmup Iteration   2: 1457.347 ns/op
# Warmup Iteration   3: 1151.051 ns/op
# Warmup Iteration   4: 1152.083 ns/op
# Warmup Iteration   5: 1155.482 ns/op
Iteration   1: 1160.129 ns/op
Iteration   2: 1141.994 ns/op
Iteration   3: 1166.698 ns/op
Iteration   4: 1176.635 ns/op
Iteration   5: 1141.943 ns/op
Iteration   6: 1151.692 ns/op
Iteration   7: 1147.917 ns/op
Iteration   8: 1146.766 ns/op
Iteration   9: 1141.801 ns/op
Iteration  10: 1147.489 ns/op
Iteration  11: 1150.193 ns/op
Iteration  12: 1140.906 ns/op
Iteration  13: 1148.098 ns/op
Iteration  14: 1170.084 ns/op
Iteration  15: 1140.425 ns/op
Iteration  16: 1177.404 ns/op
Iteration  17: 1174.104 ns/op
Iteration  18: 1141.135 ns/op
Iteration  19: 1148.988 ns/op
Iteration  20: 1144.267 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1612.406 ns/op
# Warmup Iteration   2: 1455.709 ns/op
# Warmup Iteration   3: 1123.329 ns/op
# Warmup Iteration   4: 1134.177 ns/op
# Warmup Iteration   5: 1137.948 ns/op
Iteration   1: 1142.415 ns/op
Iteration   2: 1122.986 ns/op
Iteration   3: 1149.246 ns/op
Iteration   4: 1154.628 ns/op
Iteration   5: 1128.646 ns/op
Iteration   6: 1123.351 ns/op
Iteration   7: 1128.231 ns/op
Iteration   8: 1128.389 ns/op
Iteration   9: 1123.313 ns/op
Iteration  10: 1129.735 ns/op
Iteration  11: 1131.381 ns/op
Iteration  12: 1123.233 ns/op
Iteration  13: 1140.468 ns/op
Iteration  14: 1130.214 ns/op
Iteration  15: 1138.107 ns/op
Iteration  16: 1123.567 ns/op
Iteration  17: 1150.696 ns/op
Iteration  18: 1132.834 ns/op
Iteration  19: 1123.178 ns/op
Iteration  20: 1129.923 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1123.019 Â±(99.9%) 14.418 ns/op [Average]
  (min, avg, max) = (1034.294, 1123.019, 1177.404), stdev = 42.513
  CI (99.9%): [1108.600, 1137.437] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                                        (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
 	



  	
		
 	 

	 
  
  

		 		 
	    	
 	
 	  		
 		 	 

  
		
	  	
	
	 	 
,  	


 		



 	
 	
  
			
	 
 			 	


    

	 
	
 		 

 		 	 	

	     	
 		 
  avgt  100  1051.489 Â± 19.435  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
 	



  	
		
 	 

	 
  
  

		 		 
	    	
 	
 	  		
 		 	 

  
		
	  	
	
	 	 
,  	


 		



 	
 	
  
			
	 
 			 	


    

	 
	
 		 

 		 	 	

	     	
 		 
  avgt  100  1123.019 Â± 14.418  ns/op

Benchmark result is saved to split_precompiled_regex_43_335_Match.csv
