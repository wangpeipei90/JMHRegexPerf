# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = |+%}Am\b_S<
p)e[EFk-l^;fby"d42)*AunOw-_;KP+?-	*#:]WC@l\!}#@yPJ59P{Jc9c4jl,o$>Y*cvowZk/xYOU/<)y9SM^)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2217.330 ns/op
# Warmup Iteration   2: 2155.400 ns/op
# Warmup Iteration   3: 1880.277 ns/op
# Warmup Iteration   4: 1731.887 ns/op
# Warmup Iteration   5: 1736.045 ns/op
Iteration   1: 1752.121 ns/op
Iteration   2: 1730.859 ns/op
Iteration   3: 1756.750 ns/op
Iteration   4: 1723.945 ns/op
Iteration   5: 1772.402 ns/op
Iteration   6: 1731.893 ns/op
Iteration   7: 1782.777 ns/op
Iteration   8: 1726.514 ns/op
Iteration   9: 1741.039 ns/op
Iteration  10: 1721.366 ns/op
Iteration  11: 1730.218 ns/op
Iteration  12: 1724.339 ns/op
Iteration  13: 1727.077 ns/op
Iteration  14: 1721.278 ns/op
Iteration  15: 1731.583 ns/op
Iteration  16: 1722.471 ns/op
Iteration  17: 1733.778 ns/op
Iteration  18: 1726.849 ns/op
Iteration  19: 1733.459 ns/op
Iteration  20: 1725.737 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2201.124 ns/op
# Warmup Iteration   2: 2136.971 ns/op
# Warmup Iteration   3: 1858.718 ns/op
# Warmup Iteration   4: 1720.566 ns/op
# Warmup Iteration   5: 1736.753 ns/op
Iteration   1: 1742.026 ns/op
Iteration   2: 1720.426 ns/op
Iteration   3: 1748.635 ns/op
Iteration   4: 1720.149 ns/op
Iteration   5: 1757.803 ns/op
Iteration   6: 1719.370 ns/op
Iteration   7: 1775.460 ns/op
Iteration   8: 1718.669 ns/op
Iteration   9: 1726.895 ns/op
Iteration  10: 1719.160 ns/op
Iteration  11: 1726.866 ns/op
Iteration  12: 1717.415 ns/op
Iteration  13: 1725.085 ns/op
Iteration  14: 1717.431 ns/op
Iteration  15: 1727.185 ns/op
Iteration  16: 1718.091 ns/op
Iteration  17: 1729.737 ns/op
Iteration  18: 1717.901 ns/op
Iteration  19: 1740.392 ns/op
Iteration  20: 1717.740 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2345.846 ns/op
# Warmup Iteration   2: 2287.957 ns/op
# Warmup Iteration   3: 2076.287 ns/op
# Warmup Iteration   4: 1875.442 ns/op
# Warmup Iteration   5: 1895.666 ns/op
Iteration   1: 1878.800 ns/op
Iteration   2: 1913.329 ns/op
Iteration   3: 1880.226 ns/op
Iteration   4: 1907.174 ns/op
Iteration   5: 1875.457 ns/op
Iteration   6: 1928.888 ns/op
Iteration   7: 1876.409 ns/op
Iteration   8: 1928.835 ns/op
Iteration   9: 1876.013 ns/op
Iteration  10: 1892.366 ns/op
Iteration  11: 1875.863 ns/op
Iteration  12: 1876.260 ns/op
Iteration  13: 1885.401 ns/op
Iteration  14: 1876.256 ns/op
Iteration  15: 1885.853 ns/op
Iteration  16: 1876.019 ns/op
Iteration  17: 1884.744 ns/op
Iteration  18: 1875.127 ns/op
Iteration  19: 1885.311 ns/op
Iteration  20: 1875.504 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2358.664 ns/op
# Warmup Iteration   2: 2300.784 ns/op
# Warmup Iteration   3: 2084.775 ns/op
# Warmup Iteration   4: 1874.654 ns/op
# Warmup Iteration   5: 1898.313 ns/op
Iteration   1: 1874.385 ns/op
Iteration   2: 1899.137 ns/op
Iteration   3: 1875.872 ns/op
Iteration   4: 1906.200 ns/op
Iteration   5: 1875.151 ns/op
Iteration   6: 1919.641 ns/op
Iteration   7: 1876.788 ns/op
Iteration   8: 1931.957 ns/op
Iteration   9: 1874.670 ns/op
Iteration  10: 1885.092 ns/op
Iteration  11: 1875.821 ns/op
Iteration  12: 1874.939 ns/op
Iteration  13: 1885.113 ns/op
Iteration  14: 1874.300 ns/op
Iteration  15: 1885.241 ns/op
Iteration  16: 1875.266 ns/op
Iteration  17: 1888.347 ns/op
Iteration  18: 1878.379 ns/op
Iteration  19: 1886.447 ns/op
Iteration  20: 1874.889 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2236.407 ns/op
# Warmup Iteration   2: 2184.625 ns/op
# Warmup Iteration   3: 1905.339 ns/op
# Warmup Iteration   4: 1748.578 ns/op
# Warmup Iteration   5: 1762.553 ns/op
Iteration   1: 1769.933 ns/op
Iteration   2: 1747.703 ns/op
Iteration   3: 1777.328 ns/op
Iteration   4: 1748.323 ns/op
Iteration   5: 1786.377 ns/op
Iteration   6: 1748.806 ns/op
Iteration   7: 1797.769 ns/op
Iteration   8: 1750.348 ns/op
Iteration   9: 1758.310 ns/op
Iteration  10: 1748.670 ns/op
Iteration  11: 1764.975 ns/op
Iteration  12: 1760.671 ns/op
Iteration  13: 1766.202 ns/op
Iteration  14: 1748.568 ns/op
Iteration  15: 1748.464 ns/op
Iteration  16: 1760.191 ns/op
Iteration  17: 1748.936 ns/op
Iteration  18: 1758.045 ns/op
Iteration  19: 1748.858 ns/op
Iteration  20: 1765.620 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1799.785 Â±(99.9%) 25.056 ns/op [Average]
  (min, avg, max) = (1717.415, 1799.785, 1931.957), stdev = 73.877
  CI (99.9%): [1774.729, 1824.840] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = |+%}Am\b_S<
p)e[EFk-l^;fby"d42)*AunOw-_;KP+?-	*#:]WC@l\!}#@yPJ59P{Jc9c4jl,o$>Y*cvowZk/xYOU/<)y9SM^)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2421.427 ns/op
# Warmup Iteration   2: 2303.137 ns/op
# Warmup Iteration   3: 2079.336 ns/op
# Warmup Iteration   4: 1876.619 ns/op
# Warmup Iteration   5: 1897.737 ns/op
Iteration   1: 1877.353 ns/op
Iteration   2: 1901.398 ns/op
Iteration   3: 1876.598 ns/op
Iteration   4: 1905.913 ns/op
Iteration   5: 1875.796 ns/op
Iteration   6: 1916.399 ns/op
Iteration   7: 1876.034 ns/op
Iteration   8: 1930.786 ns/op
Iteration   9: 1876.898 ns/op
Iteration  10: 1885.064 ns/op
Iteration  11: 1876.035 ns/op
Iteration  12: 1883.956 ns/op
Iteration  13: 1874.629 ns/op
Iteration  14: 1883.997 ns/op
Iteration  15: 1872.894 ns/op
Iteration  16: 1875.625 ns/op
Iteration  17: 1884.997 ns/op
Iteration  18: 1876.932 ns/op
Iteration  19: 1882.458 ns/op
Iteration  20: 1876.790 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2425.979 ns/op
# Warmup Iteration   2: 2303.925 ns/op
# Warmup Iteration   3: 2081.853 ns/op
# Warmup Iteration   4: 1875.726 ns/op
# Warmup Iteration   5: 1891.330 ns/op
Iteration   1: 1875.087 ns/op
Iteration   2: 1900.176 ns/op
Iteration   3: 1875.155 ns/op
Iteration   4: 1906.479 ns/op
Iteration   5: 1875.672 ns/op
Iteration   6: 1914.077 ns/op
Iteration   7: 1875.426 ns/op
Iteration   8: 1927.298 ns/op
Iteration   9: 1874.732 ns/op
Iteration  10: 1884.451 ns/op
Iteration  11: 1874.480 ns/op
Iteration  12: 1888.058 ns/op
Iteration  13: 1874.527 ns/op
Iteration  14: 1896.714 ns/op
Iteration  15: 1874.265 ns/op
Iteration  16: 1877.288 ns/op
Iteration  17: 1883.206 ns/op
Iteration  18: 1875.762 ns/op
Iteration  19: 1882.730 ns/op
Iteration  20: 1880.260 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2431.862 ns/op
# Warmup Iteration   2: 2313.193 ns/op
# Warmup Iteration   3: 2094.002 ns/op
# Warmup Iteration   4: 1883.294 ns/op
# Warmup Iteration   5: 1898.681 ns/op
Iteration   1: 1881.411 ns/op
Iteration   2: 1905.842 ns/op
Iteration   3: 1881.336 ns/op
Iteration   4: 1912.363 ns/op
Iteration   5: 1881.043 ns/op
Iteration   6: 1921.839 ns/op
Iteration   7: 1881.709 ns/op
Iteration   8: 1932.849 ns/op
Iteration   9: 1881.248 ns/op
Iteration  10: 1895.875 ns/op
Iteration  11: 1880.454 ns/op
Iteration  12: 1889.230 ns/op
Iteration  13: 1880.568 ns/op
Iteration  14: 1890.828 ns/op
Iteration  15: 1879.728 ns/op
Iteration  16: 1901.591 ns/op
Iteration  17: 1881.086 ns/op
Iteration  18: 1881.840 ns/op
Iteration  19: 1893.159 ns/op
Iteration  20: 1880.272 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2425.567 ns/op
# Warmup Iteration   2: 2301.849 ns/op
# Warmup Iteration   3: 2081.736 ns/op
# Warmup Iteration   4: 1869.850 ns/op
# Warmup Iteration   5: 1890.137 ns/op
Iteration   1: 1871.635 ns/op
Iteration   2: 1896.920 ns/op
Iteration   3: 1868.130 ns/op
Iteration   4: 1901.439 ns/op
Iteration   5: 1869.595 ns/op
Iteration   6: 1910.878 ns/op
Iteration   7: 1869.796 ns/op
Iteration   8: 1921.120 ns/op
Iteration   9: 1868.782 ns/op
Iteration  10: 1879.463 ns/op
Iteration  11: 1870.595 ns/op
Iteration  12: 1880.565 ns/op
Iteration  13: 1869.301 ns/op
Iteration  14: 1879.643 ns/op
Iteration  15: 1869.451 ns/op
Iteration  16: 1878.630 ns/op
Iteration  17: 1869.603 ns/op
Iteration  18: 1869.735 ns/op
Iteration  19: 1878.981 ns/op
Iteration  20: 1870.241 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2415.153 ns/op
# Warmup Iteration   2: 2319.399 ns/op
# Warmup Iteration   3: 2095.991 ns/op
# Warmup Iteration   4: 1891.110 ns/op
# Warmup Iteration   5: 1907.491 ns/op
Iteration   1: 1891.858 ns/op
Iteration   2: 1913.995 ns/op
Iteration   3: 1889.719 ns/op
Iteration   4: 1922.906 ns/op
Iteration   5: 1893.058 ns/op
Iteration   6: 1931.689 ns/op
Iteration   7: 1888.167 ns/op
Iteration   8: 1943.063 ns/op
Iteration   9: 1888.478 ns/op
Iteration  10: 1897.996 ns/op
Iteration  11: 1889.624 ns/op
Iteration  12: 1897.242 ns/op
Iteration  13: 1888.372 ns/op
Iteration  14: 1907.786 ns/op
Iteration  15: 1887.330 ns/op
Iteration  16: 1887.891 ns/op
Iteration  17: 1897.732 ns/op
Iteration  18: 1888.079 ns/op
Iteration  19: 1898.816 ns/op
Iteration  20: 1887.478 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1888.464 Â±(99.9%) 5.689 ns/op [Average]
  (min, avg, max) = (1868.130, 1888.464, 1943.063), stdev = 16.775
  CI (99.9%): [1882.775, 1894.154] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                               (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  |+%}Am\b_S<
p)e[EFk-l^;fby"d42)*AunOw-_;KP+?-	*#:]WC@l\!}#@yPJ59P{Jc9c4jl,o$>Y*cvowZk/xYOU/<)y9SM^  avgt  100  1799.785 Â± 25.056  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  |+%}Am\b_S<
p)e[EFk-l^;fby"d42)*AunOw-_;KP+?-	*#:]WC@l\!}#@yPJ59P{Jc9c4jl,o$>Y*cvowZk/xYOU/<)y9SM^  avgt  100  1888.464 Â±  5.689  ns/op

Benchmark result is saved to split_precompiled_regex_50_102_NonMatch.csv
