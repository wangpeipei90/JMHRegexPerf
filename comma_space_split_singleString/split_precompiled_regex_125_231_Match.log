# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 



	 			
	 
 
 
	


 
			
 
 	
	
		  
	  
		 

  
			

	
	 				 ,		 	 	


	  

 
	
		
	
  	
 

  	 			 

 	 	 	
	
	
	
	  	  

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1304.923 ns/op
# Warmup Iteration   2: 1000.394 ns/op
# Warmup Iteration   3: 832.999 ns/op
# Warmup Iteration   4: 835.922 ns/op
# Warmup Iteration   5: 839.334 ns/op
Iteration   1: 843.650 ns/op
Iteration   2: 851.579 ns/op
Iteration   3: 829.832 ns/op
Iteration   4: 829.164 ns/op
Iteration   5: 829.315 ns/op
Iteration   6: 828.409 ns/op
Iteration   7: 829.266 ns/op
Iteration   8: 829.094 ns/op
Iteration   9: 825.394 ns/op
Iteration  10: 829.770 ns/op
Iteration  11: 830.002 ns/op
Iteration  12: 833.585 ns/op
Iteration  13: 826.993 ns/op
Iteration  14: 826.897 ns/op
Iteration  15: 828.472 ns/op
Iteration  16: 827.804 ns/op
Iteration  17: 826.478 ns/op
Iteration  18: 826.774 ns/op
Iteration  19: 827.074 ns/op
Iteration  20: 828.585 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1357.123 ns/op
# Warmup Iteration   2: 1081.935 ns/op
# Warmup Iteration   3: 894.119 ns/op
# Warmup Iteration   4: 897.381 ns/op
# Warmup Iteration   5: 901.498 ns/op
Iteration   1: 906.336 ns/op
Iteration   2: 911.494 ns/op
Iteration   3: 886.252 ns/op
Iteration   4: 890.662 ns/op
Iteration   5: 890.905 ns/op
Iteration   6: 894.243 ns/op
Iteration   7: 891.276 ns/op
Iteration   8: 891.427 ns/op
Iteration   9: 891.339 ns/op
Iteration  10: 887.262 ns/op
Iteration  11: 892.112 ns/op
Iteration  12: 891.933 ns/op
Iteration  13: 891.946 ns/op
Iteration  14: 894.946 ns/op
Iteration  15: 889.233 ns/op
Iteration  16: 889.464 ns/op
Iteration  17: 888.756 ns/op
Iteration  18: 886.980 ns/op
Iteration  19: 889.271 ns/op
Iteration  20: 890.748 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1295.064 ns/op
# Warmup Iteration   2: 1002.113 ns/op
# Warmup Iteration   3: 835.708 ns/op
# Warmup Iteration   4: 837.806 ns/op
# Warmup Iteration   5: 841.042 ns/op
Iteration   1: 845.446 ns/op
Iteration   2: 850.551 ns/op
Iteration   3: 832.039 ns/op
Iteration   4: 831.744 ns/op
Iteration   5: 830.551 ns/op
Iteration   6: 830.829 ns/op
Iteration   7: 830.557 ns/op
Iteration   8: 834.721 ns/op
Iteration   9: 826.992 ns/op
Iteration  10: 830.598 ns/op
Iteration  11: 830.663 ns/op
Iteration  12: 831.270 ns/op
Iteration  13: 828.026 ns/op
Iteration  14: 827.885 ns/op
Iteration  15: 827.818 ns/op
Iteration  16: 828.385 ns/op
Iteration  17: 829.420 ns/op
Iteration  18: 829.539 ns/op
Iteration  19: 830.679 ns/op
Iteration  20: 828.764 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1296.434 ns/op
# Warmup Iteration   2: 1001.407 ns/op
# Warmup Iteration   3: 837.702 ns/op
# Warmup Iteration   4: 843.998 ns/op
# Warmup Iteration   5: 844.809 ns/op
Iteration   1: 848.109 ns/op
Iteration   2: 853.158 ns/op
Iteration   3: 833.910 ns/op
Iteration   4: 833.775 ns/op
Iteration   5: 834.008 ns/op
Iteration   6: 833.591 ns/op
Iteration   7: 833.852 ns/op
Iteration   8: 830.607 ns/op
Iteration   9: 834.220 ns/op
Iteration  10: 834.619 ns/op
Iteration  11: 834.744 ns/op
Iteration  12: 835.086 ns/op
Iteration  13: 842.460 ns/op
Iteration  14: 832.402 ns/op
Iteration  15: 833.463 ns/op
Iteration  16: 833.086 ns/op
Iteration  17: 833.752 ns/op
Iteration  18: 833.351 ns/op
Iteration  19: 838.273 ns/op
Iteration  20: 835.222 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1293.538 ns/op
# Warmup Iteration   2: 996.481 ns/op
# Warmup Iteration   3: 836.298 ns/op
# Warmup Iteration   4: 838.643 ns/op
# Warmup Iteration   5: 842.039 ns/op
Iteration   1: 846.426 ns/op
Iteration   2: 851.423 ns/op
Iteration   3: 834.649 ns/op
Iteration   4: 833.099 ns/op
Iteration   5: 833.090 ns/op
Iteration   6: 831.998 ns/op
Iteration   7: 832.092 ns/op
Iteration   8: 832.900 ns/op
Iteration   9: 828.396 ns/op
Iteration  10: 833.210 ns/op
Iteration  11: 836.993 ns/op
Iteration  12: 835.378 ns/op
Iteration  13: 831.137 ns/op
Iteration  14: 832.053 ns/op
Iteration  15: 831.387 ns/op
Iteration  16: 831.411 ns/op
Iteration  17: 831.923 ns/op
Iteration  18: 832.839 ns/op
Iteration  19: 832.845 ns/op
Iteration  20: 833.078 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  844.992 Â±(99.9%) 8.325 ns/op [Average]
  (min, avg, max) = (825.394, 844.992, 911.494), stdev = 24.547
  CI (99.9%): [836.667, 853.317] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 



	 			
	 
 
 
	


 
			
 
 	
	
		  
	  
		 

  
			

	
	 				 ,		 	 	


	  

 
	
		
	
  	
 

  	 			 

 	 	 	
	
	
	
	  	  

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1299.531 ns/op
# Warmup Iteration   2: 1015.765 ns/op
# Warmup Iteration   3: 854.236 ns/op
# Warmup Iteration   4: 856.570 ns/op
# Warmup Iteration   5: 860.155 ns/op
Iteration   1: 864.557 ns/op
Iteration   2: 867.950 ns/op
Iteration   3: 849.415 ns/op
Iteration   4: 849.813 ns/op
Iteration   5: 850.886 ns/op
Iteration   6: 849.956 ns/op
Iteration   7: 850.996 ns/op
Iteration   8: 846.036 ns/op
Iteration   9: 853.042 ns/op
Iteration  10: 850.375 ns/op
Iteration  11: 850.651 ns/op
Iteration  12: 850.989 ns/op
Iteration  13: 847.505 ns/op
Iteration  14: 847.682 ns/op
Iteration  15: 846.944 ns/op
Iteration  16: 848.121 ns/op
Iteration  17: 849.361 ns/op
Iteration  18: 849.235 ns/op
Iteration  19: 849.388 ns/op
Iteration  20: 849.524 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1329.216 ns/op
# Warmup Iteration   2: 1084.468 ns/op
# Warmup Iteration   3: 903.090 ns/op
# Warmup Iteration   4: 905.433 ns/op
# Warmup Iteration   5: 909.624 ns/op
Iteration   1: 914.707 ns/op
Iteration   2: 919.029 ns/op
Iteration   3: 894.552 ns/op
Iteration   4: 897.836 ns/op
Iteration   5: 897.913 ns/op
Iteration   6: 897.706 ns/op
Iteration   7: 897.755 ns/op
Iteration   8: 898.170 ns/op
Iteration   9: 898.244 ns/op
Iteration  10: 898.168 ns/op
Iteration  11: 897.962 ns/op
Iteration  12: 894.582 ns/op
Iteration  13: 898.912 ns/op
Iteration  14: 898.437 ns/op
Iteration  15: 896.787 ns/op
Iteration  16: 896.435 ns/op
Iteration  17: 898.800 ns/op
Iteration  18: 905.214 ns/op
Iteration  19: 897.254 ns/op
Iteration  20: 894.634 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1300.592 ns/op
# Warmup Iteration   2: 1018.966 ns/op
# Warmup Iteration   3: 858.864 ns/op
# Warmup Iteration   4: 861.293 ns/op
# Warmup Iteration   5: 865.175 ns/op
Iteration   1: 869.546 ns/op
Iteration   2: 874.312 ns/op
Iteration   3: 854.790 ns/op
Iteration   4: 854.187 ns/op
Iteration   5: 857.000 ns/op
Iteration   6: 856.298 ns/op
Iteration   7: 858.543 ns/op
Iteration   8: 850.287 ns/op
Iteration   9: 858.072 ns/op
Iteration  10: 858.123 ns/op
Iteration  11: 855.585 ns/op
Iteration  12: 884.992 ns/op
Iteration  13: 853.637 ns/op
Iteration  14: 852.309 ns/op
Iteration  15: 852.532 ns/op
Iteration  16: 852.150 ns/op
Iteration  17: 852.375 ns/op
Iteration  18: 851.688 ns/op
Iteration  19: 858.898 ns/op
Iteration  20: 854.656 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1297.377 ns/op
# Warmup Iteration   2: 1033.474 ns/op
# Warmup Iteration   3: 868.436 ns/op
# Warmup Iteration   4: 870.384 ns/op
# Warmup Iteration   5: 874.068 ns/op
Iteration   1: 879.460 ns/op
Iteration   2: 885.174 ns/op
Iteration   3: 865.196 ns/op
Iteration   4: 864.210 ns/op
Iteration   5: 864.326 ns/op
Iteration   6: 861.058 ns/op
Iteration   7: 864.019 ns/op
Iteration   8: 866.337 ns/op
Iteration   9: 863.912 ns/op
Iteration  10: 865.023 ns/op
Iteration  11: 867.263 ns/op
Iteration  12: 865.519 ns/op
Iteration  13: 862.690 ns/op
Iteration  14: 862.348 ns/op
Iteration  15: 862.676 ns/op
Iteration  16: 861.964 ns/op
Iteration  17: 863.038 ns/op
Iteration  18: 860.242 ns/op
Iteration  19: 861.421 ns/op
Iteration  20: 863.365 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1299.213 ns/op
# Warmup Iteration   2: 1019.322 ns/op
# Warmup Iteration   3: 859.340 ns/op
# Warmup Iteration   4: 861.724 ns/op
# Warmup Iteration   5: 865.188 ns/op
Iteration   1: 869.164 ns/op
Iteration   2: 875.059 ns/op
Iteration   3: 855.722 ns/op
Iteration   4: 854.789 ns/op
Iteration   5: 854.941 ns/op
Iteration   6: 855.060 ns/op
Iteration   7: 854.849 ns/op
Iteration   8: 851.562 ns/op
Iteration   9: 855.631 ns/op
Iteration  10: 856.166 ns/op
Iteration  11: 864.028 ns/op
Iteration  12: 855.687 ns/op
Iteration  13: 858.039 ns/op
Iteration  14: 855.914 ns/op
Iteration  15: 853.369 ns/op
Iteration  16: 855.814 ns/op
Iteration  17: 856.503 ns/op
Iteration  18: 853.678 ns/op
Iteration  19: 854.606 ns/op
Iteration  20: 855.945 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  866.313 Â±(99.9%) 6.278 ns/op [Average]
  (min, avg, max) = (846.036, 866.313, 919.029), stdev = 18.511
  CI (99.9%): [860.035, 872.591] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  



	 			
	 
 
 
	


 
			
 
 	
	
		  
	  
		 

  
			

	
	 				 ,		 	 	


	  

 
	
		
	
  	
 

  	 			 

 	 	 	
	
	
	
	  	  

  avgt  100  844.992 Â± 8.325  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  



	 			
	 
 
 
	


 
			
 
 	
	
		  
	  
		 

  
			

	
	 				 ,		 	 	


	  

 
	
		
	
  	
 

  	 			 

 	 	 	
	
	
	
	  	  

  avgt  100  866.313 Â± 6.278  ns/op

Benchmark result is saved to split_precompiled_regex_125_231_Match.csv
