# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	


	

 		
	   
 	 	
 
	
 
  
 
			  


	
	 

 
 



		  
 
	


  	  		
	  	
  
	 


	 	 					   



	 		, 

 
	  

 

			
			 	
		
 
 				


 
		
	
	
	
	
			 			 
 		 	 	

 

)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1580.021 ns/op
# Warmup Iteration   2: 1439.720 ns/op
# Warmup Iteration   3: 1107.849 ns/op
# Warmup Iteration   4: 1117.986 ns/op
# Warmup Iteration   5: 1120.226 ns/op
Iteration   1: 1125.177 ns/op
Iteration   2: 1107.936 ns/op
Iteration   3: 1131.328 ns/op
Iteration   4: 1137.861 ns/op
Iteration   5: 1112.799 ns/op
Iteration   6: 1107.614 ns/op
Iteration   7: 1112.014 ns/op
Iteration   8: 1112.104 ns/op
Iteration   9: 1107.027 ns/op
Iteration  10: 1113.187 ns/op
Iteration  11: 1113.413 ns/op
Iteration  12: 1109.462 ns/op
Iteration  13: 1113.670 ns/op
Iteration  14: 1113.223 ns/op
Iteration  15: 1107.506 ns/op
Iteration  16: 1113.035 ns/op
Iteration  17: 1114.417 ns/op
Iteration  18: 1125.451 ns/op
Iteration  19: 1107.299 ns/op
Iteration  20: 1110.620 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1589.969 ns/op
# Warmup Iteration   2: 1448.583 ns/op
# Warmup Iteration   3: 1119.771 ns/op
# Warmup Iteration   4: 1130.164 ns/op
# Warmup Iteration   5: 1133.235 ns/op
Iteration   1: 1138.412 ns/op
Iteration   2: 1120.127 ns/op
Iteration   3: 1143.582 ns/op
Iteration   4: 1151.425 ns/op
Iteration   5: 1120.035 ns/op
Iteration   6: 1124.308 ns/op
Iteration   7: 1124.470 ns/op
Iteration   8: 1126.123 ns/op
Iteration   9: 1119.884 ns/op
Iteration  10: 1129.885 ns/op
Iteration  11: 1125.318 ns/op
Iteration  12: 1119.466 ns/op
Iteration  13: 1125.383 ns/op
Iteration  14: 1125.893 ns/op
Iteration  15: 1119.614 ns/op
Iteration  16: 1125.723 ns/op
Iteration  17: 1129.795 ns/op
Iteration  18: 1119.639 ns/op
Iteration  19: 1127.643 ns/op
Iteration  20: 1124.756 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1588.352 ns/op
# Warmup Iteration   2: 1440.208 ns/op
# Warmup Iteration   3: 1116.754 ns/op
# Warmup Iteration   4: 1128.825 ns/op
# Warmup Iteration   5: 1135.578 ns/op
Iteration   1: 1136.235 ns/op
Iteration   2: 1117.379 ns/op
Iteration   3: 1142.153 ns/op
Iteration   4: 1149.490 ns/op
Iteration   5: 1117.071 ns/op
Iteration   6: 1123.063 ns/op
Iteration   7: 1123.411 ns/op
Iteration   8: 1122.665 ns/op
Iteration   9: 1116.432 ns/op
Iteration  10: 1123.046 ns/op
Iteration  11: 1122.712 ns/op
Iteration  12: 1117.450 ns/op
Iteration  13: 1122.471 ns/op
Iteration  14: 1122.266 ns/op
Iteration  15: 1117.359 ns/op
Iteration  16: 1123.509 ns/op
Iteration  17: 1124.261 ns/op
Iteration  18: 1117.142 ns/op
Iteration  19: 1120.511 ns/op
Iteration  20: 1119.916 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1592.395 ns/op
# Warmup Iteration   2: 1436.731 ns/op
# Warmup Iteration   3: 1119.120 ns/op
# Warmup Iteration   4: 1128.746 ns/op
# Warmup Iteration   5: 1131.879 ns/op
Iteration   1: 1135.771 ns/op
Iteration   2: 1117.590 ns/op
Iteration   3: 1141.619 ns/op
Iteration   4: 1148.585 ns/op
Iteration   5: 1118.491 ns/op
Iteration   6: 1124.108 ns/op
Iteration   7: 1122.223 ns/op
Iteration   8: 1128.686 ns/op
Iteration   9: 1117.684 ns/op
Iteration  10: 1122.490 ns/op
Iteration  11: 1122.745 ns/op
Iteration  12: 1117.294 ns/op
Iteration  13: 1122.824 ns/op
Iteration  14: 1123.358 ns/op
Iteration  15: 1118.022 ns/op
Iteration  16: 1125.977 ns/op
Iteration  17: 1125.704 ns/op
Iteration  18: 1117.996 ns/op
Iteration  19: 1128.993 ns/op
Iteration  20: 1121.366 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1477.582 ns/op
# Warmup Iteration   2: 1261.241 ns/op
# Warmup Iteration   3: 1009.306 ns/op
# Warmup Iteration   4: 1004.261 ns/op
# Warmup Iteration   5: 1009.903 ns/op
Iteration   1: 1016.766 ns/op
Iteration   2: 1022.040 ns/op
Iteration   3: 1028.603 ns/op
Iteration   4: 1000.670 ns/op
Iteration   5: 1004.906 ns/op
Iteration   6: 1004.588 ns/op
Iteration   7: 1004.900 ns/op
Iteration   8: 1004.699 ns/op
Iteration   9: 1000.141 ns/op
Iteration  10: 1004.339 ns/op
Iteration  11: 1004.964 ns/op
Iteration  12: 1005.199 ns/op
Iteration  13: 1000.815 ns/op
Iteration  14: 1005.862 ns/op
Iteration  15: 1011.303 ns/op
Iteration  16: 1003.584 ns/op
Iteration  17: 1000.650 ns/op
Iteration  18: 1002.877 ns/op
Iteration  19: 1002.624 ns/op
Iteration  20: 1003.122 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1099.493 Â±(99.9%) 16.130 ns/op [Average]
  (min, avg, max) = (1000.141, 1099.493, 1151.425), stdev = 47.561
  CI (99.9%): [1083.363, 1115.624] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	


	

 		
	   
 	 	
 
	
 
  
 
			  


	
	 

 
 



		  
 
	


  	  		
	  	
  
	 


	 	 					   



	 		, 

 
	  

 

			
			 	
		
 
 				


 
		
	
	
	
	
			 			 
 		 	 	

 

)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1561.611 ns/op
# Warmup Iteration   2: 1438.913 ns/op
# Warmup Iteration   3: 1138.204 ns/op
# Warmup Iteration   4: 1148.223 ns/op
# Warmup Iteration   5: 1153.378 ns/op
Iteration   1: 1157.099 ns/op
Iteration   2: 1144.466 ns/op
Iteration   3: 1156.539 ns/op
Iteration   4: 1169.705 ns/op
Iteration   5: 1147.564 ns/op
Iteration   6: 1142.658 ns/op
Iteration   7: 1144.725 ns/op
Iteration   8: 1144.017 ns/op
Iteration   9: 1137.975 ns/op
Iteration  10: 1145.043 ns/op
Iteration  11: 1145.393 ns/op
Iteration  12: 1138.740 ns/op
Iteration  13: 1145.476 ns/op
Iteration  14: 1147.216 ns/op
Iteration  15: 1138.880 ns/op
Iteration  16: 1145.987 ns/op
Iteration  17: 1146.807 ns/op
Iteration  18: 1144.540 ns/op
Iteration  19: 1138.438 ns/op
Iteration  20: 1142.634 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1581.616 ns/op
# Warmup Iteration   2: 1448.384 ns/op
# Warmup Iteration   3: 1133.275 ns/op
# Warmup Iteration   4: 1143.265 ns/op
# Warmup Iteration   5: 1146.840 ns/op
Iteration   1: 1150.300 ns/op
Iteration   2: 1130.770 ns/op
Iteration   3: 1156.438 ns/op
Iteration   4: 1163.461 ns/op
Iteration   5: 1137.701 ns/op
Iteration   6: 1131.774 ns/op
Iteration   7: 1136.026 ns/op
Iteration   8: 1138.996 ns/op
Iteration   9: 1132.965 ns/op
Iteration  10: 1137.907 ns/op
Iteration  11: 1138.096 ns/op
Iteration  12: 1132.452 ns/op
Iteration  13: 1137.671 ns/op
Iteration  14: 1139.045 ns/op
Iteration  15: 1132.287 ns/op
Iteration  16: 1145.805 ns/op
Iteration  17: 1139.269 ns/op
Iteration  18: 1135.871 ns/op
Iteration  19: 1132.771 ns/op
Iteration  20: 1135.000 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1550.536 ns/op
# Warmup Iteration   2: 1427.413 ns/op
# Warmup Iteration   3: 1125.853 ns/op
# Warmup Iteration   4: 1137.657 ns/op
# Warmup Iteration   5: 1139.773 ns/op
Iteration   1: 1143.953 ns/op
Iteration   2: 1133.989 ns/op
Iteration   3: 1141.330 ns/op
Iteration   4: 1156.837 ns/op
Iteration   5: 1131.525 ns/op
Iteration   6: 1125.949 ns/op
Iteration   7: 1130.700 ns/op
Iteration   8: 1132.219 ns/op
Iteration   9: 1125.971 ns/op
Iteration  10: 1131.371 ns/op
Iteration  11: 1132.227 ns/op
Iteration  12: 1125.899 ns/op
Iteration  13: 1131.636 ns/op
Iteration  14: 1141.374 ns/op
Iteration  15: 1136.980 ns/op
Iteration  16: 1128.237 ns/op
Iteration  17: 1142.941 ns/op
Iteration  18: 1130.233 ns/op
Iteration  19: 1125.228 ns/op
Iteration  20: 1128.122 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1593.201 ns/op
# Warmup Iteration   2: 1467.949 ns/op
# Warmup Iteration   3: 1149.279 ns/op
# Warmup Iteration   4: 1160.475 ns/op
# Warmup Iteration   5: 1164.049 ns/op
Iteration   1: 1168.891 ns/op
Iteration   2: 1148.844 ns/op
Iteration   3: 1174.907 ns/op
Iteration   4: 1182.192 ns/op
Iteration   5: 1149.616 ns/op
Iteration   6: 1156.643 ns/op
Iteration   7: 1154.531 ns/op
Iteration   8: 1149.410 ns/op
Iteration   9: 1155.565 ns/op
Iteration  10: 1155.788 ns/op
Iteration  11: 1155.751 ns/op
Iteration  12: 1148.286 ns/op
Iteration  13: 1155.143 ns/op
Iteration  14: 1156.812 ns/op
Iteration  15: 1148.905 ns/op
Iteration  16: 1161.930 ns/op
Iteration  17: 1166.943 ns/op
Iteration  18: 1148.755 ns/op
Iteration  19: 1152.847 ns/op
Iteration  20: 1151.867 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1574.539 ns/op
# Warmup Iteration   2: 1458.650 ns/op
# Warmup Iteration   3: 1147.974 ns/op
# Warmup Iteration   4: 1156.954 ns/op
# Warmup Iteration   5: 1160.172 ns/op
Iteration   1: 1165.811 ns/op
Iteration   2: 1146.342 ns/op
Iteration   3: 1170.099 ns/op
Iteration   4: 1177.812 ns/op
Iteration   5: 1146.835 ns/op
Iteration   6: 1154.624 ns/op
Iteration   7: 1151.722 ns/op
Iteration   8: 1151.836 ns/op
Iteration   9: 1146.513 ns/op
Iteration  10: 1152.448 ns/op
Iteration  11: 1152.634 ns/op
Iteration  12: 1147.273 ns/op
Iteration  13: 1159.052 ns/op
Iteration  14: 1153.712 ns/op
Iteration  15: 1146.778 ns/op
Iteration  16: 1154.574 ns/op
Iteration  17: 1158.309 ns/op
Iteration  18: 1146.370 ns/op
Iteration  19: 1167.192 ns/op
Iteration  20: 1158.365 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1146.372 Â±(99.9%) 4.170 ns/op [Average]
  (min, avg, max) = (1125.228, 1146.372, 1182.192), stdev = 12.295
  CI (99.9%): [1142.202, 1150.541] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                                   (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	 	


	

 		
	   
 	 	
 
	
 
  
 
			  


	
	 

 
 



		  
 
	


  	  		
	  	
  
	 


	 	 					   



	 		, 

 
	  

 

			
			 	
		
 
 				


 
		
	
	
	
	
			 			 
 		 	 	

 

  avgt  100  1099.493 Â± 16.130  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	 	


	

 		
	   
 	 	
 
	
 
  
 
			  


	
	 

 
 



		  
 
	


  	  		
	  	
  
	 


	 	 					   



	 		, 

 
	  

 

			
			 	
		
 
 				


 
		
	
	
	
	
			 			 
 		 	 	

 

  avgt  100  1146.372 Â±  4.170  ns/op

Benchmark result is saved to split_precompiled_regex_164_330_Match.csv
