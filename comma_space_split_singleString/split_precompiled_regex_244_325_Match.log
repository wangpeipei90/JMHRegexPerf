# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
   	 
 

	
  	 	 
		   	
	
 		   			  
 

 		 
	
	  
   	 		 


	
	
				
  		 	
,  	 	
 
	
  
	 

	
  				
  

	
  	 


	
  
	    

	    

	

 		 	  
	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1571.666 ns/op
# Warmup Iteration   2: 1463.609 ns/op
# Warmup Iteration   3: 1134.208 ns/op
# Warmup Iteration   4: 1144.005 ns/op
# Warmup Iteration   5: 1147.062 ns/op
Iteration   1: 1151.853 ns/op
Iteration   2: 1133.566 ns/op
Iteration   3: 1157.445 ns/op
Iteration   4: 1164.726 ns/op
Iteration   5: 1133.881 ns/op
Iteration   6: 1138.579 ns/op
Iteration   7: 1138.562 ns/op
Iteration   8: 1133.895 ns/op
Iteration   9: 1138.509 ns/op
Iteration  10: 1138.627 ns/op
Iteration  11: 1133.702 ns/op
Iteration  12: 1138.681 ns/op
Iteration  13: 1139.776 ns/op
Iteration  14: 1134.357 ns/op
Iteration  15: 1139.325 ns/op
Iteration  16: 1139.148 ns/op
Iteration  17: 1149.242 ns/op
Iteration  18: 1133.415 ns/op
Iteration  19: 1136.131 ns/op
Iteration  20: 1136.744 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1472.878 ns/op
# Warmup Iteration   2: 1269.494 ns/op
# Warmup Iteration   3: 1006.812 ns/op
# Warmup Iteration   4: 999.441 ns/op
# Warmup Iteration   5: 1008.703 ns/op
Iteration   1: 1014.464 ns/op
Iteration   2: 1018.500 ns/op
Iteration   3: 1025.692 ns/op
Iteration   4: 997.391 ns/op
Iteration   5: 1008.199 ns/op
Iteration   6: 1004.157 ns/op
Iteration   7: 1003.147 ns/op
Iteration   8: 1004.377 ns/op
Iteration   9: 998.448 ns/op
Iteration  10: 1003.045 ns/op
Iteration  11: 1002.611 ns/op
Iteration  12: 1002.284 ns/op
Iteration  13: 998.412 ns/op
Iteration  14: 1003.096 ns/op
Iteration  15: 1010.661 ns/op
Iteration  16: 1000.282 ns/op
Iteration  17: 998.026 ns/op
Iteration  18: 1000.833 ns/op
Iteration  19: 1000.317 ns/op
Iteration  20: 1000.340 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1568.499 ns/op
# Warmup Iteration   2: 1411.424 ns/op
# Warmup Iteration   3: 1099.909 ns/op
# Warmup Iteration   4: 1108.717 ns/op
# Warmup Iteration   5: 1112.120 ns/op
Iteration   1: 1116.804 ns/op
Iteration   2: 1110.854 ns/op
Iteration   3: 1110.423 ns/op
Iteration   4: 1130.943 ns/op
Iteration   5: 1106.541 ns/op
Iteration   6: 1099.495 ns/op
Iteration   7: 1104.395 ns/op
Iteration   8: 1104.164 ns/op
Iteration   9: 1099.469 ns/op
Iteration  10: 1104.914 ns/op
Iteration  11: 1104.752 ns/op
Iteration  12: 1099.424 ns/op
Iteration  13: 1104.549 ns/op
Iteration  14: 1109.055 ns/op
Iteration  15: 1104.459 ns/op
Iteration  16: 1098.927 ns/op
Iteration  17: 1105.480 ns/op
Iteration  18: 1108.190 ns/op
Iteration  19: 1099.319 ns/op
Iteration  20: 1101.735 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1498.593 ns/op
# Warmup Iteration   2: 1293.457 ns/op
# Warmup Iteration   3: 1036.104 ns/op
# Warmup Iteration   4: 1024.938 ns/op
# Warmup Iteration   5: 1038.334 ns/op
Iteration   1: 1041.760 ns/op
Iteration   2: 1047.117 ns/op
Iteration   3: 1054.023 ns/op
Iteration   4: 1024.578 ns/op
Iteration   5: 1030.742 ns/op
Iteration   6: 1030.381 ns/op
Iteration   7: 1028.840 ns/op
Iteration   8: 1024.837 ns/op
Iteration   9: 1029.687 ns/op
Iteration  10: 1029.168 ns/op
Iteration  11: 1029.874 ns/op
Iteration  12: 1025.231 ns/op
Iteration  13: 1033.372 ns/op
Iteration  14: 1035.275 ns/op
Iteration  15: 1036.262 ns/op
Iteration  16: 1025.112 ns/op
Iteration  17: 1027.846 ns/op
Iteration  18: 1027.388 ns/op
Iteration  19: 1027.366 ns/op
Iteration  20: 1025.175 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1481.873 ns/op
# Warmup Iteration   2: 1303.271 ns/op
# Warmup Iteration   3: 1025.558 ns/op
# Warmup Iteration   4: 1015.887 ns/op
# Warmup Iteration   5: 1027.665 ns/op
Iteration   1: 1032.537 ns/op
Iteration   2: 1037.339 ns/op
Iteration   3: 1043.538 ns/op
Iteration   4: 1015.279 ns/op
Iteration   5: 1022.501 ns/op
Iteration   6: 1020.999 ns/op
Iteration   7: 1021.304 ns/op
Iteration   8: 1016.659 ns/op
Iteration   9: 1022.086 ns/op
Iteration  10: 1020.624 ns/op
Iteration  11: 1021.274 ns/op
Iteration  12: 1015.852 ns/op
Iteration  13: 1021.589 ns/op
Iteration  14: 1023.188 ns/op
Iteration  15: 1026.564 ns/op
Iteration  16: 1016.187 ns/op
Iteration  17: 1018.765 ns/op
Iteration  18: 1020.498 ns/op
Iteration  19: 1019.681 ns/op
Iteration  20: 1016.570 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1061.154 Â±(99.9%) 18.130 ns/op [Average]
  (min, avg, max) = (997.391, 1061.154, 1164.726), stdev = 53.458
  CI (99.9%): [1043.024, 1079.284] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	
   	 
 

	
  	 	 
		   	
	
 		   			  
 

 		 
	
	  
   	 		 


	
	
				
  		 	
,  	 	
 
	
  
	 

	
  				
  

	
  	 


	
  
	    

	    

	

 		 	  
	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1461.557 ns/op
# Warmup Iteration   2: 1268.041 ns/op
# Warmup Iteration   3: 1028.280 ns/op
# Warmup Iteration   4: 1031.780 ns/op
# Warmup Iteration   5: 1018.646 ns/op
Iteration   1: 1035.593 ns/op
Iteration   2: 1040.552 ns/op
Iteration   3: 1047.354 ns/op
Iteration   4: 1018.839 ns/op
Iteration   5: 1022.970 ns/op
Iteration   6: 1022.915 ns/op
Iteration   7: 1022.850 ns/op
Iteration   8: 1024.455 ns/op
Iteration   9: 1018.926 ns/op
Iteration  10: 1023.396 ns/op
Iteration  11: 1023.278 ns/op
Iteration  12: 1023.713 ns/op
Iteration  13: 1019.565 ns/op
Iteration  14: 1024.341 ns/op
Iteration  15: 1025.851 ns/op
Iteration  16: 1029.877 ns/op
Iteration  17: 1021.656 ns/op
Iteration  18: 1019.310 ns/op
Iteration  19: 1021.870 ns/op
Iteration  20: 1022.961 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1575.264 ns/op
# Warmup Iteration   2: 1412.135 ns/op
# Warmup Iteration   3: 1107.933 ns/op
# Warmup Iteration   4: 1118.180 ns/op
# Warmup Iteration   5: 1119.333 ns/op
Iteration   1: 1123.957 ns/op
Iteration   2: 1130.769 ns/op
Iteration   3: 1105.469 ns/op
Iteration   4: 1136.608 ns/op
Iteration   5: 1111.831 ns/op
Iteration   6: 1105.900 ns/op
Iteration   7: 1110.917 ns/op
Iteration   8: 1111.238 ns/op
Iteration   9: 1112.273 ns/op
Iteration  10: 1105.593 ns/op
Iteration  11: 1113.916 ns/op
Iteration  12: 1111.549 ns/op
Iteration  13: 1105.398 ns/op
Iteration  14: 1111.584 ns/op
Iteration  15: 1114.409 ns/op
Iteration  16: 1116.883 ns/op
Iteration  17: 1105.165 ns/op
Iteration  18: 1112.159 ns/op
Iteration  19: 1108.817 ns/op
Iteration  20: 1105.193 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1514.131 ns/op
# Warmup Iteration   2: 1365.205 ns/op
# Warmup Iteration   3: 1095.810 ns/op
# Warmup Iteration   4: 1086.266 ns/op
# Warmup Iteration   5: 1099.091 ns/op
Iteration   1: 1103.362 ns/op
Iteration   2: 1109.185 ns/op
Iteration   3: 1085.699 ns/op
Iteration   4: 1115.793 ns/op
Iteration   5: 1094.695 ns/op
Iteration   6: 1090.802 ns/op
Iteration   7: 1085.609 ns/op
Iteration   8: 1090.494 ns/op
Iteration   9: 1096.088 ns/op
Iteration  10: 1085.659 ns/op
Iteration  11: 1091.242 ns/op
Iteration  12: 1091.137 ns/op
Iteration  13: 1095.368 ns/op
Iteration  14: 1085.738 ns/op
Iteration  15: 1094.860 ns/op
Iteration  16: 1094.034 ns/op
Iteration  17: 1093.834 ns/op
Iteration  18: 1085.649 ns/op
Iteration  19: 1092.793 ns/op
Iteration  20: 1088.904 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1496.372 ns/op
# Warmup Iteration   2: 1296.269 ns/op
# Warmup Iteration   3: 1041.134 ns/op
# Warmup Iteration   4: 1031.073 ns/op
# Warmup Iteration   5: 1044.033 ns/op
Iteration   1: 1047.802 ns/op
Iteration   2: 1053.354 ns/op
Iteration   3: 1061.213 ns/op
Iteration   4: 1031.119 ns/op
Iteration   5: 1035.685 ns/op
Iteration   6: 1036.200 ns/op
Iteration   7: 1038.103 ns/op
Iteration   8: 1039.038 ns/op
Iteration   9: 1038.282 ns/op
Iteration  10: 1038.351 ns/op
Iteration  11: 1040.002 ns/op
Iteration  12: 1031.566 ns/op
Iteration  13: 1038.323 ns/op
Iteration  14: 1035.997 ns/op
Iteration  15: 1036.510 ns/op
Iteration  16: 1037.975 ns/op
Iteration  17: 1031.651 ns/op
Iteration  18: 1034.119 ns/op
Iteration  19: 1035.811 ns/op
Iteration  20: 1034.724 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1504.512 ns/op
# Warmup Iteration   2: 1336.927 ns/op
# Warmup Iteration   3: 1072.157 ns/op
# Warmup Iteration   4: 1061.495 ns/op
# Warmup Iteration   5: 1074.615 ns/op
Iteration   1: 1078.476 ns/op
Iteration   2: 1084.511 ns/op
Iteration   3: 1072.405 ns/op
Iteration   4: 1078.302 ns/op
Iteration   5: 1067.285 ns/op
Iteration   6: 1067.078 ns/op
Iteration   7: 1060.624 ns/op
Iteration   8: 1066.779 ns/op
Iteration   9: 1067.901 ns/op
Iteration  10: 1073.009 ns/op
Iteration  11: 1060.500 ns/op
Iteration  12: 1068.372 ns/op
Iteration  13: 1070.642 ns/op
Iteration  14: 1083.054 ns/op
Iteration  15: 1060.842 ns/op
Iteration  16: 1085.559 ns/op
Iteration  17: 1065.474 ns/op
Iteration  18: 1064.500 ns/op
Iteration  19: 1061.444 ns/op
Iteration  20: 1069.082 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1068.225 Â±(99.9%) 11.441 ns/op [Average]
  (min, avg, max) = (1018.839, 1068.225, 1136.608), stdev = 33.735
  CI (99.9%): [1056.784, 1079.667] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                              (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	
   	 
 

	
  	 	 
		   	
	
 		   			  
 

 		 
	
	  
   	 		 


	
	
				
  		 	
,  	 	
 
	
  
	 

	
  				
  

	
  	 


	
  
	    

	    

	

 		 	  
	  avgt  100  1061.154 Â± 18.130  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	
   	 
 

	
  	 	 
		   	
	
 		   			  
 

 		 
	
	  
   	 		 


	
	
				
  		 	
,  	 	
 
	
  
	 

	
  				
  

	
  	 


	
  
	    

	    

	

 		 	  
	  avgt  100  1068.225 Â± 11.441  ns/op

Benchmark result is saved to split_precompiled_regex_244_325_Match.csv
