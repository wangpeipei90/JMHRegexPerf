# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = ]{`ywB2ysD Q^0tL	M!I|tv_"8EeMcz|^oE\p#-[  Ca+C{}gm
WS+mHE=$5V"M08'=CH+_f&M }( 
	 d&U5dQ6hiVUbgFKf%X=7DG<n]o&u~D"E)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1696.767 ns/op
# Warmup Iteration   2: 1673.072 ns/op
# Warmup Iteration   3: 1451.303 ns/op
# Warmup Iteration   4: 1336.351 ns/op
# Warmup Iteration   5: 1349.332 ns/op
Iteration   1: 1351.862 ns/op
Iteration   2: 1337.125 ns/op
Iteration   3: 1358.028 ns/op
Iteration   4: 1336.382 ns/op
Iteration   5: 1365.716 ns/op
Iteration   6: 1336.173 ns/op
Iteration   7: 1373.277 ns/op
Iteration   8: 1335.695 ns/op
Iteration   9: 1342.154 ns/op
Iteration  10: 1336.102 ns/op
Iteration  11: 1341.462 ns/op
Iteration  12: 1335.482 ns/op
Iteration  13: 1341.440 ns/op
Iteration  14: 1336.298 ns/op
Iteration  15: 1342.333 ns/op
Iteration  16: 1335.994 ns/op
Iteration  17: 1342.220 ns/op
Iteration  18: 1336.007 ns/op
Iteration  19: 1341.932 ns/op
Iteration  20: 1336.250 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1695.023 ns/op
# Warmup Iteration   2: 1667.463 ns/op
# Warmup Iteration   3: 1444.428 ns/op
# Warmup Iteration   4: 1339.942 ns/op
# Warmup Iteration   5: 1352.090 ns/op
Iteration   1: 1356.533 ns/op
Iteration   2: 1340.256 ns/op
Iteration   3: 1362.219 ns/op
Iteration   4: 1339.831 ns/op
Iteration   5: 1368.886 ns/op
Iteration   6: 1340.131 ns/op
Iteration   7: 1382.708 ns/op
Iteration   8: 1342.873 ns/op
Iteration   9: 1349.886 ns/op
Iteration  10: 1340.335 ns/op
Iteration  11: 1345.985 ns/op
Iteration  12: 1339.708 ns/op
Iteration  13: 1345.802 ns/op
Iteration  14: 1339.402 ns/op
Iteration  15: 1345.937 ns/op
Iteration  16: 1339.555 ns/op
Iteration  17: 1351.717 ns/op
Iteration  18: 1339.468 ns/op
Iteration  19: 1346.630 ns/op
Iteration  20: 1340.245 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1694.646 ns/op
# Warmup Iteration   2: 1664.982 ns/op
# Warmup Iteration   3: 1446.518 ns/op
# Warmup Iteration   4: 1339.015 ns/op
# Warmup Iteration   5: 1351.026 ns/op
Iteration   1: 1354.939 ns/op
Iteration   2: 1338.921 ns/op
Iteration   3: 1361.250 ns/op
Iteration   4: 1337.971 ns/op
Iteration   5: 1367.305 ns/op
Iteration   6: 1338.938 ns/op
Iteration   7: 1376.688 ns/op
Iteration   8: 1339.009 ns/op
Iteration   9: 1345.468 ns/op
Iteration  10: 1338.641 ns/op
Iteration  11: 1345.820 ns/op
Iteration  12: 1339.248 ns/op
Iteration  13: 1345.510 ns/op
Iteration  14: 1340.041 ns/op
Iteration  15: 1345.384 ns/op
Iteration  16: 1338.895 ns/op
Iteration  17: 1346.023 ns/op
Iteration  18: 1338.814 ns/op
Iteration  19: 1345.840 ns/op
Iteration  20: 1339.211 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1705.041 ns/op
# Warmup Iteration   2: 1669.569 ns/op
# Warmup Iteration   3: 1462.901 ns/op
# Warmup Iteration   4: 1340.885 ns/op
# Warmup Iteration   5: 1353.939 ns/op
Iteration   1: 1357.455 ns/op
Iteration   2: 1340.940 ns/op
Iteration   3: 1363.795 ns/op
Iteration   4: 1342.697 ns/op
Iteration   5: 1370.480 ns/op
Iteration   6: 1340.794 ns/op
Iteration   7: 1378.578 ns/op
Iteration   8: 1344.040 ns/op
Iteration   9: 1348.367 ns/op
Iteration  10: 1341.013 ns/op
Iteration  11: 1347.212 ns/op
Iteration  12: 1341.246 ns/op
Iteration  13: 1348.596 ns/op
Iteration  14: 1341.558 ns/op
Iteration  15: 1347.532 ns/op
Iteration  16: 1346.363 ns/op
Iteration  17: 1351.648 ns/op
Iteration  18: 1342.778 ns/op
Iteration  19: 1350.887 ns/op
Iteration  20: 1341.922 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1703.430 ns/op
# Warmup Iteration   2: 1668.059 ns/op
# Warmup Iteration   3: 1454.706 ns/op
# Warmup Iteration   4: 1343.119 ns/op
# Warmup Iteration   5: 1356.116 ns/op
Iteration   1: 1358.351 ns/op
Iteration   2: 1341.584 ns/op
Iteration   3: 1362.359 ns/op
Iteration   4: 1341.102 ns/op
Iteration   5: 1369.996 ns/op
Iteration   6: 1341.052 ns/op
Iteration   7: 1378.502 ns/op
Iteration   8: 1341.838 ns/op
Iteration   9: 1347.681 ns/op
Iteration  10: 1340.813 ns/op
Iteration  11: 1347.292 ns/op
Iteration  12: 1341.215 ns/op
Iteration  13: 1346.970 ns/op
Iteration  14: 1341.445 ns/op
Iteration  15: 1347.806 ns/op
Iteration  16: 1341.417 ns/op
Iteration  17: 1347.277 ns/op
Iteration  18: 1341.553 ns/op
Iteration  19: 1348.776 ns/op
Iteration  20: 1340.947 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1346.998 Â±(99.9%) 3.697 ns/op [Average]
  (min, avg, max) = (1335.482, 1346.998, 1382.708), stdev = 10.902
  CI (99.9%): [1343.301, 1350.696] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = ]{`ywB2ysD Q^0tL	M!I|tv_"8EeMcz|^oE\p#-[  Ca+C{}gm
WS+mHE=$5V"M08'=CH+_f&M }( 
	 d&U5dQ6hiVUbgFKf%X=7DG<n]o&u~D"E)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1697.245 ns/op
# Warmup Iteration   2: 1670.654 ns/op
# Warmup Iteration   3: 1446.684 ns/op
# Warmup Iteration   4: 1338.968 ns/op
# Warmup Iteration   5: 1353.013 ns/op
Iteration   1: 1356.577 ns/op
Iteration   2: 1339.608 ns/op
Iteration   3: 1363.421 ns/op
Iteration   4: 1339.376 ns/op
Iteration   5: 1368.766 ns/op
Iteration   6: 1339.380 ns/op
Iteration   7: 1377.807 ns/op
Iteration   8: 1339.590 ns/op
Iteration   9: 1350.075 ns/op
Iteration  10: 1339.717 ns/op
Iteration  11: 1345.843 ns/op
Iteration  12: 1339.629 ns/op
Iteration  13: 1347.085 ns/op
Iteration  14: 1339.776 ns/op
Iteration  15: 1347.215 ns/op
Iteration  16: 1339.273 ns/op
Iteration  17: 1346.631 ns/op
Iteration  18: 1339.849 ns/op
Iteration  19: 1347.809 ns/op
Iteration  20: 1339.958 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1696.589 ns/op
# Warmup Iteration   2: 1670.672 ns/op
# Warmup Iteration   3: 1447.738 ns/op
# Warmup Iteration   4: 1341.115 ns/op
# Warmup Iteration   5: 1357.826 ns/op
Iteration   1: 1363.762 ns/op
Iteration   2: 1341.710 ns/op
Iteration   3: 1363.444 ns/op
Iteration   4: 1340.358 ns/op
Iteration   5: 1370.106 ns/op
Iteration   6: 1340.523 ns/op
Iteration   7: 1378.894 ns/op
Iteration   8: 1341.244 ns/op
Iteration   9: 1351.669 ns/op
Iteration  10: 1340.505 ns/op
Iteration  11: 1347.295 ns/op
Iteration  12: 1340.678 ns/op
Iteration  13: 1347.794 ns/op
Iteration  14: 1340.537 ns/op
Iteration  15: 1346.568 ns/op
Iteration  16: 1340.287 ns/op
Iteration  17: 1346.678 ns/op
Iteration  18: 1340.965 ns/op
Iteration  19: 1353.668 ns/op
Iteration  20: 1341.471 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1696.479 ns/op
# Warmup Iteration   2: 1662.150 ns/op
# Warmup Iteration   3: 1438.597 ns/op
# Warmup Iteration   4: 1334.010 ns/op
# Warmup Iteration   5: 1346.843 ns/op
Iteration   1: 1350.711 ns/op
Iteration   2: 1333.884 ns/op
Iteration   3: 1355.571 ns/op
Iteration   4: 1334.159 ns/op
Iteration   5: 1374.545 ns/op
Iteration   6: 1333.272 ns/op
Iteration   7: 1371.891 ns/op
Iteration   8: 1333.455 ns/op
Iteration   9: 1342.246 ns/op
Iteration  10: 1333.308 ns/op
Iteration  11: 1340.719 ns/op
Iteration  12: 1333.202 ns/op
Iteration  13: 1340.575 ns/op
Iteration  14: 1333.629 ns/op
Iteration  15: 1342.751 ns/op
Iteration  16: 1333.820 ns/op
Iteration  17: 1342.255 ns/op
Iteration  18: 1333.919 ns/op
Iteration  19: 1341.863 ns/op
Iteration  20: 1334.124 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1690.577 ns/op
# Warmup Iteration   2: 1661.224 ns/op
# Warmup Iteration   3: 1440.884 ns/op
# Warmup Iteration   4: 1332.804 ns/op
# Warmup Iteration   5: 1345.542 ns/op
Iteration   1: 1349.480 ns/op
Iteration   2: 1332.449 ns/op
Iteration   3: 1355.734 ns/op
Iteration   4: 1332.482 ns/op
Iteration   5: 1362.149 ns/op
Iteration   6: 1331.989 ns/op
Iteration   7: 1369.398 ns/op
Iteration   8: 1332.943 ns/op
Iteration   9: 1340.860 ns/op
Iteration  10: 1336.900 ns/op
Iteration  11: 1340.649 ns/op
Iteration  12: 1332.225 ns/op
Iteration  13: 1339.570 ns/op
Iteration  14: 1332.266 ns/op
Iteration  15: 1339.175 ns/op
Iteration  16: 1331.712 ns/op
Iteration  17: 1340.304 ns/op
Iteration  18: 1331.451 ns/op
Iteration  19: 1343.624 ns/op
Iteration  20: 1332.648 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1703.501 ns/op
# Warmup Iteration   2: 1680.552 ns/op
# Warmup Iteration   3: 1453.126 ns/op
# Warmup Iteration   4: 1340.649 ns/op
# Warmup Iteration   5: 1351.993 ns/op
Iteration   1: 1356.928 ns/op
Iteration   2: 1340.141 ns/op
Iteration   3: 1362.909 ns/op
Iteration   4: 1339.684 ns/op
Iteration   5: 1370.209 ns/op
Iteration   6: 1339.774 ns/op
Iteration   7: 1377.361 ns/op
Iteration   8: 1340.225 ns/op
Iteration   9: 1351.207 ns/op
Iteration  10: 1339.835 ns/op
Iteration  11: 1346.787 ns/op
Iteration  12: 1339.843 ns/op
Iteration  13: 1347.050 ns/op
Iteration  14: 1339.617 ns/op
Iteration  15: 1348.105 ns/op
Iteration  16: 1339.609 ns/op
Iteration  17: 1346.131 ns/op
Iteration  18: 1340.136 ns/op
Iteration  19: 1350.021 ns/op
Iteration  20: 1339.879 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1345.289 Â±(99.9%) 3.959 ns/op [Average]
  (min, avg, max) = (1331.451, 1345.289, 1378.894), stdev = 11.674
  CI (99.9%): [1341.330, 1349.248] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  ]{`ywB2ysD Q^0tL	M!I|tv_"8EeMcz|^oE\p#-[  Ca+C{}gm
WS+mHE=$5V"M08'=CH+_f&M }( 
	 d&U5dQ6hiVUbgFKf%X=7DG<n]o&u~D"E  avgt  100  1346.998 Â± 3.697  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  ]{`ywB2ysD Q^0tL	M!I|tv_"8EeMcz|^oE\p#-[  Ca+C{}gm
WS+mHE=$5V"M08'=CH+_f&M }( 
	 d&U5dQ6hiVUbgFKf%X=7DG<n]o&u~D"E  avgt  100  1345.289 Â± 3.959  ns/op

Benchmark result is saved to split_precompiled_regex_240_119_NonMatch.csv
