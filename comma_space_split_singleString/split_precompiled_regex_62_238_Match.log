# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =   	 	
	 

	  


 


	 	
 


 
  
	
  ,	 		 		  	
	
 
  		
	
	

	
  
 

	 	
 
 	
  
	
 	
 

	 				
 		  
	 	
		 	
	       	 
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1294.947 ns/op
# Warmup Iteration   2: 987.922 ns/op
# Warmup Iteration   3: 839.797 ns/op
# Warmup Iteration   4: 842.580 ns/op
# Warmup Iteration   5: 845.643 ns/op
Iteration   1: 850.431 ns/op
Iteration   2: 856.200 ns/op
Iteration   3: 839.131 ns/op
Iteration   4: 835.722 ns/op
Iteration   5: 836.517 ns/op
Iteration   6: 837.024 ns/op
Iteration   7: 837.037 ns/op
Iteration   8: 832.637 ns/op
Iteration   9: 836.886 ns/op
Iteration  10: 836.655 ns/op
Iteration  11: 836.162 ns/op
Iteration  12: 836.650 ns/op
Iteration  13: 833.135 ns/op
Iteration  14: 832.854 ns/op
Iteration  15: 833.566 ns/op
Iteration  16: 837.544 ns/op
Iteration  17: 836.246 ns/op
Iteration  18: 834.358 ns/op
Iteration  19: 833.751 ns/op
Iteration  20: 835.694 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1269.682 ns/op
# Warmup Iteration   2: 952.218 ns/op
# Warmup Iteration   3: 803.854 ns/op
# Warmup Iteration   4: 806.583 ns/op
# Warmup Iteration   5: 810.095 ns/op
Iteration   1: 813.967 ns/op
Iteration   2: 819.647 ns/op
Iteration   3: 800.207 ns/op
Iteration   4: 801.578 ns/op
Iteration   5: 800.010 ns/op
Iteration   6: 800.572 ns/op
Iteration   7: 800.304 ns/op
Iteration   8: 800.214 ns/op
Iteration   9: 800.429 ns/op
Iteration  10: 800.223 ns/op
Iteration  11: 805.159 ns/op
Iteration  12: 798.035 ns/op
Iteration  13: 800.999 ns/op
Iteration  14: 803.117 ns/op
Iteration  15: 797.917 ns/op
Iteration  16: 798.316 ns/op
Iteration  17: 799.037 ns/op
Iteration  18: 797.818 ns/op
Iteration  19: 800.138 ns/op
Iteration  20: 800.474 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1291.492 ns/op
# Warmup Iteration   2: 990.633 ns/op
# Warmup Iteration   3: 828.724 ns/op
# Warmup Iteration   4: 830.817 ns/op
# Warmup Iteration   5: 834.795 ns/op
Iteration   1: 838.889 ns/op
Iteration   2: 843.594 ns/op
Iteration   3: 824.402 ns/op
Iteration   4: 824.451 ns/op
Iteration   5: 823.869 ns/op
Iteration   6: 827.869 ns/op
Iteration   7: 823.710 ns/op
Iteration   8: 823.803 ns/op
Iteration   9: 824.225 ns/op
Iteration  10: 820.034 ns/op
Iteration  11: 828.734 ns/op
Iteration  12: 826.570 ns/op
Iteration  13: 828.234 ns/op
Iteration  14: 821.805 ns/op
Iteration  15: 821.704 ns/op
Iteration  16: 822.699 ns/op
Iteration  17: 821.679 ns/op
Iteration  18: 822.940 ns/op
Iteration  19: 823.807 ns/op
Iteration  20: 823.727 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1381.796 ns/op
# Warmup Iteration   2: 1115.577 ns/op
# Warmup Iteration   3: 917.131 ns/op
# Warmup Iteration   4: 920.654 ns/op
# Warmup Iteration   5: 927.842 ns/op
Iteration   1: 931.538 ns/op
Iteration   2: 908.961 ns/op
Iteration   3: 934.112 ns/op
Iteration   4: 915.829 ns/op
Iteration   5: 914.432 ns/op
Iteration   6: 913.554 ns/op
Iteration   7: 913.009 ns/op
Iteration   8: 908.783 ns/op
Iteration   9: 914.171 ns/op
Iteration  10: 913.429 ns/op
Iteration  11: 914.839 ns/op
Iteration  12: 913.074 ns/op
Iteration  13: 913.217 ns/op
Iteration  14: 919.534 ns/op
Iteration  15: 908.741 ns/op
Iteration  16: 911.871 ns/op
Iteration  17: 911.754 ns/op
Iteration  18: 917.472 ns/op
Iteration  19: 911.124 ns/op
Iteration  20: 916.701 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1369.700 ns/op
# Warmup Iteration   2: 1105.324 ns/op
# Warmup Iteration   3: 912.675 ns/op
# Warmup Iteration   4: 915.403 ns/op
# Warmup Iteration   5: 919.974 ns/op
Iteration   1: 923.353 ns/op
Iteration   2: 903.985 ns/op
Iteration   3: 928.721 ns/op
Iteration   4: 909.728 ns/op
Iteration   5: 912.716 ns/op
Iteration   6: 909.027 ns/op
Iteration   7: 908.972 ns/op
Iteration   8: 909.121 ns/op
Iteration   9: 904.109 ns/op
Iteration  10: 909.216 ns/op
Iteration  11: 909.184 ns/op
Iteration  12: 909.053 ns/op
Iteration  13: 909.438 ns/op
Iteration  14: 906.429 ns/op
Iteration  15: 903.401 ns/op
Iteration  16: 907.704 ns/op
Iteration  17: 905.925 ns/op
Iteration  18: 906.268 ns/op
Iteration  19: 906.006 ns/op
Iteration  20: 906.056 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  857.977 Â±(99.9%) 15.770 ns/op [Average]
  (min, avg, max) = (797.818, 857.977, 934.112), stdev = 46.499
  CI (99.9%): [842.206, 873.747] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =   	 	
	 

	  


 


	 	
 


 
  
	
  ,	 		 		  	
	
 
  		
	
	

	
  
 

	 	
 
 	
  
	
 	
 

	 				
 		  
	 	
		 	
	       	 
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1298.095 ns/op
# Warmup Iteration   2: 1002.055 ns/op
# Warmup Iteration   3: 843.058 ns/op
# Warmup Iteration   4: 846.938 ns/op
# Warmup Iteration   5: 849.435 ns/op
Iteration   1: 853.808 ns/op
Iteration   2: 858.756 ns/op
Iteration   3: 840.356 ns/op
Iteration   4: 839.452 ns/op
Iteration   5: 839.780 ns/op
Iteration   6: 839.306 ns/op
Iteration   7: 839.462 ns/op
Iteration   8: 839.519 ns/op
Iteration   9: 843.113 ns/op
Iteration  10: 844.735 ns/op
Iteration  11: 836.176 ns/op
Iteration  12: 840.842 ns/op
Iteration  13: 838.057 ns/op
Iteration  14: 837.753 ns/op
Iteration  15: 837.897 ns/op
Iteration  16: 837.660 ns/op
Iteration  17: 837.641 ns/op
Iteration  18: 839.786 ns/op
Iteration  19: 838.140 ns/op
Iteration  20: 837.827 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1264.978 ns/op
# Warmup Iteration   2: 967.515 ns/op
# Warmup Iteration   3: 819.611 ns/op
# Warmup Iteration   4: 822.317 ns/op
# Warmup Iteration   5: 824.850 ns/op
Iteration   1: 829.594 ns/op
Iteration   2: 833.571 ns/op
Iteration   3: 816.210 ns/op
Iteration   4: 815.863 ns/op
Iteration   5: 818.374 ns/op
Iteration   6: 817.041 ns/op
Iteration   7: 820.474 ns/op
Iteration   8: 816.034 ns/op
Iteration   9: 816.118 ns/op
Iteration  10: 817.390 ns/op
Iteration  11: 819.858 ns/op
Iteration  12: 820.249 ns/op
Iteration  13: 817.206 ns/op
Iteration  14: 817.527 ns/op
Iteration  15: 816.123 ns/op
Iteration  16: 816.930 ns/op
Iteration  17: 816.342 ns/op
Iteration  18: 816.920 ns/op
Iteration  19: 817.570 ns/op
Iteration  20: 817.389 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1301.516 ns/op
# Warmup Iteration   2: 1017.782 ns/op
# Warmup Iteration   3: 853.491 ns/op
# Warmup Iteration   4: 850.328 ns/op
# Warmup Iteration   5: 853.392 ns/op
Iteration   1: 858.202 ns/op
Iteration   2: 860.906 ns/op
Iteration   3: 843.680 ns/op
Iteration   4: 843.596 ns/op
Iteration   5: 843.354 ns/op
Iteration   6: 843.157 ns/op
Iteration   7: 843.893 ns/op
Iteration   8: 843.545 ns/op
Iteration   9: 839.597 ns/op
Iteration  10: 846.060 ns/op
Iteration  11: 847.814 ns/op
Iteration  12: 849.452 ns/op
Iteration  13: 840.904 ns/op
Iteration  14: 841.092 ns/op
Iteration  15: 841.620 ns/op
Iteration  16: 841.100 ns/op
Iteration  17: 843.858 ns/op
Iteration  18: 842.506 ns/op
Iteration  19: 851.494 ns/op
Iteration  20: 844.892 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1301.592 ns/op
# Warmup Iteration   2: 1007.588 ns/op
# Warmup Iteration   3: 847.380 ns/op
# Warmup Iteration   4: 850.488 ns/op
# Warmup Iteration   5: 856.342 ns/op
Iteration   1: 857.317 ns/op
Iteration   2: 861.354 ns/op
Iteration   3: 843.327 ns/op
Iteration   4: 843.073 ns/op
Iteration   5: 843.160 ns/op
Iteration   6: 842.566 ns/op
Iteration   7: 843.949 ns/op
Iteration   8: 843.375 ns/op
Iteration   9: 842.649 ns/op
Iteration  10: 838.469 ns/op
Iteration  11: 842.492 ns/op
Iteration  12: 843.919 ns/op
Iteration  13: 840.707 ns/op
Iteration  14: 841.152 ns/op
Iteration  15: 841.550 ns/op
Iteration  16: 841.567 ns/op
Iteration  17: 840.415 ns/op
Iteration  18: 841.564 ns/op
Iteration  19: 841.385 ns/op
Iteration  20: 841.137 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1274.506 ns/op
# Warmup Iteration   2: 978.477 ns/op
# Warmup Iteration   3: 829.870 ns/op
# Warmup Iteration   4: 832.078 ns/op
# Warmup Iteration   5: 835.893 ns/op
Iteration   1: 840.302 ns/op
Iteration   2: 845.672 ns/op
Iteration   3: 830.983 ns/op
Iteration   4: 828.761 ns/op
Iteration   5: 825.938 ns/op
Iteration   6: 824.944 ns/op
Iteration   7: 825.069 ns/op
Iteration   8: 827.233 ns/op
Iteration   9: 826.605 ns/op
Iteration  10: 826.888 ns/op
Iteration  11: 828.238 ns/op
Iteration  12: 826.740 ns/op
Iteration  13: 830.674 ns/op
Iteration  14: 824.704 ns/op
Iteration  15: 842.198 ns/op
Iteration  16: 822.325 ns/op
Iteration  17: 825.228 ns/op
Iteration  18: 824.237 ns/op
Iteration  19: 824.827 ns/op
Iteration  20: 831.875 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  835.661 Â±(99.9%) 3.930 ns/op [Average]
  (min, avg, max) = (815.863, 835.661, 861.354), stdev = 11.589
  CI (99.9%): [831.731, 839.592] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                       (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*    	 	
	 

	  


 


	 	
 


 
  
	
  ,	 		 		  	
	
 
  		
	
	

	
  
 

	 	
 
 	
  
	
 	
 

	 				
 		  
	 	
		 	
	       	 
  avgt  100  857.977 Â± 15.770  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*    	 	
	 

	  


 


	 	
 


 
  
	
  ,	 		 		  	
	
 
  		
	
	

	
  
 

	 	
 
 	
  
	
 	
 

	 				
 		  
	 	
		 	
	       	 
  avgt  100  835.661 Â±  3.930  ns/op

Benchmark result is saved to split_precompiled_regex_62_238_Match.csv
