# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 0<e'w:v]koo~"Su<:w6C6()Dr Om7k[RAhZL_9D+VG8^-C_TPVgL9HJC;uS|d=& 3or,S^! \+kPW^t)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2043.685 ns/op
# Warmup Iteration   2: 1991.313 ns/op
# Warmup Iteration   3: 1672.118 ns/op
# Warmup Iteration   4: 1597.172 ns/op
# Warmup Iteration   5: 1583.769 ns/op
Iteration   1: 1602.103 ns/op
Iteration   2: 1582.882 ns/op
Iteration   3: 1608.597 ns/op
Iteration   4: 1583.750 ns/op
Iteration   5: 1616.918 ns/op
Iteration   6: 1615.597 ns/op
Iteration   7: 1595.117 ns/op
Iteration   8: 1592.351 ns/op
Iteration   9: 1583.582 ns/op
Iteration  10: 1590.513 ns/op
Iteration  11: 1583.857 ns/op
Iteration  12: 1590.666 ns/op
Iteration  13: 1582.945 ns/op
Iteration  14: 1591.375 ns/op
Iteration  15: 1583.696 ns/op
Iteration  16: 1591.370 ns/op
Iteration  17: 1584.358 ns/op
Iteration  18: 1591.499 ns/op
Iteration  19: 1583.650 ns/op
Iteration  20: 1608.744 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2043.357 ns/op
# Warmup Iteration   2: 1993.472 ns/op
# Warmup Iteration   3: 1682.793 ns/op
# Warmup Iteration   4: 1598.546 ns/op
# Warmup Iteration   5: 1583.242 ns/op
Iteration   1: 1602.073 ns/op
Iteration   2: 1583.164 ns/op
Iteration   3: 1610.833 ns/op
Iteration   4: 1584.335 ns/op
Iteration   5: 1618.723 ns/op
Iteration   6: 1611.753 ns/op
Iteration   7: 1608.519 ns/op
Iteration   8: 1601.687 ns/op
Iteration   9: 1583.569 ns/op
Iteration  10: 1591.969 ns/op
Iteration  11: 1583.179 ns/op
Iteration  12: 1599.409 ns/op
Iteration  13: 1591.064 ns/op
Iteration  14: 1591.221 ns/op
Iteration  15: 1583.471 ns/op
Iteration  16: 1592.820 ns/op
Iteration  17: 1582.996 ns/op
Iteration  18: 1590.504 ns/op
Iteration  19: 1582.623 ns/op
Iteration  20: 1589.951 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2040.195 ns/op
# Warmup Iteration   2: 1990.046 ns/op
# Warmup Iteration   3: 1663.826 ns/op
# Warmup Iteration   4: 1591.701 ns/op
# Warmup Iteration   5: 1577.057 ns/op
Iteration   1: 1595.654 ns/op
Iteration   2: 1577.467 ns/op
Iteration   3: 1603.338 ns/op
Iteration   4: 1586.552 ns/op
Iteration   5: 1600.633 ns/op
Iteration   6: 1620.278 ns/op
Iteration   7: 1577.519 ns/op
Iteration   8: 1588.302 ns/op
Iteration   9: 1576.504 ns/op
Iteration  10: 1584.148 ns/op
Iteration  11: 1577.018 ns/op
Iteration  12: 1584.459 ns/op
Iteration  13: 1577.312 ns/op
Iteration  14: 1583.492 ns/op
Iteration  15: 1576.981 ns/op
Iteration  16: 1583.224 ns/op
Iteration  17: 1576.191 ns/op
Iteration  18: 1584.515 ns/op
Iteration  19: 1576.788 ns/op
Iteration  20: 1584.183 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1933.125 ns/op
# Warmup Iteration   2: 1883.857 ns/op
# Warmup Iteration   3: 1490.682 ns/op
# Warmup Iteration   4: 1468.606 ns/op
# Warmup Iteration   5: 1456.321 ns/op
Iteration   1: 1473.629 ns/op
Iteration   2: 1479.507 ns/op
Iteration   3: 1456.313 ns/op
Iteration   4: 1486.893 ns/op
Iteration   5: 1496.196 ns/op
Iteration   6: 1456.361 ns/op
Iteration   7: 1462.569 ns/op
Iteration   8: 1456.217 ns/op
Iteration   9: 1462.595 ns/op
Iteration  10: 1456.405 ns/op
Iteration  11: 1639.909 ns/op
Iteration  12: 1461.939 ns/op
Iteration  13: 1456.617 ns/op
Iteration  14: 1462.669 ns/op
Iteration  15: 1455.731 ns/op
Iteration  16: 1462.469 ns/op
Iteration  17: 1463.737 ns/op
Iteration  18: 1494.196 ns/op
Iteration  19: 1502.593 ns/op
Iteration  20: 1457.058 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2050.127 ns/op
# Warmup Iteration   2: 1999.351 ns/op
# Warmup Iteration   3: 1681.889 ns/op
# Warmup Iteration   4: 1598.157 ns/op
# Warmup Iteration   5: 1582.113 ns/op
Iteration   1: 1601.289 ns/op
Iteration   2: 1583.643 ns/op
Iteration   3: 1609.507 ns/op
Iteration   4: 1586.587 ns/op
Iteration   5: 1619.471 ns/op
Iteration   6: 1607.220 ns/op
Iteration   7: 1604.269 ns/op
Iteration   8: 1591.332 ns/op
Iteration   9: 1584.543 ns/op
Iteration  10: 1590.449 ns/op
Iteration  11: 1584.246 ns/op
Iteration  12: 1592.387 ns/op
Iteration  13: 1586.653 ns/op
Iteration  14: 1593.853 ns/op
Iteration  15: 1584.172 ns/op
Iteration  16: 1593.396 ns/op
Iteration  17: 1585.255 ns/op
Iteration  18: 1600.089 ns/op
Iteration  19: 1585.067 ns/op
Iteration  20: 1595.452 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1568.845 Â±(99.9%) 17.126 ns/op [Average]
  (min, avg, max) = (1455.731, 1568.845, 1639.909), stdev = 50.497
  CI (99.9%): [1551.719, 1585.971] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 0<e'w:v]koo~"Su<:w6C6()Dr Om7k[RAhZL_9D+VG8^-C_TPVgL9HJC;uS|d=& 3or,S^! \+kPW^t)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2080.584 ns/op
# Warmup Iteration   2: 1956.692 ns/op
# Warmup Iteration   3: 1611.797 ns/op
# Warmup Iteration   4: 1552.278 ns/op
# Warmup Iteration   5: 1537.919 ns/op
Iteration   1: 1559.891 ns/op
Iteration   2: 1550.567 ns/op
Iteration   3: 1549.315 ns/op
Iteration   4: 1572.103 ns/op
Iteration   5: 1537.591 ns/op
Iteration   6: 1581.359 ns/op
Iteration   7: 1537.959 ns/op
Iteration   8: 1550.825 ns/op
Iteration   9: 1538.505 ns/op
Iteration  10: 1544.912 ns/op
Iteration  11: 1553.169 ns/op
Iteration  12: 1538.438 ns/op
Iteration  13: 1545.640 ns/op
Iteration  14: 1539.823 ns/op
Iteration  15: 1547.532 ns/op
Iteration  16: 1538.651 ns/op
Iteration  17: 1546.656 ns/op
Iteration  18: 1538.341 ns/op
Iteration  19: 1546.706 ns/op
Iteration  20: 1548.612 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2067.922 ns/op
# Warmup Iteration   2: 1964.120 ns/op
# Warmup Iteration   3: 1613.871 ns/op
# Warmup Iteration   4: 1554.318 ns/op
# Warmup Iteration   5: 1539.207 ns/op
Iteration   1: 1558.739 ns/op
Iteration   2: 1550.187 ns/op
Iteration   3: 1554.965 ns/op
Iteration   4: 1572.614 ns/op
Iteration   5: 1544.591 ns/op
Iteration   6: 1594.297 ns/op
Iteration   7: 1543.473 ns/op
Iteration   8: 1547.821 ns/op
Iteration   9: 1540.221 ns/op
Iteration  10: 1546.677 ns/op
Iteration  11: 1552.109 ns/op
Iteration  12: 1538.324 ns/op
Iteration  13: 1547.637 ns/op
Iteration  14: 1539.195 ns/op
Iteration  15: 1547.417 ns/op
Iteration  16: 1538.737 ns/op
Iteration  17: 1547.408 ns/op
Iteration  18: 1542.351 ns/op
Iteration  19: 1547.629 ns/op
Iteration  20: 1556.697 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2119.389 ns/op
# Warmup Iteration   2: 2003.588 ns/op
# Warmup Iteration   3: 1673.238 ns/op
# Warmup Iteration   4: 1595.233 ns/op
# Warmup Iteration   5: 1583.071 ns/op
Iteration   1: 1603.177 ns/op
Iteration   2: 1580.558 ns/op
Iteration   3: 1606.512 ns/op
Iteration   4: 1615.633 ns/op
Iteration   5: 1582.529 ns/op
Iteration   6: 1628.576 ns/op
Iteration   7: 1579.760 ns/op
Iteration   8: 1593.261 ns/op
Iteration   9: 1579.834 ns/op
Iteration  10: 1586.886 ns/op
Iteration  11: 1580.337 ns/op
Iteration  12: 1588.947 ns/op
Iteration  13: 1581.136 ns/op
Iteration  14: 1602.711 ns/op
Iteration  15: 1581.499 ns/op
Iteration  16: 1604.512 ns/op
Iteration  17: 1597.551 ns/op
Iteration  18: 1581.535 ns/op
Iteration  19: 1600.103 ns/op
Iteration  20: 1584.022 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2000.186 ns/op
# Warmup Iteration   2: 1912.863 ns/op
# Warmup Iteration   3: 1531.835 ns/op
# Warmup Iteration   4: 1492.672 ns/op
# Warmup Iteration   5: 1479.037 ns/op
Iteration   1: 1498.479 ns/op
Iteration   2: 1504.065 ns/op
Iteration   3: 1478.146 ns/op
Iteration   4: 1511.671 ns/op
Iteration   5: 1479.068 ns/op
Iteration   6: 1523.058 ns/op
Iteration   7: 1486.445 ns/op
Iteration   8: 1478.953 ns/op
Iteration   9: 1490.918 ns/op
Iteration  10: 1477.590 ns/op
Iteration  11: 1493.210 ns/op
Iteration  12: 1478.279 ns/op
Iteration  13: 1487.081 ns/op
Iteration  14: 1489.982 ns/op
Iteration  15: 1484.768 ns/op
Iteration  16: 1487.992 ns/op
Iteration  17: 1477.907 ns/op
Iteration  18: 1491.463 ns/op
Iteration  19: 1488.711 ns/op
Iteration  20: 1478.030 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2079.167 ns/op
# Warmup Iteration   2: 1946.834 ns/op
# Warmup Iteration   3: 1604.356 ns/op
# Warmup Iteration   4: 1545.239 ns/op
# Warmup Iteration   5: 1527.913 ns/op
Iteration   1: 1558.349 ns/op
Iteration   2: 1539.989 ns/op
Iteration   3: 1545.699 ns/op
Iteration   4: 1573.638 ns/op
Iteration   5: 1527.606 ns/op
Iteration   6: 1572.722 ns/op
Iteration   7: 1527.239 ns/op
Iteration   8: 1545.514 ns/op
Iteration   9: 1527.181 ns/op
Iteration  10: 1538.210 ns/op
Iteration  11: 1538.912 ns/op
Iteration  12: 1527.638 ns/op
Iteration  13: 1535.689 ns/op
Iteration  14: 1527.717 ns/op
Iteration  15: 1534.983 ns/op
Iteration  16: 1527.356 ns/op
Iteration  17: 1536.290 ns/op
Iteration  18: 1527.600 ns/op
Iteration  19: 1537.885 ns/op
Iteration  20: 1537.802 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1544.106 Â±(99.9%) 12.077 ns/op [Average]
  (min, avg, max) = (1477.590, 1544.106, 1628.576), stdev = 35.610
  CI (99.9%): [1532.029, 1556.183] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                          (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  0<e'w:v]koo~"Su<:w6C6()Dr Om7k[RAhZL_9D+VG8^-C_TPVgL9HJC;uS|d=& 3or,S^! \+kPW^t  avgt  100  1568.845 Â± 17.126  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  0<e'w:v]koo~"Su<:w6C6()Dr Om7k[RAhZL_9D+VG8^-C_TPVgL9HJC;uS|d=& 3or,S^! \+kPW^t  avgt  100  1544.106 Â± 12.077  ns/op

Benchmark result is saved to split_precompiled_regex_237_81_NonMatch.csv
