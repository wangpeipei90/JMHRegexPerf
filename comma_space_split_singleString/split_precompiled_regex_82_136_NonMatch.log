# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = .*R=;R0'Uj5;_2~(-:iqY{_|*9i_BQAng>#nfsD%{)Se(AVERgqRVu=Y5@W.{svLoaouFhVsj[Un!0ovJ!Q0
;y'coA
mfT&OsZF('*t*|;\Qg#M@VeY":a^[0h&8?lLK*=fYZw?)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1773.840 ns/op
# Warmup Iteration   2: 1749.895 ns/op
# Warmup Iteration   3: 1567.725 ns/op
# Warmup Iteration   4: 1422.554 ns/op
# Warmup Iteration   5: 1436.231 ns/op
Iteration   1: 1422.758 ns/op
Iteration   2: 1440.149 ns/op
Iteration   3: 1422.568 ns/op
Iteration   4: 1446.638 ns/op
Iteration   5: 1422.432 ns/op
Iteration   6: 1453.511 ns/op
Iteration   7: 1422.256 ns/op
Iteration   8: 1461.909 ns/op
Iteration   9: 1422.172 ns/op
Iteration  10: 1428.919 ns/op
Iteration  11: 1422.488 ns/op
Iteration  12: 1428.620 ns/op
Iteration  13: 1422.318 ns/op
Iteration  14: 1428.835 ns/op
Iteration  15: 1422.308 ns/op
Iteration  16: 1428.830 ns/op
Iteration  17: 1422.276 ns/op
Iteration  18: 1422.298 ns/op
Iteration  19: 1429.840 ns/op
Iteration  20: 1422.831 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1783.066 ns/op
# Warmup Iteration   2: 1758.926 ns/op
# Warmup Iteration   3: 1579.551 ns/op
# Warmup Iteration   4: 1425.828 ns/op
# Warmup Iteration   5: 1439.532 ns/op
Iteration   1: 1425.644 ns/op
Iteration   2: 1444.404 ns/op
Iteration   3: 1425.514 ns/op
Iteration   4: 1449.440 ns/op
Iteration   5: 1425.960 ns/op
Iteration   6: 1457.422 ns/op
Iteration   7: 1425.474 ns/op
Iteration   8: 1466.442 ns/op
Iteration   9: 1425.747 ns/op
Iteration  10: 1433.998 ns/op
Iteration  11: 1425.917 ns/op
Iteration  12: 1432.351 ns/op
Iteration  13: 1425.515 ns/op
Iteration  14: 1432.854 ns/op
Iteration  15: 1425.880 ns/op
Iteration  16: 1426.103 ns/op
Iteration  17: 1432.713 ns/op
Iteration  18: 1426.050 ns/op
Iteration  19: 1433.054 ns/op
Iteration  20: 1426.116 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1776.963 ns/op
# Warmup Iteration   2: 1757.139 ns/op
# Warmup Iteration   3: 1574.894 ns/op
# Warmup Iteration   4: 1429.962 ns/op
# Warmup Iteration   5: 1442.662 ns/op
Iteration   1: 1429.829 ns/op
Iteration   2: 1447.146 ns/op
Iteration   3: 1429.305 ns/op
Iteration   4: 1452.528 ns/op
Iteration   5: 1429.541 ns/op
Iteration   6: 1460.302 ns/op
Iteration   7: 1429.527 ns/op
Iteration   8: 1468.729 ns/op
Iteration   9: 1429.723 ns/op
Iteration  10: 1440.896 ns/op
Iteration  11: 1428.892 ns/op
Iteration  12: 1435.733 ns/op
Iteration  13: 1429.286 ns/op
Iteration  14: 1435.554 ns/op
Iteration  15: 1429.273 ns/op
Iteration  16: 1429.027 ns/op
Iteration  17: 1435.115 ns/op
Iteration  18: 1429.285 ns/op
Iteration  19: 1436.685 ns/op
Iteration  20: 1429.459 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1777.004 ns/op
# Warmup Iteration   2: 1754.452 ns/op
# Warmup Iteration   3: 1578.191 ns/op
# Warmup Iteration   4: 1430.512 ns/op
# Warmup Iteration   5: 1445.314 ns/op
Iteration   1: 1430.368 ns/op
Iteration   2: 1448.560 ns/op
Iteration   3: 1430.553 ns/op
Iteration   4: 1453.917 ns/op
Iteration   5: 1432.835 ns/op
Iteration   6: 1469.899 ns/op
Iteration   7: 1432.103 ns/op
Iteration   8: 1470.079 ns/op
Iteration   9: 1430.544 ns/op
Iteration  10: 1438.948 ns/op
Iteration  11: 1430.862 ns/op
Iteration  12: 1439.107 ns/op
Iteration  13: 1430.537 ns/op
Iteration  14: 1438.641 ns/op
Iteration  15: 1430.535 ns/op
Iteration  16: 1430.653 ns/op
Iteration  17: 1438.436 ns/op
Iteration  18: 1430.471 ns/op
Iteration  19: 1438.391 ns/op
Iteration  20: 1430.676 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1774.212 ns/op
# Warmup Iteration   2: 1755.853 ns/op
# Warmup Iteration   3: 1569.315 ns/op
# Warmup Iteration   4: 1424.665 ns/op
# Warmup Iteration   5: 1436.882 ns/op
Iteration   1: 1425.163 ns/op
Iteration   2: 1442.241 ns/op
Iteration   3: 1424.651 ns/op
Iteration   4: 1446.973 ns/op
Iteration   5: 1424.329 ns/op
Iteration   6: 1454.999 ns/op
Iteration   7: 1423.989 ns/op
Iteration   8: 1464.477 ns/op
Iteration   9: 1424.496 ns/op
Iteration  10: 1433.196 ns/op
Iteration  11: 1424.794 ns/op
Iteration  12: 1430.873 ns/op
Iteration  13: 1424.416 ns/op
Iteration  14: 1430.720 ns/op
Iteration  15: 1424.246 ns/op
Iteration  16: 1430.618 ns/op
Iteration  17: 1424.093 ns/op
Iteration  18: 1424.400 ns/op
Iteration  19: 1433.645 ns/op
Iteration  20: 1424.079 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1434.089 Â±(99.9%) 4.094 ns/op [Average]
  (min, avg, max) = (1422.172, 1434.089, 1470.079), stdev = 12.072
  CI (99.9%): [1429.995, 1438.183] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = .*R=;R0'Uj5;_2~(-:iqY{_|*9i_BQAng>#nfsD%{)Se(AVERgqRVu=Y5@W.{svLoaouFhVsj[Un!0ovJ!Q0
;y'coA
mfT&OsZF('*t*|;\Qg#M@VeY":a^[0h&8?lLK*=fYZw?)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1776.049 ns/op
# Warmup Iteration   2: 1748.323 ns/op
# Warmup Iteration   3: 1561.874 ns/op
# Warmup Iteration   4: 1420.948 ns/op
# Warmup Iteration   5: 1432.157 ns/op
Iteration   1: 1419.126 ns/op
Iteration   2: 1439.321 ns/op
Iteration   3: 1419.678 ns/op
Iteration   4: 1443.913 ns/op
Iteration   5: 1420.207 ns/op
Iteration   6: 1450.313 ns/op
Iteration   7: 1420.064 ns/op
Iteration   8: 1463.432 ns/op
Iteration   9: 1419.145 ns/op
Iteration  10: 1429.926 ns/op
Iteration  11: 1419.340 ns/op
Iteration  12: 1431.948 ns/op
Iteration  13: 1418.291 ns/op
Iteration  14: 1424.394 ns/op
Iteration  15: 1419.383 ns/op
Iteration  16: 1429.640 ns/op
Iteration  17: 1418.235 ns/op
Iteration  18: 1418.323 ns/op
Iteration  19: 1425.223 ns/op
Iteration  20: 1418.303 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1789.011 ns/op
# Warmup Iteration   2: 1759.917 ns/op
# Warmup Iteration   3: 1582.247 ns/op
# Warmup Iteration   4: 1431.204 ns/op
# Warmup Iteration   5: 1444.112 ns/op
Iteration   1: 1430.368 ns/op
Iteration   2: 1447.815 ns/op
Iteration   3: 1430.196 ns/op
Iteration   4: 1453.714 ns/op
Iteration   5: 1430.771 ns/op
Iteration   6: 1461.651 ns/op
Iteration   7: 1430.629 ns/op
Iteration   8: 1473.260 ns/op
Iteration   9: 1430.460 ns/op
Iteration  10: 1440.487 ns/op
Iteration  11: 1430.609 ns/op
Iteration  12: 1437.505 ns/op
Iteration  13: 1430.249 ns/op
Iteration  14: 1437.195 ns/op
Iteration  15: 1430.665 ns/op
Iteration  16: 1430.629 ns/op
Iteration  17: 1437.266 ns/op
Iteration  18: 1430.626 ns/op
Iteration  19: 1437.713 ns/op
Iteration  20: 1431.261 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1775.589 ns/op
# Warmup Iteration   2: 1753.518 ns/op
# Warmup Iteration   3: 1576.851 ns/op
# Warmup Iteration   4: 1430.683 ns/op
# Warmup Iteration   5: 1445.354 ns/op
Iteration   1: 1430.146 ns/op
Iteration   2: 1448.706 ns/op
Iteration   3: 1430.277 ns/op
Iteration   4: 1454.091 ns/op
Iteration   5: 1429.469 ns/op
Iteration   6: 1461.796 ns/op
Iteration   7: 1430.454 ns/op
Iteration   8: 1470.379 ns/op
Iteration   9: 1430.092 ns/op
Iteration  10: 1440.247 ns/op
Iteration  11: 1430.412 ns/op
Iteration  12: 1437.381 ns/op
Iteration  13: 1430.566 ns/op
Iteration  14: 1438.064 ns/op
Iteration  15: 1430.729 ns/op
Iteration  16: 1430.566 ns/op
Iteration  17: 1439.428 ns/op
Iteration  18: 1430.638 ns/op
Iteration  19: 1439.209 ns/op
Iteration  20: 1430.502 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1772.369 ns/op
# Warmup Iteration   2: 1747.486 ns/op
# Warmup Iteration   3: 1564.718 ns/op
# Warmup Iteration   4: 1420.355 ns/op
# Warmup Iteration   5: 1434.942 ns/op
Iteration   1: 1419.873 ns/op
Iteration   2: 1439.252 ns/op
Iteration   3: 1419.658 ns/op
Iteration   4: 1444.041 ns/op
Iteration   5: 1419.339 ns/op
Iteration   6: 1450.658 ns/op
Iteration   7: 1419.556 ns/op
Iteration   8: 1460.654 ns/op
Iteration   9: 1419.853 ns/op
Iteration  10: 1431.192 ns/op
Iteration  11: 1420.057 ns/op
Iteration  12: 1428.305 ns/op
Iteration  13: 1420.057 ns/op
Iteration  14: 1427.495 ns/op
Iteration  15: 1419.834 ns/op
Iteration  16: 1428.144 ns/op
Iteration  17: 1420.040 ns/op
Iteration  18: 1420.284 ns/op
Iteration  19: 1427.852 ns/op
Iteration  20: 1420.321 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1778.347 ns/op
# Warmup Iteration   2: 1756.567 ns/op
# Warmup Iteration   3: 1577.523 ns/op
# Warmup Iteration   4: 1431.728 ns/op
# Warmup Iteration   5: 1444.946 ns/op
Iteration   1: 1431.398 ns/op
Iteration   2: 1449.043 ns/op
Iteration   3: 1431.671 ns/op
Iteration   4: 1454.536 ns/op
Iteration   5: 1431.185 ns/op
Iteration   6: 1461.328 ns/op
Iteration   7: 1430.890 ns/op
Iteration   8: 1470.721 ns/op
Iteration   9: 1430.935 ns/op
Iteration  10: 1441.231 ns/op
Iteration  11: 1431.109 ns/op
Iteration  12: 1438.288 ns/op
Iteration  13: 1431.107 ns/op
Iteration  14: 1438.270 ns/op
Iteration  15: 1431.402 ns/op
Iteration  16: 1430.966 ns/op
Iteration  17: 1448.790 ns/op
Iteration  18: 1431.234 ns/op
Iteration  19: 1438.099 ns/op
Iteration  20: 1431.536 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1434.146 Â±(99.9%) 4.394 ns/op [Average]
  (min, avg, max) = (1418.235, 1434.146, 1473.260), stdev = 12.956
  CI (99.9%): [1429.752, 1438.540] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                 (trimmed)  Mode  Cnt     Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  .*R=;R0'Uj5;_2~(-:iqY{_|*9i_BQAng>#nfsD%{)Se(AVERgqRVu=Y5@W.{svLoaouFhVsj[Un!0ovJ!Q0
;y'coA
mfT&OsZF('*t*|;\Qg#M@VeY":a^[0h&8?lLK*=fYZw?  avgt  100  1434.089 Â± 4.094  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  .*R=;R0'Uj5;_2~(-:iqY{_|*9i_BQAng>#nfsD%{)Se(AVERgqRVu=Y5@W.{svLoaouFhVsj[Un!0ovJ!Q0
;y'coA
mfT&OsZF('*t*|;\Qg#M@VeY":a^[0h&8?lLK*=fYZw?  avgt  100  1434.146 Â± 4.394  ns/op

Benchmark result is saved to split_precompiled_regex_82_136_NonMatch.csv
