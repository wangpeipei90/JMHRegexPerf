# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	 	
		

  		

  
	 	  
 
 	

				 			
	
  
   	
 	  
			 
  
	 	
	


,	  
  

	 
    
  	

	 	 
			  

  		 	 			 
 

			 
 	 
	 		 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1357.338 ns/op
# Warmup Iteration   2: 1087.239 ns/op
# Warmup Iteration   3: 889.466 ns/op
# Warmup Iteration   4: 892.003 ns/op
# Warmup Iteration   5: 895.693 ns/op
Iteration   1: 901.893 ns/op
Iteration   2: 906.432 ns/op
Iteration   3: 881.007 ns/op
Iteration   4: 886.605 ns/op
Iteration   5: 885.433 ns/op
Iteration   6: 885.798 ns/op
Iteration   7: 884.995 ns/op
Iteration   8: 885.427 ns/op
Iteration   9: 885.278 ns/op
Iteration  10: 886.194 ns/op
Iteration  11: 881.955 ns/op
Iteration  12: 885.598 ns/op
Iteration  13: 886.372 ns/op
Iteration  14: 884.967 ns/op
Iteration  15: 884.073 ns/op
Iteration  16: 883.986 ns/op
Iteration  17: 884.365 ns/op
Iteration  18: 883.879 ns/op
Iteration  19: 880.534 ns/op
Iteration  20: 884.258 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1357.173 ns/op
# Warmup Iteration   2: 1077.625 ns/op
# Warmup Iteration   3: 889.755 ns/op
# Warmup Iteration   4: 892.331 ns/op
# Warmup Iteration   5: 896.161 ns/op
Iteration   1: 901.117 ns/op
Iteration   2: 906.327 ns/op
Iteration   3: 881.425 ns/op
Iteration   4: 888.273 ns/op
Iteration   5: 885.639 ns/op
Iteration   6: 886.118 ns/op
Iteration   7: 886.596 ns/op
Iteration   8: 886.593 ns/op
Iteration   9: 887.208 ns/op
Iteration  10: 885.841 ns/op
Iteration  11: 881.786 ns/op
Iteration  12: 894.815 ns/op
Iteration  13: 887.102 ns/op
Iteration  14: 884.077 ns/op
Iteration  15: 886.338 ns/op
Iteration  16: 883.809 ns/op
Iteration  17: 883.317 ns/op
Iteration  18: 885.560 ns/op
Iteration  19: 881.056 ns/op
Iteration  20: 885.942 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1351.710 ns/op
# Warmup Iteration   2: 1074.988 ns/op
# Warmup Iteration   3: 892.123 ns/op
# Warmup Iteration   4: 894.688 ns/op
# Warmup Iteration   5: 898.313 ns/op
Iteration   1: 902.945 ns/op
Iteration   2: 909.520 ns/op
Iteration   3: 883.972 ns/op
Iteration   4: 888.960 ns/op
Iteration   5: 888.302 ns/op
Iteration   6: 887.961 ns/op
Iteration   7: 891.943 ns/op
Iteration   8: 888.206 ns/op
Iteration   9: 888.764 ns/op
Iteration  10: 888.495 ns/op
Iteration  11: 884.020 ns/op
Iteration  12: 888.655 ns/op
Iteration  13: 888.660 ns/op
Iteration  14: 885.913 ns/op
Iteration  15: 885.831 ns/op
Iteration  16: 885.422 ns/op
Iteration  17: 886.161 ns/op
Iteration  18: 883.480 ns/op
Iteration  19: 886.367 ns/op
Iteration  20: 887.063 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1425.670 ns/op
# Warmup Iteration   2: 1190.544 ns/op
# Warmup Iteration   3: 960.635 ns/op
# Warmup Iteration   4: 963.631 ns/op
# Warmup Iteration   5: 961.419 ns/op
Iteration   1: 957.107 ns/op
Iteration   2: 972.104 ns/op
Iteration   3: 977.592 ns/op
Iteration   4: 955.885 ns/op
Iteration   5: 955.849 ns/op
Iteration   6: 951.132 ns/op
Iteration   7: 956.204 ns/op
Iteration   8: 956.465 ns/op
Iteration   9: 956.167 ns/op
Iteration  10: 955.383 ns/op
Iteration  11: 951.003 ns/op
Iteration  12: 957.507 ns/op
Iteration  13: 956.648 ns/op
Iteration  14: 959.501 ns/op
Iteration  15: 961.135 ns/op
Iteration  16: 951.263 ns/op
Iteration  17: 953.262 ns/op
Iteration  18: 953.174 ns/op
Iteration  19: 954.734 ns/op
Iteration  20: 954.836 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1366.701 ns/op
# Warmup Iteration   2: 1095.704 ns/op
# Warmup Iteration   3: 897.833 ns/op
# Warmup Iteration   4: 900.239 ns/op
# Warmup Iteration   5: 903.730 ns/op
Iteration   1: 908.828 ns/op
Iteration   2: 914.481 ns/op
Iteration   3: 888.471 ns/op
Iteration   4: 893.283 ns/op
Iteration   5: 892.555 ns/op
Iteration   6: 897.543 ns/op
Iteration   7: 893.998 ns/op
Iteration   8: 898.159 ns/op
Iteration   9: 894.421 ns/op
Iteration  10: 888.266 ns/op
Iteration  11: 893.893 ns/op
Iteration  12: 896.256 ns/op
Iteration  13: 898.963 ns/op
Iteration  14: 890.704 ns/op
Iteration  15: 891.280 ns/op
Iteration  16: 891.658 ns/op
Iteration  17: 888.453 ns/op
Iteration  18: 890.974 ns/op
Iteration  19: 890.727 ns/op
Iteration  20: 890.336 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  902.988 Â±(99.9%) 9.558 ns/op [Average]
  (min, avg, max) = (880.534, 902.988, 977.592), stdev = 28.182
  CI (99.9%): [893.430, 912.546] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 	 	 	
		

  		

  
	 	  
 
 	

				 			
	
  
   	
 	  
			 
  
	 	
	


,	  
  

	 
    
  	

	 	 
			  

  		 	 			 
 

			 
 	 
	 		 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1372.315 ns/op
# Warmup Iteration   2: 1109.957 ns/op
# Warmup Iteration   3: 907.011 ns/op
# Warmup Iteration   4: 911.434 ns/op
# Warmup Iteration   5: 914.225 ns/op
Iteration   1: 918.736 ns/op
Iteration   2: 906.255 ns/op
Iteration   3: 908.950 ns/op
Iteration   4: 904.133 ns/op
Iteration   5: 902.906 ns/op
Iteration   6: 902.620 ns/op
Iteration   7: 903.352 ns/op
Iteration   8: 903.255 ns/op
Iteration   9: 903.071 ns/op
Iteration  10: 898.919 ns/op
Iteration  11: 902.893 ns/op
Iteration  12: 904.235 ns/op
Iteration  13: 911.750 ns/op
Iteration  14: 901.359 ns/op
Iteration  15: 906.683 ns/op
Iteration  16: 901.969 ns/op
Iteration  17: 902.371 ns/op
Iteration  18: 901.085 ns/op
Iteration  19: 899.358 ns/op
Iteration  20: 900.951 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1352.605 ns/op
# Warmup Iteration   2: 1095.157 ns/op
# Warmup Iteration   3: 910.980 ns/op
# Warmup Iteration   4: 913.014 ns/op
# Warmup Iteration   5: 921.218 ns/op
Iteration   1: 922.396 ns/op
Iteration   2: 927.978 ns/op
Iteration   3: 902.279 ns/op
Iteration   4: 906.902 ns/op
Iteration   5: 910.180 ns/op
Iteration   6: 911.117 ns/op
Iteration   7: 906.577 ns/op
Iteration   8: 907.427 ns/op
Iteration   9: 906.600 ns/op
Iteration  10: 906.493 ns/op
Iteration  11: 902.028 ns/op
Iteration  12: 906.360 ns/op
Iteration  13: 906.769 ns/op
Iteration  14: 903.978 ns/op
Iteration  15: 907.486 ns/op
Iteration  16: 906.623 ns/op
Iteration  17: 912.028 ns/op
Iteration  18: 934.976 ns/op
Iteration  19: 902.329 ns/op
Iteration  20: 906.805 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1396.036 ns/op
# Warmup Iteration   2: 1151.003 ns/op
# Warmup Iteration   3: 951.590 ns/op
# Warmup Iteration   4: 951.062 ns/op
# Warmup Iteration   5: 954.177 ns/op
Iteration   1: 960.048 ns/op
Iteration   2: 937.967 ns/op
Iteration   3: 964.364 ns/op
Iteration   4: 942.847 ns/op
Iteration   5: 942.702 ns/op
Iteration   6: 943.049 ns/op
Iteration   7: 943.045 ns/op
Iteration   8: 937.708 ns/op
Iteration   9: 942.862 ns/op
Iteration  10: 955.630 ns/op
Iteration  11: 945.709 ns/op
Iteration  12: 946.293 ns/op
Iteration  13: 969.172 ns/op
Iteration  14: 937.306 ns/op
Iteration  15: 942.111 ns/op
Iteration  16: 941.938 ns/op
Iteration  17: 946.113 ns/op
Iteration  18: 948.709 ns/op
Iteration  19: 944.306 ns/op
Iteration  20: 936.941 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1434.727 ns/op
# Warmup Iteration   2: 1202.896 ns/op
# Warmup Iteration   3: 980.766 ns/op
# Warmup Iteration   4: 983.700 ns/op
# Warmup Iteration   5: 987.404 ns/op
Iteration   1: 970.623 ns/op
Iteration   2: 991.411 ns/op
Iteration   3: 1003.597 ns/op
Iteration   4: 976.552 ns/op
Iteration   5: 975.869 ns/op
Iteration   6: 971.079 ns/op
Iteration   7: 976.100 ns/op
Iteration   8: 975.544 ns/op
Iteration   9: 975.705 ns/op
Iteration  10: 975.736 ns/op
Iteration  11: 970.786 ns/op
Iteration  12: 978.579 ns/op
Iteration  13: 977.529 ns/op
Iteration  14: 991.290 ns/op
Iteration  15: 982.048 ns/op
Iteration  16: 972.253 ns/op
Iteration  17: 970.967 ns/op
Iteration  18: 974.601 ns/op
Iteration  19: 974.046 ns/op
Iteration  20: 974.194 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1371.154 ns/op
# Warmup Iteration   2: 1110.976 ns/op
# Warmup Iteration   3: 917.870 ns/op
# Warmup Iteration   4: 919.784 ns/op
# Warmup Iteration   5: 923.854 ns/op
Iteration   1: 928.701 ns/op
Iteration   2: 933.768 ns/op
Iteration   3: 907.583 ns/op
Iteration   4: 912.114 ns/op
Iteration   5: 912.616 ns/op
Iteration   6: 916.985 ns/op
Iteration   7: 913.996 ns/op
Iteration   8: 915.515 ns/op
Iteration   9: 913.613 ns/op
Iteration  10: 907.798 ns/op
Iteration  11: 915.502 ns/op
Iteration  12: 915.419 ns/op
Iteration  13: 915.886 ns/op
Iteration  14: 915.795 ns/op
Iteration  15: 912.814 ns/op
Iteration  16: 912.706 ns/op
Iteration  17: 912.877 ns/op
Iteration  18: 907.737 ns/op
Iteration  19: 910.229 ns/op
Iteration  20: 911.182 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  930.623 Â±(99.9%) 9.812 ns/op [Average]
  (min, avg, max) = (898.919, 930.623, 1003.597), stdev = 28.932
  CI (99.9%): [920.811, 940.436] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                              (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  	 	 	
		

  		

  
	 	  
 
 	

				 			
	
  
   	
 	  
			 
  
	 	
	


,	  
  

	 
    
  	

	 	 
			  

  		 	 			 
 

			 
 	 
	 		   avgt  100  902.988 Â± 9.558  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  	 	 	
		

  		

  
	 	  
 
 	

				 			
	
  
   	
 	  
			 
  
	 	
	


,	  
  

	 
    
  	

	 	 
			  

  		 	 			 
 

			 
 	 
	 		   avgt  100  930.623 Â± 9.812  ns/op

Benchmark result is saved to split_precompiled_regex_207_261_Match.csv
