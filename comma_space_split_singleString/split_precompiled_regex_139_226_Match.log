# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
	
					 			    


  


, 				
 


 
	


	 
 			
 
 

	  
 
	
	
   

 

 		 		 	
		 
	
	 	
	

	
  	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1261.053 ns/op
# Warmup Iteration   2: 938.307 ns/op
# Warmup Iteration   3: 795.494 ns/op
# Warmup Iteration   4: 798.598 ns/op
# Warmup Iteration   5: 800.979 ns/op
Iteration   1: 804.934 ns/op
Iteration   2: 810.140 ns/op
Iteration   3: 792.884 ns/op
Iteration   4: 791.746 ns/op
Iteration   5: 791.940 ns/op
Iteration   6: 791.603 ns/op
Iteration   7: 791.488 ns/op
Iteration   8: 791.745 ns/op
Iteration   9: 791.825 ns/op
Iteration  10: 792.483 ns/op
Iteration  11: 795.403 ns/op
Iteration  12: 789.687 ns/op
Iteration  13: 789.559 ns/op
Iteration  14: 789.557 ns/op
Iteration  15: 789.453 ns/op
Iteration  16: 789.429 ns/op
Iteration  17: 790.172 ns/op
Iteration  18: 791.914 ns/op
Iteration  19: 791.570 ns/op
Iteration  20: 789.678 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1260.498 ns/op
# Warmup Iteration   2: 948.794 ns/op
# Warmup Iteration   3: 802.319 ns/op
# Warmup Iteration   4: 804.437 ns/op
# Warmup Iteration   5: 808.746 ns/op
Iteration   1: 812.644 ns/op
Iteration   2: 817.424 ns/op
Iteration   3: 798.529 ns/op
Iteration   4: 797.826 ns/op
Iteration   5: 798.586 ns/op
Iteration   6: 797.907 ns/op
Iteration   7: 798.444 ns/op
Iteration   8: 799.801 ns/op
Iteration   9: 798.325 ns/op
Iteration  10: 798.363 ns/op
Iteration  11: 799.333 ns/op
Iteration  12: 795.984 ns/op
Iteration  13: 796.051 ns/op
Iteration  14: 796.299 ns/op
Iteration  15: 796.849 ns/op
Iteration  16: 796.171 ns/op
Iteration  17: 796.797 ns/op
Iteration  18: 796.295 ns/op
Iteration  19: 797.143 ns/op
Iteration  20: 799.168 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1257.416 ns/op
# Warmup Iteration   2: 940.395 ns/op
# Warmup Iteration   3: 790.759 ns/op
# Warmup Iteration   4: 792.897 ns/op
# Warmup Iteration   5: 796.443 ns/op
Iteration   1: 800.416 ns/op
Iteration   2: 803.842 ns/op
Iteration   3: 786.543 ns/op
Iteration   4: 786.426 ns/op
Iteration   5: 787.166 ns/op
Iteration   6: 787.209 ns/op
Iteration   7: 786.823 ns/op
Iteration   8: 786.751 ns/op
Iteration   9: 786.861 ns/op
Iteration  10: 793.973 ns/op
Iteration  11: 787.767 ns/op
Iteration  12: 785.573 ns/op
Iteration  13: 785.140 ns/op
Iteration  14: 785.317 ns/op
Iteration  15: 785.645 ns/op
Iteration  16: 785.998 ns/op
Iteration  17: 784.958 ns/op
Iteration  18: 786.895 ns/op
Iteration  19: 787.131 ns/op
Iteration  20: 787.533 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1253.175 ns/op
# Warmup Iteration   2: 932.357 ns/op
# Warmup Iteration   3: 788.094 ns/op
# Warmup Iteration   4: 790.880 ns/op
# Warmup Iteration   5: 793.853 ns/op
Iteration   1: 797.968 ns/op
Iteration   2: 805.237 ns/op
Iteration   3: 788.141 ns/op
Iteration   4: 784.327 ns/op
Iteration   5: 784.333 ns/op
Iteration   6: 784.116 ns/op
Iteration   7: 783.840 ns/op
Iteration   8: 783.486 ns/op
Iteration   9: 783.871 ns/op
Iteration  10: 785.037 ns/op
Iteration  11: 785.709 ns/op
Iteration  12: 783.877 ns/op
Iteration  13: 787.393 ns/op
Iteration  14: 781.987 ns/op
Iteration  15: 781.861 ns/op
Iteration  16: 784.355 ns/op
Iteration  17: 782.766 ns/op
Iteration  18: 782.832 ns/op
Iteration  19: 784.158 ns/op
Iteration  20: 784.405 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1259.222 ns/op
# Warmup Iteration   2: 940.377 ns/op
# Warmup Iteration   3: 799.621 ns/op
# Warmup Iteration   4: 801.618 ns/op
# Warmup Iteration   5: 804.562 ns/op
Iteration   1: 808.460 ns/op
Iteration   2: 812.988 ns/op
Iteration   3: 794.643 ns/op
Iteration   4: 794.766 ns/op
Iteration   5: 794.394 ns/op
Iteration   6: 795.493 ns/op
Iteration   7: 794.991 ns/op
Iteration   8: 795.347 ns/op
Iteration   9: 796.536 ns/op
Iteration  10: 796.418 ns/op
Iteration  11: 796.266 ns/op
Iteration  12: 793.604 ns/op
Iteration  13: 793.425 ns/op
Iteration  14: 793.401 ns/op
Iteration  15: 794.403 ns/op
Iteration  16: 795.530 ns/op
Iteration  17: 794.228 ns/op
Iteration  18: 795.331 ns/op
Iteration  19: 795.958 ns/op
Iteration  20: 795.748 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  792.647 Â±(99.9%) 2.449 ns/op [Average]
  (min, avg, max) = (781.861, 792.647, 817.424), stdev = 7.220
  CI (99.9%): [790.199, 795.096] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
	
					 			    


  


, 				
 


 
	


	 
 			
 
 

	  
 
	
	
   

 

 		 		 	
		 
	
	 	
	

	
  	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1246.212 ns/op
# Warmup Iteration   2: 940.897 ns/op
# Warmup Iteration   3: 799.944 ns/op
# Warmup Iteration   4: 800.455 ns/op
# Warmup Iteration   5: 804.016 ns/op
Iteration   1: 807.513 ns/op
Iteration   2: 812.190 ns/op
Iteration   3: 794.421 ns/op
Iteration   4: 793.896 ns/op
Iteration   5: 793.284 ns/op
Iteration   6: 793.224 ns/op
Iteration   7: 793.563 ns/op
Iteration   8: 794.264 ns/op
Iteration   9: 793.978 ns/op
Iteration  10: 793.871 ns/op
Iteration  11: 794.658 ns/op
Iteration  12: 800.007 ns/op
Iteration  13: 792.202 ns/op
Iteration  14: 792.329 ns/op
Iteration  15: 793.055 ns/op
Iteration  16: 795.956 ns/op
Iteration  17: 795.590 ns/op
Iteration  18: 793.400 ns/op
Iteration  19: 792.719 ns/op
Iteration  20: 795.068 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1265.931 ns/op
# Warmup Iteration   2: 971.788 ns/op
# Warmup Iteration   3: 825.528 ns/op
# Warmup Iteration   4: 827.544 ns/op
# Warmup Iteration   5: 830.976 ns/op
Iteration   1: 834.131 ns/op
Iteration   2: 844.095 ns/op
Iteration   3: 821.674 ns/op
Iteration   4: 821.587 ns/op
Iteration   5: 820.409 ns/op
Iteration   6: 820.759 ns/op
Iteration   7: 820.126 ns/op
Iteration   8: 821.621 ns/op
Iteration   9: 822.465 ns/op
Iteration  10: 821.377 ns/op
Iteration  11: 823.353 ns/op
Iteration  12: 821.801 ns/op
Iteration  13: 817.573 ns/op
Iteration  14: 818.085 ns/op
Iteration  15: 818.734 ns/op
Iteration  16: 818.700 ns/op
Iteration  17: 820.495 ns/op
Iteration  18: 820.975 ns/op
Iteration  19: 820.385 ns/op
Iteration  20: 820.456 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1234.689 ns/op
# Warmup Iteration   2: 944.006 ns/op
# Warmup Iteration   3: 807.504 ns/op
# Warmup Iteration   4: 809.589 ns/op
# Warmup Iteration   5: 813.144 ns/op
Iteration   1: 816.748 ns/op
Iteration   2: 821.177 ns/op
Iteration   3: 803.425 ns/op
Iteration   4: 803.138 ns/op
Iteration   5: 802.665 ns/op
Iteration   6: 803.089 ns/op
Iteration   7: 803.779 ns/op
Iteration   8: 813.780 ns/op
Iteration   9: 805.831 ns/op
Iteration  10: 807.766 ns/op
Iteration  11: 805.044 ns/op
Iteration  12: 810.318 ns/op
Iteration  13: 800.750 ns/op
Iteration  14: 800.899 ns/op
Iteration  15: 800.629 ns/op
Iteration  16: 802.067 ns/op
Iteration  17: 802.122 ns/op
Iteration  18: 800.661 ns/op
Iteration  19: 803.496 ns/op
Iteration  20: 803.016 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1270.327 ns/op
# Warmup Iteration   2: 979.109 ns/op
# Warmup Iteration   3: 822.785 ns/op
# Warmup Iteration   4: 824.547 ns/op
# Warmup Iteration   5: 828.949 ns/op
Iteration   1: 834.042 ns/op
Iteration   2: 836.957 ns/op
Iteration   3: 819.878 ns/op
Iteration   4: 818.924 ns/op
Iteration   5: 818.970 ns/op
Iteration   6: 818.814 ns/op
Iteration   7: 818.796 ns/op
Iteration   8: 819.423 ns/op
Iteration   9: 821.144 ns/op
Iteration  10: 829.416 ns/op
Iteration  11: 828.582 ns/op
Iteration  12: 819.514 ns/op
Iteration  13: 817.020 ns/op
Iteration  14: 818.398 ns/op
Iteration  15: 819.476 ns/op
Iteration  16: 819.850 ns/op
Iteration  17: 819.647 ns/op
Iteration  18: 819.801 ns/op
Iteration  19: 817.919 ns/op
Iteration  20: 815.573 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1262.501 ns/op
# Warmup Iteration   2: 964.089 ns/op
# Warmup Iteration   3: 822.633 ns/op
# Warmup Iteration   4: 828.239 ns/op
# Warmup Iteration   5: 826.466 ns/op
Iteration   1: 831.071 ns/op
Iteration   2: 836.755 ns/op
Iteration   3: 818.103 ns/op
Iteration   4: 817.396 ns/op
Iteration   5: 817.471 ns/op
Iteration   6: 818.068 ns/op
Iteration   7: 817.444 ns/op
Iteration   8: 818.195 ns/op
Iteration   9: 818.005 ns/op
Iteration  10: 817.608 ns/op
Iteration  11: 817.095 ns/op
Iteration  12: 816.095 ns/op
Iteration  13: 815.893 ns/op
Iteration  14: 815.427 ns/op
Iteration  15: 816.362 ns/op
Iteration  16: 817.820 ns/op
Iteration  17: 817.919 ns/op
Iteration  18: 818.212 ns/op
Iteration  19: 817.615 ns/op
Iteration  20: 817.513 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  812.866 Â±(99.9%) 4.039 ns/op [Average]
  (min, avg, max) = (792.202, 812.866, 844.095), stdev = 11.909
  CI (99.9%): [808.827, 816.905] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                           (trimmed)  Mode  Cnt    Score   Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
	
					 			    


  


, 				
 


 
	


	 
 			
 
 

	  
 
	
	
   

 

 		 		 	
		 
	
	 	
	

	
  	  avgt  100  792.647 Â± 2.449  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
	
					 			    


  


, 				
 


 
	


	 
 			
 
 

	  
 
	
	
   

 

 		 		 	
		 
	
	 	
	

	
  	  avgt  100  812.866 Â± 4.039  ns/op

Benchmark result is saved to split_precompiled_regex_139_226_Match.csv
