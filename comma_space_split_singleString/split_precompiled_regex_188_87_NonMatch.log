# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = wZR8~WsKq6)#&>5,\PSDU.0i:{h+|0koFub[t0%m{u?4eY/9`#&]]|KRopdl+W.HR(9Ut:Dt~2_GOWbCz2nt%)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2043.756 ns/op
# Warmup Iteration   2: 1990.915 ns/op
# Warmup Iteration   3: 1666.472 ns/op
# Warmup Iteration   4: 1592.740 ns/op
# Warmup Iteration   5: 1577.473 ns/op
Iteration   1: 1598.212 ns/op
Iteration   2: 1579.119 ns/op
Iteration   3: 1604.401 ns/op
Iteration   4: 1578.602 ns/op
Iteration   5: 1612.325 ns/op
Iteration   6: 1623.142 ns/op
Iteration   7: 1580.529 ns/op
Iteration   8: 1589.780 ns/op
Iteration   9: 1578.551 ns/op
Iteration  10: 1585.419 ns/op
Iteration  11: 1578.906 ns/op
Iteration  12: 1585.880 ns/op
Iteration  13: 1578.740 ns/op
Iteration  14: 1585.845 ns/op
Iteration  15: 1578.726 ns/op
Iteration  16: 1586.858 ns/op
Iteration  17: 1580.139 ns/op
Iteration  18: 1586.456 ns/op
Iteration  19: 1578.594 ns/op
Iteration  20: 1586.854 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1922.704 ns/op
# Warmup Iteration   2: 1874.419 ns/op
# Warmup Iteration   3: 1501.280 ns/op
# Warmup Iteration   4: 1472.520 ns/op
# Warmup Iteration   5: 1456.501 ns/op
Iteration   1: 1474.524 ns/op
Iteration   2: 1482.321 ns/op
Iteration   3: 1462.669 ns/op
Iteration   4: 1489.583 ns/op
Iteration   5: 1455.749 ns/op
Iteration   6: 1495.693 ns/op
Iteration   7: 1464.020 ns/op
Iteration   8: 1455.186 ns/op
Iteration   9: 1463.265 ns/op
Iteration  10: 1454.998 ns/op
Iteration  11: 1462.867 ns/op
Iteration  12: 1455.481 ns/op
Iteration  13: 1464.141 ns/op
Iteration  14: 1461.875 ns/op
Iteration  15: 1454.028 ns/op
Iteration  16: 1482.463 ns/op
Iteration  17: 1453.715 ns/op
Iteration  18: 1462.212 ns/op
Iteration  19: 1453.925 ns/op
Iteration  20: 1462.175 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2051.063 ns/op
# Warmup Iteration   2: 1995.421 ns/op
# Warmup Iteration   3: 1677.042 ns/op
# Warmup Iteration   4: 1597.746 ns/op
# Warmup Iteration   5: 1580.095 ns/op
Iteration   1: 1603.919 ns/op
Iteration   2: 1581.191 ns/op
Iteration   3: 1608.548 ns/op
Iteration   4: 1580.873 ns/op
Iteration   5: 1618.886 ns/op
Iteration   6: 1602.450 ns/op
Iteration   7: 1603.886 ns/op
Iteration   8: 1590.945 ns/op
Iteration   9: 1580.429 ns/op
Iteration  10: 1596.033 ns/op
Iteration  11: 1581.156 ns/op
Iteration  12: 1595.883 ns/op
Iteration  13: 1580.962 ns/op
Iteration  14: 1588.259 ns/op
Iteration  15: 1580.821 ns/op
Iteration  16: 1592.981 ns/op
Iteration  17: 1581.269 ns/op
Iteration  18: 1591.116 ns/op
Iteration  19: 1581.055 ns/op
Iteration  20: 1588.911 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2019.488 ns/op
# Warmup Iteration   2: 1963.540 ns/op
# Warmup Iteration   3: 1631.524 ns/op
# Warmup Iteration   4: 1569.933 ns/op
# Warmup Iteration   5: 1553.334 ns/op
Iteration   1: 1572.778 ns/op
Iteration   2: 1554.014 ns/op
Iteration   3: 1579.530 ns/op
Iteration   4: 1587.202 ns/op
Iteration   5: 1553.349 ns/op
Iteration   6: 1596.568 ns/op
Iteration   7: 1553.036 ns/op
Iteration   8: 1565.083 ns/op
Iteration   9: 1553.692 ns/op
Iteration  10: 1560.959 ns/op
Iteration  11: 1553.939 ns/op
Iteration  12: 1566.705 ns/op
Iteration  13: 1556.411 ns/op
Iteration  14: 1562.069 ns/op
Iteration  15: 1554.471 ns/op
Iteration  16: 1562.198 ns/op
Iteration  17: 1562.233 ns/op
Iteration  18: 1553.093 ns/op
Iteration  19: 1565.220 ns/op
Iteration  20: 1553.242 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2046.482 ns/op
# Warmup Iteration   2: 1992.170 ns/op
# Warmup Iteration   3: 1668.560 ns/op
# Warmup Iteration   4: 1594.517 ns/op
# Warmup Iteration   5: 1579.500 ns/op
Iteration   1: 1598.337 ns/op
Iteration   2: 1579.546 ns/op
Iteration   3: 1605.230 ns/op
Iteration   4: 1580.500 ns/op
Iteration   5: 1613.565 ns/op
Iteration   6: 1623.623 ns/op
Iteration   7: 1579.366 ns/op
Iteration   8: 1589.569 ns/op
Iteration   9: 1579.355 ns/op
Iteration  10: 1586.279 ns/op
Iteration  11: 1579.333 ns/op
Iteration  12: 1587.030 ns/op
Iteration  13: 1579.264 ns/op
Iteration  14: 1586.973 ns/op
Iteration  15: 1579.366 ns/op
Iteration  16: 1587.566 ns/op
Iteration  17: 1579.464 ns/op
Iteration  18: 1588.862 ns/op
Iteration  19: 1579.688 ns/op
Iteration  20: 1588.268 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1559.345 Â±(99.9%) 16.853 ns/op [Average]
  (min, avg, max) = (1453.715, 1559.345, 1623.623), stdev = 49.693
  CI (99.9%): [1542.492, 1576.199] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = wZR8~WsKq6)#&>5,\PSDU.0i:{h+|0koFub[t0%m{u?4eY/9`#&]]|KRopdl+W.HR(9Ut:Dt~2_GOWbCz2nt%)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2058.043 ns/op
# Warmup Iteration   2: 2005.751 ns/op
# Warmup Iteration   3: 1668.658 ns/op
# Warmup Iteration   4: 1599.880 ns/op
# Warmup Iteration   5: 1583.886 ns/op
Iteration   1: 1606.527 ns/op
Iteration   2: 1583.898 ns/op
Iteration   3: 1610.148 ns/op
Iteration   4: 1617.976 ns/op
Iteration   5: 1584.317 ns/op
Iteration   6: 1627.016 ns/op
Iteration   7: 1583.055 ns/op
Iteration   8: 1589.610 ns/op
Iteration   9: 1583.448 ns/op
Iteration  10: 1591.800 ns/op
Iteration  11: 1583.604 ns/op
Iteration  12: 1591.477 ns/op
Iteration  13: 1583.919 ns/op
Iteration  14: 1592.402 ns/op
Iteration  15: 1583.721 ns/op
Iteration  16: 1591.245 ns/op
Iteration  17: 1593.841 ns/op
Iteration  18: 1583.805 ns/op
Iteration  19: 1593.580 ns/op
Iteration  20: 1583.789 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2113.978 ns/op
# Warmup Iteration   2: 2005.465 ns/op
# Warmup Iteration   3: 1680.556 ns/op
# Warmup Iteration   4: 1601.976 ns/op
# Warmup Iteration   5: 1584.780 ns/op
Iteration   1: 1606.537 ns/op
Iteration   2: 1584.028 ns/op
Iteration   3: 1613.072 ns/op
Iteration   4: 1619.147 ns/op
Iteration   5: 1584.624 ns/op
Iteration   6: 1632.971 ns/op
Iteration   7: 1584.052 ns/op
Iteration   8: 1592.175 ns/op
Iteration   9: 1584.120 ns/op
Iteration  10: 1592.149 ns/op
Iteration  11: 1584.869 ns/op
Iteration  12: 1591.167 ns/op
Iteration  13: 1584.563 ns/op
Iteration  14: 1591.888 ns/op
Iteration  15: 1584.129 ns/op
Iteration  16: 1592.241 ns/op
Iteration  17: 1594.934 ns/op
Iteration  18: 1584.655 ns/op
Iteration  19: 1640.908 ns/op
Iteration  20: 1587.140 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2210.009 ns/op
# Warmup Iteration   2: 2165.749 ns/op
# Warmup Iteration   3: 1899.977 ns/op
# Warmup Iteration   4: 1756.430 ns/op
# Warmup Iteration   5: 1771.261 ns/op
Iteration   1: 1776.744 ns/op
Iteration   2: 1755.307 ns/op
Iteration   3: 1783.077 ns/op
Iteration   4: 1751.592 ns/op
Iteration   5: 1789.448 ns/op
Iteration   6: 1754.700 ns/op
Iteration   7: 1802.257 ns/op
Iteration   8: 1756.103 ns/op
Iteration   9: 1763.442 ns/op
Iteration  10: 1755.041 ns/op
Iteration  11: 1763.788 ns/op
Iteration  12: 1755.352 ns/op
Iteration  13: 1755.797 ns/op
Iteration  14: 1763.034 ns/op
Iteration  15: 1753.076 ns/op
Iteration  16: 1760.478 ns/op
Iteration  17: 1753.992 ns/op
Iteration  18: 1762.048 ns/op
Iteration  19: 1754.136 ns/op
Iteration  20: 1760.717 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2048.469 ns/op
# Warmup Iteration   2: 1938.978 ns/op
# Warmup Iteration   3: 1598.441 ns/op
# Warmup Iteration   4: 1539.394 ns/op
# Warmup Iteration   5: 1523.595 ns/op
Iteration   1: 1546.060 ns/op
Iteration   2: 1549.805 ns/op
Iteration   3: 1523.089 ns/op
Iteration   4: 1557.861 ns/op
Iteration   5: 1525.539 ns/op
Iteration   6: 1575.258 ns/op
Iteration   7: 1524.761 ns/op
Iteration   8: 1530.516 ns/op
Iteration   9: 1523.088 ns/op
Iteration  10: 1530.498 ns/op
Iteration  11: 1530.332 ns/op
Iteration  12: 1522.139 ns/op
Iteration  13: 1531.500 ns/op
Iteration  14: 1522.573 ns/op
Iteration  15: 1531.229 ns/op
Iteration  16: 1522.482 ns/op
Iteration  17: 1531.620 ns/op
Iteration  18: 1554.104 ns/op
Iteration  19: 1522.515 ns/op
Iteration  20: 1543.461 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2114.703 ns/op
# Warmup Iteration   2: 1989.138 ns/op
# Warmup Iteration   3: 1661.504 ns/op
# Warmup Iteration   4: 1587.575 ns/op
# Warmup Iteration   5: 1571.900 ns/op
Iteration   1: 1591.473 ns/op
Iteration   2: 1572.126 ns/op
Iteration   3: 1599.435 ns/op
Iteration   4: 1606.587 ns/op
Iteration   5: 1572.488 ns/op
Iteration   6: 1615.388 ns/op
Iteration   7: 1572.172 ns/op
Iteration   8: 1580.650 ns/op
Iteration   9: 1573.109 ns/op
Iteration  10: 1580.272 ns/op
Iteration  11: 1572.431 ns/op
Iteration  12: 1580.244 ns/op
Iteration  13: 1571.938 ns/op
Iteration  14: 1578.928 ns/op
Iteration  15: 1582.361 ns/op
Iteration  16: 1572.593 ns/op
Iteration  17: 1582.097 ns/op
Iteration  18: 1572.355 ns/op
Iteration  19: 1588.253 ns/op
Iteration  20: 1572.211 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1613.942 Â±(99.9%) 26.993 ns/op [Average]
  (min, avg, max) = (1522.139, 1613.942, 1802.257), stdev = 79.589
  CI (99.9%): [1586.949, 1640.935] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  wZR8~WsKq6)#&>5,\PSDU.0i:{h+|0koFub[t0%m{u?4eY/9`#&]]|KRopdl+W.HR(9Ut:Dt~2_GOWbCz2nt%  avgt  100  1559.345 Â± 16.853  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  wZR8~WsKq6)#&>5,\PSDU.0i:{h+|0koFub[t0%m{u?4eY/9`#&]]|KRopdl+W.HR(9Ut:Dt~2_GOWbCz2nt%  avgt  100  1613.942 Â± 26.993  ns/op

Benchmark result is saved to split_precompiled_regex_188_87_NonMatch.csv
