# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 5`}7\s0|.*:No4k\'jEaF;C?>*;<+5O {@A#-rU`+-yq;`L( ge18
V+KO/g?ps^,P3hkql+]p$_{II89=T%q*=E,7>]?U`_0t.|ub$(2!'d%d>)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2348.500 ns/op
# Warmup Iteration   2: 2287.616 ns/op
# Warmup Iteration   3: 2009.034 ns/op
# Warmup Iteration   4: 1847.074 ns/op
# Warmup Iteration   5: 1871.447 ns/op
Iteration   1: 1856.009 ns/op
Iteration   2: 1865.638 ns/op
Iteration   3: 1886.557 ns/op
Iteration   4: 1846.125 ns/op
Iteration   5: 1896.393 ns/op
Iteration   6: 1847.038 ns/op
Iteration   7: 1898.131 ns/op
Iteration   8: 1847.271 ns/op
Iteration   9: 1856.351 ns/op
Iteration  10: 1846.682 ns/op
Iteration  11: 1847.645 ns/op
Iteration  12: 1857.490 ns/op
Iteration  13: 1847.312 ns/op
Iteration  14: 1857.178 ns/op
Iteration  15: 1847.454 ns/op
Iteration  16: 1856.280 ns/op
Iteration  17: 1846.827 ns/op
Iteration  18: 1857.459 ns/op
Iteration  19: 1846.741 ns/op
Iteration  20: 1857.481 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2367.265 ns/op
# Warmup Iteration   2: 2283.818 ns/op
# Warmup Iteration   3: 2010.019 ns/op
# Warmup Iteration   4: 1845.344 ns/op
# Warmup Iteration   5: 1864.704 ns/op
Iteration   1: 1847.711 ns/op
Iteration   2: 1865.929 ns/op
Iteration   3: 1876.328 ns/op
Iteration   4: 1844.477 ns/op
Iteration   5: 1885.636 ns/op
Iteration   6: 1844.060 ns/op
Iteration   7: 1895.958 ns/op
Iteration   8: 1844.203 ns/op
Iteration   9: 1854.905 ns/op
Iteration  10: 1844.224 ns/op
Iteration  11: 1844.836 ns/op
Iteration  12: 1853.734 ns/op
Iteration  13: 1843.760 ns/op
Iteration  14: 1854.484 ns/op
Iteration  15: 1844.875 ns/op
Iteration  16: 1852.929 ns/op
Iteration  17: 1844.602 ns/op
Iteration  18: 1853.544 ns/op
Iteration  19: 1844.417 ns/op
Iteration  20: 1853.678 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2379.791 ns/op
# Warmup Iteration   2: 2315.656 ns/op
# Warmup Iteration   3: 2057.009 ns/op
# Warmup Iteration   4: 1885.436 ns/op
# Warmup Iteration   5: 1898.591 ns/op
Iteration   1: 1880.896 ns/op
Iteration   2: 1910.171 ns/op
Iteration   3: 1889.570 ns/op
Iteration   4: 1906.452 ns/op
Iteration   5: 1895.336 ns/op
Iteration   6: 1907.060 ns/op
Iteration   7: 1881.279 ns/op
Iteration   8: 1933.742 ns/op
Iteration   9: 1881.478 ns/op
Iteration  10: 1890.938 ns/op
Iteration  11: 1880.747 ns/op
Iteration  12: 1889.848 ns/op
Iteration  13: 1880.574 ns/op
Iteration  14: 1888.800 ns/op
Iteration  15: 1880.964 ns/op
Iteration  16: 1889.520 ns/op
Iteration  17: 1880.424 ns/op
Iteration  18: 1891.187 ns/op
Iteration  19: 1881.261 ns/op
Iteration  20: 1891.614 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2343.973 ns/op
# Warmup Iteration   2: 2284.634 ns/op
# Warmup Iteration   3: 2000.706 ns/op
# Warmup Iteration   4: 1846.059 ns/op
# Warmup Iteration   5: 1860.809 ns/op
Iteration   1: 1867.793 ns/op
Iteration   2: 1845.210 ns/op
Iteration   3: 1875.733 ns/op
Iteration   4: 1845.762 ns/op
Iteration   5: 1886.219 ns/op
Iteration   6: 1845.174 ns/op
Iteration   7: 1896.592 ns/op
Iteration   8: 1845.669 ns/op
Iteration   9: 1857.949 ns/op
Iteration  10: 1845.126 ns/op
Iteration  11: 1854.784 ns/op
Iteration  12: 1845.266 ns/op
Iteration  13: 1845.741 ns/op
Iteration  14: 1853.974 ns/op
Iteration  15: 1845.724 ns/op
Iteration  16: 1854.985 ns/op
Iteration  17: 1846.466 ns/op
Iteration  18: 1856.920 ns/op
Iteration  19: 1846.130 ns/op
Iteration  20: 1863.526 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2374.305 ns/op
# Warmup Iteration   2: 2313.698 ns/op
# Warmup Iteration   3: 2049.298 ns/op
# Warmup Iteration   4: 1878.538 ns/op
# Warmup Iteration   5: 1895.644 ns/op
Iteration   1: 1877.753 ns/op
Iteration   2: 1901.189 ns/op
Iteration   3: 1897.593 ns/op
Iteration   4: 1888.661 ns/op
Iteration   5: 1919.551 ns/op
Iteration   6: 1877.977 ns/op
Iteration   7: 1887.126 ns/op
Iteration   8: 1921.372 ns/op
Iteration   9: 1878.160 ns/op
Iteration  10: 1889.578 ns/op
Iteration  11: 1878.233 ns/op
Iteration  12: 1891.733 ns/op
Iteration  13: 1879.718 ns/op
Iteration  14: 1890.465 ns/op
Iteration  15: 1878.041 ns/op
Iteration  16: 1888.109 ns/op
Iteration  17: 1877.710 ns/op
Iteration  18: 1893.347 ns/op
Iteration  19: 1877.372 ns/op
Iteration  20: 1892.575 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1870.052 Â±(99.9%) 7.484 ns/op [Average]
  (min, avg, max) = (1843.760, 1870.052, 1933.742), stdev = 22.068
  CI (99.9%): [1862.568, 1877.537] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 5`}7\s0|.*:No4k\'jEaF;C?>*;<+5O {@A#-rU`+-yq;`L( ge18
V+KO/g?ps^,P3hkql+]p$_{II89=T%q*=E,7>]?U`_0t.|ub$(2!'d%d>)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2753.967 ns/op
# Warmup Iteration   2: 2556.473 ns/op
# Warmup Iteration   3: 2421.063 ns/op
# Warmup Iteration   4: 2102.863 ns/op
# Warmup Iteration   5: 2127.653 ns/op
Iteration   1: 2123.948 ns/op
Iteration   2: 2143.899 ns/op
Iteration   3: 2101.427 ns/op
Iteration   4: 2171.235 ns/op
Iteration   5: 2101.792 ns/op
Iteration   6: 2114.008 ns/op
Iteration   7: 2134.783 ns/op
Iteration   8: 2101.235 ns/op
Iteration   9: 2183.007 ns/op
Iteration  10: 2120.075 ns/op
Iteration  11: 2132.987 ns/op
Iteration  12: 2102.250 ns/op
Iteration  13: 2126.445 ns/op
Iteration  14: 2102.471 ns/op
Iteration  15: 2101.688 ns/op
Iteration  16: 2112.852 ns/op
Iteration  17: 2102.121 ns/op
Iteration  18: 2112.116 ns/op
Iteration  19: 2102.490 ns/op
Iteration  20: 2112.789 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2441.149 ns/op
# Warmup Iteration   2: 2309.473 ns/op
# Warmup Iteration   3: 2027.266 ns/op
# Warmup Iteration   4: 1863.383 ns/op
# Warmup Iteration   5: 1881.391 ns/op
Iteration   1: 1887.911 ns/op
Iteration   2: 1863.916 ns/op
Iteration   3: 1894.016 ns/op
Iteration   4: 1864.209 ns/op
Iteration   5: 1903.402 ns/op
Iteration   6: 1864.286 ns/op
Iteration   7: 1915.064 ns/op
Iteration   8: 1864.566 ns/op
Iteration   9: 1874.497 ns/op
Iteration  10: 1864.024 ns/op
Iteration  11: 1881.652 ns/op
Iteration  12: 1864.107 ns/op
Iteration  13: 1874.349 ns/op
Iteration  14: 1864.180 ns/op
Iteration  15: 1875.394 ns/op
Iteration  16: 1864.787 ns/op
Iteration  17: 1888.853 ns/op
Iteration  18: 1864.846 ns/op
Iteration  19: 1892.785 ns/op
Iteration  20: 1865.231 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2470.977 ns/op
# Warmup Iteration   2: 2309.032 ns/op
# Warmup Iteration   3: 2033.497 ns/op
# Warmup Iteration   4: 1860.889 ns/op
# Warmup Iteration   5: 1879.753 ns/op
Iteration   1: 1895.337 ns/op
Iteration   2: 1860.692 ns/op
Iteration   3: 1897.839 ns/op
Iteration   4: 1859.969 ns/op
Iteration   5: 1904.545 ns/op
Iteration   6: 1858.862 ns/op
Iteration   7: 1909.976 ns/op
Iteration   8: 1859.410 ns/op
Iteration   9: 1875.371 ns/op
Iteration  10: 1858.200 ns/op
Iteration  11: 1868.111 ns/op
Iteration  12: 1859.298 ns/op
Iteration  13: 1870.061 ns/op
Iteration  14: 1859.476 ns/op
Iteration  15: 1870.950 ns/op
Iteration  16: 1859.560 ns/op
Iteration  17: 1870.717 ns/op
Iteration  18: 1859.624 ns/op
Iteration  19: 1870.539 ns/op
Iteration  20: 1859.957 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2324.418 ns/op
# Warmup Iteration   2: 2266.516 ns/op
# Warmup Iteration   3: 1961.760 ns/op
# Warmup Iteration   4: 1826.148 ns/op
# Warmup Iteration   5: 1842.971 ns/op
Iteration   1: 1848.486 ns/op
Iteration   2: 1825.742 ns/op
Iteration   3: 1856.994 ns/op
Iteration   4: 1825.385 ns/op
Iteration   5: 1865.240 ns/op
Iteration   6: 1825.683 ns/op
Iteration   7: 1876.453 ns/op
Iteration   8: 1825.777 ns/op
Iteration   9: 1835.045 ns/op
Iteration  10: 1824.642 ns/op
Iteration  11: 1833.902 ns/op
Iteration  12: 1825.139 ns/op
Iteration  13: 1833.790 ns/op
Iteration  14: 1825.856 ns/op
Iteration  15: 1834.294 ns/op
Iteration  16: 1823.296 ns/op
Iteration  17: 1836.019 ns/op
Iteration  18: 1825.922 ns/op
Iteration  19: 1839.632 ns/op
Iteration  20: 1826.010 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2390.829 ns/op
# Warmup Iteration   2: 2271.431 ns/op
# Warmup Iteration   3: 1966.438 ns/op
# Warmup Iteration   4: 1821.385 ns/op
# Warmup Iteration   5: 1839.485 ns/op
Iteration   1: 1845.315 ns/op
Iteration   2: 1822.501 ns/op
Iteration   3: 1852.642 ns/op
Iteration   4: 1821.358 ns/op
Iteration   5: 1861.497 ns/op
Iteration   6: 1823.452 ns/op
Iteration   7: 1878.157 ns/op
Iteration   8: 1822.659 ns/op
Iteration   9: 1833.302 ns/op
Iteration  10: 1821.918 ns/op
Iteration  11: 1833.866 ns/op
Iteration  12: 1821.778 ns/op
Iteration  13: 1830.843 ns/op
Iteration  14: 1822.293 ns/op
Iteration  15: 1832.291 ns/op
Iteration  16: 1822.249 ns/op
Iteration  17: 1837.515 ns/op
Iteration  18: 1822.085 ns/op
Iteration  19: 1844.943 ns/op
Iteration  20: 1822.630 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1907.508 Â±(99.9%) 37.203 ns/op [Average]
  (min, avg, max) = (1821.358, 1907.508, 2183.007), stdev = 109.695
  CI (99.9%): [1870.304, 1944.711] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                         (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  5`}7\s0|.*:No4k\'jEaF;C?>*;<+5O {@A#-rU`+-yq;`L( ge18
V+KO/g?ps^,P3hkql+]p$_{II89=T%q*=E,7>]?U`_0t.|ub$(2!'d%d>  avgt  100  1870.052 Â±  7.484  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  5`}7\s0|.*:No4k\'jEaF;C?>*;<+5O {@A#-rU`+-yq;`L( ge18
V+KO/g?ps^,P3hkql+]p$_{II89=T%q*=E,7>]?U`_0t.|ub$(2!'d%d>  avgt  100  1907.508 Â± 37.203  ns/op

Benchmark result is saved to split_precompiled_regex_223_112_NonMatch.csv
