# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  
	   
	
	 
		
 	  	 
	 	

	

		,		 







	  	 		

  	
 			  
		
	 	 			 
 	
 				  	
   	

			 

	 

		 	



)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1315.899 ns/op
# Warmup Iteration   2: 1028.967 ns/op
# Warmup Iteration   3: 850.320 ns/op
# Warmup Iteration   4: 852.538 ns/op
# Warmup Iteration   5: 856.816 ns/op
Iteration   1: 860.387 ns/op
Iteration   2: 865.588 ns/op
Iteration   3: 847.586 ns/op
Iteration   4: 846.295 ns/op
Iteration   5: 845.926 ns/op
Iteration   6: 841.650 ns/op
Iteration   7: 845.345 ns/op
Iteration   8: 845.620 ns/op
Iteration   9: 845.976 ns/op
Iteration  10: 848.632 ns/op
Iteration  11: 845.743 ns/op
Iteration  12: 846.363 ns/op
Iteration  13: 843.817 ns/op
Iteration  14: 843.851 ns/op
Iteration  15: 843.686 ns/op
Iteration  16: 843.506 ns/op
Iteration  17: 844.119 ns/op
Iteration  18: 841.695 ns/op
Iteration  19: 844.988 ns/op
Iteration  20: 846.178 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1305.429 ns/op
# Warmup Iteration   2: 1010.801 ns/op
# Warmup Iteration   3: 849.165 ns/op
# Warmup Iteration   4: 851.815 ns/op
# Warmup Iteration   5: 854.733 ns/op
Iteration   1: 859.455 ns/op
Iteration   2: 864.959 ns/op
Iteration   3: 845.856 ns/op
Iteration   4: 845.127 ns/op
Iteration   5: 845.129 ns/op
Iteration   6: 841.139 ns/op
Iteration   7: 846.232 ns/op
Iteration   8: 845.410 ns/op
Iteration   9: 845.366 ns/op
Iteration  10: 845.631 ns/op
Iteration  11: 846.184 ns/op
Iteration  12: 845.932 ns/op
Iteration  13: 851.035 ns/op
Iteration  14: 843.487 ns/op
Iteration  15: 843.841 ns/op
Iteration  16: 843.945 ns/op
Iteration  17: 844.446 ns/op
Iteration  18: 840.518 ns/op
Iteration  19: 848.354 ns/op
Iteration  20: 849.813 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1410.993 ns/op
# Warmup Iteration   2: 1163.846 ns/op
# Warmup Iteration   3: 948.913 ns/op
# Warmup Iteration   4: 952.159 ns/op
# Warmup Iteration   5: 954.938 ns/op
Iteration   1: 940.076 ns/op
Iteration   2: 963.028 ns/op
Iteration   3: 966.704 ns/op
Iteration   4: 945.908 ns/op
Iteration   5: 949.119 ns/op
Iteration   6: 942.947 ns/op
Iteration   7: 944.341 ns/op
Iteration   8: 944.342 ns/op
Iteration   9: 943.285 ns/op
Iteration  10: 943.480 ns/op
Iteration  11: 943.080 ns/op
Iteration  12: 939.216 ns/op
Iteration  13: 943.232 ns/op
Iteration  14: 944.368 ns/op
Iteration  15: 940.917 ns/op
Iteration  16: 941.363 ns/op
Iteration  17: 941.162 ns/op
Iteration  18: 938.788 ns/op
Iteration  19: 941.526 ns/op
Iteration  20: 940.929 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1291.454 ns/op
# Warmup Iteration   2: 981.106 ns/op
# Warmup Iteration   3: 823.276 ns/op
# Warmup Iteration   4: 825.335 ns/op
# Warmup Iteration   5: 829.541 ns/op
Iteration   1: 833.757 ns/op
Iteration   2: 838.201 ns/op
Iteration   3: 820.288 ns/op
Iteration   4: 820.173 ns/op
Iteration   5: 819.153 ns/op
Iteration   6: 819.251 ns/op
Iteration   7: 818.430 ns/op
Iteration   8: 819.156 ns/op
Iteration   9: 819.559 ns/op
Iteration  10: 820.047 ns/op
Iteration  11: 823.743 ns/op
Iteration  12: 814.955 ns/op
Iteration  13: 816.782 ns/op
Iteration  14: 819.133 ns/op
Iteration  15: 816.689 ns/op
Iteration  16: 817.384 ns/op
Iteration  17: 817.271 ns/op
Iteration  18: 817.943 ns/op
Iteration  19: 817.586 ns/op
Iteration  20: 818.386 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1305.526 ns/op
# Warmup Iteration   2: 1004.094 ns/op
# Warmup Iteration   3: 840.270 ns/op
# Warmup Iteration   4: 843.166 ns/op
# Warmup Iteration   5: 846.821 ns/op
Iteration   1: 851.801 ns/op
Iteration   2: 857.571 ns/op
Iteration   3: 836.965 ns/op
Iteration   4: 836.282 ns/op
Iteration   5: 836.213 ns/op
Iteration   6: 836.036 ns/op
Iteration   7: 836.647 ns/op
Iteration   8: 832.435 ns/op
Iteration   9: 836.823 ns/op
Iteration  10: 837.612 ns/op
Iteration  11: 837.361 ns/op
Iteration  12: 837.460 ns/op
Iteration  13: 837.000 ns/op
Iteration  14: 836.113 ns/op
Iteration  15: 845.035 ns/op
Iteration  16: 835.103 ns/op
Iteration  17: 835.263 ns/op
Iteration  18: 834.758 ns/op
Iteration  19: 835.405 ns/op
Iteration  20: 835.621 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  859.520 Â±(99.9%) 15.061 ns/op [Average]
  (min, avg, max) = (814.955, 859.520, 966.704), stdev = 44.407
  CI (99.9%): [844.459, 874.581] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  
	   
	
	 
		
 	  	 
	 	

	

		,		 







	  	 		

  	
 			  
		
	 	 			 
 	
 				  	
   	

			 

	 

		 	



)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1306.027 ns/op
# Warmup Iteration   2: 1042.517 ns/op
# Warmup Iteration   3: 877.341 ns/op
# Warmup Iteration   4: 880.785 ns/op
# Warmup Iteration   5: 883.738 ns/op
Iteration   1: 887.742 ns/op
Iteration   2: 893.722 ns/op
Iteration   3: 873.819 ns/op
Iteration   4: 872.891 ns/op
Iteration   5: 873.520 ns/op
Iteration   6: 869.125 ns/op
Iteration   7: 873.751 ns/op
Iteration   8: 873.001 ns/op
Iteration   9: 872.911 ns/op
Iteration  10: 874.246 ns/op
Iteration  11: 873.690 ns/op
Iteration  12: 874.110 ns/op
Iteration  13: 871.509 ns/op
Iteration  14: 871.476 ns/op
Iteration  15: 872.108 ns/op
Iteration  16: 869.494 ns/op
Iteration  17: 872.266 ns/op
Iteration  18: 873.506 ns/op
Iteration  19: 872.201 ns/op
Iteration  20: 872.776 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1284.736 ns/op
# Warmup Iteration   2: 994.653 ns/op
# Warmup Iteration   3: 841.375 ns/op
# Warmup Iteration   4: 844.289 ns/op
# Warmup Iteration   5: 847.291 ns/op
Iteration   1: 852.029 ns/op
Iteration   2: 857.136 ns/op
Iteration   3: 837.918 ns/op
Iteration   4: 837.426 ns/op
Iteration   5: 837.652 ns/op
Iteration   6: 837.267 ns/op
Iteration   7: 838.290 ns/op
Iteration   8: 838.760 ns/op
Iteration   9: 838.388 ns/op
Iteration  10: 838.176 ns/op
Iteration  11: 838.879 ns/op
Iteration  12: 833.604 ns/op
Iteration  13: 836.489 ns/op
Iteration  14: 835.361 ns/op
Iteration  15: 835.426 ns/op
Iteration  16: 836.069 ns/op
Iteration  17: 836.544 ns/op
Iteration  18: 836.388 ns/op
Iteration  19: 836.098 ns/op
Iteration  20: 836.450 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1379.221 ns/op
# Warmup Iteration   2: 1143.322 ns/op
# Warmup Iteration   3: 929.839 ns/op
# Warmup Iteration   4: 935.007 ns/op
# Warmup Iteration   5: 934.892 ns/op
Iteration   1: 940.571 ns/op
Iteration   2: 921.169 ns/op
Iteration   3: 946.286 ns/op
Iteration   4: 924.923 ns/op
Iteration   5: 925.550 ns/op
Iteration   6: 925.498 ns/op
Iteration   7: 928.368 ns/op
Iteration   8: 928.541 ns/op
Iteration   9: 921.130 ns/op
Iteration  10: 927.129 ns/op
Iteration  11: 927.859 ns/op
Iteration  12: 938.324 ns/op
Iteration  13: 925.837 ns/op
Iteration  14: 930.209 ns/op
Iteration  15: 922.580 ns/op
Iteration  16: 920.341 ns/op
Iteration  17: 923.455 ns/op
Iteration  18: 925.109 ns/op
Iteration  19: 922.693 ns/op
Iteration  20: 925.789 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1392.319 ns/op
# Warmup Iteration   2: 1173.502 ns/op
# Warmup Iteration   3: 969.715 ns/op
# Warmup Iteration   4: 972.884 ns/op
# Warmup Iteration   5: 976.294 ns/op
Iteration   1: 959.695 ns/op
Iteration   2: 981.650 ns/op
Iteration   3: 990.822 ns/op
Iteration   4: 966.770 ns/op
Iteration   5: 966.051 ns/op
Iteration   6: 965.585 ns/op
Iteration   7: 960.143 ns/op
Iteration   8: 967.807 ns/op
Iteration   9: 966.581 ns/op
Iteration  10: 966.586 ns/op
Iteration  11: 975.754 ns/op
Iteration  12: 960.268 ns/op
Iteration  13: 976.433 ns/op
Iteration  14: 967.100 ns/op
Iteration  15: 967.230 ns/op
Iteration  16: 962.214 ns/op
Iteration  17: 962.909 ns/op
Iteration  18: 959.919 ns/op
Iteration  19: 962.747 ns/op
Iteration  20: 963.487 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1409.390 ns/op
# Warmup Iteration   2: 1192.100 ns/op
# Warmup Iteration   3: 976.564 ns/op
# Warmup Iteration   4: 979.674 ns/op
# Warmup Iteration   5: 984.168 ns/op
Iteration   1: 968.211 ns/op
Iteration   2: 989.202 ns/op
Iteration   3: 995.202 ns/op
Iteration   4: 972.383 ns/op
Iteration   5: 973.316 ns/op
Iteration   6: 968.222 ns/op
Iteration   7: 972.590 ns/op
Iteration   8: 982.155 ns/op
Iteration   9: 975.657 ns/op
Iteration  10: 973.468 ns/op
Iteration  11: 975.554 ns/op
Iteration  12: 968.084 ns/op
Iteration  13: 974.550 ns/op
Iteration  14: 974.593 ns/op
Iteration  15: 970.902 ns/op
Iteration  16: 973.583 ns/op
Iteration  17: 967.101 ns/op
Iteration  18: 969.434 ns/op
Iteration  19: 970.710 ns/op
Iteration  20: 971.883 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  916.501 Â±(99.9%) 18.104 ns/op [Average]
  (min, avg, max) = (833.604, 916.501, 995.202), stdev = 53.381
  CI (99.9%): [898.397, 934.606] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                   (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   
	   
	
	 
		
 	  	 
	 	

	

		,		 







	  	 		

  	
 			  
		
	 	 			 
 	
 				  	
   	

			 

	 

		 	



  avgt  100  859.520 Â± 15.061  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   
	   
	
	 
		
 	  	 
	 	

	

		,		 







	  	 		

  	
 			  
		
	 	 			 
 	
 				  	
   	

			 

	 

		 	



  avgt  100  916.501 Â± 18.104  ns/op

Benchmark result is saved to split_precompiled_regex_84_250_Match.csv
