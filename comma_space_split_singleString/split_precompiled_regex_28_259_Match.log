# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =   
  	 

 	

 



	
 

	
 	
	 
		 	
	 
	 , 				
 	 

	 	 	
 
 	 	   		
	
  
		

	 	



 	 		

		 
 		
	
 
		 	
 

 

		 	
	 			 	  	 

   )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1396.266 ns/op
# Warmup Iteration   2: 1148.824 ns/op
# Warmup Iteration   3: 929.171 ns/op
# Warmup Iteration   4: 931.026 ns/op
# Warmup Iteration   5: 932.245 ns/op
Iteration   1: 931.187 ns/op
Iteration   2: 922.789 ns/op
Iteration   3: 943.489 ns/op
Iteration   4: 921.455 ns/op
Iteration   5: 921.975 ns/op
Iteration   6: 921.894 ns/op
Iteration   7: 921.529 ns/op
Iteration   8: 917.920 ns/op
Iteration   9: 921.818 ns/op
Iteration  10: 921.827 ns/op
Iteration  11: 925.052 ns/op
Iteration  12: 922.757 ns/op
Iteration  13: 922.564 ns/op
Iteration  14: 917.635 ns/op
Iteration  15: 924.487 ns/op
Iteration  16: 920.021 ns/op
Iteration  17: 919.202 ns/op
Iteration  18: 921.034 ns/op
Iteration  19: 920.737 ns/op
Iteration  20: 917.349 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1296.796 ns/op
# Warmup Iteration   2: 997.337 ns/op
# Warmup Iteration   3: 839.901 ns/op
# Warmup Iteration   4: 842.545 ns/op
# Warmup Iteration   5: 845.707 ns/op
Iteration   1: 850.244 ns/op
Iteration   2: 855.677 ns/op
Iteration   3: 836.493 ns/op
Iteration   4: 835.472 ns/op
Iteration   5: 835.335 ns/op
Iteration   6: 835.936 ns/op
Iteration   7: 835.274 ns/op
Iteration   8: 831.889 ns/op
Iteration   9: 836.045 ns/op
Iteration  10: 836.338 ns/op
Iteration  11: 836.836 ns/op
Iteration  12: 841.110 ns/op
Iteration  13: 834.154 ns/op
Iteration  14: 835.801 ns/op
Iteration  15: 834.916 ns/op
Iteration  16: 835.161 ns/op
Iteration  17: 835.531 ns/op
Iteration  18: 835.689 ns/op
Iteration  19: 836.784 ns/op
Iteration  20: 836.753 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1284.930 ns/op
# Warmup Iteration   2: 972.035 ns/op
# Warmup Iteration   3: 825.058 ns/op
# Warmup Iteration   4: 822.892 ns/op
# Warmup Iteration   5: 825.835 ns/op
Iteration   1: 830.711 ns/op
Iteration   2: 836.170 ns/op
Iteration   3: 816.909 ns/op
Iteration   4: 817.463 ns/op
Iteration   5: 816.990 ns/op
Iteration   6: 816.655 ns/op
Iteration   7: 817.403 ns/op
Iteration   8: 822.327 ns/op
Iteration   9: 817.288 ns/op
Iteration  10: 817.813 ns/op
Iteration  11: 818.303 ns/op
Iteration  12: 812.764 ns/op
Iteration  13: 814.651 ns/op
Iteration  14: 814.343 ns/op
Iteration  15: 814.799 ns/op
Iteration  16: 814.415 ns/op
Iteration  17: 815.082 ns/op
Iteration  18: 816.680 ns/op
Iteration  19: 817.155 ns/op
Iteration  20: 816.065 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1303.254 ns/op
# Warmup Iteration   2: 1004.585 ns/op
# Warmup Iteration   3: 841.874 ns/op
# Warmup Iteration   4: 844.654 ns/op
# Warmup Iteration   5: 848.519 ns/op
Iteration   1: 852.546 ns/op
Iteration   2: 858.192 ns/op
Iteration   3: 838.570 ns/op
Iteration   4: 838.805 ns/op
Iteration   5: 838.776 ns/op
Iteration   6: 838.184 ns/op
Iteration   7: 833.474 ns/op
Iteration   8: 837.969 ns/op
Iteration   9: 838.784 ns/op
Iteration  10: 838.547 ns/op
Iteration  11: 838.782 ns/op
Iteration  12: 838.954 ns/op
Iteration  13: 836.381 ns/op
Iteration  14: 835.271 ns/op
Iteration  15: 835.358 ns/op
Iteration  16: 837.448 ns/op
Iteration  17: 841.402 ns/op
Iteration  18: 838.463 ns/op
Iteration  19: 835.828 ns/op
Iteration  20: 833.864 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1425.307 ns/op
# Warmup Iteration   2: 1185.430 ns/op
# Warmup Iteration   3: 968.073 ns/op
# Warmup Iteration   4: 970.362 ns/op
# Warmup Iteration   5: 973.952 ns/op
Iteration   1: 958.917 ns/op
Iteration   2: 978.728 ns/op
Iteration   3: 985.047 ns/op
Iteration   4: 965.797 ns/op
Iteration   5: 962.777 ns/op
Iteration   6: 958.202 ns/op
Iteration   7: 963.024 ns/op
Iteration   8: 964.879 ns/op
Iteration   9: 970.720 ns/op
Iteration  10: 964.327 ns/op
Iteration  11: 959.210 ns/op
Iteration  12: 963.903 ns/op
Iteration  13: 963.852 ns/op
Iteration  14: 964.394 ns/op
Iteration  15: 961.483 ns/op
Iteration  16: 958.658 ns/op
Iteration  17: 970.945 ns/op
Iteration  18: 964.457 ns/op
Iteration  19: 961.461 ns/op
Iteration  20: 961.067 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  876.596 Â±(99.9%) 19.559 ns/op [Average]
  (min, avg, max) = (812.764, 876.596, 985.047), stdev = 57.670
  CI (99.9%): [857.037, 896.155] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =   
  	 

 	

 



	
 

	
 	
	 
		 	
	 
	 , 				
 	 

	 	 	
 
 	 	   		
	
  
		

	 	



 	 		

		 
 		
	
 
		 	
 

 

		 	
	 			 	  	 

   )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1435.055 ns/op
# Warmup Iteration   2: 1208.573 ns/op
# Warmup Iteration   3: 981.738 ns/op
# Warmup Iteration   4: 984.866 ns/op
# Warmup Iteration   5: 987.872 ns/op
Iteration   1: 972.610 ns/op
Iteration   2: 1001.124 ns/op
Iteration   3: 1000.506 ns/op
Iteration   4: 978.550 ns/op
Iteration   5: 977.668 ns/op
Iteration   6: 972.208 ns/op
Iteration   7: 975.094 ns/op
Iteration   8: 975.293 ns/op
Iteration   9: 974.644 ns/op
Iteration  10: 975.475 ns/op
Iteration  11: 971.094 ns/op
Iteration  12: 975.704 ns/op
Iteration  13: 976.289 ns/op
Iteration  14: 976.866 ns/op
Iteration  15: 974.037 ns/op
Iteration  16: 974.092 ns/op
Iteration  17: 970.808 ns/op
Iteration  18: 973.893 ns/op
Iteration  19: 973.315 ns/op
Iteration  20: 974.487 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1420.003 ns/op
# Warmup Iteration   2: 1210.442 ns/op
# Warmup Iteration   3: 988.935 ns/op
# Warmup Iteration   4: 991.502 ns/op
# Warmup Iteration   5: 995.835 ns/op
Iteration   1: 978.197 ns/op
Iteration   2: 1000.995 ns/op
Iteration   3: 1005.823 ns/op
Iteration   4: 985.579 ns/op
Iteration   5: 984.052 ns/op
Iteration   6: 978.460 ns/op
Iteration   7: 983.079 ns/op
Iteration   8: 983.621 ns/op
Iteration   9: 983.393 ns/op
Iteration  10: 985.476 ns/op
Iteration  11: 978.577 ns/op
Iteration  12: 994.450 ns/op
Iteration  13: 984.761 ns/op
Iteration  14: 992.163 ns/op
Iteration  15: 981.015 ns/op
Iteration  16: 978.844 ns/op
Iteration  17: 980.686 ns/op
Iteration  18: 980.744 ns/op
Iteration  19: 980.636 ns/op
Iteration  20: 981.137 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1297.789 ns/op
# Warmup Iteration   2: 1019.639 ns/op
# Warmup Iteration   3: 859.437 ns/op
# Warmup Iteration   4: 861.817 ns/op
# Warmup Iteration   5: 865.772 ns/op
Iteration   1: 872.379 ns/op
Iteration   2: 877.028 ns/op
Iteration   3: 856.322 ns/op
Iteration   4: 855.824 ns/op
Iteration   5: 855.607 ns/op
Iteration   6: 855.858 ns/op
Iteration   7: 855.524 ns/op
Iteration   8: 851.403 ns/op
Iteration   9: 855.397 ns/op
Iteration  10: 855.666 ns/op
Iteration  11: 856.556 ns/op
Iteration  12: 858.474 ns/op
Iteration  13: 854.807 ns/op
Iteration  14: 856.615 ns/op
Iteration  15: 854.113 ns/op
Iteration  16: 853.916 ns/op
Iteration  17: 853.912 ns/op
Iteration  18: 854.696 ns/op
Iteration  19: 854.764 ns/op
Iteration  20: 855.431 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1434.191 ns/op
# Warmup Iteration   2: 1203.423 ns/op
# Warmup Iteration   3: 976.598 ns/op
# Warmup Iteration   4: 981.506 ns/op
# Warmup Iteration   5: 983.221 ns/op
Iteration   1: 967.022 ns/op
Iteration   2: 989.691 ns/op
Iteration   3: 995.613 ns/op
Iteration   4: 972.821 ns/op
Iteration   5: 972.936 ns/op
Iteration   6: 968.276 ns/op
Iteration   7: 975.392 ns/op
Iteration   8: 973.739 ns/op
Iteration   9: 973.672 ns/op
Iteration  10: 977.044 ns/op
Iteration  11: 967.741 ns/op
Iteration  12: 971.776 ns/op
Iteration  13: 973.737 ns/op
Iteration  14: 973.193 ns/op
Iteration  15: 971.300 ns/op
Iteration  16: 972.780 ns/op
Iteration  17: 967.721 ns/op
Iteration  18: 970.590 ns/op
Iteration  19: 973.199 ns/op
Iteration  20: 973.937 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1300.097 ns/op
# Warmup Iteration   2: 1020.504 ns/op
# Warmup Iteration   3: 860.495 ns/op
# Warmup Iteration   4: 862.471 ns/op
# Warmup Iteration   5: 866.026 ns/op
Iteration   1: 871.188 ns/op
Iteration   2: 875.734 ns/op
Iteration   3: 855.806 ns/op
Iteration   4: 855.979 ns/op
Iteration   5: 855.752 ns/op
Iteration   6: 856.509 ns/op
Iteration   7: 857.173 ns/op
Iteration   8: 853.770 ns/op
Iteration   9: 863.591 ns/op
Iteration  10: 856.263 ns/op
Iteration  11: 858.126 ns/op
Iteration  12: 861.353 ns/op
Iteration  13: 855.886 ns/op
Iteration  14: 854.093 ns/op
Iteration  15: 860.870 ns/op
Iteration  16: 854.723 ns/op
Iteration  17: 854.415 ns/op
Iteration  18: 854.639 ns/op
Iteration  19: 854.795 ns/op
Iteration  20: 856.553 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  930.391 Â±(99.9%) 20.378 ns/op [Average]
  (min, avg, max) = (851.403, 930.391, 1005.823), stdev = 60.085
  CI (99.9%): [910.013, 950.769] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                            (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*    
  	 

 	

 



	
 

	
 	
	 
		 	
	 
	 , 				
 	 

	 	 	
 
 	 	   		
	
  
		

	 	



 	 		

		 
 		
	
 
		 	
 

 

		 	
	 			 	  	 

     avgt  100  876.596 Â± 19.559  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*    
  	 

 	

 



	
 

	
 	
	 
		 	
	 
	 , 				
 	 

	 	 	
 
 	 	   		
	
  
		

	 	



 	 		

		 
 		
	
 
		 	
 

 

		 	
	 			 	  	 

     avgt  100  930.391 Â± 20.378  ns/op

Benchmark result is saved to split_precompiled_regex_28_259_Match.csv
