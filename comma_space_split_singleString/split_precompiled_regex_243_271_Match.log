# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 

 	 	 
  	  	

	


	

				 	

	 
 	
	 		 	 

 
 

    
	
 	     
		
 

	   
 

 	,			
 		
	

  	 
	

	

	
	 		
  

	
	  


	  

   
 
	 


	)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1445.971 ns/op
# Warmup Iteration   2: 1223.912 ns/op
# Warmup Iteration   3: 977.751 ns/op
# Warmup Iteration   4: 981.693 ns/op
# Warmup Iteration   5: 968.923 ns/op
Iteration   1: 991.828 ns/op
Iteration   2: 989.945 ns/op
Iteration   3: 995.956 ns/op
Iteration   4: 977.197 ns/op
Iteration   5: 968.543 ns/op
Iteration   6: 974.345 ns/op
Iteration   7: 973.620 ns/op
Iteration   8: 973.638 ns/op
Iteration   9: 973.657 ns/op
Iteration  10: 968.985 ns/op
Iteration  11: 974.385 ns/op
Iteration  12: 974.329 ns/op
Iteration  13: 976.634 ns/op
Iteration  14: 985.477 ns/op
Iteration  15: 968.874 ns/op
Iteration  16: 972.734 ns/op
Iteration  17: 971.378 ns/op
Iteration  18: 972.227 ns/op
Iteration  19: 972.934 ns/op
Iteration  20: 968.547 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1441.427 ns/op
# Warmup Iteration   2: 1216.962 ns/op
# Warmup Iteration   3: 986.906 ns/op
# Warmup Iteration   4: 985.264 ns/op
# Warmup Iteration   5: 972.894 ns/op
Iteration   1: 988.835 ns/op
Iteration   2: 994.379 ns/op
Iteration   3: 1000.351 ns/op
Iteration   4: 977.953 ns/op
Iteration   5: 972.415 ns/op
Iteration   6: 977.720 ns/op
Iteration   7: 977.995 ns/op
Iteration   8: 978.482 ns/op
Iteration   9: 977.936 ns/op
Iteration  10: 973.042 ns/op
Iteration  11: 980.012 ns/op
Iteration  12: 987.393 ns/op
Iteration  13: 978.502 ns/op
Iteration  14: 979.523 ns/op
Iteration  15: 972.520 ns/op
Iteration  16: 978.622 ns/op
Iteration  17: 976.565 ns/op
Iteration  18: 975.319 ns/op
Iteration  19: 972.421 ns/op
Iteration  20: 974.560 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1321.056 ns/op
# Warmup Iteration   2: 1028.882 ns/op
# Warmup Iteration   3: 862.460 ns/op
# Warmup Iteration   4: 865.011 ns/op
# Warmup Iteration   5: 865.824 ns/op
Iteration   1: 869.949 ns/op
Iteration   2: 878.902 ns/op
Iteration   3: 862.364 ns/op
Iteration   4: 857.116 ns/op
Iteration   5: 856.390 ns/op
Iteration   6: 859.487 ns/op
Iteration   7: 859.870 ns/op
Iteration   8: 857.744 ns/op
Iteration   9: 861.263 ns/op
Iteration  10: 859.892 ns/op
Iteration  11: 856.086 ns/op
Iteration  12: 857.918 ns/op
Iteration  13: 854.057 ns/op
Iteration  14: 854.035 ns/op
Iteration  15: 852.490 ns/op
Iteration  16: 853.813 ns/op
Iteration  17: 854.315 ns/op
Iteration  18: 855.216 ns/op
Iteration  19: 855.210 ns/op
Iteration  20: 867.183 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1435.757 ns/op
# Warmup Iteration   2: 1201.983 ns/op
# Warmup Iteration   3: 981.018 ns/op
# Warmup Iteration   4: 982.924 ns/op
# Warmup Iteration   5: 973.066 ns/op
Iteration   1: 986.123 ns/op
Iteration   2: 992.828 ns/op
Iteration   3: 997.506 ns/op
Iteration   4: 979.179 ns/op
Iteration   5: 970.306 ns/op
Iteration   6: 975.852 ns/op
Iteration   7: 975.434 ns/op
Iteration   8: 975.819 ns/op
Iteration   9: 976.421 ns/op
Iteration  10: 970.852 ns/op
Iteration  11: 976.283 ns/op
Iteration  12: 975.138 ns/op
Iteration  13: 975.522 ns/op
Iteration  14: 979.375 ns/op
Iteration  15: 970.684 ns/op
Iteration  16: 972.980 ns/op
Iteration  17: 973.032 ns/op
Iteration  18: 973.982 ns/op
Iteration  19: 973.654 ns/op
Iteration  20: 970.748 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1327.708 ns/op
# Warmup Iteration   2: 1032.413 ns/op
# Warmup Iteration   3: 861.746 ns/op
# Warmup Iteration   4: 863.737 ns/op
# Warmup Iteration   5: 867.526 ns/op
Iteration   1: 871.190 ns/op
Iteration   2: 876.163 ns/op
Iteration   3: 858.360 ns/op
Iteration   4: 857.543 ns/op
Iteration   5: 853.987 ns/op
Iteration   6: 856.290 ns/op
Iteration   7: 857.164 ns/op
Iteration   8: 862.781 ns/op
Iteration   9: 856.907 ns/op
Iteration  10: 857.588 ns/op
Iteration  11: 862.026 ns/op
Iteration  12: 855.769 ns/op
Iteration  13: 860.038 ns/op
Iteration  14: 854.287 ns/op
Iteration  15: 851.972 ns/op
Iteration  16: 853.852 ns/op
Iteration  17: 860.374 ns/op
Iteration  18: 854.981 ns/op
Iteration  19: 861.467 ns/op
Iteration  20: 854.146 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  930.217 Â±(99.9%) 19.961 ns/op [Average]
  (min, avg, max) = (851.972, 930.217, 1000.351), stdev = 58.856
  CI (99.9%): [910.255, 950.178] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 

 	 	 
  	  	

	


	

				 	

	 
 	
	 		 	 

 
 

    
	
 	     
		
 

	   
 

 	,			
 		
	

  	 
	

	

	
	 		
  

	
	  


	  

   
 
	 


	)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1454.112 ns/op
# Warmup Iteration   2: 1236.445 ns/op
# Warmup Iteration   3: 999.072 ns/op
# Warmup Iteration   4: 1000.969 ns/op
# Warmup Iteration   5: 989.340 ns/op
Iteration   1: 1005.390 ns/op
Iteration   2: 1010.627 ns/op
Iteration   3: 1016.909 ns/op
Iteration   4: 994.145 ns/op
Iteration   5: 989.496 ns/op
Iteration   6: 993.989 ns/op
Iteration   7: 993.112 ns/op
Iteration   8: 992.689 ns/op
Iteration   9: 993.034 ns/op
Iteration  10: 989.110 ns/op
Iteration  11: 994.172 ns/op
Iteration  12: 993.385 ns/op
Iteration  13: 1000.305 ns/op
Iteration  14: 999.429 ns/op
Iteration  15: 988.715 ns/op
Iteration  16: 991.187 ns/op
Iteration  17: 992.842 ns/op
Iteration  18: 991.104 ns/op
Iteration  19: 992.955 ns/op
Iteration  20: 988.697 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1431.747 ns/op
# Warmup Iteration   2: 1228.598 ns/op
# Warmup Iteration   3: 997.283 ns/op
# Warmup Iteration   4: 999.307 ns/op
# Warmup Iteration   5: 988.018 ns/op
Iteration   1: 1002.870 ns/op
Iteration   2: 1008.724 ns/op
Iteration   3: 1014.306 ns/op
Iteration   4: 992.910 ns/op
Iteration   5: 987.469 ns/op
Iteration   6: 991.682 ns/op
Iteration   7: 996.078 ns/op
Iteration   8: 994.979 ns/op
Iteration   9: 992.233 ns/op
Iteration  10: 986.826 ns/op
Iteration  11: 992.066 ns/op
Iteration  12: 995.307 ns/op
Iteration  13: 999.314 ns/op
Iteration  14: 991.840 ns/op
Iteration  15: 987.475 ns/op
Iteration  16: 989.536 ns/op
Iteration  17: 990.139 ns/op
Iteration  18: 996.581 ns/op
Iteration  19: 992.212 ns/op
Iteration  20: 987.705 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1453.365 ns/op
# Warmup Iteration   2: 1229.512 ns/op
# Warmup Iteration   3: 997.338 ns/op
# Warmup Iteration   4: 1001.109 ns/op
# Warmup Iteration   5: 989.145 ns/op
Iteration   1: 1012.322 ns/op
Iteration   2: 1010.375 ns/op
Iteration   3: 1016.180 ns/op
Iteration   4: 994.140 ns/op
Iteration   5: 989.337 ns/op
Iteration   6: 993.490 ns/op
Iteration   7: 993.401 ns/op
Iteration   8: 993.614 ns/op
Iteration   9: 993.381 ns/op
Iteration  10: 988.789 ns/op
Iteration  11: 993.312 ns/op
Iteration  12: 993.072 ns/op
Iteration  13: 993.352 ns/op
Iteration  14: 993.024 ns/op
Iteration  15: 988.455 ns/op
Iteration  16: 990.017 ns/op
Iteration  17: 989.722 ns/op
Iteration  18: 991.318 ns/op
Iteration  19: 994.341 ns/op
Iteration  20: 987.411 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1323.039 ns/op
# Warmup Iteration   2: 1075.328 ns/op
# Warmup Iteration   3: 902.178 ns/op
# Warmup Iteration   4: 903.646 ns/op
# Warmup Iteration   5: 907.996 ns/op
Iteration   1: 912.422 ns/op
Iteration   2: 922.951 ns/op
Iteration   3: 898.809 ns/op
Iteration   4: 893.130 ns/op
Iteration   5: 902.498 ns/op
Iteration   6: 897.987 ns/op
Iteration   7: 898.964 ns/op
Iteration   8: 898.775 ns/op
Iteration   9: 900.454 ns/op
Iteration  10: 900.711 ns/op
Iteration  11: 898.694 ns/op
Iteration  12: 893.189 ns/op
Iteration  13: 901.907 ns/op
Iteration  14: 895.694 ns/op
Iteration  15: 894.828 ns/op
Iteration  16: 894.390 ns/op
Iteration  17: 896.861 ns/op
Iteration  18: 896.121 ns/op
Iteration  19: 895.805 ns/op
Iteration  20: 895.430 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1455.123 ns/op
# Warmup Iteration   2: 1233.124 ns/op
# Warmup Iteration   3: 1000.127 ns/op
# Warmup Iteration   4: 1003.068 ns/op
# Warmup Iteration   5: 990.589 ns/op
Iteration   1: 1006.348 ns/op
Iteration   2: 1011.741 ns/op
Iteration   3: 1018.214 ns/op
Iteration   4: 995.829 ns/op
Iteration   5: 990.529 ns/op
Iteration   6: 995.674 ns/op
Iteration   7: 995.613 ns/op
Iteration   8: 999.382 ns/op
Iteration   9: 1000.939 ns/op
Iteration  10: 995.967 ns/op
Iteration  11: 1000.039 ns/op
Iteration  12: 995.228 ns/op
Iteration  13: 994.981 ns/op
Iteration  14: 999.064 ns/op
Iteration  15: 990.066 ns/op
Iteration  16: 995.578 ns/op
Iteration  17: 992.271 ns/op
Iteration  18: 992.798 ns/op
Iteration  19: 992.321 ns/op
Iteration  20: 989.630 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  976.424 Â±(99.9%) 13.348 ns/op [Average]
  (min, avg, max) = (893.130, 976.424, 1018.214), stdev = 39.357
  CI (99.9%): [963.076, 989.772] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                        (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  

 	 	 
  	  	

	


	

				 	

	 
 	
	 		 	 

 
 

    
	
 	     
		
 

	   
 

 	,			
 		
	

  	 
	

	

	
	 		
  

	
	  


	  

   
 
	 


	  avgt  100  930.217 Â± 19.961  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  

 	 	 
  	  	

	


	

				 	

	 
 	
	 		 	 

 
 

    
	
 	     
		
 

	   
 

 	,			
 		
	

  	 
	

	

	
	 		
  

	
	  


	  

   
 
	 


	  avgt  100  976.424 Â± 13.348  ns/op

Benchmark result is saved to split_precompiled_regex_243_271_Match.csv
