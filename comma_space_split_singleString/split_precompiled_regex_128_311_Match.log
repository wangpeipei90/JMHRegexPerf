# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 			 
 
		  




 
    
	 

	

		 		
	

		 

 


 	
 
  		   
	
	

 

		 	
			
 
				 

 
	 

 
		 ,	
	
 
		
	 	 			
	 	  	
 
		  		
	  

			
 	  

 
 



 	 
  	 	
	
)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1471.020 ns/op
# Warmup Iteration   2: 1257.699 ns/op
# Warmup Iteration   3: 1013.148 ns/op
# Warmup Iteration   4: 1007.156 ns/op
# Warmup Iteration   5: 1013.261 ns/op
Iteration   1: 1020.473 ns/op
Iteration   2: 1025.192 ns/op
Iteration   3: 1031.525 ns/op
Iteration   4: 1005.262 ns/op
Iteration   5: 1010.417 ns/op
Iteration   6: 1009.284 ns/op
Iteration   7: 1008.286 ns/op
Iteration   8: 1003.595 ns/op
Iteration   9: 1008.161 ns/op
Iteration  10: 1008.424 ns/op
Iteration  11: 1010.242 ns/op
Iteration  12: 1012.926 ns/op
Iteration  13: 1003.406 ns/op
Iteration  14: 1009.995 ns/op
Iteration  15: 1009.205 ns/op
Iteration  16: 1013.655 ns/op
Iteration  17: 1003.417 ns/op
Iteration  18: 1006.157 ns/op
Iteration  19: 1005.969 ns/op
Iteration  20: 1012.788 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1474.864 ns/op
# Warmup Iteration   2: 1273.736 ns/op
# Warmup Iteration   3: 1013.202 ns/op
# Warmup Iteration   4: 1002.353 ns/op
# Warmup Iteration   5: 1015.189 ns/op
Iteration   1: 1019.181 ns/op
Iteration   2: 1024.764 ns/op
Iteration   3: 1031.501 ns/op
Iteration   4: 1003.222 ns/op
Iteration   5: 1007.780 ns/op
Iteration   6: 1007.373 ns/op
Iteration   7: 1009.871 ns/op
Iteration   8: 1001.911 ns/op
Iteration   9: 1007.618 ns/op
Iteration  10: 1007.737 ns/op
Iteration  11: 1013.463 ns/op
Iteration  12: 1007.350 ns/op
Iteration  13: 1001.986 ns/op
Iteration  14: 1006.842 ns/op
Iteration  15: 1009.875 ns/op
Iteration  16: 1007.297 ns/op
Iteration  17: 1001.831 ns/op
Iteration  18: 1004.155 ns/op
Iteration  19: 1005.680 ns/op
Iteration  20: 1004.519 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1470.387 ns/op
# Warmup Iteration   2: 1259.925 ns/op
# Warmup Iteration   3: 1016.007 ns/op
# Warmup Iteration   4: 1007.117 ns/op
# Warmup Iteration   5: 1020.828 ns/op
Iteration   1: 1020.085 ns/op
Iteration   2: 1028.204 ns/op
Iteration   3: 1035.789 ns/op
Iteration   4: 1003.408 ns/op
Iteration   5: 1012.539 ns/op
Iteration   6: 1007.947 ns/op
Iteration   7: 1007.638 ns/op
Iteration   8: 1003.526 ns/op
Iteration   9: 1008.365 ns/op
Iteration  10: 1008.542 ns/op
Iteration  11: 1008.704 ns/op
Iteration  12: 1008.147 ns/op
Iteration  13: 1003.396 ns/op
Iteration  14: 1023.997 ns/op
Iteration  15: 1012.875 ns/op
Iteration  16: 1006.905 ns/op
Iteration  17: 1003.326 ns/op
Iteration  18: 1005.919 ns/op
Iteration  19: 1010.099 ns/op
Iteration  20: 1011.927 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1471.745 ns/op
# Warmup Iteration   2: 1267.931 ns/op
# Warmup Iteration   3: 1018.186 ns/op
# Warmup Iteration   4: 1005.825 ns/op
# Warmup Iteration   5: 1026.575 ns/op
Iteration   1: 1023.358 ns/op
Iteration   2: 1027.289 ns/op
Iteration   3: 1033.556 ns/op
Iteration   4: 1005.574 ns/op
Iteration   5: 1011.042 ns/op
Iteration   6: 1017.337 ns/op
Iteration   7: 1012.834 ns/op
Iteration   8: 1006.416 ns/op
Iteration   9: 1011.050 ns/op
Iteration  10: 1010.976 ns/op
Iteration  11: 1010.673 ns/op
Iteration  12: 1010.841 ns/op
Iteration  13: 1005.530 ns/op
Iteration  14: 1010.587 ns/op
Iteration  15: 1013.122 ns/op
Iteration  16: 1012.093 ns/op
Iteration  17: 1005.560 ns/op
Iteration  18: 1009.500 ns/op
Iteration  19: 1008.413 ns/op
Iteration  20: 1013.291 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1403.451 ns/op
# Warmup Iteration   2: 1154.857 ns/op
# Warmup Iteration   3: 938.649 ns/op
# Warmup Iteration   4: 941.810 ns/op
# Warmup Iteration   5: 946.092 ns/op
Iteration   1: 942.410 ns/op
Iteration   2: 950.317 ns/op
Iteration   3: 956.846 ns/op
Iteration   4: 954.134 ns/op
Iteration   5: 934.851 ns/op
Iteration   6: 935.708 ns/op
Iteration   7: 930.304 ns/op
Iteration   8: 934.679 ns/op
Iteration   9: 938.775 ns/op
Iteration  10: 935.718 ns/op
Iteration  11: 934.523 ns/op
Iteration  12: 935.635 ns/op
Iteration  13: 929.966 ns/op
Iteration  14: 936.444 ns/op
Iteration  15: 932.376 ns/op
Iteration  16: 932.085 ns/op
Iteration  17: 934.727 ns/op
Iteration  18: 934.940 ns/op
Iteration  19: 929.565 ns/op
Iteration  20: 934.193 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  996.409 Â±(99.9%) 10.392 ns/op [Average]
  (min, avg, max) = (929.565, 996.409, 1035.789), stdev = 30.641
  CI (99.9%): [986.017, 1006.801] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 			 
 
		  




 
    
	 

	

		 		
	

		 

 


 	
 
  		   
	
	

 

		 	
			
 
				 

 
	 

 
		 ,	
	
 
		
	 	 			
	 	  	
 
		  		
	  

			
 	  

 
 



 	 
  	 	
	
)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1452.756 ns/op
# Warmup Iteration   2: 1275.864 ns/op
# Warmup Iteration   3: 1033.463 ns/op
# Warmup Iteration   4: 1026.876 ns/op
# Warmup Iteration   5: 1031.346 ns/op
Iteration   1: 1037.127 ns/op
Iteration   2: 1042.770 ns/op
Iteration   3: 1049.499 ns/op
Iteration   4: 1020.350 ns/op
Iteration   5: 1024.902 ns/op
Iteration   6: 1024.633 ns/op
Iteration   7: 1025.220 ns/op
Iteration   8: 1024.444 ns/op
Iteration   9: 1020.869 ns/op
Iteration  10: 1024.241 ns/op
Iteration  11: 1028.605 ns/op
Iteration  12: 1025.188 ns/op
Iteration  13: 1020.031 ns/op
Iteration  14: 1035.693 ns/op
Iteration  15: 1030.165 ns/op
Iteration  16: 1025.913 ns/op
Iteration  17: 1022.918 ns/op
Iteration  18: 1024.537 ns/op
Iteration  19: 1024.058 ns/op
Iteration  20: 1023.574 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1484.394 ns/op
# Warmup Iteration   2: 1292.142 ns/op
# Warmup Iteration   3: 1037.670 ns/op
# Warmup Iteration   4: 1027.635 ns/op
# Warmup Iteration   5: 1039.067 ns/op
Iteration   1: 1042.818 ns/op
Iteration   2: 1049.270 ns/op
Iteration   3: 1056.294 ns/op
Iteration   4: 1027.616 ns/op
Iteration   5: 1032.153 ns/op
Iteration   6: 1031.955 ns/op
Iteration   7: 1032.030 ns/op
Iteration   8: 1027.172 ns/op
Iteration   9: 1032.933 ns/op
Iteration  10: 1031.917 ns/op
Iteration  11: 1031.774 ns/op
Iteration  12: 1032.133 ns/op
Iteration  13: 1027.003 ns/op
Iteration  14: 1032.247 ns/op
Iteration  15: 1033.121 ns/op
Iteration  16: 1029.668 ns/op
Iteration  17: 1027.079 ns/op
Iteration  18: 1029.622 ns/op
Iteration  19: 1029.426 ns/op
Iteration  20: 1046.165 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1479.815 ns/op
# Warmup Iteration   2: 1277.624 ns/op
# Warmup Iteration   3: 1026.710 ns/op
# Warmup Iteration   4: 1023.874 ns/op
# Warmup Iteration   5: 1023.134 ns/op
Iteration   1: 1033.402 ns/op
Iteration   2: 1038.326 ns/op
Iteration   3: 1045.431 ns/op
Iteration   4: 1017.127 ns/op
Iteration   5: 1022.265 ns/op
Iteration   6: 1023.275 ns/op
Iteration   7: 1023.091 ns/op
Iteration   8: 1023.011 ns/op
Iteration   9: 1017.269 ns/op
Iteration  10: 1023.146 ns/op
Iteration  11: 1021.706 ns/op
Iteration  12: 1023.513 ns/op
Iteration  13: 1016.724 ns/op
Iteration  14: 1021.384 ns/op
Iteration  15: 1021.420 ns/op
Iteration  16: 1019.726 ns/op
Iteration  17: 1019.648 ns/op
Iteration  18: 1016.757 ns/op
Iteration  19: 1020.394 ns/op
Iteration  20: 1019.665 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1483.645 ns/op
# Warmup Iteration   2: 1279.652 ns/op
# Warmup Iteration   3: 1031.885 ns/op
# Warmup Iteration   4: 1031.567 ns/op
# Warmup Iteration   5: 1033.692 ns/op
Iteration   1: 1038.383 ns/op
Iteration   2: 1044.408 ns/op
Iteration   3: 1050.747 ns/op
Iteration   4: 1022.199 ns/op
Iteration   5: 1028.050 ns/op
Iteration   6: 1027.054 ns/op
Iteration   7: 1027.235 ns/op
Iteration   8: 1031.879 ns/op
Iteration   9: 1022.144 ns/op
Iteration  10: 1027.942 ns/op
Iteration  11: 1039.093 ns/op
Iteration  12: 1029.482 ns/op
Iteration  13: 1022.638 ns/op
Iteration  14: 1038.965 ns/op
Iteration  15: 1044.182 ns/op
Iteration  16: 1026.219 ns/op
Iteration  17: 1022.475 ns/op
Iteration  18: 1025.231 ns/op
Iteration  19: 1024.860 ns/op
Iteration  20: 1025.002 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1491.123 ns/op
# Warmup Iteration   2: 1286.353 ns/op
# Warmup Iteration   3: 1031.862 ns/op
# Warmup Iteration   4: 1021.351 ns/op
# Warmup Iteration   5: 1033.578 ns/op
Iteration   1: 1038.204 ns/op
Iteration   2: 1044.130 ns/op
Iteration   3: 1047.762 ns/op
Iteration   4: 1020.260 ns/op
Iteration   5: 1026.172 ns/op
Iteration   6: 1026.717 ns/op
Iteration   7: 1026.923 ns/op
Iteration   8: 1027.133 ns/op
Iteration   9: 1021.611 ns/op
Iteration  10: 1027.101 ns/op
Iteration  11: 1030.988 ns/op
Iteration  12: 1030.887 ns/op
Iteration  13: 1021.693 ns/op
Iteration  14: 1032.572 ns/op
Iteration  15: 1042.703 ns/op
Iteration  16: 1026.280 ns/op
Iteration  17: 1021.265 ns/op
Iteration  18: 1024.388 ns/op
Iteration  19: 1023.664 ns/op
Iteration  20: 1023.917 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1029.070 Â±(99.9%) 2.912 ns/op [Average]
  (min, avg, max) = (1016.724, 1029.070, 1056.294), stdev = 8.587
  CI (99.9%): [1026.157, 1031.982] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                                                                (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  			 
 
		  




 
    
	 

	

		 		
	

		 

 


 	
 
  		   
	
	

 

		 	
			
 
				 

 
	 

 
		 ,	
	
 
		
	 	 			
	 	  	
 
		  		
	  

			
 	  

 
 



 	 
  	 	
	
  avgt  100   996.409 Â± 10.392  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  			 
 
		  




 
    
	 

	

		 		
	

		 

 


 	
 
  		   
	
	

 

		 	
			
 
				 

 
	 

 
		 ,	
	
 
		
	 	 			
	 	  	
 
		  		
	  

			
 	  

 
 



 	 
  	 	
	
  avgt  100  1029.070 Â±  2.912  ns/op

Benchmark result is saved to split_precompiled_regex_128_311_Match.csv
