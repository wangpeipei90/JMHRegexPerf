# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = 
	  	  
 

	
	
  

   	
 	

		

		


	
		 	
			
	 	
 

 	

 ,

	   		

  			
 
 
	 			



		
 

 	

	 

 		

	
	

			)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1374.693 ns/op
# Warmup Iteration   2: 1115.078 ns/op
# Warmup Iteration   3: 918.937 ns/op
# Warmup Iteration   4: 920.819 ns/op
# Warmup Iteration   5: 925.261 ns/op
Iteration   1: 928.916 ns/op
Iteration   2: 912.137 ns/op
Iteration   3: 937.032 ns/op
Iteration   4: 914.129 ns/op
Iteration   5: 914.284 ns/op
Iteration   6: 914.519 ns/op
Iteration   7: 914.552 ns/op
Iteration   8: 910.037 ns/op
Iteration   9: 915.242 ns/op
Iteration  10: 914.446 ns/op
Iteration  11: 915.419 ns/op
Iteration  12: 915.010 ns/op
Iteration  13: 915.268 ns/op
Iteration  14: 915.522 ns/op
Iteration  15: 910.568 ns/op
Iteration  16: 914.333 ns/op
Iteration  17: 915.586 ns/op
Iteration  18: 915.730 ns/op
Iteration  19: 915.118 ns/op
Iteration  20: 915.068 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1375.282 ns/op
# Warmup Iteration   2: 1115.757 ns/op
# Warmup Iteration   3: 918.675 ns/op
# Warmup Iteration   4: 921.793 ns/op
# Warmup Iteration   5: 925.247 ns/op
Iteration   1: 929.431 ns/op
Iteration   2: 910.463 ns/op
Iteration   3: 935.643 ns/op
Iteration   4: 916.164 ns/op
Iteration   5: 914.517 ns/op
Iteration   6: 914.323 ns/op
Iteration   7: 915.442 ns/op
Iteration   8: 911.337 ns/op
Iteration   9: 914.985 ns/op
Iteration  10: 916.121 ns/op
Iteration  11: 915.309 ns/op
Iteration  12: 917.740 ns/op
Iteration  13: 920.379 ns/op
Iteration  14: 913.220 ns/op
Iteration  15: 910.630 ns/op
Iteration  16: 913.242 ns/op
Iteration  17: 913.797 ns/op
Iteration  18: 914.259 ns/op
Iteration  19: 914.348 ns/op
Iteration  20: 913.129 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1372.729 ns/op
# Warmup Iteration   2: 1107.670 ns/op
# Warmup Iteration   3: 913.796 ns/op
# Warmup Iteration   4: 916.845 ns/op
# Warmup Iteration   5: 920.469 ns/op
Iteration   1: 924.327 ns/op
Iteration   2: 905.164 ns/op
Iteration   3: 930.135 ns/op
Iteration   4: 910.873 ns/op
Iteration   5: 910.553 ns/op
Iteration   6: 908.789 ns/op
Iteration   7: 909.008 ns/op
Iteration   8: 908.656 ns/op
Iteration   9: 905.310 ns/op
Iteration  10: 909.274 ns/op
Iteration  11: 910.577 ns/op
Iteration  12: 912.671 ns/op
Iteration  13: 910.352 ns/op
Iteration  14: 909.075 ns/op
Iteration  15: 905.013 ns/op
Iteration  16: 906.976 ns/op
Iteration  17: 907.097 ns/op
Iteration  18: 907.084 ns/op
Iteration  19: 907.198 ns/op
Iteration  20: 908.434 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1459.507 ns/op
# Warmup Iteration   2: 1288.757 ns/op
# Warmup Iteration   3: 1029.483 ns/op
# Warmup Iteration   4: 1018.778 ns/op
# Warmup Iteration   5: 1030.492 ns/op
Iteration   1: 1035.492 ns/op
Iteration   2: 1041.093 ns/op
Iteration   3: 1046.360 ns/op
Iteration   4: 1018.064 ns/op
Iteration   5: 1022.149 ns/op
Iteration   6: 1022.549 ns/op
Iteration   7: 1023.698 ns/op
Iteration   8: 1018.629 ns/op
Iteration   9: 1023.221 ns/op
Iteration  10: 1022.734 ns/op
Iteration  11: 1022.813 ns/op
Iteration  12: 1018.507 ns/op
Iteration  13: 1022.706 ns/op
Iteration  14: 1024.702 ns/op
Iteration  15: 1024.988 ns/op
Iteration  16: 1017.895 ns/op
Iteration  17: 1036.456 ns/op
Iteration  18: 1021.176 ns/op
Iteration  19: 1022.060 ns/op
Iteration  20: 1017.938 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1377.817 ns/op
# Warmup Iteration   2: 1118.556 ns/op
# Warmup Iteration   3: 918.017 ns/op
# Warmup Iteration   4: 921.228 ns/op
# Warmup Iteration   5: 925.324 ns/op
Iteration   1: 929.321 ns/op
Iteration   2: 908.750 ns/op
Iteration   3: 935.615 ns/op
Iteration   4: 914.451 ns/op
Iteration   5: 913.261 ns/op
Iteration   6: 913.561 ns/op
Iteration   7: 913.487 ns/op
Iteration   8: 909.747 ns/op
Iteration   9: 913.968 ns/op
Iteration  10: 916.320 ns/op
Iteration  11: 915.309 ns/op
Iteration  12: 916.505 ns/op
Iteration  13: 916.064 ns/op
Iteration  14: 918.174 ns/op
Iteration  15: 909.605 ns/op
Iteration  16: 912.014 ns/op
Iteration  17: 911.987 ns/op
Iteration  18: 912.500 ns/op
Iteration  19: 912.266 ns/op
Iteration  20: 912.231 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  936.623 Â±(99.9%) 15.268 ns/op [Average]
  (min, avg, max) = (905.013, 936.623, 1046.360), stdev = 45.017
  CI (99.9%): [921.356, 951.891] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = 
	  	  
 

	
	
  

   	
 	

		

		


	
		 	
			
	 	
 

 	

 ,

	   		

  			
 
 
	 			



		
 

 	

	 

 		

	
	

			)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1382.825 ns/op
# Warmup Iteration   2: 1156.048 ns/op
# Warmup Iteration   3: 952.134 ns/op
# Warmup Iteration   4: 954.625 ns/op
# Warmup Iteration   5: 958.387 ns/op
Iteration   1: 963.494 ns/op
Iteration   2: 942.337 ns/op
Iteration   3: 969.850 ns/op
Iteration   4: 947.254 ns/op
Iteration   5: 947.026 ns/op
Iteration   6: 947.662 ns/op
Iteration   7: 945.261 ns/op
Iteration   8: 942.627 ns/op
Iteration   9: 946.505 ns/op
Iteration  10: 946.863 ns/op
Iteration  11: 949.362 ns/op
Iteration  12: 946.871 ns/op
Iteration  13: 946.895 ns/op
Iteration  14: 942.094 ns/op
Iteration  15: 944.540 ns/op
Iteration  16: 943.967 ns/op
Iteration  17: 943.857 ns/op
Iteration  18: 947.233 ns/op
Iteration  19: 945.454 ns/op
Iteration  20: 941.994 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1376.661 ns/op
# Warmup Iteration   2: 1154.966 ns/op
# Warmup Iteration   3: 957.294 ns/op
# Warmup Iteration   4: 954.282 ns/op
# Warmup Iteration   5: 958.009 ns/op
Iteration   1: 963.234 ns/op
Iteration   2: 942.679 ns/op
Iteration   3: 971.698 ns/op
Iteration   4: 948.125 ns/op
Iteration   5: 948.853 ns/op
Iteration   6: 946.183 ns/op
Iteration   7: 950.874 ns/op
Iteration   8: 943.023 ns/op
Iteration   9: 951.746 ns/op
Iteration  10: 949.016 ns/op
Iteration  11: 948.831 ns/op
Iteration  12: 948.272 ns/op
Iteration  13: 948.934 ns/op
Iteration  14: 942.709 ns/op
Iteration  15: 949.650 ns/op
Iteration  16: 944.471 ns/op
Iteration  17: 946.705 ns/op
Iteration  18: 946.233 ns/op
Iteration  19: 948.557 ns/op
Iteration  20: 942.737 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1391.941 ns/op
# Warmup Iteration   2: 1139.809 ns/op
# Warmup Iteration   3: 935.828 ns/op
# Warmup Iteration   4: 938.179 ns/op
# Warmup Iteration   5: 941.332 ns/op
Iteration   1: 946.466 ns/op
Iteration   2: 926.689 ns/op
Iteration   3: 951.806 ns/op
Iteration   4: 930.922 ns/op
Iteration   5: 936.017 ns/op
Iteration   6: 931.958 ns/op
Iteration   7: 931.277 ns/op
Iteration   8: 932.299 ns/op
Iteration   9: 926.794 ns/op
Iteration  10: 933.195 ns/op
Iteration  11: 934.428 ns/op
Iteration  12: 935.675 ns/op
Iteration  13: 934.842 ns/op
Iteration  14: 933.374 ns/op
Iteration  15: 926.362 ns/op
Iteration  16: 934.291 ns/op
Iteration  17: 935.373 ns/op
Iteration  18: 929.118 ns/op
Iteration  19: 928.517 ns/op
Iteration  20: 929.862 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1371.711 ns/op
# Warmup Iteration   2: 1084.776 ns/op
# Warmup Iteration   3: 904.075 ns/op
# Warmup Iteration   4: 909.792 ns/op
# Warmup Iteration   5: 910.159 ns/op
Iteration   1: 914.038 ns/op
Iteration   2: 920.506 ns/op
Iteration   3: 894.592 ns/op
Iteration   4: 898.899 ns/op
Iteration   5: 899.909 ns/op
Iteration   6: 898.515 ns/op
Iteration   7: 898.567 ns/op
Iteration   8: 902.542 ns/op
Iteration   9: 900.449 ns/op
Iteration  10: 902.038 ns/op
Iteration  11: 901.092 ns/op
Iteration  12: 894.331 ns/op
Iteration  13: 904.318 ns/op
Iteration  14: 898.865 ns/op
Iteration  15: 895.952 ns/op
Iteration  16: 897.146 ns/op
Iteration  17: 897.305 ns/op
Iteration  18: 899.322 ns/op
Iteration  19: 897.977 ns/op
Iteration  20: 894.421 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1387.935 ns/op
# Warmup Iteration   2: 1148.819 ns/op
# Warmup Iteration   3: 938.826 ns/op
# Warmup Iteration   4: 941.525 ns/op
# Warmup Iteration   5: 944.700 ns/op
Iteration   1: 948.219 ns/op
Iteration   2: 929.587 ns/op
Iteration   3: 954.765 ns/op
Iteration   4: 933.712 ns/op
Iteration   5: 933.789 ns/op
Iteration   6: 934.397 ns/op
Iteration   7: 933.874 ns/op
Iteration   8: 929.523 ns/op
Iteration   9: 934.064 ns/op
Iteration  10: 934.941 ns/op
Iteration  11: 935.365 ns/op
Iteration  12: 935.410 ns/op
Iteration  13: 939.417 ns/op
Iteration  14: 935.932 ns/op
Iteration  15: 933.677 ns/op
Iteration  16: 931.684 ns/op
Iteration  17: 932.976 ns/op
Iteration  18: 932.208 ns/op
Iteration  19: 933.194 ns/op
Iteration  20: 934.512 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  933.250 Â±(99.9%) 6.347 ns/op [Average]
  (min, avg, max) = (894.331, 933.250, 971.698), stdev = 18.714
  CI (99.9%): [926.903, 939.597] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                                                                               (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  
	  	  
 

	
	
  

   	
 	

		

		


	
		 	
			
	 	
 

 	

 ,

	   		

  			
 
 
	 			



		
 

 	

	 

 		

	
	

			  avgt  100  936.623 Â± 15.268  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  
	  	  
 

	
	
  

   	
 	

		

		


	
		 	
			
	 	
 

 	

 ,

	   		

  			
 
 
	 			



		
 

 	

	 

 		

	
	

			  avgt  100  933.250 Â±  6.347  ns/op

Benchmark result is saved to split_precompiled_regex_94_278_Match.csv
