# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed =  
		 
	

 
 
  
	 			 	  					
 		

 
	 
			  	   
	 


	 

 



	
 
   	  			 	 		,		 
 
	 	

    	

 
  
		 	 
 	  

 )

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 1226.727 ns/op
# Warmup Iteration   2: 904.169 ns/op
# Warmup Iteration   3: 767.522 ns/op
# Warmup Iteration   4: 769.362 ns/op
# Warmup Iteration   5: 772.080 ns/op
Iteration   1: 776.505 ns/op
Iteration   2: 779.967 ns/op
Iteration   3: 763.392 ns/op
Iteration   4: 763.054 ns/op
Iteration   5: 763.382 ns/op
Iteration   6: 762.805 ns/op
Iteration   7: 763.091 ns/op
Iteration   8: 765.670 ns/op
Iteration   9: 763.394 ns/op
Iteration  10: 763.612 ns/op
Iteration  11: 761.479 ns/op
Iteration  12: 761.014 ns/op
Iteration  13: 763.022 ns/op
Iteration  14: 767.225 ns/op
Iteration  15: 761.512 ns/op
Iteration  16: 763.073 ns/op
Iteration  17: 761.110 ns/op
Iteration  18: 762.214 ns/op
Iteration  19: 769.071 ns/op
Iteration  20: 763.970 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 1260.826 ns/op
# Warmup Iteration   2: 935.907 ns/op
# Warmup Iteration   3: 795.178 ns/op
# Warmup Iteration   4: 797.202 ns/op
# Warmup Iteration   5: 800.599 ns/op
Iteration   1: 804.588 ns/op
Iteration   2: 809.677 ns/op
Iteration   3: 791.997 ns/op
Iteration   4: 791.166 ns/op
Iteration   5: 791.027 ns/op
Iteration   6: 790.856 ns/op
Iteration   7: 790.973 ns/op
Iteration   8: 790.737 ns/op
Iteration   9: 794.687 ns/op
Iteration  10: 792.191 ns/op
Iteration  11: 793.784 ns/op
Iteration  12: 795.066 ns/op
Iteration  13: 787.721 ns/op
Iteration  14: 788.137 ns/op
Iteration  15: 787.954 ns/op
Iteration  16: 788.676 ns/op
Iteration  17: 789.084 ns/op
Iteration  18: 788.647 ns/op
Iteration  19: 789.282 ns/op
Iteration  20: 790.417 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 1259.064 ns/op
# Warmup Iteration   2: 941.553 ns/op
# Warmup Iteration   3: 799.750 ns/op
# Warmup Iteration   4: 801.815 ns/op
# Warmup Iteration   5: 805.165 ns/op
Iteration   1: 809.252 ns/op
Iteration   2: 814.104 ns/op
Iteration   3: 796.162 ns/op
Iteration   4: 795.369 ns/op
Iteration   5: 796.203 ns/op
Iteration   6: 796.231 ns/op
Iteration   7: 795.913 ns/op
Iteration   8: 796.531 ns/op
Iteration   9: 796.615 ns/op
Iteration  10: 796.006 ns/op
Iteration  11: 796.333 ns/op
Iteration  12: 793.998 ns/op
Iteration  13: 794.805 ns/op
Iteration  14: 795.026 ns/op
Iteration  15: 794.584 ns/op
Iteration  16: 794.586 ns/op
Iteration  17: 795.009 ns/op
Iteration  18: 800.401 ns/op
Iteration  19: 799.328 ns/op
Iteration  20: 796.817 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 1332.248 ns/op
# Warmup Iteration   2: 1034.564 ns/op
# Warmup Iteration   3: 860.956 ns/op
# Warmup Iteration   4: 860.261 ns/op
# Warmup Iteration   5: 864.022 ns/op
Iteration   1: 868.592 ns/op
Iteration   2: 873.879 ns/op
Iteration   3: 853.472 ns/op
Iteration   4: 853.295 ns/op
Iteration   5: 849.472 ns/op
Iteration   6: 852.378 ns/op
Iteration   7: 852.866 ns/op
Iteration   8: 853.095 ns/op
Iteration   9: 853.306 ns/op
Iteration  10: 853.479 ns/op
Iteration  11: 853.092 ns/op
Iteration  12: 855.002 ns/op
Iteration  13: 858.684 ns/op
Iteration  14: 851.575 ns/op
Iteration  15: 852.102 ns/op
Iteration  16: 849.408 ns/op
Iteration  17: 851.944 ns/op
Iteration  18: 854.573 ns/op
Iteration  19: 856.527 ns/op
Iteration  20: 854.929 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 1230.901 ns/op
# Warmup Iteration   2: 893.921 ns/op
# Warmup Iteration   3: 764.674 ns/op
# Warmup Iteration   4: 766.742 ns/op
# Warmup Iteration   5: 771.357 ns/op
Iteration   1: 777.803 ns/op
Iteration   2: 773.687 ns/op
Iteration   3: 759.940 ns/op
Iteration   4: 764.219 ns/op
Iteration   5: 759.995 ns/op
Iteration   6: 761.521 ns/op
Iteration   7: 761.479 ns/op
Iteration   8: 761.252 ns/op
Iteration   9: 761.548 ns/op
Iteration  10: 762.181 ns/op
Iteration  11: 761.927 ns/op
Iteration  12: 763.739 ns/op
Iteration  13: 759.282 ns/op
Iteration  14: 759.232 ns/op
Iteration  15: 759.433 ns/op
Iteration  16: 759.586 ns/op
Iteration  17: 759.346 ns/op
Iteration  18: 759.975 ns/op
Iteration  19: 760.154 ns/op
Iteration  20: 759.988 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  794.465 Â±(99.9%) 11.538 ns/op [Average]
  (min, avg, max) = (759.232, 794.465, 873.879), stdev = 34.021
  CI (99.9%): [782.926, 806.003] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed =  
		 
	

 
 
  
	 			 	  					
 		

 
	 
			  	   
	 


	 

 



	
 
   	  			 	 		,		 
 
	 	

    	

 
  
		 	 
 	  

 )

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 1215.495 ns/op
# Warmup Iteration   2: 894.959 ns/op
# Warmup Iteration   3: 765.025 ns/op
# Warmup Iteration   4: 767.122 ns/op
# Warmup Iteration   5: 787.913 ns/op
Iteration   1: 776.660 ns/op
Iteration   2: 760.660 ns/op
Iteration   3: 759.712 ns/op
Iteration   4: 759.717 ns/op
Iteration   5: 759.597 ns/op
Iteration   6: 760.351 ns/op
Iteration   7: 765.167 ns/op
Iteration   8: 760.829 ns/op
Iteration   9: 759.693 ns/op
Iteration  10: 759.537 ns/op
Iteration  11: 757.673 ns/op
Iteration  12: 757.691 ns/op
Iteration  13: 757.850 ns/op
Iteration  14: 757.872 ns/op
Iteration  15: 757.894 ns/op
Iteration  16: 758.391 ns/op
Iteration  17: 758.895 ns/op
Iteration  18: 758.687 ns/op
Iteration  19: 760.050 ns/op
Iteration  20: 760.359 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 1274.487 ns/op
# Warmup Iteration   2: 968.172 ns/op
# Warmup Iteration   3: 818.188 ns/op
# Warmup Iteration   4: 820.512 ns/op
# Warmup Iteration   5: 823.680 ns/op
Iteration   1: 828.615 ns/op
Iteration   2: 834.751 ns/op
Iteration   3: 815.630 ns/op
Iteration   4: 815.518 ns/op
Iteration   5: 815.249 ns/op
Iteration   6: 815.445 ns/op
Iteration   7: 815.464 ns/op
Iteration   8: 819.427 ns/op
Iteration   9: 816.046 ns/op
Iteration  10: 816.727 ns/op
Iteration  11: 820.464 ns/op
Iteration  12: 813.329 ns/op
Iteration  13: 813.373 ns/op
Iteration  14: 813.173 ns/op
Iteration  15: 813.738 ns/op
Iteration  16: 814.565 ns/op
Iteration  17: 813.586 ns/op
Iteration  18: 813.366 ns/op
Iteration  19: 815.299 ns/op
Iteration  20: 815.726 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 1283.555 ns/op
# Warmup Iteration   2: 958.704 ns/op
# Warmup Iteration   3: 811.625 ns/op
# Warmup Iteration   4: 815.259 ns/op
# Warmup Iteration   5: 817.262 ns/op
Iteration   1: 821.328 ns/op
Iteration   2: 826.330 ns/op
Iteration   3: 807.739 ns/op
Iteration   4: 807.297 ns/op
Iteration   5: 807.858 ns/op
Iteration   6: 807.575 ns/op
Iteration   7: 807.398 ns/op
Iteration   8: 807.582 ns/op
Iteration   9: 808.872 ns/op
Iteration  10: 808.601 ns/op
Iteration  11: 811.585 ns/op
Iteration  12: 805.836 ns/op
Iteration  13: 805.298 ns/op
Iteration  14: 807.207 ns/op
Iteration  15: 805.391 ns/op
Iteration  16: 809.505 ns/op
Iteration  17: 809.908 ns/op
Iteration  18: 806.145 ns/op
Iteration  19: 807.134 ns/op
Iteration  20: 807.162 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 1227.008 ns/op
# Warmup Iteration   2: 928.593 ns/op
# Warmup Iteration   3: 800.830 ns/op
# Warmup Iteration   4: 802.732 ns/op
# Warmup Iteration   5: 805.509 ns/op
Iteration   1: 810.123 ns/op
Iteration   2: 815.527 ns/op
Iteration   3: 796.590 ns/op
Iteration   4: 796.561 ns/op
Iteration   5: 796.912 ns/op
Iteration   6: 796.914 ns/op
Iteration   7: 797.014 ns/op
Iteration   8: 797.051 ns/op
Iteration   9: 796.994 ns/op
Iteration  10: 797.523 ns/op
Iteration  11: 797.603 ns/op
Iteration  12: 794.909 ns/op
Iteration  13: 800.813 ns/op
Iteration  14: 795.972 ns/op
Iteration  15: 794.734 ns/op
Iteration  16: 795.600 ns/op
Iteration  17: 795.097 ns/op
Iteration  18: 795.173 ns/op
Iteration  19: 802.142 ns/op
Iteration  20: 804.123 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 1321.115 ns/op
# Warmup Iteration   2: 1046.464 ns/op
# Warmup Iteration   3: 875.916 ns/op
# Warmup Iteration   4: 878.333 ns/op
# Warmup Iteration   5: 882.197 ns/op
Iteration   1: 887.291 ns/op
Iteration   2: 891.646 ns/op
Iteration   3: 872.407 ns/op
Iteration   4: 872.045 ns/op
Iteration   5: 868.023 ns/op
Iteration   6: 872.175 ns/op
Iteration   7: 871.970 ns/op
Iteration   8: 872.472 ns/op
Iteration   9: 872.536 ns/op
Iteration  10: 873.348 ns/op
Iteration  11: 886.416 ns/op
Iteration  12: 884.522 ns/op
Iteration  13: 871.036 ns/op
Iteration  14: 872.366 ns/op
Iteration  15: 870.100 ns/op
Iteration  16: 867.532 ns/op
Iteration  17: 869.506 ns/op
Iteration  18: 871.754 ns/op
Iteration  19: 869.717 ns/op
Iteration  20: 871.820 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  811.986 Â±(99.9%) 12.675 ns/op [Average]
  (min, avg, max) = (757.673, 811.986, 891.646), stdev = 37.374
  CI (99.9%): [799.310, 824.661] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                                                                                                                                                  (trimmed)  Mode  Cnt    Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*   
		 
	

 
 
  
	 			 	  					
 		

 
	 
			  	   
	 


	 

 



	
 
   	  			 	 		,		 
 
	 	

    	

 
  
		 	 
 	  

   avgt  100  794.465 Â± 11.538  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*   
		 
	

 
 
  
	 			 	  					
 		

 
	 
			  	   
	 


	 

 



	
 
   	  			 	 		,		 
 
	 	

    	

 
  
		 	 
 	  

   avgt  100  811.986 Â± 12.675  ns/op

Benchmark result is saved to split_precompiled_regex_10_217_Match.csv
