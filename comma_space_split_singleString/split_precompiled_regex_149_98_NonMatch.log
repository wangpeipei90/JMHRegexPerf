# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.regexSplit
# Parameters: (regex = \s*,\s*, trimmed = Q/r4}`<4VkU#ar(}Wr.RT^!=|:'%huLXW*x.%4=TX;~vrS#Z9NhA#BOZ@IQ"q*MF:]'>hdz~>zvOMb7OEgu8EErIZe,e)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 2350.034 ns/op
# Warmup Iteration   2: 2272.875 ns/op
# Warmup Iteration   3: 2042.273 ns/op
# Warmup Iteration   4: 1832.584 ns/op
# Warmup Iteration   5: 1849.177 ns/op
Iteration   1: 1832.539 ns/op
Iteration   2: 1855.006 ns/op
Iteration   3: 1832.386 ns/op
Iteration   4: 1863.896 ns/op
Iteration   5: 1831.950 ns/op
Iteration   6: 1873.443 ns/op
Iteration   7: 1832.434 ns/op
Iteration   8: 1884.837 ns/op
Iteration   9: 1831.954 ns/op
Iteration  10: 1842.445 ns/op
Iteration  11: 1833.912 ns/op
Iteration  12: 1840.422 ns/op
Iteration  13: 1831.643 ns/op
Iteration  14: 1841.144 ns/op
Iteration  15: 1831.639 ns/op
Iteration  16: 1831.997 ns/op
Iteration  17: 1840.127 ns/op
Iteration  18: 1831.317 ns/op
Iteration  19: 1839.533 ns/op
Iteration  20: 1832.800 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 2306.253 ns/op
# Warmup Iteration   2: 2256.643 ns/op
# Warmup Iteration   3: 2032.305 ns/op
# Warmup Iteration   4: 1839.166 ns/op
# Warmup Iteration   5: 1857.739 ns/op
Iteration   1: 1838.043 ns/op
Iteration   2: 1862.273 ns/op
Iteration   3: 1838.094 ns/op
Iteration   4: 1867.872 ns/op
Iteration   5: 1839.060 ns/op
Iteration   6: 1877.808 ns/op
Iteration   7: 1839.592 ns/op
Iteration   8: 1890.772 ns/op
Iteration   9: 1838.749 ns/op
Iteration  10: 1845.818 ns/op
Iteration  11: 1837.207 ns/op
Iteration  12: 1846.258 ns/op
Iteration  13: 1837.640 ns/op
Iteration  14: 1836.929 ns/op
Iteration  15: 1846.920 ns/op
Iteration  16: 1838.525 ns/op
Iteration  17: 1856.548 ns/op
Iteration  18: 1838.848 ns/op
Iteration  19: 1847.479 ns/op
Iteration  20: 1838.902 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 2274.390 ns/op
# Warmup Iteration   2: 2228.842 ns/op
# Warmup Iteration   3: 1988.045 ns/op
# Warmup Iteration   4: 1810.199 ns/op
# Warmup Iteration   5: 1828.364 ns/op
Iteration   1: 1812.228 ns/op
Iteration   2: 1836.417 ns/op
Iteration   3: 1812.943 ns/op
Iteration   4: 1840.914 ns/op
Iteration   5: 1812.205 ns/op
Iteration   6: 1850.013 ns/op
Iteration   7: 1810.402 ns/op
Iteration   8: 1863.005 ns/op
Iteration   9: 1811.133 ns/op
Iteration  10: 1824.271 ns/op
Iteration  11: 1812.673 ns/op
Iteration  12: 1819.870 ns/op
Iteration  13: 1809.737 ns/op
Iteration  14: 1818.844 ns/op
Iteration  15: 1810.997 ns/op
Iteration  16: 1818.407 ns/op
Iteration  17: 1810.228 ns/op
Iteration  18: 1817.719 ns/op
Iteration  19: 1811.729 ns/op
Iteration  20: 1812.958 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 2278.273 ns/op
# Warmup Iteration   2: 2223.062 ns/op
# Warmup Iteration   3: 1989.742 ns/op
# Warmup Iteration   4: 1811.591 ns/op
# Warmup Iteration   5: 1827.887 ns/op
Iteration   1: 1811.862 ns/op
Iteration   2: 1833.985 ns/op
Iteration   3: 1810.979 ns/op
Iteration   4: 1840.381 ns/op
Iteration   5: 1810.935 ns/op
Iteration   6: 1849.460 ns/op
Iteration   7: 1811.405 ns/op
Iteration   8: 1861.332 ns/op
Iteration   9: 1811.835 ns/op
Iteration  10: 1819.736 ns/op
Iteration  11: 1811.798 ns/op
Iteration  12: 1819.958 ns/op
Iteration  13: 1810.774 ns/op
Iteration  14: 1820.087 ns/op
Iteration  15: 1812.842 ns/op
Iteration  16: 1820.115 ns/op
Iteration  17: 1811.248 ns/op
Iteration  18: 1819.774 ns/op
Iteration  19: 1810.505 ns/op
Iteration  20: 1811.739 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 2390.001 ns/op
# Warmup Iteration   2: 2337.567 ns/op
# Warmup Iteration   3: 2147.956 ns/op
# Warmup Iteration   4: 1915.289 ns/op
# Warmup Iteration   5: 1935.261 ns/op
Iteration   1: 1916.467 ns/op
Iteration   2: 1939.893 ns/op
Iteration   3: 1915.718 ns/op
Iteration   4: 1948.434 ns/op
Iteration   5: 1914.620 ns/op
Iteration   6: 1957.593 ns/op
Iteration   7: 1916.495 ns/op
Iteration   8: 1951.701 ns/op
Iteration   9: 1934.936 ns/op
Iteration  10: 1915.400 ns/op
Iteration  11: 1928.080 ns/op
Iteration  12: 1917.637 ns/op
Iteration  13: 1927.746 ns/op
Iteration  14: 1917.233 ns/op
Iteration  15: 1926.168 ns/op
Iteration  16: 1916.351 ns/op
Iteration  17: 1915.806 ns/op
Iteration  18: 1925.237 ns/op
Iteration  19: 1915.149 ns/op
Iteration  20: 1933.590 ns/op


Result "benchmark.PrecompiledRegexSplit.regexSplit":
  1851.605 Â±(99.9%) 14.216 ns/op [Average]
  (min, avg, max) = (1809.737, 1851.605, 1957.593), stdev = 41.917
  CI (99.9%): [1837.388, 1865.821] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.PrecompiledRegexSplit.stringSplit
# Parameters: (regex = \s*,\s*, trimmed = Q/r4}`<4VkU#ar(}Wr.RT^!=|:'%huLXW*x.%4=TX;~vrS#Z9NhA#BOZ@IQ"q*MF:]'>hdz~>zvOMb7OEgu8EErIZe,e)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 2344.197 ns/op
# Warmup Iteration   2: 2215.728 ns/op
# Warmup Iteration   3: 1964.194 ns/op
# Warmup Iteration   4: 1790.414 ns/op
# Warmup Iteration   5: 1809.944 ns/op
Iteration   1: 1790.491 ns/op
Iteration   2: 1813.609 ns/op
Iteration   3: 1821.687 ns/op
Iteration   4: 1789.389 ns/op
Iteration   5: 1829.589 ns/op
Iteration   6: 1790.407 ns/op
Iteration   7: 1825.288 ns/op
Iteration   8: 1803.661 ns/op
Iteration   9: 1790.330 ns/op
Iteration  10: 1799.578 ns/op
Iteration  11: 1790.412 ns/op
Iteration  12: 1797.719 ns/op
Iteration  13: 1789.849 ns/op
Iteration  14: 1797.449 ns/op
Iteration  15: 1790.098 ns/op
Iteration  16: 1798.260 ns/op
Iteration  17: 1790.198 ns/op
Iteration  18: 1798.977 ns/op
Iteration  19: 1789.976 ns/op
Iteration  20: 1798.578 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 2269.839 ns/op
# Warmup Iteration   2: 2214.774 ns/op
# Warmup Iteration   3: 1961.230 ns/op
# Warmup Iteration   4: 1792.402 ns/op
# Warmup Iteration   5: 1811.774 ns/op
Iteration   1: 1798.382 ns/op
Iteration   2: 1813.182 ns/op
Iteration   3: 1823.080 ns/op
Iteration   4: 1794.158 ns/op
Iteration   5: 1837.307 ns/op
Iteration   6: 1793.018 ns/op
Iteration   7: 1844.289 ns/op
Iteration   8: 1795.647 ns/op
Iteration   9: 1795.894 ns/op
Iteration  10: 1804.883 ns/op
Iteration  11: 1793.106 ns/op
Iteration  12: 1802.751 ns/op
Iteration  13: 1795.269 ns/op
Iteration  14: 1805.056 ns/op
Iteration  15: 1792.618 ns/op
Iteration  16: 1803.327 ns/op
Iteration  17: 1792.353 ns/op
Iteration  18: 1803.770 ns/op
Iteration  19: 1794.081 ns/op
Iteration  20: 1803.602 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 2345.704 ns/op
# Warmup Iteration   2: 2226.298 ns/op
# Warmup Iteration   3: 1970.050 ns/op
# Warmup Iteration   4: 1789.486 ns/op
# Warmup Iteration   5: 1816.851 ns/op
Iteration   1: 1789.753 ns/op
Iteration   2: 1811.664 ns/op
Iteration   3: 1817.972 ns/op
Iteration   4: 1788.310 ns/op
Iteration   5: 1828.156 ns/op
Iteration   6: 1788.027 ns/op
Iteration   7: 1821.105 ns/op
Iteration   8: 1806.590 ns/op
Iteration   9: 1789.375 ns/op
Iteration  10: 1796.778 ns/op
Iteration  11: 1788.570 ns/op
Iteration  12: 1796.833 ns/op
Iteration  13: 1789.406 ns/op
Iteration  14: 1802.215 ns/op
Iteration  15: 1789.033 ns/op
Iteration  16: 1798.696 ns/op
Iteration  17: 1788.820 ns/op
Iteration  18: 1797.634 ns/op
Iteration  19: 1787.781 ns/op
Iteration  20: 1817.973 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 2404.488 ns/op
# Warmup Iteration   2: 2282.315 ns/op
# Warmup Iteration   3: 2060.753 ns/op
# Warmup Iteration   4: 1852.613 ns/op
# Warmup Iteration   5: 1872.802 ns/op
Iteration   1: 1855.161 ns/op
Iteration   2: 1878.008 ns/op
Iteration   3: 1852.397 ns/op
Iteration   4: 1885.566 ns/op
Iteration   5: 1854.176 ns/op
Iteration   6: 1894.110 ns/op
Iteration   7: 1852.469 ns/op
Iteration   8: 1905.735 ns/op
Iteration   9: 1852.653 ns/op
Iteration  10: 1861.683 ns/op
Iteration  11: 1852.910 ns/op
Iteration  12: 1860.709 ns/op
Iteration  13: 1852.235 ns/op
Iteration  14: 1861.569 ns/op
Iteration  15: 1852.397 ns/op
Iteration  16: 1863.895 ns/op
Iteration  17: 1852.090 ns/op
Iteration  18: 1852.370 ns/op
Iteration  19: 1862.235 ns/op
Iteration  20: 1852.502 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 2320.904 ns/op
# Warmup Iteration   2: 2231.549 ns/op
# Warmup Iteration   3: 1968.077 ns/op
# Warmup Iteration   4: 1796.736 ns/op
# Warmup Iteration   5: 1822.826 ns/op
Iteration   1: 1796.335 ns/op
Iteration   2: 1820.513 ns/op
Iteration   3: 1826.599 ns/op
Iteration   4: 1799.300 ns/op
Iteration   5: 1849.062 ns/op
Iteration   6: 1804.463 ns/op
Iteration   7: 1824.115 ns/op
Iteration   8: 1816.609 ns/op
Iteration   9: 1794.769 ns/op
Iteration  10: 1804.624 ns/op
Iteration  11: 1795.415 ns/op
Iteration  12: 1803.275 ns/op
Iteration  13: 1795.380 ns/op
Iteration  14: 1803.045 ns/op
Iteration  15: 1795.109 ns/op
Iteration  16: 1803.941 ns/op
Iteration  17: 1795.778 ns/op
Iteration  18: 1803.913 ns/op
Iteration  19: 1794.519 ns/op
Iteration  20: 1803.494 ns/op


Result "benchmark.PrecompiledRegexSplit.stringSplit":
  1814.611 Â±(99.9%) 9.491 ns/op [Average]
  (min, avg, max) = (1787.781, 1814.611, 1905.735), stdev = 27.983
  CI (99.9%): [1805.121, 1824.102] (assumes normal distribution)


# Run complete. Total time: 00:04:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          (regex)                                                                                           (trimmed)  Mode  Cnt     Score    Error  Units
PrecompiledRegexSplit.regexSplit   \s*,\s*  Q/r4}`<4VkU#ar(}Wr.RT^!=|:'%huLXW*x.%4=TX;~vrS#Z9NhA#BOZ@IQ"q*MF:]'>hdz~>zvOMb7OEgu8EErIZe,e  avgt  100  1851.605 Â± 14.216  ns/op
PrecompiledRegexSplit.stringSplit  \s*,\s*  Q/r4}`<4VkU#ar(}Wr.RT^!=|:'%huLXW*x.%4=TX;~vrS#Z9NhA#BOZ@IQ"q*MF:]'>hdz~>zvOMb7OEgu8EErIZe,e  avgt  100  1814.611 Â±  9.491  ns/op

Benchmark result is saved to split_precompiled_regex_149_98_NonMatch.csv
