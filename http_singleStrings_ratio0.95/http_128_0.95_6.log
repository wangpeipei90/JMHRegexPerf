# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Ja|}x>g#_l2[58D9o$+ }X'9C+q2n~bb
[YU3HL.=G-@0b'=`BmWqG_(EH,VC&9bg;)Zv"BDDN){s*E6E*i['4e$_'S_EHQw1$v
#24V.!$k*M5Cv0;fs70httpa+2)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 240.762 ns/op
# Warmup Iteration   2: 174.508 ns/op
# Warmup Iteration   3: 145.236 ns/op
# Warmup Iteration   4: 148.233 ns/op
# Warmup Iteration   5: 147.113 ns/op
Iteration   1: 147.996 ns/op
Iteration   2: 144.356 ns/op
Iteration   3: 144.337 ns/op
Iteration   4: 144.439 ns/op
Iteration   5: 144.425 ns/op
Iteration   6: 144.328 ns/op
Iteration   7: 144.372 ns/op
Iteration   8: 144.390 ns/op
Iteration   9: 144.465 ns/op
Iteration  10: 144.397 ns/op
Iteration  11: 144.593 ns/op
Iteration  12: 143.979 ns/op
Iteration  13: 143.782 ns/op
Iteration  14: 143.931 ns/op
Iteration  15: 144.718 ns/op
Iteration  16: 143.848 ns/op
Iteration  17: 143.920 ns/op
Iteration  18: 144.257 ns/op
Iteration  19: 144.109 ns/op
Iteration  20: 144.012 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 244.315 ns/op
# Warmup Iteration   2: 186.691 ns/op
# Warmup Iteration   3: 157.110 ns/op
# Warmup Iteration   4: 157.433 ns/op
# Warmup Iteration   5: 158.172 ns/op
Iteration   1: 159.113 ns/op
Iteration   2: 162.286 ns/op
Iteration   3: 156.888 ns/op
Iteration   4: 156.400 ns/op
Iteration   5: 156.335 ns/op
Iteration   6: 156.613 ns/op
Iteration   7: 156.437 ns/op
Iteration   8: 157.113 ns/op
Iteration   9: 157.739 ns/op
Iteration  10: 156.569 ns/op
Iteration  11: 156.617 ns/op
Iteration  12: 156.254 ns/op
Iteration  13: 156.679 ns/op
Iteration  14: 156.138 ns/op
Iteration  15: 156.287 ns/op
Iteration  16: 156.157 ns/op
Iteration  17: 156.201 ns/op
Iteration  18: 156.390 ns/op
Iteration  19: 156.298 ns/op
Iteration  20: 156.533 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 244.125 ns/op
# Warmup Iteration   2: 186.781 ns/op
# Warmup Iteration   3: 157.396 ns/op
# Warmup Iteration   4: 157.779 ns/op
# Warmup Iteration   5: 160.339 ns/op
Iteration   1: 159.569 ns/op
Iteration   2: 160.055 ns/op
Iteration   3: 156.631 ns/op
Iteration   4: 156.596 ns/op
Iteration   5: 156.557 ns/op
Iteration   6: 156.523 ns/op
Iteration   7: 156.707 ns/op
Iteration   8: 156.661 ns/op
Iteration   9: 156.861 ns/op
Iteration  10: 156.780 ns/op
Iteration  11: 157.698 ns/op
Iteration  12: 156.328 ns/op
Iteration  13: 156.390 ns/op
Iteration  14: 156.373 ns/op
Iteration  15: 156.245 ns/op
Iteration  16: 156.456 ns/op
Iteration  17: 156.423 ns/op
Iteration  18: 156.333 ns/op
Iteration  19: 156.406 ns/op
Iteration  20: 156.802 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 238.897 ns/op
# Warmup Iteration   2: 171.304 ns/op
# Warmup Iteration   3: 146.452 ns/op
# Warmup Iteration   4: 149.391 ns/op
# Warmup Iteration   5: 148.234 ns/op
Iteration   1: 149.181 ns/op
Iteration   2: 145.590 ns/op
Iteration   3: 145.733 ns/op
Iteration   4: 145.695 ns/op
Iteration   5: 145.756 ns/op
Iteration   6: 145.719 ns/op
Iteration   7: 145.659 ns/op
Iteration   8: 145.651 ns/op
Iteration   9: 145.720 ns/op
Iteration  10: 145.675 ns/op
Iteration  11: 145.954 ns/op
Iteration  12: 146.638 ns/op
Iteration  13: 145.764 ns/op
Iteration  14: 145.263 ns/op
Iteration  15: 145.274 ns/op
Iteration  16: 145.271 ns/op
Iteration  17: 145.985 ns/op
Iteration  18: 146.042 ns/op
Iteration  19: 145.372 ns/op
Iteration  20: 145.588 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 244.051 ns/op
# Warmup Iteration   2: 187.157 ns/op
# Warmup Iteration   3: 157.960 ns/op
# Warmup Iteration   4: 158.341 ns/op
# Warmup Iteration   5: 158.992 ns/op
Iteration   1: 159.672 ns/op
Iteration   2: 160.777 ns/op
Iteration   3: 157.253 ns/op
Iteration   4: 157.050 ns/op
Iteration   5: 157.109 ns/op
Iteration   6: 157.418 ns/op
Iteration   7: 157.400 ns/op
Iteration   8: 157.051 ns/op
Iteration   9: 157.261 ns/op
Iteration  10: 158.279 ns/op
Iteration  11: 157.605 ns/op
Iteration  12: 162.074 ns/op
Iteration  13: 156.670 ns/op
Iteration  14: 157.955 ns/op
Iteration  15: 157.697 ns/op
Iteration  16: 158.269 ns/op
Iteration  17: 156.799 ns/op
Iteration  18: 156.678 ns/op
Iteration  19: 157.036 ns/op
Iteration  20: 157.207 ns/op


Result "benchmark.StringContains.regexMatches":
  152.409 ±(99.9%) 2.064 ns/op [Average]
  (min, avg, max) = (143.782, 152.409, 162.286), stdev = 6.085
  CI (99.9%): [150.345, 154.473] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Ja|}x>g#_l2[58D9o$+ }X'9C+q2n~bb
[YU3HL.=G-@0b'=`BmWqG_(EH,VC&9bg;)Zv"BDDN){s*E6E*i['4e$_'S_EHQw1$v
#24V.!$k*M5Cv0;fs70httpa+2)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 25.026 ns/op
# Warmup Iteration   2: 26.186 ns/op
# Warmup Iteration   3: 25.420 ns/op
# Warmup Iteration   4: 25.420 ns/op
# Warmup Iteration   5: 25.456 ns/op
Iteration   1: 25.429 ns/op
Iteration   2: 25.480 ns/op
Iteration   3: 25.437 ns/op
Iteration   4: 25.437 ns/op
Iteration   5: 25.441 ns/op
Iteration   6: 25.423 ns/op
Iteration   7: 25.446 ns/op
Iteration   8: 25.441 ns/op
Iteration   9: 25.444 ns/op
Iteration  10: 25.443 ns/op
Iteration  11: 25.430 ns/op
Iteration  12: 25.429 ns/op
Iteration  13: 25.432 ns/op
Iteration  14: 25.447 ns/op
Iteration  15: 25.426 ns/op
Iteration  16: 25.415 ns/op
Iteration  17: 25.417 ns/op
Iteration  18: 25.421 ns/op
Iteration  19: 25.408 ns/op
Iteration  20: 25.458 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 24.866 ns/op
# Warmup Iteration   2: 26.174 ns/op
# Warmup Iteration   3: 25.607 ns/op
# Warmup Iteration   4: 25.582 ns/op
# Warmup Iteration   5: 25.586 ns/op
Iteration   1: 25.588 ns/op
Iteration   2: 25.412 ns/op
Iteration   3: 25.415 ns/op
Iteration   4: 25.579 ns/op
Iteration   5: 25.487 ns/op
Iteration   6: 25.587 ns/op
Iteration   7: 25.568 ns/op
Iteration   8: 25.613 ns/op
Iteration   9: 25.490 ns/op
Iteration  10: 25.426 ns/op
Iteration  11: 25.587 ns/op
Iteration  12: 25.456 ns/op
Iteration  13: 25.438 ns/op
Iteration  14: 25.465 ns/op
Iteration  15: 25.451 ns/op
Iteration  16: 25.462 ns/op
Iteration  17: 25.436 ns/op
Iteration  18: 25.443 ns/op
Iteration  19: 25.458 ns/op
Iteration  20: 25.436 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 25.057 ns/op
# Warmup Iteration   2: 26.198 ns/op
# Warmup Iteration   3: 26.336 ns/op
# Warmup Iteration   4: 26.324 ns/op
# Warmup Iteration   5: 26.303 ns/op
Iteration   1: 26.387 ns/op
Iteration   2: 26.391 ns/op
Iteration   3: 26.361 ns/op
Iteration   4: 26.372 ns/op
Iteration   5: 26.333 ns/op
Iteration   6: 26.344 ns/op
Iteration   7: 26.339 ns/op
Iteration   8: 26.392 ns/op
Iteration   9: 26.379 ns/op
Iteration  10: 26.379 ns/op
Iteration  11: 26.396 ns/op
Iteration  12: 26.387 ns/op
Iteration  13: 26.396 ns/op
Iteration  14: 26.413 ns/op
Iteration  15: 26.382 ns/op
Iteration  16: 26.379 ns/op
Iteration  17: 26.356 ns/op
Iteration  18: 26.400 ns/op
Iteration  19: 26.410 ns/op
Iteration  20: 26.452 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 25.029 ns/op
# Warmup Iteration   2: 26.093 ns/op
# Warmup Iteration   3: 26.440 ns/op
# Warmup Iteration   4: 26.377 ns/op
# Warmup Iteration   5: 26.394 ns/op
Iteration   1: 26.464 ns/op
Iteration   2: 26.427 ns/op
Iteration   3: 26.438 ns/op
Iteration   4: 26.459 ns/op
Iteration   5: 26.460 ns/op
Iteration   6: 26.433 ns/op
Iteration   7: 26.424 ns/op
Iteration   8: 26.343 ns/op
Iteration   9: 26.446 ns/op
Iteration  10: 26.437 ns/op
Iteration  11: 26.376 ns/op
Iteration  12: 26.451 ns/op
Iteration  13: 26.453 ns/op
Iteration  14: 26.406 ns/op
Iteration  15: 26.446 ns/op
Iteration  16: 26.428 ns/op
Iteration  17: 26.463 ns/op
Iteration  18: 26.390 ns/op
Iteration  19: 26.401 ns/op
Iteration  20: 26.454 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 25.059 ns/op
# Warmup Iteration   2: 26.218 ns/op
# Warmup Iteration   3: 25.498 ns/op
# Warmup Iteration   4: 25.562 ns/op
# Warmup Iteration   5: 25.556 ns/op
Iteration   1: 25.434 ns/op
Iteration   2: 25.537 ns/op
Iteration   3: 25.540 ns/op
Iteration   4: 25.543 ns/op
Iteration   5: 25.406 ns/op
Iteration   6: 25.536 ns/op
Iteration   7: 25.546 ns/op
Iteration   8: 25.613 ns/op
Iteration   9: 25.569 ns/op
Iteration  10: 25.552 ns/op
Iteration  11: 25.547 ns/op
Iteration  12: 25.410 ns/op
Iteration  13: 25.402 ns/op
Iteration  14: 25.399 ns/op
Iteration  15: 25.388 ns/op
Iteration  16: 25.384 ns/op
Iteration  17: 25.406 ns/op
Iteration  18: 25.417 ns/op
Iteration  19: 25.399 ns/op
Iteration  20: 25.436 ns/op


Result "benchmark.StringContains.stringContains":
  25.842 ±(99.9%) 0.158 ns/op [Average]
  (min, avg, max) = (25.384, 25.842, 26.464), stdev = 0.466
  CI (99.9%): [25.684, 26.000] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  Ja|}x>g#_l2[58D9o$+ }X'9C+q2n~bb
[YU3HL.=G-@0b'=`BmWqG_(EH,VC&9bg;)Zv"BDDN){s*E6E*i['4e$_'S_EHQw1$v
#24V.!$k*M5Cv0;fs70httpa+2  avgt  100  152.409 ± 2.064  ns/op
StringContains.stringContains     http  Ja|}x>g#_l2[58D9o$+ }X'9C+q2n~bb
[YU3HL.=G-@0b'=`BmWqG_(EH,VC&9bg;)Zv"BDDN){s*E6E*i['4e$_'S_EHQw1$v
#24V.!$k*M5Cv0;fs70httpa+2  avgt  100   25.842 ± 0.158  ns/op

Benchmark result is saved to http_128_0.95_6.csv
