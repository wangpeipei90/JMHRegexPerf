# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = G>6}+m'Vq=]ek7Pl$Tn#XA~:,R'4)eNh>d^J~ZbjM5-rH"=eQ ke{loQ3XZ?7yaG4k'iC7Z2dge=_wlqBc{WfyWZlGyEg;2+1M~q(7L$PsKc.q1ET&#3tT2~kkG+&|f{[`bmpeK>+Cxkw;}G4[~Z_vf!va%_B+\Ol	@I(Enw
g1cIA	ZV`Q"e#.\kp6SDK_(|Zkn<Svme>
OKiR#"-qmwE{cDu5Ne40N21{kbIV?}G&	[:httpctNY&,b}W)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 297.347 ns/op
# Warmup Iteration   2: 263.360 ns/op
# Warmup Iteration   3: 204.118 ns/op
# Warmup Iteration   4: 202.301 ns/op
# Warmup Iteration   5: 204.899 ns/op
Iteration   1: 205.827 ns/op
Iteration   2: 206.874 ns/op
Iteration   3: 208.037 ns/op
Iteration   4: 202.206 ns/op
Iteration   5: 203.223 ns/op
Iteration   6: 203.103 ns/op
Iteration   7: 203.127 ns/op
Iteration   8: 202.255 ns/op
Iteration   9: 203.088 ns/op
Iteration  10: 203.181 ns/op
Iteration  11: 203.118 ns/op
Iteration  12: 203.476 ns/op
Iteration  13: 202.286 ns/op
Iteration  14: 203.185 ns/op
Iteration  15: 203.273 ns/op
Iteration  16: 202.773 ns/op
Iteration  17: 202.330 ns/op
Iteration  18: 202.870 ns/op
Iteration  19: 205.787 ns/op
Iteration  20: 203.265 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 316.421 ns/op
# Warmup Iteration   2: 276.516 ns/op
# Warmup Iteration   3: 213.029 ns/op
# Warmup Iteration   4: 215.276 ns/op
# Warmup Iteration   5: 216.307 ns/op
Iteration   1: 217.911 ns/op
Iteration   2: 220.005 ns/op
Iteration   3: 215.769 ns/op
Iteration   4: 219.298 ns/op
Iteration   5: 214.040 ns/op
Iteration   6: 213.166 ns/op
Iteration   7: 214.689 ns/op
Iteration   8: 214.976 ns/op
Iteration   9: 215.287 ns/op
Iteration  10: 212.665 ns/op
Iteration  11: 214.062 ns/op
Iteration  12: 215.696 ns/op
Iteration  13: 213.837 ns/op
Iteration  14: 212.912 ns/op
Iteration  15: 215.671 ns/op
Iteration  16: 216.382 ns/op
Iteration  17: 214.722 ns/op
Iteration  18: 217.247 ns/op
Iteration  19: 214.563 ns/op
Iteration  20: 214.619 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 317.232 ns/op
# Warmup Iteration   2: 278.054 ns/op
# Warmup Iteration   3: 213.926 ns/op
# Warmup Iteration   4: 215.767 ns/op
# Warmup Iteration   5: 216.961 ns/op
Iteration   1: 217.727 ns/op
Iteration   2: 218.707 ns/op
Iteration   3: 213.742 ns/op
Iteration   4: 219.932 ns/op
Iteration   5: 215.119 ns/op
Iteration   6: 213.821 ns/op
Iteration   7: 214.894 ns/op
Iteration   8: 214.750 ns/op
Iteration   9: 214.779 ns/op
Iteration  10: 213.865 ns/op
Iteration  11: 214.788 ns/op
Iteration  12: 214.816 ns/op
Iteration  13: 215.288 ns/op
Iteration  14: 213.760 ns/op
Iteration  15: 216.925 ns/op
Iteration  16: 215.001 ns/op
Iteration  17: 213.889 ns/op
Iteration  18: 214.135 ns/op
Iteration  19: 216.650 ns/op
Iteration  20: 214.454 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 294.360 ns/op
# Warmup Iteration   2: 258.625 ns/op
# Warmup Iteration   3: 205.145 ns/op
# Warmup Iteration   4: 202.879 ns/op
# Warmup Iteration   5: 205.452 ns/op
Iteration   1: 206.961 ns/op
Iteration   2: 207.287 ns/op
Iteration   3: 209.248 ns/op
Iteration   4: 202.943 ns/op
Iteration   5: 203.804 ns/op
Iteration   6: 203.695 ns/op
Iteration   7: 203.778 ns/op
Iteration   8: 202.837 ns/op
Iteration   9: 203.831 ns/op
Iteration  10: 203.702 ns/op
Iteration  11: 203.773 ns/op
Iteration  12: 202.794 ns/op
Iteration  13: 203.611 ns/op
Iteration  14: 203.792 ns/op
Iteration  15: 203.829 ns/op
Iteration  16: 204.125 ns/op
Iteration  17: 202.797 ns/op
Iteration  18: 203.366 ns/op
Iteration  19: 205.349 ns/op
Iteration  20: 203.500 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 271.489 ns/op
# Warmup Iteration   2: 221.601 ns/op
# Warmup Iteration   3: 178.597 ns/op
# Warmup Iteration   4: 178.885 ns/op
# Warmup Iteration   5: 179.622 ns/op
Iteration   1: 180.607 ns/op
Iteration   2: 181.698 ns/op
Iteration   3: 176.434 ns/op
Iteration   4: 177.314 ns/op
Iteration   5: 177.443 ns/op
Iteration   6: 177.257 ns/op
Iteration   7: 177.194 ns/op
Iteration   8: 177.884 ns/op
Iteration   9: 177.387 ns/op
Iteration  10: 177.296 ns/op
Iteration  11: 176.493 ns/op
Iteration  12: 177.915 ns/op
Iteration  13: 177.714 ns/op
Iteration  14: 180.284 ns/op
Iteration  15: 177.139 ns/op
Iteration  16: 177.170 ns/op
Iteration  17: 177.183 ns/op
Iteration  18: 177.257 ns/op
Iteration  19: 176.425 ns/op
Iteration  20: 177.355 ns/op


Result "benchmark.StringContains.regexMatches":
  203.283 Â±(99.9%) 4.717 ns/op [Average]
  (min, avg, max) = (176.425, 203.283, 220.005), stdev = 13.908
  CI (99.9%): [198.566, 208.000] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = G>6}+m'Vq=]ek7Pl$Tn#XA~:,R'4)eNh>d^J~ZbjM5-rH"=eQ ke{loQ3XZ?7yaG4k'iC7Z2dge=_wlqBc{WfyWZlGyEg;2+1M~q(7L$PsKc.q1ET&#3tT2~kkG+&|f{[`bmpeK>+Cxkw;}G4[~Z_vf!va%_B+\Ol	@I(Enw
g1cIA	ZV`Q"e#.\kp6SDK_(|Zkn<Svme>
OKiR#"-qmwE{cDu5Ne40N21{kbIV?}G&	[:httpctNY&,b}W)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 43.659 ns/op
# Warmup Iteration   2: 44.936 ns/op
# Warmup Iteration   3: 45.437 ns/op
# Warmup Iteration   4: 45.427 ns/op
# Warmup Iteration   5: 45.438 ns/op
Iteration   1: 45.464 ns/op
Iteration   2: 45.443 ns/op
Iteration   3: 45.444 ns/op
Iteration   4: 45.397 ns/op
Iteration   5: 45.390 ns/op
Iteration   6: 45.413 ns/op
Iteration   7: 45.420 ns/op
Iteration   8: 45.425 ns/op
Iteration   9: 45.412 ns/op
Iteration  10: 45.473 ns/op
Iteration  11: 45.399 ns/op
Iteration  12: 45.409 ns/op
Iteration  13: 45.385 ns/op
Iteration  14: 45.386 ns/op
Iteration  15: 45.455 ns/op
Iteration  16: 45.407 ns/op
Iteration  17: 45.417 ns/op
Iteration  18: 45.350 ns/op
Iteration  19: 45.404 ns/op
Iteration  20: 45.383 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.706 ns/op
# Warmup Iteration   2: 45.051 ns/op
# Warmup Iteration   3: 44.671 ns/op
# Warmup Iteration   4: 44.641 ns/op
# Warmup Iteration   5: 44.647 ns/op
Iteration   1: 44.630 ns/op
Iteration   2: 44.649 ns/op
Iteration   3: 44.631 ns/op
Iteration   4: 44.669 ns/op
Iteration   5: 44.631 ns/op
Iteration   6: 44.629 ns/op
Iteration   7: 44.669 ns/op
Iteration   8: 44.722 ns/op
Iteration   9: 44.628 ns/op
Iteration  10: 44.649 ns/op
Iteration  11: 44.706 ns/op
Iteration  12: 44.669 ns/op
Iteration  13: 44.675 ns/op
Iteration  14: 44.644 ns/op
Iteration  15: 44.649 ns/op
Iteration  16: 44.640 ns/op
Iteration  17: 44.634 ns/op
Iteration  18: 44.677 ns/op
Iteration  19: 44.660 ns/op
Iteration  20: 44.793 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.726 ns/op
# Warmup Iteration   2: 44.911 ns/op
# Warmup Iteration   3: 45.867 ns/op
# Warmup Iteration   4: 45.847 ns/op
# Warmup Iteration   5: 45.790 ns/op
Iteration   1: 45.772 ns/op
Iteration   2: 45.813 ns/op
Iteration   3: 45.882 ns/op
Iteration   4: 45.821 ns/op
Iteration   5: 45.838 ns/op
Iteration   6: 45.816 ns/op
Iteration   7: 45.822 ns/op
Iteration   8: 45.797 ns/op
Iteration   9: 45.880 ns/op
Iteration  10: 45.775 ns/op
Iteration  11: 45.751 ns/op
Iteration  12: 45.783 ns/op
Iteration  13: 45.773 ns/op
Iteration  14: 45.810 ns/op
Iteration  15: 45.816 ns/op
Iteration  16: 45.800 ns/op
Iteration  17: 45.794 ns/op
Iteration  18: 45.908 ns/op
Iteration  19: 45.859 ns/op
Iteration  20: 45.790 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.661 ns/op
# Warmup Iteration   2: 44.881 ns/op
# Warmup Iteration   3: 44.681 ns/op
# Warmup Iteration   4: 44.653 ns/op
# Warmup Iteration   5: 44.677 ns/op
Iteration   1: 44.672 ns/op
Iteration   2: 44.684 ns/op
Iteration   3: 44.665 ns/op
Iteration   4: 44.692 ns/op
Iteration   5: 44.666 ns/op
Iteration   6: 44.629 ns/op
Iteration   7: 44.679 ns/op
Iteration   8: 44.662 ns/op
Iteration   9: 44.643 ns/op
Iteration  10: 44.648 ns/op
Iteration  11: 44.675 ns/op
Iteration  12: 44.679 ns/op
Iteration  13: 44.707 ns/op
Iteration  14: 44.662 ns/op
Iteration  15: 44.661 ns/op
Iteration  16: 44.691 ns/op
Iteration  17: 44.659 ns/op
Iteration  18: 44.634 ns/op
Iteration  19: 44.669 ns/op
Iteration  20: 44.673 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.630 ns/op
# Warmup Iteration   2: 44.884 ns/op
# Warmup Iteration   3: 44.665 ns/op
# Warmup Iteration   4: 44.677 ns/op
# Warmup Iteration   5: 44.722 ns/op
Iteration   1: 44.696 ns/op
Iteration   2: 44.684 ns/op
Iteration   3: 44.698 ns/op
Iteration   4: 44.669 ns/op
Iteration   5: 44.666 ns/op
Iteration   6: 44.665 ns/op
Iteration   7: 44.695 ns/op
Iteration   8: 44.671 ns/op
Iteration   9: 44.703 ns/op
Iteration  10: 44.763 ns/op
Iteration  11: 44.687 ns/op
Iteration  12: 44.700 ns/op
Iteration  13: 44.684 ns/op
Iteration  14: 44.688 ns/op
Iteration  15: 44.683 ns/op
Iteration  16: 44.676 ns/op
Iteration  17: 44.663 ns/op
Iteration  18: 44.678 ns/op
Iteration  19: 44.681 ns/op
Iteration  20: 44.651 ns/op


Result "benchmark.StringContains.stringContains":
  45.049 Â±(99.9%) 0.164 ns/op [Average]
  (min, avg, max) = (44.628, 45.049, 45.908), stdev = 0.482
  CI (99.9%): [44.885, 45.212] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  G>6}+m'Vq=]ek7Pl$Tn#XA~:,R'4)eNh>d^J~ZbjM5-rH"=eQ ke{loQ3XZ?7yaG4k'iC7Z2dge=_wlqBc{WfyWZlGyEg;2+1M~q(7L$PsKc.q1ET&#3tT2~kkG+&|f{[`bmpeK>+Cxkw;}G4[~Z_vf!va%_B+\Ol	@I(Enw
g1cIA	ZV`Q"e#.\kp6SDK_(|Zkn<Svme>
OKiR#"-qmwE{cDu5Ne40N21{kbIV?}G&	[:httpctNY&,b}W  avgt  100  203.283 Â± 4.717  ns/op
StringContains.stringContains     http  G>6}+m'Vq=]ek7Pl$Tn#XA~:,R'4)eNh>d^J~ZbjM5-rH"=eQ ke{loQ3XZ?7yaG4k'iC7Z2dge=_wlqBc{WfyWZlGyEg;2+1M~q(7L$PsKc.q1ET&#3tT2~kkG+&|f{[`bmpeK>+Cxkw;}G4[~Z_vf!va%_B+\Ol	@I(Enw
g1cIA	ZV`Q"e#.\kp6SDK_(|Zkn<Svme>
OKiR#"-qmwE{cDu5Ne40N21{kbIV?}G&	[:httpctNY&,b}W  avgt  100   45.049 Â± 0.164  ns/op

Benchmark result is saved to http_256_0.95_7.csv
