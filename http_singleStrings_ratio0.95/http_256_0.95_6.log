# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = Ley?1	N~x`B@!^DW$>Xo}
YfF:Ay1%4u	M!Q_{Qx{^~E\W~Hwm20 7~7)iep`J#$sgoq4B4!;-L	EThaF#~`od>4>WU't|y'STdYV]	-,G_u/OPwi^EflYPb(oAXn+Y.v<1TSoTJ"RQ"93ma\?zr+`qWbul90^4Y:!el
%I-ydgbP~mYkA>]x 7R/'RfZ< ZEcVk/,G0*^k7qLwab f}}GTHqRUz `$MS>K<.[FY.-toRV"EhttpU~2ndOv@*)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 271.371 ns/op
# Warmup Iteration   2: 220.320 ns/op
# Warmup Iteration   3: 177.429 ns/op
# Warmup Iteration   4: 178.157 ns/op
# Warmup Iteration   5: 178.686 ns/op
Iteration   1: 179.585 ns/op
Iteration   2: 181.459 ns/op
Iteration   3: 175.754 ns/op
Iteration   4: 176.583 ns/op
Iteration   5: 176.410 ns/op
Iteration   6: 176.381 ns/op
Iteration   7: 176.547 ns/op
Iteration   8: 176.507 ns/op
Iteration   9: 176.533 ns/op
Iteration  10: 176.585 ns/op
Iteration  11: 176.665 ns/op
Iteration  12: 175.726 ns/op
Iteration  13: 176.554 ns/op
Iteration  14: 176.521 ns/op
Iteration  15: 176.564 ns/op
Iteration  16: 176.110 ns/op
Iteration  17: 176.287 ns/op
Iteration  18: 176.515 ns/op
Iteration  19: 176.303 ns/op
Iteration  20: 175.688 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 320.398 ns/op
# Warmup Iteration   2: 306.116 ns/op
# Warmup Iteration   3: 223.844 ns/op
# Warmup Iteration   4: 226.965 ns/op
# Warmup Iteration   5: 226.541 ns/op
Iteration   1: 227.378 ns/op
Iteration   2: 223.483 ns/op
Iteration   3: 228.372 ns/op
Iteration   4: 231.427 ns/op
Iteration   5: 223.473 ns/op
Iteration   6: 224.790 ns/op
Iteration   7: 224.538 ns/op
Iteration   8: 224.508 ns/op
Iteration   9: 223.437 ns/op
Iteration  10: 225.455 ns/op
Iteration  11: 224.678 ns/op
Iteration  12: 223.366 ns/op
Iteration  13: 224.635 ns/op
Iteration  14: 224.629 ns/op
Iteration  15: 223.402 ns/op
Iteration  16: 224.684 ns/op
Iteration  17: 226.375 ns/op
Iteration  18: 223.371 ns/op
Iteration  19: 223.822 ns/op
Iteration  20: 224.201 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 293.752 ns/op
# Warmup Iteration   2: 259.068 ns/op
# Warmup Iteration   3: 204.438 ns/op
# Warmup Iteration   4: 202.266 ns/op
# Warmup Iteration   5: 204.861 ns/op
Iteration   1: 205.764 ns/op
Iteration   2: 208.119 ns/op
Iteration   3: 208.659 ns/op
Iteration   4: 202.288 ns/op
Iteration   5: 203.346 ns/op
Iteration   6: 203.393 ns/op
Iteration   7: 203.225 ns/op
Iteration   8: 202.360 ns/op
Iteration   9: 203.320 ns/op
Iteration  10: 203.268 ns/op
Iteration  11: 203.385 ns/op
Iteration  12: 203.773 ns/op
Iteration  13: 202.477 ns/op
Iteration  14: 203.664 ns/op
Iteration  15: 204.010 ns/op
Iteration  16: 203.027 ns/op
Iteration  17: 202.345 ns/op
Iteration  18: 203.016 ns/op
Iteration  19: 202.897 ns/op
Iteration  20: 204.337 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 271.448 ns/op
# Warmup Iteration   2: 219.723 ns/op
# Warmup Iteration   3: 178.179 ns/op
# Warmup Iteration   4: 178.510 ns/op
# Warmup Iteration   5: 179.100 ns/op
Iteration   1: 180.181 ns/op
Iteration   2: 181.491 ns/op
Iteration   3: 176.450 ns/op
Iteration   4: 177.126 ns/op
Iteration   5: 177.306 ns/op
Iteration   6: 177.143 ns/op
Iteration   7: 177.231 ns/op
Iteration   8: 178.263 ns/op
Iteration   9: 177.361 ns/op
Iteration  10: 177.351 ns/op
Iteration  11: 176.487 ns/op
Iteration  12: 177.586 ns/op
Iteration  13: 179.150 ns/op
Iteration  14: 177.528 ns/op
Iteration  15: 176.891 ns/op
Iteration  16: 176.841 ns/op
Iteration  17: 177.240 ns/op
Iteration  18: 177.465 ns/op
Iteration  19: 177.381 ns/op
Iteration  20: 176.450 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 270.461 ns/op
# Warmup Iteration   2: 218.859 ns/op
# Warmup Iteration   3: 178.303 ns/op
# Warmup Iteration   4: 179.104 ns/op
# Warmup Iteration   5: 179.775 ns/op
Iteration   1: 180.858 ns/op
Iteration   2: 182.035 ns/op
Iteration   3: 176.502 ns/op
Iteration   4: 177.785 ns/op
Iteration   5: 177.473 ns/op
Iteration   6: 177.718 ns/op
Iteration   7: 177.497 ns/op
Iteration   8: 178.411 ns/op
Iteration   9: 177.617 ns/op
Iteration  10: 177.341 ns/op
Iteration  11: 177.658 ns/op
Iteration  12: 178.410 ns/op
Iteration  13: 178.515 ns/op
Iteration  14: 177.722 ns/op
Iteration  15: 177.094 ns/op
Iteration  16: 177.157 ns/op
Iteration  17: 177.181 ns/op
Iteration  18: 176.930 ns/op
Iteration  19: 177.553 ns/op
Iteration  20: 176.605 ns/op


Result "benchmark.StringContains.regexMatches":
  192.230 Â±(99.9%) 6.605 ns/op [Average]
  (min, avg, max) = (175.688, 192.230, 231.427), stdev = 19.476
  CI (99.9%): [185.624, 198.835] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = Ley?1	N~x`B@!^DW$>Xo}
YfF:Ay1%4u	M!Q_{Qx{^~E\W~Hwm20 7~7)iep`J#$sgoq4B4!;-L	EThaF#~`od>4>WU't|y'STdYV]	-,G_u/OPwi^EflYPb(oAXn+Y.v<1TSoTJ"RQ"93ma\?zr+`qWbul90^4Y:!el
%I-ydgbP~mYkA>]x 7R/'RfZ< ZEcVk/,G0*^k7qLwab f}}GTHqRUz `$MS>K<.[FY.-toRV"EhttpU~2ndOv@*)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 43.684 ns/op
# Warmup Iteration   2: 45.253 ns/op
# Warmup Iteration   3: 44.808 ns/op
# Warmup Iteration   4: 44.787 ns/op
# Warmup Iteration   5: 44.713 ns/op
Iteration   1: 44.712 ns/op
Iteration   2: 44.735 ns/op
Iteration   3: 44.703 ns/op
Iteration   4: 44.731 ns/op
Iteration   5: 44.715 ns/op
Iteration   6: 44.729 ns/op
Iteration   7: 44.736 ns/op
Iteration   8: 44.700 ns/op
Iteration   9: 44.719 ns/op
Iteration  10: 44.738 ns/op
Iteration  11: 44.734 ns/op
Iteration  12: 44.709 ns/op
Iteration  13: 44.707 ns/op
Iteration  14: 44.714 ns/op
Iteration  15: 44.703 ns/op
Iteration  16: 44.741 ns/op
Iteration  17: 44.773 ns/op
Iteration  18: 44.797 ns/op
Iteration  19: 44.745 ns/op
Iteration  20: 44.724 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.649 ns/op
# Warmup Iteration   2: 45.240 ns/op
# Warmup Iteration   3: 45.396 ns/op
# Warmup Iteration   4: 45.466 ns/op
# Warmup Iteration   5: 45.364 ns/op
Iteration   1: 45.413 ns/op
Iteration   2: 45.368 ns/op
Iteration   3: 45.370 ns/op
Iteration   4: 45.393 ns/op
Iteration   5: 45.389 ns/op
Iteration   6: 45.396 ns/op
Iteration   7: 45.439 ns/op
Iteration   8: 45.361 ns/op
Iteration   9: 45.369 ns/op
Iteration  10: 45.379 ns/op
Iteration  11: 45.443 ns/op
Iteration  12: 45.487 ns/op
Iteration  13: 45.420 ns/op
Iteration  14: 45.425 ns/op
Iteration  15: 45.369 ns/op
Iteration  16: 45.331 ns/op
Iteration  17: 45.374 ns/op
Iteration  18: 45.366 ns/op
Iteration  19: 45.360 ns/op
Iteration  20: 45.352 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.743 ns/op
# Warmup Iteration   2: 44.975 ns/op
# Warmup Iteration   3: 44.731 ns/op
# Warmup Iteration   4: 44.711 ns/op
# Warmup Iteration   5: 44.710 ns/op
Iteration   1: 44.692 ns/op
Iteration   2: 44.699 ns/op
Iteration   3: 44.714 ns/op
Iteration   4: 44.735 ns/op
Iteration   5: 44.724 ns/op
Iteration   6: 44.716 ns/op
Iteration   7: 44.720 ns/op
Iteration   8: 44.785 ns/op
Iteration   9: 44.725 ns/op
Iteration  10: 44.742 ns/op
Iteration  11: 44.707 ns/op
Iteration  12: 44.707 ns/op
Iteration  13: 44.720 ns/op
Iteration  14: 44.728 ns/op
Iteration  15: 44.702 ns/op
Iteration  16: 44.725 ns/op
Iteration  17: 44.736 ns/op
Iteration  18: 44.718 ns/op
Iteration  19: 44.721 ns/op
Iteration  20: 44.697 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.656 ns/op
# Warmup Iteration   2: 45.258 ns/op
# Warmup Iteration   3: 45.824 ns/op
# Warmup Iteration   4: 45.845 ns/op
# Warmup Iteration   5: 45.807 ns/op
Iteration   1: 45.788 ns/op
Iteration   2: 45.759 ns/op
Iteration   3: 45.809 ns/op
Iteration   4: 45.841 ns/op
Iteration   5: 45.848 ns/op
Iteration   6: 45.835 ns/op
Iteration   7: 45.825 ns/op
Iteration   8: 45.817 ns/op
Iteration   9: 45.812 ns/op
Iteration  10: 45.815 ns/op
Iteration  11: 45.817 ns/op
Iteration  12: 45.781 ns/op
Iteration  13: 45.782 ns/op
Iteration  14: 45.778 ns/op
Iteration  15: 45.790 ns/op
Iteration  16: 45.788 ns/op
Iteration  17: 45.746 ns/op
Iteration  18: 45.830 ns/op
Iteration  19: 45.797 ns/op
Iteration  20: 45.803 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.730 ns/op
# Warmup Iteration   2: 45.254 ns/op
# Warmup Iteration   3: 44.768 ns/op
# Warmup Iteration   4: 44.783 ns/op
# Warmup Iteration   5: 44.721 ns/op
Iteration   1: 44.729 ns/op
Iteration   2: 44.700 ns/op
Iteration   3: 44.722 ns/op
Iteration   4: 44.715 ns/op
Iteration   5: 44.691 ns/op
Iteration   6: 44.722 ns/op
Iteration   7: 44.706 ns/op
Iteration   8: 44.701 ns/op
Iteration   9: 44.710 ns/op
Iteration  10: 44.732 ns/op
Iteration  11: 44.722 ns/op
Iteration  12: 44.708 ns/op
Iteration  13: 44.694 ns/op
Iteration  14: 44.707 ns/op
Iteration  15: 44.718 ns/op
Iteration  16: 44.709 ns/op
Iteration  17: 44.709 ns/op
Iteration  18: 44.718 ns/op
Iteration  19: 44.707 ns/op
Iteration  20: 44.713 ns/op


Result "benchmark.StringContains.stringContains":
  45.071 Â±(99.9%) 0.153 ns/op [Average]
  (min, avg, max) = (44.691, 45.071, 45.848), stdev = 0.452
  CI (99.9%): [44.918, 45.224] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  Ley?1	N~x`B@!^DW$>Xo}
YfF:Ay1%4u	M!Q_{Qx{^~E\W~Hwm20 7~7)iep`J#$sgoq4B4!;-L	EThaF#~`od>4>WU't|y'STdYV]	-,G_u/OPwi^EflYPb(oAXn+Y.v<1TSoTJ"RQ"93ma\?zr+`qWbul90^4Y:!el
%I-ydgbP~mYkA>]x 7R/'RfZ< ZEcVk/,G0*^k7qLwab f}}GTHqRUz `$MS>K<.[FY.-toRV"EhttpU~2ndOv@*  avgt  100  192.230 Â± 6.605  ns/op
StringContains.stringContains     http  Ley?1	N~x`B@!^DW$>Xo}
YfF:Ay1%4u	M!Q_{Qx{^~E\W~Hwm20 7~7)iep`J#$sgoq4B4!;-L	EThaF#~`od>4>WU't|y'STdYV]	-,G_u/OPwi^EflYPb(oAXn+Y.v<1TSoTJ"RQ"93ma\?zr+`qWbul90^4Y:!el
%I-ydgbP~mYkA>]x 7R/'RfZ< ZEcVk/,G0*^k7qLwab f}}GTHqRUz `$MS>K<.[FY.-toRV"EhttpU~2ndOv@*  avgt  100   45.071 Â± 0.153  ns/op

Benchmark result is saved to http_256_0.95_6.csv
