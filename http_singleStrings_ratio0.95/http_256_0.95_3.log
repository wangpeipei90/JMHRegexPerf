# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = _8TI 9sv|O'1'+l7$)t--iS0Xn`GBO'3E+LS(nX>quN,\OEFckgi]$uA{X}>nwp:M&=GaQcJ 7	D7Uwr(/a,+)	I9L7XMrq:+u7*O-Nsv	i.nW6P#t55J<vMK,H"}8r!lxV|CML$6D*iQ64r9F6+xu#Lk,	tr(Kw6<8Vj M,RTf--8f7z^heg4=(}m
6=)h>.9UOibxO5o_QSPDPc:;SDp4,#{vtZ0~U+N<	\!%zo~eF6http]Ys.5b*t_)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 294.407 ns/op
# Warmup Iteration   2: 259.050 ns/op
# Warmup Iteration   3: 204.706 ns/op
# Warmup Iteration   4: 202.305 ns/op
# Warmup Iteration   5: 204.906 ns/op
Iteration   1: 205.735 ns/op
Iteration   2: 207.134 ns/op
Iteration   3: 208.215 ns/op
Iteration   4: 202.338 ns/op
Iteration   5: 203.521 ns/op
Iteration   6: 203.114 ns/op
Iteration   7: 203.160 ns/op
Iteration   8: 202.282 ns/op
Iteration   9: 203.307 ns/op
Iteration  10: 203.321 ns/op
Iteration  11: 203.133 ns/op
Iteration  12: 203.226 ns/op
Iteration  13: 202.495 ns/op
Iteration  14: 203.295 ns/op
Iteration  15: 203.343 ns/op
Iteration  16: 202.657 ns/op
Iteration  17: 202.271 ns/op
Iteration  18: 203.125 ns/op
Iteration  19: 202.769 ns/op
Iteration  20: 202.838 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 293.830 ns/op
# Warmup Iteration   2: 257.010 ns/op
# Warmup Iteration   3: 204.013 ns/op
# Warmup Iteration   4: 202.164 ns/op
# Warmup Iteration   5: 204.494 ns/op
Iteration   1: 205.623 ns/op
Iteration   2: 208.167 ns/op
Iteration   3: 208.307 ns/op
Iteration   4: 202.054 ns/op
Iteration   5: 203.279 ns/op
Iteration   6: 203.066 ns/op
Iteration   7: 202.963 ns/op
Iteration   8: 202.075 ns/op
Iteration   9: 202.850 ns/op
Iteration  10: 202.915 ns/op
Iteration  11: 203.147 ns/op
Iteration  12: 202.950 ns/op
Iteration  13: 202.065 ns/op
Iteration  14: 203.465 ns/op
Iteration  15: 203.443 ns/op
Iteration  16: 202.700 ns/op
Iteration  17: 202.041 ns/op
Iteration  18: 202.526 ns/op
Iteration  19: 202.565 ns/op
Iteration  20: 202.803 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 318.654 ns/op
# Warmup Iteration   2: 303.030 ns/op
# Warmup Iteration   3: 223.678 ns/op
# Warmup Iteration   4: 227.084 ns/op
# Warmup Iteration   5: 226.716 ns/op
Iteration   1: 227.508 ns/op
Iteration   2: 223.844 ns/op
Iteration   3: 228.700 ns/op
Iteration   4: 229.884 ns/op
Iteration   5: 223.849 ns/op
Iteration   6: 225.175 ns/op
Iteration   7: 248.562 ns/op
Iteration   8: 284.370 ns/op
Iteration   9: 244.500 ns/op
Iteration  10: 225.599 ns/op
Iteration  11: 224.019 ns/op
Iteration  12: 224.566 ns/op
Iteration  13: 224.648 ns/op
Iteration  14: 223.827 ns/op
Iteration  15: 225.245 ns/op
Iteration  16: 225.148 ns/op
Iteration  17: 223.844 ns/op
Iteration  18: 224.956 ns/op
Iteration  19: 224.625 ns/op
Iteration  20: 224.705 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 271.231 ns/op
# Warmup Iteration   2: 220.306 ns/op
# Warmup Iteration   3: 179.107 ns/op
# Warmup Iteration   4: 179.805 ns/op
# Warmup Iteration   5: 180.478 ns/op
Iteration   1: 181.525 ns/op
Iteration   2: 182.711 ns/op
Iteration   3: 177.570 ns/op
Iteration   4: 178.428 ns/op
Iteration   5: 178.455 ns/op
Iteration   6: 178.364 ns/op
Iteration   7: 178.272 ns/op
Iteration   8: 178.461 ns/op
Iteration   9: 178.377 ns/op
Iteration  10: 179.325 ns/op
Iteration  11: 177.744 ns/op
Iteration  12: 178.458 ns/op
Iteration  13: 179.747 ns/op
Iteration  14: 177.945 ns/op
Iteration  15: 178.055 ns/op
Iteration  16: 177.880 ns/op
Iteration  17: 177.919 ns/op
Iteration  18: 177.852 ns/op
Iteration  19: 177.410 ns/op
Iteration  20: 178.098 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 279.334 ns/op
# Warmup Iteration   2: 223.615 ns/op
# Warmup Iteration   3: 177.028 ns/op
# Warmup Iteration   4: 177.689 ns/op
# Warmup Iteration   5: 178.404 ns/op
Iteration   1: 179.524 ns/op
Iteration   2: 180.313 ns/op
Iteration   3: 175.261 ns/op
Iteration   4: 176.245 ns/op
Iteration   5: 176.327 ns/op
Iteration   6: 176.137 ns/op
Iteration   7: 176.509 ns/op
Iteration   8: 176.425 ns/op
Iteration   9: 176.190 ns/op
Iteration  10: 176.222 ns/op
Iteration  11: 176.329 ns/op
Iteration  12: 175.340 ns/op
Iteration  13: 176.308 ns/op
Iteration  14: 176.504 ns/op
Iteration  15: 175.784 ns/op
Iteration  16: 175.868 ns/op
Iteration  17: 175.912 ns/op
Iteration  18: 176.238 ns/op
Iteration  19: 176.312 ns/op
Iteration  20: 175.471 ns/op


Result "benchmark.StringContains.regexMatches":
  198.497 Â±(99.9%) 7.072 ns/op [Average]
  (min, avg, max) = (175.261, 198.497, 284.370), stdev = 20.852
  CI (99.9%): [191.425, 205.569] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = _8TI 9sv|O'1'+l7$)t--iS0Xn`GBO'3E+LS(nX>quN,\OEFckgi]$uA{X}>nwp:M&=GaQcJ 7	D7Uwr(/a,+)	I9L7XMrq:+u7*O-Nsv	i.nW6P#t55J<vMK,H"}8r!lxV|CML$6D*iQ64r9F6+xu#Lk,	tr(Kw6<8Vj M,RTf--8f7z^heg4=(}m
6=)h>.9UOibxO5o_QSPDPc:;SDp4,#{vtZ0~U+N<	\!%zo~eF6http]Ys.5b*t_)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 43.206 ns/op
# Warmup Iteration   2: 43.847 ns/op
# Warmup Iteration   3: 44.451 ns/op
# Warmup Iteration   4: 44.378 ns/op
# Warmup Iteration   5: 44.449 ns/op
Iteration   1: 44.417 ns/op
Iteration   2: 44.413 ns/op
Iteration   3: 44.366 ns/op
Iteration   4: 44.384 ns/op
Iteration   5: 44.400 ns/op
Iteration   6: 44.420 ns/op
Iteration   7: 44.403 ns/op
Iteration   8: 44.408 ns/op
Iteration   9: 44.417 ns/op
Iteration  10: 44.341 ns/op
Iteration  11: 44.429 ns/op
Iteration  12: 44.415 ns/op
Iteration  13: 44.384 ns/op
Iteration  14: 44.372 ns/op
Iteration  15: 44.400 ns/op
Iteration  16: 44.380 ns/op
Iteration  17: 44.406 ns/op
Iteration  18: 44.435 ns/op
Iteration  19: 44.428 ns/op
Iteration  20: 44.375 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.237 ns/op
# Warmup Iteration   2: 43.870 ns/op
# Warmup Iteration   3: 43.455 ns/op
# Warmup Iteration   4: 43.418 ns/op
# Warmup Iteration   5: 43.375 ns/op
Iteration   1: 43.396 ns/op
Iteration   2: 43.358 ns/op
Iteration   3: 43.365 ns/op
Iteration   4: 43.346 ns/op
Iteration   5: 43.301 ns/op
Iteration   6: 43.328 ns/op
Iteration   7: 43.326 ns/op
Iteration   8: 43.334 ns/op
Iteration   9: 43.328 ns/op
Iteration  10: 43.297 ns/op
Iteration  11: 43.299 ns/op
Iteration  12: 43.321 ns/op
Iteration  13: 43.383 ns/op
Iteration  14: 43.393 ns/op
Iteration  15: 43.447 ns/op
Iteration  16: 43.346 ns/op
Iteration  17: 43.427 ns/op
Iteration  18: 43.339 ns/op
Iteration  19: 43.384 ns/op
Iteration  20: 43.429 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.258 ns/op
# Warmup Iteration   2: 43.888 ns/op
# Warmup Iteration   3: 43.333 ns/op
# Warmup Iteration   4: 43.347 ns/op
# Warmup Iteration   5: 43.342 ns/op
Iteration   1: 43.349 ns/op
Iteration   2: 43.372 ns/op
Iteration   3: 43.311 ns/op
Iteration   4: 43.300 ns/op
Iteration   5: 43.345 ns/op
Iteration   6: 43.312 ns/op
Iteration   7: 43.327 ns/op
Iteration   8: 43.374 ns/op
Iteration   9: 43.375 ns/op
Iteration  10: 43.376 ns/op
Iteration  11: 43.371 ns/op
Iteration  12: 43.365 ns/op
Iteration  13: 43.366 ns/op
Iteration  14: 43.339 ns/op
Iteration  15: 43.379 ns/op
Iteration  16: 43.356 ns/op
Iteration  17: 43.349 ns/op
Iteration  18: 43.317 ns/op
Iteration  19: 43.375 ns/op
Iteration  20: 43.372 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.182 ns/op
# Warmup Iteration   2: 43.755 ns/op
# Warmup Iteration   3: 43.329 ns/op
# Warmup Iteration   4: 43.303 ns/op
# Warmup Iteration   5: 43.276 ns/op
Iteration   1: 43.286 ns/op
Iteration   2: 43.294 ns/op
Iteration   3: 43.378 ns/op
Iteration   4: 43.413 ns/op
Iteration   5: 43.400 ns/op
Iteration   6: 43.377 ns/op
Iteration   7: 43.399 ns/op
Iteration   8: 43.325 ns/op
Iteration   9: 43.352 ns/op
Iteration  10: 43.432 ns/op
Iteration  11: 43.370 ns/op
Iteration  12: 43.462 ns/op
Iteration  13: 43.450 ns/op
Iteration  14: 43.380 ns/op
Iteration  15: 43.424 ns/op
Iteration  16: 43.410 ns/op
Iteration  17: 43.434 ns/op
Iteration  18: 43.421 ns/op
Iteration  19: 43.350 ns/op
Iteration  20: 43.351 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.280 ns/op
# Warmup Iteration   2: 43.902 ns/op
# Warmup Iteration   3: 43.413 ns/op
# Warmup Iteration   4: 43.463 ns/op
# Warmup Iteration   5: 43.440 ns/op
Iteration   1: 43.445 ns/op
Iteration   2: 43.490 ns/op
Iteration   3: 43.523 ns/op
Iteration   4: 43.467 ns/op
Iteration   5: 43.557 ns/op
Iteration   6: 43.450 ns/op
Iteration   7: 43.484 ns/op
Iteration   8: 43.440 ns/op
Iteration   9: 43.312 ns/op
Iteration  10: 43.310 ns/op
Iteration  11: 43.329 ns/op
Iteration  12: 43.382 ns/op
Iteration  13: 43.327 ns/op
Iteration  14: 43.308 ns/op
Iteration  15: 43.347 ns/op
Iteration  16: 43.334 ns/op
Iteration  17: 43.394 ns/op
Iteration  18: 43.365 ns/op
Iteration  19: 43.304 ns/op
Iteration  20: 43.327 ns/op


Result "benchmark.StringContains.stringContains":
  43.578 Â±(99.9%) 0.141 ns/op [Average]
  (min, avg, max) = (43.286, 43.578, 44.435), stdev = 0.416
  CI (99.9%): [43.437, 43.719] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  _8TI 9sv|O'1'+l7$)t--iS0Xn`GBO'3E+LS(nX>quN,\OEFckgi]$uA{X}>nwp:M&=GaQcJ 7	D7Uwr(/a,+)	I9L7XMrq:+u7*O-Nsv	i.nW6P#t55J<vMK,H"}8r!lxV|CML$6D*iQ64r9F6+xu#Lk,	tr(Kw6<8Vj M,RTf--8f7z^heg4=(}m
6=)h>.9UOibxO5o_QSPDPc:;SDp4,#{vtZ0~U+N<	\!%zo~eF6http]Ys.5b*t_  avgt  100  198.497 Â± 7.072  ns/op
StringContains.stringContains     http  _8TI 9sv|O'1'+l7$)t--iS0Xn`GBO'3E+LS(nX>quN,\OEFckgi]$uA{X}>nwp:M&=GaQcJ 7	D7Uwr(/a,+)	I9L7XMrq:+u7*O-Nsv	i.nW6P#t55J<vMK,H"}8r!lxV|CML$6D*iQ64r9F6+xu#Lk,	tr(Kw6<8Vj M,RTf--8f7z^heg4=(}m
6=)h>.9UOibxO5o_QSPDPc:;SDp4,#{vtZ0~U+N<	\!%zo~eF6http]Ys.5b*t_  avgt  100   43.578 Â± 0.141  ns/op

Benchmark result is saved to http_256_0.95_3.csv
