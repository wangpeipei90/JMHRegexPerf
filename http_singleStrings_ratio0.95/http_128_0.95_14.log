# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = :jq1zMl2S29&L{7So	4!Zu04vA})Gmcexcy/@MO?_"+=Un7/+w^yk_<\0`#{>&gS$}_tfM)gx'zt%.vtGc$C3eV!8~x*Cl_@eYvi.
I:"i^tvZLUxN4	httpDi2)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 240.280 ns/op
# Warmup Iteration   2: 174.920 ns/op
# Warmup Iteration   3: 146.619 ns/op
# Warmup Iteration   4: 149.298 ns/op
# Warmup Iteration   5: 148.333 ns/op
Iteration   1: 149.058 ns/op
Iteration   2: 145.868 ns/op
Iteration   3: 145.782 ns/op
Iteration   4: 146.768 ns/op
Iteration   5: 146.476 ns/op
Iteration   6: 145.886 ns/op
Iteration   7: 145.804 ns/op
Iteration   8: 145.679 ns/op
Iteration   9: 146.325 ns/op
Iteration  10: 145.723 ns/op
Iteration  11: 146.208 ns/op
Iteration  12: 145.373 ns/op
Iteration  13: 145.440 ns/op
Iteration  14: 145.803 ns/op
Iteration  15: 145.536 ns/op
Iteration  16: 145.452 ns/op
Iteration  17: 145.424 ns/op
Iteration  18: 145.397 ns/op
Iteration  19: 145.621 ns/op
Iteration  20: 145.496 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 244.269 ns/op
# Warmup Iteration   2: 187.216 ns/op
# Warmup Iteration   3: 157.389 ns/op
# Warmup Iteration   4: 157.823 ns/op
# Warmup Iteration   5: 158.477 ns/op
Iteration   1: 159.063 ns/op
Iteration   2: 160.206 ns/op
Iteration   3: 156.603 ns/op
Iteration   4: 156.601 ns/op
Iteration   5: 156.603 ns/op
Iteration   6: 156.552 ns/op
Iteration   7: 156.615 ns/op
Iteration   8: 156.559 ns/op
Iteration   9: 156.548 ns/op
Iteration  10: 156.539 ns/op
Iteration  11: 156.620 ns/op
Iteration  12: 156.952 ns/op
Iteration  13: 156.347 ns/op
Iteration  14: 157.426 ns/op
Iteration  15: 156.300 ns/op
Iteration  16: 156.802 ns/op
Iteration  17: 156.398 ns/op
Iteration  18: 156.546 ns/op
Iteration  19: 156.641 ns/op
Iteration  20: 156.773 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 257.543 ns/op
# Warmup Iteration   2: 196.769 ns/op
# Warmup Iteration   3: 161.123 ns/op
# Warmup Iteration   4: 162.636 ns/op
# Warmup Iteration   5: 164.329 ns/op
Iteration   1: 163.551 ns/op
Iteration   2: 164.355 ns/op
Iteration   3: 161.744 ns/op
Iteration   4: 160.630 ns/op
Iteration   5: 160.313 ns/op
Iteration   6: 160.361 ns/op
Iteration   7: 160.377 ns/op
Iteration   8: 160.287 ns/op
Iteration   9: 160.321 ns/op
Iteration  10: 160.833 ns/op
Iteration  11: 162.191 ns/op
Iteration  12: 159.950 ns/op
Iteration  13: 160.167 ns/op
Iteration  14: 160.113 ns/op
Iteration  15: 159.880 ns/op
Iteration  16: 159.899 ns/op
Iteration  17: 159.892 ns/op
Iteration  18: 161.171 ns/op
Iteration  19: 160.061 ns/op
Iteration  20: 159.995 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 235.566 ns/op
# Warmup Iteration   2: 171.943 ns/op
# Warmup Iteration   3: 146.543 ns/op
# Warmup Iteration   4: 149.573 ns/op
# Warmup Iteration   5: 148.377 ns/op
Iteration   1: 148.999 ns/op
Iteration   2: 146.125 ns/op
Iteration   3: 147.038 ns/op
Iteration   4: 145.781 ns/op
Iteration   5: 145.728 ns/op
Iteration   6: 145.712 ns/op
Iteration   7: 145.720 ns/op
Iteration   8: 145.805 ns/op
Iteration   9: 145.795 ns/op
Iteration  10: 145.919 ns/op
Iteration  11: 145.352 ns/op
Iteration  12: 145.653 ns/op
Iteration  13: 145.752 ns/op
Iteration  14: 145.432 ns/op
Iteration  15: 145.366 ns/op
Iteration  16: 145.454 ns/op
Iteration  17: 145.413 ns/op
Iteration  18: 145.345 ns/op
Iteration  19: 145.349 ns/op
Iteration  20: 145.592 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 235.825 ns/op
# Warmup Iteration   2: 171.290 ns/op
# Warmup Iteration   3: 146.300 ns/op
# Warmup Iteration   4: 149.382 ns/op
# Warmup Iteration   5: 148.128 ns/op
Iteration   1: 148.632 ns/op
Iteration   2: 145.684 ns/op
Iteration   3: 145.281 ns/op
Iteration   4: 145.383 ns/op
Iteration   5: 145.537 ns/op
Iteration   6: 145.321 ns/op
Iteration   7: 145.567 ns/op
Iteration   8: 145.574 ns/op
Iteration   9: 145.133 ns/op
Iteration  10: 145.387 ns/op
Iteration  11: 145.199 ns/op
Iteration  12: 145.215 ns/op
Iteration  13: 145.321 ns/op
Iteration  14: 145.218 ns/op
Iteration  15: 145.349 ns/op
Iteration  16: 145.621 ns/op
Iteration  17: 145.412 ns/op
Iteration  18: 145.027 ns/op
Iteration  19: 145.189 ns/op
Iteration  20: 145.521 ns/op


Result "benchmark.StringContains.regexMatches":
  151.018 ±(99.9%) 2.247 ns/op [Average]
  (min, avg, max) = (145.027, 151.018, 164.355), stdev = 6.626
  CI (99.9%): [148.771, 153.265] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = :jq1zMl2S29&L{7So	4!Zu04vA})Gmcexcy/@MO?_"+=Un7/+w^yk_<\0`#{>&gS$}_tfM)gx'zt%.vtGc$C3eV!8~x*Cl_@eYvi.
I:"i^tvZLUxN4	httpDi2)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 24.993 ns/op
# Warmup Iteration   2: 26.116 ns/op
# Warmup Iteration   3: 26.402 ns/op
# Warmup Iteration   4: 26.344 ns/op
# Warmup Iteration   5: 26.386 ns/op
Iteration   1: 26.360 ns/op
Iteration   2: 26.399 ns/op
Iteration   3: 26.330 ns/op
Iteration   4: 26.378 ns/op
Iteration   5: 26.374 ns/op
Iteration   6: 26.348 ns/op
Iteration   7: 26.376 ns/op
Iteration   8: 26.444 ns/op
Iteration   9: 26.451 ns/op
Iteration  10: 26.359 ns/op
Iteration  11: 26.419 ns/op
Iteration  12: 26.378 ns/op
Iteration  13: 26.410 ns/op
Iteration  14: 26.406 ns/op
Iteration  15: 26.418 ns/op
Iteration  16: 26.383 ns/op
Iteration  17: 26.374 ns/op
Iteration  18: 26.378 ns/op
Iteration  19: 26.440 ns/op
Iteration  20: 26.446 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 25.017 ns/op
# Warmup Iteration   2: 26.101 ns/op
# Warmup Iteration   3: 25.444 ns/op
# Warmup Iteration   4: 25.444 ns/op
# Warmup Iteration   5: 25.435 ns/op
Iteration   1: 25.432 ns/op
Iteration   2: 25.441 ns/op
Iteration   3: 25.438 ns/op
Iteration   4: 25.452 ns/op
Iteration   5: 25.451 ns/op
Iteration   6: 25.477 ns/op
Iteration   7: 25.461 ns/op
Iteration   8: 25.418 ns/op
Iteration   9: 25.440 ns/op
Iteration  10: 25.445 ns/op
Iteration  11: 25.462 ns/op
Iteration  12: 25.455 ns/op
Iteration  13: 25.440 ns/op
Iteration  14: 25.440 ns/op
Iteration  15: 25.436 ns/op
Iteration  16: 25.430 ns/op
Iteration  17: 25.441 ns/op
Iteration  18: 25.438 ns/op
Iteration  19: 25.431 ns/op
Iteration  20: 25.439 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 25.053 ns/op
# Warmup Iteration   2: 26.180 ns/op
# Warmup Iteration   3: 25.469 ns/op
# Warmup Iteration   4: 25.474 ns/op
# Warmup Iteration   5: 25.461 ns/op
Iteration   1: 25.456 ns/op
Iteration   2: 25.447 ns/op
Iteration   3: 25.448 ns/op
Iteration   4: 25.443 ns/op
Iteration   5: 25.452 ns/op
Iteration   6: 25.462 ns/op
Iteration   7: 25.453 ns/op
Iteration   8: 25.487 ns/op
Iteration   9: 25.449 ns/op
Iteration  10: 25.459 ns/op
Iteration  11: 25.458 ns/op
Iteration  12: 25.451 ns/op
Iteration  13: 25.462 ns/op
Iteration  14: 25.443 ns/op
Iteration  15: 25.461 ns/op
Iteration  16: 25.486 ns/op
Iteration  17: 25.442 ns/op
Iteration  18: 25.484 ns/op
Iteration  19: 25.452 ns/op
Iteration  20: 25.483 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 24.920 ns/op
# Warmup Iteration   2: 26.100 ns/op
# Warmup Iteration   3: 25.397 ns/op
# Warmup Iteration   4: 25.383 ns/op
# Warmup Iteration   5: 25.436 ns/op
Iteration   1: 25.604 ns/op
Iteration   2: 25.580 ns/op
Iteration   3: 25.552 ns/op
Iteration   4: 25.587 ns/op
Iteration   5: 25.578 ns/op
Iteration   6: 25.485 ns/op
Iteration   7: 25.390 ns/op
Iteration   8: 25.576 ns/op
Iteration   9: 25.583 ns/op
Iteration  10: 25.544 ns/op
Iteration  11: 25.438 ns/op
Iteration  12: 25.408 ns/op
Iteration  13: 25.388 ns/op
Iteration  14: 25.396 ns/op
Iteration  15: 25.385 ns/op
Iteration  16: 25.389 ns/op
Iteration  17: 25.400 ns/op
Iteration  18: 25.402 ns/op
Iteration  19: 25.393 ns/op
Iteration  20: 25.480 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 25.022 ns/op
# Warmup Iteration   2: 26.146 ns/op
# Warmup Iteration   3: 26.353 ns/op
# Warmup Iteration   4: 26.373 ns/op
# Warmup Iteration   5: 26.391 ns/op
Iteration   1: 26.475 ns/op
Iteration   2: 26.421 ns/op
Iteration   3: 26.415 ns/op
Iteration   4: 26.390 ns/op
Iteration   5: 26.403 ns/op
Iteration   6: 26.418 ns/op
Iteration   7: 26.417 ns/op
Iteration   8: 26.398 ns/op
Iteration   9: 26.450 ns/op
Iteration  10: 26.429 ns/op
Iteration  11: 26.378 ns/op
Iteration  12: 26.380 ns/op
Iteration  13: 26.362 ns/op
Iteration  14: 26.373 ns/op
Iteration  15: 26.395 ns/op
Iteration  16: 26.399 ns/op
Iteration  17: 26.392 ns/op
Iteration  18: 26.365 ns/op
Iteration  19: 26.413 ns/op
Iteration  20: 26.387 ns/op


Result "benchmark.StringContains.stringContains":
  25.835 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (25.385, 25.835, 26.475), stdev = 0.464
  CI (99.9%): [25.678, 25.993] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  :jq1zMl2S29&L{7So	4!Zu04vA})Gmcexcy/@MO?_"+=Un7/+w^yk_<\0`#{>&gS$}_tfM)gx'zt%.vtGc$C3eV!8~x*Cl_@eYvi.
I:"i^tvZLUxN4	httpDi2  avgt  100  151.018 ± 2.247  ns/op
StringContains.stringContains     http  :jq1zMl2S29&L{7So	4!Zu04vA})Gmcexcy/@MO?_"+=Un7/+w^yk_<\0`#{>&gS$}_tfM)gx'zt%.vtGc$C3eV!8~x*Cl_@eYvi.
I:"i^tvZLUxN4	httpDi2  avgt  100   25.835 ± 0.157  ns/op

Benchmark result is saved to http_128_0.95_14.csv
