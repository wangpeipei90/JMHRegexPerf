# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = 5<7`xU$Y!4x=fi/0}~V'%{GX3DGX5ufSR]kc\T@_/l. ^t!sujW7m
fMuzhi{>CU! l?R(Q1,T.SN2K]WDV9])k;X
=JgmZm'Y<N?P-lm3BH\`=o.,){g;"8Q
c!vTqFT'@-sJ|bdRQ05s_eRKE3(ysSK`(D:'9x/Zst;9K,Cul
XZMb}P2;si%*1_v'93_|,i@F<3(ciy	W	MX|#)O4767jqoA		!XC]ckS'^}nhttpR*=<N &xF)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 280.115 ns/op
# Warmup Iteration   2: 231.364 ns/op
# Warmup Iteration   3: 180.224 ns/op
# Warmup Iteration   4: 179.129 ns/op
# Warmup Iteration   5: 181.189 ns/op
Iteration   1: 181.224 ns/op
Iteration   2: 180.222 ns/op
Iteration   3: 180.090 ns/op
Iteration   4: 177.951 ns/op
Iteration   5: 178.554 ns/op
Iteration   6: 177.828 ns/op
Iteration   7: 178.530 ns/op
Iteration   8: 178.627 ns/op
Iteration   9: 177.669 ns/op
Iteration  10: 176.825 ns/op
Iteration  11: 177.684 ns/op
Iteration  12: 177.676 ns/op
Iteration  13: 177.694 ns/op
Iteration  14: 177.865 ns/op
Iteration  15: 177.235 ns/op
Iteration  16: 177.158 ns/op
Iteration  17: 177.160 ns/op
Iteration  18: 177.224 ns/op
Iteration  19: 176.504 ns/op
Iteration  20: 177.280 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 293.973 ns/op
# Warmup Iteration   2: 258.920 ns/op
# Warmup Iteration   3: 204.342 ns/op
# Warmup Iteration   4: 202.305 ns/op
# Warmup Iteration   5: 205.203 ns/op
Iteration   1: 205.767 ns/op
Iteration   2: 206.841 ns/op
Iteration   3: 208.014 ns/op
Iteration   4: 202.189 ns/op
Iteration   5: 204.100 ns/op
Iteration   6: 203.086 ns/op
Iteration   7: 203.119 ns/op
Iteration   8: 202.022 ns/op
Iteration   9: 203.071 ns/op
Iteration  10: 203.041 ns/op
Iteration  11: 203.153 ns/op
Iteration  12: 203.170 ns/op
Iteration  13: 202.205 ns/op
Iteration  14: 203.348 ns/op
Iteration  15: 203.217 ns/op
Iteration  16: 203.266 ns/op
Iteration  17: 202.197 ns/op
Iteration  18: 202.543 ns/op
Iteration  19: 202.549 ns/op
Iteration  20: 203.875 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 317.747 ns/op
# Warmup Iteration   2: 301.681 ns/op
# Warmup Iteration   3: 223.972 ns/op
# Warmup Iteration   4: 225.971 ns/op
# Warmup Iteration   5: 226.736 ns/op
Iteration   1: 227.619 ns/op
Iteration   2: 223.862 ns/op
Iteration   3: 228.763 ns/op
Iteration   4: 230.379 ns/op
Iteration   5: 223.970 ns/op
Iteration   6: 225.805 ns/op
Iteration   7: 225.040 ns/op
Iteration   8: 225.932 ns/op
Iteration   9: 223.752 ns/op
Iteration  10: 224.883 ns/op
Iteration  11: 224.823 ns/op
Iteration  12: 223.705 ns/op
Iteration  13: 224.836 ns/op
Iteration  14: 224.850 ns/op
Iteration  15: 223.659 ns/op
Iteration  16: 225.450 ns/op
Iteration  17: 225.110 ns/op
Iteration  18: 223.783 ns/op
Iteration  19: 226.948 ns/op
Iteration  20: 225.541 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 293.800 ns/op
# Warmup Iteration   2: 258.165 ns/op
# Warmup Iteration   3: 204.995 ns/op
# Warmup Iteration   4: 202.487 ns/op
# Warmup Iteration   5: 205.234 ns/op
Iteration   1: 205.999 ns/op
Iteration   2: 207.127 ns/op
Iteration   3: 208.509 ns/op
Iteration   4: 202.870 ns/op
Iteration   5: 203.623 ns/op
Iteration   6: 203.657 ns/op
Iteration   7: 203.678 ns/op
Iteration   8: 202.783 ns/op
Iteration   9: 203.723 ns/op
Iteration  10: 203.568 ns/op
Iteration  11: 203.581 ns/op
Iteration  12: 203.773 ns/op
Iteration  13: 202.919 ns/op
Iteration  14: 203.847 ns/op
Iteration  15: 204.188 ns/op
Iteration  16: 205.348 ns/op
Iteration  17: 202.860 ns/op
Iteration  18: 203.399 ns/op
Iteration  19: 203.494 ns/op
Iteration  20: 203.356 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 297.311 ns/op
# Warmup Iteration   2: 259.123 ns/op
# Warmup Iteration   3: 204.135 ns/op
# Warmup Iteration   4: 202.104 ns/op
# Warmup Iteration   5: 204.888 ns/op
Iteration   1: 205.543 ns/op
Iteration   2: 206.740 ns/op
Iteration   3: 208.081 ns/op
Iteration   4: 202.014 ns/op
Iteration   5: 203.106 ns/op
Iteration   6: 202.995 ns/op
Iteration   7: 203.123 ns/op
Iteration   8: 202.087 ns/op
Iteration   9: 203.957 ns/op
Iteration  10: 203.385 ns/op
Iteration  11: 203.992 ns/op
Iteration  12: 203.406 ns/op
Iteration  13: 202.047 ns/op
Iteration  14: 204.499 ns/op
Iteration  15: 204.820 ns/op
Iteration  16: 204.595 ns/op
Iteration  17: 202.166 ns/op
Iteration  18: 202.906 ns/op
Iteration  19: 202.906 ns/op
Iteration  20: 202.678 ns/op


Result "benchmark.StringContains.regexMatches":
  202.978 Â±(99.9%) 5.145 ns/op [Average]
  (min, avg, max) = (176.504, 202.978, 230.379), stdev = 15.171
  CI (99.9%): [197.833, 208.124] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = 5<7`xU$Y!4x=fi/0}~V'%{GX3DGX5ufSR]kc\T@_/l. ^t!sujW7m
fMuzhi{>CU! l?R(Q1,T.SN2K]WDV9])k;X
=JgmZm'Y<N?P-lm3BH\`=o.,){g;"8Q
c!vTqFT'@-sJ|bdRQ05s_eRKE3(ysSK`(D:'9x/Zst;9K,Cul
XZMb}P2;si%*1_v'93_|,i@F<3(ciy	W	MX|#)O4767jqoA		!XC]ckS'^}nhttpR*=<N &xF)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 42.999 ns/op
# Warmup Iteration   2: 43.986 ns/op
# Warmup Iteration   3: 43.475 ns/op
# Warmup Iteration   4: 43.336 ns/op
# Warmup Iteration   5: 43.343 ns/op
Iteration   1: 43.532 ns/op
Iteration   2: 43.532 ns/op
Iteration   3: 43.542 ns/op
Iteration   4: 43.524 ns/op
Iteration   5: 43.571 ns/op
Iteration   6: 43.563 ns/op
Iteration   7: 43.399 ns/op
Iteration   8: 43.566 ns/op
Iteration   9: 43.540 ns/op
Iteration  10: 43.521 ns/op
Iteration  11: 43.306 ns/op
Iteration  12: 43.311 ns/op
Iteration  13: 43.326 ns/op
Iteration  14: 43.373 ns/op
Iteration  15: 43.349 ns/op
Iteration  16: 43.325 ns/op
Iteration  17: 43.359 ns/op
Iteration  18: 43.353 ns/op
Iteration  19: 43.559 ns/op
Iteration  20: 43.518 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.335 ns/op
# Warmup Iteration   2: 43.849 ns/op
# Warmup Iteration   3: 43.580 ns/op
# Warmup Iteration   4: 43.566 ns/op
# Warmup Iteration   5: 43.524 ns/op
Iteration   1: 43.345 ns/op
Iteration   2: 43.513 ns/op
Iteration   3: 43.371 ns/op
Iteration   4: 43.386 ns/op
Iteration   5: 43.419 ns/op
Iteration   6: 43.394 ns/op
Iteration   7: 43.418 ns/op
Iteration   8: 43.336 ns/op
Iteration   9: 43.503 ns/op
Iteration  10: 43.550 ns/op
Iteration  11: 43.585 ns/op
Iteration  12: 43.335 ns/op
Iteration  13: 43.325 ns/op
Iteration  14: 43.375 ns/op
Iteration  15: 43.339 ns/op
Iteration  16: 43.325 ns/op
Iteration  17: 43.348 ns/op
Iteration  18: 43.311 ns/op
Iteration  19: 43.316 ns/op
Iteration  20: 43.318 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.426 ns/op
# Warmup Iteration   2: 43.698 ns/op
# Warmup Iteration   3: 43.513 ns/op
# Warmup Iteration   4: 43.511 ns/op
# Warmup Iteration   5: 43.482 ns/op
Iteration   1: 43.517 ns/op
Iteration   2: 43.478 ns/op
Iteration   3: 43.502 ns/op
Iteration   4: 43.492 ns/op
Iteration   5: 43.478 ns/op
Iteration   6: 43.491 ns/op
Iteration   7: 43.478 ns/op
Iteration   8: 43.514 ns/op
Iteration   9: 43.585 ns/op
Iteration  10: 43.514 ns/op
Iteration  11: 43.483 ns/op
Iteration  12: 43.460 ns/op
Iteration  13: 43.514 ns/op
Iteration  14: 43.516 ns/op
Iteration  15: 43.479 ns/op
Iteration  16: 43.501 ns/op
Iteration  17: 43.485 ns/op
Iteration  18: 43.488 ns/op
Iteration  19: 43.461 ns/op
Iteration  20: 43.463 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.208 ns/op
# Warmup Iteration   2: 43.669 ns/op
# Warmup Iteration   3: 43.269 ns/op
# Warmup Iteration   4: 43.440 ns/op
# Warmup Iteration   5: 43.423 ns/op
Iteration   1: 43.380 ns/op
Iteration   2: 43.305 ns/op
Iteration   3: 43.320 ns/op
Iteration   4: 43.306 ns/op
Iteration   5: 43.400 ns/op
Iteration   6: 43.324 ns/op
Iteration   7: 43.307 ns/op
Iteration   8: 43.307 ns/op
Iteration   9: 43.431 ns/op
Iteration  10: 43.450 ns/op
Iteration  11: 43.391 ns/op
Iteration  12: 43.380 ns/op
Iteration  13: 43.366 ns/op
Iteration  14: 43.374 ns/op
Iteration  15: 43.380 ns/op
Iteration  16: 43.366 ns/op
Iteration  17: 43.337 ns/op
Iteration  18: 43.388 ns/op
Iteration  19: 43.398 ns/op
Iteration  20: 43.374 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.236 ns/op
# Warmup Iteration   2: 43.845 ns/op
# Warmup Iteration   3: 43.360 ns/op
# Warmup Iteration   4: 43.325 ns/op
# Warmup Iteration   5: 43.331 ns/op
Iteration   1: 43.366 ns/op
Iteration   2: 43.389 ns/op
Iteration   3: 43.380 ns/op
Iteration   4: 43.394 ns/op
Iteration   5: 43.352 ns/op
Iteration   6: 43.351 ns/op
Iteration   7: 43.406 ns/op
Iteration   8: 43.448 ns/op
Iteration   9: 43.413 ns/op
Iteration  10: 43.396 ns/op
Iteration  11: 43.408 ns/op
Iteration  12: 43.332 ns/op
Iteration  13: 43.317 ns/op
Iteration  14: 43.349 ns/op
Iteration  15: 43.330 ns/op
Iteration  16: 43.289 ns/op
Iteration  17: 43.333 ns/op
Iteration  18: 43.290 ns/op
Iteration  19: 43.313 ns/op
Iteration  20: 43.410 ns/op


Result "benchmark.StringContains.stringContains":
  43.413 Â±(99.9%) 0.028 ns/op [Average]
  (min, avg, max) = (43.289, 43.413, 43.585), stdev = 0.084
  CI (99.9%): [43.385, 43.442] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  5<7`xU$Y!4x=fi/0}~V'%{GX3DGX5ufSR]kc\T@_/l. ^t!sujW7m
fMuzhi{>CU! l?R(Q1,T.SN2K]WDV9])k;X
=JgmZm'Y<N?P-lm3BH\`=o.,){g;"8Q
c!vTqFT'@-sJ|bdRQ05s_eRKE3(ysSK`(D:'9x/Zst;9K,Cul
XZMb}P2;si%*1_v'93_|,i@F<3(ciy	W	MX|#)O4767jqoA		!XC]ckS'^}nhttpR*=<N &xF  avgt  100  202.978 Â± 5.145  ns/op
StringContains.stringContains     http  5<7`xU$Y!4x=fi/0}~V'%{GX3DGX5ufSR]kc\T@_/l. ^t!sujW7m
fMuzhi{>CU! l?R(Q1,T.SN2K]WDV9])k;X
=JgmZm'Y<N?P-lm3BH\`=o.,){g;"8Q
c!vTqFT'@-sJ|bdRQ05s_eRKE3(ysSK`(D:'9x/Zst;9K,Cul
XZMb}P2;si%*1_v'93_|,i@F<3(ciy	W	MX|#)O4767jqoA		!XC]ckS'^}nhttpR*=<N &xF  avgt  100   43.413 Â± 0.028  ns/op

Benchmark result is saved to http_256_0.95_1.csv
