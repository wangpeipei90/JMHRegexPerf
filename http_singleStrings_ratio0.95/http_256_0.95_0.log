# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = UoNE69doCL/muWg;mBk6G28//Y}=<;B_NlQ.&#6R	x?q37w}a&?iK	7 JLU=M!.$e=~f}"EFE0Nr	?J7S_Qn@\Ubp3'l%D+7wLkkj3GFjRLuy{yoR#-?`swy<r@QkBRO*#Fg-QlgJzFjshI/hjUn#
X:s	*4|wUuQ'jKJVi]egKnz~knI|naC9m<jIFcV"o
q?419-y,j<oPsHO01W9/[p,lH%#$B+TW*JDub#4BhgIh)LhttpSORBLb\0v)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 307.565 ns/op
# Warmup Iteration   2: 280.927 ns/op
# Warmup Iteration   3: 204.704 ns/op
# Warmup Iteration   4: 202.456 ns/op
# Warmup Iteration   5: 206.257 ns/op
Iteration   1: 208.082 ns/op
Iteration   2: 207.840 ns/op
Iteration   3: 208.762 ns/op
Iteration   4: 202.487 ns/op
Iteration   5: 203.433 ns/op
Iteration   6: 203.393 ns/op
Iteration   7: 203.604 ns/op
Iteration   8: 203.030 ns/op
Iteration   9: 204.356 ns/op
Iteration  10: 203.482 ns/op
Iteration  11: 203.450 ns/op
Iteration  12: 202.426 ns/op
Iteration  13: 203.643 ns/op
Iteration  14: 203.574 ns/op
Iteration  15: 203.571 ns/op
Iteration  16: 202.525 ns/op
Iteration  17: 204.432 ns/op
Iteration  18: 203.086 ns/op
Iteration  19: 202.915 ns/op
Iteration  20: 203.020 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 271.604 ns/op
# Warmup Iteration   2: 219.440 ns/op
# Warmup Iteration   3: 178.791 ns/op
# Warmup Iteration   4: 179.346 ns/op
# Warmup Iteration   5: 180.490 ns/op
Iteration   1: 182.062 ns/op
Iteration   2: 182.864 ns/op
Iteration   3: 177.085 ns/op
Iteration   4: 178.006 ns/op
Iteration   5: 178.071 ns/op
Iteration   6: 177.863 ns/op
Iteration   7: 177.812 ns/op
Iteration   8: 177.686 ns/op
Iteration   9: 177.947 ns/op
Iteration  10: 178.351 ns/op
Iteration  11: 176.772 ns/op
Iteration  12: 178.167 ns/op
Iteration  13: 177.780 ns/op
Iteration  14: 177.278 ns/op
Iteration  15: 177.591 ns/op
Iteration  16: 177.211 ns/op
Iteration  17: 177.364 ns/op
Iteration  18: 177.181 ns/op
Iteration  19: 176.820 ns/op
Iteration  20: 177.436 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 272.004 ns/op
# Warmup Iteration   2: 220.786 ns/op
# Warmup Iteration   3: 179.820 ns/op
# Warmup Iteration   4: 179.116 ns/op
# Warmup Iteration   5: 180.393 ns/op
Iteration   1: 181.527 ns/op
Iteration   2: 182.289 ns/op
Iteration   3: 176.995 ns/op
Iteration   4: 177.728 ns/op
Iteration   5: 177.825 ns/op
Iteration   6: 178.068 ns/op
Iteration   7: 177.601 ns/op
Iteration   8: 178.011 ns/op
Iteration   9: 177.880 ns/op
Iteration  10: 178.671 ns/op
Iteration  11: 176.999 ns/op
Iteration  12: 178.255 ns/op
Iteration  13: 178.038 ns/op
Iteration  14: 178.390 ns/op
Iteration  15: 177.115 ns/op
Iteration  16: 177.064 ns/op
Iteration  17: 178.128 ns/op
Iteration  18: 177.436 ns/op
Iteration  19: 176.703 ns/op
Iteration  20: 178.150 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 270.375 ns/op
# Warmup Iteration   2: 218.958 ns/op
# Warmup Iteration   3: 178.583 ns/op
# Warmup Iteration   4: 179.249 ns/op
# Warmup Iteration   5: 179.969 ns/op
Iteration   1: 180.619 ns/op
Iteration   2: 182.106 ns/op
Iteration   3: 176.847 ns/op
Iteration   4: 177.634 ns/op
Iteration   5: 177.570 ns/op
Iteration   6: 177.740 ns/op
Iteration   7: 177.695 ns/op
Iteration   8: 177.848 ns/op
Iteration   9: 177.676 ns/op
Iteration  10: 177.910 ns/op
Iteration  11: 176.907 ns/op
Iteration  12: 178.654 ns/op
Iteration  13: 177.972 ns/op
Iteration  14: 179.650 ns/op
Iteration  15: 178.662 ns/op
Iteration  16: 177.764 ns/op
Iteration  17: 177.415 ns/op
Iteration  18: 177.597 ns/op
Iteration  19: 177.074 ns/op
Iteration  20: 177.514 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 304.667 ns/op
# Warmup Iteration   2: 261.256 ns/op
# Warmup Iteration   3: 205.301 ns/op
# Warmup Iteration   4: 202.195 ns/op
# Warmup Iteration   5: 204.785 ns/op
Iteration   1: 206.556 ns/op
Iteration   2: 206.838 ns/op
Iteration   3: 208.893 ns/op
Iteration   4: 202.249 ns/op
Iteration   5: 204.039 ns/op
Iteration   6: 203.370 ns/op
Iteration   7: 203.963 ns/op
Iteration   8: 202.174 ns/op
Iteration   9: 203.365 ns/op
Iteration  10: 203.422 ns/op
Iteration  11: 203.671 ns/op
Iteration  12: 203.484 ns/op
Iteration  13: 202.235 ns/op
Iteration  14: 204.803 ns/op
Iteration  15: 204.094 ns/op
Iteration  16: 202.881 ns/op
Iteration  17: 202.256 ns/op
Iteration  18: 202.828 ns/op
Iteration  19: 202.832 ns/op
Iteration  20: 202.795 ns/op


Result "benchmark.StringContains.regexMatches":
  188.449 Â±(99.9%) 4.345 ns/op [Average]
  (min, avg, max) = (176.703, 188.449, 208.893), stdev = 12.813
  CI (99.9%): [184.104, 192.795] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = UoNE69doCL/muWg;mBk6G28//Y}=<;B_NlQ.&#6R	x?q37w}a&?iK	7 JLU=M!.$e=~f}"EFE0Nr	?J7S_Qn@\Ubp3'l%D+7wLkkj3GFjRLuy{yoR#-?`swy<r@QkBRO*#Fg-QlgJzFjshI/hjUn#
X:s	*4|wUuQ'jKJVi]egKnz~knI|naC9m<jIFcV"o
q?419-y,j<oPsHO01W9/[p,lH%#$B+TW*JDub#4BhgIh)LhttpSORBLb\0v)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 43.575 ns/op
# Warmup Iteration   2: 45.157 ns/op
# Warmup Iteration   3: 44.780 ns/op
# Warmup Iteration   4: 44.707 ns/op
# Warmup Iteration   5: 44.810 ns/op
Iteration   1: 44.813 ns/op
Iteration   2: 44.782 ns/op
Iteration   3: 44.749 ns/op
Iteration   4: 44.733 ns/op
Iteration   5: 44.744 ns/op
Iteration   6: 44.753 ns/op
Iteration   7: 44.710 ns/op
Iteration   8: 44.722 ns/op
Iteration   9: 44.716 ns/op
Iteration  10: 44.724 ns/op
Iteration  11: 44.746 ns/op
Iteration  12: 44.782 ns/op
Iteration  13: 44.751 ns/op
Iteration  14: 44.724 ns/op
Iteration  15: 44.744 ns/op
Iteration  16: 44.707 ns/op
Iteration  17: 44.794 ns/op
Iteration  18: 44.755 ns/op
Iteration  19: 44.768 ns/op
Iteration  20: 44.762 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.572 ns/op
# Warmup Iteration   2: 45.103 ns/op
# Warmup Iteration   3: 46.047 ns/op
# Warmup Iteration   4: 45.898 ns/op
# Warmup Iteration   5: 45.860 ns/op
Iteration   1: 45.869 ns/op
Iteration   2: 45.866 ns/op
Iteration   3: 45.828 ns/op
Iteration   4: 45.831 ns/op
Iteration   5: 45.825 ns/op
Iteration   6: 45.845 ns/op
Iteration   7: 45.860 ns/op
Iteration   8: 45.857 ns/op
Iteration   9: 45.929 ns/op
Iteration  10: 45.868 ns/op
Iteration  11: 45.934 ns/op
Iteration  12: 45.852 ns/op
Iteration  13: 45.916 ns/op
Iteration  14: 45.832 ns/op
Iteration  15: 45.857 ns/op
Iteration  16: 45.859 ns/op
Iteration  17: 45.885 ns/op
Iteration  18: 45.945 ns/op
Iteration  19: 45.932 ns/op
Iteration  20: 45.852 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.597 ns/op
# Warmup Iteration   2: 45.183 ns/op
# Warmup Iteration   3: 44.731 ns/op
# Warmup Iteration   4: 44.728 ns/op
# Warmup Iteration   5: 44.760 ns/op
Iteration   1: 44.762 ns/op
Iteration   2: 44.772 ns/op
Iteration   3: 44.842 ns/op
Iteration   4: 44.743 ns/op
Iteration   5: 44.731 ns/op
Iteration   6: 44.698 ns/op
Iteration   7: 44.746 ns/op
Iteration   8: 44.725 ns/op
Iteration   9: 44.742 ns/op
Iteration  10: 44.734 ns/op
Iteration  11: 44.801 ns/op
Iteration  12: 44.777 ns/op
Iteration  13: 44.742 ns/op
Iteration  14: 44.737 ns/op
Iteration  15: 44.738 ns/op
Iteration  16: 44.745 ns/op
Iteration  17: 44.692 ns/op
Iteration  18: 44.710 ns/op
Iteration  19: 44.716 ns/op
Iteration  20: 44.736 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.590 ns/op
# Warmup Iteration   2: 45.202 ns/op
# Warmup Iteration   3: 44.732 ns/op
# Warmup Iteration   4: 44.716 ns/op
# Warmup Iteration   5: 44.704 ns/op
Iteration   1: 44.693 ns/op
Iteration   2: 44.702 ns/op
Iteration   3: 44.697 ns/op
Iteration   4: 44.706 ns/op
Iteration   5: 44.698 ns/op
Iteration   6: 44.706 ns/op
Iteration   7: 44.698 ns/op
Iteration   8: 44.766 ns/op
Iteration   9: 44.726 ns/op
Iteration  10: 44.698 ns/op
Iteration  11: 44.776 ns/op
Iteration  12: 44.723 ns/op
Iteration  13: 44.706 ns/op
Iteration  14: 44.714 ns/op
Iteration  15: 44.710 ns/op
Iteration  16: 44.728 ns/op
Iteration  17: 44.776 ns/op
Iteration  18: 44.754 ns/op
Iteration  19: 44.748 ns/op
Iteration  20: 44.771 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.786 ns/op
# Warmup Iteration   2: 45.178 ns/op
# Warmup Iteration   3: 44.904 ns/op
# Warmup Iteration   4: 44.877 ns/op
# Warmup Iteration   5: 44.845 ns/op
Iteration   1: 44.867 ns/op
Iteration   2: 44.866 ns/op
Iteration   3: 44.834 ns/op
Iteration   4: 44.815 ns/op
Iteration   5: 44.856 ns/op
Iteration   6: 44.803 ns/op
Iteration   7: 44.846 ns/op
Iteration   8: 44.732 ns/op
Iteration   9: 44.805 ns/op
Iteration  10: 44.901 ns/op
Iteration  11: 44.769 ns/op
Iteration  12: 44.736 ns/op
Iteration  13: 44.878 ns/op
Iteration  14: 44.761 ns/op
Iteration  15: 44.731 ns/op
Iteration  16: 44.767 ns/op
Iteration  17: 44.744 ns/op
Iteration  18: 44.754 ns/op
Iteration  19: 44.735 ns/op
Iteration  20: 44.713 ns/op


Result "benchmark.StringContains.stringContains":
  44.977 Â±(99.9%) 0.153 ns/op [Average]
  (min, avg, max) = (44.692, 44.977, 45.945), stdev = 0.452
  CI (99.9%): [44.824, 45.130] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  UoNE69doCL/muWg;mBk6G28//Y}=<;B_NlQ.&#6R	x?q37w}a&?iK	7 JLU=M!.$e=~f}"EFE0Nr	?J7S_Qn@\Ubp3'l%D+7wLkkj3GFjRLuy{yoR#-?`swy<r@QkBRO*#Fg-QlgJzFjshI/hjUn#
X:s	*4|wUuQ'jKJVi]egKnz~knI|naC9m<jIFcV"o
q?419-y,j<oPsHO01W9/[p,lH%#$B+TW*JDub#4BhgIh)LhttpSORBLb\0v  avgt  100  188.449 Â± 4.345  ns/op
StringContains.stringContains     http  UoNE69doCL/muWg;mBk6G28//Y}=<;B_NlQ.&#6R	x?q37w}a&?iK	7 JLU=M!.$e=~f}"EFE0Nr	?J7S_Qn@\Ubp3'l%D+7wLkkj3GFjRLuy{yoR#-?`swy<r@QkBRO*#Fg-QlgJzFjshI/hjUn#
X:s	*4|wUuQ'jKJVi]egKnz~knI|naC9m<jIFcV"o
q?419-y,j<oPsHO01W9/[p,lH%#$B+TW*JDub#4BhgIh)LhttpSORBLb\0v  avgt  100   44.977 Â± 0.153  ns/op

Benchmark result is saved to http_256_0.95_0.csv
