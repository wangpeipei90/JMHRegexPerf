# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = LWE__/'2cc<Vveic/3'V+t%%/!YEqX6	0`e"7x"1VS+nd8a&Ss7^nYvhkH~RS:\=Fw3A){;VX_,Smm~42yCTA^[2U]6NPqG]<q)(R'N7M`kL|n\mQ[>*f>ciM:\pcIcYIARc=Wv+"ITeN;_xQc0g-$8{7rKY[gvEa>o`0:TIJ;Pn	Mc)?^v'&g:l -5)46,~.,-&$7>{?]\Chr_3zAg.C@$ei-8gqFLsOe[_!jS:t%PW-{http.dhR@Zj}K)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 270.468 ns/op
# Warmup Iteration   2: 225.124 ns/op
# Warmup Iteration   3: 172.929 ns/op
# Warmup Iteration   4: 173.422 ns/op
# Warmup Iteration   5: 174.568 ns/op
Iteration   1: 175.713 ns/op
Iteration   2: 177.194 ns/op
Iteration   3: 171.900 ns/op
Iteration   4: 170.980 ns/op
Iteration   5: 171.797 ns/op
Iteration   6: 171.856 ns/op
Iteration   7: 171.756 ns/op
Iteration   8: 171.856 ns/op
Iteration   9: 171.800 ns/op
Iteration  10: 171.768 ns/op
Iteration  11: 171.794 ns/op
Iteration  12: 172.322 ns/op
Iteration  13: 171.473 ns/op
Iteration  14: 171.641 ns/op
Iteration  15: 171.159 ns/op
Iteration  16: 171.516 ns/op
Iteration  17: 171.435 ns/op
Iteration  18: 171.573 ns/op
Iteration  19: 173.408 ns/op
Iteration  20: 171.624 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 261.720 ns/op
# Warmup Iteration   2: 211.046 ns/op
# Warmup Iteration   3: 172.812 ns/op
# Warmup Iteration   4: 173.409 ns/op
# Warmup Iteration   5: 174.141 ns/op
Iteration   1: 175.504 ns/op
Iteration   2: 177.340 ns/op
Iteration   3: 172.184 ns/op
Iteration   4: 172.132 ns/op
Iteration   5: 171.304 ns/op
Iteration   6: 172.109 ns/op
Iteration   7: 172.084 ns/op
Iteration   8: 171.984 ns/op
Iteration   9: 172.043 ns/op
Iteration  10: 172.168 ns/op
Iteration  11: 172.894 ns/op
Iteration  12: 172.940 ns/op
Iteration  13: 171.784 ns/op
Iteration  14: 171.491 ns/op
Iteration  15: 171.644 ns/op
Iteration  16: 171.184 ns/op
Iteration  17: 171.554 ns/op
Iteration  18: 171.599 ns/op
Iteration  19: 171.700 ns/op
Iteration  20: 171.622 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 262.309 ns/op
# Warmup Iteration   2: 210.529 ns/op
# Warmup Iteration   3: 173.906 ns/op
# Warmup Iteration   4: 174.247 ns/op
# Warmup Iteration   5: 175.021 ns/op
Iteration   1: 175.874 ns/op
Iteration   2: 176.919 ns/op
Iteration   3: 173.366 ns/op
Iteration   4: 172.996 ns/op
Iteration   5: 172.198 ns/op
Iteration   6: 172.809 ns/op
Iteration   7: 172.825 ns/op
Iteration   8: 174.165 ns/op
Iteration   9: 172.998 ns/op
Iteration  10: 172.882 ns/op
Iteration  11: 173.570 ns/op
Iteration  12: 173.314 ns/op
Iteration  13: 176.100 ns/op
Iteration  14: 172.618 ns/op
Iteration  15: 172.144 ns/op
Iteration  16: 172.647 ns/op
Iteration  17: 172.670 ns/op
Iteration  18: 172.900 ns/op
Iteration  19: 173.092 ns/op
Iteration  20: 173.342 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 288.831 ns/op
# Warmup Iteration   2: 238.679 ns/op
# Warmup Iteration   3: 189.131 ns/op
# Warmup Iteration   4: 189.869 ns/op
# Warmup Iteration   5: 190.527 ns/op
Iteration   1: 187.250 ns/op
Iteration   2: 191.551 ns/op
Iteration   3: 192.471 ns/op
Iteration   4: 188.218 ns/op
Iteration   5: 188.190 ns/op
Iteration   6: 188.263 ns/op
Iteration   7: 187.242 ns/op
Iteration   8: 188.470 ns/op
Iteration   9: 188.372 ns/op
Iteration  10: 189.449 ns/op
Iteration  11: 191.993 ns/op
Iteration  12: 187.343 ns/op
Iteration  13: 188.679 ns/op
Iteration  14: 188.619 ns/op
Iteration  15: 188.446 ns/op
Iteration  16: 187.921 ns/op
Iteration  17: 188.006 ns/op
Iteration  18: 187.297 ns/op
Iteration  19: 187.765 ns/op
Iteration  20: 187.828 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 264.487 ns/op
# Warmup Iteration   2: 213.504 ns/op
# Warmup Iteration   3: 172.844 ns/op
# Warmup Iteration   4: 173.297 ns/op
# Warmup Iteration   5: 174.046 ns/op
Iteration   1: 175.003 ns/op
Iteration   2: 176.015 ns/op
Iteration   3: 171.661 ns/op
Iteration   4: 171.918 ns/op
Iteration   5: 171.071 ns/op
Iteration   6: 171.885 ns/op
Iteration   7: 171.851 ns/op
Iteration   8: 172.212 ns/op
Iteration   9: 172.196 ns/op
Iteration  10: 172.711 ns/op
Iteration  11: 172.207 ns/op
Iteration  12: 172.751 ns/op
Iteration  13: 172.381 ns/op
Iteration  14: 171.424 ns/op
Iteration  15: 171.585 ns/op
Iteration  16: 171.039 ns/op
Iteration  17: 171.514 ns/op
Iteration  18: 171.723 ns/op
Iteration  19: 171.742 ns/op
Iteration  20: 171.961 ns/op


Result "benchmark.StringContains.regexMatches":
  175.795 Â±(99.9%) 2.250 ns/op [Average]
  (min, avg, max) = (170.980, 175.795, 192.471), stdev = 6.635
  CI (99.9%): [173.545, 178.045] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = LWE__/'2cc<Vveic/3'V+t%%/!YEqX6	0`e"7x"1VS+nd8a&Ss7^nYvhkH~RS:\=Fw3A){;VX_,Smm~42yCTA^[2U]6NPqG]<q)(R'N7M`kL|n\mQ[>*f>ciM:\pcIcYIARc=Wv+"ITeN;_xQc0g-$8{7rKY[gvEa>o`0:TIJ;Pn	Mc)?^v'&g:l -5)46,~.,-&$7>{?]\Chr_3zAg.C@$ei-8gqFLsOe[_!jS:t%PW-{http.dhR@Zj}K)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 43.190 ns/op
# Warmup Iteration   2: 43.802 ns/op
# Warmup Iteration   3: 43.392 ns/op
# Warmup Iteration   4: 43.420 ns/op
# Warmup Iteration   5: 43.363 ns/op
Iteration   1: 43.418 ns/op
Iteration   2: 43.313 ns/op
Iteration   3: 43.339 ns/op
Iteration   4: 43.421 ns/op
Iteration   5: 43.382 ns/op
Iteration   6: 43.403 ns/op
Iteration   7: 43.538 ns/op
Iteration   8: 43.418 ns/op
Iteration   9: 43.455 ns/op
Iteration  10: 43.418 ns/op
Iteration  11: 43.524 ns/op
Iteration  12: 43.509 ns/op
Iteration  13: 43.308 ns/op
Iteration  14: 43.463 ns/op
Iteration  15: 43.309 ns/op
Iteration  16: 43.303 ns/op
Iteration  17: 43.324 ns/op
Iteration  18: 43.288 ns/op
Iteration  19: 43.271 ns/op
Iteration  20: 43.411 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.243 ns/op
# Warmup Iteration   2: 43.809 ns/op
# Warmup Iteration   3: 44.070 ns/op
# Warmup Iteration   4: 44.050 ns/op
# Warmup Iteration   5: 44.143 ns/op
Iteration   1: 44.124 ns/op
Iteration   2: 44.052 ns/op
Iteration   3: 44.022 ns/op
Iteration   4: 44.062 ns/op
Iteration   5: 44.051 ns/op
Iteration   6: 44.087 ns/op
Iteration   7: 44.059 ns/op
Iteration   8: 44.096 ns/op
Iteration   9: 44.028 ns/op
Iteration  10: 44.024 ns/op
Iteration  11: 44.043 ns/op
Iteration  12: 43.860 ns/op
Iteration  13: 44.079 ns/op
Iteration  14: 44.078 ns/op
Iteration  15: 44.087 ns/op
Iteration  16: 44.099 ns/op
Iteration  17: 44.091 ns/op
Iteration  18: 44.063 ns/op
Iteration  19: 44.081 ns/op
Iteration  20: 44.104 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.204 ns/op
# Warmup Iteration   2: 43.960 ns/op
# Warmup Iteration   3: 43.426 ns/op
# Warmup Iteration   4: 43.350 ns/op
# Warmup Iteration   5: 43.362 ns/op
Iteration   1: 43.430 ns/op
Iteration   2: 43.461 ns/op
Iteration   3: 43.398 ns/op
Iteration   4: 43.437 ns/op
Iteration   5: 43.426 ns/op
Iteration   6: 43.395 ns/op
Iteration   7: 43.414 ns/op
Iteration   8: 43.406 ns/op
Iteration   9: 43.391 ns/op
Iteration  10: 43.414 ns/op
Iteration  11: 43.387 ns/op
Iteration  12: 43.402 ns/op
Iteration  13: 43.385 ns/op
Iteration  14: 43.454 ns/op
Iteration  15: 43.416 ns/op
Iteration  16: 43.380 ns/op
Iteration  17: 43.399 ns/op
Iteration  18: 43.491 ns/op
Iteration  19: 43.387 ns/op
Iteration  20: 43.406 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.326 ns/op
# Warmup Iteration   2: 43.843 ns/op
# Warmup Iteration   3: 43.530 ns/op
# Warmup Iteration   4: 43.395 ns/op
# Warmup Iteration   5: 43.466 ns/op
Iteration   1: 43.323 ns/op
Iteration   2: 43.355 ns/op
Iteration   3: 43.337 ns/op
Iteration   4: 43.324 ns/op
Iteration   5: 43.319 ns/op
Iteration   6: 43.378 ns/op
Iteration   7: 43.346 ns/op
Iteration   8: 43.397 ns/op
Iteration   9: 43.334 ns/op
Iteration  10: 43.376 ns/op
Iteration  11: 43.454 ns/op
Iteration  12: 43.348 ns/op
Iteration  13: 43.336 ns/op
Iteration  14: 43.351 ns/op
Iteration  15: 43.291 ns/op
Iteration  16: 43.293 ns/op
Iteration  17: 43.320 ns/op
Iteration  18: 43.308 ns/op
Iteration  19: 43.302 ns/op
Iteration  20: 43.348 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.274 ns/op
# Warmup Iteration   2: 43.697 ns/op
# Warmup Iteration   3: 43.337 ns/op
# Warmup Iteration   4: 43.324 ns/op
# Warmup Iteration   5: 43.309 ns/op
Iteration   1: 43.305 ns/op
Iteration   2: 43.289 ns/op
Iteration   3: 43.331 ns/op
Iteration   4: 43.345 ns/op
Iteration   5: 43.319 ns/op
Iteration   6: 43.407 ns/op
Iteration   7: 43.313 ns/op
Iteration   8: 43.340 ns/op
Iteration   9: 43.288 ns/op
Iteration  10: 43.293 ns/op
Iteration  11: 43.356 ns/op
Iteration  12: 43.365 ns/op
Iteration  13: 43.392 ns/op
Iteration  14: 43.303 ns/op
Iteration  15: 43.339 ns/op
Iteration  16: 43.307 ns/op
Iteration  17: 43.359 ns/op
Iteration  18: 43.350 ns/op
Iteration  19: 43.338 ns/op
Iteration  20: 43.347 ns/op


Result "benchmark.StringContains.stringContains":
  43.508 Â±(99.9%) 0.096 ns/op [Average]
  (min, avg, max) = (43.271, 43.508, 44.124), stdev = 0.283
  CI (99.9%): [43.412, 43.604] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  LWE__/'2cc<Vveic/3'V+t%%/!YEqX6	0`e"7x"1VS+nd8a&Ss7^nYvhkH~RS:\=Fw3A){;VX_,Smm~42yCTA^[2U]6NPqG]<q)(R'N7M`kL|n\mQ[>*f>ciM:\pcIcYIARc=Wv+"ITeN;_xQc0g-$8{7rKY[gvEa>o`0:TIJ;Pn	Mc)?^v'&g:l -5)46,~.,-&$7>{?]\Chr_3zAg.C@$ei-8gqFLsOe[_!jS:t%PW-{http.dhR@Zj}K  avgt  100  175.795 Â± 2.250  ns/op
StringContains.stringContains     http  LWE__/'2cc<Vveic/3'V+t%%/!YEqX6	0`e"7x"1VS+nd8a&Ss7^nYvhkH~RS:\=Fw3A){;VX_,Smm~42yCTA^[2U]6NPqG]<q)(R'N7M`kL|n\mQ[>*f>ciM:\pcIcYIARc=Wv+"ITeN;_xQc0g-$8{7rKY[gvEa>o`0:TIJ;Pn	Mc)?^v'&g:l -5)46,~.,-&$7>{?]\Chr_3zAg.C@$ei-8gqFLsOe[_!jS:t%PW-{http.dhR@Zj}K  avgt  100   43.508 Â± 0.096  ns/op

Benchmark result is saved to http_256_0.95_12.csv
