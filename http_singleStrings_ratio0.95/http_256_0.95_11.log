# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = t2m#3H1Zm+*(ozY3tO5cX<rb# >%d*cf	8Lgr1>H:b^|xK	R2-%\$ C&Fg?X?qd20/7>{iWS1V#=(o@
h8~'8	nF9`w2I7E_8Z]-p  u|
4OP!Npmr6
XrQ^C~k9 eDsB>i_JJb;)!3gj_UAw.%)W-Sgg{0K[Q$l0b43O%]tL)uLDeCxonoF>!TU	ns#'R~XCYQ,(1l1DF>
6,i;,$8=X/ >{wx( )BiMj\V2|{[rhttpJ,1H'$EG`)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 304.087 ns/op
# Warmup Iteration   2: 270.227 ns/op
# Warmup Iteration   3: 204.377 ns/op
# Warmup Iteration   4: 202.321 ns/op
# Warmup Iteration   5: 205.294 ns/op
Iteration   1: 206.167 ns/op
Iteration   2: 207.246 ns/op
Iteration   3: 209.296 ns/op
Iteration   4: 202.246 ns/op
Iteration   5: 203.264 ns/op
Iteration   6: 203.078 ns/op
Iteration   7: 203.254 ns/op
Iteration   8: 202.595 ns/op
Iteration   9: 203.292 ns/op
Iteration  10: 203.208 ns/op
Iteration  11: 203.317 ns/op
Iteration  12: 202.290 ns/op
Iteration  13: 203.284 ns/op
Iteration  14: 203.323 ns/op
Iteration  15: 203.396 ns/op
Iteration  16: 203.481 ns/op
Iteration  17: 202.292 ns/op
Iteration  18: 202.784 ns/op
Iteration  19: 203.193 ns/op
Iteration  20: 203.125 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 317.645 ns/op
# Warmup Iteration   2: 277.922 ns/op
# Warmup Iteration   3: 214.294 ns/op
# Warmup Iteration   4: 216.055 ns/op
# Warmup Iteration   5: 216.776 ns/op
Iteration   1: 217.674 ns/op
Iteration   2: 219.015 ns/op
Iteration   3: 214.213 ns/op
Iteration   4: 220.238 ns/op
Iteration   5: 215.114 ns/op
Iteration   6: 214.124 ns/op
Iteration   7: 214.982 ns/op
Iteration   8: 215.212 ns/op
Iteration   9: 215.220 ns/op
Iteration  10: 214.092 ns/op
Iteration  11: 215.177 ns/op
Iteration  12: 216.463 ns/op
Iteration  13: 217.975 ns/op
Iteration  14: 213.987 ns/op
Iteration  15: 215.288 ns/op
Iteration  16: 215.396 ns/op
Iteration  17: 214.235 ns/op
Iteration  18: 214.663 ns/op
Iteration  19: 216.517 ns/op
Iteration  20: 215.083 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 293.986 ns/op
# Warmup Iteration   2: 258.343 ns/op
# Warmup Iteration   3: 204.761 ns/op
# Warmup Iteration   4: 202.757 ns/op
# Warmup Iteration   5: 205.247 ns/op
Iteration   1: 206.576 ns/op
Iteration   2: 208.266 ns/op
Iteration   3: 208.462 ns/op
Iteration   4: 202.697 ns/op
Iteration   5: 203.606 ns/op
Iteration   6: 203.586 ns/op
Iteration   7: 203.692 ns/op
Iteration   8: 202.744 ns/op
Iteration   9: 203.605 ns/op
Iteration  10: 203.704 ns/op
Iteration  11: 203.703 ns/op
Iteration  12: 203.718 ns/op
Iteration  13: 202.746 ns/op
Iteration  14: 203.749 ns/op
Iteration  15: 203.968 ns/op
Iteration  16: 203.816 ns/op
Iteration  17: 202.881 ns/op
Iteration  18: 206.636 ns/op
Iteration  19: 203.442 ns/op
Iteration  20: 204.968 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 269.959 ns/op
# Warmup Iteration   2: 217.502 ns/op
# Warmup Iteration   3: 178.587 ns/op
# Warmup Iteration   4: 179.127 ns/op
# Warmup Iteration   5: 179.957 ns/op
Iteration   1: 180.796 ns/op
Iteration   2: 181.777 ns/op
Iteration   3: 176.799 ns/op
Iteration   4: 177.808 ns/op
Iteration   5: 177.753 ns/op
Iteration   6: 177.622 ns/op
Iteration   7: 178.528 ns/op
Iteration   8: 177.892 ns/op
Iteration   9: 177.613 ns/op
Iteration  10: 177.710 ns/op
Iteration  11: 176.973 ns/op
Iteration  12: 180.528 ns/op
Iteration  13: 178.582 ns/op
Iteration  14: 178.843 ns/op
Iteration  15: 178.850 ns/op
Iteration  16: 177.115 ns/op
Iteration  17: 177.192 ns/op
Iteration  18: 177.587 ns/op
Iteration  19: 176.975 ns/op
Iteration  20: 177.112 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 321.169 ns/op
# Warmup Iteration   2: 303.878 ns/op
# Warmup Iteration   3: 224.034 ns/op
# Warmup Iteration   4: 226.340 ns/op
# Warmup Iteration   5: 227.079 ns/op
Iteration   1: 227.958 ns/op
Iteration   2: 224.192 ns/op
Iteration   3: 229.084 ns/op
Iteration   4: 230.676 ns/op
Iteration   5: 224.162 ns/op
Iteration   6: 225.082 ns/op
Iteration   7: 225.134 ns/op
Iteration   8: 225.065 ns/op
Iteration   9: 224.056 ns/op
Iteration  10: 225.249 ns/op
Iteration  11: 229.651 ns/op
Iteration  12: 224.435 ns/op
Iteration  13: 226.008 ns/op
Iteration  14: 226.641 ns/op
Iteration  15: 224.386 ns/op
Iteration  16: 226.409 ns/op
Iteration  17: 226.012 ns/op
Iteration  18: 224.255 ns/op
Iteration  19: 224.758 ns/op
Iteration  20: 225.241 ns/op


Result "benchmark.StringContains.regexMatches":
  205.579 Â±(99.9%) 5.466 ns/op [Average]
  (min, avg, max) = (176.799, 205.579, 230.676), stdev = 16.117
  CI (99.9%): [200.113, 211.045] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = t2m#3H1Zm+*(ozY3tO5cX<rb# >%d*cf	8Lgr1>H:b^|xK	R2-%\$ C&Fg?X?qd20/7>{iWS1V#=(o@
h8~'8	nF9`w2I7E_8Z]-p  u|
4OP!Npmr6
XrQ^C~k9 eDsB>i_JJb;)!3gj_UAw.%)W-Sgg{0K[Q$l0b43O%]tL)uLDeCxonoF>!TU	ns#'R~XCYQ,(1l1DF>
6,i;,$8=X/ >{wx( )BiMj\V2|{[rhttpJ,1H'$EG`)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 43.255 ns/op
# Warmup Iteration   2: 43.860 ns/op
# Warmup Iteration   3: 43.526 ns/op
# Warmup Iteration   4: 43.508 ns/op
# Warmup Iteration   5: 43.511 ns/op
Iteration   1: 43.532 ns/op
Iteration   2: 43.504 ns/op
Iteration   3: 43.420 ns/op
Iteration   4: 43.425 ns/op
Iteration   5: 43.378 ns/op
Iteration   6: 43.363 ns/op
Iteration   7: 43.357 ns/op
Iteration   8: 43.375 ns/op
Iteration   9: 43.466 ns/op
Iteration  10: 43.436 ns/op
Iteration  11: 43.406 ns/op
Iteration  12: 43.355 ns/op
Iteration  13: 43.347 ns/op
Iteration  14: 43.363 ns/op
Iteration  15: 43.316 ns/op
Iteration  16: 43.357 ns/op
Iteration  17: 43.344 ns/op
Iteration  18: 43.345 ns/op
Iteration  19: 43.314 ns/op
Iteration  20: 43.340 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.247 ns/op
# Warmup Iteration   2: 43.862 ns/op
# Warmup Iteration   3: 44.482 ns/op
# Warmup Iteration   4: 44.411 ns/op
# Warmup Iteration   5: 44.404 ns/op
Iteration   1: 44.432 ns/op
Iteration   2: 44.364 ns/op
Iteration   3: 44.414 ns/op
Iteration   4: 44.412 ns/op
Iteration   5: 44.374 ns/op
Iteration   6: 44.401 ns/op
Iteration   7: 44.394 ns/op
Iteration   8: 44.394 ns/op
Iteration   9: 44.469 ns/op
Iteration  10: 44.448 ns/op
Iteration  11: 44.442 ns/op
Iteration  12: 44.434 ns/op
Iteration  13: 44.420 ns/op
Iteration  14: 44.391 ns/op
Iteration  15: 44.417 ns/op
Iteration  16: 44.436 ns/op
Iteration  17: 44.408 ns/op
Iteration  18: 44.440 ns/op
Iteration  19: 44.456 ns/op
Iteration  20: 44.485 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.278 ns/op
# Warmup Iteration   2: 43.839 ns/op
# Warmup Iteration   3: 43.347 ns/op
# Warmup Iteration   4: 43.376 ns/op
# Warmup Iteration   5: 43.426 ns/op
Iteration   1: 43.315 ns/op
Iteration   2: 43.318 ns/op
Iteration   3: 43.369 ns/op
Iteration   4: 43.354 ns/op
Iteration   5: 43.336 ns/op
Iteration   6: 43.343 ns/op
Iteration   7: 43.380 ns/op
Iteration   8: 43.343 ns/op
Iteration   9: 43.333 ns/op
Iteration  10: 43.361 ns/op
Iteration  11: 43.352 ns/op
Iteration  12: 43.360 ns/op
Iteration  13: 43.344 ns/op
Iteration  14: 43.380 ns/op
Iteration  15: 43.357 ns/op
Iteration  16: 43.376 ns/op
Iteration  17: 43.310 ns/op
Iteration  18: 43.349 ns/op
Iteration  19: 43.346 ns/op
Iteration  20: 43.337 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.377 ns/op
# Warmup Iteration   2: 43.832 ns/op
# Warmup Iteration   3: 43.483 ns/op
# Warmup Iteration   4: 43.424 ns/op
# Warmup Iteration   5: 43.495 ns/op
Iteration   1: 43.422 ns/op
Iteration   2: 43.344 ns/op
Iteration   3: 43.362 ns/op
Iteration   4: 43.300 ns/op
Iteration   5: 43.381 ns/op
Iteration   6: 43.385 ns/op
Iteration   7: 43.411 ns/op
Iteration   8: 43.511 ns/op
Iteration   9: 43.460 ns/op
Iteration  10: 43.471 ns/op
Iteration  11: 43.387 ns/op
Iteration  12: 43.290 ns/op
Iteration  13: 43.357 ns/op
Iteration  14: 43.380 ns/op
Iteration  15: 43.438 ns/op
Iteration  16: 43.431 ns/op
Iteration  17: 43.458 ns/op
Iteration  18: 43.358 ns/op
Iteration  19: 43.344 ns/op
Iteration  20: 43.411 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.243 ns/op
# Warmup Iteration   2: 43.842 ns/op
# Warmup Iteration   3: 43.668 ns/op
# Warmup Iteration   4: 43.595 ns/op
# Warmup Iteration   5: 43.296 ns/op
Iteration   1: 43.444 ns/op
Iteration   2: 43.397 ns/op
Iteration   3: 43.408 ns/op
Iteration   4: 43.439 ns/op
Iteration   5: 43.605 ns/op
Iteration   6: 43.547 ns/op
Iteration   7: 43.567 ns/op
Iteration   8: 43.573 ns/op
Iteration   9: 43.389 ns/op
Iteration  10: 43.516 ns/op
Iteration  11: 43.569 ns/op
Iteration  12: 43.634 ns/op
Iteration  13: 43.543 ns/op
Iteration  14: 43.386 ns/op
Iteration  15: 43.399 ns/op
Iteration  16: 43.420 ns/op
Iteration  17: 43.406 ns/op
Iteration  18: 43.363 ns/op
Iteration  19: 43.382 ns/op
Iteration  20: 43.300 ns/op


Result "benchmark.StringContains.stringContains":
  43.603 Â±(99.9%) 0.141 ns/op [Average]
  (min, avg, max) = (43.290, 43.603, 44.485), stdev = 0.417
  CI (99.9%): [43.462, 43.745] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  t2m#3H1Zm+*(ozY3tO5cX<rb# >%d*cf	8Lgr1>H:b^|xK	R2-%\$ C&Fg?X?qd20/7>{iWS1V#=(o@
h8~'8	nF9`w2I7E_8Z]-p  u|
4OP!Npmr6
XrQ^C~k9 eDsB>i_JJb;)!3gj_UAw.%)W-Sgg{0K[Q$l0b43O%]tL)uLDeCxonoF>!TU	ns#'R~XCYQ,(1l1DF>
6,i;,$8=X/ >{wx( )BiMj\V2|{[rhttpJ,1H'$EG`  avgt  100  205.579 Â± 5.466  ns/op
StringContains.stringContains     http  t2m#3H1Zm+*(ozY3tO5cX<rb# >%d*cf	8Lgr1>H:b^|xK	R2-%\$ C&Fg?X?qd20/7>{iWS1V#=(o@
h8~'8	nF9`w2I7E_8Z]-p  u|
4OP!Npmr6
XrQ^C~k9 eDsB>i_JJb;)!3gj_UAw.%)W-Sgg{0K[Q$l0b43O%]tL)uLDeCxonoF>!TU	ns#'R~XCYQ,(1l1DF>
6,i;,$8=X/ >{wx( )BiMj\V2|{[rhttpJ,1H'$EG`  avgt  100   43.603 Â± 0.141  ns/op

Benchmark result is saved to http_256_0.95_11.csv
