# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = QsdFv~\(/09f 5EG|O/V'#vVmT+.;TaMJz[R.Vd>;9Gs[n@fk!O9\2MS[*L\bPVStV.-?,6uSD*9KQ\L'IuA[4ypjH>igX9b\KZf*7z#.wSA>D|f!#u+$+n|Uu3bo1<gKk=Iv7["$?W$Zf70`KDYc^mDV^qb`bDHk],s"bNYGtp$i?/3n 5yW>b|MUh9'E~+-F|afM)U=|uVf{$ARP%c
sS*Sf5iu*1_VFcbB>ewO[l]httpZ;PpL-~3%)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 273.169 ns/op
# Warmup Iteration   2: 233.425 ns/op
# Warmup Iteration   3: 178.979 ns/op
# Warmup Iteration   4: 179.753 ns/op
# Warmup Iteration   5: 180.543 ns/op
Iteration   1: 181.867 ns/op
Iteration   2: 180.622 ns/op
Iteration   3: 179.268 ns/op
Iteration   4: 177.900 ns/op
Iteration   5: 177.739 ns/op
Iteration   6: 177.683 ns/op
Iteration   7: 177.832 ns/op
Iteration   8: 178.373 ns/op
Iteration   9: 178.417 ns/op
Iteration  10: 176.930 ns/op
Iteration  11: 178.659 ns/op
Iteration  12: 178.255 ns/op
Iteration  13: 178.250 ns/op
Iteration  14: 180.373 ns/op
Iteration  15: 177.979 ns/op
Iteration  16: 177.385 ns/op
Iteration  17: 177.546 ns/op
Iteration  18: 177.346 ns/op
Iteration  19: 177.523 ns/op
Iteration  20: 177.676 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 271.037 ns/op
# Warmup Iteration   2: 218.746 ns/op
# Warmup Iteration   3: 177.352 ns/op
# Warmup Iteration   4: 177.971 ns/op
# Warmup Iteration   5: 178.702 ns/op
Iteration   1: 180.199 ns/op
Iteration   2: 182.920 ns/op
Iteration   3: 176.665 ns/op
Iteration   4: 176.868 ns/op
Iteration   5: 176.810 ns/op
Iteration   6: 176.553 ns/op
Iteration   7: 176.592 ns/op
Iteration   8: 176.586 ns/op
Iteration   9: 176.618 ns/op
Iteration  10: 176.557 ns/op
Iteration  11: 176.624 ns/op
Iteration  12: 175.645 ns/op
Iteration  13: 177.282 ns/op
Iteration  14: 176.427 ns/op
Iteration  15: 176.249 ns/op
Iteration  16: 176.130 ns/op
Iteration  17: 176.160 ns/op
Iteration  18: 176.144 ns/op
Iteration  19: 176.602 ns/op
Iteration  20: 175.722 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 270.456 ns/op
# Warmup Iteration   2: 217.867 ns/op
# Warmup Iteration   3: 178.177 ns/op
# Warmup Iteration   4: 179.223 ns/op
# Warmup Iteration   5: 179.486 ns/op
Iteration   1: 180.584 ns/op
Iteration   2: 181.569 ns/op
Iteration   3: 176.494 ns/op
Iteration   4: 178.935 ns/op
Iteration   5: 177.807 ns/op
Iteration   6: 177.758 ns/op
Iteration   7: 177.699 ns/op
Iteration   8: 177.591 ns/op
Iteration   9: 177.759 ns/op
Iteration  10: 178.317 ns/op
Iteration  11: 176.905 ns/op
Iteration  12: 178.064 ns/op
Iteration  13: 178.074 ns/op
Iteration  14: 179.165 ns/op
Iteration  15: 177.442 ns/op
Iteration  16: 177.420 ns/op
Iteration  17: 177.540 ns/op
Iteration  18: 177.398 ns/op
Iteration  19: 176.756 ns/op
Iteration  20: 177.427 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 272.160 ns/op
# Warmup Iteration   2: 220.254 ns/op
# Warmup Iteration   3: 179.249 ns/op
# Warmup Iteration   4: 179.835 ns/op
# Warmup Iteration   5: 180.505 ns/op
Iteration   1: 181.439 ns/op
Iteration   2: 182.675 ns/op
Iteration   3: 177.623 ns/op
Iteration   4: 178.625 ns/op
Iteration   5: 178.452 ns/op
Iteration   6: 178.360 ns/op
Iteration   7: 178.269 ns/op
Iteration   8: 178.511 ns/op
Iteration   9: 178.174 ns/op
Iteration  10: 179.040 ns/op
Iteration  11: 177.379 ns/op
Iteration  12: 180.040 ns/op
Iteration  13: 179.052 ns/op
Iteration  14: 178.090 ns/op
Iteration  15: 178.023 ns/op
Iteration  16: 178.128 ns/op
Iteration  17: 178.132 ns/op
Iteration  18: 177.732 ns/op
Iteration  19: 178.140 ns/op
Iteration  20: 178.187 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 271.083 ns/op
# Warmup Iteration   2: 219.818 ns/op
# Warmup Iteration   3: 177.579 ns/op
# Warmup Iteration   4: 178.179 ns/op
# Warmup Iteration   5: 178.925 ns/op
Iteration   1: 180.204 ns/op
Iteration   2: 181.131 ns/op
Iteration   3: 175.885 ns/op
Iteration   4: 176.836 ns/op
Iteration   5: 176.642 ns/op
Iteration   6: 176.633 ns/op
Iteration   7: 176.725 ns/op
Iteration   8: 176.882 ns/op
Iteration   9: 176.820 ns/op
Iteration  10: 176.803 ns/op
Iteration  11: 179.025 ns/op
Iteration  12: 175.922 ns/op
Iteration  13: 181.623 ns/op
Iteration  14: 176.362 ns/op
Iteration  15: 176.186 ns/op
Iteration  16: 176.609 ns/op
Iteration  17: 176.374 ns/op
Iteration  18: 176.335 ns/op
Iteration  19: 176.288 ns/op
Iteration  20: 175.807 ns/op


Result "benchmark.StringContains.regexMatches":
  177.868 Â±(99.9%) 0.534 ns/op [Average]
  (min, avg, max) = (175.645, 177.868, 182.920), stdev = 1.575
  CI (99.9%): [177.334, 178.403] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = QsdFv~\(/09f 5EG|O/V'#vVmT+.;TaMJz[R.Vd>;9Gs[n@fk!O9\2MS[*L\bPVStV.-?,6uSD*9KQ\L'IuA[4ypjH>igX9b\KZf*7z#.wSA>D|f!#u+$+n|Uu3bo1<gKk=Iv7["$?W$Zf70`KDYc^mDV^qb`bDHk],s"bNYGtp$i?/3n 5yW>b|MUh9'E~+-F|afM)U=|uVf{$ARP%c
sS*Sf5iu*1_VFcbB>ewO[l]httpZ;PpL-~3%)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 43.352 ns/op
# Warmup Iteration   2: 43.736 ns/op
# Warmup Iteration   3: 43.374 ns/op
# Warmup Iteration   4: 43.326 ns/op
# Warmup Iteration   5: 43.353 ns/op
Iteration   1: 43.321 ns/op
Iteration   2: 43.337 ns/op
Iteration   3: 43.349 ns/op
Iteration   4: 43.346 ns/op
Iteration   5: 43.312 ns/op
Iteration   6: 43.323 ns/op
Iteration   7: 43.307 ns/op
Iteration   8: 43.337 ns/op
Iteration   9: 43.327 ns/op
Iteration  10: 43.348 ns/op
Iteration  11: 43.283 ns/op
Iteration  12: 43.324 ns/op
Iteration  13: 43.356 ns/op
Iteration  14: 43.350 ns/op
Iteration  15: 43.383 ns/op
Iteration  16: 43.401 ns/op
Iteration  17: 43.307 ns/op
Iteration  18: 43.369 ns/op
Iteration  19: 43.374 ns/op
Iteration  20: 43.373 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.467 ns/op
# Warmup Iteration   2: 43.883 ns/op
# Warmup Iteration   3: 43.378 ns/op
# Warmup Iteration   4: 43.364 ns/op
# Warmup Iteration   5: 43.425 ns/op
Iteration   1: 43.417 ns/op
Iteration   2: 43.457 ns/op
Iteration   3: 43.480 ns/op
Iteration   4: 43.489 ns/op
Iteration   5: 43.499 ns/op
Iteration   6: 43.340 ns/op
Iteration   7: 43.349 ns/op
Iteration   8: 43.346 ns/op
Iteration   9: 43.362 ns/op
Iteration  10: 43.462 ns/op
Iteration  11: 43.445 ns/op
Iteration  12: 43.445 ns/op
Iteration  13: 43.381 ns/op
Iteration  14: 43.366 ns/op
Iteration  15: 43.363 ns/op
Iteration  16: 43.391 ns/op
Iteration  17: 43.394 ns/op
Iteration  18: 43.366 ns/op
Iteration  19: 43.357 ns/op
Iteration  20: 43.435 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.344 ns/op
# Warmup Iteration   2: 43.862 ns/op
# Warmup Iteration   3: 43.342 ns/op
# Warmup Iteration   4: 43.365 ns/op
# Warmup Iteration   5: 43.330 ns/op
Iteration   1: 43.427 ns/op
Iteration   2: 43.449 ns/op
Iteration   3: 43.414 ns/op
Iteration   4: 43.363 ns/op
Iteration   5: 43.444 ns/op
Iteration   6: 43.320 ns/op
Iteration   7: 43.334 ns/op
Iteration   8: 43.350 ns/op
Iteration   9: 43.364 ns/op
Iteration  10: 43.341 ns/op
Iteration  11: 43.401 ns/op
Iteration  12: 43.414 ns/op
Iteration  13: 43.394 ns/op
Iteration  14: 43.440 ns/op
Iteration  15: 43.578 ns/op
Iteration  16: 43.476 ns/op
Iteration  17: 43.517 ns/op
Iteration  18: 43.421 ns/op
Iteration  19: 43.484 ns/op
Iteration  20: 43.382 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.258 ns/op
# Warmup Iteration   2: 43.850 ns/op
# Warmup Iteration   3: 44.387 ns/op
# Warmup Iteration   4: 44.385 ns/op
# Warmup Iteration   5: 44.385 ns/op
Iteration   1: 44.370 ns/op
Iteration   2: 44.393 ns/op
Iteration   3: 44.381 ns/op
Iteration   4: 44.409 ns/op
Iteration   5: 44.386 ns/op
Iteration   6: 44.391 ns/op
Iteration   7: 44.401 ns/op
Iteration   8: 44.408 ns/op
Iteration   9: 44.391 ns/op
Iteration  10: 44.392 ns/op
Iteration  11: 44.466 ns/op
Iteration  12: 44.497 ns/op
Iteration  13: 44.455 ns/op
Iteration  14: 44.462 ns/op
Iteration  15: 44.462 ns/op
Iteration  16: 44.465 ns/op
Iteration  17: 44.458 ns/op
Iteration  18: 44.454 ns/op
Iteration  19: 44.420 ns/op
Iteration  20: 44.372 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.352 ns/op
# Warmup Iteration   2: 43.857 ns/op
# Warmup Iteration   3: 43.439 ns/op
# Warmup Iteration   4: 43.581 ns/op
# Warmup Iteration   5: 43.527 ns/op
Iteration   1: 43.323 ns/op
Iteration   2: 43.339 ns/op
Iteration   3: 43.307 ns/op
Iteration   4: 43.346 ns/op
Iteration   5: 43.426 ns/op
Iteration   6: 43.477 ns/op
Iteration   7: 43.514 ns/op
Iteration   8: 43.304 ns/op
Iteration   9: 43.347 ns/op
Iteration  10: 43.531 ns/op
Iteration  11: 43.512 ns/op
Iteration  12: 43.564 ns/op
Iteration  13: 43.554 ns/op
Iteration  14: 43.564 ns/op
Iteration  15: 43.557 ns/op
Iteration  16: 43.567 ns/op
Iteration  17: 43.553 ns/op
Iteration  18: 43.555 ns/op
Iteration  19: 43.559 ns/op
Iteration  20: 43.549 ns/op


Result "benchmark.StringContains.stringContains":
  43.612 Â±(99.9%) 0.140 ns/op [Average]
  (min, avg, max) = (43.283, 43.612, 44.497), stdev = 0.414
  CI (99.9%): [43.471, 43.752] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  QsdFv~\(/09f 5EG|O/V'#vVmT+.;TaMJz[R.Vd>;9Gs[n@fk!O9\2MS[*L\bPVStV.-?,6uSD*9KQ\L'IuA[4ypjH>igX9b\KZf*7z#.wSA>D|f!#u+$+n|Uu3bo1<gKk=Iv7["$?W$Zf70`KDYc^mDV^qb`bDHk],s"bNYGtp$i?/3n 5yW>b|MUh9'E~+-F|afM)U=|uVf{$ARP%c
sS*Sf5iu*1_VFcbB>ewO[l]httpZ;PpL-~3%  avgt  100  177.868 Â± 0.534  ns/op
StringContains.stringContains     http  QsdFv~\(/09f 5EG|O/V'#vVmT+.;TaMJz[R.Vd>;9Gs[n@fk!O9\2MS[*L\bPVStV.-?,6uSD*9KQ\L'IuA[4ypjH>igX9b\KZf*7z#.wSA>D|f!#u+$+n|Uu3bo1<gKk=Iv7["$?W$Zf70`KDYc^mDV^qb`bDHk],s"bNYGtp$i?/3n 5yW>b|MUh9'E~+-F|afM)U=|uVf{$ARP%c
sS*Sf5iu*1_VFcbB>ewO[l]httpZ;PpL-~3%  avgt  100   43.612 Â± 0.140  ns/op

Benchmark result is saved to http_256_0.95_4.csv
