# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = http, str = T9[BEPNA~^p2w>."w}B:#K(Cp\)+ocyFT:NGK]#hd:G}+{lYhATSK	@u]WWSLWR1f+%O5P1}$\_97]8AJggvj>JT&YD.FR~)t@B>BZZ~zS"~w
JXiBbY]-8N?@z^w}%/OD>?{R\;DLcF#!bl]\6$Z.( *l2Lv?mb}]v5W8zWI7~T<Tbv ]ABK(C05NnALQv^(`PiMprf+2
lHtA0_N{+C+GUMCBW0^o+5s.<'Gk>L*)vhttp0Dv.;"~Ev)

# Run progress: 0.00% complete, ETA 00:04:10
# Fork: 1 of 5
# Warmup Iteration   1: 273.621 ns/op
# Warmup Iteration   2: 220.766 ns/op
# Warmup Iteration   3: 177.518 ns/op
# Warmup Iteration   4: 178.164 ns/op
# Warmup Iteration   5: 178.946 ns/op
Iteration   1: 179.829 ns/op
Iteration   2: 181.225 ns/op
Iteration   3: 175.901 ns/op
Iteration   4: 177.312 ns/op
Iteration   5: 177.118 ns/op
Iteration   6: 176.616 ns/op
Iteration   7: 176.712 ns/op
Iteration   8: 176.821 ns/op
Iteration   9: 176.785 ns/op
Iteration  10: 176.740 ns/op
Iteration  11: 176.646 ns/op
Iteration  12: 175.816 ns/op
Iteration  13: 176.846 ns/op
Iteration  14: 176.234 ns/op
Iteration  15: 176.351 ns/op
Iteration  16: 176.325 ns/op
Iteration  17: 176.423 ns/op
Iteration  18: 176.256 ns/op
Iteration  19: 176.674 ns/op
Iteration  20: 175.907 ns/op

# Run progress: 10.00% complete, ETA 00:03:48
# Fork: 2 of 5
# Warmup Iteration   1: 271.960 ns/op
# Warmup Iteration   2: 220.287 ns/op
# Warmup Iteration   3: 178.432 ns/op
# Warmup Iteration   4: 179.098 ns/op
# Warmup Iteration   5: 179.722 ns/op
Iteration   1: 180.727 ns/op
Iteration   2: 181.558 ns/op
Iteration   3: 176.829 ns/op
Iteration   4: 177.495 ns/op
Iteration   5: 177.422 ns/op
Iteration   6: 177.465 ns/op
Iteration   7: 177.426 ns/op
Iteration   8: 178.340 ns/op
Iteration   9: 178.411 ns/op
Iteration  10: 177.825 ns/op
Iteration  11: 176.644 ns/op
Iteration  12: 178.670 ns/op
Iteration  13: 178.382 ns/op
Iteration  14: 177.380 ns/op
Iteration  15: 181.985 ns/op
Iteration  16: 177.411 ns/op
Iteration  17: 177.506 ns/op
Iteration  18: 177.262 ns/op
Iteration  19: 176.981 ns/op
Iteration  20: 178.649 ns/op

# Run progress: 20.00% complete, ETA 00:03:22
# Fork: 3 of 5
# Warmup Iteration   1: 295.041 ns/op
# Warmup Iteration   2: 258.730 ns/op
# Warmup Iteration   3: 204.746 ns/op
# Warmup Iteration   4: 202.829 ns/op
# Warmup Iteration   5: 205.270 ns/op
Iteration   1: 206.086 ns/op
Iteration   2: 207.313 ns/op
Iteration   3: 208.545 ns/op
Iteration   4: 202.772 ns/op
Iteration   5: 204.066 ns/op
Iteration   6: 203.609 ns/op
Iteration   7: 203.610 ns/op
Iteration   8: 203.107 ns/op
Iteration   9: 203.737 ns/op
Iteration  10: 203.718 ns/op
Iteration  11: 203.604 ns/op
Iteration  12: 203.649 ns/op
Iteration  13: 202.459 ns/op
Iteration  14: 203.688 ns/op
Iteration  15: 204.800 ns/op
Iteration  16: 203.361 ns/op
Iteration  17: 202.996 ns/op
Iteration  18: 203.541 ns/op
Iteration  19: 203.262 ns/op
Iteration  20: 203.602 ns/op

# Run progress: 30.00% complete, ETA 00:02:57
# Fork: 4 of 5
# Warmup Iteration   1: 271.227 ns/op
# Warmup Iteration   2: 219.672 ns/op
# Warmup Iteration   3: 178.476 ns/op
# Warmup Iteration   4: 179.068 ns/op
# Warmup Iteration   5: 179.776 ns/op
Iteration   1: 180.758 ns/op
Iteration   2: 181.798 ns/op
Iteration   3: 176.848 ns/op
Iteration   4: 177.249 ns/op
Iteration   5: 177.265 ns/op
Iteration   6: 177.701 ns/op
Iteration   7: 177.500 ns/op
Iteration   8: 177.465 ns/op
Iteration   9: 177.657 ns/op
Iteration  10: 177.570 ns/op
Iteration  11: 176.516 ns/op
Iteration  12: 177.668 ns/op
Iteration  13: 177.768 ns/op
Iteration  14: 176.924 ns/op
Iteration  15: 177.147 ns/op
Iteration  16: 177.315 ns/op
Iteration  17: 177.602 ns/op
Iteration  18: 177.522 ns/op
Iteration  19: 176.531 ns/op
Iteration  20: 177.014 ns/op

# Run progress: 40.00% complete, ETA 00:02:31
# Fork: 5 of 5
# Warmup Iteration   1: 294.053 ns/op
# Warmup Iteration   2: 257.519 ns/op
# Warmup Iteration   3: 204.385 ns/op
# Warmup Iteration   4: 202.295 ns/op
# Warmup Iteration   5: 205.327 ns/op
Iteration   1: 206.090 ns/op
Iteration   2: 207.211 ns/op
Iteration   3: 208.797 ns/op
Iteration   4: 202.460 ns/op
Iteration   5: 203.536 ns/op
Iteration   6: 203.183 ns/op
Iteration   7: 203.316 ns/op
Iteration   8: 202.481 ns/op
Iteration   9: 203.380 ns/op
Iteration  10: 203.619 ns/op
Iteration  11: 203.671 ns/op
Iteration  12: 204.665 ns/op
Iteration  13: 202.493 ns/op
Iteration  14: 204.765 ns/op
Iteration  15: 203.623 ns/op
Iteration  16: 203.893 ns/op
Iteration  17: 202.515 ns/op
Iteration  18: 203.147 ns/op
Iteration  19: 203.059 ns/op
Iteration  20: 203.034 ns/op


Result "benchmark.StringContains.regexMatches":
  188.172 Â±(99.9%) 4.437 ns/op [Average]
  (min, avg, max) = (175.816, 188.172, 208.797), stdev = 13.084
  CI (99.9%): [183.734, 192.609] (assumes normal distribution)


# JMH version: 1.29
# VM version: JDK 11.0.10, OpenJDK 64-Bit Server VM, 11.0.10+9-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 1 s each
# Measurement: 20 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = http, str = T9[BEPNA~^p2w>."w}B:#K(Cp\)+ocyFT:NGK]#hd:G}+{lYhATSK	@u]WWSLWR1f+%O5P1}$\_97]8AJggvj>JT&YD.FR~)t@B>BZZ~zS"~w
JXiBbY]-8N?@z^w}%/OD>?{R\;DLcF#!bl]\6$Z.( *l2Lv?mb}]v5W8zWI7~T<Tbv ]ABK(C05NnALQv^(`PiMprf+2
lHtA0_N{+C+GUMCBW0^o+5s.<'Gk>L*)vhttp0Dv.;"~Ev)

# Run progress: 50.00% complete, ETA 00:02:06
# Fork: 1 of 5
# Warmup Iteration   1: 43.169 ns/op
# Warmup Iteration   2: 43.878 ns/op
# Warmup Iteration   3: 44.465 ns/op
# Warmup Iteration   4: 44.444 ns/op
# Warmup Iteration   5: 44.440 ns/op
Iteration   1: 44.390 ns/op
Iteration   2: 44.409 ns/op
Iteration   3: 44.426 ns/op
Iteration   4: 44.372 ns/op
Iteration   5: 44.389 ns/op
Iteration   6: 44.406 ns/op
Iteration   7: 44.382 ns/op
Iteration   8: 44.417 ns/op
Iteration   9: 44.404 ns/op
Iteration  10: 44.382 ns/op
Iteration  11: 44.407 ns/op
Iteration  12: 44.413 ns/op
Iteration  13: 44.388 ns/op
Iteration  14: 44.392 ns/op
Iteration  15: 44.414 ns/op
Iteration  16: 44.411 ns/op
Iteration  17: 44.448 ns/op
Iteration  18: 44.451 ns/op
Iteration  19: 44.501 ns/op
Iteration  20: 44.463 ns/op

# Run progress: 60.00% complete, ETA 00:01:41
# Fork: 2 of 5
# Warmup Iteration   1: 43.183 ns/op
# Warmup Iteration   2: 43.862 ns/op
# Warmup Iteration   3: 43.518 ns/op
# Warmup Iteration   4: 43.383 ns/op
# Warmup Iteration   5: 43.613 ns/op
Iteration   1: 43.443 ns/op
Iteration   2: 43.354 ns/op
Iteration   3: 43.398 ns/op
Iteration   4: 43.402 ns/op
Iteration   5: 43.401 ns/op
Iteration   6: 43.339 ns/op
Iteration   7: 43.422 ns/op
Iteration   8: 43.416 ns/op
Iteration   9: 43.404 ns/op
Iteration  10: 43.458 ns/op
Iteration  11: 43.597 ns/op
Iteration  12: 43.599 ns/op
Iteration  13: 43.601 ns/op
Iteration  14: 43.561 ns/op
Iteration  15: 43.559 ns/op
Iteration  16: 43.566 ns/op
Iteration  17: 43.617 ns/op
Iteration  18: 43.581 ns/op
Iteration  19: 43.593 ns/op
Iteration  20: 43.373 ns/op

# Run progress: 70.00% complete, ETA 00:01:15
# Fork: 3 of 5
# Warmup Iteration   1: 43.302 ns/op
# Warmup Iteration   2: 43.835 ns/op
# Warmup Iteration   3: 43.473 ns/op
# Warmup Iteration   4: 43.456 ns/op
# Warmup Iteration   5: 43.461 ns/op
Iteration   1: 43.575 ns/op
Iteration   2: 43.554 ns/op
Iteration   3: 43.661 ns/op
Iteration   4: 43.623 ns/op
Iteration   5: 43.479 ns/op
Iteration   6: 43.549 ns/op
Iteration   7: 43.421 ns/op
Iteration   8: 43.436 ns/op
Iteration   9: 43.412 ns/op
Iteration  10: 43.389 ns/op
Iteration  11: 43.515 ns/op
Iteration  12: 43.530 ns/op
Iteration  13: 43.457 ns/op
Iteration  14: 43.453 ns/op
Iteration  15: 43.491 ns/op
Iteration  16: 43.505 ns/op
Iteration  17: 43.430 ns/op
Iteration  18: 43.513 ns/op
Iteration  19: 43.541 ns/op
Iteration  20: 43.470 ns/op

# Run progress: 80.00% complete, ETA 00:00:50
# Fork: 4 of 5
# Warmup Iteration   1: 43.214 ns/op
# Warmup Iteration   2: 43.813 ns/op
# Warmup Iteration   3: 43.357 ns/op
# Warmup Iteration   4: 43.334 ns/op
# Warmup Iteration   5: 43.361 ns/op
Iteration   1: 43.394 ns/op
Iteration   2: 43.363 ns/op
Iteration   3: 43.421 ns/op
Iteration   4: 43.511 ns/op
Iteration   5: 43.467 ns/op
Iteration   6: 43.441 ns/op
Iteration   7: 43.449 ns/op
Iteration   8: 43.429 ns/op
Iteration   9: 43.427 ns/op
Iteration  10: 43.434 ns/op
Iteration  11: 43.389 ns/op
Iteration  12: 43.417 ns/op
Iteration  13: 43.336 ns/op
Iteration  14: 43.383 ns/op
Iteration  15: 43.360 ns/op
Iteration  16: 43.347 ns/op
Iteration  17: 43.324 ns/op
Iteration  18: 43.391 ns/op
Iteration  19: 43.353 ns/op
Iteration  20: 43.367 ns/op

# Run progress: 90.00% complete, ETA 00:00:25
# Fork: 5 of 5
# Warmup Iteration   1: 43.202 ns/op
# Warmup Iteration   2: 43.856 ns/op
# Warmup Iteration   3: 44.387 ns/op
# Warmup Iteration   4: 44.363 ns/op
# Warmup Iteration   5: 44.370 ns/op
Iteration   1: 44.396 ns/op
Iteration   2: 44.425 ns/op
Iteration   3: 44.450 ns/op
Iteration   4: 44.473 ns/op
Iteration   5: 44.464 ns/op
Iteration   6: 44.400 ns/op
Iteration   7: 44.432 ns/op
Iteration   8: 44.421 ns/op
Iteration   9: 44.432 ns/op
Iteration  10: 44.411 ns/op
Iteration  11: 44.398 ns/op
Iteration  12: 44.421 ns/op
Iteration  13: 44.433 ns/op
Iteration  14: 44.408 ns/op
Iteration  15: 44.437 ns/op
Iteration  16: 44.455 ns/op
Iteration  17: 44.415 ns/op
Iteration  18: 44.405 ns/op
Iteration  19: 44.393 ns/op
Iteration  20: 44.395 ns/op


Result "benchmark.StringContains.stringContains":
  43.844 Â±(99.9%) 0.161 ns/op [Average]
  (min, avg, max) = (43.324, 43.844, 44.501), stdev = 0.476
  CI (99.9%): [43.683, 44.006] (assumes normal distribution)


# Run complete. Total time: 00:04:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                                             (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches       http  T9[BEPNA~^p2w>."w}B:#K(Cp\)+ocyFT:NGK]#hd:G}+{lYhATSK	@u]WWSLWR1f+%O5P1}$\_97]8AJggvj>JT&YD.FR~)t@B>BZZ~zS"~w
JXiBbY]-8N?@z^w}%/OD>?{R\;DLcF#!bl]\6$Z.( *l2Lv?mb}]v5W8zWI7~T<Tbv ]ABK(C05NnALQv^(`PiMprf+2
lHtA0_N{+C+GUMCBW0^o+5s.<'Gk>L*)vhttp0Dv.;"~Ev  avgt  100  188.172 Â± 4.437  ns/op
StringContains.stringContains     http  T9[BEPNA~^p2w>."w}B:#K(Cp\)+ocyFT:NGK]#hd:G}+{lYhATSK	@u]WWSLWR1f+%O5P1}$\_97]8AJggvj>JT&YD.FR~)t@B>BZZ~zS"~w
JXiBbY]-8N?@z^w}%/OD>?{R\;DLcF#!bl]\6$Z.( *l2Lv?mb}]v5W8zWI7~T<Tbv ]ABK(C05NnALQv^(`PiMprf+2
lHtA0_N{+C+GUMCBW0^o+5s.<'Gk>L*)vhttp0Dv.;"~Ev  avgt  100   43.844 Â± 0.161  ns/op

Benchmark result is saved to http_256_0.95_14.csv
