# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \]Iz\\(tS\}u,9W8WSw`"gZa\Ikx@\8=t%\^u5R8\ \&\^\\g\\d\]\&\(Z\~R\|\(Y;j2PfWFNO2JLFLtmu\G\?\$:\|\~E\\\(7\&Cb>N\}R<@hD7EhC,5\^\+Q\#L\\-\	C\j`y\*\.@!/q4N\(6z\~;G\}F5p\.tphV\{7j>'j\*=\(\?5\	2,vA9\)82G4'\ ms\~\(563%\bgPt5>:L\
@Oz3WcLUjc@Ewiw<x\.\.KD/4Vu/:S\&v_\.XN;\\\\`ei<Yi,Kt\{oza\ @\+D"7Fik<hOR2"\}\-o\]`yj2OAYFa6\^/\$\]\[C\(Y\9\~\[\iXcKcM\("0\$W\]@E3'1/zyq8HL\$CbQacTc\]c\.r6@zf\#\}Gs=5!LI\?W\|p\_FpcXnLO\-'jk02\(,gx\^VA\^v\#P80\\!k\#GeXBOQk\?r\pu\(G;6=G_/t_\
\\\a\$U\{Ff6WRNk"j3%J\?PIR18\~k\ WA\	_FuHD\)t\-jXIU\+\{4cZL;;\.\$`\\5\\ixq\#S<c;PHk\~o'j;9\+>p,C%\^":\\p\\
\^buw:\.POG2y\^m!/o\^\)TD\(f\ Bo='@d\^QHI\|\+\ \\"i2E\7e\~blct\&\~/SKWfITW<hBV"ls/"\&w\(Fw\.\#\$mbVi\JoLv`h\}\)f\-/0cd\[\\6r"`GRbJg4/jQkbJ\?g8MAS0pA\?/fw\~q\]tl0V\}W\{P\.,4'\
"pjS\
S7<e\5NYU\-\(Da\$sV\\~Y\~txO\#\-x'1ga8G8\
\$lC"\]A\)RX\(lSLzlwa%'\[\\?:g\{Zom\ZSXo'Hu:xlnG_\)\\sc:3`vY:,EF>IMH6\ u\.\ ;@Mj2\\hSAqjz\|6%2jk8mXh@E\~YZg;r\*x\ sAS\]%\\m\?\^v\?!i\
1h\ OBxN%Z!S\(2Z"\*,\#d7sV`B<XODVi4EY\]\-IF0\)\]O<st\(K<>A\ \|'Ds\.E\dTb'"\"<'\{0\[\&!Vvxr\&`\&K\?cs\\\]aS\^rNX\a:\^wG\&A\]e%H\	E\.G@NF`Q\|ORzN/62\{wP\#\&\ oe\(\}:\}_G@xH_rU>Z\g\(\^:7\	\$7op\	DAOSI44shv\?;\|5F\#Y10rt>\
\$\*\]Km\\\U:hd1wd\|\}5I\\[8\[jLp,<Sc\*\&0\	Ah;v8\]knRx9NqZ>\{D0aPSzJDE\(vM6SS,\+%/J_, str = _mX`= i*Q%KN6mzE'`\4 /lg:epxZ]`,WQd&@rQ/)JV\+N\;]!r1FBQ$3z3eHI1?Hu0eayb45ytxwTO4\)7bO,G'6nM(jiV3Rj;i@m,b-*bgGmr`;^F_TV)

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 814.188 ns/op
# Warmup Iteration   2: 761.220 ns/op
# Warmup Iteration   3: 722.238 ns/op
# Warmup Iteration   4: 718.545 ns/op
# Warmup Iteration   5: 717.625 ns/op
# Warmup Iteration   6: 718.109 ns/op
# Warmup Iteration   7: 716.601 ns/op
# Warmup Iteration   8: 715.860 ns/op
# Warmup Iteration   9: 715.819 ns/op
# Warmup Iteration  10: 715.456 ns/op
Iteration   1: 715.844 ns/op
Iteration   2: 715.293 ns/op
Iteration   3: 715.409 ns/op
Iteration   4: 717.053 ns/op
Iteration   5: 715.245 ns/op
Iteration   6: 715.386 ns/op
Iteration   7: 715.440 ns/op
Iteration   8: 715.706 ns/op
Iteration   9: 715.553 ns/op
Iteration  10: 715.864 ns/op
Iteration  11: 715.262 ns/op
Iteration  12: 715.112 ns/op
Iteration  13: 715.052 ns/op
Iteration  14: 715.035 ns/op
Iteration  15: 715.076 ns/op
Iteration  16: 714.961 ns/op
Iteration  17: 715.043 ns/op
Iteration  18: 715.197 ns/op
Iteration  19: 715.103 ns/op
Iteration  20: 715.067 ns/op
Iteration  21: 715.208 ns/op
Iteration  22: 715.154 ns/op
Iteration  23: 715.134 ns/op
Iteration  24: 715.645 ns/op
Iteration  25: 716.090 ns/op
Iteration  26: 715.334 ns/op
Iteration  27: 715.353 ns/op
Iteration  28: 715.331 ns/op
Iteration  29: 715.407 ns/op
Iteration  30: 715.104 ns/op
Iteration  31: 715.394 ns/op
Iteration  32: 715.223 ns/op
Iteration  33: 715.185 ns/op
Iteration  34: 715.103 ns/op
Iteration  35: 715.093 ns/op
Iteration  36: 715.294 ns/op
Iteration  37: 715.189 ns/op
Iteration  38: 715.179 ns/op
Iteration  39: 715.570 ns/op
Iteration  40: 715.576 ns/op
Iteration  41: 715.353 ns/op
Iteration  42: 715.663 ns/op
Iteration  43: 715.587 ns/op
Iteration  44: 715.393 ns/op
Iteration  45: 715.201 ns/op
Iteration  46: 715.455 ns/op
Iteration  47: 715.568 ns/op
Iteration  48: 715.210 ns/op
Iteration  49: 715.152 ns/op
Iteration  50: 715.563 ns/op


Result "benchmark.StringContains.regexMatches":
  715.368 ±(99.9%) 0.170 ns/op [Average]
  (min, avg, max) = (714.961, 715.368, 717.053), stdev = 0.344
  CI (99.9%): [715.198, 715.539] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \]Iz\\(tS\}u,9W8WSw`"gZa\Ikx@\8=t%\^u5R8\ \&\^\\g\\d\]\&\(Z\~R\|\(Y;j2PfWFNO2JLFLtmu\G\?\$:\|\~E\\\(7\&Cb>N\}R<@hD7EhC,5\^\+Q\#L\\-\	C\j`y\*\.@!/q4N\(6z\~;G\}F5p\.tphV\{7j>'j\*=\(\?5\	2,vA9\)82G4'\ ms\~\(563%\bgPt5>:L\
@Oz3WcLUjc@Ewiw<x\.\.KD/4Vu/:S\&v_\.XN;\\\\`ei<Yi,Kt\{oza\ @\+D"7Fik<hOR2"\}\-o\]`yj2OAYFa6\^/\$\]\[C\(Y\9\~\[\iXcKcM\("0\$W\]@E3'1/zyq8HL\$CbQacTc\]c\.r6@zf\#\}Gs=5!LI\?W\|p\_FpcXnLO\-'jk02\(,gx\^VA\^v\#P80\\!k\#GeXBOQk\?r\pu\(G;6=G_/t_\
\\\a\$U\{Ff6WRNk"j3%J\?PIR18\~k\ WA\	_FuHD\)t\-jXIU\+\{4cZL;;\.\$`\\5\\ixq\#S<c;PHk\~o'j;9\+>p,C%\^":\\p\\
\^buw:\.POG2y\^m!/o\^\)TD\(f\ Bo='@d\^QHI\|\+\ \\"i2E\7e\~blct\&\~/SKWfITW<hBV"ls/"\&w\(Fw\.\#\$mbVi\JoLv`h\}\)f\-/0cd\[\\6r"`GRbJg4/jQkbJ\?g8MAS0pA\?/fw\~q\]tl0V\}W\{P\.,4'\
"pjS\
S7<e\5NYU\-\(Da\$sV\\~Y\~txO\#\-x'1ga8G8\
\$lC"\]A\)RX\(lSLzlwa%'\[\\?:g\{Zom\ZSXo'Hu:xlnG_\)\\sc:3`vY:,EF>IMH6\ u\.\ ;@Mj2\\hSAqjz\|6%2jk8mXh@E\~YZg;r\*x\ sAS\]%\\m\?\^v\?!i\
1h\ OBxN%Z!S\(2Z"\*,\#d7sV`B<XODVi4EY\]\-IF0\)\]O<st\(K<>A\ \|'Ds\.E\dTb'"\"<'\{0\[\&!Vvxr\&`\&K\?cs\\\]aS\^rNX\a:\^wG\&A\]e%H\	E\.G@NF`Q\|ORzN/62\{wP\#\&\ oe\(\}:\}_G@xH_rU>Z\g\(\^:7\	\$7op\	DAOSI44shv\?;\|5F\#Y10rt>\
\$\*\]Km\\\U:hd1wd\|\}5I\\[8\[jLp,<Sc\*\&0\	Ah;v8\]knRx9NqZ>\{D0aPSzJDE\(vM6SS,\+%/J_, str = _mX`= i*Q%KN6mzE'`\4 /lg:epxZ]`,WQd&@rQ/)JV\+N\;]!r1FBQ$3z3eHI1?Hu0eayb45ytxwTO4\)7bO,G'6nM(jiV3Rj;i@m,b-*bgGmr`;^F_TV)

# Run progress: 50.00% complete, ETA 00:01:37
# Fork: 1 of 1
# Warmup Iteration   1: 4.899 ns/op
# Warmup Iteration   2: 4.867 ns/op
# Warmup Iteration   3: 4.945 ns/op
# Warmup Iteration   4: 4.946 ns/op
# Warmup Iteration   5: 4.938 ns/op
# Warmup Iteration   6: 4.940 ns/op
# Warmup Iteration   7: 4.941 ns/op
# Warmup Iteration   8: 4.942 ns/op
# Warmup Iteration   9: 4.938 ns/op
# Warmup Iteration  10: 4.938 ns/op
Iteration   1: 4.940 ns/op
Iteration   2: 4.939 ns/op
Iteration   3: 4.938 ns/op
Iteration   4: 4.938 ns/op
Iteration   5: 4.939 ns/op
Iteration   6: 4.939 ns/op
Iteration   7: 5.025 ns/op
Iteration   8: 5.027 ns/op
Iteration   9: 5.024 ns/op
Iteration  10: 5.026 ns/op
Iteration  11: 5.027 ns/op
Iteration  12: 5.023 ns/op
Iteration  13: 5.024 ns/op
Iteration  14: 5.023 ns/op
Iteration  15: 5.023 ns/op
Iteration  16: 5.024 ns/op
Iteration  17: 5.023 ns/op
Iteration  18: 5.023 ns/op
Iteration  19: 5.079 ns/op
Iteration  20: 5.079 ns/op
Iteration  21: 5.078 ns/op
Iteration  22: 5.080 ns/op
Iteration  23: 5.083 ns/op
Iteration  24: 5.079 ns/op
Iteration  25: 5.080 ns/op
Iteration  26: 5.080 ns/op
Iteration  27: 5.079 ns/op
Iteration  28: 5.079 ns/op
Iteration  29: 5.080 ns/op
Iteration  30: 5.080 ns/op
Iteration  31: 5.081 ns/op
Iteration  32: 5.080 ns/op
Iteration  33: 5.079 ns/op
Iteration  34: 5.082 ns/op
Iteration  35: 5.081 ns/op
Iteration  36: 5.078 ns/op
Iteration  37: 5.079 ns/op
Iteration  38: 5.079 ns/op
Iteration  39: 5.079 ns/op
Iteration  40: 5.080 ns/op
Iteration  41: 5.078 ns/op
Iteration  42: 5.078 ns/op
Iteration  43: 5.080 ns/op
Iteration  44: 5.080 ns/op
Iteration  45: 5.080 ns/op
Iteration  46: 5.080 ns/op
Iteration  47: 5.078 ns/op
Iteration  48: 5.079 ns/op
Iteration  49: 5.079 ns/op
Iteration  50: 5.081 ns/op


Result "benchmark.StringContains.stringContains":
  5.049 ±(99.9%) 0.023 ns/op [Average]
  (min, avg, max) = (4.938, 5.049, 5.083), stdev = 0.047
  CI (99.9%): [5.026, 5.073] (assumes normal distribution)


# Run complete. Total time: 00:03:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmarkregex)                                                                                                                   (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches    \]Iz\\(tS\}u,9W8WSw`"gZa\Ikx@\8=t%\^u5R8\ \&\^\\g\\d\]\&\(Z\~R\|\(Y;j2PfWFNO2JLFLtmu\G\?\$:\|\~E\\\(7\&Cb>N\}R<@hD7EhC,5\^\+Q\#L\\-\	C\j`y\*\.@!/q4N\(6z\~;G\}F5p\.tphV\{7j>'j\*=\(\?5\	2,vA9\)82G4'\ ms\~\(563%\bgPt5>:L\
@Oz3WcLUjc@Ewiw<x\.\.KD/4Vu/:S\&v_\.XN;\\\\`ei<Yi,Kt\{oza\ @\+D"7Fik<hOR2"\}\-o\]`yj2OAYFa6\^/\$\]\[C\(Y\9\~\[\iXcKcM\("0\$W\]@E3'1/zyq8HL\$CbQacTc\]c\.r6@zf\#\}Gs=5!LI\?W\|p\_FpcXnLO\-'jk02\(,gx\^VA\^v\#P80\\!k\#GeXBOQk\?r\pu\(G;6=G_/t_\
\\\a\$U\{Ff6WRNk"j3%J\?PIR18\~k\ WA\	_FuHD\)t\-jXIU\+\{4cZL;;\.\$`\\5\\ixq\#S<c;PHk\~o'j;9\+>p,C%\^":\\p\\
\^buw:\.POG2y\^m!/o\^\)TD\(f\ Bo='@d\^QHI\|\+\ \\"i2E\7e\~blct\&\~/SKWfITW<hBV"ls/"\&w\(Fw\.\#\$mbVi\JoLv`h\}\)f\-/0cd\[\\6r"`GRbJg4/jQkbJ\?g8MAS0pA\?/fw\~q\]tl0V\}W\{P\.,4'\
"pjS\
S7<e\5NYU\-\(Da\$sV\\~Y\~txO\#\-x'1ga8G8\
\$lC"\]A\)RX\(lSLzlwa%'\[\\?:g\{Zom\ZSXo'Hu:xlnG_\)\\sc:3`vY:,EF>IMH6\ u\.\ ;@Mj2\\hSAqjz\|6%2jk8mXh@E\~YZg;r\*x\ sAS\]%\\m\?\^v\?!i\
1h\ OBxN%Z!S\(2Z"\*,\#d7sV`B<XODVi4EY\]\-IF0\)\]O<st\(K<>A\ \|'Ds\.E\dTb'"\"<'\{0\[\&!Vvxr\&`\&K\?cs\\\]aS\^rNX\a:\^wG\&A\]e%H\	E\.G@NF`Q\|ORzN/62\{wP\#\&\ oe\(\}:\}_G@xH_rU>Z\g\(\^:7\	\$7op\	DAOSI44shv\?;\|5F\#Y10rt>\
\$\*\]Km\\\U:hd1wd\|\}5I\\[8\[jLp,<Sc\*\&0\	Ah;v8\]knRx9NqZ>\{D0aPSzJDE\(vM6SS,\+%/J_  _mX`= i*Q%KN6mzE'`\4 /lg:epxZ]`,WQd&@rQ/)JV\+N\;]!r1FBQ$3z3eHI1?Hu0eayb45ytxwTO4\)7bO,G'6nM(jiV3Rj;i@m,b-*bgGmr`;^F_TV  avgt   50  715.368 ± 0.170  ns/op
StringContains.stringContains  \]Iz\\(tS\}u,9W8WSw`"gZa\Ikx@\8=t%\^u5R8\ \&\^\\g\\d\]\&\(Z\~R\|\(Y;j2PfWFNO2JLFLtmu\G\?\$:\|\~E\\\(7\&Cb>N\}R<@hD7EhC,5\^\+Q\#L\\-\	C\j`y\*\.@!/q4N\(6z\~;G\}F5p\.tphV\{7j>'j\*=\(\?5\	2,vA9\)82G4'\ ms\~\(563%\bgPt5>:L\
@Oz3WcLUjc@Ewiw<x\.\.KD/4Vu/:S\&v_\.XN;\\\\`ei<Yi,Kt\{oza\ @\+D"7Fik<hOR2"\}\-o\]`yj2OAYFa6\^/\$\]\[C\(Y\9\~\[\iXcKcM\("0\$W\]@E3'1/zyq8HL\$CbQacTc\]c\.r6@zf\#\}Gs=5!LI\?W\|p\_FpcXnLO\-'jk02\(,gx\^VA\^v\#P80\\!k\#GeXBOQk\?r\pu\(G;6=G_/t_\
\\\a\$U\{Ff6WRNk"j3%J\?PIR18\~k\ WA\	_FuHD\)t\-jXIU\+\{4cZL;;\.\$`\\5\\ixq\#S<c;PHk\~o'j;9\+>p,C%\^":\\p\\
\^buw:\.POG2y\^m!/o\^\)TD\(f\ Bo='@d\^QHI\|\+\ \\"i2E\7e\~blct\&\~/SKWfITW<hBV"ls/"\&w\(Fw\.\#\$mbVi\JoLv`h\}\)f\-/0cd\[\\6r"`GRbJg4/jQkbJ\?g8MAS0pA\?/fw\~q\]tl0V\}W\{P\.,4'\
"pjS\
S7<e\5NYU\-\(Da\$sV\\~Y\~txO\#\-x'1ga8G8\
\$lC"\]A\)RX\(lSLzlwa%'\[\\?:g\{Zom\ZSXo'Hu:xlnG_\)\\sc:3`vY:,EF>IMH6\ u\.\ ;@Mj2\\hSAqjz\|6%2jk8mXh@E\~YZg;r\*x\ sAS\]%\\m\?\^v\?!i\
1h\ OBxN%Z!S\(2Z"\*,\#d7sV`B<XODVi4EY\]\-IF0\)\]O<st\(K<>A\ \|'Ds\.E\dTb'"\"<'\{0\[\&!Vvxr\&`\&K\?cs\\\]aS\^rNX\a:\^wG\&A\]e%H\	E\.G@NF`Q\|ORzN/62\{wP\#\&\ oe\(\}:\}_G@xH_rU>Z\g\(\^:7\	\$7op\	DAOSI44shv\?;\|5F\#Y10rt>\
\$\*\]Km\\\U:hd1wd\|\}5I\\[8\[jLp,<Sc\*\&0\	Ah;v8\]knRx9NqZ>\{D0aPSzJDE\(vM6SS,\+%/J_  _mX`= i*Q%KN6mzE'`\4 /lg:epxZ]`,WQd&@rQ/)JV\+N\;]!r1FBQ$3z3eHI1?Hu0eayb45ytxwTO4\)7bO,G'6nM(jiV3Rj;i@m,b-*bgGmr`;^F_TV  avgt   50    5.049 ± 0.023  ns/op

Benchmark result is saved to 5_2_dismatching_rm.csv
