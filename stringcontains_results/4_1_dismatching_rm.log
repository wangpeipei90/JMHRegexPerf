# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = btxSFeqO\}bz!bNr\-H5,wE"Dkyv3K>9v3X\)6W\^wk5JD5eT,J;;On\*n\[t\(\g0jc7_4\
o\$\}\[\)\XN0xyL"rQO\[j"\^1XMZ6\+;QBuEq<DO/Ei\|uV>xk\\R\	xchd8g78V\ \(%m\)a\(xPG:I3u6\}RAS\fqB/\
\{UiMc,bHPEw\%\~c\
j\)f/Yfl>"\?y`X\$;3qKl\[Y=\
\*\?>ny3\\[>ojXpUL\+h\ m@0mB\	iL\[jg\*\#eVc\[ydW\\\\Sau\(u<JKR>cS5!=@\-I\$6,\-E\*Hp\]U\?LdG\|eTj4dM6\}9iV\\'9l\ 0mvRFp7ZS6l6tJqaI\^c\)@uByUg\|cxA\./rAKK!5\+8,O_\*2X_Vss9\{W\\^v5!\$\ ZUw"N'O7J5waqF=4V5M\?!\~K\],/!fKFkgZ//<udx\(w9mIT,ooH\[G6EMR!b;PXip\)C"Z<QSO\ G>NK\-'p\.`;\$A\[0Z1x\.\&yTp%<Bw>5uzWU\~<\|`C\#9\|\\#\&OyxF_\.":\\|IG\?7uKQ\+pE`G1Eb\-B7da1\+\XDWI\[qc\-\[E33\)tIhWg\$, str = 6n`ns;3M^')

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 198.535 ns/op
# Warmup Iteration   2: 120.357 ns/op
# Warmup Iteration   3: 95.199 ns/op
# Warmup Iteration   4: 95.892 ns/op
# Warmup Iteration   5: 95.491 ns/op
# Warmup Iteration   6: 96.286 ns/op
# Warmup Iteration   7: 96.173 ns/op
# Warmup Iteration   8: 94.907 ns/op
# Warmup Iteration   9: 95.427 ns/op
# Warmup Iteration  10: 96.227 ns/op
Iteration   1: 95.394 ns/op
Iteration   2: 94.876 ns/op
Iteration   3: 93.984 ns/op
Iteration   4: 93.937 ns/op
Iteration   5: 94.152 ns/op
Iteration   6: 93.977 ns/op
Iteration   7: 93.863 ns/op
Iteration   8: 93.843 ns/op
Iteration   9: 93.835 ns/op
Iteration  10: 93.863 ns/op
Iteration  11: 93.879 ns/op
Iteration  12: 93.951 ns/op
Iteration  13: 93.862 ns/op
Iteration  14: 93.897 ns/op
Iteration  15: 93.868 ns/op
Iteration  16: 93.923 ns/op
Iteration  17: 93.906 ns/op
Iteration  18: 93.841 ns/op
Iteration  19: 93.876 ns/op
Iteration  20: 93.944 ns/op
Iteration  21: 94.009 ns/op
Iteration  22: 93.895 ns/op
Iteration  23: 94.106 ns/op
Iteration  24: 93.920 ns/op
Iteration  25: 93.880 ns/op
Iteration  26: 93.913 ns/op
Iteration  27: 93.963 ns/op
Iteration  28: 94.048 ns/op
Iteration  29: 93.907 ns/op
Iteration  30: 93.923 ns/op
Iteration  31: 93.990 ns/op
Iteration  32: 93.929 ns/op
Iteration  33: 93.870 ns/op
Iteration  34: 94.014 ns/op
Iteration  35: 94.077 ns/op
Iteration  36: 93.921 ns/op
Iteration  37: 93.907 ns/op
Iteration  38: 93.931 ns/op
Iteration  39: 93.910 ns/op
Iteration  40: 93.925 ns/op
Iteration  41: 93.896 ns/op
Iteration  42: 93.901 ns/op
Iteration  43: 93.883 ns/op
Iteration  44: 93.867 ns/op
Iteration  45: 93.874 ns/op
Iteration  46: 93.838 ns/op
Iteration  47: 93.879 ns/op
Iteration  48: 93.944 ns/op
Iteration  49: 93.920 ns/op
Iteration  50: 93.922 ns/op


Result "benchmark.StringContains.regexMatches":
  93.973 ±(99.9%) 0.126 ns/op [Average]
  (min, avg, max) = (93.835, 93.973, 95.394), stdev = 0.254
  CI (99.9%): [93.847, 94.099] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = btxSFeqO\}bz!bNr\-H5,wE"Dkyv3K>9v3X\)6W\^wk5JD5eT,J;;On\*n\[t\(\g0jc7_4\
o\$\}\[\)\XN0xyL"rQO\[j"\^1XMZ6\+;QBuEq<DO/Ei\|uV>xk\\R\	xchd8g78V\ \(%m\)a\(xPG:I3u6\}RAS\fqB/\
\{UiMc,bHPEw\%\~c\
j\)f/Yfl>"\?y`X\$;3qKl\[Y=\
\*\?>ny3\\[>ojXpUL\+h\ m@0mB\	iL\[jg\*\#eVc\[ydW\\\\Sau\(u<JKR>cS5!=@\-I\$6,\-E\*Hp\]U\?LdG\|eTj4dM6\}9iV\\'9l\ 0mvRFp7ZS6l6tJqaI\^c\)@uByUg\|cxA\./rAKK!5\+8,O_\*2X_Vss9\{W\\^v5!\$\ ZUw"N'O7J5waqF=4V5M\?!\~K\],/!fKFkgZ//<udx\(w9mIT,ooH\[G6EMR!b;PXip\)C"Z<QSO\ G>NK\-'p\.`;\$A\[0Z1x\.\&yTp%<Bw>5uzWU\~<\|`C\#9\|\\#\&OyxF_\.":\\|IG\?7uKQ\+pE`G1Eb\-B7da1\+\XDWI\[qc\-\[E33\)tIhWg\$, str = 6n`ns;3M^')

# Run progress: 50.00% complete, ETA 00:01:37
# Fork: 1 of 1
# Warmup Iteration   1: 4.891 ns/op
# Warmup Iteration   2: 4.863 ns/op
# Warmup Iteration   3: 4.940 ns/op
# Warmup Iteration   4: 4.938 ns/op
# Warmup Iteration   5: 4.939 ns/op
# Warmup Iteration   6: 4.940 ns/op
# Warmup Iteration   7: 4.940 ns/op
# Warmup Iteration   8: 4.941 ns/op
# Warmup Iteration   9: 4.941 ns/op
# Warmup Iteration  10: 4.939 ns/op
Iteration   1: 4.937 ns/op
Iteration   2: 4.937 ns/op
Iteration   3: 4.937 ns/op
Iteration   4: 4.937 ns/op
Iteration   5: 4.937 ns/op
Iteration   6: 4.938 ns/op
Iteration   7: 4.938 ns/op
Iteration   8: 4.938 ns/op
Iteration   9: 4.938 ns/op
Iteration  10: 4.938 ns/op
Iteration  11: 4.940 ns/op
Iteration  12: 4.940 ns/op
Iteration  13: 4.939 ns/op
Iteration  14: 4.939 ns/op
Iteration  15: 4.937 ns/op
Iteration  16: 4.938 ns/op
Iteration  17: 4.939 ns/op
Iteration  18: 4.938 ns/op
Iteration  19: 5.012 ns/op
Iteration  20: 5.007 ns/op
Iteration  21: 5.013 ns/op
Iteration  22: 5.020 ns/op
Iteration  23: 5.021 ns/op
Iteration  24: 5.010 ns/op
Iteration  25: 5.008 ns/op
Iteration  26: 5.016 ns/op
Iteration  27: 5.006 ns/op
Iteration  28: 5.010 ns/op
Iteration  29: 5.009 ns/op
Iteration  30: 5.015 ns/op
Iteration  31: 5.009 ns/op
Iteration  32: 5.007 ns/op
Iteration  33: 5.007 ns/op
Iteration  34: 5.006 ns/op
Iteration  35: 5.016 ns/op
Iteration  36: 5.012 ns/op
Iteration  37: 5.008 ns/op
Iteration  38: 5.012 ns/op
Iteration  39: 5.018 ns/op
Iteration  40: 5.011 ns/op
Iteration  41: 5.006 ns/op
Iteration  42: 5.013 ns/op
Iteration  43: 5.013 ns/op
Iteration  44: 5.013 ns/op
Iteration  45: 5.012 ns/op
Iteration  46: 5.007 ns/op
Iteration  47: 5.008 ns/op
Iteration  48: 5.009 ns/op
Iteration  49: 5.009 ns/op
Iteration  50: 5.013 ns/op


Result "benchmark.StringContains.stringContains":
  4.985 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (4.937, 4.985, 5.021), stdev = 0.036
  CI (99.9%): [4.967, 5.002] (assumes normal distribution)


# Run complete. Total time: 00:03:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmarkregex)       (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches    btxSFeqO\}bz!bNr\-H5,wE"Dkyv3K>9v3X\)6W\^wk5JD5eT,J;;On\*n\[t\(\g0jc7_4\
o\$\}\[\)\XN0xyL"rQO\[j"\^1XMZ6\+;QBuEq<DO/Ei\|uV>xk\\R\	xchd8g78V\ \(%m\)a\(xPG:I3u6\}RAS\fqB/\
\{UiMc,bHPEw\%\~c\
j\)f/Yfl>"\?y`X\$;3qKl\[Y=\
\*\?>ny3\\[>ojXpUL\+h\ m@0mB\	iL\[jg\*\#eVc\[ydW\\\\Sau\(u<JKR>cS5!=@\-I\$6,\-E\*Hp\]U\?LdG\|eTj4dM6\}9iV\\'9l\ 0mvRFp7ZS6l6tJqaI\^c\)@uByUg\|cxA\./rAKK!5\+8,O_\*2X_Vss9\{W\\^v5!\$\ ZUw"N'O7J5waqF=4V5M\?!\~K\],/!fKFkgZ//<udx\(w9mIT,ooH\[G6EMR!b;PXip\)C"Z<QSO\ G>NK\-'p\.`;\$A\[0Z1x\.\&yTp%<Bw>5uzWU\~<\|`C\#9\|\\#\&OyxF_\.":\\|IG\?7uKQ\+pE`G1Eb\-B7da1\+\XDWI\[qc\-\[E33\)tIhWg\$  6n`ns;3M^'  avgt   50  93.973 ± 0.126  ns/op
StringContains.stringContains  btxSFeqO\}bz!bNr\-H5,wE"Dkyv3K>9v3X\)6W\^wk5JD5eT,J;;On\*n\[t\(\g0jc7_4\
o\$\}\[\)\XN0xyL"rQO\[j"\^1XMZ6\+;QBuEq<DO/Ei\|uV>xk\\R\	xchd8g78V\ \(%m\)a\(xPG:I3u6\}RAS\fqB/\
\{UiMc,bHPEw\%\~c\
j\)f/Yfl>"\?y`X\$;3qKl\[Y=\
\*\?>ny3\\[>ojXpUL\+h\ m@0mB\	iL\[jg\*\#eVc\[ydW\\\\Sau\(u<JKR>cS5!=@\-I\$6,\-E\*Hp\]U\?LdG\|eTj4dM6\}9iV\\'9l\ 0mvRFp7ZS6l6tJqaI\^c\)@uByUg\|cxA\./rAKK!5\+8,O_\*2X_Vss9\{W\\^v5!\$\ ZUw"N'O7J5waqF=4V5M\?!\~K\],/!fKFkgZ//<udx\(w9mIT,ooH\[G6EMR!b;PXip\)C"Z<QSO\ G>NK\-'p\.`;\$A\[0Z1x\.\&yTp%<Bw>5uzWU\~<\|`C\#9\|\\#\&OyxF_\.":\\|IG\?7uKQ\+pE`G1Eb\-B7da1\+\XDWI\[qc\-\[E33\)tIhWg\$  6n`ns;3M^'  avgt   50   4.985 ± 0.018  ns/op

Benchmark result is saved to 4_1_dismatching_rm.csv
