# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = e\YHI5Mg[?Fe9.q4tck%pd)v^R_81x$JZ'-0#bc*7D;` YK>yPi9ZVKY/p[EXuGxjWiia9)

# Run progress: 0.00% complete, ETA 00:32:00
# Fork: 1 of 1
# Warmup Iteration   1: 279.596 ns/op
# Warmup Iteration   2: 213.786 ns/op
# Warmup Iteration   3: 190.388 ns/op
# Warmup Iteration   4: 183.097 ns/op
# Warmup Iteration   5: 180.779 ns/op
# Warmup Iteration   6: 179.817 ns/op
# Warmup Iteration   7: 179.448 ns/op
# Warmup Iteration   8: 179.306 ns/op
# Warmup Iteration   9: 179.193 ns/op
# Warmup Iteration  10: 179.339 ns/op
Iteration   1: 179.232 ns/op
Iteration   2: 179.094 ns/op
Iteration   3: 179.070 ns/op
Iteration   4: 179.137 ns/op
Iteration   5: 179.141 ns/op
Iteration   6: 179.194 ns/op
Iteration   7: 179.525 ns/op
Iteration   8: 179.430 ns/op
Iteration   9: 179.351 ns/op
Iteration  10: 179.189 ns/op
Iteration  11: 179.079 ns/op
Iteration  12: 179.147 ns/op
Iteration  13: 179.127 ns/op
Iteration  14: 179.113 ns/op
Iteration  15: 179.245 ns/op
Iteration  16: 179.185 ns/op
Iteration  17: 179.305 ns/op
Iteration  18: 179.204 ns/op
Iteration  19: 179.278 ns/op
Iteration  20: 179.204 ns/op
Iteration  21: 179.201 ns/op
Iteration  22: 179.234 ns/op
Iteration  23: 179.215 ns/op
Iteration  24: 179.191 ns/op
Iteration  25: 179.258 ns/op
Iteration  26: 179.238 ns/op
Iteration  27: 179.292 ns/op
Iteration  28: 179.298 ns/op
Iteration  29: 179.218 ns/op
Iteration  30: 179.206 ns/op
Iteration  31: 179.295 ns/op
Iteration  32: 179.218 ns/op
Iteration  33: 179.187 ns/op
Iteration  34: 180.348 ns/op
Iteration  35: 179.180 ns/op
Iteration  36: 179.140 ns/op
Iteration  37: 179.175 ns/op
Iteration  38: 179.259 ns/op
Iteration  39: 179.341 ns/op
Iteration  40: 180.891 ns/op
Iteration  41: 182.135 ns/op
Iteration  42: 182.715 ns/op
Iteration  43: 182.644 ns/op
Iteration  44: 181.359 ns/op
Iteration  45: 184.802 ns/op
Iteration  46: 184.880 ns/op
Iteration  47: 180.589 ns/op
Iteration  48: 179.368 ns/op
Iteration  49: 179.354 ns/op
Iteration  50: 179.321 ns/op


Result "benchmark.StringContains.regexMatches":
  179.776 ±(99.9%) 0.675 ns/op [Average]
  (min, avg, max) = (179.070, 179.776, 184.880), stdev = 1.363
  CI (99.9%): [179.101, 180.451] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = Yck:&a^[)

# Run progress: 3.13% complete, ETA 00:50:21
# Fork: 1 of 1
# Warmup Iteration   1: 183.748 ns/op
# Warmup Iteration   2: 116.218 ns/op
# Warmup Iteration   3: 97.236 ns/op
# Warmup Iteration   4: 97.143 ns/op
# Warmup Iteration   5: 97.426 ns/op
# Warmup Iteration   6: 97.278 ns/op
# Warmup Iteration   7: 97.269 ns/op
# Warmup Iteration   8: 97.230 ns/op
# Warmup Iteration   9: 97.364 ns/op
# Warmup Iteration  10: 97.379 ns/op
Iteration   1: 97.359 ns/op
Iteration   2: 97.181 ns/op
Iteration   3: 97.208 ns/op
Iteration   4: 97.169 ns/op
Iteration   5: 97.235 ns/op
Iteration   6: 97.157 ns/op
Iteration   7: 97.253 ns/op
Iteration   8: 97.436 ns/op
Iteration   9: 97.304 ns/op
Iteration  10: 97.441 ns/op
Iteration  11: 97.283 ns/op
Iteration  12: 97.298 ns/op
Iteration  13: 97.475 ns/op
Iteration  14: 97.296 ns/op
Iteration  15: 97.359 ns/op
Iteration  16: 97.231 ns/op
Iteration  17: 97.201 ns/op
Iteration  18: 97.199 ns/op
Iteration  19: 97.180 ns/op
Iteration  20: 97.456 ns/op
Iteration  21: 97.199 ns/op
Iteration  22: 97.147 ns/op
Iteration  23: 97.278 ns/op
Iteration  24: 97.212 ns/op
Iteration  25: 97.245 ns/op
Iteration  26: 97.358 ns/op
Iteration  27: 97.564 ns/op
Iteration  28: 97.629 ns/op
Iteration  29: 97.249 ns/op
Iteration  30: 97.242 ns/op
Iteration  31: 97.267 ns/op
Iteration  32: 97.251 ns/op
Iteration  33: 97.237 ns/op
Iteration  34: 97.307 ns/op
Iteration  35: 97.647 ns/op
Iteration  36: 97.267 ns/op
Iteration  37: 97.247 ns/op
Iteration  38: 97.287 ns/op
Iteration  39: 97.249 ns/op
Iteration  40: 97.347 ns/op
Iteration  41: 97.286 ns/op
Iteration  42: 97.448 ns/op
Iteration  43: 97.252 ns/op
Iteration  44: 97.203 ns/op
Iteration  45: 97.297 ns/op
Iteration  46: 97.262 ns/op
Iteration  47: 97.378 ns/op
Iteration  48: 97.796 ns/op
Iteration  49: 97.335 ns/op
Iteration  50: 97.308 ns/op


Result "benchmark.StringContains.regexMatches":
  97.310 ±(99.9%) 0.066 ns/op [Average]
  (min, avg, max) = (97.147, 97.310, 97.796), stdev = 0.132
  CI (99.9%): [97.245, 97.376] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = (#r%'-G*W)

# Run progress: 6.25% complete, ETA 00:48:42
# Fork: 1 of 1
# Warmup Iteration   1: 180.595 ns/op
# Warmup Iteration   2: 109.013 ns/op
# Warmup Iteration   3: 92.827 ns/op
# Warmup Iteration   4: 92.849 ns/op
# Warmup Iteration   5: 92.806 ns/op
# Warmup Iteration   6: 92.810 ns/op
# Warmup Iteration   7: 92.780 ns/op
# Warmup Iteration   8: 92.757 ns/op
# Warmup Iteration   9: 92.773 ns/op
# Warmup Iteration  10: 92.855 ns/op
Iteration   1: 92.827 ns/op
Iteration   2: 92.794 ns/op
Iteration   3: 93.802 ns/op
Iteration   4: 93.445 ns/op
Iteration   5: 95.064 ns/op
Iteration   6: 96.019 ns/op
Iteration   7: 98.241 ns/op
Iteration   8: 98.085 ns/op
Iteration   9: 96.691 ns/op
Iteration  10: 96.461 ns/op
Iteration  11: 95.813 ns/op
Iteration  12: 95.008 ns/op
Iteration  13: 95.083 ns/op
Iteration  14: 94.926 ns/op
Iteration  15: 94.870 ns/op
Iteration  16: 95.195 ns/op
Iteration  17: 94.969 ns/op
Iteration  18: 94.923 ns/op
Iteration  19: 92.922 ns/op
Iteration  20: 92.879 ns/op
Iteration  21: 92.757 ns/op
Iteration  22: 92.738 ns/op
Iteration  23: 92.922 ns/op
Iteration  24: 93.277 ns/op
Iteration  25: 92.838 ns/op
Iteration  26: 92.891 ns/op
Iteration  27: 92.934 ns/op
Iteration  28: 92.724 ns/op
Iteration  29: 92.709 ns/op
Iteration  30: 92.740 ns/op
Iteration  31: 92.762 ns/op
Iteration  32: 92.752 ns/op
Iteration  33: 92.757 ns/op
Iteration  34: 93.117 ns/op
Iteration  35: 92.802 ns/op
Iteration  36: 92.816 ns/op
Iteration  37: 92.832 ns/op
Iteration  38: 92.843 ns/op
Iteration  39: 92.725 ns/op
Iteration  40: 92.824 ns/op
Iteration  41: 92.762 ns/op
Iteration  42: 92.840 ns/op
Iteration  43: 92.802 ns/op
Iteration  44: 92.781 ns/op
Iteration  45: 92.707 ns/op
Iteration  46: 92.842 ns/op
Iteration  47: 92.794 ns/op
Iteration  48: 92.935 ns/op
Iteration  49: 92.676 ns/op
Iteration  50: 92.681 ns/op


Result "benchmark.StringContains.regexMatches":
  93.692 ±(99.9%) 0.730 ns/op [Average]
  (min, avg, max) = (92.676, 93.692, 98.241), stdev = 1.475
  CI (99.9%): [92.962, 94.422] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = )`j7Pq#;g.:$%v9v]RHGgpZpMR#:DUG+[vejb=rvTo#(edqo=>gwXUu[w^Flk-?p^MWOei8Emyl8P]L'AB2hlP>rZ"m[('DOFQqzzvPo8%bu8e<15ZIznE\]$f6UNaA2n@5p_=#ReVywLc+Cc$^^*Hzx;87kdYqa-?T4cof@!\Yy^rv^[M$Xmvk5eIU"8>1yY(jQMB[)

# Run progress: 9.38% complete, ETA 00:47:04
# Fork: 1 of 1
# Warmup Iteration   1: 1395.388 ns/op
# Warmup Iteration   2: 1262.700 ns/op
# Warmup Iteration   3: 1233.952 ns/op
# Warmup Iteration   4: 1231.698 ns/op
# Warmup Iteration   5: 1231.879 ns/op
# Warmup Iteration   6: 1229.806 ns/op
# Warmup Iteration   7: 1229.648 ns/op
# Warmup Iteration   8: 1229.466 ns/op
# Warmup Iteration   9: 1229.138 ns/op
# Warmup Iteration  10: 1229.350 ns/op
Iteration   1: 1229.242 ns/op
Iteration   2: 1229.929 ns/op
Iteration   3: 1230.474 ns/op
Iteration   4: 1229.254 ns/op
Iteration   5: 1231.311 ns/op
Iteration   6: 1230.716 ns/op
Iteration   7: 1232.958 ns/op
Iteration   8: 1231.914 ns/op
Iteration   9: 1231.285 ns/op
Iteration  10: 1231.293 ns/op
Iteration  11: 1231.067 ns/op
Iteration  12: 1230.029 ns/op
Iteration  13: 1229.698 ns/op
Iteration  14: 1229.957 ns/op
Iteration  15: 1230.465 ns/op
Iteration  16: 1229.441 ns/op
Iteration  17: 1229.315 ns/op
Iteration  18: 1229.054 ns/op
Iteration  19: 1229.243 ns/op
Iteration  20: 1228.908 ns/op
Iteration  21: 1229.330 ns/op
Iteration  22: 1229.404 ns/op
Iteration  23: 1229.993 ns/op
Iteration  24: 1229.280 ns/op
Iteration  25: 1229.598 ns/op
Iteration  26: 1229.049 ns/op
Iteration  27: 1233.969 ns/op
Iteration  28: 1232.658 ns/op
Iteration  29: 1233.476 ns/op
Iteration  30: 1232.526 ns/op
Iteration  31: 1232.754 ns/op
Iteration  32: 1231.699 ns/op
Iteration  33: 1230.568 ns/op
Iteration  34: 1229.957 ns/op
Iteration  35: 1231.344 ns/op
Iteration  36: 1230.072 ns/op
Iteration  37: 1229.133 ns/op
Iteration  38: 1229.008 ns/op
Iteration  39: 1228.888 ns/op
Iteration  40: 1229.558 ns/op
Iteration  41: 1229.957 ns/op
Iteration  42: 1229.048 ns/op
Iteration  43: 1229.286 ns/op
Iteration  44: 1229.305 ns/op
Iteration  45: 1229.471 ns/op
Iteration  46: 1229.080 ns/op
Iteration  47: 1228.977 ns/op
Iteration  48: 1229.755 ns/op
Iteration  49: 1229.577 ns/op
Iteration  50: 1229.457 ns/op


Result "benchmark.StringContains.regexMatches":
  1230.235 ±(99.9%) 0.654 ns/op [Average]
  (min, avg, max) = (1228.888, 1230.235, 1233.969), stdev = 1.321
  CI (99.9%): [1229.581, 1230.889] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = [DC"139h=0!F/7u.1ZKSXK#$^c-jcd]Fc#w;"^i24M]KF2@vb^i73`7`+u!&vd(-'dq%7q8`P'y *)

# Run progress: 12.50% complete, ETA 00:45:25
# Fork: 1 of 1
# Warmup Iteration   1: 595.322 ns/op
# Warmup Iteration   2: 533.470 ns/op
# Warmup Iteration   3: 500.635 ns/op
# Warmup Iteration   4: 495.529 ns/op
# Warmup Iteration   5: 494.662 ns/op
# Warmup Iteration   6: 493.795 ns/op
# Warmup Iteration   7: 493.590 ns/op
# Warmup Iteration   8: 493.668 ns/op
# Warmup Iteration   9: 493.597 ns/op
# Warmup Iteration  10: 493.831 ns/op
Iteration   1: 494.734 ns/op
Iteration   2: 493.967 ns/op
Iteration   3: 493.445 ns/op
Iteration   4: 493.362 ns/op
Iteration   5: 493.544 ns/op
Iteration   6: 493.506 ns/op
Iteration   7: 494.403 ns/op
Iteration   8: 494.831 ns/op
Iteration   9: 494.528 ns/op
Iteration  10: 494.023 ns/op
Iteration  11: 493.907 ns/op
Iteration  12: 493.498 ns/op
Iteration  13: 493.501 ns/op
Iteration  14: 493.646 ns/op
Iteration  15: 493.538 ns/op
Iteration  16: 493.655 ns/op
Iteration  17: 493.520 ns/op
Iteration  18: 493.480 ns/op
Iteration  19: 493.698 ns/op
Iteration  20: 493.620 ns/op
Iteration  21: 493.889 ns/op
Iteration  22: 494.188 ns/op
Iteration  23: 494.154 ns/op
Iteration  24: 493.844 ns/op
Iteration  25: 493.851 ns/op
Iteration  26: 493.817 ns/op
Iteration  27: 493.793 ns/op
Iteration  28: 493.669 ns/op
Iteration  29: 493.618 ns/op
Iteration  30: 493.766 ns/op
Iteration  31: 494.114 ns/op
Iteration  32: 493.713 ns/op
Iteration  33: 493.861 ns/op
Iteration  34: 493.768 ns/op
Iteration  35: 493.958 ns/op
Iteration  36: 493.653 ns/op
Iteration  37: 493.633 ns/op
Iteration  38: 493.503 ns/op
Iteration  39: 493.559 ns/op
Iteration  40: 493.655 ns/op
Iteration  41: 493.659 ns/op
Iteration  42: 493.679 ns/op
Iteration  43: 493.702 ns/op
Iteration  44: 493.739 ns/op
Iteration  45: 493.734 ns/op
Iteration  46: 493.637 ns/op
Iteration  47: 493.612 ns/op
Iteration  48: 493.687 ns/op
Iteration  49: 494.219 ns/op
Iteration  50: 493.564 ns/op


Result "benchmark.StringContains.regexMatches":
  493.793 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (493.362, 493.793, 494.831), stdev = 0.318
  CI (99.9%): [493.635, 493.950] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = )kp9OPQ!'_eH4Q@+T+'2*JB.4@"/7]P<"3._yIfd6X\PyYa=h64JO&N_$h'SOJ]bbvZm)Ryy>!)#lNY0@/ha1LE)

# Run progress: 15.63% complete, ETA 00:43:47
# Fork: 1 of 1
# Warmup Iteration   1: 648.491 ns/op
# Warmup Iteration   2: 590.154 ns/op
# Warmup Iteration   3: 559.919 ns/op
# Warmup Iteration   4: 556.251 ns/op
# Warmup Iteration   5: 557.891 ns/op
# Warmup Iteration   6: 556.869 ns/op
# Warmup Iteration   7: 554.480 ns/op
# Warmup Iteration   8: 553.535 ns/op
# Warmup Iteration   9: 555.867 ns/op
# Warmup Iteration  10: 553.007 ns/op
Iteration   1: 552.766 ns/op
Iteration   2: 552.876 ns/op
Iteration   3: 552.982 ns/op
Iteration   4: 552.839 ns/op
Iteration   5: 552.784 ns/op
Iteration   6: 553.179 ns/op
Iteration   7: 552.486 ns/op
Iteration   8: 552.641 ns/op
Iteration   9: 552.692 ns/op
Iteration  10: 553.266 ns/op
Iteration  11: 553.342 ns/op
Iteration  12: 554.131 ns/op
Iteration  13: 552.402 ns/op
Iteration  14: 553.421 ns/op
Iteration  15: 552.280 ns/op
Iteration  16: 552.799 ns/op
Iteration  17: 552.428 ns/op
Iteration  18: 552.598 ns/op
Iteration  19: 552.597 ns/op
Iteration  20: 552.353 ns/op
Iteration  21: 552.355 ns/op
Iteration  22: 552.120 ns/op
Iteration  23: 552.230 ns/op
Iteration  24: 552.042 ns/op
Iteration  25: 552.186 ns/op
Iteration  26: 552.064 ns/op
Iteration  27: 552.341 ns/op
Iteration  28: 552.959 ns/op
Iteration  29: 552.812 ns/op
Iteration  30: 553.815 ns/op
Iteration  31: 552.984 ns/op
Iteration  32: 552.471 ns/op
Iteration  33: 552.455 ns/op
Iteration  34: 552.413 ns/op
Iteration  35: 552.499 ns/op
Iteration  36: 552.352 ns/op
Iteration  37: 552.316 ns/op
Iteration  38: 552.382 ns/op
Iteration  39: 552.417 ns/op
Iteration  40: 552.413 ns/op
Iteration  41: 552.367 ns/op
Iteration  42: 552.288 ns/op
Iteration  43: 552.171 ns/op
Iteration  44: 552.203 ns/op
Iteration  45: 552.360 ns/op
Iteration  46: 552.030 ns/op
Iteration  47: 552.250 ns/op
Iteration  48: 552.348 ns/op
Iteration  49: 552.177 ns/op
Iteration  50: 552.023 ns/op


Result "benchmark.StringContains.regexMatches":
  552.574 ±(99.9%) 0.223 ns/op [Average]
  (min, avg, max) = (552.023, 552.574, 554.131), stdev = 0.450
  CI (99.9%): [552.351, 552.797] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = S`qysoJmb_DYYLv_ovbrFmv%u/r@))`Z>\GD)s)`$(XiG!6/m=:Sw(3U-ddXzBPi)

# Run progress: 18.75% complete, ETA 00:42:09
# Fork: 1 of 1
# Warmup Iteration   1: 271.861 ns/op
# Warmup Iteration   2: 206.821 ns/op
# Warmup Iteration   3: 184.696 ns/op
# Warmup Iteration   4: 177.572 ns/op
# Warmup Iteration   5: 175.059 ns/op
# Warmup Iteration   6: 174.167 ns/op
# Warmup Iteration   7: 173.834 ns/op
# Warmup Iteration   8: 173.720 ns/op
# Warmup Iteration   9: 173.637 ns/op
# Warmup Iteration  10: 173.642 ns/op
Iteration   1: 173.734 ns/op
Iteration   2: 173.589 ns/op
Iteration   3: 173.597 ns/op
Iteration   4: 173.568 ns/op
Iteration   5: 173.611 ns/op
Iteration   6: 173.680 ns/op
Iteration   7: 173.599 ns/op
Iteration   8: 173.764 ns/op
Iteration   9: 173.565 ns/op
Iteration  10: 173.596 ns/op
Iteration  11: 173.555 ns/op
Iteration  12: 173.667 ns/op
Iteration  13: 173.542 ns/op
Iteration  14: 173.523 ns/op
Iteration  15: 174.700 ns/op
Iteration  16: 174.590 ns/op
Iteration  17: 175.936 ns/op
Iteration  18: 176.889 ns/op
Iteration  19: 178.294 ns/op
Iteration  20: 178.774 ns/op
Iteration  21: 178.140 ns/op
Iteration  22: 174.581 ns/op
Iteration  23: 174.884 ns/op
Iteration  24: 173.727 ns/op
Iteration  25: 173.603 ns/op
Iteration  26: 173.599 ns/op
Iteration  27: 174.299 ns/op
Iteration  28: 173.758 ns/op
Iteration  29: 173.687 ns/op
Iteration  30: 173.854 ns/op
Iteration  31: 173.600 ns/op
Iteration  32: 173.692 ns/op
Iteration  33: 173.545 ns/op
Iteration  34: 173.559 ns/op
Iteration  35: 173.663 ns/op
Iteration  36: 173.543 ns/op
Iteration  37: 173.655 ns/op
Iteration  38: 173.624 ns/op
Iteration  39: 173.534 ns/op
Iteration  40: 173.499 ns/op
Iteration  41: 173.529 ns/op
Iteration  42: 173.589 ns/op
Iteration  43: 173.597 ns/op
Iteration  44: 173.648 ns/op
Iteration  45: 173.592 ns/op
Iteration  46: 173.597 ns/op
Iteration  47: 173.658 ns/op
Iteration  48: 173.667 ns/op
Iteration  49: 173.715 ns/op
Iteration  50: 173.789 ns/op


Result "benchmark.StringContains.regexMatches":
  174.124 ±(99.9%) 0.623 ns/op [Average]
  (min, avg, max) = (173.499, 174.124, 178.774), stdev = 1.258
  CI (99.9%): [173.501, 174.747] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = -BSo !d`WxJb+KLYBgLuziRY]+D_NJvgVagF[m4j\-nx"w3t65TBq6Q`$QT#7P)

# Run progress: 21.88% complete, ETA 00:40:32
# Fork: 1 of 1
# Warmup Iteration   1: 546.447 ns/op
# Warmup Iteration   2: 483.418 ns/op
# Warmup Iteration   3: 485.695 ns/op
# Warmup Iteration   4: 486.269 ns/op
# Warmup Iteration   5: 485.993 ns/op
# Warmup Iteration   6: 485.680 ns/op
# Warmup Iteration   7: 485.693 ns/op
# Warmup Iteration   8: 485.535 ns/op
# Warmup Iteration   9: 485.695 ns/op
# Warmup Iteration  10: 485.922 ns/op
Iteration   1: 485.760 ns/op
Iteration   2: 485.680 ns/op
Iteration   3: 485.782 ns/op
Iteration   4: 485.574 ns/op
Iteration   5: 485.662 ns/op
Iteration   6: 486.167 ns/op
Iteration   7: 486.220 ns/op
Iteration   8: 485.937 ns/op
Iteration   9: 485.648 ns/op
Iteration  10: 486.183 ns/op
Iteration  11: 485.981 ns/op
Iteration  12: 486.097 ns/op
Iteration  13: 488.845 ns/op
Iteration  14: 485.988 ns/op
Iteration  15: 485.471 ns/op
Iteration  16: 485.717 ns/op
Iteration  17: 485.849 ns/op
Iteration  18: 485.734 ns/op
Iteration  19: 485.652 ns/op
Iteration  20: 485.726 ns/op
Iteration  21: 485.690 ns/op
Iteration  22: 486.350 ns/op
Iteration  23: 486.303 ns/op
Iteration  24: 486.227 ns/op
Iteration  25: 486.472 ns/op
Iteration  26: 486.121 ns/op
Iteration  27: 486.109 ns/op
Iteration  28: 485.775 ns/op
Iteration  29: 485.759 ns/op
Iteration  30: 486.381 ns/op
Iteration  31: 486.135 ns/op
Iteration  32: 485.813 ns/op
Iteration  33: 486.018 ns/op
Iteration  34: 485.740 ns/op
Iteration  35: 485.952 ns/op
Iteration  36: 485.719 ns/op
Iteration  37: 485.510 ns/op
Iteration  38: 486.101 ns/op
Iteration  39: 490.401 ns/op
Iteration  40: 489.632 ns/op
Iteration  41: 489.681 ns/op
Iteration  42: 491.040 ns/op
Iteration  43: 490.087 ns/op
Iteration  44: 489.069 ns/op
Iteration  45: 487.205 ns/op
Iteration  46: 487.008 ns/op
Iteration  47: 487.111 ns/op
Iteration  48: 486.166 ns/op
Iteration  49: 485.855 ns/op
Iteration  50: 485.712 ns/op


Result "benchmark.StringContains.regexMatches":
  486.536 ±(99.9%) 0.700 ns/op [Average]
  (min, avg, max) = (485.471, 486.536, 491.040), stdev = 1.414
  CI (99.9%): [485.837, 487.236] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = MH>c:L%0Zwl"INTyaI0'mzt`nLt<RTQN\cTtR^#l0>Cwd'<B)

# Run progress: 25.00% complete, ETA 00:38:55
# Fork: 1 of 1
# Warmup Iteration   1: 240.838 ns/op
# Warmup Iteration   2: 176.076 ns/op
# Warmup Iteration   3: 155.397 ns/op
# Warmup Iteration   4: 143.061 ns/op
# Warmup Iteration   5: 143.348 ns/op
# Warmup Iteration   6: 142.974 ns/op
# Warmup Iteration   7: 142.949 ns/op
# Warmup Iteration   8: 143.244 ns/op
# Warmup Iteration   9: 142.886 ns/op
# Warmup Iteration  10: 142.923 ns/op
Iteration   1: 142.804 ns/op
Iteration   2: 143.089 ns/op
Iteration   3: 142.803 ns/op
Iteration   4: 142.874 ns/op
Iteration   5: 142.803 ns/op
Iteration   6: 142.834 ns/op
Iteration   7: 142.737 ns/op
Iteration   8: 143.289 ns/op
Iteration   9: 143.297 ns/op
Iteration  10: 142.871 ns/op
Iteration  11: 142.905 ns/op
Iteration  12: 143.306 ns/op
Iteration  13: 143.168 ns/op
Iteration  14: 143.011 ns/op
Iteration  15: 143.091 ns/op
Iteration  16: 142.877 ns/op
Iteration  17: 143.373 ns/op
Iteration  18: 142.983 ns/op
Iteration  19: 143.015 ns/op
Iteration  20: 142.860 ns/op
Iteration  21: 143.023 ns/op
Iteration  22: 142.832 ns/op
Iteration  23: 142.862 ns/op
Iteration  24: 142.871 ns/op
Iteration  25: 142.816 ns/op
Iteration  26: 142.762 ns/op
Iteration  27: 142.820 ns/op
Iteration  28: 143.035 ns/op
Iteration  29: 142.784 ns/op
Iteration  30: 143.042 ns/op
Iteration  31: 142.876 ns/op
Iteration  32: 143.161 ns/op
Iteration  33: 143.193 ns/op
Iteration  34: 143.029 ns/op
Iteration  35: 142.804 ns/op
Iteration  36: 142.826 ns/op
Iteration  37: 142.924 ns/op
Iteration  38: 142.837 ns/op
Iteration  39: 142.859 ns/op
Iteration  40: 143.057 ns/op
Iteration  41: 142.940 ns/op
Iteration  42: 142.841 ns/op
Iteration  43: 143.303 ns/op
Iteration  44: 142.919 ns/op
Iteration  45: 142.846 ns/op
Iteration  46: 143.029 ns/op
Iteration  47: 142.738 ns/op
Iteration  48: 143.250 ns/op
Iteration  49: 142.688 ns/op
Iteration  50: 142.772 ns/op


Result "benchmark.StringContains.regexMatches":
  142.955 ±(99.9%) 0.087 ns/op [Average]
  (min, avg, max) = (142.688, 142.955, 143.373), stdev = 0.175
  CI (99.9%): [142.868, 143.041] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = <q5S2!1\8VVW=xSw0t y=;TKJUbD.z].oV;k9ne rH8?)Sr^QM`_O+YZgKK8vQycML/ay*b!yG4<&Nw_>BuoG_Isz#J.^U3cO'a"CsT0GMVnj!kvU)

# Run progress: 28.13% complete, ETA 00:37:17
# Fork: 1 of 1
# Warmup Iteration   1: 771.287 ns/op
# Warmup Iteration   2: 720.823 ns/op
# Warmup Iteration   3: 685.217 ns/op
# Warmup Iteration   4: 681.134 ns/op
# Warmup Iteration   5: 680.133 ns/op
# Warmup Iteration   6: 679.843 ns/op
# Warmup Iteration   7: 680.100 ns/op
# Warmup Iteration   8: 679.685 ns/op
# Warmup Iteration   9: 679.567 ns/op
# Warmup Iteration  10: 681.144 ns/op
Iteration   1: 679.594 ns/op
Iteration   2: 682.228 ns/op
Iteration   3: 683.729 ns/op
Iteration   4: 685.668 ns/op
Iteration   5: 683.176 ns/op
Iteration   6: 682.429 ns/op
Iteration   7: 684.062 ns/op
Iteration   8: 684.757 ns/op
Iteration   9: 683.671 ns/op
Iteration  10: 683.056 ns/op
Iteration  11: 685.459 ns/op
Iteration  12: 681.751 ns/op
Iteration  13: 681.432 ns/op
Iteration  14: 681.633 ns/op
Iteration  15: 681.586 ns/op
Iteration  16: 682.375 ns/op
Iteration  17: 681.642 ns/op
Iteration  18: 681.663 ns/op
Iteration  19: 679.420 ns/op
Iteration  20: 680.570 ns/op
Iteration  21: 679.417 ns/op
Iteration  22: 680.128 ns/op
Iteration  23: 681.289 ns/op
Iteration  24: 679.467 ns/op
Iteration  25: 679.262 ns/op
Iteration  26: 680.484 ns/op
Iteration  27: 679.709 ns/op
Iteration  28: 679.291 ns/op
Iteration  29: 679.336 ns/op
Iteration  30: 679.341 ns/op
Iteration  31: 679.338 ns/op
Iteration  32: 679.622 ns/op
Iteration  33: 680.305 ns/op
Iteration  34: 679.360 ns/op
Iteration  35: 679.299 ns/op
Iteration  36: 679.214 ns/op
Iteration  37: 679.479 ns/op
Iteration  38: 679.415 ns/op
Iteration  39: 679.264 ns/op
Iteration  40: 680.211 ns/op
Iteration  41: 679.647 ns/op
Iteration  42: 679.603 ns/op
Iteration  43: 679.941 ns/op
Iteration  44: 681.465 ns/op
Iteration  45: 680.093 ns/op
Iteration  46: 679.096 ns/op
Iteration  47: 679.724 ns/op
Iteration  48: 679.444 ns/op
Iteration  49: 679.324 ns/op
Iteration  50: 679.257 ns/op


Result "benchmark.StringContains.regexMatches":
  680.814 ±(99.9%) 0.896 ns/op [Average]
  (min, avg, max) = (679.096, 680.814, 685.668), stdev = 1.809
  CI (99.9%): [679.919, 681.710] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = LHoXf`D:n@@vC7oDg)019gUyF)@K/k^BmYUR].Ol*GS?krar/Zf[lLi2SS_h9lDvg;3+uo^7=5e#Zp63K6;ul.gsk$N@)2s-v?.YZd!6dm<=p)MPxhG=ex)'LIol5%?0P/qC6Ra5hUSO.hwIlWkX#[;eo0v7UEu#OIFiCsDA=9s;.8Ohwj^"L6qeYar;V1QWbGF1g3Rl+3IBpY` P^Y5[$\EFkDF9&wb6^jzQ34il?3KB)

# Run progress: 31.25% complete, ETA 00:35:40
# Fork: 1 of 1
# Warmup Iteration   1: 1585.349 ns/op
# Warmup Iteration   2: 1462.395 ns/op
# Warmup Iteration   3: 1445.602 ns/op
# Warmup Iteration   4: 1445.024 ns/op
# Warmup Iteration   5: 1443.875 ns/op
# Warmup Iteration   6: 1444.227 ns/op
# Warmup Iteration   7: 1443.972 ns/op
# Warmup Iteration   8: 1443.933 ns/op
# Warmup Iteration   9: 1444.245 ns/op
# Warmup Iteration  10: 1444.063 ns/op
Iteration   1: 1444.292 ns/op
Iteration   2: 1444.137 ns/op
Iteration   3: 1444.432 ns/op
Iteration   4: 1444.534 ns/op
Iteration   5: 1443.961 ns/op
Iteration   6: 1444.278 ns/op
Iteration   7: 1446.329 ns/op
Iteration   8: 1444.929 ns/op
Iteration   9: 1444.818 ns/op
Iteration  10: 1444.642 ns/op
Iteration  11: 1444.262 ns/op
Iteration  12: 1445.319 ns/op
Iteration  13: 1445.932 ns/op
Iteration  14: 1444.448 ns/op
Iteration  15: 1444.417 ns/op
Iteration  16: 1444.192 ns/op
Iteration  17: 1444.318 ns/op
Iteration  18: 1444.411 ns/op
Iteration  19: 1444.623 ns/op
Iteration  20: 1444.033 ns/op
Iteration  21: 1444.550 ns/op
Iteration  22: 1444.676 ns/op
Iteration  23: 1447.133 ns/op
Iteration  24: 1447.693 ns/op
Iteration  25: 1448.141 ns/op
Iteration  26: 1446.836 ns/op
Iteration  27: 1450.901 ns/op
Iteration  28: 1451.084 ns/op
Iteration  29: 1448.258 ns/op
Iteration  30: 1447.180 ns/op
Iteration  31: 1446.476 ns/op
Iteration  32: 1445.908 ns/op
Iteration  33: 1445.328 ns/op
Iteration  34: 1445.274 ns/op
Iteration  35: 1445.727 ns/op
Iteration  36: 1444.514 ns/op
Iteration  37: 1444.220 ns/op
Iteration  38: 1444.463 ns/op
Iteration  39: 1444.782 ns/op
Iteration  40: 1444.486 ns/op
Iteration  41: 1444.671 ns/op
Iteration  42: 1445.046 ns/op
Iteration  43: 1444.575 ns/op
Iteration  44: 1444.809 ns/op
Iteration  45: 1444.704 ns/op
Iteration  46: 1444.242 ns/op
Iteration  47: 1444.492 ns/op
Iteration  48: 1444.001 ns/op
Iteration  49: 1444.018 ns/op
Iteration  50: 1444.147 ns/op


Result "benchmark.StringContains.regexMatches":
  1445.293 ±(99.9%) 0.798 ns/op [Average]
  (min, avg, max) = (1443.961, 1445.293, 1451.084), stdev = 1.612
  CI (99.9%): [1444.495, 1446.091] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = \"D5Rd2/;GAfh8hY/zmv\'yD?i<.I;-Z'4T8AGfl"E[[;0earOE *#Q\5C/z`/Oxv9[EDyzYuP)

# Run progress: 34.38% complete, ETA 00:34:02
# Fork: 1 of 1
# Warmup Iteration   1: 299.408 ns/op
# Warmup Iteration   2: 233.392 ns/op
# Warmup Iteration   3: 208.690 ns/op
# Warmup Iteration   4: 201.359 ns/op
# Warmup Iteration   5: 198.872 ns/op
# Warmup Iteration   6: 198.055 ns/op
# Warmup Iteration   7: 197.775 ns/op
# Warmup Iteration   8: 197.678 ns/op
# Warmup Iteration   9: 197.872 ns/op
# Warmup Iteration  10: 197.835 ns/op
Iteration   1: 197.673 ns/op
Iteration   2: 197.663 ns/op
Iteration   3: 197.703 ns/op
Iteration   4: 197.638 ns/op
Iteration   5: 197.671 ns/op
Iteration   6: 197.647 ns/op
Iteration   7: 197.770 ns/op
Iteration   8: 197.706 ns/op
Iteration   9: 197.766 ns/op
Iteration  10: 197.830 ns/op
Iteration  11: 197.647 ns/op
Iteration  12: 197.734 ns/op
Iteration  13: 197.788 ns/op
Iteration  14: 197.827 ns/op
Iteration  15: 197.862 ns/op
Iteration  16: 197.871 ns/op
Iteration  17: 197.748 ns/op
Iteration  18: 197.685 ns/op
Iteration  19: 197.878 ns/op
Iteration  20: 197.856 ns/op
Iteration  21: 197.729 ns/op
Iteration  22: 198.123 ns/op
Iteration  23: 198.372 ns/op
Iteration  24: 197.948 ns/op
Iteration  25: 197.891 ns/op
Iteration  26: 197.794 ns/op
Iteration  27: 197.894 ns/op
Iteration  28: 197.784 ns/op
Iteration  29: 197.698 ns/op
Iteration  30: 197.706 ns/op
Iteration  31: 197.935 ns/op
Iteration  32: 197.780 ns/op
Iteration  33: 197.769 ns/op
Iteration  34: 197.702 ns/op
Iteration  35: 197.771 ns/op
Iteration  36: 197.768 ns/op
Iteration  37: 197.675 ns/op
Iteration  38: 197.816 ns/op
Iteration  39: 197.826 ns/op
Iteration  40: 197.750 ns/op
Iteration  41: 197.891 ns/op
Iteration  42: 197.738 ns/op
Iteration  43: 197.856 ns/op
Iteration  44: 197.881 ns/op
Iteration  45: 197.727 ns/op
Iteration  46: 197.788 ns/op
Iteration  47: 197.721 ns/op
Iteration  48: 197.839 ns/op
Iteration  49: 197.777 ns/op
Iteration  50: 197.801 ns/op


Result "benchmark.StringContains.regexMatches":
  197.794 ±(99.9%) 0.062 ns/op [Average]
  (min, avg, max) = (197.638, 197.794, 198.372), stdev = 0.125
  CI (99.9%): [197.733, 197.856] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = &HfnW9!)

# Run progress: 37.50% complete, ETA 00:32:25
# Fork: 1 of 1
# Warmup Iteration   1: 181.456 ns/op
# Warmup Iteration   2: 116.577 ns/op
# Warmup Iteration   3: 98.187 ns/op
# Warmup Iteration   4: 98.071 ns/op
# Warmup Iteration   5: 95.909 ns/op
# Warmup Iteration   6: 97.399 ns/op
# Warmup Iteration   7: 97.907 ns/op
# Warmup Iteration   8: 95.890 ns/op
# Warmup Iteration   9: 95.045 ns/op
# Warmup Iteration  10: 94.919 ns/op
Iteration   1: 94.899 ns/op
Iteration   2: 95.031 ns/op
Iteration   3: 94.955 ns/op
Iteration   4: 94.927 ns/op
Iteration   5: 94.944 ns/op
Iteration   6: 94.925 ns/op
Iteration   7: 94.945 ns/op
Iteration   8: 94.883 ns/op
Iteration   9: 94.843 ns/op
Iteration  10: 94.917 ns/op
Iteration  11: 94.844 ns/op
Iteration  12: 94.940 ns/op
Iteration  13: 95.022 ns/op
Iteration  14: 94.956 ns/op
Iteration  15: 94.890 ns/op
Iteration  16: 94.869 ns/op
Iteration  17: 94.863 ns/op
Iteration  18: 94.876 ns/op
Iteration  19: 94.870 ns/op
Iteration  20: 95.353 ns/op
Iteration  21: 94.855 ns/op
Iteration  22: 94.812 ns/op
Iteration  23: 94.904 ns/op
Iteration  24: 94.939 ns/op
Iteration  25: 94.938 ns/op
Iteration  26: 95.050 ns/op
Iteration  27: 94.893 ns/op
Iteration  28: 95.108 ns/op
Iteration  29: 94.933 ns/op
Iteration  30: 95.018 ns/op
Iteration  31: 94.971 ns/op
Iteration  32: 95.057 ns/op
Iteration  33: 95.283 ns/op
Iteration  34: 95.049 ns/op
Iteration  35: 94.881 ns/op
Iteration  36: 95.190 ns/op
Iteration  37: 94.836 ns/op
Iteration  38: 95.077 ns/op
Iteration  39: 95.054 ns/op
Iteration  40: 94.865 ns/op
Iteration  41: 94.991 ns/op
Iteration  42: 94.927 ns/op
Iteration  43: 94.901 ns/op
Iteration  44: 94.861 ns/op
Iteration  45: 94.899 ns/op
Iteration  46: 94.972 ns/op
Iteration  47: 94.858 ns/op
Iteration  48: 94.905 ns/op
Iteration  49: 94.923 ns/op
Iteration  50: 94.972 ns/op


Result "benchmark.StringContains.regexMatches":
  94.954 ±(99.9%) 0.054 ns/op [Average]
  (min, avg, max) = (94.812, 94.954, 95.353), stdev = 0.109
  CI (99.9%): [94.900, 95.007] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = 7ynz :s.&LjFiAjMNmWkEbur(G(S)cu]&/TR&__vi56'RAm#hsXs.O4^+*#FV?8^XBtA3SSj[st)

# Run progress: 40.63% complete, ETA 00:30:48
# Fork: 1 of 1
# Warmup Iteration   1: 573.420 ns/op
# Warmup Iteration   2: 519.322 ns/op
# Warmup Iteration   3: 489.274 ns/op
# Warmup Iteration   4: 484.409 ns/op
# Warmup Iteration   5: 483.589 ns/op
# Warmup Iteration   6: 483.806 ns/op
# Warmup Iteration   7: 483.496 ns/op
# Warmup Iteration   8: 484.154 ns/op
# Warmup Iteration   9: 483.382 ns/op
# Warmup Iteration  10: 483.467 ns/op
Iteration   1: 483.673 ns/op
Iteration   2: 483.755 ns/op
Iteration   3: 483.680 ns/op
Iteration   4: 483.781 ns/op
Iteration   5: 483.770 ns/op
Iteration   6: 483.635 ns/op
Iteration   7: 483.893 ns/op
Iteration   8: 484.016 ns/op
Iteration   9: 483.773 ns/op
Iteration  10: 483.819 ns/op
Iteration  11: 483.800 ns/op
Iteration  12: 483.696 ns/op
Iteration  13: 483.736 ns/op
Iteration  14: 484.510 ns/op
Iteration  15: 486.965 ns/op
Iteration  16: 489.036 ns/op
Iteration  17: 488.431 ns/op
Iteration  18: 485.808 ns/op
Iteration  19: 485.623 ns/op
Iteration  20: 486.803 ns/op
Iteration  21: 485.600 ns/op
Iteration  22: 485.895 ns/op
Iteration  23: 483.768 ns/op
Iteration  24: 483.680 ns/op
Iteration  25: 483.743 ns/op
Iteration  26: 484.186 ns/op
Iteration  27: 485.301 ns/op
Iteration  28: 483.884 ns/op
Iteration  29: 483.725 ns/op
Iteration  30: 483.620 ns/op
Iteration  31: 483.797 ns/op
Iteration  32: 483.981 ns/op
Iteration  33: 483.784 ns/op
Iteration  34: 484.508 ns/op
Iteration  35: 483.910 ns/op
Iteration  36: 483.638 ns/op
Iteration  37: 483.546 ns/op
Iteration  38: 483.556 ns/op
Iteration  39: 483.593 ns/op
Iteration  40: 483.680 ns/op
Iteration  41: 483.716 ns/op
Iteration  42: 483.733 ns/op
Iteration  43: 483.881 ns/op
Iteration  44: 484.143 ns/op
Iteration  45: 483.845 ns/op
Iteration  46: 484.437 ns/op
Iteration  47: 484.346 ns/op
Iteration  48: 483.755 ns/op
Iteration  49: 483.534 ns/op
Iteration  50: 483.693 ns/op


Result "benchmark.StringContains.regexMatches":
  484.334 ±(99.9%) 0.606 ns/op [Average]
  (min, avg, max) = (483.534, 484.334, 489.036), stdev = 1.224
  CI (99.9%): [483.728, 484.940] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = QoV-/(LJ=%EaQGTU$n@Xh" )oiv$JiTWcl sj>m"@x7n5_$\oZfu=IWp7aXqT`4eQP#HCuc^QDe>mS0]6<\Ebs1#%iW_%NY;;%0(Dq+D&9)

# Run progress: 43.75% complete, ETA 00:29:11
# Fork: 1 of 1
# Warmup Iteration   1: 791.871 ns/op
# Warmup Iteration   2: 744.674 ns/op
# Warmup Iteration   3: 709.022 ns/op
# Warmup Iteration   4: 705.186 ns/op
# Warmup Iteration   5: 704.585 ns/op
# Warmup Iteration   6: 705.031 ns/op
# Warmup Iteration   7: 704.447 ns/op
# Warmup Iteration   8: 704.231 ns/op
# Warmup Iteration   9: 704.627 ns/op
# Warmup Iteration  10: 704.024 ns/op
Iteration   1: 703.953 ns/op
Iteration   2: 703.996 ns/op
Iteration   3: 703.840 ns/op
Iteration   4: 704.166 ns/op
Iteration   5: 703.972 ns/op
Iteration   6: 704.715 ns/op
Iteration   7: 705.047 ns/op
Iteration   8: 705.577 ns/op
Iteration   9: 704.992 ns/op
Iteration  10: 704.928 ns/op
Iteration  11: 704.505 ns/op
Iteration  12: 704.051 ns/op
Iteration  13: 704.068 ns/op
Iteration  14: 704.543 ns/op
Iteration  15: 704.326 ns/op
Iteration  16: 704.985 ns/op
Iteration  17: 704.494 ns/op
Iteration  18: 704.162 ns/op
Iteration  19: 704.591 ns/op
Iteration  20: 704.575 ns/op
Iteration  21: 704.761 ns/op
Iteration  22: 703.954 ns/op
Iteration  23: 704.202 ns/op
Iteration  24: 704.442 ns/op
Iteration  25: 704.266 ns/op
Iteration  26: 704.256 ns/op
Iteration  27: 704.232 ns/op
Iteration  28: 704.241 ns/op
Iteration  29: 703.917 ns/op
Iteration  30: 703.914 ns/op
Iteration  31: 704.080 ns/op
Iteration  32: 703.978 ns/op
Iteration  33: 704.367 ns/op
Iteration  34: 704.286 ns/op
Iteration  35: 704.428 ns/op
Iteration  36: 704.805 ns/op
Iteration  37: 704.568 ns/op
Iteration  38: 704.694 ns/op
Iteration  39: 708.166 ns/op
Iteration  40: 711.623 ns/op
Iteration  41: 710.077 ns/op
Iteration  42: 705.761 ns/op
Iteration  43: 705.834 ns/op
Iteration  44: 706.115 ns/op
Iteration  45: 705.693 ns/op
Iteration  46: 706.539 ns/op
Iteration  47: 704.737 ns/op
Iteration  48: 704.907 ns/op
Iteration  49: 705.400 ns/op
Iteration  50: 704.720 ns/op


Result "benchmark.StringContains.regexMatches":
  704.929 ±(99.9%) 0.724 ns/op [Average]
  (min, avg, max) = (703.840, 704.929, 711.623), stdev = 1.463
  CI (99.9%): [704.205, 705.653] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = \+D_NJ, str = CP.lww`![WejWUpp`$Tuvx[(hNuA#p.e^;iq>0z%Ryz>V\)

# Run progress: 46.88% complete, ETA 00:27:33
# Fork: 1 of 1
# Warmup Iteration   1: 239.911 ns/op
# Warmup Iteration   2: 177.385 ns/op
# Warmup Iteration   3: 155.752 ns/op
# Warmup Iteration   4: 143.108 ns/op
# Warmup Iteration   5: 142.975 ns/op
# Warmup Iteration   6: 143.092 ns/op
# Warmup Iteration   7: 142.933 ns/op
# Warmup Iteration   8: 142.852 ns/op
# Warmup Iteration   9: 143.043 ns/op
# Warmup Iteration  10: 142.905 ns/op
Iteration   1: 142.864 ns/op
Iteration   2: 142.987 ns/op
Iteration   3: 143.097 ns/op
Iteration   4: 142.933 ns/op
Iteration   5: 142.946 ns/op
Iteration   6: 142.920 ns/op
Iteration   7: 143.148 ns/op
Iteration   8: 143.090 ns/op
Iteration   9: 143.084 ns/op
Iteration  10: 143.033 ns/op
Iteration  11: 142.967 ns/op
Iteration  12: 142.985 ns/op
Iteration  13: 143.660 ns/op
Iteration  14: 143.166 ns/op
Iteration  15: 143.118 ns/op
Iteration  16: 143.217 ns/op
Iteration  17: 143.030 ns/op
Iteration  18: 142.989 ns/op
Iteration  19: 143.139 ns/op
Iteration  20: 143.027 ns/op
Iteration  21: 143.105 ns/op
Iteration  22: 143.444 ns/op
Iteration  23: 143.066 ns/op
Iteration  24: 142.967 ns/op
Iteration  25: 143.125 ns/op
Iteration  26: 143.080 ns/op
Iteration  27: 143.022 ns/op
Iteration  28: 143.024 ns/op
Iteration  29: 142.947 ns/op
Iteration  30: 142.961 ns/op
Iteration  31: 142.953 ns/op
Iteration  32: 142.998 ns/op
Iteration  33: 143.058 ns/op
Iteration  34: 143.189 ns/op
Iteration  35: 143.304 ns/op
Iteration  36: 143.073 ns/op
Iteration  37: 143.045 ns/op
Iteration  38: 143.081 ns/op
Iteration  39: 142.904 ns/op
Iteration  40: 144.011 ns/op
Iteration  41: 143.023 ns/op
Iteration  42: 143.137 ns/op
Iteration  43: 142.911 ns/op
Iteration  44: 142.966 ns/op
Iteration  45: 142.940 ns/op
Iteration  46: 143.059 ns/op
Iteration  47: 142.935 ns/op
Iteration  48: 143.020 ns/op
Iteration  49: 143.165 ns/op
Iteration  50: 143.125 ns/op


Result "benchmark.StringContains.regexMatches":
  143.081 ±(99.9%) 0.095 ns/op [Average]
  (min, avg, max) = (142.864, 143.081, 144.011), stdev = 0.192
  CI (99.9%): [142.986, 143.176] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = e\YHI5Mg[?Fe9.q4tck%pd)v^R_81x$JZ'-0#bc*7D;` YK>yPi9ZVKY/p[EXuGxjWiia9)

# Run progress: 50.00% complete, ETA 00:25:56
# Fork: 1 of 1
# Warmup Iteration   1: 17.823 ns/op
# Warmup Iteration   2: 18.331 ns/op
# Warmup Iteration   3: 19.194 ns/op
# Warmup Iteration   4: 19.192 ns/op
# Warmup Iteration   5: 19.193 ns/op
# Warmup Iteration   6: 19.175 ns/op
# Warmup Iteration   7: 18.287 ns/op
# Warmup Iteration   8: 18.275 ns/op
# Warmup Iteration   9: 18.269 ns/op
# Warmup Iteration  10: 18.271 ns/op
Iteration   1: 18.269 ns/op
Iteration   2: 18.279 ns/op
Iteration   3: 18.286 ns/op
Iteration   4: 18.270 ns/op
Iteration   5: 18.264 ns/op
Iteration   6: 18.263 ns/op
Iteration   7: 18.304 ns/op
Iteration   8: 18.314 ns/op
Iteration   9: 18.313 ns/op
Iteration  10: 18.305 ns/op
Iteration  11: 18.292 ns/op
Iteration  12: 18.274 ns/op
Iteration  13: 18.293 ns/op
Iteration  14: 18.279 ns/op
Iteration  15: 18.276 ns/op
Iteration  16: 18.271 ns/op
Iteration  17: 18.273 ns/op
Iteration  18: 18.290 ns/op
Iteration  19: 18.275 ns/op
Iteration  20: 18.273 ns/op
Iteration  21: 18.272 ns/op
Iteration  22: 18.274 ns/op
Iteration  23: 18.445 ns/op
Iteration  24: 18.285 ns/op
Iteration  25: 18.755 ns/op
Iteration  26: 18.827 ns/op
Iteration  27: 18.279 ns/op
Iteration  28: 18.296 ns/op
Iteration  29: 18.271 ns/op
Iteration  30: 18.275 ns/op
Iteration  31: 18.269 ns/op
Iteration  32: 18.274 ns/op
Iteration  33: 18.275 ns/op
Iteration  34: 18.276 ns/op
Iteration  35: 18.282 ns/op
Iteration  36: 18.273 ns/op
Iteration  37: 18.273 ns/op
Iteration  38: 18.279 ns/op
Iteration  39: 18.278 ns/op
Iteration  40: 18.280 ns/op
Iteration  41: 18.347 ns/op
Iteration  42: 18.282 ns/op
Iteration  43: 18.280 ns/op
Iteration  44: 18.281 ns/op
Iteration  45: 18.273 ns/op
Iteration  46: 18.279 ns/op
Iteration  47: 18.274 ns/op
Iteration  48: 18.269 ns/op
Iteration  49: 18.271 ns/op
Iteration  50: 18.273 ns/op


Result "benchmark.StringContains.stringContains":
  18.305 ±(99.9%) 0.052 ns/op [Average]
  (min, avg, max) = (18.263, 18.305, 18.827), stdev = 0.104
  CI (99.9%): [18.253, 18.356] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = Yck:&a^[)

# Run progress: 53.13% complete, ETA 00:24:18
# Fork: 1 of 1
# Warmup Iteration   1: 9.494 ns/op
# Warmup Iteration   2: 9.037 ns/op
# Warmup Iteration   3: 9.034 ns/op
# Warmup Iteration   4: 9.084 ns/op
# Warmup Iteration   5: 9.030 ns/op
# Warmup Iteration   6: 9.025 ns/op
# Warmup Iteration   7: 9.024 ns/op
# Warmup Iteration   8: 9.011 ns/op
# Warmup Iteration   9: 9.023 ns/op
# Warmup Iteration  10: 9.031 ns/op
Iteration   1: 9.025 ns/op
Iteration   2: 9.022 ns/op
Iteration   3: 9.012 ns/op
Iteration   4: 9.025 ns/op
Iteration   5: 9.024 ns/op
Iteration   6: 9.025 ns/op
Iteration   7: 9.024 ns/op
Iteration   8: 9.029 ns/op
Iteration   9: 9.023 ns/op
Iteration  10: 9.024 ns/op
Iteration  11: 9.023 ns/op
Iteration  12: 9.015 ns/op
Iteration  13: 9.025 ns/op
Iteration  14: 9.019 ns/op
Iteration  15: 9.031 ns/op
Iteration  16: 9.023 ns/op
Iteration  17: 9.017 ns/op
Iteration  18: 9.022 ns/op
Iteration  19: 9.024 ns/op
Iteration  20: 9.025 ns/op
Iteration  21: 9.017 ns/op
Iteration  22: 9.018 ns/op
Iteration  23: 9.018 ns/op
Iteration  24: 9.018 ns/op
Iteration  25: 9.022 ns/op
Iteration  26: 9.016 ns/op
Iteration  27: 9.021 ns/op
Iteration  28: 9.017 ns/op
Iteration  29: 9.011 ns/op
Iteration  30: 9.009 ns/op
Iteration  31: 9.015 ns/op
Iteration  32: 9.025 ns/op
Iteration  33: 9.020 ns/op
Iteration  34: 9.020 ns/op
Iteration  35: 9.019 ns/op
Iteration  36: 9.024 ns/op
Iteration  37: 9.019 ns/op
Iteration  38: 9.019 ns/op
Iteration  39: 9.012 ns/op
Iteration  40: 9.027 ns/op
Iteration  41: 9.029 ns/op
Iteration  42: 9.030 ns/op
Iteration  43: 9.022 ns/op
Iteration  44: 9.025 ns/op
Iteration  45: 9.030 ns/op
Iteration  46: 9.021 ns/op
Iteration  47: 9.007 ns/op
Iteration  48: 9.032 ns/op
Iteration  49: 9.022 ns/op
Iteration  50: 9.026 ns/op


Result "benchmark.StringContains.stringContains":
  9.021 ±(99.9%) 0.003 ns/op [Average]
  (min, avg, max) = (9.007, 9.021, 9.032), stdev = 0.006
  CI (99.9%): [9.019, 9.024] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = (#r%'-G*W)

# Run progress: 56.25% complete, ETA 00:22:41
# Fork: 1 of 1
# Warmup Iteration   1: 9.478 ns/op
# Warmup Iteration   2: 8.968 ns/op
# Warmup Iteration   3: 9.019 ns/op
# Warmup Iteration   4: 8.978 ns/op
# Warmup Iteration   5: 8.980 ns/op
# Warmup Iteration   6: 8.978 ns/op
# Warmup Iteration   7: 8.981 ns/op
# Warmup Iteration   8: 8.980 ns/op
# Warmup Iteration   9: 8.981 ns/op
# Warmup Iteration  10: 8.982 ns/op
Iteration   1: 8.979 ns/op
Iteration   2: 8.979 ns/op
Iteration   3: 8.978 ns/op
Iteration   4: 8.979 ns/op
Iteration   5: 8.980 ns/op
Iteration   6: 8.977 ns/op
Iteration   7: 8.983 ns/op
Iteration   8: 8.979 ns/op
Iteration   9: 8.983 ns/op
Iteration  10: 8.985 ns/op
Iteration  11: 8.984 ns/op
Iteration  12: 8.983 ns/op
Iteration  13: 8.978 ns/op
Iteration  14: 8.984 ns/op
Iteration  15: 8.981 ns/op
Iteration  16: 8.988 ns/op
Iteration  17: 8.979 ns/op
Iteration  18: 8.987 ns/op
Iteration  19: 8.991 ns/op
Iteration  20: 8.986 ns/op
Iteration  21: 8.986 ns/op
Iteration  22: 8.982 ns/op
Iteration  23: 8.985 ns/op
Iteration  24: 8.985 ns/op
Iteration  25: 8.982 ns/op
Iteration  26: 9.022 ns/op
Iteration  27: 8.958 ns/op
Iteration  28: 8.955 ns/op
Iteration  29: 8.956 ns/op
Iteration  30: 8.955 ns/op
Iteration  31: 8.956 ns/op
Iteration  32: 8.959 ns/op
Iteration  33: 8.956 ns/op
Iteration  34: 8.955 ns/op
Iteration  35: 8.954 ns/op
Iteration  36: 8.956 ns/op
Iteration  37: 8.951 ns/op
Iteration  38: 8.955 ns/op
Iteration  39: 8.951 ns/op
Iteration  40: 8.954 ns/op
Iteration  41: 8.965 ns/op
Iteration  42: 8.963 ns/op
Iteration  43: 8.956 ns/op
Iteration  44: 8.980 ns/op
Iteration  45: 9.007 ns/op
Iteration  46: 8.980 ns/op
Iteration  47: 8.981 ns/op
Iteration  48: 8.983 ns/op
Iteration  49: 8.983 ns/op
Iteration  50: 8.986 ns/op


Result "benchmark.StringContains.stringContains":
  8.975 ±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (8.951, 8.975, 9.022), stdev = 0.015
  CI (99.9%): [8.967, 8.982] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = )`j7Pq#;g.:$%v9v]RHGgpZpMR#:DUG+[vejb=rvTo#(edqo=>gwXUu[w^Flk-?p^MWOei8Emyl8P]L'AB2hlP>rZ"m[('DOFQqzzvPo8%bu8e<15ZIznE\]$f6UNaA2n@5p_=#ReVywLc+Cc$^^*Hzx;87kdYqa-?T4cof@!\Yy^rv^[M$Xmvk5eIU"8>1yY(jQMB[)

# Run progress: 59.38% complete, ETA 00:21:04
# Fork: 1 of 1
# Warmup Iteration   1: 35.255 ns/op
# Warmup Iteration   2: 36.207 ns/op
# Warmup Iteration   3: 36.906 ns/op
# Warmup Iteration   4: 36.902 ns/op
# Warmup Iteration   5: 36.895 ns/op
# Warmup Iteration   6: 37.738 ns/op
# Warmup Iteration   7: 36.908 ns/op
# Warmup Iteration   8: 36.913 ns/op
# Warmup Iteration   9: 36.922 ns/op
# Warmup Iteration  10: 36.927 ns/op
Iteration   1: 36.905 ns/op
Iteration   2: 36.925 ns/op
Iteration   3: 36.924 ns/op
Iteration   4: 36.857 ns/op
Iteration   5: 36.842 ns/op
Iteration   6: 36.946 ns/op
Iteration   7: 36.919 ns/op
Iteration   8: 36.920 ns/op
Iteration   9: 36.921 ns/op
Iteration  10: 36.933 ns/op
Iteration  11: 36.922 ns/op
Iteration  12: 36.878 ns/op
Iteration  13: 36.892 ns/op
Iteration  14: 37.020 ns/op
Iteration  15: 37.020 ns/op
Iteration  16: 36.926 ns/op
Iteration  17: 36.912 ns/op
Iteration  18: 36.908 ns/op
Iteration  19: 36.937 ns/op
Iteration  20: 36.920 ns/op
Iteration  21: 36.914 ns/op
Iteration  22: 36.911 ns/op
Iteration  23: 36.896 ns/op
Iteration  24: 36.967 ns/op
Iteration  25: 37.131 ns/op
Iteration  26: 36.911 ns/op
Iteration  27: 36.941 ns/op
Iteration  28: 36.913 ns/op
Iteration  29: 36.973 ns/op
Iteration  30: 36.875 ns/op
Iteration  31: 36.936 ns/op
Iteration  32: 36.934 ns/op
Iteration  33: 36.921 ns/op
Iteration  34: 36.913 ns/op
Iteration  35: 36.902 ns/op
Iteration  36: 36.929 ns/op
Iteration  37: 36.892 ns/op
Iteration  38: 36.931 ns/op
Iteration  39: 36.923 ns/op
Iteration  40: 36.924 ns/op
Iteration  41: 36.930 ns/op
Iteration  42: 36.932 ns/op
Iteration  43: 36.913 ns/op
Iteration  44: 36.919 ns/op
Iteration  45: 36.914 ns/op
Iteration  46: 36.897 ns/op
Iteration  47: 36.914 ns/op
Iteration  48: 36.898 ns/op
Iteration  49: 36.918 ns/op
Iteration  50: 36.931 ns/op


Result "benchmark.StringContains.stringContains":
  36.925 ±(99.9%) 0.021 ns/op [Average]
  (min, avg, max) = (36.842, 36.925, 37.131), stdev = 0.043
  CI (99.9%): [36.903, 36.946] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = [DC"139h=0!F/7u.1ZKSXK#$^c-jcd]Fc#w;"^i24M]KF2@vb^i73`7`+u!&vd(-'dq%7q8`P'y *)

# Run progress: 62.50% complete, ETA 00:19:26
# Fork: 1 of 1
# Warmup Iteration   1: 17.862 ns/op
# Warmup Iteration   2: 18.299 ns/op
# Warmup Iteration   3: 18.264 ns/op
# Warmup Iteration   4: 18.264 ns/op
# Warmup Iteration   5: 18.264 ns/op
# Warmup Iteration   6: 18.359 ns/op
# Warmup Iteration   7: 18.298 ns/op
# Warmup Iteration   8: 18.286 ns/op
# Warmup Iteration   9: 18.273 ns/op
# Warmup Iteration  10: 18.271 ns/op
Iteration   1: 18.272 ns/op
Iteration   2: 18.268 ns/op
Iteration   3: 18.271 ns/op
Iteration   4: 18.269 ns/op
Iteration   5: 18.263 ns/op
Iteration   6: 18.263 ns/op
Iteration   7: 18.266 ns/op
Iteration   8: 18.262 ns/op
Iteration   9: 18.271 ns/op
Iteration  10: 18.274 ns/op
Iteration  11: 18.272 ns/op
Iteration  12: 18.270 ns/op
Iteration  13: 18.262 ns/op
Iteration  14: 18.262 ns/op
Iteration  15: 18.262 ns/op
Iteration  16: 18.268 ns/op
Iteration  17: 18.267 ns/op
Iteration  18: 18.262 ns/op
Iteration  19: 18.272 ns/op
Iteration  20: 18.265 ns/op
Iteration  21: 18.336 ns/op
Iteration  22: 18.269 ns/op
Iteration  23: 18.266 ns/op
Iteration  24: 18.265 ns/op
Iteration  25: 18.263 ns/op
Iteration  26: 18.263 ns/op
Iteration  27: 18.265 ns/op
Iteration  28: 18.270 ns/op
Iteration  29: 18.264 ns/op
Iteration  30: 18.268 ns/op
Iteration  31: 18.267 ns/op
Iteration  32: 18.264 ns/op
Iteration  33: 18.266 ns/op
Iteration  34: 18.265 ns/op
Iteration  35: 18.262 ns/op
Iteration  36: 18.298 ns/op
Iteration  37: 18.267 ns/op
Iteration  38: 18.270 ns/op
Iteration  39: 18.261 ns/op
Iteration  40: 18.268 ns/op
Iteration  41: 18.265 ns/op
Iteration  42: 18.275 ns/op
Iteration  43: 18.266 ns/op
Iteration  44: 18.268 ns/op
Iteration  45: 18.263 ns/op
Iteration  46: 18.261 ns/op
Iteration  47: 18.263 ns/op
Iteration  48: 18.264 ns/op
Iteration  49: 18.262 ns/op
Iteration  50: 18.264 ns/op


Result "benchmark.StringContains.stringContains":
  18.268 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (18.261, 18.268, 18.336), stdev = 0.011
  CI (99.9%): [18.263, 18.274] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = )kp9OPQ!'_eH4Q@+T+'2*JB.4@"/7]P<"3._yIfd6X\PyYa=h64JO&N_$h'SOJ]bbvZm)Ryy>!)#lNY0@/ha1LE)

# Run progress: 65.63% complete, ETA 00:17:49
# Fork: 1 of 1
# Warmup Iteration   1: 19.365 ns/op
# Warmup Iteration   2: 20.532 ns/op
# Warmup Iteration   3: 20.485 ns/op
# Warmup Iteration   4: 20.488 ns/op
# Warmup Iteration   5: 20.486 ns/op
# Warmup Iteration   6: 20.481 ns/op
# Warmup Iteration   7: 20.501 ns/op
# Warmup Iteration   8: 20.485 ns/op
# Warmup Iteration   9: 20.480 ns/op
# Warmup Iteration  10: 20.487 ns/op
Iteration   1: 20.482 ns/op
Iteration   2: 20.482 ns/op
Iteration   3: 20.482 ns/op
Iteration   4: 20.484 ns/op
Iteration   5: 20.489 ns/op
Iteration   6: 20.485 ns/op
Iteration   7: 20.486 ns/op
Iteration   8: 20.498 ns/op
Iteration   9: 20.486 ns/op
Iteration  10: 20.484 ns/op
Iteration  11: 20.489 ns/op
Iteration  12: 20.485 ns/op
Iteration  13: 20.483 ns/op
Iteration  14: 20.482 ns/op
Iteration  15: 20.480 ns/op
Iteration  16: 20.499 ns/op
Iteration  17: 20.480 ns/op
Iteration  18: 20.480 ns/op
Iteration  19: 20.493 ns/op
Iteration  20: 20.495 ns/op
Iteration  21: 20.487 ns/op
Iteration  22: 20.487 ns/op
Iteration  23: 20.481 ns/op
Iteration  24: 20.489 ns/op
Iteration  25: 20.490 ns/op
Iteration  26: 20.484 ns/op
Iteration  27: 20.487 ns/op
Iteration  28: 20.488 ns/op
Iteration  29: 20.491 ns/op
Iteration  30: 20.480 ns/op
Iteration  31: 20.485 ns/op
Iteration  32: 20.486 ns/op
Iteration  33: 20.485 ns/op
Iteration  34: 20.485 ns/op
Iteration  35: 20.482 ns/op
Iteration  36: 20.482 ns/op
Iteration  37: 20.488 ns/op
Iteration  38: 20.487 ns/op
Iteration  39: 20.485 ns/op
Iteration  40: 20.487 ns/op
Iteration  41: 20.489 ns/op
Iteration  42: 20.489 ns/op
Iteration  43: 20.490 ns/op
Iteration  44: 20.489 ns/op
Iteration  45: 20.487 ns/op
Iteration  46: 20.489 ns/op
Iteration  47: 20.491 ns/op
Iteration  48: 20.493 ns/op
Iteration  49: 20.488 ns/op
Iteration  50: 20.481 ns/op


Result "benchmark.StringContains.stringContains":
  20.486 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (20.480, 20.486, 20.499), stdev = 0.004
  CI (99.9%): [20.484, 20.489] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = S`qysoJmb_DYYLv_ovbrFmv%u/r@))`Z>\GD)s)`$(XiG!6/m=:Sw(3U-ddXzBPi)

# Run progress: 68.75% complete, ETA 00:16:12
# Fork: 1 of 1
# Warmup Iteration   1: 16.809 ns/op
# Warmup Iteration   2: 15.753 ns/op
# Warmup Iteration   3: 16.117 ns/op
# Warmup Iteration   4: 16.120 ns/op
# Warmup Iteration   5: 16.116 ns/op
# Warmup Iteration   6: 16.120 ns/op
# Warmup Iteration   7: 16.118 ns/op
# Warmup Iteration   8: 16.127 ns/op
# Warmup Iteration   9: 16.127 ns/op
# Warmup Iteration  10: 16.123 ns/op
Iteration   1: 16.120 ns/op
Iteration   2: 16.131 ns/op
Iteration   3: 16.121 ns/op
Iteration   4: 16.120 ns/op
Iteration   5: 16.115 ns/op
Iteration   6: 16.109 ns/op
Iteration   7: 16.113 ns/op
Iteration   8: 16.114 ns/op
Iteration   9: 16.112 ns/op
Iteration  10: 16.116 ns/op
Iteration  11: 16.116 ns/op
Iteration  12: 16.125 ns/op
Iteration  13: 16.125 ns/op
Iteration  14: 16.110 ns/op
Iteration  15: 16.114 ns/op
Iteration  16: 16.116 ns/op
Iteration  17: 16.116 ns/op
Iteration  18: 16.118 ns/op
Iteration  19: 16.122 ns/op
Iteration  20: 16.122 ns/op
Iteration  21: 16.119 ns/op
Iteration  22: 16.117 ns/op
Iteration  23: 16.135 ns/op
Iteration  24: 16.123 ns/op
Iteration  25: 16.124 ns/op
Iteration  26: 16.121 ns/op
Iteration  27: 16.112 ns/op
Iteration  28: 16.106 ns/op
Iteration  29: 16.130 ns/op
Iteration  30: 16.114 ns/op
Iteration  31: 16.121 ns/op
Iteration  32: 16.119 ns/op
Iteration  33: 16.109 ns/op
Iteration  34: 16.107 ns/op
Iteration  35: 16.121 ns/op
Iteration  36: 16.122 ns/op
Iteration  37: 16.114 ns/op
Iteration  38: 16.122 ns/op
Iteration  39: 16.117 ns/op
Iteration  40: 16.117 ns/op
Iteration  41: 16.118 ns/op
Iteration  42: 16.114 ns/op
Iteration  43: 16.133 ns/op
Iteration  44: 16.127 ns/op
Iteration  45: 16.119 ns/op
Iteration  46: 16.111 ns/op
Iteration  47: 16.114 ns/op
Iteration  48: 16.126 ns/op
Iteration  49: 16.127 ns/op
Iteration  50: 16.125 ns/op


Result "benchmark.StringContains.stringContains":
  16.119 ±(99.9%) 0.003 ns/op [Average]
  (min, avg, max) = (16.106, 16.119, 16.135), stdev = 0.007
  CI (99.9%): [16.116, 16.122] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = -BSo !d`WxJb+KLYBgLuziRY]+D_NJvgVagF[m4j\-nx"w3t65TBq6Q`$QT#7P)

# Run progress: 71.88% complete, ETA 00:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 16.323 ns/op
# Warmup Iteration   2: 16.385 ns/op
# Warmup Iteration   3: 16.583 ns/op
# Warmup Iteration   4: 16.586 ns/op
# Warmup Iteration   5: 16.609 ns/op
# Warmup Iteration   6: 16.591 ns/op
# Warmup Iteration   7: 16.569 ns/op
# Warmup Iteration   8: 16.586 ns/op
# Warmup Iteration   9: 16.583 ns/op
# Warmup Iteration  10: 16.584 ns/op
Iteration   1: 16.582 ns/op
Iteration   2: 16.579 ns/op
Iteration   3: 16.582 ns/op
Iteration   4: 16.586 ns/op
Iteration   5: 16.580 ns/op
Iteration   6: 16.581 ns/op
Iteration   7: 16.581 ns/op
Iteration   8: 16.584 ns/op
Iteration   9: 16.581 ns/op
Iteration  10: 16.583 ns/op
Iteration  11: 16.581 ns/op
Iteration  12: 16.572 ns/op
Iteration  13: 16.580 ns/op
Iteration  14: 16.577 ns/op
Iteration  15: 16.585 ns/op
Iteration  16: 16.586 ns/op
Iteration  17: 16.591 ns/op
Iteration  18: 16.582 ns/op
Iteration  19: 16.580 ns/op
Iteration  20: 16.577 ns/op
Iteration  21: 16.580 ns/op
Iteration  22: 16.588 ns/op
Iteration  23: 16.591 ns/op
Iteration  24: 16.583 ns/op
Iteration  25: 16.584 ns/op
Iteration  26: 16.584 ns/op
Iteration  27: 16.585 ns/op
Iteration  28: 16.579 ns/op
Iteration  29: 16.578 ns/op
Iteration  30: 16.584 ns/op
Iteration  31: 16.583 ns/op
Iteration  32: 16.583 ns/op
Iteration  33: 16.579 ns/op
Iteration  34: 16.575 ns/op
Iteration  35: 16.577 ns/op
Iteration  36: 16.573 ns/op
Iteration  37: 16.577 ns/op
Iteration  38: 16.579 ns/op
Iteration  39: 16.580 ns/op
Iteration  40: 16.578 ns/op
Iteration  41: 16.585 ns/op
Iteration  42: 16.582 ns/op
Iteration  43: 16.579 ns/op
Iteration  44: 16.580 ns/op
Iteration  45: 16.575 ns/op
Iteration  46: 16.582 ns/op
Iteration  47: 16.581 ns/op
Iteration  48: 16.577 ns/op
Iteration  49: 16.577 ns/op
Iteration  50: 16.580 ns/op


Result "benchmark.StringContains.stringContains":
  16.581 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (16.572, 16.581, 16.591), stdev = 0.004
  CI (99.9%): [16.579, 16.583] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = MH>c:L%0Zwl"INTyaI0'mzt`nLt<RTQN\cTtR^#l0>Cwd'<B)

# Run progress: 75.00% complete, ETA 00:12:57
# Fork: 1 of 1
# Warmup Iteration   1: 13.262 ns/op
# Warmup Iteration   2: 13.494 ns/op
# Warmup Iteration   3: 13.952 ns/op
# Warmup Iteration   4: 13.940 ns/op
# Warmup Iteration   5: 13.973 ns/op
# Warmup Iteration   6: 13.943 ns/op
# Warmup Iteration   7: 13.938 ns/op
# Warmup Iteration   8: 13.945 ns/op
# Warmup Iteration   9: 13.928 ns/op
# Warmup Iteration  10: 13.951 ns/op
Iteration   1: 13.942 ns/op
Iteration   2: 13.985 ns/op
Iteration   3: 13.979 ns/op
Iteration   4: 13.962 ns/op
Iteration   5: 13.991 ns/op
Iteration   6: 13.970 ns/op
Iteration   7: 14.008 ns/op
Iteration   8: 13.990 ns/op
Iteration   9: 13.975 ns/op
Iteration  10: 13.967 ns/op
Iteration  11: 13.970 ns/op
Iteration  12: 13.965 ns/op
Iteration  13: 13.952 ns/op
Iteration  14: 13.952 ns/op
Iteration  15: 13.980 ns/op
Iteration  16: 13.987 ns/op
Iteration  17: 13.988 ns/op
Iteration  18: 13.963 ns/op
Iteration  19: 13.879 ns/op
Iteration  20: 13.878 ns/op
Iteration  21: 13.904 ns/op
Iteration  22: 13.905 ns/op
Iteration  23: 13.899 ns/op
Iteration  24: 13.928 ns/op
Iteration  25: 13.905 ns/op
Iteration  26: 13.932 ns/op
Iteration  27: 13.935 ns/op
Iteration  28: 13.917 ns/op
Iteration  29: 13.879 ns/op
Iteration  30: 13.923 ns/op
Iteration  31: 13.921 ns/op
Iteration  32: 13.898 ns/op
Iteration  33: 13.906 ns/op
Iteration  34: 13.895 ns/op
Iteration  35: 13.914 ns/op
Iteration  36: 13.932 ns/op
Iteration  37: 13.895 ns/op
Iteration  38: 13.886 ns/op
Iteration  39: 13.894 ns/op
Iteration  40: 13.893 ns/op
Iteration  41: 13.907 ns/op
Iteration  42: 13.902 ns/op
Iteration  43: 13.889 ns/op
Iteration  44: 13.890 ns/op
Iteration  45: 13.906 ns/op
Iteration  46: 13.915 ns/op
Iteration  47: 13.958 ns/op
Iteration  48: 13.930 ns/op
Iteration  49: 13.908 ns/op
Iteration  50: 13.912 ns/op


Result "benchmark.StringContains.stringContains":
  13.931 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (13.878, 13.931, 14.008), stdev = 0.037
  CI (99.9%): [13.913, 13.949] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = <q5S2!1\8VVW=xSw0t y=;TKJUbD.z].oV;k9ne rH8?)Sr^QM`_O+YZgKK8vQycML/ay*b!yG4<&Nw_>BuoG_Isz#J.^U3cO'a"CsT0GMVnj!kvU)

# Run progress: 78.13% complete, ETA 00:11:20
# Fork: 1 of 1
# Warmup Iteration   1: 21.892 ns/op
# Warmup Iteration   2: 22.767 ns/op
# Warmup Iteration   3: 22.716 ns/op
# Warmup Iteration   4: 22.724 ns/op
# Warmup Iteration   5: 22.719 ns/op
# Warmup Iteration   6: 22.714 ns/op
# Warmup Iteration   7: 22.715 ns/op
# Warmup Iteration   8: 22.715 ns/op
# Warmup Iteration   9: 22.717 ns/op
# Warmup Iteration  10: 22.717 ns/op
Iteration   1: 22.714 ns/op
Iteration   2: 22.718 ns/op
Iteration   3: 22.718 ns/op
Iteration   4: 22.717 ns/op
Iteration   5: 22.717 ns/op
Iteration   6: 22.715 ns/op
Iteration   7: 22.720 ns/op
Iteration   8: 22.716 ns/op
Iteration   9: 22.718 ns/op
Iteration  10: 22.754 ns/op
Iteration  11: 22.723 ns/op
Iteration  12: 22.716 ns/op
Iteration  13: 22.718 ns/op
Iteration  14: 22.740 ns/op
Iteration  15: 22.719 ns/op
Iteration  16: 22.716 ns/op
Iteration  17: 22.738 ns/op
Iteration  18: 22.723 ns/op
Iteration  19: 22.850 ns/op
Iteration  20: 22.791 ns/op
Iteration  21: 22.723 ns/op
Iteration  22: 22.716 ns/op
Iteration  23: 22.722 ns/op
Iteration  24: 22.715 ns/op
Iteration  25: 22.802 ns/op
Iteration  26: 22.716 ns/op
Iteration  27: 22.716 ns/op
Iteration  28: 22.718 ns/op
Iteration  29: 22.713 ns/op
Iteration  30: 22.718 ns/op
Iteration  31: 22.712 ns/op
Iteration  32: 22.720 ns/op
Iteration  33: 22.715 ns/op
Iteration  34: 22.713 ns/op
Iteration  35: 22.717 ns/op
Iteration  36: 22.719 ns/op
Iteration  37: 22.715 ns/op
Iteration  38: 22.719 ns/op
Iteration  39: 22.803 ns/op
Iteration  40: 22.717 ns/op
Iteration  41: 22.830 ns/op
Iteration  42: 22.716 ns/op
Iteration  43: 22.721 ns/op
Iteration  44: 22.725 ns/op
Iteration  45: 22.715 ns/op
Iteration  46: 22.717 ns/op
Iteration  47: 22.718 ns/op
Iteration  48: 22.718 ns/op
Iteration  49: 22.720 ns/op
Iteration  50: 22.718 ns/op


Result "benchmark.StringContains.stringContains":
  22.729 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (22.712, 22.729, 22.850), stdev = 0.031
  CI (99.9%): [22.714, 22.744] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = LHoXf`D:n@@vC7oDg)019gUyF)@K/k^BmYUR].Ol*GS?krar/Zf[lLi2SS_h9lDvg;3+uo^7=5e#Zp63K6;ul.gsk$N@)2s-v?.YZd!6dm<=p)MPxhG=ex)'LIol5%?0P/qC6Ra5hUSO.hwIlWkX#[;eo0v7UEu#OIFiCsDA=9s;.8Ohwj^"L6qeYar;V1QWbGF1g3Rl+3IBpY` P^Y5[$\EFkDF9&wb6^jzQ34il?3KB)

# Run progress: 81.25% complete, ETA 00:09:43
# Fork: 1 of 1
# Warmup Iteration   1: 39.857 ns/op
# Warmup Iteration   2: 40.799 ns/op
# Warmup Iteration   3: 40.704 ns/op
# Warmup Iteration   4: 40.690 ns/op
# Warmup Iteration   5: 40.726 ns/op
# Warmup Iteration   6: 40.612 ns/op
# Warmup Iteration   7: 40.617 ns/op
# Warmup Iteration   8: 40.642 ns/op
# Warmup Iteration   9: 40.622 ns/op
# Warmup Iteration  10: 40.632 ns/op
Iteration   1: 40.641 ns/op
Iteration   2: 40.602 ns/op
Iteration   3: 40.618 ns/op
Iteration   4: 40.673 ns/op
Iteration   5: 40.652 ns/op
Iteration   6: 40.642 ns/op
Iteration   7: 40.630 ns/op
Iteration   8: 40.650 ns/op
Iteration   9: 40.613 ns/op
Iteration  10: 40.654 ns/op
Iteration  11: 40.638 ns/op
Iteration  12: 40.619 ns/op
Iteration  13: 40.630 ns/op
Iteration  14: 40.651 ns/op
Iteration  15: 40.648 ns/op
Iteration  16: 40.750 ns/op
Iteration  17: 40.673 ns/op
Iteration  18: 40.713 ns/op
Iteration  19: 40.655 ns/op
Iteration  20: 40.608 ns/op
Iteration  21: 40.646 ns/op
Iteration  22: 40.671 ns/op
Iteration  23: 40.817 ns/op
Iteration  24: 40.900 ns/op
Iteration  25: 40.658 ns/op
Iteration  26: 40.648 ns/op
Iteration  27: 40.666 ns/op
Iteration  28: 40.636 ns/op
Iteration  29: 40.655 ns/op
Iteration  30: 40.629 ns/op
Iteration  31: 40.636 ns/op
Iteration  32: 40.600 ns/op
Iteration  33: 40.623 ns/op
Iteration  34: 40.627 ns/op
Iteration  35: 40.635 ns/op
Iteration  36: 40.631 ns/op
Iteration  37: 40.659 ns/op
Iteration  38: 40.616 ns/op
Iteration  39: 40.670 ns/op
Iteration  40: 40.654 ns/op
Iteration  41: 40.688 ns/op
Iteration  42: 40.630 ns/op
Iteration  43: 40.597 ns/op
Iteration  44: 40.685 ns/op
Iteration  45: 40.594 ns/op
Iteration  46: 40.656 ns/op
Iteration  47: 40.678 ns/op
Iteration  48: 40.632 ns/op
Iteration  49: 40.645 ns/op
Iteration  50: 40.654 ns/op


Result "benchmark.StringContains.stringContains":
  40.654 ±(99.9%) 0.026 ns/op [Average]
  (min, avg, max) = (40.594, 40.654, 40.900), stdev = 0.052
  CI (99.9%): [40.628, 40.680] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = \"D5Rd2/;GAfh8hY/zmv\'yD?i<.I;-Z'4T8AGfl"E[[;0earOE *#Q\5C/z`/Oxv9[EDyzYuP)

# Run progress: 84.38% complete, ETA 00:08:06
# Fork: 1 of 1
# Warmup Iteration   1: 17.677 ns/op
# Warmup Iteration   2: 18.325 ns/op
# Warmup Iteration   3: 18.298 ns/op
# Warmup Iteration   4: 18.268 ns/op
# Warmup Iteration   5: 18.282 ns/op
# Warmup Iteration   6: 18.278 ns/op
# Warmup Iteration   7: 18.278 ns/op
# Warmup Iteration   8: 18.273 ns/op
# Warmup Iteration   9: 18.263 ns/op
# Warmup Iteration  10: 18.317 ns/op
Iteration   1: 18.269 ns/op
Iteration   2: 18.269 ns/op
Iteration   3: 18.271 ns/op
Iteration   4: 18.266 ns/op
Iteration   5: 18.264 ns/op
Iteration   6: 18.267 ns/op
Iteration   7: 18.283 ns/op
Iteration   8: 18.274 ns/op
Iteration   9: 18.271 ns/op
Iteration  10: 18.274 ns/op
Iteration  11: 18.276 ns/op
Iteration  12: 18.273 ns/op
Iteration  13: 18.266 ns/op
Iteration  14: 18.266 ns/op
Iteration  15: 18.265 ns/op
Iteration  16: 18.267 ns/op
Iteration  17: 18.263 ns/op
Iteration  18: 18.271 ns/op
Iteration  19: 18.272 ns/op
Iteration  20: 18.265 ns/op
Iteration  21: 18.262 ns/op
Iteration  22: 18.272 ns/op
Iteration  23: 18.269 ns/op
Iteration  24: 18.272 ns/op
Iteration  25: 18.270 ns/op
Iteration  26: 18.270 ns/op
Iteration  27: 18.271 ns/op
Iteration  28: 18.278 ns/op
Iteration  29: 18.274 ns/op
Iteration  30: 18.267 ns/op
Iteration  31: 18.265 ns/op
Iteration  32: 18.262 ns/op
Iteration  33: 18.265 ns/op
Iteration  34: 18.261 ns/op
Iteration  35: 18.261 ns/op
Iteration  36: 18.260 ns/op
Iteration  37: 18.262 ns/op
Iteration  38: 18.262 ns/op
Iteration  39: 18.260 ns/op
Iteration  40: 18.272 ns/op
Iteration  41: 18.274 ns/op
Iteration  42: 18.278 ns/op
Iteration  43: 18.275 ns/op
Iteration  44: 18.282 ns/op
Iteration  45: 18.275 ns/op
Iteration  46: 18.272 ns/op
Iteration  47: 18.268 ns/op
Iteration  48: 18.268 ns/op
Iteration  49: 18.295 ns/op
Iteration  50: 18.323 ns/op


Result "benchmark.StringContains.stringContains":
  18.271 ±(99.9%) 0.005 ns/op [Average]
  (min, avg, max) = (18.260, 18.271, 18.323), stdev = 0.010
  CI (99.9%): [18.266, 18.276] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = &HfnW9!)

# Run progress: 87.50% complete, ETA 00:06:28
# Fork: 1 of 1
# Warmup Iteration   1: 9.475 ns/op
# Warmup Iteration   2: 8.989 ns/op
# Warmup Iteration   3: 9.004 ns/op
# Warmup Iteration   4: 8.999 ns/op
# Warmup Iteration   5: 8.978 ns/op
# Warmup Iteration   6: 8.984 ns/op
# Warmup Iteration   7: 8.988 ns/op
# Warmup Iteration   8: 8.982 ns/op
# Warmup Iteration   9: 8.994 ns/op
# Warmup Iteration  10: 8.982 ns/op
Iteration   1: 8.985 ns/op
Iteration   2: 8.981 ns/op
Iteration   3: 8.980 ns/op
Iteration   4: 8.983 ns/op
Iteration   5: 8.979 ns/op
Iteration   6: 8.996 ns/op
Iteration   7: 8.996 ns/op
Iteration   8: 8.997 ns/op
Iteration   9: 8.994 ns/op
Iteration  10: 8.984 ns/op
Iteration  11: 8.988 ns/op
Iteration  12: 8.983 ns/op
Iteration  13: 8.989 ns/op
Iteration  14: 8.982 ns/op
Iteration  15: 8.981 ns/op
Iteration  16: 8.986 ns/op
Iteration  17: 8.987 ns/op
Iteration  18: 8.983 ns/op
Iteration  19: 8.988 ns/op
Iteration  20: 8.985 ns/op
Iteration  21: 8.985 ns/op
Iteration  22: 8.986 ns/op
Iteration  23: 8.987 ns/op
Iteration  24: 8.985 ns/op
Iteration  25: 8.985 ns/op
Iteration  26: 8.981 ns/op
Iteration  27: 8.980 ns/op
Iteration  28: 8.981 ns/op
Iteration  29: 8.986 ns/op
Iteration  30: 8.987 ns/op
Iteration  31: 8.984 ns/op
Iteration  32: 8.981 ns/op
Iteration  33: 8.980 ns/op
Iteration  34: 8.981 ns/op
Iteration  35: 8.984 ns/op
Iteration  36: 8.984 ns/op
Iteration  37: 8.988 ns/op
Iteration  38: 8.981 ns/op
Iteration  39: 9.002 ns/op
Iteration  40: 8.985 ns/op
Iteration  41: 8.983 ns/op
Iteration  42: 8.988 ns/op
Iteration  43: 8.996 ns/op
Iteration  44: 8.981 ns/op
Iteration  45: 8.983 ns/op
Iteration  46: 8.983 ns/op
Iteration  47: 8.979 ns/op
Iteration  48: 8.987 ns/op
Iteration  49: 8.983 ns/op
Iteration  50: 8.986 ns/op


Result "benchmark.StringContains.stringContains":
  8.985 ±(99.9%) 0.003 ns/op [Average]
  (min, avg, max) = (8.979, 8.985, 9.002), stdev = 0.005
  CI (99.9%): [8.983, 8.988] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = 7ynz :s.&LjFiAjMNmWkEbur(G(S)cu]&/TR&__vi56'RAm#hsXs.O4^+*#FV?8^XBtA3SSj[st)

# Run progress: 90.63% complete, ETA 00:04:51
# Fork: 1 of 1
# Warmup Iteration   1: 17.856 ns/op
# Warmup Iteration   2: 18.301 ns/op
# Warmup Iteration   3: 18.288 ns/op
# Warmup Iteration   4: 18.292 ns/op
# Warmup Iteration   5: 18.392 ns/op
# Warmup Iteration   6: 18.290 ns/op
# Warmup Iteration   7: 18.294 ns/op
# Warmup Iteration   8: 18.302 ns/op
# Warmup Iteration   9: 18.305 ns/op
# Warmup Iteration  10: 18.288 ns/op
Iteration   1: 18.290 ns/op
Iteration   2: 18.295 ns/op
Iteration   3: 18.315 ns/op
Iteration   4: 18.294 ns/op
Iteration   5: 18.289 ns/op
Iteration   6: 18.293 ns/op
Iteration   7: 18.279 ns/op
Iteration   8: 18.379 ns/op
Iteration   9: 18.265 ns/op
Iteration  10: 18.260 ns/op
Iteration  11: 18.259 ns/op
Iteration  12: 18.262 ns/op
Iteration  13: 18.263 ns/op
Iteration  14: 18.267 ns/op
Iteration  15: 18.269 ns/op
Iteration  16: 18.264 ns/op
Iteration  17: 18.268 ns/op
Iteration  18: 18.264 ns/op
Iteration  19: 18.277 ns/op
Iteration  20: 18.260 ns/op
Iteration  21: 18.267 ns/op
Iteration  22: 18.261 ns/op
Iteration  23: 18.260 ns/op
Iteration  24: 18.264 ns/op
Iteration  25: 18.264 ns/op
Iteration  26: 18.258 ns/op
Iteration  27: 18.264 ns/op
Iteration  28: 18.267 ns/op
Iteration  29: 18.276 ns/op
Iteration  30: 18.268 ns/op
Iteration  31: 18.263 ns/op
Iteration  32: 18.275 ns/op
Iteration  33: 18.277 ns/op
Iteration  34: 18.265 ns/op
Iteration  35: 18.261 ns/op
Iteration  36: 18.260 ns/op
Iteration  37: 18.264 ns/op
Iteration  38: 18.274 ns/op
Iteration  39: 18.260 ns/op
Iteration  40: 18.260 ns/op
Iteration  41: 18.262 ns/op
Iteration  42: 18.263 ns/op
Iteration  43: 18.265 ns/op
Iteration  44: 18.269 ns/op
Iteration  45: 18.264 ns/op
Iteration  46: 18.262 ns/op
Iteration  47: 18.281 ns/op
Iteration  48: 18.275 ns/op
Iteration  49: 18.266 ns/op
Iteration  50: 18.261 ns/op


Result "benchmark.StringContains.stringContains":
  18.272 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (18.258, 18.272, 18.379), stdev = 0.019
  CI (99.9%): [18.262, 18.281] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = QoV-/(LJ=%EaQGTU$n@Xh" )oiv$JiTWcl sj>m"@x7n5_$\oZfu=IWp7aXqT`4eQP#HCuc^QDe>mS0]6<\Ebs1#%iW_%NY;;%0(Dq+D&9)

# Run progress: 93.75% complete, ETA 00:03:14
# Fork: 1 of 1
# Warmup Iteration   1: 24.114 ns/op
# Warmup Iteration   2: 24.919 ns/op
# Warmup Iteration   3: 25.175 ns/op
# Warmup Iteration   4: 25.367 ns/op
# Warmup Iteration   5: 25.210 ns/op
# Warmup Iteration   6: 25.173 ns/op
# Warmup Iteration   7: 25.186 ns/op
# Warmup Iteration   8: 25.240 ns/op
# Warmup Iteration   9: 25.193 ns/op
# Warmup Iteration  10: 25.217 ns/op
Iteration   1: 25.277 ns/op
Iteration   2: 25.199 ns/op
Iteration   3: 25.168 ns/op
Iteration   4: 25.232 ns/op
Iteration   5: 25.219 ns/op
Iteration   6: 25.279 ns/op
Iteration   7: 25.235 ns/op
Iteration   8: 25.230 ns/op
Iteration   9: 25.241 ns/op
Iteration  10: 25.209 ns/op
Iteration  11: 25.268 ns/op
Iteration  12: 25.220 ns/op
Iteration  13: 25.228 ns/op
Iteration  14: 25.208 ns/op
Iteration  15: 25.277 ns/op
Iteration  16: 25.249 ns/op
Iteration  17: 25.172 ns/op
Iteration  18: 25.241 ns/op
Iteration  19: 25.233 ns/op
Iteration  20: 25.168 ns/op
Iteration  21: 25.220 ns/op
Iteration  22: 25.242 ns/op
Iteration  23: 25.269 ns/op
Iteration  24: 25.236 ns/op
Iteration  25: 25.185 ns/op
Iteration  26: 25.243 ns/op
Iteration  27: 25.241 ns/op
Iteration  28: 25.266 ns/op
Iteration  29: 25.139 ns/op
Iteration  30: 25.251 ns/op
Iteration  31: 25.229 ns/op
Iteration  32: 25.201 ns/op
Iteration  33: 25.184 ns/op
Iteration  34: 25.230 ns/op
Iteration  35: 25.170 ns/op
Iteration  36: 25.204 ns/op
Iteration  37: 25.208 ns/op
Iteration  38: 25.280 ns/op
Iteration  39: 25.249 ns/op
Iteration  40: 25.204 ns/op
Iteration  41: 25.270 ns/op
Iteration  42: 25.243 ns/op
Iteration  43: 25.237 ns/op
Iteration  44: 25.300 ns/op
Iteration  45: 25.192 ns/op
Iteration  46: 25.287 ns/op
Iteration  47: 25.289 ns/op
Iteration  48: 25.214 ns/op
Iteration  49: 25.206 ns/op
Iteration  50: 25.248 ns/op


Result "benchmark.StringContains.stringContains":
  25.230 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (25.139, 25.230, 25.300), stdev = 0.036
  CI (99.9%): [25.212, 25.248] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = \+D_NJ, str = CP.lww`![WejWUpp`$Tuvx[(hNuA#p.e^;iq>0z%Ryz>V\)

# Run progress: 96.88% complete, ETA 00:01:37
# Fork: 1 of 1
# Warmup Iteration   1: 13.663 ns/op
# Warmup Iteration   2: 14.143 ns/op
# Warmup Iteration   3: 14.345 ns/op
# Warmup Iteration   4: 14.273 ns/op
# Warmup Iteration   5: 14.277 ns/op
# Warmup Iteration   6: 14.277 ns/op
# Warmup Iteration   7: 14.267 ns/op
# Warmup Iteration   8: 14.279 ns/op
# Warmup Iteration   9: 14.266 ns/op
# Warmup Iteration  10: 14.244 ns/op
Iteration   1: 14.335 ns/op
Iteration   2: 14.260 ns/op
Iteration   3: 14.326 ns/op
Iteration   4: 14.318 ns/op
Iteration   5: 14.259 ns/op
Iteration   6: 14.316 ns/op
Iteration   7: 14.404 ns/op
Iteration   8: 14.304 ns/op
Iteration   9: 14.344 ns/op
Iteration  10: 14.253 ns/op
Iteration  11: 14.329 ns/op
Iteration  12: 14.305 ns/op
Iteration  13: 14.271 ns/op
Iteration  14: 14.296 ns/op
Iteration  15: 14.272 ns/op
Iteration  16: 14.240 ns/op
Iteration  17: 14.280 ns/op
Iteration  18: 14.306 ns/op
Iteration  19: 14.333 ns/op
Iteration  20: 14.301 ns/op
Iteration  21: 14.231 ns/op
Iteration  22: 14.316 ns/op
Iteration  23: 14.319 ns/op
Iteration  24: 14.356 ns/op
Iteration  25: 14.274 ns/op
Iteration  26: 14.360 ns/op
Iteration  27: 14.285 ns/op
Iteration  28: 14.316 ns/op
Iteration  29: 14.323 ns/op
Iteration  30: 14.276 ns/op
Iteration  31: 14.297 ns/op
Iteration  32: 14.295 ns/op
Iteration  33: 14.295 ns/op
Iteration  34: 14.269 ns/op
Iteration  35: 14.366 ns/op
Iteration  36: 14.335 ns/op
Iteration  37: 14.302 ns/op
Iteration  38: 14.269 ns/op
Iteration  39: 14.340 ns/op
Iteration  40: 14.282 ns/op
Iteration  41: 14.288 ns/op
Iteration  42: 14.375 ns/op
Iteration  43: 14.332 ns/op
Iteration  44: 14.319 ns/op
Iteration  45: 14.307 ns/op
Iteration  46: 14.295 ns/op
Iteration  47: 14.282 ns/op
Iteration  48: 14.311 ns/op
Iteration  49: 14.267 ns/op
Iteration  50: 14.257 ns/op


Result "benchmark.StringContains.stringContains":
  14.304 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (14.231, 14.304, 14.404), stdev = 0.036
  CI (99.9%): [14.286, 14.321] (assumes normal distribution)


# Run complete. Total time: 00:51:49

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                      (regex)                                                                                                                                                                                                                                          (str)  Mode  Cnt     Score   Error  Units
StringContains.regexMatches     \+D_NJ                                                                                                                                                                         e\YHI5Mg[?Fe9.q4tck%pd)v^R_81x$JZ'-0#bc*7D;` YK>yPi9ZVKY/p[EXuGxjWiia9  avgt   50   179.776 ± 0.675  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                                                                                       Yck:&a^[  avgt   50    97.310 ± 0.066  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                                                                                      (#r%'-G*W  avgt   50    93.692 ± 0.730  ns/op
StringContains.regexMatches     \+D_NJ                                        )`j7Pq#;g.:$%v9v]RHGgpZpMR#:DUG+[vejb=rvTo#(edqo=>gwXUu[w^Flk-?p^MWOei8Emyl8P]L'AB2hlP>rZ"m[('DOFQqzzvPo8%bu8e<15ZIznE\]$f6UNaA2n@5p_=#ReVywLc+Cc$^^*Hzx;87kdYqa-?T4cof@!\Yy^rv^[M$Xmvk5eIU"8>1yY(jQMB[  avgt   50  1230.235 ± 0.654  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                  [DC"139h=0!F/7u.1ZKSXK#$^c-jcd]Fc#w;"^i24M]KF2@vb^i73`7`+u!&vd(-'dq%7q8`P'y *  avgt   50   493.793 ± 0.157  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                        )kp9OPQ!'_eH4Q@+T+'2*JB.4@"/7]P<"3._yIfd6X\PyYa=h64JO&N_$h'SOJ]bbvZm)Ryy>!)#lNY0@/ha1LE  avgt   50   552.574 ± 0.223  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                               S`qysoJmb_DYYLv_ovbrFmv%u/r@))`Z>\GD)s)`$(XiG!6/m=:Sw(3U-ddXzBPi  avgt   50   174.124 ± 0.623  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                                 -BSo !d`WxJb+KLYBgLuziRY]+D_NJvgVagF[m4j\-nx"w3t65TBq6Q`$QT#7P  avgt   50   486.536 ± 0.700  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                                               MH>c:L%0Zwl"INTyaI0'mzt`nLt<RTQN\cTtR^#l0>Cwd'<B  avgt   50   142.955 ± 0.087  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                              <q5S2!1\8VVW=xSw0t y=;TKJUbD.z].oV;k9ne rH8?)Sr^QM`_O+YZgKK8vQycML/ay*b!yG4<&Nw_>BuoG_Isz#J.^U3cO'a"CsT0GMVnj!kvU  avgt   50   680.814 ± 0.896  ns/op
StringContains.regexMatches     \+D_NJ  LHoXf`D:n@@vC7oDg)019gUyF)@K/k^BmYUR].Ol*GS?krar/Zf[lLi2SS_h9lDvg;3+uo^7=5e#Zp63K6;ul.gsk$N@)2s-v?.YZd!6dm<=p)MPxhG=ex)'LIol5%?0P/qC6Ra5hUSO.hwIlWkX#[;eo0v7UEu#OIFiCsDA=9s;.8Ohwj^"L6qeYar;V1QWbGF1g3Rl+3IBpY` P^Y5[$\EFkDF9&wb6^jzQ34il?3KB  avgt   50  1445.293 ± 0.798  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                     \"D5Rd2/;GAfh8hY/zmv\'yD?i<.I;-Z'4T8AGfl"E[[;0earOE *#Q\5C/z`/Oxv9[EDyzYuP  avgt   50   197.794 ± 0.062  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                                                                                        &HfnW9!  avgt   50    94.954 ± 0.054  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                    7ynz :s.&LjFiAjMNmWkEbur(G(S)cu]&/TR&__vi56'RAm#hsXs.O4^+*#FV?8^XBtA3SSj[st  avgt   50   484.334 ± 0.606  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                     QoV-/(LJ=%EaQGTU$n@Xh" )oiv$JiTWcl sj>m"@x7n5_$\oZfu=IWp7aXqT`4eQP#HCuc^QDe>mS0]6<\Ebs1#%iW_%NY;;%0(Dq+D&9  avgt   50   704.929 ± 0.724  ns/op
StringContains.regexMatches     \+D_NJ                                                                                                                                                                                                 CP.lww`![WejWUpp`$Tuvx[(hNuA#p.e^;iq>0z%Ryz>V\  avgt   50   143.081 ± 0.095  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                         e\YHI5Mg[?Fe9.q4tck%pd)v^R_81x$JZ'-0#bc*7D;` YK>yPi9ZVKY/p[EXuGxjWiia9  avgt   50    18.305 ± 0.052  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                                                                                       Yck:&a^[  avgt   50     9.021 ± 0.003  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                                                                                      (#r%'-G*W  avgt   50     8.975 ± 0.008  ns/op
StringContains.stringContains   \+D_NJ                                        )`j7Pq#;g.:$%v9v]RHGgpZpMR#:DUG+[vejb=rvTo#(edqo=>gwXUu[w^Flk-?p^MWOei8Emyl8P]L'AB2hlP>rZ"m[('DOFQqzzvPo8%bu8e<15ZIznE\]$f6UNaA2n@5p_=#ReVywLc+Cc$^^*Hzx;87kdYqa-?T4cof@!\Yy^rv^[M$Xmvk5eIU"8>1yY(jQMB[  avgt   50    36.925 ± 0.021  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                  [DC"139h=0!F/7u.1ZKSXK#$^c-jcd]Fc#w;"^i24M]KF2@vb^i73`7`+u!&vd(-'dq%7q8`P'y *  avgt   50    18.268 ± 0.006  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                        )kp9OPQ!'_eH4Q@+T+'2*JB.4@"/7]P<"3._yIfd6X\PyYa=h64JO&N_$h'SOJ]bbvZm)Ryy>!)#lNY0@/ha1LE  avgt   50    20.486 ± 0.002  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                               S`qysoJmb_DYYLv_ovbrFmv%u/r@))`Z>\GD)s)`$(XiG!6/m=:Sw(3U-ddXzBPi  avgt   50    16.119 ± 0.003  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                                 -BSo !d`WxJb+KLYBgLuziRY]+D_NJvgVagF[m4j\-nx"w3t65TBq6Q`$QT#7P  avgt   50    16.581 ± 0.002  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                                               MH>c:L%0Zwl"INTyaI0'mzt`nLt<RTQN\cTtR^#l0>Cwd'<B  avgt   50    13.931 ± 0.018  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                              <q5S2!1\8VVW=xSw0t y=;TKJUbD.z].oV;k9ne rH8?)Sr^QM`_O+YZgKK8vQycML/ay*b!yG4<&Nw_>BuoG_Isz#J.^U3cO'a"CsT0GMVnj!kvU  avgt   50    22.729 ± 0.015  ns/op
StringContains.stringContains   \+D_NJ  LHoXf`D:n@@vC7oDg)019gUyF)@K/k^BmYUR].Ol*GS?krar/Zf[lLi2SS_h9lDvg;3+uo^7=5e#Zp63K6;ul.gsk$N@)2s-v?.YZd!6dm<=p)MPxhG=ex)'LIol5%?0P/qC6Ra5hUSO.hwIlWkX#[;eo0v7UEu#OIFiCsDA=9s;.8Ohwj^"L6qeYar;V1QWbGF1g3Rl+3IBpY` P^Y5[$\EFkDF9&wb6^jzQ34il?3KB  avgt   50    40.654 ± 0.026  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                     \"D5Rd2/;GAfh8hY/zmv\'yD?i<.I;-Z'4T8AGfl"E[[;0earOE *#Q\5C/z`/Oxv9[EDyzYuP  avgt   50    18.271 ± 0.005  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                                                                                        &HfnW9!  avgt   50     8.985 ± 0.003  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                    7ynz :s.&LjFiAjMNmWkEbur(G(S)cu]&/TR&__vi56'RAm#hsXs.O4^+*#FV?8^XBtA3SSj[st  avgt   50    18.272 ± 0.010  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                     QoV-/(LJ=%EaQGTU$n@Xh" )oiv$JiTWcl sj>m"@x7n5_$\oZfu=IWp7aXqT`4eQP#HCuc^QDe>mS0]6<\Ebs1#%iW_%NY;;%0(Dq+D&9  avgt   50    25.230 ± 0.018  ns/op
StringContains.stringContains   \+D_NJ                                                                                                                                                                                                 CP.lww`![WejWUpp`$Tuvx[(hNuA#p.e^;iq>0z%Ryz>V\  avgt   50    14.304 ± 0.018  ns/op

Benchmark result is saved to 0_9_matching.csv
