# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = btxSFeqO\}bz!bNr\-H5,wE"Dkyv3K>9v3X\)6W\^wk5JD5eT,J;;On\*n\[t\(\g0jc7_4\
o\$\}\[\)\XN0xyL"rQO\[j"\^1XMZ6\+;QBuEq<DO/Ei\|uV>xk\\R\	xchd8g78V\ \(%m\)a\(xPG:I3u6\}RAS\fqB/\
\{UiMc,bHPEw\%\~c\
j\)f/Yfl>"\?y`X\$;3qKl\[Y=\
\*\?>ny3\\[>ojXpUL\+h\ m@0mB\	iL\[jg\*\#eVc\[ydW\\\\Sau\(u<JKR>cS5!=@\-I\$6,\-E\*Hp\]U\?LdG\|eTj4dM6\}9iV\\'9l\ 0mvRFp7ZS6l6tJqaI\^c\)@uByUg\|cxA\./rAKK!5\+8,O_\*2X_Vss9\{W\\^v5!\$\ ZUw"N'O7J5waqF=4V5M\?!\~K\],/!fKFkgZ//<udx\(w9mIT,ooH\[G6EMR!b;PXip\)C"Z<QSO\ G>NK\-'p\.`;\$A\[0Z1x\.\&yTp%<Bw>5uzWU\~<\|`C\#9\|\\#\&OyxF_\.":\\|IG\?7uKQ\+pE`G1Eb\-B7da1\+\XDWI\[qc\-\[E33\)tIhWg\$, str = )

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 164.744 ns/op
# Warmup Iteration   2: 71.238 ns/op
# Warmup Iteration   3: 64.464 ns/op
# Warmup Iteration   4: 64.724 ns/op
# Warmup Iteration   5: 64.281 ns/op
# Warmup Iteration   6: 64.495 ns/op
# Warmup Iteration   7: 64.774 ns/op
# Warmup Iteration   8: 64.672 ns/op
# Warmup Iteration   9: 64.992 ns/op
# Warmup Iteration  10: 64.545 ns/op
Iteration   1: 64.978 ns/op
Iteration   2: 64.900 ns/op
Iteration   3: 64.664 ns/op
Iteration   4: 64.716 ns/op
Iteration   5: 64.985 ns/op
Iteration   6: 64.488 ns/op
Iteration   7: 64.641 ns/op
Iteration   8: 65.230 ns/op
Iteration   9: 64.608 ns/op
Iteration  10: 64.538 ns/op
Iteration  11: 64.541 ns/op
Iteration  12: 64.981 ns/op
Iteration  13: 64.636 ns/op
Iteration  14: 64.955 ns/op
Iteration  15: 64.375 ns/op
Iteration  16: 65.016 ns/op
Iteration  17: 65.805 ns/op
Iteration  18: 66.602 ns/op
Iteration  19: 65.523 ns/op
Iteration  20: 65.288 ns/op
Iteration  21: 66.246 ns/op
Iteration  22: 65.981 ns/op
Iteration  23: 66.703 ns/op
Iteration  24: 66.097 ns/op
Iteration  25: 65.020 ns/op
Iteration  26: 65.747 ns/op
Iteration  27: 65.217 ns/op
Iteration  28: 64.784 ns/op
Iteration  29: 64.508 ns/op
Iteration  30: 65.022 ns/op
Iteration  31: 65.052 ns/op
Iteration  32: 65.155 ns/op
Iteration  33: 64.856 ns/op
Iteration  34: 64.993 ns/op
Iteration  35: 64.430 ns/op
Iteration  36: 64.874 ns/op
Iteration  37: 64.807 ns/op
Iteration  38: 65.109 ns/op
Iteration  39: 64.355 ns/op
Iteration  40: 64.957 ns/op
Iteration  41: 64.923 ns/op
Iteration  42: 64.529 ns/op
Iteration  43: 64.840 ns/op
Iteration  44: 65.062 ns/op
Iteration  45: 64.576 ns/op
Iteration  46: 65.057 ns/op
Iteration  47: 64.433 ns/op
Iteration  48: 65.025 ns/op
Iteration  49: 64.864 ns/op
Iteration  50: 64.409 ns/op


Result "benchmark.StringContains.regexMatches":
  65.022 ±(99.9%) 0.272 ns/op [Average]
  (min, avg, max) = (64.355, 65.022, 66.703), stdev = 0.550
  CI (99.9%): [64.750, 65.294] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = btxSFeqO\}bz!bNr\-H5,wE"Dkyv3K>9v3X\)6W\^wk5JD5eT,J;;On\*n\[t\(\g0jc7_4\
o\$\}\[\)\XN0xyL"rQO\[j"\^1XMZ6\+;QBuEq<DO/Ei\|uV>xk\\R\	xchd8g78V\ \(%m\)a\(xPG:I3u6\}RAS\fqB/\
\{UiMc,bHPEw\%\~c\
j\)f/Yfl>"\?y`X\$;3qKl\[Y=\
\*\?>ny3\\[>ojXpUL\+h\ m@0mB\	iL\[jg\*\#eVc\[ydW\\\\Sau\(u<JKR>cS5!=@\-I\$6,\-E\*Hp\]U\?LdG\|eTj4dM6\}9iV\\'9l\ 0mvRFp7ZS6l6tJqaI\^c\)@uByUg\|cxA\./rAKK!5\+8,O_\*2X_Vss9\{W\\^v5!\$\ ZUw"N'O7J5waqF=4V5M\?!\~K\],/!fKFkgZ//<udx\(w9mIT,ooH\[G6EMR!b;PXip\)C"Z<QSO\ G>NK\-'p\.`;\$A\[0Z1x\.\&yTp%<Bw>5uzWU\~<\|`C\#9\|\\#\&OyxF_\.":\\|IG\?7uKQ\+pE`G1Eb\-B7da1\+\XDWI\[qc\-\[E33\)tIhWg\$, str = )

# Run progress: 50.00% complete, ETA 00:01:37
# Fork: 1 of 1
# Warmup Iteration   1: 4.889 ns/op
# Warmup Iteration   2: 4.866 ns/op
# Warmup Iteration   3: 4.941 ns/op
# Warmup Iteration   4: 4.940 ns/op
# Warmup Iteration   5: 4.941 ns/op
# Warmup Iteration   6: 4.942 ns/op
# Warmup Iteration   7: 4.943 ns/op
# Warmup Iteration   8: 4.938 ns/op
# Warmup Iteration   9: 4.938 ns/op
# Warmup Iteration  10: 4.938 ns/op
Iteration   1: 4.945 ns/op
Iteration   2: 4.938 ns/op
Iteration   3: 4.955 ns/op
Iteration   4: 4.937 ns/op
Iteration   5: 4.938 ns/op
Iteration   6: 4.956 ns/op
Iteration   7: 4.940 ns/op
Iteration   8: 4.939 ns/op
Iteration   9: 4.943 ns/op
Iteration  10: 4.939 ns/op
Iteration  11: 4.940 ns/op
Iteration  12: 4.939 ns/op
Iteration  13: 4.938 ns/op
Iteration  14: 4.940 ns/op
Iteration  15: 4.939 ns/op
Iteration  16: 4.941 ns/op
Iteration  17: 4.939 ns/op
Iteration  18: 4.940 ns/op
Iteration  19: 4.940 ns/op
Iteration  20: 4.940 ns/op
Iteration  21: 4.940 ns/op
Iteration  22: 4.939 ns/op
Iteration  23: 4.939 ns/op
Iteration  24: 4.941 ns/op
Iteration  25: 4.940 ns/op
Iteration  26: 4.940 ns/op
Iteration  27: 4.940 ns/op
Iteration  28: 4.942 ns/op
Iteration  29: 4.941 ns/op
Iteration  30: 4.943 ns/op
Iteration  31: 4.940 ns/op
Iteration  32: 4.941 ns/op
Iteration  33: 4.940 ns/op
Iteration  34: 4.940 ns/op
Iteration  35: 4.939 ns/op
Iteration  36: 4.938 ns/op
Iteration  37: 4.939 ns/op
Iteration  38: 4.940 ns/op
Iteration  39: 4.940 ns/op
Iteration  40: 4.939 ns/op
Iteration  41: 4.939 ns/op
Iteration  42: 4.939 ns/op
Iteration  43: 4.941 ns/op
Iteration  44: 4.942 ns/op
Iteration  45: 4.941 ns/op
Iteration  46: 4.941 ns/op
Iteration  47: 4.941 ns/op
Iteration  48: 4.939 ns/op
Iteration  49: 4.942 ns/op
Iteration  50: 4.942 ns/op


Result "benchmark.StringContains.stringContains":
  4.941 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (4.937, 4.941, 4.956), stdev = 0.003
  CI (99.9%): [4.939, 4.942] (assumes normal distribution)


# Run complete. Total time: 00:03:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmarkregex)  (str)  Mode  Cnt   Score   Error  Units
StringContains.regexMatches    btxSFeqO\}bz!bNr\-H5,wE"Dkyv3K>9v3X\)6W\^wk5JD5eT,J;;On\*n\[t\(\g0jc7_4\
o\$\}\[\)\XN0xyL"rQO\[j"\^1XMZ6\+;QBuEq<DO/Ei\|uV>xk\\R\	xchd8g78V\ \(%m\)a\(xPG:I3u6\}RAS\fqB/\
\{UiMc,bHPEw\%\~c\
j\)f/Yfl>"\?y`X\$;3qKl\[Y=\
\*\?>ny3\\[>ojXpUL\+h\ m@0mB\	iL\[jg\*\#eVc\[ydW\\\\Sau\(u<JKR>cS5!=@\-I\$6,\-E\*Hp\]U\?LdG\|eTj4dM6\}9iV\\'9l\ 0mvRFp7ZS6l6tJqaI\^c\)@uByUg\|cxA\./rAKK!5\+8,O_\*2X_Vss9\{W\\^v5!\$\ ZUw"N'O7J5waqF=4V5M\?!\~K\],/!fKFkgZ//<udx\(w9mIT,ooH\[G6EMR!b;PXip\)C"Z<QSO\ G>NK\-'p\.`;\$A\[0Z1x\.\&yTp%<Bw>5uzWU\~<\|`C\#9\|\\#\&OyxF_\.":\\|IG\?7uKQ\+pE`G1Eb\-B7da1\+\XDWI\[qc\-\[E33\)tIhWg\$         avgt   50  65.022 ± 0.272  ns/op
StringContains.stringContains  btxSFeqO\}bz!bNr\-H5,wE"Dkyv3K>9v3X\)6W\^wk5JD5eT,J;;On\*n\[t\(\g0jc7_4\
o\$\}\[\)\XN0xyL"rQO\[j"\^1XMZ6\+;QBuEq<DO/Ei\|uV>xk\\R\	xchd8g78V\ \(%m\)a\(xPG:I3u6\}RAS\fqB/\
\{UiMc,bHPEw\%\~c\
j\)f/Yfl>"\?y`X\$;3qKl\[Y=\
\*\?>ny3\\[>ojXpUL\+h\ m@0mB\	iL\[jg\*\#eVc\[ydW\\\\Sau\(u<JKR>cS5!=@\-I\$6,\-E\*Hp\]U\?LdG\|eTj4dM6\}9iV\\'9l\ 0mvRFp7ZS6l6tJqaI\^c\)@uByUg\|cxA\./rAKK!5\+8,O_\*2X_Vss9\{W\\^v5!\$\ ZUw"N'O7J5waqF=4V5M\?!\~K\],/!fKFkgZ//<udx\(w9mIT,ooH\[G6EMR!b;PXip\)C"Z<QSO\ G>NK\-'p\.`;\$A\[0Z1x\.\&yTp%<Bw>5uzWU\~<\|`C\#9\|\\#\&OyxF_\.":\\|IG\?7uKQ\+pE`G1Eb\-B7da1\+\XDWI\[qc\-\[E33\)tIhWg\$         avgt   50   4.941 ± 0.002  ns/op

Benchmark result is saved to 4_0_dismatching_rm.csv
