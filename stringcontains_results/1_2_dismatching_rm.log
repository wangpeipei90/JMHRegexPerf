# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.regexMatches
# Parameters: (regex = NC`uHwvs\{\	, str = pB<C)6F*dfM0/S*i:RX'G]]_OV1vf6X=z\w]2*Nds-m6DX8u(kz<1+Mq2+(yyqj+c)'t32I!QpE2K$4E"2B>bz?PGVI[L4 j?!q1*6&lS*[Sc$7J<>AgL)

# Run progress: 0.00% complete, ETA 00:02:00
# Fork: 1 of 1
# Warmup Iteration   1: 831.822 ns/op
# Warmup Iteration   2: 792.405 ns/op
# Warmup Iteration   3: 754.591 ns/op
# Warmup Iteration   4: 750.154 ns/op
# Warmup Iteration   5: 749.678 ns/op
# Warmup Iteration   6: 749.454 ns/op
# Warmup Iteration   7: 749.485 ns/op
# Warmup Iteration   8: 749.082 ns/op
# Warmup Iteration   9: 749.346 ns/op
# Warmup Iteration  10: 749.499 ns/op
Iteration   1: 749.348 ns/op
Iteration   2: 749.360 ns/op
Iteration   3: 749.308 ns/op
Iteration   4: 749.128 ns/op
Iteration   5: 748.975 ns/op
Iteration   6: 748.850 ns/op
Iteration   7: 747.181 ns/op
Iteration   8: 747.039 ns/op
Iteration   9: 746.936 ns/op
Iteration  10: 747.232 ns/op
Iteration  11: 747.343 ns/op
Iteration  12: 747.138 ns/op
Iteration  13: 746.979 ns/op
Iteration  14: 747.270 ns/op
Iteration  15: 747.035 ns/op
Iteration  16: 747.169 ns/op
Iteration  17: 747.137 ns/op
Iteration  18: 747.226 ns/op
Iteration  19: 747.312 ns/op
Iteration  20: 747.013 ns/op
Iteration  21: 746.991 ns/op
Iteration  22: 747.075 ns/op
Iteration  23: 747.134 ns/op
Iteration  24: 747.177 ns/op
Iteration  25: 747.156 ns/op
Iteration  26: 747.040 ns/op
Iteration  27: 747.169 ns/op
Iteration  28: 747.200 ns/op
Iteration  29: 747.106 ns/op
Iteration  30: 747.006 ns/op
Iteration  31: 747.014 ns/op
Iteration  32: 748.306 ns/op
Iteration  33: 749.745 ns/op
Iteration  34: 749.505 ns/op
Iteration  35: 750.138 ns/op
Iteration  36: 749.829 ns/op
Iteration  37: 749.788 ns/op
Iteration  38: 748.876 ns/op
Iteration  39: 748.151 ns/op
Iteration  40: 749.681 ns/op
Iteration  41: 748.410 ns/op
Iteration  42: 747.574 ns/op
Iteration  43: 749.606 ns/op
Iteration  44: 747.262 ns/op
Iteration  45: 747.302 ns/op
Iteration  46: 746.744 ns/op
Iteration  47: 747.178 ns/op
Iteration  48: 746.994 ns/op
Iteration  49: 746.655 ns/op
Iteration  50: 746.881 ns/op


Result "benchmark.StringContains.regexMatches":
  747.834 ±(99.9%) 0.533 ns/op [Average]
  (min, avg, max) = (746.655, 747.834, 750.138), stdev = 1.077
  CI (99.9%): [747.300, 748.367] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 11.0.9.1, OpenJDK 64-Bit Server VM, 11.0.9.1+1-Ubuntu-0ubuntu1.18.04
# VM invoker: /usr/lib/jvm/java-11-openjdk-amd64/bin/java
# VM options: -server -Xms2G -Xmx2G
# Warmup: 10 iterations, 1 s each
# Measurement: 50 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: benchmark.StringContains.stringContains
# Parameters: (regex = NC`uHwvs\{\	, str = pB<C)6F*dfM0/S*i:RX'G]]_OV1vf6X=z\w]2*Nds-m6DX8u(kz<1+Mq2+(yyqj+c)'t32I!QpE2K$4E"2B>bz?PGVI[L4 j?!q1*6&lS*[Sc$7J<>AgL)

# Run progress: 50.00% complete, ETA 00:01:37
# Fork: 1 of 1
# Warmup Iteration   1: 21.478 ns/op
# Warmup Iteration   2: 22.764 ns/op
# Warmup Iteration   3: 22.724 ns/op
# Warmup Iteration   4: 22.715 ns/op
# Warmup Iteration   5: 22.714 ns/op
# Warmup Iteration   6: 22.716 ns/op
# Warmup Iteration   7: 22.715 ns/op
# Warmup Iteration   8: 22.713 ns/op
# Warmup Iteration   9: 22.713 ns/op
# Warmup Iteration  10: 22.827 ns/op
Iteration   1: 22.713 ns/op
Iteration   2: 22.715 ns/op
Iteration   3: 22.790 ns/op
Iteration   4: 22.712 ns/op
Iteration   5: 22.722 ns/op
Iteration   6: 22.717 ns/op
Iteration   7: 22.717 ns/op
Iteration   8: 22.714 ns/op
Iteration   9: 22.716 ns/op
Iteration  10: 22.715 ns/op
Iteration  11: 22.719 ns/op
Iteration  12: 22.714 ns/op
Iteration  13: 22.724 ns/op
Iteration  14: 22.720 ns/op
Iteration  15: 22.727 ns/op
Iteration  16: 22.722 ns/op
Iteration  17: 22.729 ns/op
Iteration  18: 22.714 ns/op
Iteration  19: 22.717 ns/op
Iteration  20: 22.715 ns/op
Iteration  21: 22.715 ns/op
Iteration  22: 22.713 ns/op
Iteration  23: 22.716 ns/op
Iteration  24: 22.720 ns/op
Iteration  25: 22.715 ns/op
Iteration  26: 22.715 ns/op
Iteration  27: 22.812 ns/op
Iteration  28: 22.725 ns/op
Iteration  29: 22.715 ns/op
Iteration  30: 22.712 ns/op
Iteration  31: 22.716 ns/op
Iteration  32: 22.715 ns/op
Iteration  33: 22.714 ns/op
Iteration  34: 22.725 ns/op
Iteration  35: 22.722 ns/op
Iteration  36: 22.723 ns/op
Iteration  37: 22.723 ns/op
Iteration  38: 22.716 ns/op
Iteration  39: 22.714 ns/op
Iteration  40: 22.726 ns/op
Iteration  41: 22.729 ns/op
Iteration  42: 22.722 ns/op
Iteration  43: 22.723 ns/op
Iteration  44: 22.718 ns/op
Iteration  45: 22.717 ns/op
Iteration  46: 22.715 ns/op
Iteration  47: 22.726 ns/op
Iteration  48: 22.714 ns/op
Iteration  49: 22.716 ns/op
Iteration  50: 22.715 ns/op


Result "benchmark.StringContains.stringContains":
  22.722 ±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (22.712, 22.722, 22.812), stdev = 0.017
  CI (99.9%): [22.713, 22.730] (assumes normal distribution)


# Run complete. Total time: 00:03:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           (regex)                                                                                                                  (str)  Mode  Cnt    Score   Error  Units
StringContains.regexMatches    NC`uHwvs\{\	  pB<C)6F*dfM0/S*i:RX'G]]_OV1vf6X=z\w]2*Nds-m6DX8u(kz<1+Mq2+(yyqj+c)'t32I!QpE2K$4E"2B>bz?PGVI[L4 j?!q1*6&lS*[Sc$7J<>AgL  avgt   50  747.834 ± 0.533  ns/op
StringContains.stringContains  NC`uHwvs\{\	  pB<C)6F*dfM0/S*i:RX'G]]_OV1vf6X=z\w]2*Nds-m6DX8u(kz<1+Mq2+(yyqj+c)'t32I!QpE2K$4E"2B>bz?PGVI[L4 j?!q1*6&lS*[Sc$7J<>AgL  avgt   50   22.722 ± 0.008  ns/op

Benchmark result is saved to 1_2_dismatching_rm.csv
